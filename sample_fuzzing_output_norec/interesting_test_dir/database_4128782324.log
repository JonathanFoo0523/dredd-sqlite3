-- Time: 2024/06/09 01:00:05
-- Database: database24
-- Database version: 3.40.0
-- seed value: 4128782324
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED); -- 1ms;
UPDATE OR ABORT vt0 SET (c1)=(0.24068925726385904); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1435138386); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1421478410); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.24068925726385904, ''); -- 1ms;
UPDATE OR IGNORE vt0 SET c1='-120401538', c0=x'', c1='8G鮺_!T*c7', c0=0x46f29bba WHERE vt0.c1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (x'', 0.01947358785982123), (NULL, NULL), ('380023841', 0x46f29bba); -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT TOTAL((vt0.c0 IN (vt0.c1, vt0.c0))) FROM vt0 WHERE ((((0x5c7728b4, IFNULL(DISTINCT '-1027775171', 0.5675995729776591), (+ (0.7637653378594345))))>=((LIKE('gs', NULL, '8'), (3.80023841E8 IN ('')), TRIM(NULL))))) GROUP BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))>(((('-251528986')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) HAVING vt0.c0; -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
VACUUM temp; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 BLOB , c1 INTEGER , c2 REAL ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28038'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1331415705);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1894932769,9');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-307383532,8');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1979068763); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE t0; -- 0ms;
UPDATE OR REPLACE vt0 SET c1=NULL, c0=NULL WHERE json_remove(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ''); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL) WHERE ((((t0.c0)<=(t0.c1)))LIKE(t0.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(-2.51528986E8) WHERE ((((NULL)<>(NULL)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (0.9648178938075148)))); -- 1ms;
INSERT OR REPLACE INTO t0(c1, c0, c2) VALUES (0Xffffffff8f0d9edf, 0.6195837110604845, -1027775171), (901737337, x'', x''), (0.5675995729776591, NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1551313076', x'', 0.5369587171835667); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1630156929); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0) VALUES (0X46f29bba, ''), ('', NULL), (NULL, -3.07383532E8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM vt0; -- 12ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=(x'', '-1218840376'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE vt0.c1; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
UPDATE OR ABORT vt0 SET (c1)=(-307383532); -- 3ms;
INSERT OR IGNORE INTO t0(c2, c1) VALUES (0.6841171845234892, NULL); -- 0ms;
UPDATE vt0 SET c0=-3.07383532E8 WHERE (~ ((0.3297679975388039 IN (vt0.c0)))); -- 0ms;
REINDEX; -- 5ms;
UPDATE OR IGNORE vt0 SET c0=x'', c1=0X35bf6b79 WHERE (((vt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((vt0.c1 COLLATE RTRIM))); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET c2=x'', c1=0.3297679975388039, c1=x'' WHERE (((((((((+ (t0.c2)))AND((((t0.c0))<=((t0.c0))))))OR(x'bd95')))AND(t0.c2)))OR(((((0.09013439709524185)OR(t0.c2)))OR(t0.c0)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i51 ON t0(((((c2) BETWEEN (c0) AND ('-307383532'))) IS TRUE) COLLATE BINARY DESC,'-251528986' COLLATE BINARY,(((c1)) BETWEEN (((('寥寥18-')|(c2)))) AND ((CAST('#+Z7494780085340876926-1305167526997568903 4486277826939149459 7239601230407109927 150--3485992837218579126--5124521969578537468:-1868761419328211017-&' AS INTEGER)))) DESC) WHERE (((c0) BETWEEN (c2) AND (c1)) IN ()); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i83 ON t0(c2 COLLATE RTRIM,(((NOT (c1))) BETWEEN ((((c1))!=((c1)))) AND ((- (c1)))) DESC,(~ (((c2) BETWEEN (c0) AND (c0)))) ASC); -- 0ms;
CREATE UNIQUE INDEX i52 ON t0(((((((x'')||(c1)))OR(CAST(c2 AS TEXT))))OR(((c2) ISNULL))) COLLATE RTRIM,CASE (((c0))<=((c0)))  WHEN ((c2)%(c2)) THEN CAST(c2 AS TEXT) ELSE ((c1)%(c0)) END COLLATE RTRIM ASC,LOWER(('' IN ())) COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
REINDEX; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('695837220'); -- 1ms;
ALTER TABLE t0 ADD COLUMN c32 INT; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('380023841'), (x''), (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 814122195); -- 0ms;
UPDATE vt0 SET (c0)=('<A\rz8D寥6y'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c1)=('.A', x'', x''); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t0 FOR EACH ROW  BEGIN DELETE FROM vt0;END; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL); -- 0ms;
UPDATE OR ABORT vt0 SET c0=x''; -- 1ms;
INSERT OR ABORT INTO vt0(c1) VALUES (NULL); -- 0ms;
REINDEX i52; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO t0(c1, c32, c2) VALUES (NULL, 0x35bf6b79, '-251528986'), (0x5975bd22, 6.9583722E8, x'b69f'), (x'87de', -251528986, ']'); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c1)=('6AdxsW', 0.9084044957804086, 0.5689378023740621); -- 1ms;
UPDATE OR ABORT vt0 SET c1=0X5975bd22 WHERE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.6195837110604845')), TRIM(vt0.c0), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)) AND ((NULL, ((vt0.c1)<>(0.06133972467875182)), ((vt0.c0) IS FALSE)))); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (1.551313076E9); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, vt0, v0 WHERE (x'') ORDER BY CASE WHEN v0.c0 THEN ((t0.c1)%(v0.c0)) WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN ((t0.c1)<=(vt0.c1)) WHEN vt0.c0 THEN t0.c2 COLLATE BINARY WHEN v0.c0 THEN ((vt0.c1)<=(t0.c2)) WHEN 'gs' THEN t0.c2 END DESC  NULLS LAST, v0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN v0.c0 THEN ((t0.c1)%(v0.c0)) WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN ((t0.c1)<=(vt0.c1)) WHEN vt0.c0 THEN t0.c2 COLLATE BINARY WHEN v0.c0 THEN ((vt0.c1)<=(t0.c2)) WHEN 'gs' THEN t0.c2 END DESC  NULLS LAST, v0.c0 COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE (x'') ORDER BY CASE WHEN v0.c0 THEN ((t0.c1)%(v0.c0)) WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN ((t0.c1)<=(vt0.c1)) WHEN vt0.c0 THEN t0.c2 COLLATE BINARY WHEN v0.c0 THEN ((vt0.c1)<=(t0.c2)) WHEN 'gs' THEN t0.c2 END DESC  NULLS LAST, v0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN v0.c0 THEN ((t0.c1)%(v0.c0)) WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN ((t0.c1)<=(vt0.c1)) WHEN vt0.c0 THEN t0.c2 COLLATE BINARY WHEN v0.c0 THEN ((vt0.c1)<=(t0.c2)) WHEN 'gs' THEN t0.c2 END DESC  NULLS LAST, v0.c0 COLLATE BINARY);
SELECT * FROM t0, vt0, v0 WHERE (x'') ORDER BY CASE WHEN v0.c0 THEN ((t0.c1)%(v0.c0)) WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1)) THEN ((t0.c1)<=(vt0.c1)) WHEN vt0.c0 THEN t0.c2 COLLATE BINARY WHEN v0.c0 THEN ((vt0.c1)<=(t0.c2)) WHEN 'gs' THEN t0.c2 END DESC  NULLS LAST, v0.c0 COLLATE BINARY;
SELECT * FROM vt0, t0, v0 WHERE (((IFNULL(vt0.c1, t0.c32))>(json_remove(vt0.c1, '969954511', vt0.c1, t0.c2)))) ORDER BY ((((x'dde30564')GLOB(t0.c32))) BETWEEN (t0.c2) AND (CASE vt0.c1  WHEN t0.c32 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c1, t0.c32))>(json_remove(vt0.c1, '969954511', vt0.c1, t0.c2)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((x'dde30564')GLOB(t0.c32))) BETWEEN (t0.c2) AND (CASE vt0.c1  WHEN t0.c32 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (((IFNULL(vt0.c1, t0.c32))>(json_remove(vt0.c1, '969954511', vt0.c1, t0.c2)))) ORDER BY ((((x'dde30564')GLOB(t0.c32))) BETWEEN (t0.c2) AND (CASE vt0.c1  WHEN t0.c32 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c1, t0.c32))>(json_remove(vt0.c1, '969954511', vt0.c1, t0.c2)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((x'dde30564')GLOB(t0.c32))) BETWEEN (t0.c2) AND (CASE vt0.c1  WHEN t0.c32 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((CASE t0.c32  WHEN t0.c32 THEN '29078410' END)AND((v0.c0 IN ()))))OR(((t0.c32)<(v0.c0))))) ORDER BY (CAST(t0.c2 AS NUMERIC) IN (CAST(t0.c2 AS BLOB), (('(<F,I⢴')AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c32  WHEN t0.c32 THEN '29078410' END)AND((v0.c0 IN ()))))OR(((t0.c32)<(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (CAST(t0.c2 AS NUMERIC) IN (CAST(t0.c2 AS BLOB), (('(<F,I⢴')AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((CASE t0.c32  WHEN t0.c32 THEN '29078410' END)AND((v0.c0 IN ()))))OR(((t0.c32)<(v0.c0))))) ORDER BY (CAST(t0.c2 AS NUMERIC) IN (CAST(t0.c2 AS BLOB), (('(<F,I⢴')AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c32  WHEN t0.c32 THEN '29078410' END)AND((v0.c0 IN ()))))OR(((t0.c32)<(v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (CAST(t0.c2 AS NUMERIC) IN (CAST(t0.c2 AS BLOB), (('(<F,I⢴')AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((CASE t0.c32  WHEN t0.c32 THEN '29078410' END)AND((v0.c0 IN ()))))OR(((t0.c32)<(v0.c0))))) ORDER BY (CAST(t0.c2 AS NUMERIC) IN (CAST(t0.c2 AS BLOB), (('(<F,I⢴')AND(v0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (0.09013439709524185);
SELECT SUM(count) FROM (SELECT ((0.09013439709524185) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.09013439709524185);
SELECT SUM(count) FROM (SELECT ((0.09013439709524185) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.09013439709524185);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), (v0.c0 IN (v0.c0)))) AND ((TRIM(v0.c0, v0.c0), (('}S')LIKE(v0.c0)), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), (v0.c0 IN (v0.c0)))) AND ((TRIM(v0.c0, v0.c0), (('}S')LIKE(v0.c0)), (+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), (v0.c0 IN (v0.c0)))) AND ((TRIM(v0.c0, v0.c0), (('}S')LIKE(v0.c0)), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), (v0.c0 IN (v0.c0)))) AND ((TRIM(v0.c0, v0.c0), (('}S')LIKE(v0.c0)), (+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), (v0.c0 IN (v0.c0)))) AND ((TRIM(v0.c0, v0.c0), (('}S')LIKE(v0.c0)), (+ (v0.c0))))));
SELECT * FROM vt0, v0, t0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (t0.c1 IN ()), t0.c0, (+ ((NOT (t0.c1)))) DESC  NULLS LAST, ((t0.c1 COLLATE BINARY)&(0.8654274348971945)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (t0.c1 IN ()), t0.c0, (+ ((NOT (t0.c1)))) DESC  NULLS LAST, ((t0.c1 COLLATE BINARY)&(0.8654274348971945)) DESC);
SELECT * FROM vt0, v0, t0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (t0.c1 IN ()), t0.c0, (+ ((NOT (t0.c1)))) DESC  NULLS LAST, ((t0.c1 COLLATE BINARY)&(0.8654274348971945)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (t0.c1 IN ()), t0.c0, (+ ((NOT (t0.c1)))) DESC  NULLS LAST, ((t0.c1 COLLATE BINARY)&(0.8654274348971945)) DESC);
SELECT * FROM vt0, v0, t0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (t0.c1 IN ()), t0.c0, (+ ((NOT (t0.c1)))) DESC  NULLS LAST, ((t0.c1 COLLATE BINARY)&(0.8654274348971945)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (json_remove(vt0.c1, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (json_remove(vt0.c1, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (json_remove(vt0.c1, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (json_remove(vt0.c1, vt0.c1)) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0)%(vt0.c1)), (+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt0.c0)%(vt0.c1)), (+ (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0)%(vt0.c1)), (+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt0.c0)%(vt0.c1)), (+ (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(((vt0.c0)%(vt0.c1)), (+ (vt0.c1))));
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (+ (((vt0.c1)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (((vt0.c1)==(vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (+ (((vt0.c1)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (((vt0.c1)==(vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (+ (((vt0.c1)==(vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN (NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN (NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN (NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN (NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN (NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (+ (((((t0.c32)OR(t0.c1)))AND(t0.c0)))) WHERE (CASE ((t0.c2) NOT NULL)  WHEN '1500888354' THEN ((((v0.c0)OR(t0.c2)))AND(v0.c0)) WHEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))) THEN v0.c0 WHEN ((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE TOTAL_CHANGES() END) ORDER BY (+ (t0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOT NULL)  WHEN '1500888354' THEN ((((v0.c0)OR(t0.c2)))AND(v0.c0)) WHEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))) THEN v0.c0 WHEN ((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (+ (((((t0.c32)OR(t0.c1)))AND(t0.c0)))) ORDER BY (+ (t0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (+ (((((t0.c32)OR(t0.c1)))AND(t0.c0)))) WHERE (CASE ((t0.c2) NOT NULL)  WHEN '1500888354' THEN ((((v0.c0)OR(t0.c2)))AND(v0.c0)) WHEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))) THEN v0.c0 WHEN ((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE TOTAL_CHANGES() END) ORDER BY (+ (t0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2) NOT NULL)  WHEN '1500888354' THEN ((((v0.c0)OR(t0.c2)))AND(v0.c0)) WHEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))) THEN v0.c0 WHEN ((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (+ (((((t0.c32)OR(t0.c1)))AND(t0.c0)))) ORDER BY (+ (t0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (+ (((((t0.c32)OR(t0.c1)))AND(t0.c0)))) WHERE (CASE ((t0.c2) NOT NULL)  WHEN '1500888354' THEN ((((v0.c0)OR(t0.c2)))AND(v0.c0)) WHEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))) THEN v0.c0 WHEN ((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) THEN HEX(DISTINCT v0.c0) ELSE TOTAL_CHANGES() END) ORDER BY (+ (t0.c2)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((+ ('-644864001')))<(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((NULL) IS TRUE))IS(((((vt0.c0)OR(vt0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ ('-644864001')))<(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((NULL) IS TRUE))IS(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((+ ('-644864001')))<(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((NULL) IS TRUE))IS(((((vt0.c0)OR(vt0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ ('-644864001')))<(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((NULL) IS TRUE))IS(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((+ ('-644864001')))<(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((NULL) IS TRUE))IS(((((vt0.c0)OR(vt0.c0)))OR(t0.c0))));
SELECT * FROM t0 WHERE (CASE WHEN (t0.c32 IN (t0.c1)) THEN (NOT (t0.c32)) ELSE ((((t0.c0)AND(t0.c1)))AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c32 IN (t0.c1)) THEN (NOT (t0.c32)) ELSE ((((t0.c0)AND(t0.c1)))AND(t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c32 IN (t0.c1)) THEN (NOT (t0.c32)) ELSE ((((t0.c0)AND(t0.c1)))AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c32 IN (t0.c1)) THEN (NOT (t0.c32)) ELSE ((((t0.c0)AND(t0.c1)))AND(t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c32 IN (t0.c1)) THEN (NOT (t0.c32)) ELSE ((((t0.c0)AND(t0.c1)))AND(t0.c1)) END);
SELECT ALL * FROM t0, v0 WHERE (((v0.c0)!=(t0.c2 COLLATE NOCASE))) ORDER BY CASE CASE WHEN t0.c2 THEN t0.c32 ELSE t0.c0 END  WHEN ((((((((((((t0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)))AND(t0.c2)) THEN ((v0.c0)>(t0.c32)) END DESC, CAST(CAST(v0.c0 AS BLOB) AS REAL)  NULLS FIRST, ((CAST(t0.c32 AS BLOB)) BETWEEN (t0.c1 COLLATE BINARY) AND ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((0.22207776318436745, 0xffffffffb042e62b, t0.c2)) AND ((t0.c1, 0.8243402475512275, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<>(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE CASE WHEN t0.c2 THEN t0.c32 ELSE t0.c0 END  WHEN ((((((((((((t0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)))AND(t0.c2)) THEN ((v0.c0)>(t0.c32)) END DESC, CAST(CAST(v0.c0 AS BLOB) AS REAL)  NULLS FIRST, ((CAST(t0.c32 AS BLOB)) BETWEEN (t0.c1 COLLATE BINARY) AND ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((0.22207776318436745, 0xffffffffb042e62b, t0.c2)) AND ((t0.c1, 0.8243402475512275, t0.c0))))));
SELECT ALL * FROM t0, v0 WHERE (((v0.c0)!=(t0.c2 COLLATE NOCASE))) ORDER BY CASE CASE WHEN t0.c2 THEN t0.c32 ELSE t0.c0 END  WHEN ((((((((((((t0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)))AND(t0.c2)) THEN ((v0.c0)>(t0.c32)) END DESC, CAST(CAST(v0.c0 AS BLOB) AS REAL)  NULLS FIRST, ((CAST(t0.c32 AS BLOB)) BETWEEN (t0.c1 COLLATE BINARY) AND ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((0.22207776318436745, 0xffffffffb042e62b, t0.c2)) AND ((t0.c1, 0.8243402475512275, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<>(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE CASE WHEN t0.c2 THEN t0.c32 ELSE t0.c0 END  WHEN ((((((((((((t0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)))AND(t0.c2)) THEN ((v0.c0)>(t0.c32)) END DESC, CAST(CAST(v0.c0 AS BLOB) AS REAL)  NULLS FIRST, ((CAST(t0.c32 AS BLOB)) BETWEEN (t0.c1 COLLATE BINARY) AND ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((0.22207776318436745, 0xffffffffb042e62b, t0.c2)) AND ((t0.c1, 0.8243402475512275, t0.c0))))));
SELECT ALL * FROM t0, v0 WHERE (((v0.c0)!=(t0.c2 COLLATE NOCASE))) ORDER BY CASE CASE WHEN t0.c2 THEN t0.c32 ELSE t0.c0 END  WHEN ((((((((((((t0.c1)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(t0.c0)))OR(v0.c0)))AND(t0.c2)) THEN ((v0.c0)>(t0.c32)) END DESC, CAST(CAST(v0.c0 AS BLOB) AS REAL)  NULLS FIRST, ((CAST(t0.c32 AS BLOB)) BETWEEN (t0.c1 COLLATE BINARY) AND ((((t0.c2, t0.c2, t0.c2)) BETWEEN ((0.22207776318436745, 0xffffffffb042e62b, t0.c2)) AND ((t0.c1, 0.8243402475512275, t0.c0)))));
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((t0.c2)AND(t0.c32)))AND(vt0.c0))) IS FALSE)) ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((((t0.c1)OR(v0.c0)))AND(vt0.c1)) IN (((((t0.c32)OR(t0.c1)))AND(vt0.c1)), (((('901737337')AND('Ace#')))AND(t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c32)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((((t0.c1)OR(v0.c0)))AND(vt0.c1)) IN (((((t0.c32)OR(t0.c1)))AND(vt0.c1)), (((('901737337')AND('Ace#')))AND(t0.c32)))) DESC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((t0.c2)AND(t0.c32)))AND(vt0.c0))) IS FALSE)) ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((((t0.c1)OR(v0.c0)))AND(vt0.c1)) IN (((((t0.c32)OR(t0.c1)))AND(vt0.c1)), (((('901737337')AND('Ace#')))AND(t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c32)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((((t0.c1)OR(v0.c0)))AND(vt0.c1)) IN (((((t0.c32)OR(t0.c1)))AND(vt0.c1)), (((('901737337')AND('Ace#')))AND(t0.c32)))) DESC);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((t0.c2)AND(t0.c32)))AND(vt0.c0))) IS FALSE)) ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((((t0.c1)OR(v0.c0)))AND(vt0.c1)) IN (((((t0.c32)OR(t0.c1)))AND(vt0.c1)), (((('901737337')AND('Ace#')))AND(t0.c32)))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN (+ (1195632550)) THEN t0.c32 COLLATE NOCASE ELSE -1968985462 END) ORDER BY CASE WHEN TIME(t0.c0, vt0.c0, t0.c0) THEN (t0.c1 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (1195632550)) THEN t0.c32 COLLATE NOCASE ELSE -1968985462 END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE WHEN TIME(t0.c0, vt0.c0, t0.c0) THEN (t0.c1 IN ()) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN (+ (1195632550)) THEN t0.c32 COLLATE NOCASE ELSE -1968985462 END) ORDER BY CASE WHEN TIME(t0.c0, vt0.c0, t0.c0) THEN (t0.c1 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (1195632550)) THEN t0.c32 COLLATE NOCASE ELSE -1968985462 END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CASE WHEN TIME(t0.c0, vt0.c0, t0.c0) THEN (t0.c1 IN ()) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN (+ (1195632550)) THEN t0.c32 COLLATE NOCASE ELSE -1968985462 END) ORDER BY CASE WHEN TIME(t0.c0, vt0.c0, t0.c0) THEN (t0.c1 IN ()) END ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (UNICODE(v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNICODE(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UNICODE(v0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNICODE(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UNICODE(v0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN x'8fae' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)/(vt0.c1)))))OR((NOT (vt0.c0)))) DESC, (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<>((vt0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN x'8fae' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)/(vt0.c1)))))OR((NOT (vt0.c0)))) DESC, (~ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN x'8fae' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)/(vt0.c1)))))OR((NOT (vt0.c0)))) DESC, (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<>((vt0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN x'8fae' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)/(vt0.c1)))))OR((NOT (vt0.c0)))) DESC, (~ (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN x'8fae' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0)/(vt0.c1)))))OR((NOT (vt0.c0)))) DESC, (~ (vt0.c0));
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c1 COLLATE RTRIM)OR((((t0.c0))>((t0.c32))))))AND(vt0.c0 COLLATE RTRIM)))OR('-120401538')))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (x'34a2')))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1 COLLATE RTRIM)OR((((t0.c0))>((t0.c32))))))AND(vt0.c0 COLLATE RTRIM)))OR('-120401538')))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (x'34a2')))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c1 COLLATE RTRIM)OR((((t0.c0))>((t0.c32))))))AND(vt0.c0 COLLATE RTRIM)))OR('-120401538')))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (x'34a2')))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1 COLLATE RTRIM)OR((((t0.c0))>((t0.c32))))))AND(vt0.c0 COLLATE RTRIM)))OR('-120401538')))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (x'34a2')))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((((vt0.c1 COLLATE RTRIM)OR((((t0.c0))>((t0.c32))))))AND(vt0.c0 COLLATE RTRIM)))OR('-120401538')))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (x'34a2')))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c1)))));
SELECT * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END ASC);
SELECT * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END ASC);
SELECT * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 END END ASC;
SELECT COUNT(*) FROM vt0 INDEXED BY i52 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))) ORDER BY vt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))) IS TRUE)  as count FROM vt0 INDEXED BY i52 ORDER BY vt0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INDEXED BY i52 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))) ORDER BY vt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL))) IS TRUE)  as count FROM vt0 INDEXED BY i52 ORDER BY vt0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END) AND (''))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN t0.c1 END ASC, ((((t0.c0))>=((v0.c0))) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END) AND (''))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN (t0.c0 IN ()) THEN t0.c1 END ASC, ((((t0.c0))>=((v0.c0))) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END) AND (''))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN t0.c1 END ASC, ((((t0.c0))>=((v0.c0))) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END) AND (''))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN (t0.c0 IN ()) THEN t0.c1 END ASC, ((((t0.c0))>=((v0.c0))) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END) AND (''))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN t0.c1 END ASC, ((((t0.c0))>=((v0.c0))) IN (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE v0.c0 END));
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c0)<>('1560130866')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>('1560130866')) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c0)<>('1560130866')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>('1560130866')) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c0)<>('1560130866')) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON (((t0.c1)) NOT BETWEEN ((((vt0.c1)*(t0.c0)))) AND ((((t0.c0) ISNULL)))) WHERE ((+ (0.8243402475512275))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (0.8243402475512275))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON (((t0.c1)) NOT BETWEEN ((((vt0.c1)*(t0.c0)))) AND ((((t0.c0) ISNULL)))) ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON (((t0.c1)) NOT BETWEEN ((((vt0.c1)*(t0.c0)))) AND ((((t0.c0) ISNULL)))) WHERE ((+ (0.8243402475512275))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (0.8243402475512275))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON (((t0.c1)) NOT BETWEEN ((((vt0.c1)*(t0.c0)))) AND ((((t0.c0) ISNULL)))) ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN v0 ON (((t0.c1)) NOT BETWEEN ((((vt0.c1)*(t0.c0)))) AND ((((t0.c0) ISNULL)))) WHERE ((+ (0.8243402475512275))) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(vt0.c0)));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((t0.c1)+(vt0.c0))) NOT NULL) RIGHT OUTER JOIN t0 ON NULL WHERE (((UPPER(t0.c0)) NOT BETWEEN (CAST(0.22326700012251544 AS INTEGER)) AND ((NOT (vt0.c0))))) ORDER BY ((((((t0.c32)AND(t0.c2)))OR(CAST(vt0.c0 AS BLOB))))OR(-3.07383532E8)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c0)) NOT BETWEEN (CAST(0.22326700012251544 AS INTEGER)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((t0.c1)+(vt0.c0))) NOT NULL) RIGHT OUTER JOIN t0 ON NULL ORDER BY ((((((t0.c32)AND(t0.c2)))OR(CAST(vt0.c0 AS BLOB))))OR(-3.07383532E8)) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((((t0.c1)+(vt0.c0))) NOT NULL) RIGHT OUTER JOIN t0 ON NULL WHERE (((UPPER(t0.c0)) NOT BETWEEN (CAST(0.22326700012251544 AS INTEGER)) AND ((NOT (vt0.c0))))) ORDER BY ((((((t0.c32)AND(t0.c2)))OR(CAST(vt0.c0 AS BLOB))))OR(-3.07383532E8)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c0)) NOT BETWEEN (CAST(0.22326700012251544 AS INTEGER)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((t0.c1)+(vt0.c0))) NOT NULL) RIGHT OUTER JOIN t0 ON NULL ORDER BY ((((((t0.c32)AND(t0.c2)))OR(CAST(vt0.c0 AS BLOB))))OR(-3.07383532E8)) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c32)|(0.7029489355104944)))/(CASE t0.c32  WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN v0 ON ((((((t0.c32) BETWEEN (t0.c32) AND (v0.c0)))AND((((vt0.c0)) BETWEEN (('-228421507')) AND ((t0.c1))))))OR((+ (v0.c0)))) WHERE (((json_type(t0.c2)) BETWEEN (0.8999401189424046) AND (((vt0.c0) IS FALSE)))) ORDER BY CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((json_type(t0.c2)) BETWEEN (0.8999401189424046) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c32)|(0.7029489355104944)))/(CASE t0.c32  WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN v0 ON ((((((t0.c32) BETWEEN (t0.c32) AND (v0.c0)))AND((((vt0.c0)) BETWEEN (('-228421507')) AND ((t0.c1))))))OR((+ (v0.c0)))) ORDER BY CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c32)|(0.7029489355104944)))/(CASE t0.c32  WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN v0 ON ((((((t0.c32) BETWEEN (t0.c32) AND (v0.c0)))AND((((vt0.c0)) BETWEEN (('-228421507')) AND ((t0.c1))))))OR((+ (v0.c0)))) WHERE (((json_type(t0.c2)) BETWEEN (0.8999401189424046) AND (((vt0.c0) IS FALSE)))) ORDER BY CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((json_type(t0.c2)) BETWEEN (0.8999401189424046) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c32)|(0.7029489355104944)))/(CASE t0.c32  WHEN v0.c0 THEN t0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN v0 ON ((((((t0.c32) BETWEEN (t0.c32) AND (v0.c0)))AND((((vt0.c0)) BETWEEN (('-228421507')) AND ((t0.c1))))))OR((+ (v0.c0)))) ORDER BY CASE vt0.c0  WHEN t0.c1 THEN t0.c1 END COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE (((((x'')OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY '-822726676';
SELECT SUM(count) FROM (SELECT ((((((x'')OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '-822726676');
SELECT ALL * FROM vt0 WHERE (((((x'')OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY '-822726676';
SELECT SUM(count) FROM (SELECT ((((((x'')OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '-822726676');
SELECT ALL * FROM vt0 WHERE (((((x'')OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY '-822726676';
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON '695837220' WHERE ((('695837220') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('695837220') NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON '695837220');
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON '695837220' WHERE ((('695837220') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('695837220') NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON '695837220');
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON '695837220' WHERE ((('695837220') NOT NULL));
SELECT ALL * FROM v0, t0 WHERE ((((v0.c0)) NOT BETWEEN (('寥	270')) AND ((((t0.c2)>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (('寥	270')) AND ((((t0.c2)>(t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c0)) NOT BETWEEN (('寥	270')) AND ((((t0.c2)>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (('寥	270')) AND ((((t0.c2)>(t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c0)) NOT BETWEEN (('寥	270')) AND ((((t0.c2)>(t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((((vt0.c1, vt0.c1, v0.c0))>=((0.1293378124538539, vt0.c0, vt0.c0)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1, vt0.c1, v0.c0))>=((0.1293378124538539, vt0.c0, vt0.c0)))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((((vt0.c1, vt0.c1, v0.c0))>=((0.1293378124538539, vt0.c0, vt0.c0)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1, vt0.c1, v0.c0))>=((0.1293378124538539, vt0.c0, vt0.c0)))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((((vt0.c1, vt0.c1, v0.c0))>=((0.1293378124538539, vt0.c0, vt0.c0)))) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(t0.c2 COLLATE BINARY AS TEXT) WHERE ('fF');
SELECT SUM(count) FROM (SELECT ALL (('fF') IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(t0.c2 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(t0.c2 COLLATE BINARY AS TEXT) WHERE ('fF');
SELECT SUM(count) FROM (SELECT ALL (('fF') IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(t0.c2 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN v0 ON CAST(t0.c2 COLLATE BINARY AS TEXT) WHERE ('fF');
SELECT ALL COUNT(*) FROM v0, t0 WHERE (('-1964690039' IN (t0.c1 COLLATE BINARY))) ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (((t0.c2)<=(t0.c32))) AND (v0.c0)), UNLIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-1964690039' IN (t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (((t0.c2)<=(t0.c32))) AND (v0.c0)), UNLIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (('-1964690039' IN (t0.c1 COLLATE BINARY))) ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (((t0.c2)<=(t0.c32))) AND (v0.c0)), UNLIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('-1964690039' IN (t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (((t0.c2)<=(t0.c32))) AND (v0.c0)), UNLIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (('-1964690039' IN (t0.c1 COLLATE BINARY))) ORDER BY ((t0.c1 COLLATE RTRIM) NOT BETWEEN (((t0.c2)<=(t0.c32))) AND (v0.c0)), UNLIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c1 END)  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt0 WHERE (0.9991601088878397);
SELECT SUM(count) FROM (SELECT ALL ((0.9991601088878397) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (0.9991601088878397);
SELECT SUM(count) FROM (SELECT ALL ((0.9991601088878397) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (0.9991601088878397);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE t0.c0 END) BETWEEN ((x'' IN ())) AND (((t0.c2) IS TRUE)))) ORDER BY ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE t0.c0 END) BETWEEN ((x'' IN ())) AND (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE t0.c0 END) BETWEEN ((x'' IN ())) AND (((t0.c2) IS TRUE)))) ORDER BY ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE t0.c0 END) BETWEEN ((x'' IN ())) AND (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL ELSE t0.c0 END) BETWEEN ((x'' IN ())) AND (((t0.c2) IS TRUE)))) ORDER BY ((t0.c0) NOT NULL) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c1))) AND (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c1))) AND (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c1))) AND (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c1))) AND (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)+(vt0.c1))) AND (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c32 COLLATE NOCASE)IS NOT((((vt0.c1))==((vt0.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((t0.c32 COLLATE NOCASE)IS NOT((((vt0.c1))=((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c32 COLLATE NOCASE)IS NOT((((vt0.c1))==((vt0.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((t0.c32 COLLATE NOCASE)IS NOT((((vt0.c1))=((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c32 COLLATE NOCASE)IS NOT((((vt0.c1))==((vt0.c0)))))) ORDER BY NULL;
SELECT ALL * FROM v0, t0 WHERE (CAST(v0.c0 AS TEXT)) ORDER BY '-1331415705' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0, t0 ORDER BY '-1331415705' DESC);
SELECT ALL * FROM v0, t0 WHERE (CAST(v0.c0 AS TEXT)) ORDER BY '-1331415705' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0, t0 ORDER BY '-1331415705' DESC);
SELECT ALL * FROM v0, t0 WHERE (CAST(v0.c0 AS TEXT)) ORDER BY '-1331415705' DESC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS NUMERIC))) INNER JOIN vt0 ON (TRIM(vt0.c0) IN ()) WHERE (((t0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS NUMERIC))) INNER JOIN vt0 ON (TRIM(vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS NUMERIC))) INNER JOIN vt0 ON (TRIM(vt0.c0) IN ()) WHERE (((t0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS NUMERIC))) INNER JOIN vt0 ON (TRIM(vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (NOT (CAST(v0.c0 AS NUMERIC))) INNER JOIN vt0 ON (TRIM(vt0.c0) IN ()) WHERE (((t0.c2 COLLATE NOCASE) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (1.551313076E9);
SELECT SUM(count) FROM (SELECT ALL ((1.551313076E9) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (1.551313076E9);
SELECT SUM(count) FROM (SELECT ALL ((1.551313076E9) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (1.551313076E9);
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT * FROM vt0, t0, v0 WHERE (((vt0.c1 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((vt0.c1 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((vt0.c1 COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, t0 WHERE (((((((((t0.c1)OR((NOT (t0.c2)))))OR(x'')))AND(((t0.c32)%(t0.c0)))))AND(t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)OR((NOT (t0.c2)))))OR(x'')))AND(((t0.c32)%(t0.c0)))))AND(t0.c32))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((((((t0.c1)OR((NOT (t0.c2)))))OR(x'')))AND(((t0.c32)%(t0.c0)))))AND(t0.c32)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)OR((NOT (t0.c2)))))OR(x'')))AND(((t0.c32)%(t0.c0)))))AND(t0.c32))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((((((((t0.c1)OR((NOT (t0.c2)))))OR(x'')))AND(((t0.c32)%(t0.c0)))))AND(t0.c32)));
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c32 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c32 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c32 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c32 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c32 IN ()));
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c1)>=(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)>=(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c1)>=(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)>=(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST(((t0.c1)>=(v0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c32)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((('APbrN4I') NOTNULL)))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c32)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((('APbrN4I') NOTNULL)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY t0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c32)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((('APbrN4I') NOTNULL)))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c32)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((('APbrN4I') NOTNULL)))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY t0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c32)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((('APbrN4I') NOTNULL)))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))||(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))||(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))||(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))||(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))||(vt0.c1)));
SELECT * FROM vt0, v0, t0 WHERE (((v0.c0)<<((NULL IN ())))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<<((NULL IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY t0.c2 DESC);
SELECT * FROM vt0, v0, t0 WHERE (((v0.c0)<<((NULL IN ())))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<<((NULL IN ())))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY t0.c2 DESC);
SELECT * FROM vt0, v0, t0 WHERE (((v0.c0)<<((NULL IN ())))) ORDER BY t0.c2 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c32) IS TRUE)) BETWEEN (((t0.c0)>(t0.c2))) AND (((t0.c2) BETWEEN (t0.c32) AND (t0.c1))))) ORDER BY ((t0.c0 IN (t0.c32)) IN ()) DESC, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32) IS TRUE)) BETWEEN (((t0.c0)>(t0.c2))) AND (((t0.c2) BETWEEN (t0.c32) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN (t0.c32)) IN ()) DESC, t0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c32) IS TRUE)) BETWEEN (((t0.c0)>(t0.c2))) AND (((t0.c2) BETWEEN (t0.c32) AND (t0.c1))))) ORDER BY ((t0.c0 IN (t0.c32)) IN ()) DESC, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32) IS TRUE)) BETWEEN (((t0.c0)>(t0.c2))) AND (((t0.c2) BETWEEN (t0.c32) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN (t0.c32)) IN ()) DESC, t0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c32) IS TRUE)) BETWEEN (((t0.c0)>(t0.c2))) AND (((t0.c2) BETWEEN (t0.c32) AND (t0.c1))))) ORDER BY ((t0.c0 IN (t0.c32)) IN ()) DESC, t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE (((NULL)<<(UNLIKELY(DISTINCT NULL)))) ORDER BY ((t0.c32)<((((t0.c1)) NOT BETWEEN ((t0.c32)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(UNLIKELY(DISTINCT NULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c32)<((((t0.c1)) NOT BETWEEN ((t0.c32)) AND ((t0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((NULL)<<(UNLIKELY(DISTINCT NULL)))) ORDER BY ((t0.c32)<((((t0.c1)) NOT BETWEEN ((t0.c32)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(UNLIKELY(DISTINCT NULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c32)<((((t0.c1)) NOT BETWEEN ((t0.c32)) AND ((t0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((NULL)<<(UNLIKELY(DISTINCT NULL)))) ORDER BY ((t0.c32)<((((t0.c1)) NOT BETWEEN ((t0.c32)) AND ((t0.c2)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c2)AND(t0.c32))) NOTNULL)) ORDER BY (((t0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((((x'd0f0') NOT BETWEEN (t0.c0) AND (t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(t0.c32))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((((x'd0f0') NOT BETWEEN (t0.c0) AND (t0.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c2)AND(t0.c32))) NOTNULL)) ORDER BY (((t0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((((x'd0f0') NOT BETWEEN (t0.c0) AND (t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(t0.c32))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((((x'd0f0') NOT BETWEEN (t0.c0) AND (t0.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c2)AND(t0.c32))) NOTNULL)) ORDER BY (((t0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((((x'd0f0') NOT BETWEEN (t0.c0) AND (t0.c2)))))  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((0.017358850520694302)OR((~ (v0.c0)))) WHERE (x'') ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c32)) END ASC, 'u2T\nV' DESC, (((((t0.c32)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (CAST(t0.c32 AS NUMERIC)) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((0.017358850520694302)OR((~ (v0.c0)))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c32)) END ASC, 'u2T\nV' DESC, (((((t0.c32)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (CAST(t0.c32 AS NUMERIC)) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((0.017358850520694302)OR((~ (v0.c0)))) WHERE (x'') ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c32)) END ASC, 'u2T\nV' DESC, (((((t0.c32)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (CAST(t0.c32 AS NUMERIC)) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((0.017358850520694302)OR((~ (v0.c0)))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c32)) END ASC, 'u2T\nV' DESC, (((((t0.c32)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (CAST(t0.c32 AS NUMERIC)) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON ((0.017358850520694302)OR((~ (v0.c0)))) WHERE (x'') ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c32)) END ASC, 'u2T\nV' DESC, (((((t0.c32)) NOT BETWEEN ((t0.c1)) AND ((t0.c0)))) BETWEEN (CAST(t0.c32 AS NUMERIC)) AND (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))&(((vt0.c0)!=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))&(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))&(((vt0.c0)!=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))&(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))&(((vt0.c0)!=(vt0.c1)))));
SELECT * FROM t0, vt0, v0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))>((((((((((t0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) ORDER BY CASE (t0.c1 IN ())  WHEN (t0.c32 IN ()) THEN ((t0.c2)GLOB(vt0.c0)) WHEN CASE WHEN t0.c32 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c32) BETWEEN (v0.c0) AND (t0.c1)) THEN ((t0.c32) NOT BETWEEN (v0.c0) AND (5.63668121E8)) ELSE (((x''))<>((t0.c0))) END  NULLS FIRST, CAST(((t0.c1)%(vt0.c0)) AS REAL) ASC, '8G鮺_!T*C7' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))>((((((((((t0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE (t0.c1 IN ())  WHEN (t0.c32 IN ()) THEN ((t0.c2)GLOB(vt0.c0)) WHEN CASE WHEN t0.c32 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c32) BETWEEN (v0.c0) AND (t0.c1)) THEN ((t0.c32) NOT BETWEEN (v0.c0) AND (5.63668121E8)) ELSE (((x''))<>((t0.c0))) END  NULLS FIRST, CAST(((t0.c1)%(vt0.c0)) AS REAL) ASC, '8G鮺_!T*C7' ASC  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))>((((((((((t0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) ORDER BY CASE (t0.c1 IN ())  WHEN (t0.c32 IN ()) THEN ((t0.c2)GLOB(vt0.c0)) WHEN CASE WHEN t0.c32 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c32) BETWEEN (v0.c0) AND (t0.c1)) THEN ((t0.c32) NOT BETWEEN (v0.c0) AND (5.63668121E8)) ELSE (((x''))<>((t0.c0))) END  NULLS FIRST, CAST(((t0.c1)%(vt0.c0)) AS REAL) ASC, '8G鮺_!T*C7' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))>((((((((((t0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE (t0.c1 IN ())  WHEN (t0.c32 IN ()) THEN ((t0.c2)GLOB(vt0.c0)) WHEN CASE WHEN t0.c32 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c32) BETWEEN (v0.c0) AND (t0.c1)) THEN ((t0.c32) NOT BETWEEN (v0.c0) AND (5.63668121E8)) ELSE (((x''))<>((t0.c0))) END  NULLS FIRST, CAST(((t0.c1)%(vt0.c0)) AS REAL) ASC, '8G鮺_!T*C7' ASC  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0))))>((((((((((t0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))) ORDER BY CASE (t0.c1 IN ())  WHEN (t0.c32 IN ()) THEN ((t0.c2)GLOB(vt0.c0)) WHEN CASE WHEN t0.c32 THEN vt0.c0 ELSE t0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((t0.c32) BETWEEN (v0.c0) AND (t0.c1)) THEN ((t0.c32) NOT BETWEEN (v0.c0) AND (5.63668121E8)) ELSE (((x''))<>((t0.c0))) END  NULLS FIRST, CAST(((t0.c1)%(vt0.c0)) AS REAL) ASC, '8G鮺_!T*C7' ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)OR(((t0.c0)<=(t0.c1)))))OR(CASE WHEN t0.c2 THEN 'o><|[u3&]Xj' ELSE t0.c0 END)))AND((~ (vt0.c1)))))AND((t0.c0 IN ()))) WHERE (NULL) ORDER BY MIN(t0.c32 COLLATE NOCASE, ((v0.c0)*(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)OR(((t0.c0)<=(t0.c1)))))OR(CASE WHEN t0.c2 THEN 'o><|[u3&]Xj' ELSE t0.c0 END)))AND((~ (vt0.c1)))))AND((t0.c0 IN ()))) ORDER BY MIN(t0.c32 COLLATE NOCASE, ((v0.c0)*(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)OR(((t0.c0)<=(t0.c1)))))OR(CASE WHEN t0.c2 THEN 'o><|[u3&]Xj' ELSE t0.c0 END)))AND((~ (vt0.c1)))))AND((t0.c0 IN ()))) WHERE (NULL) ORDER BY MIN(t0.c32 COLLATE NOCASE, ((v0.c0)*(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)OR(((t0.c0)<=(t0.c1)))))OR(CASE WHEN t0.c2 THEN 'o><|[u3&]Xj' ELSE t0.c0 END)))AND((~ (vt0.c1)))))AND((t0.c0 IN ()))) ORDER BY MIN(t0.c32 COLLATE NOCASE, ((v0.c0)*(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)OR(((t0.c0)<=(t0.c1)))))OR(CASE WHEN t0.c2 THEN 'o><|[u3&]Xj' ELSE t0.c0 END)))AND((~ (vt0.c1)))))AND((t0.c0 IN ()))) WHERE (NULL) ORDER BY MIN(t0.c32 COLLATE NOCASE, ((v0.c0)*(t0.c0)));
SELECT ALL * FROM t0 WHERE ((((((t0.c32)AND(t0.c2))))<=((((t0.c32)/(t0.c32)))))) ORDER BY ((t0.c2) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c32)AND(t0.c2))))<=((((t0.c32)/(t0.c32)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) IS FALSE) DESC);
SELECT ALL * FROM t0 WHERE ((((((t0.c32)AND(t0.c2))))<=((((t0.c32)/(t0.c32)))))) ORDER BY ((t0.c2) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c32)AND(t0.c2))))<=((((t0.c32)/(t0.c32)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2) IS FALSE) DESC);
SELECT ALL * FROM t0 WHERE ((((((t0.c32)AND(t0.c2))))<=((((t0.c32)/(t0.c32)))))) ORDER BY ((t0.c2) IS FALSE) DESC;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE BINARY) ORDER BY (CAST(vt0.c0 AS REAL) IN (((v0.c0)OR(x'd792')), (NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (CAST(vt0.c0 AS REAL) IN (((v0.c0)OR(x'd792')), (NOT (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE BINARY) ORDER BY (CAST(vt0.c0 AS REAL) IN (((v0.c0)OR(x'd792')), (NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (CAST(vt0.c0 AS REAL) IN (((v0.c0)OR(x'd792')), (NOT (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE BINARY) ORDER BY (CAST(vt0.c0 AS REAL) IN (((v0.c0)OR(x'd792')), (NOT (v0.c0)))) ASC;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE (~ (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('1207820758'))) THEN ((vt0.c0)!=(v0.c0)) ELSE CAST(969954511 AS REAL) END WHERE (((((vt0.c1)<=(vt0.c1)))||((NOT (v0.c0))))) ORDER BY x'e793'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c1)))||((NOT (v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE (~ (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('1207820758'))) THEN ((vt0.c0)<>(v0.c0)) ELSE CAST(969954511 AS REAL) END ORDER BY x'e793'  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE (~ (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('1207820758'))) THEN ((vt0.c0)!=(v0.c0)) ELSE CAST(969954511 AS REAL) END WHERE (((((vt0.c1)<=(vt0.c1)))||((NOT (v0.c0))))) ORDER BY x'e793'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c1)))||((NOT (v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE (~ (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('1207820758'))) THEN ((vt0.c0)<>(v0.c0)) ELSE CAST(969954511 AS REAL) END ORDER BY x'e793'  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE (~ (vt0.c0))  WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('1207820758'))) THEN ((vt0.c0)!=(v0.c0)) ELSE CAST(969954511 AS REAL) END WHERE (((((vt0.c1)<=(vt0.c1)))||((NOT (v0.c0))))) ORDER BY x'e793'  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND(t0.c32))) NOT BETWEEN ((t0.c0 IN (0.9648178938075148))) AND ((((t0.c0, t0.c32, '1412243267'))<=((t0.c2, '{[2', t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c0)))AND(t0.c32))) NOT BETWEEN ((t0.c0 IN (0.9648178938075148))) AND ((((t0.c0, t0.c32, '1412243267'))<=((t0.c2, '{[2', t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND(t0.c32))) NOT BETWEEN ((t0.c0 IN (0.9648178938075148))) AND ((((t0.c0, t0.c32, '1412243267'))<=((t0.c2, '{[2', t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c0)))AND(t0.c32))) NOT BETWEEN ((t0.c0 IN (0.9648178938075148))) AND ((((t0.c0, t0.c32, '1412243267'))<=((t0.c2, '{[2', t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND(t0.c32))) NOT BETWEEN ((t0.c0 IN (0.9648178938075148))) AND ((((t0.c0, t0.c32, '1412243267'))<=((t0.c2, '{[2', t0.c2))))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((t0.c1 COLLATE RTRIM)<(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE RTRIM)<(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((t0.c1 COLLATE RTRIM)<(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE RTRIM)<(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((t0.c1 COLLATE RTRIM)<(((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0, t0 WHERE ((((+ (t0.c0)))||(CAST(t0.c1 AS BLOB)))) ORDER BY (((t0.c2)) NOT BETWEEN (((vt0.c0 IN (v0.c0, t0.c1)))) AND ((CAST(t0.c32 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))||(CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c2)) NOT BETWEEN (((vt0.c0 IN (v0.c0, t0.c1)))) AND ((CAST(t0.c32 AS REAL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0, t0 WHERE ((((+ (t0.c0)))||(CAST(t0.c1 AS BLOB)))) ORDER BY (((t0.c2)) NOT BETWEEN (((vt0.c0 IN (v0.c0, t0.c1)))) AND ((CAST(t0.c32 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))||(CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c2)) NOT BETWEEN (((vt0.c0 IN (v0.c0, t0.c1)))) AND ((CAST(t0.c32 AS REAL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0, t0 WHERE ((((+ (t0.c0)))||(CAST(t0.c1 AS BLOB)))) ORDER BY (((t0.c2)) NOT BETWEEN (((vt0.c0 IN (v0.c0, t0.c1)))) AND ((CAST(t0.c32 AS REAL)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c2) IS TRUE)) IS FALSE) INNER JOIN t0 ON ((((t0.c1) IS FALSE)) BETWEEN (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c1))) AND ((t0.c0 IN ()))) WHERE (TRIM(((((vt0.c1)OR(t0.c32)))AND(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt0.c1)OR(t0.c32)))AND(t0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c2) IS TRUE)) IS FALSE) INNER JOIN t0 ON ((((t0.c1) IS FALSE)) BETWEEN (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c1))) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c2) IS TRUE)) IS FALSE) INNER JOIN t0 ON ((((t0.c1) IS FALSE)) BETWEEN (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c1))) AND ((t0.c0 IN ()))) WHERE (TRIM(((((vt0.c1)OR(t0.c32)))AND(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt0.c1)OR(t0.c32)))AND(t0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((t0.c2) IS TRUE)) IS FALSE) INNER JOIN t0 ON ((((t0.c1) IS FALSE)) BETWEEN (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c1))) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)<>(vt0.c0))))>(('1500888354'))) WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)<>(vt0.c0))))>(('1500888354'))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)<>(vt0.c0))))>(('1500888354'))) WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)<>(vt0.c0))))>(('1500888354'))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)<>(vt0.c0))))>(('1500888354'))) WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)<(t0.c0))  WHEN (('')GLOB(t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE ((vt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<(t0.c0))  WHEN (('')GLOB(t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)<(t0.c0))  WHEN (('')GLOB(t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE ((vt0.c1) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<(t0.c0))  WHEN (('')GLOB(t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)<(t0.c0))  WHEN (('')GLOB(t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE ((vt0.c1) NOTNULL) END);
SELECT * FROM v0, t0, vt0 WHERE ((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN t0.c32 THEN 0.7029489355104944 ELSE vt0.c0 END))) ORDER BY (((vt0.c1)) BETWEEN ((NULL COLLATE NOCASE)) AND ((t0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN t0.c32 THEN 0.7029489355104944 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c1)) BETWEEN ((NULL COLLATE NOCASE)) AND ((t0.c2))) DESC  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE ((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN t0.c32 THEN 0.7029489355104944 ELSE vt0.c0 END))) ORDER BY (((vt0.c1)) BETWEEN ((NULL COLLATE NOCASE)) AND ((t0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN t0.c32 THEN 0.7029489355104944 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((vt0.c1)) BETWEEN ((NULL COLLATE NOCASE)) AND ((t0.c2))) DESC  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE ((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN t0.c32 THEN 0.7029489355104944 ELSE vt0.c0 END))) ORDER BY (((vt0.c1)) BETWEEN ((NULL COLLATE NOCASE)) AND ((t0.c2))) DESC  NULLS LAST;
SELECT * FROM vt0, v0, t0 WHERE (0.543330073823415);
SELECT SUM(count) FROM (SELECT ALL ((0.543330073823415) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (0.543330073823415);
SELECT SUM(count) FROM (SELECT ALL ((0.543330073823415) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (0.543330073823415);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOTNULL)) ORDER BY x'', ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)+(('-1710009660' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY x'', ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)+(('-1710009660' IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOTNULL)) ORDER BY x'', ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)+(('-1710009660' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY x'', ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)+(('-1710009660' IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOTNULL)) ORDER BY x'', ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)+(('-1710009660' IN ()))) ASC;
SELECT COUNT(*) FROM v0 WHERE (NULLIF((v0.c0 IN ()), 247911639));
SELECT SUM(count) FROM (SELECT ((NULLIF((v0.c0 IN ()), 247911639)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULLIF((v0.c0 IN ()), 247911639));
SELECT SUM(count) FROM (SELECT ((NULLIF((v0.c0 IN ()), 247911639)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULLIF((v0.c0 IN ()), 247911639));
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))|(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))|(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))|(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))|(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))|(v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c1 COLLATE RTRIM  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((NULL)>>(t0.c32)) WHEN ((((x'9ea7')AND(vt0.c0)))OR(t0.c2)) THEN ((t0.c2)>>(t0.c1)) WHEN ((t0.c2)AND(vt0.c0)) THEN (NOT (t0.c32)) WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c32)<=(t0.c1)) WHEN CAST(t0.c32 AS BLOB) THEN (((0.268524057748722))!=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1 COLLATE RTRIM  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((NULL)>>(t0.c32)) WHEN ((((x'9ea7')AND(vt0.c0)))OR(t0.c2)) THEN ((t0.c2)>>(t0.c1)) WHEN ((t0.c2)AND(vt0.c0)) THEN (NOT (t0.c32)) WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c32)<=(t0.c1)) WHEN CAST(t0.c32 AS BLOB) THEN (((0.268524057748722))!=((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c1 COLLATE RTRIM  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((NULL)>>(t0.c32)) WHEN ((((x'9ea7')AND(vt0.c0)))OR(t0.c2)) THEN ((t0.c2)>>(t0.c1)) WHEN ((t0.c2)AND(vt0.c0)) THEN (NOT (t0.c32)) WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c32)<=(t0.c1)) WHEN CAST(t0.c32 AS BLOB) THEN (((0.268524057748722))!=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c1 COLLATE RTRIM  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((NULL)>>(t0.c32)) WHEN ((((x'9ea7')AND(vt0.c0)))OR(t0.c2)) THEN ((t0.c2)>>(t0.c1)) WHEN ((t0.c2)AND(vt0.c0)) THEN (NOT (t0.c32)) WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c32)<=(t0.c1)) WHEN CAST(t0.c32 AS BLOB) THEN (((0.268524057748722))!=((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE t0.c1 COLLATE RTRIM  WHEN CAST(vt0.c1 AS NUMERIC) THEN ((NULL)>>(t0.c32)) WHEN ((((x'9ea7')AND(vt0.c0)))OR(t0.c2)) THEN ((t0.c2)>>(t0.c1)) WHEN ((t0.c2)AND(vt0.c0)) THEN (NOT (t0.c32)) WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c32)<=(t0.c1)) WHEN CAST(t0.c32 AS BLOB) THEN (((0.268524057748722))!=((vt0.c1))) END);
SELECT * FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND (((((t0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0))))))) ORDER BY ((((((((t0.c32)AND(CASE t0.c32  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)))OR((- (t0.c32)))))AND(v0.c0)))OR((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND (((((t0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((t0.c32)AND(CASE t0.c32  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)))OR((- (t0.c32)))))AND(v0.c0)))OR((t0.c0 IN ()))) ASC);
SELECT * FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND (((((t0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0))))))) ORDER BY ((((((((t0.c32)AND(CASE t0.c32  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)))OR((- (t0.c32)))))AND(v0.c0)))OR((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND (((((t0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((t0.c32)AND(CASE t0.c32  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)))OR((- (t0.c32)))))AND(v0.c0)))OR((t0.c0 IN ()))) ASC);
SELECT * FROM v0, t0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND (((((t0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0))))))) ORDER BY ((((((((t0.c32)AND(CASE t0.c32  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)))OR((- (t0.c32)))))AND(v0.c0)))OR((t0.c0 IN ()))) ASC;
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c32 END)AND(((((t0.c32)OR(t0.c32)))OR(t0.c2)))))OR(json_array_length(t0.c32)))) ORDER BY (t0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c32 END)AND(((((t0.c32)OR(t0.c32)))OR(t0.c2)))))OR(json_array_length(t0.c32)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c32 END)AND(((((t0.c32)OR(t0.c32)))OR(t0.c2)))))OR(json_array_length(t0.c32)))) ORDER BY (t0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c32 END)AND(((((t0.c32)OR(t0.c32)))OR(t0.c2)))))OR(json_array_length(t0.c32)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c32 END)AND(((((t0.c32)OR(t0.c32)))OR(t0.c2)))))OR(json_array_length(t0.c32)))) ORDER BY (t0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c32) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c32) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c32) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c32) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c32) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c1) AND (v0.c0)))-((('0.9991601088878397') BETWEEN (t0.c32) AND (t0.c2)))) RIGHT OUTER JOIN v0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0))<((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0))<((t0.c2))) END) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c1) AND (v0.c0)))-((('0.9991601088878397') BETWEEN (t0.c32) AND (t0.c2)))) RIGHT OUTER JOIN v0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c1) AND (v0.c0)))-((('0.9991601088878397') BETWEEN (t0.c32) AND (t0.c2)))) RIGHT OUTER JOIN v0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0))<((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c0))<((t0.c2))) END) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (t0.c1) AND (v0.c0)))-((('0.9991601088878397') BETWEEN (t0.c32) AND (t0.c2)))) RIGHT OUTER JOIN v0 ON ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (QUOTE(CHAR(1545750009, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((QUOTE(CHAR(1545750009, v0.c0, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (QUOTE(CHAR(1545750009, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((QUOTE(CHAR(1545750009, v0.c0, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (QUOTE(CHAR(1545750009, v0.c0, v0.c0)));
SELECT * FROM vt0, t0, v0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (x'')))<=(((vt0.c1)>(-6.44864001E8))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (x'')))<=(((vt0.c1)>(-6.44864001E8))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY v0.c0);
SELECT * FROM vt0, t0, v0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (x'')))<=(((vt0.c1)>(-6.44864001E8))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (x'')))<=(((vt0.c1)>(-6.44864001E8))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY v0.c0);
SELECT * FROM vt0, t0, v0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (x'')))<=(((vt0.c1)>(-6.44864001E8))))) ORDER BY v0.c0;
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.18534868268190063)) ORDER BY CAST('' AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.18534868268190063)) IS TRUE)  as count FROM vt0 ORDER BY CAST('' AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.18534868268190063)) ORDER BY CAST('' AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.18534868268190063)) IS TRUE)  as count FROM vt0 ORDER BY CAST('' AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(vt0.c0 COLLATE NOCASE, 0.18534868268190063)) ORDER BY CAST('' AS INTEGER)  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((v0.c0)LIKE(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)LIKE(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)LIKE(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((LTRIM(v0.c0), '677225304', ((-1894932769)&(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((LTRIM(v0.c0), '677225304', ((-1894932769)&(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((LTRIM(v0.c0), '677225304', ((-1894932769)&(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((LTRIM(v0.c0), '677225304', ((-1894932769)&(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, CAST(v0.c0 AS REAL), (~ (v0.c0)))) AND ((LTRIM(v0.c0), '677225304', ((-1894932769)&(v0.c0))))));
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE ((((((v0.c0 IN ()))AND(((t0.c32)>=(t0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(((t0.c32)>=(t0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE ((((((v0.c0 IN ()))AND(((t0.c32)>=(t0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(((t0.c32)>=(t0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE ((((((v0.c0 IN ()))AND(((t0.c32)>=(t0.c0)))))AND(v0.c0)));
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (((v0.c0, vt0.c1, vt0.c1)) BETWEEN ((((v0.c0)LIKE(v0.c0)), CAST(v0.c0 AS TEXT), IFNULL(DISTINCT v0.c0, v0.c0))) AND ((((vt0.c1)>=(vt0.c0)), HEX(DISTINCT v0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, x'190c' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, vt0.c1, vt0.c1)) BETWEEN ((((v0.c0)LIKE(v0.c0)), CAST(v0.c0 AS TEXT), IFNULL(DISTINCT v0.c0, v0.c0))) AND ((((vt0.c1)>=(vt0.c0)), HEX(DISTINCT v0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, x'190c' COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (((v0.c0, vt0.c1, vt0.c1)) BETWEEN ((((v0.c0)LIKE(v0.c0)), CAST(v0.c0 AS TEXT), IFNULL(DISTINCT v0.c0, v0.c0))) AND ((((vt0.c1)>=(vt0.c0)), HEX(DISTINCT v0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, x'190c' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, vt0.c1, vt0.c1)) BETWEEN ((((v0.c0)LIKE(v0.c0)), CAST(v0.c0 AS TEXT), IFNULL(DISTINCT v0.c0, v0.c0))) AND ((((vt0.c1)>=(vt0.c0)), HEX(DISTINCT v0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, x'190c' COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY (((v0.c0, vt0.c1, vt0.c1)) BETWEEN ((((v0.c0)LIKE(v0.c0)), CAST(v0.c0 AS TEXT), IFNULL(DISTINCT v0.c0, v0.c0))) AND ((((vt0.c1)>=(vt0.c0)), HEX(DISTINCT v0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, x'190c' COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED CROSS JOIN t0 ON CASE WHEN CASE WHEN t0.c1 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE LTRIM(v0.c0) END WHERE (((((((t0.c32)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c1)IS NOT(t0.c1))))) ORDER BY ((+ (t0.c32)) IN (t0.c2 COLLATE NOCASE, ((vt0.c1)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c32)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c1)IS NOT(t0.c1))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON CASE WHEN CASE WHEN t0.c1 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE LTRIM(v0.c0) END ORDER BY ((+ (t0.c32)) IN (t0.c2 COLLATE NOCASE, ((vt0.c1)<(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED CROSS JOIN t0 ON CASE WHEN CASE WHEN t0.c1 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE LTRIM(v0.c0) END WHERE (((((((t0.c32)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c1)IS NOT(t0.c1))))) ORDER BY ((+ (t0.c32)) IN (t0.c2 COLLATE NOCASE, ((vt0.c1)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c32)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c1)IS NOT(t0.c1))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON CASE WHEN CASE WHEN t0.c1 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE LTRIM(v0.c0) END ORDER BY ((+ (t0.c32)) IN (t0.c2 COLLATE NOCASE, ((vt0.c1)<(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED CROSS JOIN t0 ON CASE WHEN CASE WHEN t0.c1 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE LTRIM(v0.c0) END WHERE (((((((t0.c32)AND(vt0.c0)))OR(v0.c0)))AND(((vt0.c1)IS NOT(t0.c1))))) ORDER BY ((+ (t0.c32)) IN (t0.c2 COLLATE NOCASE, ((vt0.c1)<(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c1 THEN t0.c32 END))) ORDER BY ((t0.c32)&(t0.c32)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c1 THEN t0.c32 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((t0.c32)&(t0.c32)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c1 THEN t0.c32 END))) ORDER BY ((t0.c32)&(t0.c32)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c1 THEN t0.c32 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((t0.c32)&(t0.c32)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c1 THEN t0.c32 END))) ORDER BY ((t0.c32)&(t0.c32)) COLLATE BINARY;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0, vt0, v0 WHERE (COALESCE(t0.c2, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((COALESCE(t0.c2, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (COALESCE(t0.c2, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((COALESCE(t0.c2, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (COALESCE(t0.c2, v0.c0) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((t0.c2) BETWEEN (0.017358850520694302) AND (vt0.c0))))) ORDER BY ((((NULL)OR(((vt0.c1) NOTNULL))))AND(((vt0.c0)<=(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) BETWEEN (0.017358850520694302) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((NULL)OR(((vt0.c1) NOTNULL))))AND(((vt0.c0)<=(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((t0.c2) BETWEEN (0.017358850520694302) AND (vt0.c0))))) ORDER BY ((((NULL)OR(((vt0.c1) NOTNULL))))AND(((vt0.c0)<=(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c2) BETWEEN (0.017358850520694302) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((NULL)OR(((vt0.c1) NOTNULL))))AND(((vt0.c0)<=(vt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((t0.c2) BETWEEN (0.017358850520694302) AND (vt0.c0))))) ORDER BY ((((NULL)OR(((vt0.c1) NOTNULL))))AND(((vt0.c0)<=(vt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY ((CAST(v0.c0 AS REAL))&(NULL));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(v0.c0 AS REAL))&(NULL)));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY ((CAST(v0.c0 AS REAL))&(NULL));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((CAST(v0.c0 AS REAL))&(NULL)));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (t0.c0) ORDER BY ((CAST(v0.c0 AS REAL))&(NULL));
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c1) BETWEEN (((((((((t0.c1)OR(vt0.c0)))OR(t0.c1)))AND('247911639')))OR(v0.c0))) AND (CASE ''  WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END))) ORDER BY ((x'' IN (v0.c0, t0.c32, vt0.c1)) IN ())  NULLS FIRST, ((t0.c32 COLLATE BINARY)||((vt0.c0 IN (t0.c32, vt0.c1)))) DESC  NULLS FIRST, (- ((0x6232543f IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((((((((t0.c1)OR(vt0.c0)))OR(t0.c1)))AND('247911639')))OR(v0.c0))) AND (CASE ''  WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((x'' IN (v0.c0, t0.c32, vt0.c1)) IN ())  NULLS FIRST, ((t0.c32 COLLATE BINARY)||((vt0.c0 IN (t0.c32, vt0.c1)))) DESC  NULLS FIRST, (- ((0x6232543f IN ())))  NULLS LAST);
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c1) BETWEEN (((((((((t0.c1)OR(vt0.c0)))OR(t0.c1)))AND('247911639')))OR(v0.c0))) AND (CASE ''  WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END))) ORDER BY ((x'' IN (v0.c0, t0.c32, vt0.c1)) IN ())  NULLS FIRST, ((t0.c32 COLLATE BINARY)||((vt0.c0 IN (t0.c32, vt0.c1)))) DESC  NULLS FIRST, (- ((0x6232543f IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((((((((t0.c1)OR(vt0.c0)))OR(t0.c1)))AND('247911639')))OR(v0.c0))) AND (CASE ''  WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((x'' IN (v0.c0, t0.c32, vt0.c1)) IN ())  NULLS FIRST, ((t0.c32 COLLATE BINARY)||((vt0.c0 IN (t0.c32, vt0.c1)))) DESC  NULLS FIRST, (- ((0x6232543f IN ())))  NULLS LAST);
SELECT * FROM v0, vt0, t0 WHERE (((vt0.c1) BETWEEN (((((((((t0.c1)OR(vt0.c0)))OR(t0.c1)))AND('247911639')))OR(v0.c0))) AND (CASE ''  WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END))) ORDER BY ((x'' IN (v0.c0, t0.c32, vt0.c1)) IN ())  NULLS FIRST, ((t0.c32 COLLATE BINARY)||((vt0.c0 IN (t0.c32, vt0.c1)))) DESC  NULLS FIRST, (- ((0x6232543f IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((CHANGES())<>(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END)) WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((CHANGES())<>(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END)) ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((CHANGES())<>(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END)) WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((CHANGES())<>(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END)) ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((CHANGES())<>(CASE WHEN v0.c0 THEN t0.c2 ELSE t0.c32 END)) WHERE ((- (vt0.c0)) COLLATE BINARY) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (- (0.9012415450016412))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (- (0.9012415450016412)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (- (0.9012415450016412))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (- (0.9012415450016412)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT (- (0.9012415450016412))));
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS TEXT)) NOT NULL));
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) ELSE ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) ELSE ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) ELSE ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) ELSE ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) ELSE ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((NOT (vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c1)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((NOT (vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c1)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((NOT (vt0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS BLOB))OR(((((((((t0.c1)AND(0.0612346783660328)))AND('ꪊlZE\PG')))AND('*ᜯ')))OR(t0.c1)))))OR(t0.c2 COLLATE BINARY))) ORDER BY (((t0.c1) NOTNULL) IN (((t0.c32) ISNULL), ((((t0.c32)AND(t0.c1)))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c2 AS BLOB))OR(((((((((t0.c1)AND(0.0612346783660328)))AND('ꪊlZE\PG')))AND('*ᜯ')))OR(t0.c1)))))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1) NOTNULL) IN (((t0.c32) ISNULL), ((((t0.c32)AND(t0.c1)))AND(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS BLOB))OR(((((((((t0.c1)AND(0.0612346783660328)))AND('ꪊlZE\PG')))AND('*ᜯ')))OR(t0.c1)))))OR(t0.c2 COLLATE BINARY))) ORDER BY (((t0.c1) NOTNULL) IN (((t0.c32) ISNULL), ((((t0.c32)AND(t0.c1)))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c2 AS BLOB))OR(((((((((t0.c1)AND(0.0612346783660328)))AND('ꪊlZE\PG')))AND('*ᜯ')))OR(t0.c1)))))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1) NOTNULL) IN (((t0.c32) ISNULL), ((((t0.c32)AND(t0.c1)))AND(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS BLOB))OR(((((((((t0.c1)AND(0.0612346783660328)))AND('ꪊlZE\PG')))AND('*ᜯ')))OR(t0.c1)))))OR(t0.c2 COLLATE BINARY))) ORDER BY (((t0.c1) NOTNULL) IN (((t0.c32) ISNULL), ((((t0.c32)AND(t0.c1)))AND(t0.c2))))  NULLS LAST;
SELECT * FROM v0 CROSS JOIN t0 ON json_insert(((t0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c32)), t0.c0, ((v0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)) WHERE (json_type(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON json_insert(((t0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c32)), t0.c0, ((v0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)));
SELECT * FROM v0 CROSS JOIN t0 ON json_insert(((t0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c32)), t0.c0, ((v0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)) WHERE (json_type(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON json_insert(((t0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c32)), t0.c0, ((v0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)));
SELECT * FROM v0 CROSS JOIN t0 ON json_insert(((t0.c0) IS TRUE), ((t0.c2) BETWEEN (t0.c0) AND (t0.c32)), t0.c0, ((v0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC)) WHERE (json_type(CAST(v0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM t0 WHERE (-1.894932769E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.894932769E9) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (-1.894932769E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.894932769E9) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (-1.894932769E9);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (t0.c1) ORDER BY ((CASE t0.c32  WHEN vt0.c1 THEN t0.c2 END)LIKE(STRFTIME(t0.c0, vt0.c0, t0.c1))), (((vt0.c0 IN ()))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CASE t0.c32  WHEN vt0.c1 THEN t0.c2 END)LIKE(STRFTIME(t0.c0, vt0.c0, t0.c1))), (((vt0.c0 IN ()))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (t0.c1) ORDER BY ((CASE t0.c32  WHEN vt0.c1 THEN t0.c2 END)LIKE(STRFTIME(t0.c0, vt0.c0, t0.c1))), (((vt0.c0 IN ()))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CASE t0.c32  WHEN vt0.c1 THEN t0.c2 END)LIKE(STRFTIME(t0.c0, vt0.c0, t0.c1))), (((vt0.c0 IN ()))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (t0.c1) ORDER BY ((CASE t0.c32  WHEN vt0.c1 THEN t0.c2 END)LIKE(STRFTIME(t0.c0, vt0.c0, t0.c1))), (((vt0.c0 IN ()))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT * FROM v0, t0, vt0 WHERE ((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN ((vt0.c1 IN (t0.c2, vt0.c0))) AND (((t0.c2) NOT BETWEEN (vt0.c1) AND (0Xffffffffc527ded5)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN ((vt0.c1 IN (t0.c2, vt0.c0))) AND (((t0.c2) NOT BETWEEN (vt0.c1) AND (0Xffffffffc527ded5))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN ((vt0.c1 IN (t0.c2, vt0.c0))) AND (((t0.c2) NOT BETWEEN (vt0.c1) AND (0Xffffffffc527ded5)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN ((vt0.c1 IN (t0.c2, vt0.c0))) AND (((t0.c2) NOT BETWEEN (vt0.c1) AND (0Xffffffffc527ded5))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((((((v0.c0))<=((vt0.c0)))) NOT BETWEEN ((vt0.c1 IN (t0.c2, vt0.c0))) AND (((t0.c2) NOT BETWEEN (vt0.c1) AND (0Xffffffffc527ded5)))));
SELECT * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE (1.500888354E9);
SELECT SUM(count) FROM (SELECT ALL ((1.500888354E9) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (1.500888354E9);
SELECT SUM(count) FROM (SELECT ALL ((1.500888354E9) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (1.500888354E9);
SELECT ALL COUNT(*) FROM t0 WHERE (0.17391184746062494) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN t0.c2 THEN ((t0.c0)||(t0.c0)) WHEN (t0.c32 IN (t0.c32)) THEN t0.c32 COLLATE BINARY WHEN ((t0.c32)!=(t0.c0)) THEN t0.c32 COLLATE NOCASE END DESC, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.17391184746062494) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN t0.c2 THEN ((t0.c0)||(t0.c0)) WHEN (t0.c32 IN (t0.c32)) THEN t0.c32 COLLATE BINARY WHEN ((t0.c32)!=(t0.c0)) THEN t0.c32 COLLATE NOCASE END DESC, t0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.17391184746062494) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN t0.c2 THEN ((t0.c0)||(t0.c0)) WHEN (t0.c32 IN (t0.c32)) THEN t0.c32 COLLATE BINARY WHEN ((t0.c32)!=(t0.c0)) THEN t0.c32 COLLATE NOCASE END DESC, t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.17391184746062494) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN t0.c2 THEN ((t0.c0)||(t0.c0)) WHEN (t0.c32 IN (t0.c32)) THEN t0.c32 COLLATE BINARY WHEN ((t0.c32)!=(t0.c0)) THEN t0.c32 COLLATE NOCASE END DESC, t0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (0.17391184746062494) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN t0.c2 THEN ((t0.c0)||(t0.c0)) WHEN (t0.c32 IN (t0.c32)) THEN t0.c32 COLLATE BINARY WHEN ((t0.c32)!=(t0.c0)) THEN t0.c32 COLLATE NOCASE END DESC, t0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('-2142131635')))AND('-987242795')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('-2142131635')))AND('-987242795')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('-2142131635')))AND('-987242795')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('-2142131635')))AND('-987242795')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND ('-2142131635')))AND('-987242795')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM v0, t0, vt0 WHERE (((t0.c2)-(CAST(t0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)-(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c2)-(CAST(t0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)-(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c2)-(CAST(t0.c1 AS NUMERIC))));
SELECT * FROM v0, t0, vt0 WHERE (((t0.c32) NOT NULL)) ORDER BY ((((t0.c2)LIKE(t0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((t0.c2)LIKE(t0.c0))) IS TRUE) ASC);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c32) NOT NULL)) ORDER BY ((((t0.c2)LIKE(t0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c32) NOT NULL)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((t0.c2)LIKE(t0.c0))) IS TRUE) ASC);
SELECT * FROM v0, t0, vt0 WHERE (((t0.c32) NOT NULL)) ORDER BY ((((t0.c2)LIKE(t0.c0))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS TRUE)))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS TRUE)))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0) IS TRUE)))) ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (TOTAL_CHANGES()) ORDER BY (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))+((t0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))+((t0.c2 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (TOTAL_CHANGES()) ORDER BY (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))+((t0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))+((t0.c2 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (TOTAL_CHANGES()) ORDER BY (((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))))+((t0.c2 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((((((((t0.c2)AND(CASE WHEN t0.c2 THEN v0.c0 END)))AND((((t0.c1, t0.c0, 0Xffffffff8efb6c22, t0.c2, t0.c1)) BETWEEN ((t0.c1, '/*j\n\rQwD3', t0.c32, t0.c2, v0.c0)) AND ((t0.c1, t0.c2, t0.c2, t0.c1, v0.c0))))))OR((t0.c32 IN ()))))AND(((v0.c0) BETWEEN (t0.c32) AND (t0.c32)))) WHERE (0x183c6ddd) ORDER BY (- (t0.c32)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((0X183c6ddd) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((((t0.c2)AND(CASE WHEN t0.c2 THEN v0.c0 END)))AND((((t0.c1, t0.c0, 0Xffffffff8efb6c22, t0.c2, t0.c1)) BETWEEN ((t0.c1, '/*j\n\rQwD3', t0.c32, t0.c2, v0.c0)) AND ((t0.c1, t0.c2, t0.c2, t0.c1, v0.c0))))))OR((t0.c32 IN ()))))AND(((v0.c0) BETWEEN (t0.c32) AND (t0.c32)))) ORDER BY (- (t0.c32)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((((((((t0.c2)AND(CASE WHEN t0.c2 THEN v0.c0 END)))AND((((t0.c1, t0.c0, 0Xffffffff8efb6c22, t0.c2, t0.c1)) BETWEEN ((t0.c1, '/*j\n\rQwD3', t0.c32, t0.c2, v0.c0)) AND ((t0.c1, t0.c2, t0.c2, t0.c1, v0.c0))))))OR((t0.c32 IN ()))))AND(((v0.c0) BETWEEN (t0.c32) AND (t0.c32)))) WHERE (0x183c6ddd) ORDER BY (- (t0.c32)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((0X183c6ddd) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((((t0.c2)AND(CASE WHEN t0.c2 THEN v0.c0 END)))AND((((t0.c1, t0.c0, 0Xffffffff8efb6c22, t0.c2, t0.c1)) BETWEEN ((t0.c1, '/*j\n\rQwD3', t0.c32, t0.c2, v0.c0)) AND ((t0.c1, t0.c2, t0.c2, t0.c1, v0.c0))))))OR((t0.c32 IN ()))))AND(((v0.c0) BETWEEN (t0.c32) AND (t0.c32)))) ORDER BY (- (t0.c32)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((((((((t0.c2)AND(CASE WHEN t0.c2 THEN v0.c0 END)))AND((((t0.c1, t0.c0, 0Xffffffff8efb6c22, t0.c2, t0.c1)) BETWEEN ((t0.c1, '/*j\n\rQwD3', t0.c32, t0.c2, v0.c0)) AND ((t0.c1, t0.c2, t0.c2, t0.c1, v0.c0))))))OR((t0.c32 IN ()))))AND(((v0.c0) BETWEEN (t0.c32) AND (t0.c32)))) WHERE (0x183c6ddd) ORDER BY (- (t0.c32)) COLLATE RTRIM ASC;
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ('-1896125406') ORDER BY x''  NULLS LAST, ((((('1551313076')<=(vt0.c0))))<=(((((vt0.c0))>=((vt0.c1)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1896125406') IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST, ((((('1551313076')<=(vt0.c0))))<=(((((vt0.c0))>=((vt0.c1)))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('-1896125406') ORDER BY x''  NULLS LAST, ((((('1551313076')<=(vt0.c0))))<=(((((vt0.c0))>=((vt0.c1)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1896125406') IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST, ((((('1551313076')<=(vt0.c0))))<=(((((vt0.c0))>=((vt0.c1)))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('-1896125406') ORDER BY x''  NULLS LAST, ((((('1551313076')<=(vt0.c0))))<=(((((vt0.c0))>=((vt0.c1)))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, -230842318, vt0.c1))) IN (x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY x'1969'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, -230842318, vt0.c1))) IN (x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY x'1969'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, -230842318, vt0.c1))) IN (x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY x'1969'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, -230842318, vt0.c1))) IN (x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY x'1969'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, -230842318, vt0.c1))) IN (x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY x'1969'  NULLS LAST;
SELECT ALL * FROM v0, vt0, t0 WHERE ((((- (t0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((- (vt0.c0))))) ORDER BY (((t0.c32, t0.c0, v0.c0)) BETWEEN ((((t0.c0)<>(t0.c32)), ((vt0.c0)>=(vt0.c0)), ((t0.c0)>=(vt0.c1)))) AND (('', CAST(t0.c2 AS NUMERIC), CAST('?}_hmhmiJ' AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c32, t0.c0, v0.c0)) BETWEEN ((((t0.c0)<>(t0.c32)), ((vt0.c0)>=(vt0.c0)), ((t0.c0)>=(vt0.c1)))) AND (('', CAST(t0.c2 AS NUMERIC), CAST('?}_hmhmiJ' AS INTEGER))))  NULLS LAST);
SELECT ALL * FROM v0, vt0, t0 WHERE ((((- (t0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((- (vt0.c0))))) ORDER BY (((t0.c32, t0.c0, v0.c0)) BETWEEN ((((t0.c0)<>(t0.c32)), ((vt0.c0)>=(vt0.c0)), ((t0.c0)>=(vt0.c1)))) AND (('', CAST(t0.c2 AS NUMERIC), CAST('?}_hmhmiJ' AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c32, t0.c0, v0.c0)) BETWEEN ((((t0.c0)<>(t0.c32)), ((vt0.c0)>=(vt0.c0)), ((t0.c0)>=(vt0.c1)))) AND (('', CAST(t0.c2 AS NUMERIC), CAST('?}_hmhmiJ' AS INTEGER))))  NULLS LAST);
SELECT ALL * FROM v0, vt0, t0 WHERE ((((- (t0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((- (vt0.c0))))) ORDER BY (((t0.c32, t0.c0, v0.c0)) BETWEEN ((((t0.c0)<>(t0.c32)), ((vt0.c0)>=(vt0.c0)), ((t0.c0)>=(vt0.c1)))) AND (('', CAST(t0.c2 AS NUMERIC), CAST('?}_hmhmiJ' AS INTEGER))))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)&(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)&(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)&(v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((v0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((v0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CAST(((v0.c0) ISNULL) AS BLOB));
SELECT * FROM t0, vt0, v0 WHERE (CASE WHEN t0.c2 THEN (((t0.c0, vt0.c1, t0.c1))>=((t0.c32, t0.c1, t0.c2))) WHEN ((vt0.c0)IS(t0.c0)) THEN NULL WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) THEN (t0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN (((t0.c0, vt0.c1, t0.c1))>=((t0.c32, t0.c1, t0.c2))) WHEN ((vt0.c0)IS(t0.c0)) THEN NULL WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0);
SELECT * FROM t0, vt0, v0 WHERE (CASE WHEN t0.c2 THEN (((t0.c0, vt0.c1, t0.c1))>=((t0.c32, t0.c1, t0.c2))) WHEN ((vt0.c0)IS(t0.c0)) THEN NULL WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) THEN (t0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN (((t0.c0, vt0.c1, t0.c1))>=((t0.c32, t0.c1, t0.c2))) WHEN ((vt0.c0)IS(t0.c0)) THEN NULL WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0);
SELECT * FROM t0, vt0, v0 WHERE (CASE WHEN t0.c2 THEN (((t0.c0, vt0.c1, t0.c1))>=((t0.c32, t0.c1, t0.c2))) WHEN ((vt0.c0)IS(t0.c0)) THEN NULL WHEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))) THEN (t0.c2 IN ()) END);
SELECT * FROM v0, vt0, t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0);
SELECT * FROM v0, vt0, t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB));
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY 0.5433002838668038;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0.5433002838668038);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY 0.5433002838668038;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY 0.5433002838668038);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY 0.5433002838668038;
SELECT COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT COUNT(*) FROM t0, vt0, v0 INDEXED BY i52 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))OR(0X2857fa7)))OR(((((t0.c2)OR(t0.c32)))AND(t0.c1)))))AND(CAST(t0.c0 AS REAL))))AND(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0 INDEXED BY i52 ORDER BY ((((((((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))OR(0X2857fa7)))OR(((((t0.c2)OR(t0.c32)))AND(t0.c1)))))AND(CAST(t0.c0 AS REAL))))AND(vt0.c0)) ASC);
SELECT COUNT(*) FROM t0, vt0, v0 INDEXED BY i52 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))OR(0X2857fa7)))OR(((((t0.c2)OR(t0.c32)))AND(t0.c1)))))AND(CAST(t0.c0 AS REAL))))AND(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0 INDEXED BY i52 ORDER BY ((((((((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))OR(0X2857fa7)))OR(((((t0.c2)OR(t0.c32)))AND(t0.c1)))))AND(CAST(t0.c0 AS REAL))))AND(vt0.c0)) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)=(t0.c32)))) WHERE ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY (('-444561599') BETWEEN (((((vt0.c0)AND(t0.c1)))AND(t0.c2))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (0.6415155645441895)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)=(t0.c32)))) ORDER BY (('-444561599') BETWEEN (((((vt0.c0)AND(t0.c1)))AND(t0.c2))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (0.6415155645441895)))) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)=(t0.c32)))) WHERE ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY (('-444561599') BETWEEN (((((vt0.c0)AND(t0.c1)))AND(t0.c2))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (0.6415155645441895)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)=(t0.c32)))) ORDER BY (('-444561599') BETWEEN (((((vt0.c0)AND(t0.c1)))AND(t0.c2))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (0.6415155645441895)))) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)=(t0.c32)))) WHERE ((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) ORDER BY (('-444561599') BETWEEN (((((vt0.c0)AND(t0.c1)))AND(t0.c2))) AND (((vt0.c0) NOT BETWEEN (t0.c2) AND (0.6415155645441895)))) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((NOT ((~ (v0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))|(CAST(v0.c0 AS NUMERIC))) DESC, ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))>(vt0.c0)) ASC, ((((0.3117371430549506)GLOB(vt0.c1)))GLOB(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))|(CAST(v0.c0 AS NUMERIC))) DESC, ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))>(vt0.c0)) ASC, ((((0.3117371430549506)GLOB(vt0.c1)))GLOB(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((NOT ((~ (v0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))|(CAST(v0.c0 AS NUMERIC))) DESC, ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))>(vt0.c0)) ASC, ((((0.3117371430549506)GLOB(vt0.c1)))GLOB(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))|(CAST(v0.c0 AS NUMERIC))) DESC, ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))>(vt0.c0)) ASC, ((((0.3117371430549506)GLOB(vt0.c1)))GLOB(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((NOT ((~ (v0.c0))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))|(CAST(v0.c0 AS NUMERIC))) DESC, ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))>(vt0.c0)) ASC, ((((0.3117371430549506)GLOB(vt0.c1)))GLOB(vt0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((NULL))<((t0.c1))))&((((t0.c2))<>((0.33094864251976686))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<((t0.c1))))&((((t0.c2))<>((0.33094864251976686)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NULL))<((t0.c1))))&((((t0.c2))<>((0.33094864251976686))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<((t0.c1))))&((((t0.c2))<>((0.33094864251976686)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NULL))<((t0.c1))))&((((t0.c2))<>((0.33094864251976686))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (('-1968985462')=(vt0.c1))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<(vt0.c1)), ((vt0.c0)+(vt0.c0)))))) ORDER BY '' ASC  NULLS LAST, (((vt0.c0))>=((vt0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (('-1968985462')=(vt0.c1))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<(vt0.c1)), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC  NULLS LAST, (((vt0.c0))>=((vt0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (('-1968985462')=(vt0.c1))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<(vt0.c1)), ((vt0.c0)+(vt0.c0)))))) ORDER BY '' ASC  NULLS LAST, (((vt0.c0))>=((vt0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (('-1968985462')=(vt0.c1))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<(vt0.c1)), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC  NULLS LAST, (((vt0.c0))>=((vt0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), (('-1968985462')=(vt0.c1))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)<(vt0.c1)), ((vt0.c0)+(vt0.c0)))))) ORDER BY '' ASC  NULLS LAST, (((vt0.c0))>=((vt0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE json_extract(v0.c0, v0.c0)  WHEN ((((NULL)OR(v0.c0)))AND(v0.c0)) THEN HEX(v0.c0) WHEN TRIM(v0.c0) THEN ((v0.c0) BETWEEN ('') AND (x'')) WHEN '0.7029489355104944' THEN (~ ('-31826971')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_extract(v0.c0, v0.c0)  WHEN ((((NULL)OR(v0.c0)))AND(v0.c0)) THEN HEX(v0.c0) WHEN TRIM(v0.c0) THEN ((v0.c0) BETWEEN ('') AND (x'')) WHEN '0.7029489355104944' THEN (~ ('-31826971')) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE json_extract(v0.c0, v0.c0)  WHEN ((((NULL)OR(v0.c0)))AND(v0.c0)) THEN HEX(v0.c0) WHEN TRIM(v0.c0) THEN ((v0.c0) BETWEEN ('') AND (x'')) WHEN '0.7029489355104944' THEN (~ ('-31826971')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_extract(v0.c0, v0.c0)  WHEN ((((NULL)OR(v0.c0)))AND(v0.c0)) THEN HEX(v0.c0) WHEN TRIM(v0.c0) THEN ((v0.c0) BETWEEN ('') AND (x'')) WHEN '0.7029489355104944' THEN (~ ('-31826971')) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE json_extract(v0.c0, v0.c0)  WHEN ((((NULL)OR(v0.c0)))AND(v0.c0)) THEN HEX(v0.c0) WHEN TRIM(v0.c0) THEN ((v0.c0) BETWEEN ('') AND (x'')) WHEN '0.7029489355104944' THEN (~ ('-31826971')) END);
SELECT ALL * FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0)+(v0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((vt0.c0)+(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0)+(v0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((vt0.c0)+(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0)+(v0.c0))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c1)*(v0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) IS FALSE), ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)*(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) IS FALSE), ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c1)*(v0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) IS FALSE), ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)*(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) IS FALSE), ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c1)*(v0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) IS FALSE), ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR('Ao1\rPE')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR('Ao1\rPE')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR('Ao1\rPE')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR('Ao1\rPE')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR('Ao1\rPE')))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))<=((+ (v0.c0)))));
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)+(vt0.c0)))))AND(((((0.495741027347804)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)+(vt0.c0)))))AND(((((0.495741027347804)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)+(vt0.c0)))))AND(((((0.495741027347804)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)+(vt0.c0)))))AND(((((0.495741027347804)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)+(vt0.c0)))))AND(((((0.495741027347804)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c1 IN ())))) ORDER BY (+ ((- (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((- (vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c1 IN ())))) ORDER BY (+ ((- (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((- (vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ((vt0.c1 IN ())))) ORDER BY (+ ((- (vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c1) IS TRUE))<=(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE))<=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c1) IS TRUE))<=(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE))<=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((t0.c1) IS TRUE))<=(t0.c0 COLLATE RTRIM)));
SELECT * FROM vt0, t0 WHERE ((NOT ((((t0.c32))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c32))>=((t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT ((((t0.c32))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c32))>=((t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((NOT ((((t0.c32))>=((t0.c0))))));
SELECT * FROM t0 WHERE (CASE WHEN TYPEOF(t0.c1) THEN (((t0.c32, t0.c32, t0.c0))<=((t0.c1, t0.c1, NULL))) END) ORDER BY CAST(((t0.c2) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(t0.c1) THEN (((t0.c32, t0.c32, t0.c0))<=((t0.c1, t0.c1, NULL))) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2) IS TRUE) AS INTEGER));
SELECT * FROM t0 WHERE (CASE WHEN TYPEOF(t0.c1) THEN (((t0.c32, t0.c32, t0.c0))<=((t0.c1, t0.c1, NULL))) END) ORDER BY CAST(((t0.c2) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(t0.c1) THEN (((t0.c32, t0.c32, t0.c0))<=((t0.c1, t0.c1, NULL))) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2) IS TRUE) AS INTEGER));
SELECT * FROM t0 WHERE (CASE WHEN TYPEOF(t0.c1) THEN (((t0.c32, t0.c32, t0.c0))<=((t0.c1, t0.c1, NULL))) END) ORDER BY CAST(((t0.c2) IS TRUE) AS INTEGER);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC, 0.8687646357465524  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC, 0.8687646357465524  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC, 0.8687646357465524  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC, 0.8687646357465524  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC, 0.8687646357465524  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY 0.33094864251976686;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.33094864251976686);
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY 0.33094864251976686;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.33094864251976686);
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY 0.33094864251976686;
SELECT ALL COUNT(*) FROM t0 WHERE (((('-2144930679'))<=((t0.c0 COLLATE RTRIM)))) ORDER BY LTRIM(t0.c1) COLLATE RTRIM  NULLS FIRST, CAST('-251528986' AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-2144930679'))<=((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY LTRIM(t0.c1) COLLATE RTRIM  NULLS FIRST, CAST('-251528986' AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((('-2144930679'))<=((t0.c0 COLLATE RTRIM)))) ORDER BY LTRIM(t0.c1) COLLATE RTRIM  NULLS FIRST, CAST('-251528986' AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-2144930679'))<=((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY LTRIM(t0.c1) COLLATE RTRIM  NULLS FIRST, CAST('-251528986' AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((('-2144930679'))<=((t0.c0 COLLATE RTRIM)))) ORDER BY LTRIM(t0.c1) COLLATE RTRIM  NULLS FIRST, CAST('-251528986' AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN NULL THEN t0.c0 END)IS NOT(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t0.c0 END)IS NOT(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN NULL THEN t0.c0 END)IS NOT(t0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t0.c0 END)IS NOT(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN NULL THEN t0.c0 END)IS NOT(t0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))>=(UNLIKELY(v0.c0)))) ORDER BY (((((v0.c0)AND('472943983')))OR(v0.c0)) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))>=(UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)AND('472943983')))OR(v0.c0)) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))>=(UNLIKELY(v0.c0)))) ORDER BY (((((v0.c0)AND('472943983')))OR(v0.c0)) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))>=(UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)AND('472943983')))OR(v0.c0)) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))>=(UNLIKELY(v0.c0)))) ORDER BY (((((v0.c0)AND('472943983')))OR(v0.c0)) IN (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((CAST(NULL AS NUMERIC)) IS TRUE));
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((((vt0.c0) IS FALSE))<=(CAST(t0.c32 AS TEXT))) ASC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((((vt0.c0) IS FALSE))<=(CAST(t0.c32 AS TEXT))) ASC  NULLS LAST, NULL DESC);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((((vt0.c0) IS FALSE))<=(CAST(t0.c32 AS TEXT))) ASC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((((vt0.c0) IS FALSE))<=(CAST(t0.c32 AS TEXT))) ASC  NULLS LAST, NULL DESC);
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((((vt0.c0) IS FALSE))<=(CAST(t0.c32 AS TEXT))) ASC  NULLS LAST, NULL DESC;
SELECT ALL * FROM vt0, t0 INDEXED BY i52 NATURAL JOIN v0 WHERE (CASE t0.c32  WHEN 0.5483692381404504 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t0.c32  WHEN 0.5483692381404504 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 INDEXED BY i52 NATURAL JOIN v0);
SELECT ALL * FROM vt0, t0 INDEXED BY i52 NATURAL JOIN v0 WHERE (CASE t0.c32  WHEN 0.5483692381404504 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t0.c32  WHEN 0.5483692381404504 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 INDEXED BY i52 NATURAL JOIN v0);
SELECT ALL * FROM vt0, t0 INDEXED BY i52 NATURAL JOIN v0 WHERE (CASE t0.c32  WHEN 0.5483692381404504 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON t0.c0 WHERE (((((vt0.c0)AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON t0.c0 WHERE (((((vt0.c0)AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON t0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON t0.c0 WHERE (((((vt0.c0)AND(vt0.c1))) NOTNULL));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR('yꍘc1b鍍')))AND(t0.c32)))) AND ((((t0.c32)!=(t0.c0))))) INNER JOIN v0 ON x'' WHERE (CAST((+ (0.8542892529126619)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (0.8542892529126619)) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR('yꍘc1b鍍')))AND(t0.c32)))) AND ((((t0.c32)<>(t0.c0))))) INNER JOIN v0 ON x'');
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR('yꍘc1b鍍')))AND(t0.c32)))) AND ((((t0.c32)!=(t0.c0))))) INNER JOIN v0 ON x'' WHERE (CAST((+ (0.8542892529126619)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (0.8542892529126619)) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR('yꍘc1b鍍')))AND(t0.c32)))) AND ((((t0.c32)<>(t0.c0))))) INNER JOIN v0 ON x'');
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)OR('yꍘc1b鍍')))AND(t0.c32)))) AND ((((t0.c32)!=(t0.c0))))) INNER JOIN v0 ON x'' WHERE (CAST((+ (0.8542892529126619)) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON 0.18392175576549707 WHERE (((((t0.c1)AND(((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c0)))))OR(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND(((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c0)))))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON 0.18392175576549707);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON 0.18392175576549707 WHERE (((((t0.c1)AND(((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c0)))))OR(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND(((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c0)))))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON 0.18392175576549707);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON 0.18392175576549707 WHERE (((((t0.c1)AND(((((((((t0.c2)OR(vt0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c0)))))OR(t0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((t0.c0)<=(t0.c1)) THEN CAST(v0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)<=(t0.c1)) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((t0.c0)<=(t0.c1)) THEN CAST(v0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)<=(t0.c1)) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((t0.c0)<=(t0.c1)) THEN CAST(v0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT (((vt0.c0, vt0.c1, '-31826971', t0.c2, vt0.c0)) NOT BETWEEN ((t0.c1, t0.c1, t0.c32, t0.c32, t0.c0)) AND ((t0.c32, NULL, v0.c0, x'', t0.c32)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)))AND(v0.c0)))<(CASE WHEN t0.c32 THEN NULL ELSE t0.c2 END)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT (((vt0.c0, vt0.c1, '-31826971', t0.c2, vt0.c0)) NOT BETWEEN ((t0.c1, t0.c1, t0.c32, t0.c32, t0.c0)) AND ((t0.c32, NULL, v0.c0, x'', t0.c32)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)))AND(v0.c0)))<(CASE WHEN t0.c32 THEN NULL ELSE t0.c2 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT (((vt0.c0, vt0.c1, '-31826971', t0.c2, vt0.c0)) NOT BETWEEN ((t0.c1, t0.c1, t0.c32, t0.c32, t0.c0)) AND ((t0.c32, NULL, v0.c0, x'', t0.c32)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)))AND(v0.c0)))<(CASE WHEN t0.c32 THEN NULL ELSE t0.c2 END)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON HEX(DISTINCT (((vt0.c0, vt0.c1, '-31826971', t0.c2, vt0.c0)) NOT BETWEEN ((t0.c1, t0.c1, t0.c32, t0.c32, t0.c0)) AND ((t0.c32, NULL, v0.c0, x'', t0.c32)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(t0.c1)))OR(t0.c1)))AND(vt0.c0)))AND(v0.c0)))<(CASE WHEN t0.c32 THEN NULL ELSE t0.c2 END)));
SELECT * FROM vt0, v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN v0.c0 WHEN DATE(vt0.c0, x'a3b3', v0.c0) THEN ((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) WHEN 'Yc' THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY ((((((x'')OR(v0.c0)))AND(v0.c0)))-(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN v0.c0 WHEN DATE(vt0.c0, x'a3b3', v0.c0) THEN ((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) WHEN 'Yc' THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((x'')OR(v0.c0)))AND(v0.c0)))-(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN v0.c0 WHEN DATE(vt0.c0, x'a3b3', v0.c0) THEN ((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) WHEN 'Yc' THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY ((((((x'')OR(v0.c0)))AND(v0.c0)))-(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN v0.c0 WHEN DATE(vt0.c0, x'a3b3', v0.c0) THEN ((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) WHEN 'Yc' THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((x'')OR(v0.c0)))AND(v0.c0)))-(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN v0.c0 WHEN DATE(vt0.c0, x'a3b3', v0.c0) THEN ((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) WHEN 'Yc' THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY ((((((x'')OR(v0.c0)))AND(v0.c0)))-(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((NULL))>=((t0.c32))) THEN (~ (vt0.c0)) ELSE (t0.c1 IN (t0.c1)) END) ORDER BY TRIM(DISTINCT '-822726676', CAST(t0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL))>=((t0.c32))) THEN (~ (vt0.c0)) ELSE (t0.c1 IN (t0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT '-822726676', CAST(t0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((NULL))>=((t0.c32))) THEN (~ (vt0.c0)) ELSE (t0.c1 IN (t0.c1)) END) ORDER BY TRIM(DISTINCT '-822726676', CAST(t0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL))>=((t0.c32))) THEN (~ (vt0.c0)) ELSE (t0.c1 IN (t0.c1)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY TRIM(DISTINCT '-822726676', CAST(t0.c0 AS NUMERIC)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((NULL))>=((t0.c32))) THEN (~ (vt0.c0)) ELSE (t0.c1 IN (t0.c1)) END) ORDER BY TRIM(DISTINCT '-822726676', CAST(t0.c0 AS NUMERIC)) ASC  NULLS LAST;
SELECT ALL * FROM v0, t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ('');
SELECT ALL * FROM v0, t0 WHERE (((((t0.c2)IS NOT(v0.c0)))<=(x''))) ORDER BY ((v0.c0) NOT BETWEEN (x'') AND (t0.c32)) COLLATE RTRIM  NULLS LAST, (((t0.c1)) BETWEEN ((((t0.c2) NOT BETWEEN (NULL) AND ('b2\nMQ*rR侇')))) AND ((t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS NOT(v0.c0)))<=(x''))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0) NOT BETWEEN (x'') AND (t0.c32)) COLLATE RTRIM  NULLS LAST, (((t0.c1)) BETWEEN ((((t0.c2) NOT BETWEEN (NULL) AND ('b2\nMQ*rR侇')))) AND ((t0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c2)IS NOT(v0.c0)))<=(x''))) ORDER BY ((v0.c0) NOT BETWEEN (x'') AND (t0.c32)) COLLATE RTRIM  NULLS LAST, (((t0.c1)) BETWEEN ((((t0.c2) NOT BETWEEN (NULL) AND ('b2\nMQ*rR侇')))) AND ((t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS NOT(v0.c0)))<=(x''))) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c0) NOT BETWEEN (x'') AND (t0.c32)) COLLATE RTRIM  NULLS LAST, (((t0.c1)) BETWEEN ((((t0.c2) NOT BETWEEN (NULL) AND ('b2\nMQ*rR侇')))) AND ((t0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c2)IS NOT(v0.c0)))<=(x''))) ORDER BY ((v0.c0) NOT BETWEEN (x'') AND (t0.c32)) COLLATE RTRIM  NULLS LAST, (((t0.c1)) BETWEEN ((((t0.c2) NOT BETWEEN (NULL) AND ('b2\nMQ*rR侇')))) AND ((t0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (((((((((((((t0.c0)OR(t0.c32)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))AND(CAST(0.8287681806783794 AS INTEGER))))AND(((t0.c32)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(t0.c32)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))AND(CAST(0.8287681806783794 AS INTEGER))))AND(((t0.c32)-(t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((((t0.c0)OR(t0.c32)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))AND(CAST(0.8287681806783794 AS INTEGER))))AND(((t0.c32)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)OR(t0.c32)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))AND(CAST(0.8287681806783794 AS INTEGER))))AND(((t0.c32)-(t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((((t0.c0)OR(t0.c32)))AND(v0.c0)))OR(t0.c1)))OR(t0.c0)))AND(CAST(0.8287681806783794 AS INTEGER))))AND(((t0.c32)-(t0.c0)))));
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN v0 ON ((((t0.c0) IS FALSE))-((t0.c2 IN ()))) WHERE (vt0.c0) ORDER BY (~ (NULL));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN v0 ON ((((t0.c0) IS FALSE))-((t0.c2 IN ()))) ORDER BY (~ (NULL)));
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN v0 ON ((((t0.c0) IS FALSE))-((t0.c2 IN ()))) WHERE (vt0.c0) ORDER BY (~ (NULL));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN v0 ON ((((t0.c0) IS FALSE))-((t0.c2 IN ()))) ORDER BY (~ (NULL)));
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN v0 ON ((((t0.c0) IS FALSE))-((t0.c2 IN ()))) WHERE (vt0.c0) ORDER BY (~ (NULL));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN vt0.c0 THEN (~ (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN (~ (vt0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN vt0.c0 THEN (~ (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN (~ (vt0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CASE WHEN vt0.c0 THEN (~ (vt0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM v0, t0, vt0 WHERE (((((((t0.c2)AND(vt0.c0)))AND(t0.c32)))<>((t0.c1 IN (t0.c32, vt0.c0, t0.c2))))) ORDER BY CAST(t0.c32 AS TEXT)  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(vt0.c0)))AND(t0.c32)))<>((t0.c1 IN (t0.c32, vt0.c0, t0.c2))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(t0.c32 AS TEXT)  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (((((((t0.c2)AND(vt0.c0)))AND(t0.c32)))<>((t0.c1 IN (t0.c32, vt0.c0, t0.c2))))) ORDER BY CAST(t0.c32 AS TEXT)  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(vt0.c0)))AND(t0.c32)))<>((t0.c1 IN (t0.c32, vt0.c0, t0.c2))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(t0.c32 AS TEXT)  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (((((((t0.c2)AND(vt0.c0)))AND(t0.c32)))<>((t0.c1 IN (t0.c32, vt0.c0, t0.c2))))) ORDER BY CAST(t0.c32 AS TEXT)  NULLS FIRST, (vt0.c0 COLLATE RTRIM IN ()) ASC;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0)>(v0.c0)) THEN (+ (v0.c0)) WHEN ((('zq'))==((v0.c0))) THEN x'' WHEN ((v0.c0) NOTNULL) THEN v0.c0 ELSE '-1312535908' END) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0)>(v0.c0)) THEN (+ (v0.c0)) WHEN ((('zq'))==((v0.c0))) THEN x'' WHEN ((v0.c0) NOTNULL) THEN v0.c0 ELSE '-1312535908' END) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0)>(v0.c0)) THEN (+ (v0.c0)) WHEN ((('zq'))==((v0.c0))) THEN x'' WHEN ((v0.c0) NOTNULL) THEN v0.c0 ELSE '-1312535908' END) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN ((v0.c0)>(v0.c0)) THEN (+ (v0.c0)) WHEN ((('zq'))==((v0.c0))) THEN x'' WHEN ((v0.c0) NOTNULL) THEN v0.c0 ELSE '-1312535908' END) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0)>(v0.c0)) THEN (+ (v0.c0)) WHEN ((('zq'))==((v0.c0))) THEN x'' WHEN ((v0.c0) NOTNULL) THEN v0.c0 ELSE '-1312535908' END) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((((NOT (v0.c0)))|(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))|(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((NOT (v0.c0)))|(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))|(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((NOT (v0.c0)))|(vt0.c0)));
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE '695837220' END THEN CASE WHEN t0.c0 THEN t0.c32 ELSE t0.c1 END END) ORDER BY ((((((t0.c0)IS NOT(t0.c1)))OR(t0.c0)))OR(t0.c32)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE '695837220' END THEN CASE WHEN t0.c0 THEN t0.c32 ELSE t0.c1 END END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)IS NOT(t0.c1)))OR(t0.c0)))OR(t0.c32)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE '695837220' END THEN CASE WHEN t0.c0 THEN t0.c32 ELSE t0.c1 END END) ORDER BY ((((((t0.c0)IS NOT(t0.c1)))OR(t0.c0)))OR(t0.c32)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE '695837220' END THEN CASE WHEN t0.c0 THEN t0.c32 ELSE t0.c1 END END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)IS NOT(t0.c1)))OR(t0.c0)))OR(t0.c32)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE '695837220' END THEN CASE WHEN t0.c0 THEN t0.c32 ELSE t0.c1 END END) ORDER BY ((((((t0.c0)IS NOT(t0.c1)))OR(t0.c0)))OR(t0.c32)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c2, 0.7641270184666505, t0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (t0.c1) AND (vt0.c0)), ((t0.c32)||(t0.c32)))) AND ((TYPEOF(v0.c0), ((((v0.c0)OR(vt0.c1)))AND(t0.c1)), (~ (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, 0.7641270184666505, t0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (t0.c1) AND (vt0.c0)), ((t0.c32)||(t0.c32)))) AND ((TYPEOF(v0.c0), ((((v0.c0)OR(vt0.c1)))AND(t0.c1)), (~ (t0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c2, 0.7641270184666505, t0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (t0.c1) AND (vt0.c0)), ((t0.c32)||(t0.c32)))) AND ((TYPEOF(v0.c0), ((((v0.c0)OR(vt0.c1)))AND(t0.c1)), (~ (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, 0.7641270184666505, t0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (t0.c1) AND (vt0.c0)), ((t0.c32)||(t0.c32)))) AND ((TYPEOF(v0.c0), ((((v0.c0)OR(vt0.c1)))AND(t0.c1)), (~ (t0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE ((((t0.c2, 0.7641270184666505, t0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT), ((t0.c1) BETWEEN (t0.c1) AND (vt0.c0)), ((t0.c32)||(t0.c32)))) AND ((TYPEOF(v0.c0), ((((v0.c0)OR(vt0.c1)))AND(t0.c1)), (~ (t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c2)<<(t0.c2))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c2)<<(t0.c2))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c2)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c2)<<(t0.c2))))) ORDER BY t0.c1;
SELECT ALL * FROM t0, vt0 WHERE (TYPEOF(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c1)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TYPEOF(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c1)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (TYPEOF(DISTINCT vt0.c1));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((NOT (t0.c1)))>=(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1)))>=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((NOT (t0.c1)))>=(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1)))>=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((NOT (t0.c1)))>=(t0.c0 COLLATE RTRIM)));
SELECT * FROM v0, t0 WHERE (((((((t0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((t0.c0)!=(t0.c2)), x'' COLLATE NOCASE))<(((((v0.c0))>((t0.c1))), CAST(t0.c0 AS TEXT), t0.c32 COLLATE RTRIM)))) ORDER BY HEX((((t0.c1))<>((t0.c32))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((t0.c0)<>(t0.c2)), x'' COLLATE NOCASE))<(((((v0.c0))>((t0.c1))), CAST(t0.c0 AS TEXT), t0.c32 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0 ORDER BY HEX((((t0.c1))<>((t0.c32))))  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (((((((t0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((t0.c0)!=(t0.c2)), x'' COLLATE NOCASE))<(((((v0.c0))>((t0.c1))), CAST(t0.c0 AS TEXT), t0.c32 COLLATE RTRIM)))) ORDER BY HEX((((t0.c1))<>((t0.c32))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((t0.c0)<>(t0.c2)), x'' COLLATE NOCASE))<(((((v0.c0))>((t0.c1))), CAST(t0.c0 AS TEXT), t0.c32 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t0 ORDER BY HEX((((t0.c1))<>((t0.c32))))  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (((((((t0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((t0.c0)!=(t0.c2)), x'' COLLATE NOCASE))<(((((v0.c0))>((t0.c1))), CAST(t0.c0 AS TEXT), t0.c32 COLLATE RTRIM)))) ORDER BY HEX((((t0.c1))<>((t0.c32))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c1)-(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c1)-(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c1)-(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c1)-(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c1)-(t0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE WHEN t0.c32 THEN (t0.c1 IN ()) END WHERE ((((v0.c0)) NOT BETWEEN ((((t0.c2)/(t0.c1)))) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY (((0.5300212291660299)-(v0.c0)) IN ())  NULLS FIRST, (~ (((((t0.c1)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((t0.c2)/(t0.c1)))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE WHEN t0.c32 THEN (t0.c1 IN ()) END ORDER BY (((0.5300212291660299)-(v0.c0)) IN ())  NULLS FIRST, (~ (((((t0.c1)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS LAST, t0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE WHEN t0.c32 THEN (t0.c1 IN ()) END WHERE ((((v0.c0)) NOT BETWEEN ((((t0.c2)/(t0.c1)))) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY (((0.5300212291660299)-(v0.c0)) IN ())  NULLS FIRST, (~ (((((t0.c1)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((t0.c2)/(t0.c1)))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE WHEN t0.c32 THEN (t0.c1 IN ()) END ORDER BY (((0.5300212291660299)-(v0.c0)) IN ())  NULLS FIRST, (~ (((((t0.c1)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS LAST, t0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON CASE WHEN t0.c32 THEN (t0.c1 IN ()) END WHERE ((((v0.c0)) NOT BETWEEN ((((t0.c2)/(t0.c1)))) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY (((0.5300212291660299)-(v0.c0)) IN ())  NULLS FIRST, (~ (((((t0.c1)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS LAST, t0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT * FROM t0, v0 WHERE ((((t0.c0, t0.c2, '8g鮺_!t*c7')) NOT BETWEEN (((((t0.c32)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((NULL)GLOB(t0.c1)), ((t0.c1) IS FALSE))) AND ((((t0.c1)LIKE(t0.c1)), COALESCE(t0.c2, t0.c2), (t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c2, '8g鮺_!t*c7')) NOT BETWEEN (((((t0.c32)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((NULL)GLOB(t0.c1)), ((t0.c1) IS FALSE))) AND ((((t0.c1)LIKE(t0.c1)), COALESCE(t0.c2, t0.c2), (t0.c2 IN ()))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c0, t0.c2, '8g鮺_!t*c7')) NOT BETWEEN (((((t0.c32)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((NULL)GLOB(t0.c1)), ((t0.c1) IS FALSE))) AND ((((t0.c1)LIKE(t0.c1)), COALESCE(t0.c2, t0.c2), (t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c2, '8g鮺_!t*c7')) NOT BETWEEN (((((t0.c32)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((NULL)GLOB(t0.c1)), ((t0.c1) IS FALSE))) AND ((((t0.c1)LIKE(t0.c1)), COALESCE(t0.c2, t0.c2), (t0.c2 IN ()))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c0, t0.c2, '8g鮺_!t*c7')) NOT BETWEEN (((((t0.c32)) BETWEEN ((t0.c2)) AND ((t0.c2))), ((NULL)GLOB(t0.c1)), ((t0.c1) IS FALSE))) AND ((((t0.c1)LIKE(t0.c1)), COALESCE(t0.c2, t0.c2), (t0.c2 IN ())))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON 'x^Qq' WHERE (CASE ((vt0.c1)LIKE(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) END) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) BETWEEN ((vt0.c1 IN (v0.c0))) AND ((v0.c0 IN (vt0.c0, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)LIKE(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON 'x^Qq' ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) BETWEEN ((vt0.c1 IN (v0.c0))) AND ((v0.c0 IN (vt0.c0, v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON 'x^Qq' WHERE (CASE ((vt0.c1)LIKE(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) END) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) BETWEEN ((vt0.c1 IN (v0.c0))) AND ((v0.c0 IN (vt0.c0, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)LIKE(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON 'x^Qq' ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) BETWEEN ((vt0.c1 IN (v0.c0))) AND ((v0.c0 IN (vt0.c0, v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON 'x^Qq' WHERE (CASE ((vt0.c1)LIKE(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN CAST(v0.c0 AS REAL) END) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) BETWEEN ((vt0.c1 IN (v0.c0))) AND ((v0.c0 IN (vt0.c0, v0.c0)))) DESC;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)))LIKE(x''))) ORDER BY (('W遽?,oVd') BETWEEN ((t0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)))LIKE(x''))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (('W遽?,oVd') BETWEEN ((t0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)))LIKE(x''))) ORDER BY (('W遽?,oVd') BETWEEN ((t0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)))LIKE(x''))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (('W遽?,oVd') BETWEEN ((t0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (t0.c1)))LIKE(x''))) ORDER BY (('W遽?,oVd') BETWEEN ((t0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (v0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (v0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON (v0.c0 COLLATE BINARY IN ()) WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (json_array_length(0xffffffffb759f8c8)) AND (CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON ((((vt0.c0)IS NOT(t0.c1))) ISNULL) WHERE ((((v0.c0 IN (vt0.c0, t0.c0))) NOT NULL)) ORDER BY ((((((t0.c1)+(0.8654274348971945)))AND(1552806026)))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0, t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (json_array_length(0Xffffffffb759f8c8)) AND (CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON ((((vt0.c0)IS NOT(t0.c1))) ISNULL) ORDER BY ((((((t0.c1)+(0.8654274348971945)))AND(1552806026)))OR(NULL)) ASC);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (json_array_length(0xffffffffb759f8c8)) AND (CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON ((((vt0.c0)IS NOT(t0.c1))) ISNULL) WHERE ((((v0.c0 IN (vt0.c0, t0.c0))) NOT NULL)) ORDER BY ((((((t0.c1)+(0.8654274348971945)))AND(1552806026)))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0, t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((v0.c0) NOT NULL)) BETWEEN (json_array_length(0Xffffffffb759f8c8)) AND (CAST(vt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON ((((vt0.c0)IS NOT(t0.c1))) ISNULL) ORDER BY ((((((t0.c1)+(0.8654274348971945)))AND(1552806026)))OR(NULL)) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((901737337))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((901737337))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((901737337))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((901737337))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ()))LIKE(IFNULL(DISTINCT vt0.c0, vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((901737337))) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((((((~ (t0.c0)))AND(((((t0.c32)OR(t0.c32)))OR(v0.c0)))))OR(v0.c0)))AND(((0.0948403788161093) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(((t0.c32) ISNULL)))) ORDER BY ((((t0.c1) IS TRUE)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (t0.c0)))AND(((((t0.c32)OR(t0.c32)))OR(v0.c0)))))OR(v0.c0)))AND(((0.0948403788161093) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(((t0.c32) ISNULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1) IS TRUE)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((((((~ (t0.c0)))AND(((((t0.c32)OR(t0.c32)))OR(v0.c0)))))OR(v0.c0)))AND(((0.0948403788161093) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(((t0.c32) ISNULL)))) ORDER BY ((((t0.c1) IS TRUE)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (t0.c0)))AND(((((t0.c32)OR(t0.c32)))OR(v0.c0)))))OR(v0.c0)))AND(((0.0948403788161093) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(((t0.c32) ISNULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1) IS TRUE)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((((((~ (t0.c0)))AND(((((t0.c32)OR(t0.c32)))OR(v0.c0)))))OR(v0.c0)))AND(((0.0948403788161093) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(((t0.c32) ISNULL)))) ORDER BY ((((t0.c1) IS TRUE)) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c1 COLLATE NOCASE)>=(json_insert(x'895d', t0.c1, t0.c0, t0.c1, t0.c32)))) ORDER BY x'' DESC, ((v0.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>=(json_insert(x'895d', t0.c1, t0.c0, t0.c1, t0.c32)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY x'' DESC, ((v0.c0) ISNULL));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c1 COLLATE NOCASE)>=(json_insert(x'895d', t0.c1, t0.c0, t0.c1, t0.c32)))) ORDER BY x'' DESC, ((v0.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>=(json_insert(x'895d', t0.c1, t0.c0, t0.c1, t0.c32)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY x'' DESC, ((v0.c0) ISNULL));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((vt0.c1 COLLATE NOCASE)>=(json_insert(x'895d', t0.c1, t0.c0, t0.c1, t0.c32)))) ORDER BY x'' DESC, ((v0.c0) ISNULL);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)) AS REAL)) ORDER BY ((((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('1745179449'))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)), NULLIF(vt0.c0, x''), ((0.6548549695035228)&(vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))>((vt0.c1)))) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('1745179449'))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)), NULLIF(vt0.c0, x''), ((0.6548549695035228)&(vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))>((vt0.c1)))) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)) AS REAL)) ORDER BY ((((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('1745179449'))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)), NULLIF(vt0.c0, x''), ((0.6548549695035228)&(vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))>((vt0.c1)))) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('1745179449'))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)), NULLIF(vt0.c0, x''), ((0.6548549695035228)&(vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))>((vt0.c1)))) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((vt0.c1 IN (vt0.c0, vt0.c1, vt0.c0)) AS REAL)) ORDER BY ((((((NULL, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('1745179449'))))>=((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)), NULLIF(vt0.c0, x''), ((0.6548549695035228)&(vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((((vt0.c0))>((vt0.c1)))) AND ((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE ((((NOT (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE ((((NOT (t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN v0 WHERE ((((NOT (t0.c1))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL)) ORDER BY vt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c32)))OR(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(t0.c2 AS REAL)))) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c32)))OR(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c32)))OR(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(t0.c2 AS REAL)))) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c32)))OR(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c32)))OR(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)))))AND(CAST(t0.c2 AS REAL)))) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CASE (+ (t0.c1))  WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT NULL) END WHERE ((((t0.c0) BETWEEN ('-90182414') AND (v0.c0)) IN ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN ('-90182414') AND (v0.c0)) IN ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE (+ (t0.c1))  WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT NULL) END);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CASE (+ (t0.c1))  WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT NULL) END WHERE ((((t0.c0) BETWEEN ('-90182414') AND (v0.c0)) IN ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN ('-90182414') AND (v0.c0)) IN ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CASE (+ (t0.c1))  WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT NULL) END);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CASE (+ (t0.c1))  WHEN CAST(t0.c2 AS INTEGER) THEN ((t0.c2) NOT NULL) END WHERE ((((t0.c0) BETWEEN ('-90182414') AND (v0.c0)) IN ((t0.c0 IN ()))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND(v0.c0))) ORDER BY ((LIKELIHOOD(v0.c0, 0.22134517347317395))/(UPPER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.22134517347317395))/(UPPER(DISTINCT v0.c0))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND(v0.c0))) ORDER BY ((LIKELIHOOD(v0.c0, 0.22134517347317395))/(UPPER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.22134517347317395))/(UPPER(DISTINCT v0.c0))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)GLOB(v0.c0)))AND(((v0.c0)LIKE(v0.c0)))))AND(v0.c0))) ORDER BY ((LIKELIHOOD(v0.c0, 0.22134517347317395))/(UPPER(DISTINCT v0.c0)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))AND(t0.c32)))AND(t0.c32)))IS NOT(((t0.c0) IS TRUE))) WHERE (((((vt0.c0)=(t0.c1)))||(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(t0.c1)))||(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))AND(t0.c32)))AND(t0.c32)))IS NOT(((t0.c0) IS TRUE))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))AND(t0.c32)))AND(t0.c32)))IS NOT(((t0.c0) IS TRUE))) WHERE (((((vt0.c0)=(t0.c1)))||(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(t0.c1)))||(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))AND(t0.c32)))AND(t0.c32)))IS NOT(((t0.c0) IS TRUE))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((((((((t0.c0)OR(vt0.c0)))AND(t0.c1)))AND(t0.c32)))AND(t0.c32)))IS NOT(((t0.c0) IS TRUE))) WHERE (((((vt0.c0)=(t0.c1)))||(CAST(vt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c1)OR(t0.c1)) COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)OR(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c1)OR(t0.c1)) COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)OR(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c1)OR(t0.c1)) COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (INSTR((v0.c0 IN ()), ((v0.c0) IS FALSE))) ORDER BY vt0.c1 DESC  NULLS FIRST, CAST(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR((v0.c0 IN ()), ((v0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 DESC  NULLS FIRST, CAST(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM vt0, v0 WHERE (INSTR((v0.c0 IN ()), ((v0.c0) IS FALSE))) ORDER BY vt0.c1 DESC  NULLS FIRST, CAST(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((INSTR((v0.c0 IN ()), ((v0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 DESC  NULLS FIRST, CAST(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM vt0, v0 WHERE (INSTR((v0.c0 IN ()), ((v0.c0) IS FALSE))) ORDER BY vt0.c1 DESC  NULLS FIRST, CAST(((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)) AS BLOB) ASC;
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR('1551313076')))OR(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(NULL AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR('1551313076')))OR(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(NULL AS BLOB)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR('1551313076')))OR(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(NULL AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR('1551313076')))OR(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(NULL AS BLOB)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR('1551313076')))OR(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(NULL AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c2) IS TRUE))&((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE))&((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c2) IS TRUE))&((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE))&((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c2) IS TRUE))&((+ (vt0.c0)))));
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON vt0.c1 WHERE (((vt0.c1)&(t0.c32)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&(t0.c32)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON vt0.c1);
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON vt0.c1 WHERE (((vt0.c1)&(t0.c32)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&(t0.c32)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t0 ON vt0.c1);
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON vt0.c1 WHERE (((vt0.c1)&(t0.c32)) COLLATE BINARY);
SELECT * FROM v0 NOT INDEXED, t0 WHERE (((CASE t0.c1  WHEN t0.c1 THEN v0.c0 ELSE t0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (t0.c0) AND (NULL))) AND (t0.c32 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c1 THEN v0.c0 ELSE t0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (t0.c0) AND (NULL))) AND (t0.c32 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0 NOT INDEXED, t0 WHERE (((CASE t0.c1  WHEN t0.c1 THEN v0.c0 ELSE t0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (t0.c0) AND (NULL))) AND (t0.c32 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN t0.c1 THEN v0.c0 ELSE t0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (t0.c0) AND (NULL))) AND (t0.c32 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0 NOT INDEXED, t0 WHERE (((CASE t0.c1  WHEN t0.c1 THEN v0.c0 ELSE t0.c1 END) NOT BETWEEN (((v0.c0) BETWEEN (t0.c0) AND (NULL))) AND (t0.c32 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), v0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))))AND((t0.c0 IN (t0.c1)))))AND(0.048534392744858046)))AND(t0.c2 COLLATE RTRIM)))OR((((t0.c2, t0.c32, t0.c2, t0.c2, NULL))>=((t0.c0, t0.c2, t0.c1, t0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))))AND((t0.c0 IN (t0.c1)))))AND(0.048534392744858046)))AND(t0.c2 COLLATE RTRIM)))OR((((t0.c2, t0.c32, t0.c2, t0.c2, NULL))>=((t0.c0, t0.c2, t0.c1, t0.c2, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))))AND((t0.c0 IN (t0.c1)))))AND(0.048534392744858046)))AND(t0.c2 COLLATE RTRIM)))OR((((t0.c2, t0.c32, t0.c2, t0.c2, NULL))>=((t0.c0, t0.c2, t0.c1, t0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))))AND((t0.c0 IN (t0.c1)))))AND(0.048534392744858046)))AND(t0.c2 COLLATE RTRIM)))OR((((t0.c2, t0.c32, t0.c2, t0.c2, NULL))>=((t0.c0, t0.c2, t0.c1, t0.c2, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((((((((t0.c1)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))))AND((t0.c0 IN (t0.c1)))))AND(0.048534392744858046)))AND(t0.c2 COLLATE RTRIM)))OR((((t0.c2, t0.c32, t0.c2, t0.c2, NULL))>=((t0.c0, t0.c2, t0.c1, t0.c2, t0.c2))))));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0)>=(v0.c0)))AND(((((0.6177371709042144)OR(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(v0.c0)))AND(((((0.6177371709042144)OR(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0)>=(v0.c0)))AND(((((0.6177371709042144)OR(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>=(v0.c0)))AND(((((0.6177371709042144)OR(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0)>=(v0.c0)))AND(((((0.6177371709042144)OR(v0.c0)))OR(vt0.c0)))));
SELECT * FROM v0, t0, vt0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))  WHEN ((v0.c0) IS TRUE) THEN (~ ('')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))  WHEN ((v0.c0) IS TRUE) THEN (~ ('')) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))  WHEN ((v0.c0) IS TRUE) THEN (~ ('')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))  WHEN ((v0.c0) IS TRUE) THEN (~ ('')) END) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (CASE ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))  WHEN ((v0.c0) IS TRUE) THEN (~ ('')) END);
SELECT * FROM v0, t0 WHERE (((((CAST(t0.c32 AS NUMERIC))AND(((((t0.c0)OR(t0.c32)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c32 AS NUMERIC))AND(((((t0.c0)OR(t0.c32)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((CAST(t0.c32 AS NUMERIC))AND(((((t0.c0)OR(t0.c32)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c32 AS NUMERIC))AND(((((t0.c0)OR(t0.c32)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((CAST(t0.c32 AS NUMERIC))AND(((((t0.c0)OR(t0.c32)))OR(t0.c0)))))AND(CAST(t0.c0 AS BLOB))));
SELECT * FROM t0 WHERE (((((((t0.c32))==((t0.c0)))))>=(((~ (t0.c2)))))) ORDER BY t0.c32, ((t0.c2) IS FALSE) DESC, (((- (t0.c1)))>>(CASE WHEN '&m).w1{s' THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c32))==((t0.c0)))))>=(((~ (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c32, ((t0.c2) IS FALSE) DESC, (((- (t0.c1)))>>(CASE WHEN '&m).w1{s' THEN t0.c0 END))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((t0.c32))==((t0.c0)))))>=(((~ (t0.c2)))))) ORDER BY t0.c32, ((t0.c2) IS FALSE) DESC, (((- (t0.c1)))>>(CASE WHEN '&m).w1{s' THEN t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c32))==((t0.c0)))))>=(((~ (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c32, ((t0.c2) IS FALSE) DESC, (((- (t0.c1)))>>(CASE WHEN '&m).w1{s' THEN t0.c0 END))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((t0.c32))==((t0.c0)))))>=(((~ (t0.c2)))))) ORDER BY t0.c32, ((t0.c2) IS FALSE) DESC, (((- (t0.c1)))>>(CASE WHEN '&m).w1{s' THEN t0.c0 END))  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t0 WHERE (CASE (((vt0.c0))<>((v0.c0)))  WHEN CAST(v0.c0 AS TEXT) THEN ((0.4388350514571385) NOTNULL) ELSE t0.c32 END) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))<>((v0.c0)))  WHEN CAST(v0.c0 AS TEXT) THEN ((0.4388350514571385) NOTNULL) ELSE t0.c32 END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY v0.c0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CASE (((vt0.c0))<>((v0.c0)))  WHEN CAST(v0.c0 AS TEXT) THEN ((0.4388350514571385) NOTNULL) ELSE t0.c32 END) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))<>((v0.c0)))  WHEN CAST(v0.c0 AS TEXT) THEN ((0.4388350514571385) NOTNULL) ELSE t0.c32 END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY v0.c0);
SELECT ALL * FROM v0, vt0, t0 WHERE (CASE (((vt0.c0))<>((v0.c0)))  WHEN CAST(v0.c0 AS TEXT) THEN ((0.4388350514571385) NOTNULL) ELSE t0.c32 END) ORDER BY v0.c0;
SELECT COUNT(*) FROM t0, v0 WHERE (((HEX(t0.c1))/(CAST(NULL AS NUMERIC)))) ORDER BY (((NOT (t0.c0)))GLOB((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c1))/(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((NOT (t0.c0)))GLOB((t0.c2 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((HEX(t0.c1))/(CAST(NULL AS NUMERIC)))) ORDER BY (((NOT (t0.c0)))GLOB((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c1))/(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((NOT (t0.c0)))GLOB((t0.c2 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((HEX(t0.c1))/(CAST(NULL AS NUMERIC)))) ORDER BY (((NOT (t0.c0)))GLOB((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE v0.c0  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN (NOT (v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN (NOT (v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE v0.c0  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN (NOT (v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN (NOT (v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE v0.c0  WHEN ((vt0.c1) NOTNULL) THEN vt0.c0 WHEN (NOT (v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) ELSE v0.c0 END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)IS(''))))) ORDER BY LIKELIHOOD(v0.c0 COLLATE BINARY, 0.23020934337474286) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)IS(''))))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(v0.c0 COLLATE BINARY, 0.23020934337474286) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)IS(''))))) ORDER BY LIKELIHOOD(v0.c0 COLLATE BINARY, 0.23020934337474286) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)IS(''))))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(v0.c0 COLLATE BINARY, 0.23020934337474286) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)IS(''))))) ORDER BY LIKELIHOOD(v0.c0 COLLATE BINARY, 0.23020934337474286) DESC;
SELECT * FROM t0, v0 CROSS JOIN vt0 ON ((0xffffffffd99027ff) ISNULL) WHERE ((+ (CASE v0.c0  WHEN vt0.c1 THEN t0.c0 END))) ORDER BY CAST(t0.c1 COLLATE NOCASE AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN vt0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt0 ON ((0xffffffffd99027ff) ISNULL) ORDER BY CAST(t0.c1 COLLATE NOCASE AS BLOB) DESC);
SELECT * FROM t0, v0 CROSS JOIN vt0 ON ((0xffffffffd99027ff) ISNULL) WHERE ((+ (CASE v0.c0  WHEN vt0.c1 THEN t0.c0 END))) ORDER BY CAST(t0.c1 COLLATE NOCASE AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN vt0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt0 ON ((0xffffffffd99027ff) ISNULL) ORDER BY CAST(t0.c1 COLLATE NOCASE AS BLOB) DESC);
SELECT * FROM t0, v0 CROSS JOIN vt0 ON ((0xffffffffd99027ff) ISNULL) WHERE ((+ (CASE v0.c0  WHEN vt0.c1 THEN t0.c0 END))) ORDER BY CAST(t0.c1 COLLATE NOCASE AS BLOB) DESC;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (LIKELY(((t0.c1) IS TRUE))) ORDER BY (((~ (t0.c0)))>>(x'de0c')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c1) IS TRUE))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (((~ (t0.c0)))>>(x'de0c')) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (LIKELY(((t0.c1) IS TRUE))) ORDER BY (((~ (t0.c0)))>>(x'de0c')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c1) IS TRUE))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (((~ (t0.c0)))>>(x'de0c')) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (LIKELY(((t0.c1) IS TRUE))) ORDER BY (((~ (t0.c0)))>>(x'de0c')) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c0 IN (0.750532381883733)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (0.750532381883733)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (0.750532381883733)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (0.750532381883733)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (0.750532381883733)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c32)))) NOTNULL) WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((x''))))-((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((x''))))-((+ (t0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c32)))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c32)))) NOTNULL) WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((x''))))-((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((x''))))-((+ (t0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c32)))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c32)))) NOTNULL) WHERE ((((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((x''))))-((+ (t0.c0)))));
SELECT * FROM t0, vt0 WHERE (json_insert(CAST(6.77225304E8 AS NUMERIC), NULL, ((((vt0.c0)AND(t0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(6.77225304E8 AS NUMERIC), NULL, ((((vt0.c0)AND(t0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_insert(CAST(6.77225304E8 AS NUMERIC), NULL, ((((vt0.c0)AND(t0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_insert(CAST(6.77225304E8 AS NUMERIC), NULL, ((((vt0.c0)AND(t0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_insert(CAST(6.77225304E8 AS NUMERIC), NULL, ((((vt0.c0)AND(t0.c0)))AND(vt0.c1))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOT BETWEEN ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOT BETWEEN ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, vt0, v0 WHERE ((- (((vt0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((- (((vt0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((- (((vt0.c0)LIKE(t0.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) NOTNULL) WHERE (((CAST(t0.c32 AS REAL))>=((- (t0.c32))))) ORDER BY (((((vt0.c0) IS TRUE)))>(((((0.8142052215570841, vt0.c0, t0.c1))>(('', t0.c1, t0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c32 AS REAL))>=((- (t0.c32))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) NOTNULL) ORDER BY (((((vt0.c0) IS TRUE)))>(((((0.8142052215570841, vt0.c0, t0.c1))>(('', t0.c1, t0.c2))))))  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) NOTNULL) WHERE (((CAST(t0.c32 AS REAL))>=((- (t0.c32))))) ORDER BY (((((vt0.c0) IS TRUE)))>(((((0.8142052215570841, vt0.c0, t0.c1))>(('', t0.c1, t0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c32 AS REAL))>=((- (t0.c32))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) NOTNULL) ORDER BY (((((vt0.c0) IS TRUE)))>(((((0.8142052215570841, vt0.c0, t0.c1))>(('', t0.c1, t0.c2))))))  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) NOTNULL) WHERE (((CAST(t0.c32 AS REAL))>=((- (t0.c32))))) ORDER BY (((((vt0.c0) IS TRUE)))>(((((0.8142052215570841, vt0.c0, t0.c1))>(('', t0.c1, t0.c2))))))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (LIKE(((((((((t0.c1)AND(t0.c32)))AND(t0.c32)))AND(t0.c32)))OR(t0.c0)), ((vt0.c0)<<(vt0.c1)), 'a'));
SELECT SUM(count) FROM (SELECT ((LIKE(((((((((t0.c1)AND(t0.c32)))AND(t0.c32)))AND(t0.c32)))OR(t0.c0)), ((vt0.c0)<<(vt0.c1)), 'a')) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LIKE(((((((((t0.c1)AND(t0.c32)))AND(t0.c32)))AND(t0.c32)))OR(t0.c0)), ((vt0.c0)<<(vt0.c1)), 'a'));
SELECT SUM(count) FROM (SELECT ((LIKE(((((((((t0.c1)AND(t0.c32)))AND(t0.c32)))AND(t0.c32)))OR(t0.c0)), ((vt0.c0)<<(vt0.c1)), 'a')) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LIKE(((((((((t0.c1)AND(t0.c32)))AND(t0.c32)))AND(t0.c32)))OR(t0.c0)), ((vt0.c0)<<(vt0.c1)), 'a'));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c32)/(((t0.c1)<<(t0.c1))))) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN load_extension(v0.c0) THEN ((t0.c1)IS(t0.c0)) WHEN ((t0.c1)-(v0.c0)) THEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) WHEN (t0.c0 IN ()) THEN LIKELIHOOD(DISTINCT 'j\rYt', 0.43443933280783353) END  NULLS FIRST, t0.c32  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32)/(((t0.c1)<<(t0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN load_extension(v0.c0) THEN ((t0.c1)IS(t0.c0)) WHEN ((t0.c1)-(v0.c0)) THEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) WHEN (t0.c0 IN ()) THEN LIKELIHOOD(DISTINCT 'j\rYt', 0.43443933280783353) END  NULLS FIRST, t0.c32  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c32)/(((t0.c1)<<(t0.c1))))) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN load_extension(v0.c0) THEN ((t0.c1)IS(t0.c0)) WHEN ((t0.c1)-(v0.c0)) THEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) WHEN (t0.c0 IN ()) THEN LIKELIHOOD(DISTINCT 'j\rYt', 0.43443933280783353) END  NULLS FIRST, t0.c32  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32)/(((t0.c1)<<(t0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN load_extension(v0.c0) THEN ((t0.c1)IS(t0.c0)) WHEN ((t0.c1)-(v0.c0)) THEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) WHEN (t0.c0 IN ()) THEN LIKELIHOOD(DISTINCT 'j\rYt', 0.43443933280783353) END  NULLS FIRST, t0.c32  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c32)/(((t0.c1)<<(t0.c1))))) ORDER BY CASE t0.c0 COLLATE RTRIM  WHEN load_extension(v0.c0) THEN ((t0.c1)IS(t0.c0)) WHEN ((t0.c1)-(v0.c0)) THEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) WHEN (t0.c0 IN ()) THEN LIKELIHOOD(DISTINCT 'j\rYt', 0.43443933280783353) END  NULLS FIRST, t0.c32  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (((((((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE NULL END)OR((((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32))))))AND((- (NULL)))))OR((((NULL, '*ᜯ', t0.c0))<=((t0.c2, t0.c32, v0.c0))))))OR(x''))) ORDER BY json_extract(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END, ((t0.c2)<=(t0.c2)), (+ (t0.c32)), ((t0.c0) NOTNULL)), ((CAST(1343854584 AS REAL))+(CASE t0.c32  WHEN t0.c32 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE NULL END)OR((((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32))))))AND((- (NULL)))))OR((((NULL, '*ᜯ', t0.c0))<=((t0.c2, t0.c32, v0.c0))))))OR(x''))) IS TRUE)  as count FROM t0, v0 ORDER BY json_extract(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END, ((t0.c2)<=(t0.c2)), (+ (t0.c32)), ((t0.c0) NOTNULL)), ((CAST(1343854584 AS REAL))+(CASE t0.c32  WHEN t0.c32 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((((((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE NULL END)OR((((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32))))))AND((- (NULL)))))OR((((NULL, '*ᜯ', t0.c0))<=((t0.c2, t0.c32, v0.c0))))))OR(x''))) ORDER BY json_extract(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END, ((t0.c2)<=(t0.c2)), (+ (t0.c32)), ((t0.c0) NOTNULL)), ((CAST(1343854584 AS REAL))+(CASE t0.c32  WHEN t0.c32 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE NULL END)OR((((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32))))))AND((- (NULL)))))OR((((NULL, '*ᜯ', t0.c0))<=((t0.c2, t0.c32, v0.c0))))))OR(x''))) IS TRUE)  as count FROM t0, v0 ORDER BY json_extract(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END, ((t0.c2)<=(t0.c2)), (+ (t0.c32)), ((t0.c0) NOTNULL)), ((CAST(1343854584 AS REAL))+(CASE t0.c32  WHEN t0.c32 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((((((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE NULL END)OR((((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c32))))))AND((- (NULL)))))OR((((NULL, '*ᜯ', t0.c0))<=((t0.c2, t0.c32, v0.c0))))))OR(x''))) ORDER BY json_extract(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END, ((t0.c2)<=(t0.c2)), (+ (t0.c32)), ((t0.c0) NOTNULL)), ((CAST(1343854584 AS REAL))+(CASE t0.c32  WHEN t0.c32 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((SQLITE_COMPILEOPTION_GET(v0.c0)))>((((v0.c0) IS FALSE))))) ORDER BY (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (v0.c0 COLLATE NOCASE)), CASE WHEN json_extract(v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS FIRST, CAST((v0.c0 IN ()) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((SQLITE_COMPILEOPTION_GET(v0.c0)))>((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (v0.c0 COLLATE NOCASE)), CASE WHEN json_extract(v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS FIRST, CAST((v0.c0 IN ()) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((SQLITE_COMPILEOPTION_GET(v0.c0)))>((((v0.c0) IS FALSE))))) ORDER BY (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (v0.c0 COLLATE NOCASE)), CASE WHEN json_extract(v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS FIRST, CAST((v0.c0 IN ()) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((SQLITE_COMPILEOPTION_GET(v0.c0)))>((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (v0.c0 COLLATE NOCASE)), CASE WHEN json_extract(v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS FIRST, CAST((v0.c0 IN ()) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((SQLITE_COMPILEOPTION_GET(v0.c0)))>((((v0.c0) IS FALSE))))) ORDER BY (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (v0.c0 COLLATE NOCASE)), CASE WHEN json_extract(v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS FIRST, CAST((v0.c0 IN ()) AS BLOB)  NULLS FIRST;
SELECT * FROM t0 INNER JOIN v0 ON (((- (t0.c0)))IS(x'fa03')) WHERE (((v0.c0 IN ()) IN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((v0.c0)))))) ORDER BY CAST(((t0.c1)>>(t0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((- (t0.c0)))IS(x'fa03')) ORDER BY CAST(((t0.c1)>>(t0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON (((- (t0.c0)))IS(x'fa03')) WHERE (((v0.c0 IN ()) IN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((v0.c0)))))) ORDER BY CAST(((t0.c1)>>(t0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((- (t0.c0)))IS(x'fa03')) ORDER BY CAST(((t0.c1)>>(t0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON (((- (t0.c0)))IS(x'fa03')) WHERE (((v0.c0 IN ()) IN ((((t0.c1)) BETWEEN ((t0.c2)) AND ((v0.c0)))))) ORDER BY CAST(((t0.c1)>>(t0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (((NULLIF(DISTINCT vt0.c0, t0.c0))||((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, t0.c0))||((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULLIF(DISTINCT vt0.c0, t0.c0))||((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, t0.c0))||((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULLIF(DISTINCT vt0.c0, t0.c0))||((NOT (vt0.c1)))));
SELECT * FROM v0, vt0 WHERE (LIKELY(DISTINCT CASE WHEN vt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE WHEN vt0.c1 THEN v0.c0 END)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LIKELY(DISTINCT CASE WHEN vt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE WHEN vt0.c1 THEN v0.c0 END)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LIKELY(DISTINCT CASE WHEN vt0.c1 THEN v0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (vt0.c0)) END) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c1))==((vt0.c1))))))OR(SQLITE_COMPILEOPTION_USED(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c1))=((vt0.c1))))))OR(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (vt0.c0)) END) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c1))==((vt0.c1))))))OR(SQLITE_COMPILEOPTION_USED(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c1))=((vt0.c1))))))OR(SQLITE_COMPILEOPTION_USED(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (- (vt0.c0)) END) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c1))==((vt0.c1))))))OR(SQLITE_COMPILEOPTION_USED(vt0.c0)));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (t0.c2 IN ()), ((t0.c2)OR(v0.c0)))) AND (((NULL IN ()), ((NULL)*(v0.c0)), ((t0.c2)AND(x'831b'))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (t0.c2 IN ()), ((t0.c2)OR(v0.c0)))) AND (((NULL IN ()), ((NULL)*(v0.c0)), ((t0.c2)AND(x'831b')))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (t0.c2 IN ()), ((t0.c2)OR(v0.c0)))) AND (((NULL IN ()), ((NULL)*(v0.c0)), ((t0.c2)AND(x'831b'))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (t0.c2 IN ()), ((t0.c2)OR(v0.c0)))) AND (((NULL IN ()), ((NULL)*(v0.c0)), ((t0.c2)AND(x'831b')))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((t0.c2, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (t0.c2 IN ()), ((t0.c2)OR(v0.c0)))) AND (((NULL IN ()), ((NULL)*(v0.c0)), ((t0.c2)AND(x'831b'))))));
SELECT * FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON CAST(TRIM(t0.c1, t0.c2) AS NUMERIC) WHERE ((((t0.c0 IN ())) BETWEEN ((((vt0.c1))<>((vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN ((((vt0.c1))<>((vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(TRIM(t0.c1, t0.c2) AS NUMERIC));
SELECT * FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON CAST(TRIM(t0.c1, t0.c2) AS NUMERIC) WHERE ((((t0.c0 IN ())) BETWEEN ((((vt0.c1))<>((vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) BETWEEN ((((vt0.c1))<>((vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(TRIM(t0.c1, t0.c2) AS NUMERIC));
SELECT * FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON CAST(TRIM(t0.c1, t0.c2) AS NUMERIC) WHERE ((((t0.c0 IN ())) BETWEEN ((((vt0.c1))<>((vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c2) IS FALSE)))<=((LIKE(t0.c2, t0.c1, '1'))))) ORDER BY ((t0.c1)|(t0.c2)) COLLATE BINARY  NULLS FIRST, CAST('1568478007' AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2) IS FALSE)))<=((LIKE(t0.c2, t0.c1, '1'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c1)|(t0.c2)) COLLATE BINARY  NULLS FIRST, CAST('1568478007' AS REAL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c2) IS FALSE)))<=((LIKE(t0.c2, t0.c1, '1'))))) ORDER BY ((t0.c1)|(t0.c2)) COLLATE BINARY  NULLS FIRST, CAST('1568478007' AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2) IS FALSE)))<=((LIKE(t0.c2, t0.c1, '1'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c1)|(t0.c2)) COLLATE BINARY  NULLS FIRST, CAST('1568478007' AS REAL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c2) IS FALSE)))<=((LIKE(t0.c2, t0.c1, '1'))))) ORDER BY ((t0.c1)|(t0.c2)) COLLATE BINARY  NULLS FIRST, CAST('1568478007' AS REAL);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)OR('8I'))) AND (v0.c0))) ORDER BY (((- (NULL)))-((((v0.c0, v0.c0, v0.c0))>((v0.c0, '-335583791', v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)OR('8I'))) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((- (NULL)))-((((v0.c0, v0.c0, v0.c0))>((v0.c0, '-335583791', v0.c0))))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)OR('8I'))) AND (v0.c0))) ORDER BY (((- (NULL)))-((((v0.c0, v0.c0, v0.c0))>((v0.c0, '-335583791', v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)OR('8I'))) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((- (NULL)))-((((v0.c0, v0.c0, v0.c0))>((v0.c0, '-335583791', v0.c0))))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((v0.c0)OR('8I'))) AND (v0.c0))) ORDER BY (((- (NULL)))-((((v0.c0, v0.c0, v0.c0))>((v0.c0, '-335583791', v0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE ((v0.c0)*(v0.c0))  WHEN (((t0.c32, t0.c2, vt0.c0))!=((t0.c2, vt0.c1, v0.c0))) THEN ((t0.c32)|(t0.c2)) END) ORDER BY CASE WHEN t0.c0 THEN ((t0.c2)*(vt0.c1)) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)*(v0.c0))  WHEN (((t0.c32, t0.c2, vt0.c0))!=((t0.c2, vt0.c1, v0.c0))) THEN ((t0.c32)|(t0.c2)) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN t0.c0 THEN ((t0.c2)*(vt0.c1)) ELSE NULL END DESC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE ((v0.c0)*(v0.c0))  WHEN (((t0.c32, t0.c2, vt0.c0))!=((t0.c2, vt0.c1, v0.c0))) THEN ((t0.c32)|(t0.c2)) END) ORDER BY CASE WHEN t0.c0 THEN ((t0.c2)*(vt0.c1)) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)*(v0.c0))  WHEN (((t0.c32, t0.c2, vt0.c0))!=((t0.c2, vt0.c1, v0.c0))) THEN ((t0.c32)|(t0.c2)) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY CASE WHEN t0.c0 THEN ((t0.c2)*(vt0.c1)) ELSE NULL END DESC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE ((v0.c0)*(v0.c0))  WHEN (((t0.c32, t0.c2, vt0.c0))!=((t0.c2, vt0.c1, v0.c0))) THEN ((t0.c32)|(t0.c2)) END) ORDER BY CASE WHEN t0.c0 THEN ((t0.c2)*(vt0.c1)) ELSE NULL END DESC;
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c0)))+(((vt0.c0) BETWEEN (t0.c32) AND (t0.c2))))) ORDER BY 0.8999401189424046  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))+(((vt0.c0) BETWEEN (t0.c32) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8999401189424046  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c0)))+(((vt0.c0) BETWEEN (t0.c32) AND (t0.c2))))) ORDER BY 0.8999401189424046  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))+(((vt0.c0) BETWEEN (t0.c32) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.8999401189424046  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c0)))+(((vt0.c0) BETWEEN (t0.c32) AND (t0.c2))))) ORDER BY 0.8999401189424046  NULLS LAST;
SELECT * FROM v0, t0, vt0 WHERE (((- (t0.c1)) IN ())) ORDER BY ((((((((CASE WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END)OR(0.24157314208502656)))OR((vt0.c0 IN ()))))AND((NOT (t0.c32)))))OR((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t0.c1)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((CASE WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END)OR(0.24157314208502656)))OR((vt0.c0 IN ()))))AND((NOT (t0.c32)))))OR((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (((- (t0.c1)) IN ())) ORDER BY ((((((((CASE WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END)OR(0.24157314208502656)))OR((vt0.c0 IN ()))))AND((NOT (t0.c32)))))OR((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (t0.c1)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((((((CASE WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END)OR(0.24157314208502656)))OR((vt0.c0 IN ()))))AND((NOT (t0.c32)))))OR((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0, t0, vt0 WHERE (((- (t0.c1)) IN ())) ORDER BY ((((((((CASE WHEN t0.c2 THEN v0.c0 ELSE v0.c0 END)OR(0.24157314208502656)))OR((vt0.c0 IN ()))))AND((NOT (t0.c32)))))OR((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (LOWER((t0.c32 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER((t0.c32 IN ()))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LOWER((t0.c32 IN ())));
SELECT SUM(count) FROM (SELECT ((LOWER((t0.c32 IN ()))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LOWER((t0.c32 IN ())));
SELECT COUNT(*) FROM v0 WHERE ((+ (LIKELY(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (LIKELY(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELY(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (LIKELY(DISTINCT v0.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c2) AND (0.9801480297190875)) IN ('b|'))) ORDER BY (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (t0.c2) AND (0.9801480297190875)) IN ('b|'))) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c2) AND (0.9801480297190875)) IN ('b|'))) ORDER BY (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) BETWEEN (t0.c2) AND (0.9801480297190875)) IN ('b|'))) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c2) AND (0.9801480297190875)) IN ('b|'))) ORDER BY (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS LAST, t0.c2  NULLS FIRST;
SELECT * FROM vt0, t0, v0 WHERE ((((~ ('0.6177371709042144'))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN t0.c32 THEN x'' ELSE t0.c32 END) AND (x''))) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((((~ ('0.6177371709042144'))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN t0.c32 THEN x'' ELSE t0.c32 END) AND (x''))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CAST((v0.c0 IN ()) AS REAL));
SELECT * FROM vt0, t0, v0 WHERE ((((~ ('0.6177371709042144'))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN t0.c32 THEN x'' ELSE t0.c32 END) AND (x''))) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((((~ ('0.6177371709042144'))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN t0.c32 THEN x'' ELSE t0.c32 END) AND (x''))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY CAST((v0.c0 IN ()) AS REAL));
SELECT * FROM vt0, t0, v0 WHERE ((((~ ('0.6177371709042144'))) BETWEEN (CASE t0.c0  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN t0.c1 WHEN t0.c32 THEN x'' ELSE t0.c32 END) AND (x''))) ORDER BY CAST((v0.c0 IN ()) AS REAL);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL * FROM vt0, t0, v0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE (TRIM(((v0.c0)GLOB(vt0.c1)))) ORDER BY (((vt0.c1 IN ())) BETWEEN (((v0.c0)>=(vt0.c1))) AND (((NULL)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0)GLOB(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN (((v0.c0)>=(vt0.c1))) AND (((NULL)<(vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE (TRIM(((v0.c0)GLOB(vt0.c1)))) ORDER BY (((vt0.c1 IN ())) BETWEEN (((v0.c0)>=(vt0.c1))) AND (((NULL)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0)GLOB(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN (((v0.c0)>=(vt0.c1))) AND (((NULL)<(vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE (TRIM(((v0.c0)GLOB(vt0.c1)))) ORDER BY (((vt0.c1 IN ())) BETWEEN (((v0.c0)>=(vt0.c1))) AND (((NULL)<(vt0.c1))));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN t0 ON ((t0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) WHERE ((((((t0.c0)OR(t0.c1)))OR(t0.c0)) IN ((t0.c32 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(t0.c1)))OR(t0.c0)) IN ((t0.c32 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT * FROM vt0 CROSS JOIN t0 ON ((t0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) WHERE ((((((t0.c0)OR(t0.c1)))OR(t0.c0)) IN ((t0.c32 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(t0.c1)))OR(t0.c0)) IN ((t0.c32 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((t0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT * FROM vt0 CROSS JOIN t0 ON ((t0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) WHERE ((((((t0.c0)OR(t0.c1)))OR(t0.c0)) IN ((t0.c32 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON '472943983' WHERE (((TRIM(t0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON '472943983');
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON '472943983' WHERE (((TRIM(t0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON '472943983');
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON '472943983' WHERE (((TRIM(t0.c0)) IS TRUE));
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT vt0.c0))>>((x'792f' IN ())))) ORDER BY (((('485593933')/(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c0))>>((x'792f' IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((('485593933')/(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL))));
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT vt0.c0))>>((x'792f' IN ())))) ORDER BY (((('485593933')/(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c0))>>((x'792f' IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((('485593933')/(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL))));
SELECT * FROM v0, vt0 WHERE (((LIKELY(DISTINCT vt0.c0))>>((x'792f' IN ())))) ORDER BY (((('485593933')/(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND (((v0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT * FROM vt0, t0, v0 WHERE (((CAST(t0.c32 AS TEXT))IS NOT(((vt0.c0)IS NOT(v0.c0))))) ORDER BY ((((t0.c2 IN ())))<(((~ (v0.c0))))) ASC  NULLS LAST, ((((-2062818561)LIKE(t0.c32)))AND(((t0.c2)<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c32 AS TEXT))IS NOT(((vt0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c2 IN ())))<(((~ (v0.c0))))) ASC  NULLS LAST, ((((-2062818561)LIKE(t0.c32)))AND(((t0.c2)<(v0.c0)))) ASC);
SELECT * FROM vt0, t0, v0 WHERE (((CAST(t0.c32 AS TEXT))IS NOT(((vt0.c0)IS NOT(v0.c0))))) ORDER BY ((((t0.c2 IN ())))<(((~ (v0.c0))))) ASC  NULLS LAST, ((((-2062818561)LIKE(t0.c32)))AND(((t0.c2)<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c32 AS TEXT))IS NOT(((vt0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c2 IN ())))<(((~ (v0.c0))))) ASC  NULLS LAST, ((((-2062818561)LIKE(t0.c32)))AND(((t0.c2)<(v0.c0)))) ASC);
SELECT * FROM vt0, t0, v0 WHERE (((CAST(t0.c32 AS TEXT))IS NOT(((vt0.c0)IS NOT(v0.c0))))) ORDER BY ((((t0.c2 IN ())))<(((~ (v0.c0))))) ASC  NULLS LAST, ((((-2062818561)LIKE(t0.c32)))AND(((t0.c2)<(v0.c0)))) ASC;
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((((t0.c0) IS TRUE), t0.c2, NULL))<=(((+ (v0.c0)), (((v0.c0))=((v0.c0))), ((t0.c32) BETWEEN (t0.c2) AND (t0.c1))))) WHERE ((((((vt0.c0)-(t0.c32))))<=((CAST(t0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(t0.c32))))<=((CAST(t0.c1 AS NUMERIC))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((((t0.c0) IS TRUE), t0.c2, NULL))<=(((+ (v0.c0)), (((v0.c0))==((v0.c0))), ((t0.c32) BETWEEN (t0.c2) AND (t0.c1))))));
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((((t0.c0) IS TRUE), t0.c2, NULL))<=(((+ (v0.c0)), (((v0.c0))=((v0.c0))), ((t0.c32) BETWEEN (t0.c2) AND (t0.c1))))) WHERE ((((((vt0.c0)-(t0.c32))))<=((CAST(t0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)-(t0.c32))))<=((CAST(t0.c1 AS NUMERIC))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((((t0.c0) IS TRUE), t0.c2, NULL))<=(((+ (v0.c0)), (((v0.c0))==((v0.c0))), ((t0.c32) BETWEEN (t0.c2) AND (t0.c1))))));
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((((t0.c0) IS TRUE), t0.c2, NULL))<=(((+ (v0.c0)), (((v0.c0))=((v0.c0))), ((t0.c32) BETWEEN (t0.c2) AND (t0.c1))))) WHERE ((((((vt0.c0)-(t0.c32))))<=((CAST(t0.c1 AS NUMERIC)))));
SELECT ALL * FROM t0 WHERE ((t0.c32 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c32 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c32 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c32 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c32 COLLATE NOCASE IN ()));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (~ (json_object(v0.c0, t0.c32, t0.c1, t0.c0))) WHERE ((((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (~ (json_object(v0.c0, t0.c32, t0.c1, t0.c0))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (~ (json_object(v0.c0, t0.c32, t0.c1, t0.c0))) WHERE ((((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (~ (json_object(v0.c0, t0.c32, t0.c1, t0.c0))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (~ (json_object(v0.c0, t0.c32, t0.c1, t0.c0))) WHERE ((((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c1) ISNULL))));
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((0.5205578122018545) BETWEEN (t0.c1) AND (vt0.c1)))OR(DATETIME(t0.c32, vt0.c0, t0.c1, t0.c32, t0.c1, t0.c2, vt0.c0))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.5205578122018545) BETWEEN (t0.c1) AND (vt0.c1)))OR(DATETIME(t0.c32, vt0.c0, t0.c1, t0.c32, t0.c1, t0.c2, vt0.c0))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((0.5205578122018545) BETWEEN (t0.c1) AND (vt0.c1)))OR(DATETIME(t0.c32, vt0.c0, t0.c1, t0.c32, t0.c1, t0.c2, vt0.c0))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.5205578122018545) BETWEEN (t0.c1) AND (vt0.c1)))OR(DATETIME(t0.c32, vt0.c0, t0.c1, t0.c32, t0.c1, t0.c2, vt0.c0))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((0.5205578122018545) BETWEEN (t0.c1) AND (vt0.c1)))OR(DATETIME(t0.c32, vt0.c0, t0.c1, t0.c32, t0.c1, t0.c2, vt0.c0))))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((CAST(vt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((CAST(vt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((CAST(vt0.c1 AS REAL)))));
SELECT COUNT(*) FROM v0 WHERE (json_patch(HEX(v0.c0), (v0.c0 IN ()))) ORDER BY ((CAST(v0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(HEX(v0.c0), (v0.c0 IN ()))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (json_patch(HEX(v0.c0), (v0.c0 IN ()))) ORDER BY ((CAST(v0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(HEX(v0.c0), (v0.c0 IN ()))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (json_patch(HEX(v0.c0), (v0.c0 IN ()))) ORDER BY ((CAST(v0.c0 AS INTEGER)) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c32) AND (t0.c2))))>=((NULL)))) ORDER BY '_CIo염W8' DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOT BETWEEN (t0.c32) AND (t0.c2))))>=((NULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY '_CIo염W8' DESC, vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c32) AND (t0.c2))))>=((NULL)))) ORDER BY '_CIo염W8' DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOT BETWEEN (t0.c32) AND (t0.c2))))>=((NULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY '_CIo염W8' DESC, vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c32) AND (t0.c2))))>=((NULL)))) ORDER BY '_CIo염W8' DESC, vt0.c0;
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((((((((t0.c32)AND(t0.c32)))AND(t0.c1 COLLATE RTRIM)))AND(t0.c1 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c32)AND(t0.c32)))AND(t0.c1 COLLATE RTRIM)))AND(t0.c1 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((((((((t0.c32)AND(t0.c32)))AND(t0.c1 COLLATE RTRIM)))AND(t0.c1 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c32)AND(t0.c32)))AND(t0.c1 COLLATE RTRIM)))AND(t0.c1 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY ((((((((t0.c32)AND(t0.c32)))AND(t0.c1 COLLATE RTRIM)))AND(t0.c1 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))));
SELECT ALL * FROM v0, t0, vt0 WHERE (CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c1)) AS TEXT)) ORDER BY json(CAST(t0.c1 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY json(CAST(t0.c1 AS NUMERIC)) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c1)) AS TEXT)) ORDER BY json(CAST(t0.c1 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY json(CAST(t0.c1 AS NUMERIC)) ASC);
SELECT ALL * FROM v0, t0, vt0 WHERE (CAST(((((v0.c0)OR(vt0.c1)))AND(t0.c1)) AS TEXT)) ORDER BY json(CAST(t0.c1 AS NUMERIC)) ASC;
SELECT COUNT(*) FROM t0 INDEXED BY i52 WHERE (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c32 WHEN t0.c1 THEN '-444561599' END  WHEN ((t0.c1)<>(t0.c2)) THEN ((t0.c32)GLOB(-1262565892)) WHEN ((t0.c2) NOTNULL) THEN NULL WHEN (~ (t0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c32)) AND ((NULL))) ELSE (t0.c2 IN ()) END) ORDER BY CASE ((NULL)GLOB(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(0.36552728566418946 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c32 WHEN t0.c1 THEN '-444561599' END  WHEN ((t0.c1)<>(t0.c2)) THEN ((t0.c32)GLOB(-1262565892)) WHEN ((t0.c2) NOTNULL) THEN NULL WHEN (~ (t0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c32)) AND ((NULL))) ELSE (t0.c2 IN ()) END) IS TRUE)  as count FROM t0 INDEXED BY i52 ORDER BY CASE ((NULL)GLOB(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(0.36552728566418946 AS NUMERIC) END);
SELECT COUNT(*) FROM t0 INDEXED BY i52 WHERE (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c32 WHEN t0.c1 THEN '-444561599' END  WHEN ((t0.c1)<>(t0.c2)) THEN ((t0.c32)GLOB(-1262565892)) WHEN ((t0.c2) NOTNULL) THEN NULL WHEN (~ (t0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c32)) AND ((NULL))) ELSE (t0.c2 IN ()) END) ORDER BY CASE ((NULL)GLOB(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(0.36552728566418946 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c32 WHEN t0.c1 THEN '-444561599' END  WHEN ((t0.c1)<>(t0.c2)) THEN ((t0.c32)GLOB(-1262565892)) WHEN ((t0.c2) NOTNULL) THEN NULL WHEN (~ (t0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c32)) AND ((NULL))) ELSE (t0.c2 IN ()) END) IS TRUE)  as count FROM t0 INDEXED BY i52 ORDER BY CASE ((NULL)GLOB(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(0.36552728566418946 AS NUMERIC) END);
SELECT COUNT(*) FROM t0 INDEXED BY i52 WHERE (CASE CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c32 WHEN t0.c1 THEN '-444561599' END  WHEN ((t0.c1)<>(t0.c2)) THEN ((t0.c32)GLOB(-1262565892)) WHEN ((t0.c2) NOTNULL) THEN NULL WHEN (~ (t0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c32)) AND ((NULL))) ELSE (t0.c2 IN ()) END) ORDER BY CASE ((NULL)GLOB(t0.c0))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(0.36552728566418946 AS NUMERIC) END;
SELECT * FROM vt0, t0 WHERE ((((~ (t0.c0)))/(CAST(NULL AS INTEGER)))) ORDER BY ((t0.c32) NOT BETWEEN ('gD') AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))/(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c32) NOT BETWEEN ('gD') AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE ((((~ (t0.c0)))/(CAST(NULL AS INTEGER)))) ORDER BY ((t0.c32) NOT BETWEEN ('gD') AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))/(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c32) NOT BETWEEN ('gD') AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE ((((~ (t0.c0)))/(CAST(NULL AS INTEGER)))) ORDER BY ((t0.c32) NOT BETWEEN ('gD') AND (vt0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((- (v0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND ((((((((('1195632550')AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(v0.c0))))) ORDER BY ((((((((((t0.c1) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c1)OR(t0.c1)))OR(0.6898501263171111)))))AND(NULL)))OR(((t0.c1)|(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND ((((((((('1195632550')AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((((((t0.c1) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c1)OR(t0.c1)))OR(0.6898501263171111)))))AND(NULL)))OR(((t0.c1)|(NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((- (v0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND ((((((((('1195632550')AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(v0.c0))))) ORDER BY ((((((((((t0.c1) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c1)OR(t0.c1)))OR(0.6898501263171111)))))AND(NULL)))OR(((t0.c1)|(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND ((((((((('1195632550')AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((((((t0.c1) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c1)OR(t0.c1)))OR(0.6898501263171111)))))AND(NULL)))OR(((t0.c1)|(NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((- (v0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND ((((((((('1195632550')AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(v0.c0))))) ORDER BY ((((((((((t0.c1) IS TRUE))OR(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c1)OR(t0.c1)))OR(0.6898501263171111)))))AND(NULL)))OR(((t0.c1)|(NULL))))  NULLS LAST;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS FALSE) IN ()) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) ORDER BY ((('a'))<(((~ (vt0.c1)))))  NULLS LAST, (((vt0.c0 COLLATE BINARY))<(((v0.c0 IN (vt0.c0, vt0.c0))))) DESC  NULLS LAST, CASE COALESCE(1545750009, v0.c0, v0.c0, vt0.c1)  WHEN 0x183c6ddd COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>>(vt0.c1)) THEN ((NULL)GLOB(vt0.c1)) WHEN x'' THEN IFNULL('1006991066', v0.c0) END;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS FALSE) IN ()) ORDER BY ((('a'))<(((~ (vt0.c1)))))  NULLS LAST, (((vt0.c0 COLLATE BINARY))<(((v0.c0 IN (vt0.c0, vt0.c0))))) DESC  NULLS LAST, CASE COALESCE(1545750009, v0.c0, v0.c0, vt0.c1)  WHEN 0x183c6ddd COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>>(vt0.c1)) THEN ((NULL)GLOB(vt0.c1)) WHEN x'' THEN IFNULL('1006991066', v0.c0) END);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS FALSE) IN ()) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) ORDER BY ((('a'))<(((~ (vt0.c1)))))  NULLS LAST, (((vt0.c0 COLLATE BINARY))<(((v0.c0 IN (vt0.c0, vt0.c0))))) DESC  NULLS LAST, CASE COALESCE(1545750009, v0.c0, v0.c0, vt0.c1)  WHEN 0x183c6ddd COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>>(vt0.c1)) THEN ((NULL)GLOB(vt0.c1)) WHEN x'' THEN IFNULL('1006991066', v0.c0) END;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS FALSE) IN ()) ORDER BY ((('a'))<(((~ (vt0.c1)))))  NULLS LAST, (((vt0.c0 COLLATE BINARY))<(((v0.c0 IN (vt0.c0, vt0.c0))))) DESC  NULLS LAST, CASE COALESCE(1545750009, v0.c0, v0.c0, vt0.c1)  WHEN 0x183c6ddd COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>>(vt0.c1)) THEN ((NULL)GLOB(vt0.c1)) WHEN x'' THEN IFNULL('1006991066', v0.c0) END);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS FALSE) IN ()) WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) ORDER BY ((('a'))<(((~ (vt0.c1)))))  NULLS LAST, (((vt0.c0 COLLATE BINARY))<(((v0.c0 IN (vt0.c0, vt0.c0))))) DESC  NULLS LAST, CASE COALESCE(1545750009, v0.c0, v0.c0, vt0.c1)  WHEN 0x183c6ddd COLLATE RTRIM THEN x'' WHEN ((vt0.c0)>>(vt0.c1)) THEN ((NULL)GLOB(vt0.c1)) WHEN x'' THEN IFNULL('1006991066', v0.c0) END;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((((t0.c1)<<(vt0.c1))))=((((vt0.c0)<(t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)<<(vt0.c1))))==((((vt0.c0)<(t0.c1)))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((((t0.c1)<<(vt0.c1))))=((((vt0.c0)<(t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)<<(vt0.c1))))==((((vt0.c0)<(t0.c1)))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((((t0.c1)<<(vt0.c1))))=((((vt0.c0)<(t0.c1))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c1)))AND(v0.c0))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c0)==(vt0.c1)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN TRIM(vt0.c0, v0.c0) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(v0.c0, v0.c0) THEN (NOT (0.971722928499239)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((CAST('NNF㤀_gf' AS INTEGER)) IS FALSE) ASC  NULLS FIRST, ((((UNLIKELY(DISTINCT v0.c0))OR((v0.c0 IN ()))))AND((((vt0.c1, vt0.c1, '1560130866')) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(vt0.c1)))AND(v0.c0))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c0)==(vt0.c1)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN TRIM(vt0.c0, v0.c0) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(v0.c0, v0.c0) THEN (NOT (0.971722928499239)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST('NNF㤀_gf' AS INTEGER)) IS FALSE) ASC  NULLS FIRST, ((((UNLIKELY(DISTINCT v0.c0))OR((v0.c0 IN ()))))AND((((vt0.c1, vt0.c1, '1560130866')) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c1)))AND(v0.c0))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c0)==(vt0.c1)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN TRIM(vt0.c0, v0.c0) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(v0.c0, v0.c0) THEN (NOT (0.971722928499239)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((CAST('NNF㤀_gf' AS INTEGER)) IS FALSE) ASC  NULLS FIRST, ((((UNLIKELY(DISTINCT v0.c0))OR((v0.c0 IN ()))))AND((((vt0.c1, vt0.c1, '1560130866')) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(vt0.c1)))AND(v0.c0))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c0)==(vt0.c1)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN TRIM(vt0.c0, v0.c0) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(v0.c0, v0.c0) THEN (NOT (0.971722928499239)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST('NNF㤀_gf' AS INTEGER)) IS FALSE) ASC  NULLS FIRST, ((((UNLIKELY(DISTINCT v0.c0))OR((v0.c0 IN ()))))AND((((vt0.c1, vt0.c1, '1560130866')) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c1)))AND(v0.c0))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c0)==(vt0.c1)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN TRIM(vt0.c0, v0.c0) THEN ((vt0.c0) NOTNULL) WHEN NULLIF(v0.c0, v0.c0) THEN (NOT (0.971722928499239)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ((CAST('NNF㤀_gf' AS INTEGER)) IS FALSE) ASC  NULLS FIRST, ((((UNLIKELY(DISTINCT v0.c0))OR((v0.c0 IN ()))))AND((((vt0.c1, vt0.c1, '1560130866')) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))) ASC;
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) ISNULL)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (((t0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) ISNULL)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (((t0.c1) ISNULL))));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (((vt0.c1))=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (((vt0.c1))==((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (((vt0.c1))=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (((vt0.c1))==((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) ELSE (((vt0.c1))=((vt0.c0))) END);
SELECT ALL * FROM t0, vt0 WHERE (((((((((LAST_INSERT_ROWID())OR((~ (t0.c2)))))AND(((((((((t0.c32)OR(vt0.c1)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))))OR(((t0.c1) IS FALSE))))OR(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LAST_INSERT_ROWID())OR((~ (t0.c2)))))AND(((((((((t0.c32)OR(vt0.c1)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))))OR(((t0.c1) IS FALSE))))OR(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((LAST_INSERT_ROWID())OR((~ (t0.c2)))))AND(((((((((t0.c32)OR(vt0.c1)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))))OR(((t0.c1) IS FALSE))))OR(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LAST_INSERT_ROWID())OR((~ (t0.c2)))))AND(((((((((t0.c32)OR(vt0.c1)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))))OR(((t0.c1) IS FALSE))))OR(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((LAST_INSERT_ROWID())OR((~ (t0.c2)))))AND(((((((((t0.c32)OR(vt0.c1)))OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))))OR(((t0.c1) IS FALSE))))OR(t0.c1 COLLATE RTRIM)));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0)<<(vt0.c1))) ISNULL) INNER JOIN vt0 ON CASE (((t0.c1, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, t0.c2)))  WHEN ((vt0.c0)<(t0.c1)) THEN CAST(vt0.c1 AS INTEGER) ELSE t0.c32 END WHERE (((('gLS') NOT BETWEEN (t0.c32) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('gLS') NOT BETWEEN (t0.c32) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0)<<(vt0.c1))) ISNULL) INNER JOIN vt0 ON CASE (((t0.c1, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, t0.c2)))  WHEN ((vt0.c0)<(t0.c1)) THEN CAST(vt0.c1 AS INTEGER) ELSE t0.c32 END);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0)<<(vt0.c1))) ISNULL) INNER JOIN vt0 ON CASE (((t0.c1, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, t0.c2)))  WHEN ((vt0.c0)<(t0.c1)) THEN CAST(vt0.c1 AS INTEGER) ELSE t0.c32 END WHERE (((('gLS') NOT BETWEEN (t0.c32) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('gLS') NOT BETWEEN (t0.c32) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((t0.c0)<<(vt0.c1))) ISNULL) INNER JOIN vt0 ON CASE (((t0.c1, t0.c0, t0.c0)) BETWEEN ((v0.c0, t0.c1, vt0.c0)) AND ((vt0.c0, v0.c0, t0.c2)))  WHEN ((vt0.c0)<(t0.c1)) THEN CAST(vt0.c1 AS INTEGER) ELSE t0.c32 END);
SELECT * FROM v0 WHERE (((((v0.c0)%(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)%(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)%(v0.c0))) BETWEEN (((v0.c0)-(v0.c0))) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN (- (t0.c32)) THEN (vt0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN x'' COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((0.7742938082534647)) AND ((t0.c2))) THEN vt0.c0 ELSE ((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END LEFT OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (t0.c2)) WHEN ((t0.c2) IS FALSE) THEN ((vt0.c1) NOTNULL) WHEN CASE WHEN t0.c1 THEN t0.c32 END THEN (((vt0.c0))<=((x''))) ELSE ((t0.c0) NOTNULL) END WHERE (LIKELY(DISTINCT CAST(t0.c32 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(t0.c32 AS REAL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN (- (t0.c32)) THEN (vt0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN x'' COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((0.7742938082534647)) AND ((t0.c2))) THEN vt0.c0 ELSE ((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END LEFT OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (t0.c2)) WHEN ((t0.c2) IS FALSE) THEN ((vt0.c1) NOTNULL) WHEN CASE WHEN t0.c1 THEN t0.c32 END THEN (((vt0.c0))<=((x''))) ELSE ((t0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN (- (t0.c32)) THEN (vt0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN x'' COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((0.7742938082534647)) AND ((t0.c2))) THEN vt0.c0 ELSE ((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END LEFT OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (t0.c2)) WHEN ((t0.c2) IS FALSE) THEN ((vt0.c1) NOTNULL) WHEN CASE WHEN t0.c1 THEN t0.c32 END THEN (((vt0.c0))<=((x''))) ELSE ((t0.c0) NOTNULL) END WHERE (LIKELY(DISTINCT CAST(t0.c32 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CAST(t0.c32 AS REAL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN (- (t0.c32)) THEN (vt0.c1 IN ()) WHEN (vt0.c0 IN ()) THEN x'' COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((0.7742938082534647)) AND ((t0.c2))) THEN vt0.c0 ELSE ((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) END LEFT OUTER JOIN v0 ON CASE WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (t0.c2)) WHEN ((t0.c2) IS FALSE) THEN ((vt0.c1) NOTNULL) WHEN CASE WHEN t0.c1 THEN t0.c32 END THEN (((vt0.c0))<=((x''))) ELSE ((t0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c1)AND(0X1cc76d3d)))OR(t0.c1)))AND(CASE vt0.c0  WHEN t0.c32 THEN vt0.c0 END)))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (((t0.c0)) NOT BETWEEN ((((NULL) IS FALSE))) AND ((vt0.c1 COLLATE NOCASE))) WHERE ((((v0.c0)) BETWEEN ((((((t0.c1)AND(t0.c32)))AND(NULL)))) AND (((((t0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((((t0.c1)AND(t0.c32)))AND(NULL)))) AND (((((t0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c1)AND(0x1cc76d3d)))OR(t0.c1)))AND(CASE vt0.c0  WHEN t0.c32 THEN vt0.c0 END)))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (((t0.c0)) NOT BETWEEN ((((NULL) IS FALSE))) AND ((vt0.c1 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c1)AND(0X1cc76d3d)))OR(t0.c1)))AND(CASE vt0.c0  WHEN t0.c32 THEN vt0.c0 END)))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (((t0.c0)) NOT BETWEEN ((((NULL) IS FALSE))) AND ((vt0.c1 COLLATE NOCASE))) WHERE ((((v0.c0)) BETWEEN ((((((t0.c1)AND(t0.c32)))AND(NULL)))) AND (((((t0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((((t0.c1)AND(t0.c32)))AND(NULL)))) AND (((((t0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((t0.c1)AND(0x1cc76d3d)))OR(t0.c1)))AND(CASE vt0.c0  WHEN t0.c32 THEN vt0.c0 END)))AND(CAST(v0.c0 AS TEXT))))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN v0 ON (((t0.c0)) NOT BETWEEN ((((NULL) IS FALSE))) AND ((vt0.c1 COLLATE NOCASE))));
SELECT * FROM vt0, t0 WHERE (((((t0.c32)<=(t0.c2)))<>(0.5149420766813272 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c32)<=(t0.c2)))<>(0.5149420766813272 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c32)<=(t0.c2)))<>(0.5149420766813272 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c32)<=(t0.c2)))<>(0.5149420766813272 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c32)<=(t0.c2)))<>(0.5149420766813272 COLLATE BINARY)));
SELECT * FROM vt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN 0.7742938082534647 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END  WHEN '\+}!Y2>' THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN (('fPnZ.n') NOTNULL) THEN ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN 0.7742938082534647 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END  WHEN '\+}!Y2>' THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN (('fPnZ.n') NOTNULL) THEN ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN 0.7742938082534647 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END  WHEN '\+}!Y2>' THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN (('fPnZ.n') NOTNULL) THEN ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN 0.7742938082534647 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END  WHEN '\+}!Y2>' THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN (('fPnZ.n') NOTNULL) THEN ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN 0.7742938082534647 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END  WHEN '\+}!Y2>' THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN (('fPnZ.n') NOTNULL) THEN ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c0)) END);
SELECT ALL * FROM vt0 NOT INDEXED, v0, t0 NOT INDEXED WHERE ((((vt0.c1)) NOT BETWEEN ((((t0.c32)!=(NULL)))) AND (((((v0.c0))!=((t0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((t0.c32)!=(NULL)))) AND (((((v0.c0))<>((t0.c1))))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, t0);
SELECT ALL * FROM vt0 NOT INDEXED, v0, t0 NOT INDEXED WHERE ((((vt0.c1)) NOT BETWEEN ((((t0.c32)!=(NULL)))) AND (((((v0.c0))!=((t0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((t0.c32)!=(NULL)))) AND (((((v0.c0))<>((t0.c1))))))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, t0);
SELECT ALL * FROM vt0 NOT INDEXED, v0, t0 NOT INDEXED WHERE ((((vt0.c1)) NOT BETWEEN ((((t0.c32)!=(NULL)))) AND (((((v0.c0))!=((t0.c1)))))));
SELECT COUNT(*) FROM vt0, t0 WHERE (-2.144930679E9);
SELECT SUM(count) FROM (SELECT ALL ((-2.144930679E9) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (-2.144930679E9);
SELECT SUM(count) FROM (SELECT ALL ((-2.144930679E9) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (-2.144930679E9);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (t0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))<(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))<(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))<(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))<(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))<(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN 0.9991601088878397 WHEN t0.c32 THEN t0.c2 WHEN t0.c0 THEN v0.c0 END AS INTEGER) WHERE (((t0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN 0.9991601088878397 WHEN t0.c32 THEN t0.c2 WHEN t0.c0 THEN v0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN 0.9991601088878397 WHEN t0.c32 THEN t0.c2 WHEN t0.c0 THEN v0.c0 END AS INTEGER) WHERE (((t0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN 0.9991601088878397 WHEN t0.c32 THEN t0.c2 WHEN t0.c0 THEN v0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE WHEN vt0.c0 THEN 0.9991601088878397 WHEN t0.c32 THEN t0.c2 WHEN t0.c0 THEN v0.c0 END AS INTEGER) WHERE (((t0.c2) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((('-120401538') IS TRUE) IN (t0.c2))  NULLS LAST, ((((t0.c2)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY ((('-120401538') IS TRUE) IN (t0.c2))  NULLS LAST, ((((t0.c2)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((('-120401538') IS TRUE) IN (t0.c2))  NULLS LAST, ((((t0.c2)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY ((('-120401538') IS TRUE) IN (t0.c2))  NULLS LAST, ((((t0.c2)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((('-120401538') IS TRUE) IN (t0.c2))  NULLS LAST, ((((t0.c2)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM COLLATE RTRIM;
SELECT ALL * FROM v0 WHERE ((((HEX(v0.c0)))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((HEX(v0.c0)))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((HEX(v0.c0)))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((HEX(v0.c0)))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((HEX(v0.c0)))>((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT COUNT(*) FROM t0 WHERE ((x'4627' IN ())) ORDER BY x'8422' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'4627' IN ())) IS TRUE)  as count FROM t0 ORDER BY x'8422' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((x'4627' IN ())) ORDER BY x'8422' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'4627' IN ())) IS TRUE)  as count FROM t0 ORDER BY x'8422' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((x'4627' IN ())) ORDER BY x'8422' DESC  NULLS LAST;
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON json((t0.c0 IN ())) WHERE ((((t0.c0 IN (t0.c32, t0.c0))) NOT BETWEEN (((v0.c0)+(1.207820758E9))) AND (((t0.c2) BETWEEN (vt0.c1) AND (v0.c0))))) ORDER BY ((t0.c1 IN ()) IN ()) DESC, ((t0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c32, t0.c0))) NOT BETWEEN (((v0.c0)+(1.207820758E9))) AND (((t0.c2) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON json((t0.c0 IN ())) ORDER BY ((t0.c1 IN ()) IN ()) DESC, ((t0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON json((t0.c0 IN ())) WHERE ((((t0.c0 IN (t0.c32, t0.c0))) NOT BETWEEN (((v0.c0)+(1.207820758E9))) AND (((t0.c2) BETWEEN (vt0.c1) AND (v0.c0))))) ORDER BY ((t0.c1 IN ()) IN ()) DESC, ((t0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c32, t0.c0))) NOT BETWEEN (((v0.c0)+(1.207820758E9))) AND (((t0.c2) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON json((t0.c0 IN ())) ORDER BY ((t0.c1 IN ()) IN ()) DESC, ((t0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON json((t0.c0 IN ())) WHERE ((((t0.c0 IN (t0.c32, t0.c0))) NOT BETWEEN (((v0.c0)+(1.207820758E9))) AND (((t0.c2) BETWEEN (vt0.c1) AND (v0.c0))))) ORDER BY ((t0.c1 IN ()) IN ()) DESC, ((t0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((LTRIM(vt0.c0))OR(((((-1274444535)AND(vt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ('-2046271999')) DESC, TYPEOF((('')*('0.971722928499239')));
SELECT SUM(count) FROM (SELECT ((((((LTRIM(vt0.c0))OR(((((-1274444535)AND(vt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ('-2046271999')) DESC, TYPEOF((('')*('0.971722928499239'))));
SELECT COUNT(*) FROM vt0 WHERE (((((LTRIM(vt0.c0))OR(((((-1274444535)AND(vt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ('-2046271999')) DESC, TYPEOF((('')*('0.971722928499239')));
SELECT SUM(count) FROM (SELECT ((((((LTRIM(vt0.c0))OR(((((-1274444535)AND(vt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ('-2046271999')) DESC, TYPEOF((('')*('0.971722928499239'))));
SELECT COUNT(*) FROM vt0 WHERE (((((LTRIM(vt0.c0))OR(((((-1274444535)AND(vt0.c1)))AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ('-2046271999')) DESC, TYPEOF((('')*('0.971722928499239')));
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0))<=((x'')))) BETWEEN (((vt0.c0)>(1272242043))) AND (CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c32 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((x'')))) BETWEEN (((vt0.c0)>(1272242043))) AND (CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c32 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0))<=((x'')))) BETWEEN (((vt0.c0)>(1272242043))) AND (CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c32 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((x'')))) BETWEEN (((vt0.c0)>(1272242043))) AND (CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c32 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0))<=((x'')))) BETWEEN (((vt0.c0)>(1272242043))) AND (CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c32 END)));
SELECT * FROM t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((t0.c2, t0.c2, v0.c0))<>((t0.c1, t0.c32, v0.c0)))))) ORDER BY ((((t0.c1)||(v0.c0)))AND((~ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((t0.c2, t0.c2, v0.c0))!=((t0.c1, t0.c32, v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1)||(v0.c0)))AND((~ (v0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((t0.c2, t0.c2, v0.c0))<>((t0.c1, t0.c32, v0.c0)))))) ORDER BY ((((t0.c1)||(v0.c0)))AND((~ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((t0.c2, t0.c2, v0.c0))!=((t0.c1, t0.c32, v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1)||(v0.c0)))AND((~ (v0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((t0.c2, t0.c2, v0.c0))<>((t0.c1, t0.c32, v0.c0)))))) ORDER BY ((((t0.c1)||(v0.c0)))AND((~ (v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((v0.c0)AND(vt0.c1)))OR(v0.c0)) COLLATE BINARY WHERE (NULLIF(DISTINCT LOWER(DISTINCT vt0.c0), LTRIM(vt0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT LOWER(DISTINCT vt0.c0), LTRIM(vt0.c1, vt0.c0))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((v0.c0)AND(vt0.c1)))OR(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((v0.c0)AND(vt0.c1)))OR(v0.c0)) COLLATE BINARY WHERE (NULLIF(DISTINCT LOWER(DISTINCT vt0.c0), LTRIM(vt0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT LOWER(DISTINCT vt0.c0), LTRIM(vt0.c1, vt0.c0))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((v0.c0)AND(vt0.c1)))OR(v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((v0.c0)AND(vt0.c1)))OR(v0.c0)) COLLATE BINARY WHERE (NULLIF(DISTINCT LOWER(DISTINCT vt0.c0), LTRIM(vt0.c1, vt0.c0)));
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY)%(CAST(vt0.c1 AS NUMERIC)));
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL)) ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL)) ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL)) ORDER BY CAST(((v0.c0)&(v0.c0)) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON t0.c2 WHERE (((((v0.c0)IS(t0.c0))) BETWEEN (((NULL) NOTNULL)) AND (LIKELIHOOD(t0.c1, 0.8887074273947118))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(t0.c0))) BETWEEN (((NULL) NOTNULL)) AND (LIKELIHOOD(t0.c1, 0.8887074273947118)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON t0.c2);
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON t0.c2 WHERE (((((v0.c0)IS(t0.c0))) BETWEEN (((NULL) NOTNULL)) AND (LIKELIHOOD(t0.c1, 0.8887074273947118))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(t0.c0))) BETWEEN (((NULL) NOTNULL)) AND (LIKELIHOOD(t0.c1, 0.8887074273947118)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN v0 ON t0.c2);
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN v0 ON t0.c2 WHERE (((((v0.c0)IS(t0.c0))) BETWEEN (((NULL) NOTNULL)) AND (LIKELIHOOD(t0.c1, 0.8887074273947118))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c2)OR(t0.c0)))AND(t0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) ORDER BY CAST(CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c0)))AND(t0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c2)OR(t0.c0)))AND(t0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) ORDER BY CAST(CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c0)))AND(t0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (((((((t0.c2)OR(t0.c0)))AND(t0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) ORDER BY CAST(CASE t0.c0  WHEN v0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON UNICODE(CASE WHEN vt0.c1 THEN '1069288996' END) WHERE (((json_array_length(v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_array_length(v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON UNICODE(CASE WHEN vt0.c1 THEN '1069288996' END));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON UNICODE(CASE WHEN vt0.c1 THEN '1069288996' END) WHERE (((json_array_length(v0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_array_length(v0.c0)) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON UNICODE(CASE WHEN vt0.c1 THEN '1069288996' END));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON UNICODE(CASE WHEN vt0.c1 THEN '1069288996' END) WHERE (((json_array_length(v0.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)AND(v0.c0)))) AND ((NULLIF('-1262565892', vt0.c1)))) WHERE (((((vt0.c1 COLLATE RTRIM)AND(((v0.c0)||(v0.c0)))))OR(((vt0.c1)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE RTRIM)AND(((v0.c0)||(v0.c0)))))OR(((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)AND(v0.c0)))) AND ((NULLIF('-1262565892', vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)AND(v0.c0)))) AND ((NULLIF('-1262565892', vt0.c1)))) WHERE (((((vt0.c1 COLLATE RTRIM)AND(((v0.c0)||(v0.c0)))))OR(((vt0.c1)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE RTRIM)AND(((v0.c0)||(v0.c0)))))OR(((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)AND(v0.c0)))) AND ((NULLIF('-1262565892', vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c1)) BETWEEN ((((vt0.c0)AND(v0.c0)))) AND ((NULLIF('-1262565892', vt0.c1)))) WHERE (((((vt0.c1 COLLATE RTRIM)AND(((v0.c0)||(v0.c0)))))OR(((vt0.c1)IS NOT(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (- (v0.c0)) THEN TRIM(v0.c0, v0.c0) ELSE ((v0.c0)|(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (v0.c0)) THEN TRIM(v0.c0, v0.c0) ELSE ((v0.c0)|(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (- (v0.c0)) THEN TRIM(v0.c0, v0.c0) ELSE ((v0.c0)|(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (v0.c0)) THEN TRIM(v0.c0, v0.c0) ELSE ((v0.c0)|(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (- (v0.c0)) THEN TRIM(v0.c0, v0.c0) ELSE ((v0.c0)|(v0.c0)) END);
SELECT * FROM t0, vt0 WHERE (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((vt0.c1) ISNULL), LIKELIHOOD(DISTINCT t0.c32, 0.6951894311867773))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((vt0.c1) ISNULL), LIKELIHOOD(DISTINCT t0.c32, 0.6951894311867773))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((vt0.c1) ISNULL), LIKELIHOOD(DISTINCT t0.c32, 0.6951894311867773))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((vt0.c1) ISNULL), LIKELIHOOD(DISTINCT t0.c32, 0.6951894311867773))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (STRFTIME(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((vt0.c1) ISNULL), LIKELIHOOD(DISTINCT t0.c32, 0.6951894311867773))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((('2031575271') NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('2031575271') NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((('2031575271') NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('2031575271') NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((('2031575271') NOT BETWEEN (v0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM v0, t0 WHERE ((((((t0.c0) NOT BETWEEN (0.495741027347804) AND (t0.c2)), CAST(x'' AS NUMERIC), ((v0.c0)>=(t0.c2))))<=(((- (t0.c1)), json_type(t0.c32), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT BETWEEN (0.495741027347804) AND (t0.c2)), CAST(x'' AS NUMERIC), ((v0.c0)>=(t0.c2))))<=(((- (t0.c1)), json_type(t0.c32), (+ (v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((t0.c0) NOT BETWEEN (0.495741027347804) AND (t0.c2)), CAST(x'' AS NUMERIC), ((v0.c0)>=(t0.c2))))<=(((- (t0.c1)), json_type(t0.c32), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT BETWEEN (0.495741027347804) AND (t0.c2)), CAST(x'' AS NUMERIC), ((v0.c0)>=(t0.c2))))<=(((- (t0.c1)), json_type(t0.c32), (+ (v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((t0.c0) NOT BETWEEN (0.495741027347804) AND (t0.c2)), CAST(x'' AS NUMERIC), ((v0.c0)>=(t0.c2))))<=(((- (t0.c1)), json_type(t0.c32), (+ (v0.c0))))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((t0.c0) BETWEEN (t0.c2) AND (v0.c0))))>(((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))))) ORDER BY (NULL IN ()) DESC  NULLS FIRST, ((((((((((t0.c2)AND(x'8a1a')))OR('-1757304502')))AND(t0.c1)))OR(t0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (ABS(t0.c32))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0) BETWEEN (t0.c2) AND (v0.c0))))>(((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NULL IN ()) DESC  NULLS FIRST, ((((((((((t0.c2)AND(x'8a1a')))OR('-1757304502')))AND(t0.c1)))OR(t0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (ABS(t0.c32))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((t0.c0) BETWEEN (t0.c2) AND (v0.c0))))>(((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))))) ORDER BY (NULL IN ()) DESC  NULLS FIRST, ((((((((((t0.c2)AND(x'8a1a')))OR('-1757304502')))AND(t0.c1)))OR(t0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (ABS(t0.c32))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0) BETWEEN (t0.c2) AND (v0.c0))))>(((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NULL IN ()) DESC  NULLS FIRST, ((((((((((t0.c2)AND(x'8a1a')))OR('-1757304502')))AND(t0.c1)))OR(t0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (ABS(t0.c32))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((((t0.c0) BETWEEN (t0.c2) AND (v0.c0))))>(((((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))))))) ORDER BY (NULL IN ()) DESC  NULLS FIRST, ((((((((((t0.c2)AND(x'8a1a')))OR('-1757304502')))AND(t0.c1)))OR(t0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (ABS(t0.c32))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c1 THEN t0.c0 END IN (CAST(t0.c32 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c1 THEN t0.c0 END IN (CAST(t0.c32 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c1 THEN t0.c0 END IN (CAST(t0.c32 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c1 THEN t0.c0 END IN (CAST(t0.c32 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c1 THEN t0.c0 END IN (CAST(t0.c32 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c32)IS(t0.c32)) THEN CASE x''  WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN 0.8201424766791306 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE NULL END WHEN (((t0.c1))>((vt0.c1))) THEN DATE(t0.c0, vt0.c1, vt0.c0) WHEN (((t0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, NULL, 0.9678648310532534)) AND ((t0.c32, x'', t0.c32))) THEN (t0.c1 IN ()) END CROSS JOIN v0 ON v0.c0 WHERE (((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2))) NOT NULL)) ORDER BY (((vt0.c0 IN (v0.c0, t0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c32)IS(t0.c32)) THEN CASE x''  WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN 0.8201424766791306 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE NULL END WHEN (((t0.c1))>((vt0.c1))) THEN DATE(t0.c0, vt0.c1, vt0.c0) WHEN (((t0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, NULL, 0.9678648310532534)) AND ((t0.c32, x'', t0.c32))) THEN (t0.c1 IN ()) END CROSS JOIN v0 ON v0.c0 ORDER BY (((vt0.c0 IN (v0.c0, t0.c0))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c32)IS(t0.c32)) THEN CASE x''  WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN 0.8201424766791306 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE NULL END WHEN (((t0.c1))>((vt0.c1))) THEN DATE(t0.c0, vt0.c1, vt0.c0) WHEN (((t0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, NULL, 0.9678648310532534)) AND ((t0.c32, x'', t0.c32))) THEN (t0.c1 IN ()) END CROSS JOIN v0 ON v0.c0 WHERE (((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2))) NOT NULL)) ORDER BY (((vt0.c0 IN (v0.c0, t0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c32)IS(t0.c32)) THEN CASE x''  WHEN t0.c0 THEN v0.c0 WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 WHEN 0.8201424766791306 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 ELSE NULL END WHEN (((t0.c1))>((vt0.c1))) THEN DATE(t0.c0, vt0.c1, vt0.c0) WHEN (((t0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, NULL, 0.9678648310532534)) AND ((t0.c32, x'', t0.c32))) THEN (t0.c1 IN ()) END CROSS JOIN v0 ON v0.c0 ORDER BY (((vt0.c0 IN (v0.c0, t0.c0))) ISNULL) DESC);
SELECT * FROM v0, t0 WHERE ((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((t0.c32, t0.c0, t0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((t0.c32, t0.c0, t0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((t0.c32, t0.c0, t0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((t0.c32, t0.c0, t0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, v0.c0)) AND ((t0.c32, t0.c0, t0.c0)))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)AND(t0.c32)))OR(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t0.c2)AND(t0.c32)))OR(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)AND(t0.c32)))OR(t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t0.c2)AND(t0.c32)))OR(t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)AND(t0.c32)))OR(t0.c1)) COLLATE BINARY);
SELECT ALL * FROM v0, vt0, t0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL)) BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL)) BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN (((vt0.c1)/(vt0.c0))) AND ((vt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (x'') ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 ORDER BY SQLITE_VERSION()  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (x'') ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 ORDER BY SQLITE_VERSION()  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (x'') ORDER BY SQLITE_VERSION()  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((rtreenode('Sq', t0.c1) IN (0.8637623887781466)));
SELECT SUM(count) FROM (SELECT ALL (((rtreenode('Sq', t0.c1) IN (0.8637623887781466))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((rtreenode('Sq', t0.c1) IN (0.8637623887781466)));
SELECT SUM(count) FROM (SELECT ALL (((rtreenode('Sq', t0.c1) IN (0.8637623887781466))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((rtreenode('Sq', t0.c1) IN (0.8637623887781466)));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c1)||(vt0.c0)))OR(ABS(t0.c1))))OR(((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1))))) ORDER BY NULL DESC, (+ ((NOT (t0.c1))))  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)||(vt0.c0)))OR(ABS(t0.c1))))OR(((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY NULL DESC, (+ ((NOT (t0.c1))))  NULLS FIRST, vt0.c1 ASC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c1)||(vt0.c0)))OR(ABS(t0.c1))))OR(((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1))))) ORDER BY NULL DESC, (+ ((NOT (t0.c1))))  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)||(vt0.c0)))OR(ABS(t0.c1))))OR(((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY NULL DESC, (+ ((NOT (t0.c1))))  NULLS FIRST, vt0.c1 ASC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c1)||(vt0.c0)))OR(ABS(t0.c1))))OR(((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1))))) ORDER BY NULL DESC, (+ ((NOT (t0.c1))))  NULLS FIRST, vt0.c1 ASC;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS REAL))OR((t0.c32 IN ()))))OR(t0.c0)) FULL OUTER JOIN v0 ON (((((t0.c32) BETWEEN (t0.c1) AND (vt0.c1)), ((t0.c0) IS TRUE), (v0.c0 IN ())))==((CAST(t0.c1 AS NUMERIC), CAST(x'' AS REAL), UPPER(vt0.c1)))) WHERE ((- (((((v0.c0)OR(t0.c32)))AND(t0.c0))))) ORDER BY (((((v0.c0)OR(t0.c0)))OR(vt0.c0)) IN ()) ASC  NULLS LAST, CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN (((x'3f45')) BETWEEN ((vt0.c1)) AND ((t0.c2))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c0)OR(t0.c32)))AND(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS REAL))OR((t0.c32 IN ()))))OR(t0.c0)) FULL OUTER JOIN v0 ON (((((t0.c32) BETWEEN (t0.c1) AND (vt0.c1)), ((t0.c0) IS TRUE), (v0.c0 IN ())))=((CAST(t0.c1 AS NUMERIC), CAST(x'' AS REAL), UPPER(vt0.c1)))) ORDER BY (((((v0.c0)OR(t0.c0)))OR(vt0.c0)) IN ()) ASC  NULLS LAST, CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN (((x'3f45')) BETWEEN ((vt0.c1)) AND ((t0.c2))) END ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS REAL))OR((t0.c32 IN ()))))OR(t0.c0)) FULL OUTER JOIN v0 ON (((((t0.c32) BETWEEN (t0.c1) AND (vt0.c1)), ((t0.c0) IS TRUE), (v0.c0 IN ())))==((CAST(t0.c1 AS NUMERIC), CAST(x'' AS REAL), UPPER(vt0.c1)))) WHERE ((- (((((v0.c0)OR(t0.c32)))AND(t0.c0))))) ORDER BY (((((v0.c0)OR(t0.c0)))OR(vt0.c0)) IN ()) ASC  NULLS LAST, CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN (((x'3f45')) BETWEEN ((vt0.c1)) AND ((t0.c2))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((v0.c0)OR(t0.c32)))AND(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS REAL))OR((t0.c32 IN ()))))OR(t0.c0)) FULL OUTER JOIN v0 ON (((((t0.c32) BETWEEN (t0.c1) AND (vt0.c1)), ((t0.c0) IS TRUE), (v0.c0 IN ())))=((CAST(t0.c1 AS NUMERIC), CAST(x'' AS REAL), UPPER(vt0.c1)))) ORDER BY (((((v0.c0)OR(t0.c0)))OR(vt0.c0)) IN ()) ASC  NULLS LAST, CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN (((x'3f45')) BETWEEN ((vt0.c1)) AND ((t0.c2))) END ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS REAL))OR((t0.c32 IN ()))))OR(t0.c0)) FULL OUTER JOIN v0 ON (((((t0.c32) BETWEEN (t0.c1) AND (vt0.c1)), ((t0.c0) IS TRUE), (v0.c0 IN ())))==((CAST(t0.c1 AS NUMERIC), CAST(x'' AS REAL), UPPER(vt0.c1)))) WHERE ((- (((((v0.c0)OR(t0.c32)))AND(t0.c0))))) ORDER BY (((((v0.c0)OR(t0.c0)))OR(vt0.c0)) IN ()) ASC  NULLS LAST, CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 THEN (((x'3f45')) BETWEEN ((vt0.c1)) AND ((t0.c2))) END ASC;
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c2 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c2 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c2 AS INTEGER)) NOTNULL));
SELECT COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (((t0.c0 IN ()))|(((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)))) WHERE (CAST(t0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (((t0.c0 IN ()))|(((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (((t0.c0 IN ()))|(((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)))) WHERE (CAST(t0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON (((t0.c0 IN ()))|(((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON (((t0.c0 IN ()))|(((vt0.c0) BETWEEN (t0.c2) AND (t0.c1)))) WHERE (CAST(t0.c1 COLLATE NOCASE AS BLOB));
SELECT * FROM t0, vt0 WHERE (((((((('-587399764')AND(vt0.c0)))AND(t0.c1))))>((']xrh'))));
SELECT SUM(count) FROM (SELECT ((((((((('-587399764')AND(vt0.c0)))AND(t0.c1))))>((']xrh')))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((('-587399764')AND(vt0.c0)))AND(t0.c1))))>((']xrh'))));
SELECT SUM(count) FROM (SELECT ((((((((('-587399764')AND(vt0.c0)))AND(t0.c1))))>((']xrh')))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((('-587399764')AND(vt0.c0)))AND(t0.c1))))>((']xrh'))));
SELECT COUNT(*) FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN vt0.c0 THEN ((((vt0.c1)OR(vt0.c1)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN vt0.c0 THEN ((((vt0.c1)OR(vt0.c1)))OR(NULL)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN vt0.c0 THEN ((((vt0.c1)OR(vt0.c1)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN vt0.c0 THEN ((((vt0.c1)OR(vt0.c1)))OR(NULL)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN vt0.c0 THEN ((((vt0.c1)OR(vt0.c1)))OR(NULL)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))));
SELECT ALL * FROM vt0, v0 WHERE (CASE ((vt0.c0)IS NOT(v0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) NOT NULL) ELSE json_array_length(v0.c0) END) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS NOT(v0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) NOT NULL) ELSE json_array_length(v0.c0) END) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((vt0.c0)IS NOT(v0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) NOT NULL) ELSE json_array_length(v0.c0) END) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS NOT(v0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) NOT NULL) ELSE json_array_length(v0.c0) END) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0, v0 WHERE (CASE ((vt0.c0)IS NOT(v0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) NOT NULL) ELSE json_array_length(v0.c0) END) ORDER BY vt0.c1 ASC;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), 0.4997633459820433));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), 0.4997633459820433)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), 0.4997633459820433));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), 0.4997633459820433)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), 0.4997633459820433));
SELECT * FROM v0 WHERE (((v0.c0)IS NOT(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c0) BETWEEN ('La') AND (v0.c0)))>(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN ('La') AND (v0.c0)))>(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0)IS NOT(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c0) BETWEEN ('La') AND (v0.c0)))>(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN ('La') AND (v0.c0)))>(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0)IS NOT(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((v0.c0) BETWEEN ('La') AND (v0.c0)))>(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) NOT BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) NOT BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN ((NOT (t0.c0))) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c32, t0.c0, v0.c0)) AND ((vt0.c1, 0Xfffffffff0cb3bea, vt0.c0))) AS TEXT) LEFT OUTER JOIN v0 ON LIKELIHOOD(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)), 0.665744141335259) WHERE ((NOT (CAST(NULL AS INTEGER)))) ORDER BY CAST((((v0.c0))<((v0.c0))) AS NUMERIC)  NULLS FIRST, '-255116310' DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c32, t0.c0, v0.c0)) AND ((vt0.c1, 0Xfffffffff0cb3bea, vt0.c0))) AS TEXT) LEFT OUTER JOIN v0 ON LIKELIHOOD(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)), 0.665744141335259) ORDER BY CAST((((v0.c0))<((v0.c0))) AS NUMERIC)  NULLS FIRST, '-255116310' DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c32, t0.c0, v0.c0)) AND ((vt0.c1, 0Xfffffffff0cb3bea, vt0.c0))) AS TEXT) LEFT OUTER JOIN v0 ON LIKELIHOOD(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)), 0.665744141335259) WHERE ((NOT (CAST(NULL AS INTEGER)))) ORDER BY CAST((((v0.c0))<((v0.c0))) AS NUMERIC)  NULLS FIRST, '-255116310' DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CAST((((vt0.c0, t0.c1, t0.c1)) NOT BETWEEN ((t0.c32, t0.c0, v0.c0)) AND ((vt0.c1, 0Xfffffffff0cb3bea, vt0.c0))) AS TEXT) LEFT OUTER JOIN v0 ON LIKELIHOOD(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32)), 0.665744141335259) ORDER BY CAST((((v0.c0))<((v0.c0))) AS NUMERIC)  NULLS FIRST, '-255116310' DESC);
SELECT ALL * FROM t0 NOT INDEXED WHERE (((t0.c2) IS FALSE)) ORDER BY (NOT (t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c2 COLLATE NOCASE)));
SELECT ALL * FROM t0 NOT INDEXED WHERE (((t0.c2) IS FALSE)) ORDER BY (NOT (t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c2 COLLATE NOCASE)));
SELECT ALL * FROM t0 NOT INDEXED WHERE (((t0.c2) IS FALSE)) ORDER BY (NOT (t0.c2 COLLATE NOCASE));
SELECT * FROM vt0, v0, t0 WHERE ((CASE vt0.c1  WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END IN ())) ORDER BY ((((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c1  WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c2 END)) ASC);
SELECT * FROM vt0, v0, t0 WHERE ((CASE vt0.c1  WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END IN ())) ORDER BY ((((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c1  WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c2 END)) ASC);
SELECT * FROM vt0, v0, t0 WHERE ((CASE vt0.c1  WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END IN ())) ORDER BY ((((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c2 END)) ASC;
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)OR(t0.c1)))) WHERE (((((CAST(t0.c2 AS TEXT))OR('%w4?')))AND('D*')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS TEXT))OR('%w4?')))AND('D*'))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)OR(t0.c1)))));
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)OR(t0.c1)))) WHERE (((((CAST(t0.c2 AS TEXT))OR('%w4?')))AND('D*')));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS TEXT))OR('%w4?')))AND('D*'))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)OR(t0.c1)))));
SELECT ALL * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (- (((t0.c32)OR(t0.c1)))) WHERE (((((CAST(t0.c2 AS TEXT))OR('%w4?')))AND('D*')));
SELECT * FROM vt0, t0 INNER JOIN v0 ON ((TIME(t0.c1, vt0.c0, '43<6fEr'))>(((t0.c0) ISNULL))) WHERE (CASE WHEN ((t0.c1)>>(t0.c0)) THEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) WHEN t0.c32 COLLATE BINARY THEN CHANGES() WHEN ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN x'' END) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((t0.c2 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)>>(t0.c0)) THEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) WHEN t0.c32 COLLATE BINARY THEN CHANGES() WHEN ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN x'' END) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((TIME(t0.c1, vt0.c0, '43<6fEr'))>(((t0.c0) ISNULL))) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((t0.c2 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))));
SELECT * FROM vt0, t0 INNER JOIN v0 ON ((TIME(t0.c1, vt0.c0, '43<6fEr'))>(((t0.c0) ISNULL))) WHERE (CASE WHEN ((t0.c1)>>(t0.c0)) THEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) WHEN t0.c32 COLLATE BINARY THEN CHANGES() WHEN ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN x'' END) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((t0.c2 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)>>(t0.c0)) THEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) WHEN t0.c32 COLLATE BINARY THEN CHANGES() WHEN ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN x'' END) IS TRUE)  as count FROM vt0, t0 INNER JOIN v0 ON ((TIME(t0.c1, vt0.c0, '43<6fEr'))>(((t0.c0) ISNULL))) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((t0.c2 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))));
SELECT * FROM vt0, t0 INNER JOIN v0 ON ((TIME(t0.c1, vt0.c0, '43<6fEr'))>(((t0.c0) ISNULL))) WHERE (CASE WHEN ((t0.c1)>>(t0.c0)) THEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) WHEN t0.c32 COLLATE BINARY THEN CHANGES() WHEN ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN x'' END) ORDER BY ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN ((t0.c2 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (v0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (COALESCE(((vt0.c1)&(t0.c0)), ((t0.c32)-(t0.c0)), (t0.c1 IN (v0.c0, vt0.c0)), v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c1)&(t0.c0)), ((t0.c32)-(t0.c0)), (t0.c1 IN (v0.c0, vt0.c0)), v0.c0)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (COALESCE(((vt0.c1)&(t0.c0)), ((t0.c32)-(t0.c0)), (t0.c1 IN (v0.c0, vt0.c0)), v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c1)&(t0.c0)), ((t0.c32)-(t0.c0)), (t0.c1 IN (v0.c0, vt0.c0)), v0.c0)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (COALESCE(((vt0.c1)&(t0.c0)), ((t0.c32)-(t0.c0)), (t0.c1 IN (v0.c0, vt0.c0)), v0.c0));
SELECT * FROM t0 WHERE (((t0.c0)<<(t0.c32)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<<(t0.c32)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)<<(t0.c32)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<<(t0.c32)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)<<(t0.c32)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT vt0.c0)) ORDER BY ((vt0.c0)*(vt0.c1)), (((((vt0.c0 IN (vt0.c1)))AND(((x'fb09') IS FALSE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NULL IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(vt0.c1)), (((((vt0.c0 IN (vt0.c1)))AND(((x'fb09') IS FALSE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NULL IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT vt0.c0)) ORDER BY ((vt0.c0)*(vt0.c1)), (((((vt0.c0 IN (vt0.c1)))AND(((x'fb09') IS FALSE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NULL IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(vt0.c1)), (((((vt0.c0 IN (vt0.c1)))AND(((x'fb09') IS FALSE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NULL IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT vt0.c0)) ORDER BY ((vt0.c0)*(vt0.c1)), (((((vt0.c0 IN (vt0.c1)))AND(((x'fb09') IS FALSE))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NULL IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE WHEN vt0.c1 THEN UPPER(t0.c1) ELSE 0.9313992960008123 END) ORDER BY (((t0.c1 IN (vt0.c1))) BETWEEN (vt0.c0) AND (CAST(t0.c2 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN UPPER(t0.c1) ELSE 0.9313992960008123 END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((t0.c1 IN (vt0.c1))) BETWEEN (vt0.c0) AND (CAST(t0.c2 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE WHEN vt0.c1 THEN UPPER(t0.c1) ELSE 0.9313992960008123 END) ORDER BY (((t0.c1 IN (vt0.c1))) BETWEEN (vt0.c0) AND (CAST(t0.c2 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN UPPER(t0.c1) ELSE 0.9313992960008123 END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (((t0.c1 IN (vt0.c1))) BETWEEN (vt0.c0) AND (CAST(t0.c2 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE WHEN vt0.c1 THEN UPPER(t0.c1) ELSE 0.9313992960008123 END) ORDER BY (((t0.c1 IN (vt0.c1))) BETWEEN (vt0.c0) AND (CAST(t0.c2 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))%(((((t0.c1)AND(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))%(((((t0.c1)AND(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))%(((((t0.c1)AND(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))%(((((t0.c1)AND(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))%(((((t0.c1)AND(t0.c0)))AND(t0.c1)))));
SELECT * FROM v0 FULL OUTER JOIN t0 ON ((TYPEOF(0X46f29bba))>=(CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c32 ELSE t0.c2 END)) FULL OUTER JOIN vt0 ON NULL WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN LOWER(vt0.c1) WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c32  WHEN v0.c0 THEN 39466033 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c32 END WHEN (((vt0.c1, t0.c1, 0xffffffffe863a6a5))<>((v0.c0, t0.c32, x'a6a6'))) THEN t0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 COLLATE RTRIM THEN LOWER(vt0.c1) WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c32  WHEN v0.c0 THEN 39466033 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c32 END WHEN (((vt0.c1, t0.c1, 0Xffffffffe863a6a5))!=((v0.c0, t0.c32, x'a6a6'))) THEN t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((TYPEOF(0X46f29bba))>=(CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c32 ELSE t0.c2 END)) FULL OUTER JOIN vt0 ON NULL);
SELECT * FROM v0 FULL OUTER JOIN t0 ON ((TYPEOF(0X46f29bba))>=(CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c32 ELSE t0.c2 END)) FULL OUTER JOIN vt0 ON NULL WHERE (CASE WHEN t0.c2 COLLATE RTRIM THEN LOWER(vt0.c1) WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c32  WHEN v0.c0 THEN 39466033 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c32 END WHEN (((vt0.c1, t0.c1, 0xffffffffe863a6a5))<>((v0.c0, t0.c32, x'a6a6'))) THEN t0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 COLLATE RTRIM THEN LOWER(vt0.c1) WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c32  WHEN v0.c0 THEN 39466033 WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN v0.c0 ELSE t0.c32 END WHEN (((vt0.c1, t0.c1, 0Xffffffffe863a6a5))!=((v0.c0, t0.c32, x'a6a6'))) THEN t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((TYPEOF(0X46f29bba))>=(CASE WHEN t0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c32 ELSE t0.c2 END)) FULL OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(t0.c0)))AND(t0.c32)))OR(t0.c32)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c1 END)) INNER JOIN t0 ON (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS REAL))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(t0.c0)))AND(t0.c32)))OR(t0.c32)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c1 END)) INNER JOIN t0 ON (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS REAL))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(t0.c0)))AND(t0.c32)))OR(t0.c32)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c1 END)) INNER JOIN t0 ON (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS REAL))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)OR(t0.c0)))AND(t0.c32)))OR(t0.c32)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c1 END)) INNER JOIN t0 ON (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS REAL))));
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (((((v0.c0 IN ()))OR((v0.c0 IN (x'')))))AND(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))OR((v0.c0 IN (x'')))))AND(NULL)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (((((v0.c0 IN ()))OR((v0.c0 IN (x'')))))AND(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))OR((v0.c0 IN (x'')))))AND(NULL)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY (((((v0.c0 IN ()))OR((v0.c0 IN (x'')))))AND(NULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((((t0.c1)OR(v0.c0)))AND(t0.c1)))==((~ (t0.c0)))) RIGHT OUTER JOIN v0 ON (((TYPEOF(t0.c32)))>=((vt0.c1))) WHERE (CAST(((t0.c32) NOT BETWEEN ('1412243267') AND (t0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((vt0.c1) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c32) NOT BETWEEN ('1412243267') AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((t0.c1)OR(v0.c0)))AND(t0.c1)))=((~ (t0.c0)))) RIGHT OUTER JOIN v0 ON (((TYPEOF(t0.c32)))>=((vt0.c1))) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((vt0.c1) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((((((t0.c1)OR(v0.c0)))AND(t0.c1)))==((~ (t0.c0)))) RIGHT OUTER JOIN v0 ON (((TYPEOF(t0.c32)))>=((vt0.c1))) WHERE (CAST(((t0.c32) NOT BETWEEN ('1412243267') AND (t0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((vt0.c1) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c32) NOT BETWEEN ('1412243267') AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((t0.c1)OR(v0.c0)))AND(t0.c1)))=((~ (t0.c0)))) RIGHT OUTER JOIN v0 ON (((TYPEOF(t0.c32)))>=((vt0.c1))) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((vt0.c1) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(((t0.c1) IS FALSE) AS NUMERIC) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(((t0.c1) IS FALSE) AS NUMERIC));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(((t0.c1) IS FALSE) AS NUMERIC) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(((t0.c1) IS FALSE) AS NUMERIC));
SELECT ALL * FROM vt0, v0 RIGHT OUTER JOIN t0 ON CAST(((t0.c1) IS FALSE) AS NUMERIC) WHERE (t0.c0);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN vt0.c0 THEN LIKELY(v0.c0) END WHERE (((((vt0.c0, vt0.c1, '709713340')) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CAST(vt0.c1 AS INTEGER), (- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c1, '709713340')) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CAST(vt0.c1 AS INTEGER), (- (vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN vt0.c0 THEN LIKELY(v0.c0) END);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN vt0.c0 THEN LIKELY(v0.c0) END WHERE (((((vt0.c0, vt0.c1, '709713340')) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CAST(vt0.c1 AS INTEGER), (- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c1, '709713340')) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CAST(vt0.c1 AS INTEGER), (- (vt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN vt0.c0 THEN LIKELY(v0.c0) END);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE (v0.c0 IN ())  WHEN vt0.c0 THEN LIKELY(v0.c0) END WHERE (((((vt0.c0, vt0.c1, '709713340')) BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (CAST(vt0.c1 AS INTEGER), (- (vt0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CASE LOWER(t0.c32)  WHEN (t0.c1 IN (t0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE 1190203396 COLLATE NOCASE END WHERE (((((t0.c1)>>(t0.c32)))*(('885716380' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>>(t0.c32)))*(('885716380' IN (v0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE LOWER(t0.c32)  WHEN (t0.c1 IN (t0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE 1190203396 COLLATE NOCASE END);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CASE LOWER(t0.c32)  WHEN (t0.c1 IN (t0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE 1190203396 COLLATE NOCASE END WHERE (((((t0.c1)>>(t0.c32)))*(('885716380' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>>(t0.c32)))*(('885716380' IN (v0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE LOWER(t0.c32)  WHEN (t0.c1 IN (t0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE 1190203396 COLLATE NOCASE END);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CASE LOWER(t0.c32)  WHEN (t0.c1 IN (t0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE 1190203396 COLLATE NOCASE END WHERE (((((t0.c1)>>(t0.c32)))*(('885716380' IN (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c1)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((('-255116310', v0.c0, vt0.c1, v0.c0, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)), (vt0.c0 IN (vt0.c1, vt0.c1)), NULL, (NOT (vt0.c1)), vt0.c0)) AND ((CAST(v0.c0 AS INTEGER), (vt0.c1 IN ()), (((vt0.c1))<>((vt0.c1))), vt0.c1 COLLATE RTRIM, v0.c0))) WHERE (((((((((((vt0.c1)IS(v0.c0)))AND('8c6f}[')))OR(((v0.c0) NOTNULL))))AND(TRIM(vt0.c0, vt0.c0))))OR(((vt0.c1)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)IS(v0.c0)))AND('8c6f}[')))OR(((v0.c0) NOTNULL))))AND(TRIM(vt0.c0, vt0.c0))))OR(((vt0.c1)|(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((('-255116310', v0.c0, vt0.c1, v0.c0, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)), (vt0.c0 IN (vt0.c1, vt0.c1)), NULL, (NOT (vt0.c1)), vt0.c0)) AND ((CAST(v0.c0 AS INTEGER), (vt0.c1 IN ()), (((vt0.c1))!=((vt0.c1))), vt0.c1 COLLATE RTRIM, v0.c0))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((('-255116310', v0.c0, vt0.c1, v0.c0, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)), (vt0.c0 IN (vt0.c1, vt0.c1)), NULL, (NOT (vt0.c1)), vt0.c0)) AND ((CAST(v0.c0 AS INTEGER), (vt0.c1 IN ()), (((vt0.c1))<>((vt0.c1))), vt0.c1 COLLATE RTRIM, v0.c0))) WHERE (((((((((((vt0.c1)IS(v0.c0)))AND('8c6f}[')))OR(((v0.c0) NOTNULL))))AND(TRIM(vt0.c0, vt0.c0))))OR(((vt0.c1)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)IS(v0.c0)))AND('8c6f}[')))OR(((v0.c0) NOTNULL))))AND(TRIM(vt0.c0, vt0.c0))))OR(((vt0.c1)|(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((('-255116310', v0.c0, vt0.c1, v0.c0, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)), (vt0.c0 IN (vt0.c1, vt0.c1)), NULL, (NOT (vt0.c1)), vt0.c0)) AND ((CAST(v0.c0 AS INTEGER), (vt0.c1 IN ()), (((vt0.c1))!=((vt0.c1))), vt0.c1 COLLATE RTRIM, v0.c0))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((('-255116310', v0.c0, vt0.c1, v0.c0, vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)), (vt0.c0 IN (vt0.c1, vt0.c1)), NULL, (NOT (vt0.c1)), vt0.c0)) AND ((CAST(v0.c0 AS INTEGER), (vt0.c1 IN ()), (((vt0.c1))<>((vt0.c1))), vt0.c1 COLLATE RTRIM, v0.c0))) WHERE (((((((((((vt0.c1)IS(v0.c0)))AND('8c6f}[')))OR(((v0.c0) NOTNULL))))AND(TRIM(vt0.c0, vt0.c0))))OR(((vt0.c1)|(v0.c0)))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM t0 INDEXED BY i52, v0 WHERE (t0.c0) ORDER BY CAST(t0.c1 AS REAL) COLLATE BINARY ASC  NULLS LAST, t0.c2 ASC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INDEXED BY i52, v0 ORDER BY CAST(t0.c1 AS REAL) COLLATE BINARY ASC  NULLS LAST, t0.c2 ASC, NULL ASC);
SELECT ALL * FROM t0 INDEXED BY i52, v0 WHERE (t0.c0) ORDER BY CAST(t0.c1 AS REAL) COLLATE BINARY ASC  NULLS LAST, t0.c2 ASC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INDEXED BY i52, v0 ORDER BY CAST(t0.c1 AS REAL) COLLATE BINARY ASC  NULLS LAST, t0.c2 ASC, NULL ASC);
SELECT ALL * FROM t0 INDEXED BY i52, v0 WHERE (t0.c0) ORDER BY CAST(t0.c1 AS REAL) COLLATE BINARY ASC  NULLS LAST, t0.c2 ASC, NULL ASC;
SELECT ALL * FROM t0, vt0, v0 WHERE ('HI)g[p->m');
SELECT SUM(count) FROM (SELECT ALL (('HI)g[p->m') IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ('HI)g[p->m');
SELECT SUM(count) FROM (SELECT ALL (('HI)g[p->m') IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ('HI)g[p->m');
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON DATE(CAST(t0.c0 AS NUMERIC), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c32)), (v0.c0 IN ()), ((v0.c0) BETWEEN (t0.c1) AND (t0.c32)), ((((((((t0.c1)OR(t0.c1)))AND(t0.c32)))AND(v0.c0)))OR(t0.c0))) WHERE ((+ ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))))) ORDER BY ((CAST(t0.c1 AS REAL))LIKE(((t0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON DATE(CAST(t0.c0 AS NUMERIC), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c32)), (v0.c0 IN ()), ((v0.c0) BETWEEN (t0.c1) AND (t0.c32)), ((((((((t0.c1)OR(t0.c1)))AND(t0.c32)))AND(v0.c0)))OR(t0.c0))) ORDER BY ((CAST(t0.c1 AS REAL))LIKE(((t0.c2) ISNULL))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON DATE(CAST(t0.c0 AS NUMERIC), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c32)), (v0.c0 IN ()), ((v0.c0) BETWEEN (t0.c1) AND (t0.c32)), ((((((((t0.c1)OR(t0.c1)))AND(t0.c32)))AND(v0.c0)))OR(t0.c0))) WHERE ((+ ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))))) ORDER BY ((CAST(t0.c1 AS REAL))LIKE(((t0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON DATE(CAST(t0.c0 AS NUMERIC), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c32)), (v0.c0 IN ()), ((v0.c0) BETWEEN (t0.c1) AND (t0.c32)), ((((((((t0.c1)OR(t0.c1)))AND(t0.c32)))AND(v0.c0)))OR(t0.c0))) ORDER BY ((CAST(t0.c1 AS REAL))LIKE(((t0.c2) ISNULL))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON DATE(CAST(t0.c0 AS NUMERIC), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c32)), (v0.c0 IN ()), ((v0.c0) BETWEEN (t0.c1) AND (t0.c32)), ((((((((t0.c1)OR(t0.c1)))AND(t0.c32)))AND(v0.c0)))OR(t0.c0))) WHERE ((+ ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))))) ORDER BY ((CAST(t0.c1 AS REAL))LIKE(((t0.c2) ISNULL))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))||(' 閉*Y')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))||(' 閉*Y'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))||(' 閉*Y')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))||(' 閉*Y'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))||(' 閉*Y')));
SELECT * FROM vt0, t0 WHERE ((~ (LENGTH(t0.c32))));
SELECT SUM(count) FROM (SELECT (((~ (LENGTH(t0.c32)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (LENGTH(t0.c32))));
SELECT SUM(count) FROM (SELECT (((~ (LENGTH(t0.c32)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (LENGTH(t0.c32))));
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT * FROM vt0, v0 WHERE (((((x'')<=(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((x'')<=(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((x'')<=(v0.c0))) NOT NULL));
SELECT * FROM t0, vt0, v0 WHERE (NULL) ORDER BY (((t0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE), 9.01737337E8, ((t0.c2) NOTNULL))) AND ((v0.c0 COLLATE RTRIM, (~ (vt0.c1)), CHAR(vt0.c1, t0.c32, t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((t0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE), 9.01737337E8, ((t0.c2) NOTNULL))) AND ((v0.c0 COLLATE RTRIM, (~ (vt0.c1)), CHAR(vt0.c1, t0.c32, t0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (NULL) ORDER BY (((t0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE), 9.01737337E8, ((t0.c2) NOTNULL))) AND ((v0.c0 COLLATE RTRIM, (~ (vt0.c1)), CHAR(vt0.c1, t0.c32, t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((t0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE), 9.01737337E8, ((t0.c2) NOTNULL))) AND ((v0.c0 COLLATE RTRIM, (~ (vt0.c1)), CHAR(vt0.c1, t0.c32, t0.c2)))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, v0 WHERE (NULL) ORDER BY (((t0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE), 9.01737337E8, ((t0.c2) NOTNULL))) AND ((v0.c0 COLLATE RTRIM, (~ (vt0.c1)), CHAR(vt0.c1, t0.c32, t0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(((NULL)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS(((NULL)&(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(((NULL)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS(((NULL)&(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(((NULL)&(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON ((((((t0.c32)AND(vt0.c0)))AND(t0.c32))) NOT NULL) WHERE ((((vt0.c0 IN (vt0.c0, t0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, t0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((((((t0.c32)AND(vt0.c0)))AND(t0.c32))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON ((((((t0.c32)AND(vt0.c0)))AND(t0.c32))) NOT NULL) WHERE ((((vt0.c0 IN (vt0.c0, t0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, t0.c2))) ISNULL)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON ((((((t0.c32)AND(vt0.c0)))AND(t0.c32))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON ((((((t0.c32)AND(vt0.c0)))AND(t0.c32))) NOT NULL) WHERE ((((vt0.c0 IN (vt0.c0, t0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ((('APbrN4I')%(v0.c0))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN ((('APbrN4I')%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ((('APbrN4I')%(v0.c0))))) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN (v0.c0)) IN ((('APbrN4I')%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 IN (v0.c0)) IN ((('APbrN4I')%(v0.c0))))) ORDER BY v0.c0  NULLS LAST;
SELECT * FROM vt0, t0, v0 WHERE (((t0.c0) IS TRUE)) ORDER BY (((((t0.c0))>((t0.c32)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c0))>((t0.c32)))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (((t0.c0) IS TRUE)) ORDER BY (((((t0.c0))>((t0.c32)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((((t0.c0))>((t0.c32)))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, t0, v0 WHERE (((t0.c0) IS TRUE)) ORDER BY (((((t0.c0))>((t0.c32)))) NOT NULL)  NULLS LAST;
SELECT * FROM v0 WHERE ((((- (v0.c0)))AND(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))AND(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0)))AND(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))AND(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0)))AND(((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM t0, v0 WHERE (UPPER(DISTINCT ((t0.c1) NOT NULL))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN t0.c2 THEN t0.c2 END WHEN ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN ((t0.c2)<=(t0.c0)) WHEN (((t0.c32)) NOT BETWEEN ((t0.c0)) AND ((t0.c32))) THEN (((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) ELSE CAST(v0.c0 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c1) NOT NULL))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN t0.c2 THEN t0.c2 END WHEN ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN ((t0.c2)<=(t0.c0)) WHEN (((t0.c32)) NOT BETWEEN ((t0.c0)) AND ((t0.c32))) THEN (((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) ELSE CAST(v0.c0 AS INTEGER) END ASC);
SELECT * FROM t0, v0 WHERE (UPPER(DISTINCT ((t0.c1) NOT NULL))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN t0.c2 THEN t0.c2 END WHEN ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN ((t0.c2)<=(t0.c0)) WHEN (((t0.c32)) NOT BETWEEN ((t0.c0)) AND ((t0.c32))) THEN (((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) ELSE CAST(v0.c0 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c1) NOT NULL))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN t0.c2 THEN t0.c2 END WHEN ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN ((t0.c2)<=(t0.c0)) WHEN (((t0.c32)) NOT BETWEEN ((t0.c0)) AND ((t0.c32))) THEN (((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) ELSE CAST(v0.c0 AS INTEGER) END ASC);
SELECT * FROM t0, v0 WHERE (UPPER(DISTINCT ((t0.c1) NOT NULL))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN t0.c2 THEN t0.c2 END WHEN ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) THEN ((t0.c2)<=(t0.c0)) WHEN (((t0.c32)) NOT BETWEEN ((t0.c0)) AND ((t0.c32))) THEN (((t0.c0)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) ELSE CAST(v0.c0 AS INTEGER) END ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT * FROM t0, v0 WHERE (CAST(((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) ORDER BY CAST(((t0.c1)<(t0.c32)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((t0.c1)<(t0.c32)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) ORDER BY CAST(((t0.c1)<(t0.c32)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((t0.c1)<(t0.c32)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL)) ORDER BY CAST(((t0.c1)<(t0.c32)) AS NUMERIC)  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (NULLIF(DISTINCT vt0.c1, ((t0.c1) BETWEEN (t0.c32) AND (vt0.c1)))) ORDER BY CAST((NOT (t0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c1, ((t0.c1) BETWEEN (t0.c32) AND (vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((NOT (t0.c1)) AS BLOB) ASC);
SELECT * FROM t0, vt0 WHERE (NULLIF(DISTINCT vt0.c1, ((t0.c1) BETWEEN (t0.c32) AND (vt0.c1)))) ORDER BY CAST((NOT (t0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c1, ((t0.c1) BETWEEN (t0.c32) AND (vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((NOT (t0.c1)) AS BLOB) ASC);
SELECT * FROM t0, vt0 WHERE (NULLIF(DISTINCT vt0.c1, ((t0.c1) BETWEEN (t0.c32) AND (vt0.c1)))) ORDER BY CAST((NOT (t0.c1)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (CASE t0.c1  WHEN t0.c1 THEN CAST('-1481960875' AS REAL) WHEN x'' THEN x'' WHEN (+ (t0.c1)) THEN (~ (v0.c0)) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c1 THEN CAST('-1481960875' AS REAL) WHEN x'' THEN x'' WHEN (+ (t0.c1)) THEN (~ (v0.c0)) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (CASE t0.c1  WHEN t0.c1 THEN CAST('-1481960875' AS REAL) WHEN x'' THEN x'' WHEN (+ (t0.c1)) THEN (~ (v0.c0)) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c1 THEN CAST('-1481960875' AS REAL) WHEN x'' THEN x'' WHEN (+ (t0.c1)) THEN (~ (v0.c0)) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (CASE t0.c1  WHEN t0.c1 THEN CAST('-1481960875' AS REAL) WHEN x'' THEN x'' WHEN (+ (t0.c1)) THEN (~ (v0.c0)) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((t0.c2)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c2)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((t0.c2)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c2)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((t0.c2)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (- ((((NULL, 0.534189213011816, t0.c2)) NOT BETWEEN ((0.6062760755025467, vt0.c0, t0.c1)) AND ((vt0.c0, v0.c0, t0.c0))))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1))))) WHERE (((t0.c1) NOT BETWEEN (NULL) AND ((t0.c2 IN ())))) ORDER BY CAST(0.4863929106448014 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (NULL) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (- ((((NULL, 0.534189213011816, t0.c2)) NOT BETWEEN ((0.6062760755025467, vt0.c0, t0.c1)) AND ((vt0.c0, v0.c0, t0.c0))))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1))))) ORDER BY CAST(0.4863929106448014 AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (- ((((NULL, 0.534189213011816, t0.c2)) NOT BETWEEN ((0.6062760755025467, vt0.c0, t0.c1)) AND ((vt0.c0, v0.c0, t0.c0))))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1))))) WHERE (((t0.c1) NOT BETWEEN (NULL) AND ((t0.c2 IN ())))) ORDER BY CAST(0.4863929106448014 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (NULL) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (- ((((NULL, 0.534189213011816, t0.c2)) NOT BETWEEN ((0.6062760755025467, vt0.c0, t0.c1)) AND ((vt0.c0, v0.c0, t0.c0))))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1))))) ORDER BY CAST(0.4863929106448014 AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(((v0.c0) IS TRUE))) ORDER BY ((v0.c0 COLLATE RTRIM)%(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)%(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(((v0.c0) IS TRUE))) ORDER BY ((v0.c0 COLLATE RTRIM)%(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((v0.c0) IS TRUE))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)%(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_USED(((v0.c0) IS TRUE))) ORDER BY ((v0.c0 COLLATE RTRIM)%(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (NULLIF(STRFTIME(t0.c1, t0.c32, t0.c0, t0.c32, t0.c2), t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(STRFTIME(t0.c1, t0.c32, t0.c0, t0.c32, t0.c2), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (NULLIF(STRFTIME(t0.c1, t0.c32, t0.c0, t0.c32, t0.c2), t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(STRFTIME(t0.c1, t0.c32, t0.c0, t0.c32, t0.c2), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (NULLIF(STRFTIME(t0.c1, t0.c32, t0.c0, t0.c32, t0.c2), t0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0)IS(vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((v0.c0)IS(vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0)IS(vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((v0.c0)IS(vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0)IS(vt0.c1)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON ((((NULL) BETWEEN (v0.c0) AND (t0.c32)))=(((x'')LIKE(vt0.c0)))) WHERE (LIKELIHOOD(CAST(v0.c0 AS BLOB), 0.8358826222132706)) ORDER BY (- (t0.c32)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(v0.c0 AS BLOB), 0.8358826222132706)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON ((((NULL) BETWEEN (v0.c0) AND (t0.c32)))==(((x'')LIKE(vt0.c0)))) ORDER BY (- (t0.c32)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON ((((NULL) BETWEEN (v0.c0) AND (t0.c32)))=(((x'')LIKE(vt0.c0)))) WHERE (LIKELIHOOD(CAST(v0.c0 AS BLOB), 0.8358826222132706)) ORDER BY (- (t0.c32)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(v0.c0 AS BLOB), 0.8358826222132706)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON ((((NULL) BETWEEN (v0.c0) AND (t0.c32)))==(((x'')LIKE(vt0.c0)))) ORDER BY (- (t0.c32)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 LEFT OUTER JOIN vt0 ON ((((NULL) BETWEEN (v0.c0) AND (t0.c32)))=(((x'')LIKE(vt0.c0)))) WHERE (LIKELIHOOD(CAST(v0.c0 AS BLOB), 0.8358826222132706)) ORDER BY (- (t0.c32)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (COALESCE(json_patch(vt0.c1, vt0.c1), (vt0.c1 IN ()))) ORDER BY ((vt0.c0)/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ASC  NULLS LAST, HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL END) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(json_patch(vt0.c1, vt0.c1), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ASC  NULLS LAST, HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL END) DESC);
SELECT ALL * FROM vt0 WHERE (COALESCE(json_patch(vt0.c1, vt0.c1), (vt0.c1 IN ()))) ORDER BY ((vt0.c0)/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ASC  NULLS LAST, HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL END) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(json_patch(vt0.c1, vt0.c1), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ASC  NULLS LAST, HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL END) DESC);
SELECT ALL * FROM vt0 WHERE (COALESCE(json_patch(vt0.c1, vt0.c1), (vt0.c1 IN ()))) ORDER BY ((vt0.c0)/(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) ASC  NULLS LAST, HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL END) DESC;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0, vt0 WHERE (CAST(((((vt0.c0)AND(t0.c1)))AND(t0.c32)) AS INTEGER)) ORDER BY ((((((((((t0.c1)AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(t0.c1)))AND(t0.c32)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((((((t0.c1)AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0, vt0 WHERE (CAST(((((vt0.c0)AND(t0.c1)))AND(t0.c32)) AS INTEGER)) ORDER BY ((((((((((t0.c1)AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(t0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(t0.c1)))AND(t0.c32)) AS INTEGER)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((((((t0.c1)AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, v0, vt0 WHERE (CAST(((((vt0.c0)AND(t0.c1)))AND(t0.c32)) AS INTEGER)) ORDER BY ((((((((((t0.c1)AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(t0.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON x'' WHERE ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))>=((x'')));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON x'' ORDER BY vt0.c0  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))>=((x''))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON x'' WHERE ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))>=((x'')));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON x'' ORDER BY vt0.c0  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))>=((x''))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON x'' WHERE ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))>=((x'')));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))>=(NULL)) WHERE (((((((((((((t0.c32)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(x'')))AND(vt0.c0)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c32)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(x'')))AND(vt0.c0)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))>=(NULL)));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))>=(NULL)) WHERE (((((((((((((t0.c32)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(x'')))AND(vt0.c0)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c32)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(x'')))AND(vt0.c0)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))>=(NULL)));
SELECT * FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))>=(NULL)) WHERE (((((((((((((t0.c32)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(x'')))AND(vt0.c0)))AND(v0.c0)) COLLATE RTRIM);
SELECT * FROM v0, vt0 INDEXED BY i52 NATURAL JOIN t0 WHERE (((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 INDEXED BY i52 NATURAL JOIN t0);
SELECT * FROM v0, vt0 INDEXED BY i52 NATURAL JOIN t0 WHERE (((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 INDEXED BY i52 NATURAL JOIN t0);
SELECT * FROM vt0, v0, t0 WHERE (((((t0.c32 IN (vt0.c1)), ((vt0.c1)/(t0.c1)), LTRIM(0.23354700549036, t0.c1)))>=((t0.c1, CASE t0.c2  WHEN '969954511' THEN vt0.c0 WHEN t0.c32 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END, '943565376')))) ORDER BY (((('Yc') IS FALSE))<=(IFNULL(DISTINCT t0.c0, t0.c32))) DESC, ((v0.c0) NOT BETWEEN ((((t0.c0, t0.c1, NULL)) BETWEEN ((vt0.c1, t0.c32, v0.c0)) AND ((vt0.c1, t0.c1, t0.c1)))) AND (((vt0.c1)>>(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32 IN (vt0.c1)), ((vt0.c1)/(t0.c1)), LTRIM(0.23354700549036, t0.c1)))>=((t0.c1, CASE t0.c2  WHEN '969954511' THEN vt0.c0 WHEN t0.c32 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END, '943565376')))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((('Yc') IS FALSE))<=(IFNULL(DISTINCT t0.c0, t0.c32))) DESC, ((v0.c0) NOT BETWEEN ((((t0.c0, t0.c1, NULL)) BETWEEN ((vt0.c1, t0.c32, v0.c0)) AND ((vt0.c1, t0.c1, t0.c1)))) AND (((vt0.c1)>>(t0.c1))))  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE (((((t0.c32 IN (vt0.c1)), ((vt0.c1)/(t0.c1)), LTRIM(0.23354700549036, t0.c1)))>=((t0.c1, CASE t0.c2  WHEN '969954511' THEN vt0.c0 WHEN t0.c32 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END, '943565376')))) ORDER BY (((('Yc') IS FALSE))<=(IFNULL(DISTINCT t0.c0, t0.c32))) DESC, ((v0.c0) NOT BETWEEN ((((t0.c0, t0.c1, NULL)) BETWEEN ((vt0.c1, t0.c32, v0.c0)) AND ((vt0.c1, t0.c1, t0.c1)))) AND (((vt0.c1)>>(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c32 IN (vt0.c1)), ((vt0.c1)/(t0.c1)), LTRIM(0.23354700549036, t0.c1)))>=((t0.c1, CASE t0.c2  WHEN '969954511' THEN vt0.c0 WHEN t0.c32 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END, '943565376')))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((('Yc') IS FALSE))<=(IFNULL(DISTINCT t0.c0, t0.c32))) DESC, ((v0.c0) NOT BETWEEN ((((t0.c0, t0.c1, NULL)) BETWEEN ((vt0.c1, t0.c32, v0.c0)) AND ((vt0.c1, t0.c1, t0.c1)))) AND (((vt0.c1)>>(t0.c1))))  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE (((((t0.c32 IN (vt0.c1)), ((vt0.c1)/(t0.c1)), LTRIM(0.23354700549036, t0.c1)))>=((t0.c1, CASE t0.c2  WHEN '969954511' THEN vt0.c0 WHEN t0.c32 THEN vt0.c0 WHEN t0.c0 THEN v0.c0 END, '943565376')))) ORDER BY (((('Yc') IS FALSE))<=(IFNULL(DISTINCT t0.c0, t0.c32))) DESC, ((v0.c0) NOT BETWEEN ((((t0.c0, t0.c1, NULL)) BETWEEN ((vt0.c1, t0.c32, v0.c0)) AND ((vt0.c1, t0.c1, t0.c1)))) AND (((vt0.c1)>>(t0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) ORDER BY (((- (v0.c0)))OR(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('0.8999401189424046')))AND(v0.c0)))) ASC  NULLS LAST, (NOT (((v0.c0)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))OR(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('0.8999401189424046')))AND(v0.c0)))) ASC  NULLS LAST, (NOT (((v0.c0)/(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) ORDER BY (((- (v0.c0)))OR(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('0.8999401189424046')))AND(v0.c0)))) ASC  NULLS LAST, (NOT (((v0.c0)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))OR(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('0.8999401189424046')))AND(v0.c0)))) ASC  NULLS LAST, (NOT (((v0.c0)/(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) ORDER BY (((- (v0.c0)))OR(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('0.8999401189424046')))AND(v0.c0)))) ASC  NULLS LAST, (NOT (((v0.c0)/(v0.c0))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c32) ORDER BY ((((~ (t0.c2))))==((t0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c32) IS TRUE)  as count FROM v0, t0 ORDER BY ((((~ (t0.c2))))=((t0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c32) ORDER BY ((((~ (t0.c2))))==((t0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c32) IS TRUE)  as count FROM v0, t0 ORDER BY ((((~ (t0.c2))))=((t0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c32) ORDER BY ((((~ (t0.c2))))==((t0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT * FROM vt0, v0, t0 WHERE (((v0.c0) BETWEEN (CAST(t0.c1 AS BLOB)) AND ('247911639' COLLATE RTRIM))) ORDER BY -1262565892  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (CAST(t0.c1 AS BLOB)) AND ('247911639' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY -1262565892  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE (((v0.c0) BETWEEN (CAST(t0.c1 AS BLOB)) AND ('247911639' COLLATE RTRIM))) ORDER BY -1262565892  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (CAST(t0.c1 AS BLOB)) AND ('247911639' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY -1262565892  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c1)>=(t0.c32)))%(((((((((t0.c1)AND(NULL)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>=(t0.c32)))%(((((((((t0.c1)AND(NULL)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1)>=(t0.c32)))%(((((((((t0.c1)AND(NULL)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>=(t0.c32)))%(((((((((t0.c1)AND(NULL)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1)>=(t0.c32)))%(((((((((t0.c1)AND(NULL)))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON CAST(((((v0.c0)AND(t0.c1)))AND(t0.c2)) AS NUMERIC) WHERE (t0.c1) ORDER BY CAST(((t0.c32) BETWEEN (t0.c1) AND (t0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(((((v0.c0)AND(t0.c1)))AND(t0.c2)) AS NUMERIC) ORDER BY CAST(((t0.c32) BETWEEN (t0.c1) AND (t0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON CAST(((((v0.c0)AND(t0.c1)))AND(t0.c2)) AS NUMERIC) WHERE (t0.c1) ORDER BY CAST(((t0.c32) BETWEEN (t0.c1) AND (t0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(((((v0.c0)AND(t0.c1)))AND(t0.c2)) AS NUMERIC) ORDER BY CAST(((t0.c32) BETWEEN (t0.c1) AND (t0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON CAST(((((v0.c0)AND(t0.c1)))AND(t0.c2)) AS NUMERIC) WHERE (t0.c1) ORDER BY CAST(((t0.c32) BETWEEN (t0.c1) AND (t0.c1)) AS NUMERIC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((v0.c0)AND(v0.c0)))AND(vt0.c1)) COLLATE NOCASE) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE);
SELECT ALL COUNT(*) FROM v0 WHERE (RTRIM(UNLIKELY(v0.c0))) ORDER BY ' 閉*y'  NULLS FIRST, CASE WHEN LOWER(DISTINCT x'b8d4') THEN (((v0.c0))>((NULL))) END, ((v0.c0 COLLATE NOCASE)/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(UNLIKELY(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ' 閉*y'  NULLS FIRST, CASE WHEN LOWER(DISTINCT x'b8d4') THEN (((v0.c0))>((NULL))) END, ((v0.c0 COLLATE NOCASE)/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (RTRIM(UNLIKELY(v0.c0))) ORDER BY ' 閉*y'  NULLS FIRST, CASE WHEN LOWER(DISTINCT x'b8d4') THEN (((v0.c0))>((NULL))) END, ((v0.c0 COLLATE NOCASE)/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM(UNLIKELY(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ' 閉*y'  NULLS FIRST, CASE WHEN LOWER(DISTINCT x'b8d4') THEN (((v0.c0))>((NULL))) END, ((v0.c0 COLLATE NOCASE)/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (RTRIM(UNLIKELY(v0.c0))) ORDER BY ' 閉*y'  NULLS FIRST, CASE WHEN LOWER(DISTINCT x'b8d4') THEN (((v0.c0))>((NULL))) END, ((v0.c0 COLLATE NOCASE)/(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT * FROM t0, v0 WHERE ((((((((((v0.c0)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((((((((v0.c0)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((((((((v0.c0)AND(t0.c1)))AND(t0.c0)))AND(t0.c1)))AND(t0.c0)) IN ()));
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (IFNULL(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (IFNULL(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (((v0.c0)IS NOT(v0.c0))) AND (IFNULL(v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(1258074401 AS NUMERIC) IN ())) ORDER BY ((CASE t0.c1  WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END) BETWEEN (x'15b9' COLLATE NOCASE) AND (((t0.c0)IS(t0.c0)))) ASC, (+ ((- (t0.c32)))), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c32)OR(t0.c32))) AND ((((t0.c32, t0.c1, t0.c1))==((t0.c2, t0.c2, t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(1258074401 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END) BETWEEN (x'15b9' COLLATE NOCASE) AND (((t0.c0)IS(t0.c0)))) ASC, (+ ((- (t0.c32)))), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c32)OR(t0.c32))) AND ((((t0.c32, t0.c1, t0.c1))==((t0.c2, t0.c2, t0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(1258074401 AS NUMERIC) IN ())) ORDER BY ((CASE t0.c1  WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END) BETWEEN (x'15b9' COLLATE NOCASE) AND (((t0.c0)IS(t0.c0)))) ASC, (+ ((- (t0.c32)))), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c32)OR(t0.c32))) AND ((((t0.c32, t0.c1, t0.c1))==((t0.c2, t0.c2, t0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(1258074401 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END) BETWEEN (x'15b9' COLLATE NOCASE) AND (((t0.c0)IS(t0.c0)))) ASC, (+ ((- (t0.c32)))), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c32)OR(t0.c32))) AND ((((t0.c32, t0.c1, t0.c1))==((t0.c2, t0.c2, t0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(1258074401 AS NUMERIC) IN ())) ORDER BY ((CASE t0.c1  WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 END) BETWEEN (x'15b9' COLLATE NOCASE) AND (((t0.c0)IS(t0.c0)))) ASC, (+ ((- (t0.c32)))), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c32)OR(t0.c32))) AND ((((t0.c32, t0.c1, t0.c1))==((t0.c2, t0.c2, t0.c1))))) ASC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (HEX(DISTINCT '563668121')) ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (((t0.c0)IS(v0.c0))) AND (CAST(t0.c1 AS TEXT))) ASC  NULLS FIRST, CASE WHEN (+ (t0.c0)) THEN t0.c32 COLLATE NOCASE WHEN v0.c0 THEN CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT '563668121')) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (((t0.c0)IS(v0.c0))) AND (CAST(t0.c1 AS TEXT))) ASC  NULLS FIRST, CASE WHEN (+ (t0.c0)) THEN t0.c32 COLLATE NOCASE WHEN v0.c0 THEN CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE RTRIM END DESC);
SELECT * FROM v0, t0 WHERE (HEX(DISTINCT '563668121')) ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (((t0.c0)IS(v0.c0))) AND (CAST(t0.c1 AS TEXT))) ASC  NULLS FIRST, CASE WHEN (+ (t0.c0)) THEN t0.c32 COLLATE NOCASE WHEN v0.c0 THEN CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT '563668121')) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (((t0.c0)IS(v0.c0))) AND (CAST(t0.c1 AS TEXT))) ASC  NULLS FIRST, CASE WHEN (+ (t0.c0)) THEN t0.c32 COLLATE NOCASE WHEN v0.c0 THEN CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE RTRIM END DESC);
SELECT * FROM v0, t0 WHERE (HEX(DISTINCT '563668121')) ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (((t0.c0)IS(v0.c0))) AND (CAST(t0.c1 AS TEXT))) ASC  NULLS FIRST, CASE WHEN (+ (t0.c0)) THEN t0.c32 COLLATE NOCASE WHEN v0.c0 THEN CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END WHEN t0.c1 COLLATE BINARY THEN t0.c2 COLLATE RTRIM END DESC;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c32 COLLATE BINARY IN (((vt0.c0) IS TRUE)))) ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c32)))AND(((((((((((((((((t0.c32)AND(vt0.c1)))OR(t0.c1)))AND(vt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(t0.c0)))AND(v0.c0)))))AND(CASE vt0.c1  WHEN t0.c0 THEN 0.3626022068357111 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c32 COLLATE BINARY IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c32)))AND(((((((((((((((((t0.c32)AND(vt0.c1)))OR(t0.c1)))AND(vt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(t0.c0)))AND(v0.c0)))))AND(CASE vt0.c1  WHEN t0.c0 THEN 0.3626022068357111 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c32 COLLATE BINARY IN (((vt0.c0) IS TRUE)))) ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c32)))AND(((((((((((((((((t0.c32)AND(vt0.c1)))OR(t0.c1)))AND(vt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(t0.c0)))AND(v0.c0)))))AND(CASE vt0.c1  WHEN t0.c0 THEN 0.3626022068357111 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c32 COLLATE BINARY IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c32)))AND(((((((((((((((((t0.c32)AND(vt0.c1)))OR(t0.c1)))AND(vt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(t0.c0)))AND(v0.c0)))))AND(CASE vt0.c1  WHEN t0.c0 THEN 0.3626022068357111 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((t0.c32 COLLATE BINARY IN (((vt0.c0) IS TRUE)))) ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c32)))AND(((((((((((((((((t0.c32)AND(vt0.c1)))OR(t0.c1)))AND(vt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(t0.c0)))AND(v0.c0)))))AND(CASE vt0.c1  WHEN t0.c0 THEN 0.3626022068357111 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((STRFTIME(vt0.c0, t0.c0, t0.c32))OR(((((v0.c0)OR('1195632550')))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((((STRFTIME(vt0.c0, t0.c0, t0.c32))OR(((((v0.c0)OR('1195632550')))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c32))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((STRFTIME(vt0.c0, t0.c0, t0.c32))OR(((((v0.c0)OR('1195632550')))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((((STRFTIME(vt0.c0, t0.c0, t0.c32))OR(((((v0.c0)OR('1195632550')))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c32))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((STRFTIME(vt0.c0, t0.c0, t0.c32))OR(((((v0.c0)OR('1195632550')))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (t0.c32) AND (t0.c32)))));
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)-(t0.c0))))) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)-(t0.c0))))) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)-(t0.c0))))) ORDER BY t0.c2  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (0x516fe34d) ORDER BY (+ (((((((((t0.c1)AND(NULL)))AND(v0.c0)))AND(x'')))AND(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X516fe34d) IS TRUE)  as count FROM t0, v0 ORDER BY (+ (((((((((t0.c1)AND(NULL)))AND(v0.c0)))AND(x'')))AND(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (0x516fe34d) ORDER BY (+ (((((((((t0.c1)AND(NULL)))AND(v0.c0)))AND(x'')))AND(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X516fe34d) IS TRUE)  as count FROM t0, v0 ORDER BY (+ (((((((((t0.c1)AND(NULL)))AND(v0.c0)))AND(x'')))AND(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (0x516fe34d) ORDER BY (+ (((((((((t0.c1)AND(NULL)))AND(v0.c0)))AND(x'')))AND(v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1)=(vt0.c1)))));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) THEN (~ (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) THEN (~ (t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) THEN (~ (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) THEN (~ (t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c32) BETWEEN (t0.c1) AND (t0.c0)) THEN (~ (t0.c2)) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (0Xffffffff8026f489) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((0xffffffff8026f489) IS TRUE)  as count FROM vt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, t0 WHERE (0Xffffffff8026f489) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((0xffffffff8026f489) IS TRUE)  as count FROM vt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, t0 WHERE (0Xffffffff8026f489) ORDER BY x'';
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, vt0.c0)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c1)|(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, vt0.c0)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c1)|(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, vt0.c0)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c1)|(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, vt0.c0)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c1)|(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, vt0.c1, vt0.c0)) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c1)|(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN (~ (v0.c0)) THEN t0.c0 COLLATE NOCASE ELSE v0.c0 END) ORDER BY CASE WHEN t0.c0 THEN NULL END COLLATE RTRIM DESC, ((x'')>>(json_valid(t0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (v0.c0)) THEN t0.c0 COLLATE NOCASE ELSE v0.c0 END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY CASE WHEN t0.c0 THEN NULL END COLLATE RTRIM DESC, ((x'')>>(json_valid(t0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN (~ (v0.c0)) THEN t0.c0 COLLATE NOCASE ELSE v0.c0 END) ORDER BY CASE WHEN t0.c0 THEN NULL END COLLATE RTRIM DESC, ((x'')>>(json_valid(t0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (v0.c0)) THEN t0.c0 COLLATE NOCASE ELSE v0.c0 END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY CASE WHEN t0.c0 THEN NULL END COLLATE RTRIM DESC, ((x'')>>(json_valid(t0.c1))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN (~ (v0.c0)) THEN t0.c0 COLLATE NOCASE ELSE v0.c0 END) ORDER BY CASE WHEN t0.c0 THEN NULL END COLLATE RTRIM DESC, ((x'')>>(json_valid(t0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ('KE''j') ORDER BY HEX(0xffffffff8d76f59f) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CAST(x'' AS INTEGER))OR((- (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))OR(t0.c32)))))AND(t0.c0)))OR(((t0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (('KE''j') IS TRUE)  as count FROM t0 ORDER BY HEX(0Xffffffff8d76f59f) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CAST(x'' AS INTEGER))OR((- (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))OR(t0.c32)))))AND(t0.c0)))OR(((t0.c1) NOTNULL))));
SELECT ALL * FROM t0 WHERE ('KE''j') ORDER BY HEX(0xffffffff8d76f59f) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CAST(x'' AS INTEGER))OR((- (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))OR(t0.c32)))))AND(t0.c0)))OR(((t0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (('KE''j') IS TRUE)  as count FROM t0 ORDER BY HEX(0Xffffffff8d76f59f) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CAST(x'' AS INTEGER))OR((- (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))OR(t0.c32)))))AND(t0.c0)))OR(((t0.c1) NOTNULL))));
SELECT ALL * FROM t0 WHERE ('KE''j') ORDER BY HEX(0xffffffff8d76f59f) COLLATE NOCASE DESC  NULLS FIRST, ((((((((CAST(x'' AS INTEGER))OR((- (t0.c0)))))AND(((((t0.c2)AND(t0.c1)))OR(t0.c32)))))AND(t0.c0)))OR(((t0.c1) NOTNULL)));
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) IS FALSE)) IS TRUE));
SELECT * FROM vt0, v0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt0.c1)==('閉\r')) THEN ((v0.c0)-(vt0.c0)) ELSE '-31826971' END ASC  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN ((vt0.c1)==('閉\r')) THEN ((v0.c0)-(vt0.c0)) ELSE '-31826971' END ASC  NULLS FIRST, vt0.c1  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt0.c1)==('閉\r')) THEN ((v0.c0)-(vt0.c0)) ELSE '-31826971' END ASC  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN ((vt0.c1)==('閉\r')) THEN ((v0.c0)-(vt0.c0)) ELSE '-31826971' END ASC  NULLS FIRST, vt0.c1  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY CASE WHEN ((vt0.c1)==('閉\r')) THEN ((v0.c0)-(vt0.c0)) ELSE '-31826971' END ASC  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((((((((((v0.c0)AND(v0.c0)))OR('QH''R>8c')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY (((NOT (v0.c0)))||((~ (v0.c0)))) DESC, CASE WHEN ((v0.c0) NOT BETWEEN (0xffffffffbc612e0a) AND (v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) END DESC  NULLS LAST, ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((((((((((v0.c0)AND(v0.c0)))OR('QH''R>8c')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))||((~ (v0.c0)))) DESC, CASE WHEN ((v0.c0) NOT BETWEEN (0Xffffffffbc612e0a) AND (v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) END DESC  NULLS LAST, ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0)) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((((((((((v0.c0)AND(v0.c0)))OR('QH''R>8c')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY (((NOT (v0.c0)))||((~ (v0.c0)))) DESC, CASE WHEN ((v0.c0) NOT BETWEEN (0xffffffffbc612e0a) AND (v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) END DESC  NULLS LAST, ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((((((((((v0.c0)AND(v0.c0)))OR('QH''R>8c')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))||((~ (v0.c0)))) DESC, CASE WHEN ((v0.c0) NOT BETWEEN (0Xffffffffbc612e0a) AND (v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) END DESC  NULLS LAST, ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0)) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((((((((((v0.c0)AND(v0.c0)))OR('QH''R>8c')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) ORDER BY (((NOT (v0.c0)))||((~ (v0.c0)))) DESC, CASE WHEN ((v0.c0) NOT BETWEEN (0xffffffffbc612e0a) AND (v0.c0)) THEN ((v0.c0)GLOB(v0.c0)) END DESC  NULLS LAST, ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0)) DESC;
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT * FROM t0, v0, vt0 WHERE (((v0.c0) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c2)IS NOT(vt0.c1))) BETWEEN (((t0.c1)%(vt0.c1))) AND (((vt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c2)IS NOT(vt0.c1))) BETWEEN (((t0.c1)%(vt0.c1))) AND (((vt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((v0.c0) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c2)IS NOT(vt0.c1))) BETWEEN (((t0.c1)%(vt0.c1))) AND (((vt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c2)IS NOT(vt0.c1))) BETWEEN (((t0.c1)%(vt0.c1))) AND (((vt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((v0.c0) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c2)IS NOT(vt0.c1))) BETWEEN (((t0.c1)%(vt0.c1))) AND (((vt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((t0.c0, t0.c2, t0.c2, vt0.c0, vt0.c0))>=((t0.c32, t0.c32, vt0.c0, t0.c0, t0.c1)))) AND (((NULL)-(0Xffffffff8f629363))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((t0.c0, t0.c2, t0.c2, vt0.c0, vt0.c0))>=((t0.c32, t0.c32, vt0.c0, t0.c0, t0.c1)))) AND (((NULL)-(0Xffffffff8f629363))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY '' DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((t0.c0, t0.c2, t0.c2, vt0.c0, vt0.c0))>=((t0.c32, t0.c32, vt0.c0, t0.c0, t0.c1)))) AND (((NULL)-(0Xffffffff8f629363))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((t0.c0, t0.c2, t0.c2, vt0.c0, vt0.c0))>=((t0.c32, t0.c32, vt0.c0, t0.c0, t0.c1)))) AND (((NULL)-(0Xffffffff8f629363))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY '' DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, t0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN ((((t0.c0, t0.c2, t0.c2, vt0.c0, vt0.c0))>=((t0.c32, t0.c32, vt0.c0, t0.c0, t0.c1)))) AND (((NULL)-(0Xffffffff8f629363))))) ORDER BY '' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(0X25a3431 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0X25a3431 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(0X25a3431 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0X25a3431 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(0X25a3431 AS REAL));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i52, t0 WHERE (((t0.c32)>=(CASE WHEN t0.c32 THEN vt0.c1 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32)>=(CASE WHEN t0.c32 THEN vt0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM vt0 INDEXED BY i52, t0);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i52, t0 WHERE (((t0.c32)>=(CASE WHEN t0.c32 THEN vt0.c1 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32)>=(CASE WHEN t0.c32 THEN vt0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM vt0 INDEXED BY i52, t0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)>=(v0.c0)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY ((v0.c0)>('-1015314898'))  NULLS FIRST, CASE WHEN x'6fba' THEN ((((x'')OR(v0.c0)))OR(v0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(v0.c0)))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0)>('-1015314898'))  NULLS FIRST, CASE WHEN x'6fba' THEN ((((x'')OR(v0.c0)))OR(v0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)>=(v0.c0)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY ((v0.c0)>('-1015314898'))  NULLS FIRST, CASE WHEN x'6fba' THEN ((((x'')OR(v0.c0)))OR(v0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(v0.c0)))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0)>('-1015314898'))  NULLS FIRST, CASE WHEN x'6fba' THEN ((((x'')OR(v0.c0)))OR(v0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)>=(v0.c0)))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY ((v0.c0)>('-1015314898'))  NULLS FIRST, CASE WHEN x'6fba' THEN ((((x'')OR(v0.c0)))OR(v0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((x'201a')OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((x'201a')OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((x'201a')OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((x'201a')OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((x'201a')OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((((((((t0.c0) IS FALSE))OR(((((((((t0.c2)AND(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c1)))))AND((t0.c32 IN ()))))AND(((v0.c0) NOTNULL))))AND(v0.c0 COLLATE RTRIM)))OR(((t0.c1) NOT BETWEEN (t0.c32) AND (t0.c32)))))OR(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0) IS FALSE))OR(((((((((t0.c2)AND(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c1)))))AND((t0.c32 IN ()))))AND(((v0.c0) NOTNULL))))AND(v0.c0 COLLATE RTRIM)))OR(((t0.c1) NOT BETWEEN (t0.c32) AND (t0.c32)))))OR(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((((((((t0.c0) IS FALSE))OR(((((((((t0.c2)AND(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c1)))))AND((t0.c32 IN ()))))AND(((v0.c0) NOTNULL))))AND(v0.c0 COLLATE RTRIM)))OR(((t0.c1) NOT BETWEEN (t0.c32) AND (t0.c32)))))OR(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0) IS FALSE))OR(((((((((t0.c2)AND(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c1)))))AND((t0.c32 IN ()))))AND(((v0.c0) NOTNULL))))AND(v0.c0 COLLATE RTRIM)))OR(((t0.c1) NOT BETWEEN (t0.c32) AND (t0.c32)))))OR(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((((((((((t0.c0) IS FALSE))OR(((((((((t0.c2)AND(v0.c0)))OR(t0.c1)))OR(v0.c0)))OR(t0.c1)))))AND((t0.c32 IN ()))))AND(((v0.c0) NOTNULL))))AND(v0.c0 COLLATE RTRIM)))OR(((t0.c1) NOT BETWEEN (t0.c32) AND (t0.c32)))))OR(t0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 WHERE (t0.c2 COLLATE BINARY) ORDER BY '<X' DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY '<X' DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2 COLLATE BINARY) ORDER BY '<X' DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY '<X' DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2 COLLATE BINARY) ORDER BY '<X' DESC;
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((x'') NOT BETWEEN (x'f312') AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (x'f312') AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((x'') NOT BETWEEN (x'f312') AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (x'f312') AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE (((x'') NOT BETWEEN (x'f312') AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE vt0.c1 END)));
SELECT * FROM t0, vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))AND(t0.c2)))IS NOT(((vt0.c1) BETWEEN (t0.c0) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))AND(t0.c2)))IS NOT(((vt0.c1) BETWEEN (t0.c0) AND (t0.c32))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))AND(t0.c2)))IS NOT(((vt0.c1) BETWEEN (t0.c0) AND (t0.c32)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))AND(t0.c2)))IS NOT(((vt0.c1) BETWEEN (t0.c0) AND (t0.c32))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE (((((((v0.c0)OR(vt0.c0)))AND(t0.c2)))IS NOT(((vt0.c1) BETWEEN (t0.c0) AND (t0.c32)))));
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c0)*(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)*(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c0)*(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)*(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(((t0.c0)*(v0.c0)) AS NUMERIC));
SELECT ALL * FROM v0, t0, vt0 INDEXED BY i52 WHERE ((((vt0.c0, t0.c32, t0.c1)) NOT BETWEEN ((x'' COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((vt0.c0)!=(t0.c32)))) AND ((((vt0.c1)*(t0.c2)), CAST(t0.c32 AS TEXT), ((t0.c1)|(vt0.c1)))))) ORDER BY (((((((v0.c0))=((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND(v0.c0));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c32, t0.c1)) NOT BETWEEN ((x'' COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((vt0.c0)<>(t0.c32)))) AND ((((vt0.c1)*(t0.c2)), CAST(t0.c32 AS TEXT), ((t0.c1)|(vt0.c1)))))) IS TRUE)  as count FROM v0, t0, vt0 INDEXED BY i52 ORDER BY (((((((v0.c0))==((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND(v0.c0)));
SELECT ALL * FROM v0, t0, vt0 INDEXED BY i52 WHERE ((((vt0.c0, t0.c32, t0.c1)) NOT BETWEEN ((x'' COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((vt0.c0)!=(t0.c32)))) AND ((((vt0.c1)*(t0.c2)), CAST(t0.c32 AS TEXT), ((t0.c1)|(vt0.c1)))))) ORDER BY (((((((v0.c0))=((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND(v0.c0));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c32, t0.c1)) NOT BETWEEN ((x'' COLLATE RTRIM, CAST(v0.c0 AS BLOB), ((vt0.c0)<>(t0.c32)))) AND ((((vt0.c1)*(t0.c2)), CAST(t0.c32 AS TEXT), ((t0.c1)|(vt0.c1)))))) IS TRUE)  as count FROM v0, t0, vt0 INDEXED BY i52 ORDER BY (((((((v0.c0))==((vt0.c0))))AND(CAST(vt0.c0 AS TEXT))))AND(v0.c0)));
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON ((RTRIM(vt0.c0))>>(((t0.c1)>(vt0.c0)))) WHERE (CAST((('-396122459')<=(t0.c1)) AS BLOB)) ORDER BY ((0.8567081701583357)<>(1620817500)) ASC, (((((((t0.c2))>((t0.c0))))OR(((vt0.c0) IS FALSE))))OR('-444561599'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-396122459')<=(t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((RTRIM(vt0.c0))>>(((t0.c1)>(vt0.c0)))) ORDER BY ((0.8567081701583357)!=(1620817500)) ASC, (((((((t0.c2))>((t0.c0))))OR(((vt0.c0) IS FALSE))))OR('-444561599'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON ((RTRIM(vt0.c0))>>(((t0.c1)>(vt0.c0)))) WHERE (CAST((('-396122459')<=(t0.c1)) AS BLOB)) ORDER BY ((0.8567081701583357)<>(1620817500)) ASC, (((((((t0.c2))>((t0.c0))))OR(((vt0.c0) IS FALSE))))OR('-444561599'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-396122459')<=(t0.c1)) AS BLOB)) IS TRUE)  as count FROM t0, v0 FULL OUTER JOIN vt0 ON ((RTRIM(vt0.c0))>>(((t0.c1)>(vt0.c0)))) ORDER BY ((0.8567081701583357)!=(1620817500)) ASC, (((((((t0.c2))>((t0.c0))))OR(((vt0.c0) IS FALSE))))OR('-444561599'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 FULL OUTER JOIN vt0 ON ((RTRIM(vt0.c0))>>(((t0.c1)>(vt0.c0)))) WHERE (CAST((('-396122459')<=(t0.c1)) AS BLOB)) ORDER BY ((0.8567081701583357)<>(1620817500)) ASC, (((((((t0.c2))>((t0.c0))))OR(((vt0.c0) IS FALSE))))OR('-444561599'))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c32) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c32) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c32) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c32) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) ORDER BY (((+ (vt0.c0)))=(t0.c32 COLLATE NOCASE)), vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((+ (vt0.c0)))=(t0.c32 COLLATE NOCASE)), vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) ORDER BY (((+ (vt0.c0)))=(t0.c32 COLLATE NOCASE)), vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((+ (vt0.c0)))=(t0.c32 COLLATE NOCASE)), vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) ORDER BY (((+ (vt0.c0)))=(t0.c32 COLLATE NOCASE)), vt0.c1 DESC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT * FROM v0, t0 WHERE ((NOT (t0.c1))) ORDER BY (- ((((t0.c32, t0.c2, t0.c2)) NOT BETWEEN ((t0.c32, t0.c0, t0.c1)) AND ((t0.c1, t0.c32, v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c1))) IS TRUE)  as count FROM v0, t0 ORDER BY (- ((((t0.c32, t0.c2, t0.c2)) NOT BETWEEN ((t0.c32, t0.c0, t0.c1)) AND ((t0.c1, t0.c32, v0.c0))))) DESC);
SELECT * FROM v0, t0 WHERE ((NOT (t0.c1))) ORDER BY (- ((((t0.c32, t0.c2, t0.c2)) NOT BETWEEN ((t0.c32, t0.c0, t0.c1)) AND ((t0.c1, t0.c32, v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c1))) IS TRUE)  as count FROM v0, t0 ORDER BY (- ((((t0.c32, t0.c2, t0.c2)) NOT BETWEEN ((t0.c32, t0.c0, t0.c1)) AND ((t0.c1, t0.c32, v0.c0))))) DESC);
SELECT * FROM v0, t0 WHERE ((NOT (t0.c1))) ORDER BY (- ((((t0.c32, t0.c2, t0.c2)) NOT BETWEEN ((t0.c32, t0.c0, t0.c1)) AND ((t0.c1, t0.c32, v0.c0))))) DESC;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (+ (CASE t0.c32  WHEN t0.c2 THEN t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (+ (CASE t0.c32  WHEN t0.c2 THEN t0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (+ (CASE t0.c32  WHEN t0.c2 THEN t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (+ (CASE t0.c32  WHEN t0.c2 THEN t0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (+ (CASE t0.c32  WHEN t0.c2 THEN t0.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2)))OR((~ (t0.c1)))))AND(LENGTH(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2)))OR((~ (t0.c1)))))AND(LENGTH(t0.c2)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2)))OR((~ (t0.c1)))))AND(LENGTH(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2)))OR((~ (t0.c1)))))AND(LENGTH(t0.c2)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((t0.c2) NOT BETWEEN (t0.c32) AND (t0.c2)))OR((~ (t0.c1)))))AND(LENGTH(t0.c2))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((TYPEOF(t0.c32))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(t0.c32))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((TYPEOF(t0.c32))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(t0.c32))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((TYPEOF(t0.c32))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE BINARY))) ORDER BY NULL;
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))&(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))&(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT * FROM t0, v0, vt0 WHERE (TYPEOF(t0.c2 COLLATE RTRIM)) ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))OR(t0.c2)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))OR(t0.c2)))OR(vt0.c0)))) DESC);
SELECT * FROM t0, v0, vt0 WHERE (TYPEOF(t0.c2 COLLATE RTRIM)) ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))OR(t0.c2)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))OR(t0.c2)))OR(vt0.c0)))) DESC);
SELECT * FROM t0, v0, vt0 WHERE (TYPEOF(t0.c2 COLLATE RTRIM)) ORDER BY (~ (((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))OR(t0.c2)))OR(vt0.c0)))) DESC;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c2 FULL OUTER JOIN v0 ON ((TRIM(t0.c32, t0.c1)) NOT BETWEEN ((((vt0.c1, t0.c1, t0.c32))=(('0.23354700549036', t0.c1, vt0.c0)))) AND (((t0.c1)GLOB(vt0.c0)))) WHERE (((x'') BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)||(vt0.c0))))) ORDER BY ((t0.c1)/(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)||(vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c2 FULL OUTER JOIN v0 ON ((TRIM(t0.c32, t0.c1)) NOT BETWEEN ((((vt0.c1, t0.c1, t0.c32))==(('0.23354700549036', t0.c1, vt0.c0)))) AND (((t0.c1)GLOB(vt0.c0)))) ORDER BY ((t0.c1)/(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c2 FULL OUTER JOIN v0 ON ((TRIM(t0.c32, t0.c1)) NOT BETWEEN ((((vt0.c1, t0.c1, t0.c32))=(('0.23354700549036', t0.c1, vt0.c0)))) AND (((t0.c1)GLOB(vt0.c0)))) WHERE (((x'') BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)||(vt0.c0))))) ORDER BY ((t0.c1)/(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)||(vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c2 FULL OUTER JOIN v0 ON ((TRIM(t0.c32, t0.c1)) NOT BETWEEN ((((vt0.c1, t0.c1, t0.c32))==(('0.23354700549036', t0.c1, vt0.c0)))) AND (((t0.c1)GLOB(vt0.c0)))) ORDER BY ((t0.c1)/(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c2 FULL OUTER JOIN v0 ON ((TRIM(t0.c32, t0.c1)) NOT BETWEEN ((((vt0.c1, t0.c1, t0.c32))=(('0.23354700549036', t0.c1, vt0.c0)))) AND (((t0.c1)GLOB(vt0.c0)))) WHERE (((x'') BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)||(vt0.c0))))) ORDER BY ((t0.c1)/(vt0.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)-(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)-(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c32 THEN t0.c32 END)-((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c32 THEN t0.c32 END)-((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c32 THEN t0.c32 END)-((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c32 THEN t0.c32 END)-((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c32 THEN t0.c32 END)-((+ (t0.c0)))));
SELECT * FROM v0 WHERE ((+ ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (vt0.c0)));
SELECT * FROM t0, v0 WHERE (((((((t0.c32) IS FALSE))OR(((t0.c0)>(t0.c0)))))OR(((t0.c32)<<(t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c32) IS FALSE))OR(((t0.c0)>(t0.c0)))))OR(((t0.c32)<<(t0.c32))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((t0.c32) IS FALSE))OR(((t0.c0)>(t0.c0)))))OR(((t0.c32)<<(t0.c32)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c32) IS FALSE))OR(((t0.c0)>(t0.c0)))))OR(((t0.c32)<<(t0.c32))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((t0.c32) IS FALSE))OR(((t0.c0)>(t0.c0)))))OR(((t0.c32)<<(t0.c32)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0) BETWEEN (t0.c1) AND (0.5804985801098617))) IS FALSE)) ORDER BY x''  NULLS FIRST, ((SQLITE_VERSION())||(0.167726934576363 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (t0.c1) AND (0.5804985801098617))) IS FALSE)) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY x''  NULLS FIRST, ((SQLITE_VERSION())||(0.167726934576363 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0) BETWEEN (t0.c1) AND (0.5804985801098617))) IS FALSE)) ORDER BY x''  NULLS FIRST, ((SQLITE_VERSION())||(0.167726934576363 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (t0.c1) AND (0.5804985801098617))) IS FALSE)) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY x''  NULLS FIRST, ((SQLITE_VERSION())||(0.167726934576363 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0) BETWEEN (t0.c1) AND (0.5804985801098617))) IS FALSE)) ORDER BY x''  NULLS FIRST, ((SQLITE_VERSION())||(0.167726934576363 COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('-1027775171')OR(((t0.c2)+(t0.c1)))))AND((- (t0.c2))))) ORDER BY ((CASE WHEN t0.c32 THEN vt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c1 THEN t0.c32 ELSE vt0.c1 END)LIKE(((t0.c32) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-1027775171')OR(((t0.c2)+(t0.c1)))))AND((- (t0.c2))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((CASE WHEN t0.c32 THEN vt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c1 THEN t0.c32 ELSE vt0.c1 END)LIKE(((t0.c32) IS FALSE))) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('-1027775171')OR(((t0.c2)+(t0.c1)))))AND((- (t0.c2))))) ORDER BY ((CASE WHEN t0.c32 THEN vt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c1 THEN t0.c32 ELSE vt0.c1 END)LIKE(((t0.c32) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-1027775171')OR(((t0.c2)+(t0.c1)))))AND((- (t0.c2))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((CASE WHEN t0.c32 THEN vt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c1 THEN t0.c32 ELSE vt0.c1 END)LIKE(((t0.c32) IS FALSE))) ASC);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((((('-1027775171')OR(((t0.c2)+(t0.c1)))))AND((- (t0.c2))))) ORDER BY ((CASE WHEN t0.c32 THEN vt0.c0 WHEN x'' THEN t0.c1 WHEN vt0.c1 THEN t0.c32 ELSE vt0.c1 END)LIKE(((t0.c32) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c1)AND(vt0.c1)))AND(t0.c1))))>((((t0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1)AND(vt0.c1)))AND(t0.c1))))>((((t0.c2) ISNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c1)AND(vt0.c1)))AND(t0.c1))))>((((t0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1)AND(vt0.c1)))AND(t0.c1))))>((((t0.c2) ISNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c1)AND(vt0.c1)))AND(t0.c1))))>((((t0.c2) ISNULL)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN x'' THEN (- (t0.c0)) ELSE ((t0.c2)IS(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (- (t0.c0)) ELSE ((t0.c2)IS(t0.c2)) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN x'' THEN (- (t0.c0)) ELSE ((t0.c2)IS(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (- (t0.c0)) ELSE ((t0.c2)IS(t0.c2)) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN x'' THEN (- (t0.c0)) ELSE ((t0.c2)IS(t0.c2)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)OR(NULL)))OR((v0.c0 IN ())))) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((('0.36552728566418946', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1)))) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(NULL)))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((('0.36552728566418946', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1)))) AND (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)OR(NULL)))OR((v0.c0 IN ())))) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((('0.36552728566418946', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1)))) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(NULL)))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((('0.36552728566418946', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1)))) AND (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)OR(NULL)))OR((v0.c0 IN ())))) ORDER BY ((((v0.c0) IS FALSE)) NOT BETWEEN (((('0.36552728566418946', v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1)))) AND (vt0.c0 COLLATE RTRIM));
SELECT ALL * FROM v0, t0 WHERE ((- (((((t0.c2)OR(v0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c2)OR(v0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((- (((((t0.c2)OR(v0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c2)OR(v0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((- (((((t0.c2)OR(v0.c0)))OR(t0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((x'b47b') NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (LOWER(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((x'b47b') NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (LOWER(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'b47b') NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (LOWER(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((x'b47b') NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (LOWER(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'b47b') NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (LOWER(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN 0X68055339 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0X68055339 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN 0X68055339 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0X68055339 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN 0X68055339 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 COLLATE BINARY END) ORDER BY (((NOT (v0.c0))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (CASE WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((NULL) NOT BETWEEN ((((t0.c1, t0.c32, t0.c0)) BETWEEN ((t0.c32, t0.c32, t0.c32)) AND ((t0.c32, t0.c32, t0.c1)))) AND ('S'));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOT BETWEEN ((((t0.c1, t0.c32, t0.c0)) BETWEEN ((t0.c32, t0.c32, t0.c32)) AND ((t0.c32, t0.c32, t0.c1)))) AND ('S')));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (CASE WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((NULL) NOT BETWEEN ((((t0.c1, t0.c32, t0.c0)) BETWEEN ((t0.c32, t0.c32, t0.c32)) AND ((t0.c32, t0.c32, t0.c1)))) AND ('S'));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOT BETWEEN ((((t0.c1, t0.c32, t0.c0)) BETWEEN ((t0.c32, t0.c32, t0.c32)) AND ((t0.c32, t0.c32, t0.c1)))) AND ('S')));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (CASE WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((NULL) NOT BETWEEN ((((t0.c1, t0.c32, t0.c0)) BETWEEN ((t0.c32, t0.c32, t0.c32)) AND ((t0.c32, t0.c32, t0.c1)))) AND ('S'));
SELECT ALL * FROM t0, v0, vt0 WHERE (((0.8042976122906668) IS TRUE)) ORDER BY LTRIM(vt0.c1, CAST(v0.c0 AS BLOB)), ((t0.c32) NOT BETWEEN (t0.c2) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((0.8042976122906668) IS TRUE)) IS TRUE)  as count FROM t0, v0 NOT INDEXED, vt0 ORDER BY LTRIM(vt0.c1, CAST(v0.c0 AS BLOB)), ((t0.c32) NOT BETWEEN (t0.c2) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM t0, v0, vt0 WHERE (((0.8042976122906668) IS TRUE)) ORDER BY LTRIM(vt0.c1, CAST(v0.c0 AS BLOB)), ((t0.c32) NOT BETWEEN (t0.c2) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((0.8042976122906668) IS TRUE)) IS TRUE)  as count FROM t0, v0 NOT INDEXED, vt0 ORDER BY LTRIM(vt0.c1, CAST(v0.c0 AS BLOB)), ((t0.c32) NOT BETWEEN (t0.c2) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM t0, v0, vt0 WHERE (((0.8042976122906668) IS TRUE)) ORDER BY LTRIM(vt0.c1, CAST(v0.c0 AS BLOB)), ((t0.c32) NOT BETWEEN (t0.c2) AND (v0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((CAST(t0.c2 AS INTEGER))>=(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER))>=(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((CAST(t0.c2 AS INTEGER))>=(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER))>=(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((CAST(t0.c2 AS INTEGER))>=(((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0, vt0, v0 WHERE (CASE (+ (vt0.c0))  WHEN (('yꍘc1b鍍') NOT BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) IS TRUE) ELSE ((t0.c32) IS FALSE) END) ORDER BY ((NULL) BETWEEN (CASE WHEN t0.c0 THEN t0.c32 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN (('yꍘc1b鍍') NOT BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) IS TRUE) ELSE ((t0.c32) IS FALSE) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((NULL) BETWEEN (CASE WHEN t0.c0 THEN t0.c32 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 WHERE (CASE (+ (vt0.c0))  WHEN (('yꍘc1b鍍') NOT BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) IS TRUE) ELSE ((t0.c32) IS FALSE) END) ORDER BY ((NULL) BETWEEN (CASE WHEN t0.c0 THEN t0.c32 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN (('yꍘc1b鍍') NOT BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) IS TRUE) ELSE ((t0.c32) IS FALSE) END) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((NULL) BETWEEN (CASE WHEN t0.c0 THEN t0.c32 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, v0 WHERE (CASE (+ (vt0.c0))  WHEN (('yꍘc1b鍍') NOT BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) IS TRUE) ELSE ((t0.c32) IS FALSE) END) ORDER BY ((NULL) BETWEEN (CASE WHEN t0.c0 THEN t0.c32 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM v0, vt0 INDEXED BY i52, t0 WHERE (((((vt0.c0) NOT NULL))!=(((t0.c1)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<>(((t0.c1)-(t0.c2))))) IS TRUE)  as count FROM v0, vt0 INDEXED BY i52, t0);
SELECT * FROM v0, vt0 INDEXED BY i52, t0 WHERE (((((vt0.c0) NOT NULL))!=(((t0.c1)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))<>(((t0.c1)-(t0.c2))))) IS TRUE)  as count FROM v0, vt0 INDEXED BY i52, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE (v0.c0 IN (t0.c0))  WHEN v0.c0 THEN (((t0.c0))<>((v0.c0))) ELSE ((v0.c0)OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN (t0.c0))  WHEN v0.c0 THEN (((t0.c0))<>((v0.c0))) ELSE ((v0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE (v0.c0 IN (t0.c0))  WHEN v0.c0 THEN (((t0.c0))<>((v0.c0))) ELSE ((v0.c0)OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN (t0.c0))  WHEN v0.c0 THEN (((t0.c0))<>((v0.c0))) ELSE ((v0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CASE (v0.c0 IN (t0.c0))  WHEN v0.c0 THEN (((t0.c0))<>((v0.c0))) ELSE ((v0.c0)OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c32 AS INTEGER)  WHEN ((t0.c2)!=(t0.c32)) THEN (+ (t0.c0)) ELSE ((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c32 AS INTEGER)  WHEN ((t0.c2)!=(t0.c32)) THEN (+ (t0.c0)) ELSE ((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c32 AS INTEGER)  WHEN ((t0.c2)!=(t0.c32)) THEN (+ (t0.c0)) ELSE ((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c32 AS INTEGER)  WHEN ((t0.c2)!=(t0.c32)) THEN (+ (t0.c0)) ELSE ((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c32 AS INTEGER)  WHEN ((t0.c2)!=(t0.c32)) THEN (+ (t0.c0)) ELSE ((t0.c32) NOT BETWEEN (t0.c32) AND (t0.c2)) END);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((((((t0.c1 IN ()))AND(t0.c1)))AND(((((vt0.c1)AND(t0.c1)))OR(t0.c0)))))AND((NOT (vt0.c0)))))OR(((t0.c0)-(t0.c0)))))OR(((t0.c32) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c1 IN ()))AND(t0.c1)))AND(((((vt0.c1)AND(t0.c1)))OR(t0.c0)))))AND((NOT (vt0.c0)))))OR(((t0.c0)-(t0.c0)))))OR(((t0.c32) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR((+ (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((((((t0.c1 IN ()))AND(t0.c1)))AND(((((vt0.c1)AND(t0.c1)))OR(t0.c0)))))AND((NOT (vt0.c0)))))OR(((t0.c0)-(t0.c0)))))OR(((t0.c32) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c1 IN ()))AND(t0.c1)))AND(((((vt0.c1)AND(t0.c1)))OR(t0.c0)))))AND((NOT (vt0.c0)))))OR(((t0.c0)-(t0.c0)))))OR(((t0.c32) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR((+ (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((((((t0.c1 IN ()))AND(t0.c1)))AND(((((vt0.c1)AND(t0.c1)))OR(t0.c0)))))AND((NOT (vt0.c0)))))OR(((t0.c0)-(t0.c0)))))OR(((t0.c32) NOT BETWEEN (t0.c2) AND (vt0.c1)))))OR((+ (t0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (6.77225304E8) ORDER BY CASE 'I\reQrwuq-'  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE '''&' END;
SELECT SUM(count) FROM (SELECT ALL ((6.77225304E8) IS TRUE)  as count FROM v0 ORDER BY CASE 'I\reQrwuq-'  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE '''&' END);
SELECT ALL COUNT(*) FROM v0 WHERE (6.77225304E8) ORDER BY CASE 'I\reQrwuq-'  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE '''&' END;
SELECT SUM(count) FROM (SELECT ALL ((6.77225304E8) IS TRUE)  as count FROM v0 ORDER BY CASE 'I\reQrwuq-'  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE '''&' END);
SELECT ALL COUNT(*) FROM v0 WHERE (6.77225304E8) ORDER BY CASE 'I\reQrwuq-'  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE '''&' END;
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('u	zR]~X攽~') ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('u	zR]~X攽~') IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('u	zR]~X攽~') ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('u	zR]~X攽~') IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ('u	zR]~X攽~') ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0, vt0, t0 WHERE (CASE ((((v0.c0)AND(t0.c2)))OR(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN (t0.c32 IN ()) END) ORDER BY (((t0.c2) NOT NULL) IN ()), (v0.c0 COLLATE NOCASE IN (NULL)) DESC, (+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)AND(t0.c2)))OR(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN (t0.c32 IN ()) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c2) NOT NULL) IN ()), (v0.c0 COLLATE NOCASE IN (NULL)) DESC, (+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c1))))  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (CASE ((((v0.c0)AND(t0.c2)))OR(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN (t0.c32 IN ()) END) ORDER BY (((t0.c2) NOT NULL) IN ()), (v0.c0 COLLATE NOCASE IN (NULL)) DESC, (+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)AND(t0.c2)))OR(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN (t0.c32 IN ()) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c2) NOT NULL) IN ()), (v0.c0 COLLATE NOCASE IN (NULL)) DESC, (+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c1))))  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (CASE ((((v0.c0)AND(t0.c2)))OR(t0.c0))  WHEN t0.c2 COLLATE RTRIM THEN (t0.c32 IN ()) END) ORDER BY (((t0.c2) NOT NULL) IN ()), (v0.c0 COLLATE NOCASE IN (NULL)) DESC, (+ (((t0.c0) BETWEEN (t0.c2) AND (t0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ('pz') ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (rtreenode(vt0.c1, 0x6376c7d1)) AND (((((((((vt0.c1)OR(0.3371567182650269)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('pz') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (rtreenode(vt0.c1, 0X6376c7d1)) AND (((((((((vt0.c1)OR(0.3371567182650269)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ('pz') ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (rtreenode(vt0.c1, 0x6376c7d1)) AND (((((((((vt0.c1)OR(0.3371567182650269)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('pz') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (rtreenode(vt0.c1, 0X6376c7d1)) AND (((((((((vt0.c1)OR(0.3371567182650269)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ('pz') ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (rtreenode(vt0.c1, 0x6376c7d1)) AND (((((((((vt0.c1)OR(0.3371567182650269)))AND(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, CAST(v0.c0 AS INTEGER) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM);
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c32))>((t0.c32))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32))>((t0.c32))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c32))>((t0.c32))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c32))>((t0.c32))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((((t0.c32))>((t0.c32))) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM v0 WHERE (CASE (((v0.c0))==((v0.c0)))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ABS(NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0))=((v0.c0)))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ABS(NULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0))==((v0.c0)))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ABS(NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0))=((v0.c0)))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ABS(NULL) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0))==((v0.c0)))  WHEN (((v0.c0))>((v0.c0))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ABS(NULL) END);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM v0, t0 WHERE (((((t0.c32)OR(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c32)OR(t0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c32)OR(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c32)OR(t0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c32)OR(t0.c0))) NOT NULL));
SELECT ALL * FROM v0 INDEXED BY i52 WHERE ((((+ (v0.c0))) BETWEEN (NULL) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) BETWEEN (NULL) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 INDEXED BY i52);
SELECT ALL * FROM v0 INDEXED BY i52 WHERE ((((+ (v0.c0))) BETWEEN (NULL) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) BETWEEN (NULL) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 INDEXED BY i52);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)/(v0.c0))))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)/(v0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)/(v0.c0))))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)/(v0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)/(v0.c0))))>=((v0.c0))));
SELECT ALL * FROM t0, v0 WHERE (((((t0.c2)%(t0.c2))) IS TRUE)) ORDER BY ((((t0.c0)*(t0.c32)))<=((~ (t0.c1)))), x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)%(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0)*(t0.c32)))<=((~ (t0.c1)))), x'' DESC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c2)%(t0.c2))) IS TRUE)) ORDER BY ((((t0.c0)*(t0.c32)))<=((~ (t0.c1)))), x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)%(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0)*(t0.c32)))<=((~ (t0.c1)))), x'' DESC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c2)%(t0.c2))) IS TRUE)) ORDER BY ((((t0.c0)*(t0.c32)))<=((~ (t0.c1)))), x'' DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)+(t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)+(t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)+(t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)+(t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)+(t0.c2))) IS FALSE));
SELECT * FROM vt0, t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(t0.c0)))AND(t0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(t0.c0)))AND(t0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c0)AND(t0.c0)))AND(t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (SQLITE_VERSION()) ORDER BY CAST(x'' AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0 ORDER BY CAST(x'' AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (SQLITE_VERSION()) ORDER BY CAST(x'' AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0 ORDER BY CAST(x'' AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (SQLITE_VERSION()) ORDER BY CAST(x'' AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) IN ());
SELECT ALL * FROM vt0, v0, t0 WHERE ((+ (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((+ (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE ((+ (CAST(NULL AS INTEGER))));
SELECT * FROM v0 INNER JOIN t0 ON (((0.47291643941426875, t0.c32, t0.c1)) BETWEEN ((vt0.c1, ((t0.c0) NOT BETWEEN (t0.c32) AND (t0.c0)), CAST(0.8142052215570841 AS BLOB))) AND ((((vt0.c0)IS NOT(t0.c2)), (NULL IN ()), CASE WHEN vt0.c0 THEN t0.c32 END))) LEFT OUTER JOIN vt0 ON x'' WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY (- (((v0.c0) BETWEEN (t0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((0.47291643941426875, t0.c32, t0.c1)) BETWEEN ((vt0.c1, ((t0.c0) NOT BETWEEN (t0.c32) AND (t0.c0)), CAST(0.8142052215570841 AS BLOB))) AND ((((vt0.c0)IS NOT(t0.c2)), (NULL IN ()), CASE WHEN vt0.c0 THEN t0.c32 END))) LEFT OUTER JOIN vt0 ON x'' ORDER BY (- (((v0.c0) BETWEEN (t0.c1) AND (vt0.c1)))));
SELECT * FROM v0 INNER JOIN t0 ON (((0.47291643941426875, t0.c32, t0.c1)) BETWEEN ((vt0.c1, ((t0.c0) NOT BETWEEN (t0.c32) AND (t0.c0)), CAST(0.8142052215570841 AS BLOB))) AND ((((vt0.c0)IS NOT(t0.c2)), (NULL IN ()), CASE WHEN vt0.c0 THEN t0.c32 END))) LEFT OUTER JOIN vt0 ON x'' WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY (- (((v0.c0) BETWEEN (t0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((0.47291643941426875, t0.c32, t0.c1)) BETWEEN ((vt0.c1, ((t0.c0) NOT BETWEEN (t0.c32) AND (t0.c0)), CAST(0.8142052215570841 AS BLOB))) AND ((((vt0.c0)IS NOT(t0.c2)), (NULL IN ()), CASE WHEN vt0.c0 THEN t0.c32 END))) LEFT OUTER JOIN vt0 ON x'' ORDER BY (- (((v0.c0) BETWEEN (t0.c1) AND (vt0.c1)))));
SELECT * FROM v0 INNER JOIN t0 ON (((0.47291643941426875, t0.c32, t0.c1)) BETWEEN ((vt0.c1, ((t0.c0) NOT BETWEEN (t0.c32) AND (t0.c0)), CAST(0.8142052215570841 AS BLOB))) AND ((((vt0.c0)IS NOT(t0.c2)), (NULL IN ()), CASE WHEN vt0.c0 THEN t0.c32 END))) LEFT OUTER JOIN vt0 ON x'' WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ORDER BY (- (((v0.c0) BETWEEN (t0.c1) AND (vt0.c1))));
SELECT COUNT(*) FROM t0, v0 WHERE (ABS(x'' COLLATE RTRIM)) ORDER BY ((CAST(t0.c0 AS REAL))%(CASE -1.13448191E9  WHEN x'ccda' THEN t0.c0 ELSE v0.c0 END)) DESC, CASE WHEN t0.c1 COLLATE RTRIM THEN ((t0.c2)%(v0.c0)) ELSE (- (t0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(x'' COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(t0.c0 AS REAL))%(CASE -1.13448191E9  WHEN x'ccda' THEN t0.c0 ELSE v0.c0 END)) DESC, CASE WHEN t0.c1 COLLATE RTRIM THEN ((t0.c2)%(v0.c0)) ELSE (- (t0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (ABS(x'' COLLATE RTRIM)) ORDER BY ((CAST(t0.c0 AS REAL))%(CASE -1.13448191E9  WHEN x'ccda' THEN t0.c0 ELSE v0.c0 END)) DESC, CASE WHEN t0.c1 COLLATE RTRIM THEN ((t0.c2)%(v0.c0)) ELSE (- (t0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(x'' COLLATE RTRIM)) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(t0.c0 AS REAL))%(CASE -1.13448191E9  WHEN x'ccda' THEN t0.c0 ELSE v0.c0 END)) DESC, CASE WHEN t0.c1 COLLATE RTRIM THEN ((t0.c2)%(v0.c0)) ELSE (- (t0.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (ABS(x'' COLLATE RTRIM)) ORDER BY ((CAST(t0.c0 AS REAL))%(CASE -1.13448191E9  WHEN x'ccda' THEN t0.c0 ELSE v0.c0 END)) DESC, CASE WHEN t0.c1 COLLATE RTRIM THEN ((t0.c2)%(v0.c0)) ELSE (- (t0.c1)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((0x1c308d6f) BETWEEN (((t0.c32) BETWEEN (t0.c0) AND (t0.c2))) AND (t0.c1))) ORDER BY ((((vt0.c0)>>(v0.c0)))|(((t0.c2) NOT BETWEEN (t0.c0) AND ('-1337792981')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x1c308d6f) BETWEEN (((t0.c32) BETWEEN (t0.c0) AND (t0.c2))) AND (t0.c1))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((vt0.c0)>>(v0.c0)))|(((t0.c2) NOT BETWEEN (t0.c0) AND ('-1337792981')))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((0x1c308d6f) BETWEEN (((t0.c32) BETWEEN (t0.c0) AND (t0.c2))) AND (t0.c1))) ORDER BY ((((vt0.c0)>>(v0.c0)))|(((t0.c2) NOT BETWEEN (t0.c0) AND ('-1337792981')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x1c308d6f) BETWEEN (((t0.c32) BETWEEN (t0.c0) AND (t0.c2))) AND (t0.c1))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((vt0.c0)>>(v0.c0)))|(((t0.c2) NOT BETWEEN (t0.c0) AND ('-1337792981')))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((0x1c308d6f) BETWEEN (((t0.c32) BETWEEN (t0.c0) AND (t0.c2))) AND (t0.c1))) ORDER BY ((((vt0.c0)>>(v0.c0)))|(((t0.c2) NOT BETWEEN (t0.c0) AND ('-1337792981')))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((t0.c2, t0.c2, t0.c32)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))==(t0.c1))) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)OR(NULL)))AND('0.8567081701583357')))OR(((t0.c1)||(t0.c32)))))OR(((t0.c32) NOT BETWEEN (v0.c0) AND (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c2, t0.c32)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))==(t0.c1))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)OR(NULL)))AND('0.8567081701583357')))OR(((t0.c1)||(t0.c32)))))OR(((t0.c32) NOT BETWEEN (v0.c0) AND (t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((t0.c2, t0.c2, t0.c32)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))==(t0.c1))) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)OR(NULL)))AND('0.8567081701583357')))OR(((t0.c1)||(t0.c32)))))OR(((t0.c32) NOT BETWEEN (v0.c0) AND (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c2, t0.c32)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))==(t0.c1))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)OR(NULL)))AND('0.8567081701583357')))OR(((t0.c1)||(t0.c32)))))OR(((t0.c32) NOT BETWEEN (v0.c0) AND (t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((t0.c2, t0.c2, t0.c32)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))==(t0.c1))) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)OR(NULL)))AND('0.8567081701583357')))OR(((t0.c1)||(t0.c32)))))OR(((t0.c32) NOT BETWEEN (v0.c0) AND (t0.c2))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE RTRIM)IS(((t0.c1) NOTNULL)))) ORDER BY DATE(CAST(t0.c0 AS BLOB), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c1 COLLATE RTRIM)  NULLS LAST, ((((0.6657625724951846)OR(CASE WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)==(t0.c32)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM)IS(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY DATE(CAST(t0.c0 AS BLOB), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c1 COLLATE RTRIM)  NULLS LAST, ((((0.6657625724951846)OR(CASE WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)=(t0.c32)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE RTRIM)IS(((t0.c1) NOTNULL)))) ORDER BY DATE(CAST(t0.c0 AS BLOB), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c1 COLLATE RTRIM)  NULLS LAST, ((((0.6657625724951846)OR(CASE WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)==(t0.c32)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM)IS(((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY DATE(CAST(t0.c0 AS BLOB), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c1 COLLATE RTRIM)  NULLS LAST, ((((0.6657625724951846)OR(CASE WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)=(t0.c32)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c2 COLLATE RTRIM)IS(((t0.c1) NOTNULL)))) ORDER BY DATE(CAST(t0.c0 AS BLOB), (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c1 COLLATE RTRIM)  NULLS LAST, ((((0.6657625724951846)OR(CASE WHEN t0.c32 THEN t0.c32 WHEN t0.c32 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)==(t0.c32)))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t0 WHERE (((((x'') NOT BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (t0.c1) AND (load_extension(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (t0.c1) AND (load_extension(vt0.c1)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((x'') NOT BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (t0.c1) AND (load_extension(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (t0.c1) AND (load_extension(vt0.c1)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((((x'') NOT BETWEEN (t0.c0) AND (NULL))) NOT BETWEEN (t0.c1) AND (load_extension(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (x'636f86b4') ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((x'636f86b4') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (x'636f86b4') ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((x'636f86b4') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (x'636f86b4') ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB);
SELECT COUNT(*) FROM vt0, v0 WHERE (rtreenode(UNICODE(vt0.c0), LOWER(vt0.c0))) ORDER BY (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(UNICODE(vt0.c0), LOWER(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (rtreenode(UNICODE(vt0.c0), LOWER(vt0.c0))) ORDER BY (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(UNICODE(vt0.c0), LOWER(vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (rtreenode(UNICODE(vt0.c0), LOWER(vt0.c0))) ORDER BY (((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CAST((vt0.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CAST((vt0.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (CAST((vt0.c1 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((t0.c1 IN (t0.c2)));
SELECT SUM(count) FROM (SELECT (((t0.c1 IN (t0.c2))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((t0.c1 IN (t0.c2)));
SELECT SUM(count) FROM (SELECT (((t0.c1 IN (t0.c2))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((t0.c1 IN (t0.c2)));
SELECT ALL * FROM vt0 WHERE (0.8450976537200765) ORDER BY (((((vt0.c1, vt0.c1, NULL))>=((vt0.c0, vt0.c0, vt0.c1))))==(vt0.c1))  NULLS LAST, (+ (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.8450976537200765) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, NULL))>=((vt0.c0, vt0.c0, vt0.c1))))=(vt0.c1))  NULLS LAST, (+ (vt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (0.8450976537200765) ORDER BY (((((vt0.c1, vt0.c1, NULL))>=((vt0.c0, vt0.c0, vt0.c1))))==(vt0.c1))  NULLS LAST, (+ (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.8450976537200765) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, NULL))>=((vt0.c0, vt0.c0, vt0.c1))))=(vt0.c1))  NULLS LAST, (+ (vt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (0.8450976537200765) ORDER BY (((((vt0.c1, vt0.c1, NULL))>=((vt0.c0, vt0.c0, vt0.c1))))==(vt0.c1))  NULLS LAST, (+ (vt0.c1)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((NOT ('k]oZ-z'))))>(((+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('k]oZ-z'))))>(((+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NOT ('k]oZ-z'))))>(((+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('k]oZ-z'))))>(((+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((NOT ('k]oZ-z'))))>(((+ (v0.c0))))));
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(t0.c32)))AND(x'')))AND(t0.c32))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(v0.c0)))OR(t0.c32)))AND(x'')))AND(t0.c32))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(t0.c32)))AND(x'')))AND(t0.c32))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(v0.c0)))OR(t0.c32)))AND(x'')))AND(t0.c32))) IS TRUE)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((((((((vt0.c0)AND(v0.c0)))OR(t0.c32)))AND(x'')))AND(t0.c32))) IS TRUE));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t0 ON (((t0.c32 IN (v0.c0, t0.c0))) NOTNULL) WHERE ((NOT (0xffffffffd335525e)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0xffffffffd335525e))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON (((t0.c32 IN (v0.c0, t0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t0 ON (((t0.c32 IN (v0.c0, t0.c0))) NOTNULL) WHERE ((NOT (0xffffffffd335525e)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0xffffffffd335525e))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON (((t0.c32 IN (v0.c0, t0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t0 ON (((t0.c32 IN (v0.c0, t0.c0))) NOTNULL) WHERE ((NOT (0xffffffffd335525e)));
SELECT ALL * FROM v0 WHERE ((~ (TRIM(DISTINCT v0.c0, x'2104'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(DISTINCT v0.c0, x'2104')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (TRIM(DISTINCT v0.c0, x'2104'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TRIM(DISTINCT v0.c0, x'2104')))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ (TRIM(DISTINCT v0.c0, x'2104'))));
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c32 COLLATE BINARY THEN ((NULL) IS FALSE) END WHERE ((((((t0.c32, t0.c2, t0.c0, vt0.c0, t0.c1))<((t0.c0, t0.c0, '', v0.c0, vt0.c1)))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CASE t0.c2  WHEN 0Xffffffffbd69f02f THEN t0.c1 END))) ORDER BY ((((((vt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))>((((t0.c0)<=(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c32, t0.c2, t0.c0, vt0.c0, t0.c1))<((t0.c0, t0.c0, '', v0.c0, vt0.c1)))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CASE t0.c2  WHEN 0xffffffffbd69f02f THEN t0.c1 END))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c32 COLLATE BINARY THEN ((NULL) IS FALSE) END ORDER BY ((((((vt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))>((((t0.c0)<=(v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c32 COLLATE BINARY THEN ((NULL) IS FALSE) END WHERE ((((((t0.c32, t0.c2, t0.c0, vt0.c0, t0.c1))<((t0.c0, t0.c0, '', v0.c0, vt0.c1)))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CASE t0.c2  WHEN 0Xffffffffbd69f02f THEN t0.c1 END))) ORDER BY ((((((vt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))>((((t0.c0)<=(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c32, t0.c2, t0.c0, vt0.c0, t0.c1))<((t0.c0, t0.c0, '', v0.c0, vt0.c1)))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CASE t0.c2  WHEN 0xffffffffbd69f02f THEN t0.c1 END))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c32 COLLATE BINARY THEN ((NULL) IS FALSE) END ORDER BY ((((((vt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))>((((t0.c0)<=(v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM v0, t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c32 COLLATE BINARY THEN ((NULL) IS FALSE) END WHERE ((((((t0.c32, t0.c2, t0.c0, vt0.c0, t0.c1))<((t0.c0, t0.c0, '', v0.c0, vt0.c1)))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CASE t0.c2  WHEN 0Xffffffffbd69f02f THEN t0.c1 END))) ORDER BY ((((((vt0.c1)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))>((((t0.c0)<=(v0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((STRFTIME(vt0.c1, vt0.c0, t0.c0)) BETWEEN (((((vt0.c1)OR(t0.c1)))OR(t0.c1))) AND (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c1, vt0.c0, t0.c0)) BETWEEN (((((vt0.c1)OR(t0.c1)))OR(t0.c1))) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((STRFTIME(vt0.c1, vt0.c0, t0.c0)) BETWEEN (((((vt0.c1)OR(t0.c1)))OR(t0.c1))) AND (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c1, vt0.c0, t0.c0)) BETWEEN (((((vt0.c1)OR(t0.c1)))OR(t0.c1))) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((STRFTIME(vt0.c1, vt0.c0, t0.c0)) BETWEEN (((((vt0.c1)OR(t0.c1)))OR(t0.c1))) AND (CAST(vt0.c1 AS TEXT))));
SELECT * FROM v0, vt0 WHERE (((vt0.c1)&(((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)&(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1)&(((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)&(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1)&(((vt0.c1)%(vt0.c0)))));
SELECT * FROM t0 WHERE (1.190304698E9) ORDER BY (t0.c32 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1.190304698E9) IS TRUE)  as count FROM t0 ORDER BY (t0.c32 IN ())  NULLS LAST);
SELECT * FROM t0 WHERE (1.190304698E9) ORDER BY (t0.c32 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1.190304698E9) IS TRUE)  as count FROM t0 ORDER BY (t0.c32 IN ())  NULLS LAST);
SELECT * FROM t0 WHERE (1.190304698E9) ORDER BY (t0.c32 IN ())  NULLS LAST;
SELECT * FROM v0, vt0, t0 WHERE (CASE WHEN (+ ('')) THEN t0.c0 WHEN (((t0.c1, v0.c0, vt0.c1))<>((vt0.c0, t0.c32, t0.c32))) THEN ((((t0.c32)AND(t0.c32)))OR(vt0.c1)) WHEN LIKELY(t0.c2) THEN ((x'761a') BETWEEN (t0.c1) AND (v0.c0)) ELSE ((t0.c32) NOT NULL) END) ORDER BY (((((t0.c0, vt0.c1, vt0.c1, t0.c2, t0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c32, t0.c1, 0.017358850520694302)) AND ((vt0.c1, '-1546358809', t0.c2, vt0.c1, t0.c1)))) IS TRUE) DESC, ((((t0.c1)&(t0.c32))) NOT BETWEEN ((((v0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c1 END)) DESC, (((((t0.c32) IS TRUE), t0.c1 COLLATE RTRIM, ((t0.c0)+(v0.c0)), CASE vt0.c1  WHEN t0.c32 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c1)>>(v0.c0))))<((((((vt0.c1)AND(t0.c0)))OR(t0.c2)), CAST(v0.c0 AS REAL), CASE WHEN t0.c1 THEN t0.c1 END, (t0.c0 IN (vt0.c0)), vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ ('')) THEN t0.c0 WHEN (((t0.c1, v0.c0, vt0.c1))<>((vt0.c0, t0.c32, t0.c32))) THEN ((((t0.c32)AND(t0.c32)))OR(vt0.c1)) WHEN LIKELY(t0.c2) THEN ((x'761a') BETWEEN (t0.c1) AND (v0.c0)) ELSE ((t0.c32) NOT NULL) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((((t0.c0, vt0.c1, vt0.c1, t0.c2, t0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c32, t0.c1, 0.017358850520694302)) AND ((vt0.c1, '-1546358809', t0.c2, vt0.c1, t0.c1)))) IS TRUE) DESC, ((((t0.c1)&(t0.c32))) NOT BETWEEN ((((v0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c1 END)) DESC, (((((t0.c32) IS TRUE), t0.c1 COLLATE RTRIM, ((t0.c0)+(v0.c0)), CASE vt0.c1  WHEN t0.c32 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c1)>>(v0.c0))))<((((((vt0.c1)AND(t0.c0)))OR(t0.c2)), CAST(v0.c0 AS REAL), CASE WHEN t0.c1 THEN t0.c1 END, (t0.c0 IN (vt0.c0)), vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (CASE WHEN (+ ('')) THEN t0.c0 WHEN (((t0.c1, v0.c0, vt0.c1))<>((vt0.c0, t0.c32, t0.c32))) THEN ((((t0.c32)AND(t0.c32)))OR(vt0.c1)) WHEN LIKELY(t0.c2) THEN ((x'761a') BETWEEN (t0.c1) AND (v0.c0)) ELSE ((t0.c32) NOT NULL) END) ORDER BY (((((t0.c0, vt0.c1, vt0.c1, t0.c2, t0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c32, t0.c1, 0.017358850520694302)) AND ((vt0.c1, '-1546358809', t0.c2, vt0.c1, t0.c1)))) IS TRUE) DESC, ((((t0.c1)&(t0.c32))) NOT BETWEEN ((((v0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c1 END)) DESC, (((((t0.c32) IS TRUE), t0.c1 COLLATE RTRIM, ((t0.c0)+(v0.c0)), CASE vt0.c1  WHEN t0.c32 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c1)>>(v0.c0))))<((((((vt0.c1)AND(t0.c0)))OR(t0.c2)), CAST(v0.c0 AS REAL), CASE WHEN t0.c1 THEN t0.c1 END, (t0.c0 IN (vt0.c0)), vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ ('')) THEN t0.c0 WHEN (((t0.c1, v0.c0, vt0.c1))<>((vt0.c0, t0.c32, t0.c32))) THEN ((((t0.c32)AND(t0.c32)))OR(vt0.c1)) WHEN LIKELY(t0.c2) THEN ((x'761a') BETWEEN (t0.c1) AND (v0.c0)) ELSE ((t0.c32) NOT NULL) END) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((((t0.c0, vt0.c1, vt0.c1, t0.c2, t0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c32, t0.c1, 0.017358850520694302)) AND ((vt0.c1, '-1546358809', t0.c2, vt0.c1, t0.c1)))) IS TRUE) DESC, ((((t0.c1)&(t0.c32))) NOT BETWEEN ((((v0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c1 END)) DESC, (((((t0.c32) IS TRUE), t0.c1 COLLATE RTRIM, ((t0.c0)+(v0.c0)), CASE vt0.c1  WHEN t0.c32 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c1)>>(v0.c0))))<((((((vt0.c1)AND(t0.c0)))OR(t0.c2)), CAST(v0.c0 AS REAL), CASE WHEN t0.c1 THEN t0.c1 END, (t0.c0 IN (vt0.c0)), vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE (CASE WHEN (+ ('')) THEN t0.c0 WHEN (((t0.c1, v0.c0, vt0.c1))<>((vt0.c0, t0.c32, t0.c32))) THEN ((((t0.c32)AND(t0.c32)))OR(vt0.c1)) WHEN LIKELY(t0.c2) THEN ((x'761a') BETWEEN (t0.c1) AND (v0.c0)) ELSE ((t0.c32) NOT NULL) END) ORDER BY (((((t0.c0, vt0.c1, vt0.c1, t0.c2, t0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c32, t0.c1, 0.017358850520694302)) AND ((vt0.c1, '-1546358809', t0.c2, vt0.c1, t0.c1)))) IS TRUE) DESC, ((((t0.c1)&(t0.c32))) NOT BETWEEN ((((v0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0)))) AND (CASE t0.c2  WHEN vt0.c0 THEN t0.c1 END)) DESC, (((((t0.c32) IS TRUE), t0.c1 COLLATE RTRIM, ((t0.c0)+(v0.c0)), CASE vt0.c1  WHEN t0.c32 THEN vt0.c1 ELSE vt0.c1 END, ((t0.c1)>>(v0.c0))))<((((((vt0.c1)AND(t0.c0)))OR(t0.c2)), CAST(v0.c0 AS REAL), CASE WHEN t0.c1 THEN t0.c1 END, (t0.c0 IN (vt0.c0)), vt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN vt0 ON CAST((~ (t0.c1)) AS TEXT) WHERE ((- (t0.c32 COLLATE RTRIM))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((- (t0.c32 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt0 ON CAST((~ (t0.c1)) AS TEXT) ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN vt0 ON CAST((~ (t0.c1)) AS TEXT) WHERE ((- (t0.c32 COLLATE RTRIM))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((- (t0.c32 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 CROSS JOIN vt0 ON CAST((~ (t0.c1)) AS TEXT) ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM t0, v0 CROSS JOIN vt0 ON CAST((~ (t0.c1)) AS TEXT) WHERE ((- (t0.c32 COLLATE RTRIM))) ORDER BY vt0.c0;
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE (v0.c0 IN (t0.c32))  WHEN (((t0.c2)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) THEN ((x'36e4') NOT BETWEEN (v0.c0) AND (vt0.c1)) END CROSS JOIN vt0 ON ((x'') NOT NULL) WHERE (((CASE WHEN v0.c0 THEN t0.c2 END) BETWEEN (x'') AND ('406613469')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN t0.c2 END) BETWEEN (x'') AND ('406613469'))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE (v0.c0 IN (t0.c32))  WHEN (((t0.c2)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) THEN ((x'36e4') NOT BETWEEN (v0.c0) AND (vt0.c1)) END CROSS JOIN vt0 ON ((x'') NOT NULL));
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE (v0.c0 IN (t0.c32))  WHEN (((t0.c2)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) THEN ((x'36e4') NOT BETWEEN (v0.c0) AND (vt0.c1)) END CROSS JOIN vt0 ON ((x'') NOT NULL) WHERE (((CASE WHEN v0.c0 THEN t0.c2 END) BETWEEN (x'') AND ('406613469')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN t0.c2 END) BETWEEN (x'') AND ('406613469'))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE (v0.c0 IN (t0.c32))  WHEN (((t0.c2)) NOT BETWEEN ((t0.c32)) AND ((v0.c0))) THEN ((x'36e4') NOT BETWEEN (v0.c0) AND (vt0.c1)) END CROSS JOIN vt0 ON ((x'') NOT NULL));
SELECT * FROM t0, v0 WHERE (((NULL) NOT BETWEEN (((t0.c0)LIKE(v0.c0))) AND (t0.c1))) ORDER BY ((((t0.c1)>>(t0.c2)))<=((((t0.c32, t0.c32, t0.c32))<=((t0.c2, t0.c0, t0.c32))))) ASC, (((~ (t0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c0)))) AND (CAST(t0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0)LIKE(v0.c0))) AND (t0.c1))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1)>>(t0.c2)))<=((((t0.c32, t0.c32, t0.c32))<=((t0.c2, t0.c0, t0.c32))))) ASC, (((~ (t0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c0)))) AND (CAST(t0.c2 AS INTEGER))));
SELECT * FROM t0, v0 WHERE (((NULL) NOT BETWEEN (((t0.c0)LIKE(v0.c0))) AND (t0.c1))) ORDER BY ((((t0.c1)>>(t0.c2)))<=((((t0.c32, t0.c32, t0.c32))<=((t0.c2, t0.c0, t0.c32))))) ASC, (((~ (t0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c0)))) AND (CAST(t0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0)LIKE(v0.c0))) AND (t0.c1))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1)>>(t0.c2)))<=((((t0.c32, t0.c32, t0.c32))<=((t0.c2, t0.c0, t0.c32))))) ASC, (((~ (t0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c0)))) AND (CAST(t0.c2 AS INTEGER))));
SELECT * FROM t0, v0 WHERE (((NULL) NOT BETWEEN (((t0.c0)LIKE(v0.c0))) AND (t0.c1))) ORDER BY ((((t0.c1)>>(t0.c2)))<=((((t0.c32, t0.c32, t0.c32))<=((t0.c2, t0.c0, t0.c32))))) ASC, (((~ (t0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((t0.c32)) AND ((t0.c0)))) AND (CAST(t0.c2 AS INTEGER)));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((NULL) IS FALSE) RIGHT OUTER JOIN t0 ON (CAST(x'' AS REAL) IN ()) WHERE (((json_quote(t0.c2))/(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((json_quote(t0.c2))/(t0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((NULL) IS FALSE) RIGHT OUTER JOIN t0 ON (CAST(x'' AS REAL) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((NULL) IS FALSE) RIGHT OUTER JOIN t0 ON (CAST(x'' AS REAL) IN ()) WHERE (((json_quote(t0.c2))/(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((json_quote(t0.c2))/(t0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((NULL) IS FALSE) RIGHT OUTER JOIN t0 ON (CAST(x'' AS REAL) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((NULL) IS FALSE) RIGHT OUTER JOIN t0 ON (CAST(x'' AS REAL) IN ()) WHERE (((json_quote(t0.c2))/(t0.c0)));
SELECT ALL * FROM vt0, t0 WHERE (IFNULL(((((((((t0.c32)OR(t0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)), ((((vt0.c0)OR(t0.c1)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((((((t0.c32)OR(t0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)), ((((vt0.c0)OR(t0.c1)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (IFNULL(((((((((t0.c32)OR(t0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)), ((((vt0.c0)OR(t0.c1)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((((((((t0.c32)OR(t0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)), ((((vt0.c0)OR(t0.c1)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (IFNULL(((((((((t0.c32)OR(t0.c1)))AND(NULL)))OR(vt0.c1)))OR(vt0.c1)), ((((vt0.c0)OR(t0.c1)))OR(vt0.c1))));
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c32 COLLATE RTRIM)AND(((t0.c32) NOT NULL))))AND(CASE WHEN t0.c2 THEN t0.c32 END)))OR(t0.c32)))AND(t0.c1))) ORDER BY '0.06133972467875182' DESC, CAST((0.6657625724951846 IN (vt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c32 COLLATE RTRIM)AND(((t0.c32) NOT NULL))))AND(CASE WHEN t0.c2 THEN t0.c32 END)))OR(t0.c32)))AND(t0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY '0.06133972467875182' DESC, CAST((0.6657625724951846 IN (vt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c32 COLLATE RTRIM)AND(((t0.c32) NOT NULL))))AND(CASE WHEN t0.c2 THEN t0.c32 END)))OR(t0.c32)))AND(t0.c1))) ORDER BY '0.06133972467875182' DESC, CAST((0.6657625724951846 IN (vt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c32 COLLATE RTRIM)AND(((t0.c32) NOT NULL))))AND(CASE WHEN t0.c2 THEN t0.c32 END)))OR(t0.c32)))AND(t0.c1))) IS TRUE)  as count FROM t0, vt0 ORDER BY '0.06133972467875182' DESC, CAST((0.6657625724951846 IN (vt0.c1)) AS BLOB) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c32 COLLATE RTRIM)AND(((t0.c32) NOT NULL))))AND(CASE WHEN t0.c2 THEN t0.c32 END)))OR(t0.c32)))AND(t0.c1))) ORDER BY '0.06133972467875182' DESC, CAST((0.6657625724951846 IN (vt0.c1)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((t0.c1) BETWEEN (((t0.c32) IS FALSE)) AND ((('')IS(t0.c32))))) ORDER BY '-2062818561' COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN (((t0.c32) IS FALSE)) AND ((('')IS(t0.c32))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY '-2062818561' COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((t0.c1) BETWEEN (((t0.c32) IS FALSE)) AND ((('')IS(t0.c32))))) ORDER BY '-2062818561' COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1) BETWEEN (((t0.c32) IS FALSE)) AND ((('')IS(t0.c32))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY '-2062818561' COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt0 WHERE (((t0.c1) BETWEEN (((t0.c32) IS FALSE)) AND ((('')IS(t0.c32))))) ORDER BY '-2062818561' COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('');
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c32) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c32) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c32) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (((t0.c32) NOTNULL) COLLATE NOCASE);
SELECT * FROM vt0 NOT INDEXED NATURAL JOIN t0 WHERE (IFNULL((NULL IN ()), ('<X' IN ()))) ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NULL IN ()), ('<X' IN ()))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED NATURAL JOIN t0 WHERE (IFNULL((NULL IN ()), ('<X' IN ()))) ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NULL IN ()), ('<X' IN ()))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED NATURAL JOIN t0 WHERE (IFNULL((NULL IN ()), ('<X' IN ()))) ORDER BY ((vt0.c0 IN ()) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) BETWEEN ('?nR') AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) WHERE ((+ (COALESCE(vt0.c0, v0.c0, v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(vt0.c0, v0.c0, v0.c0, vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) BETWEEN ('?nR') AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) BETWEEN ('?nR') AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) WHERE ((+ (COALESCE(vt0.c0, v0.c0, v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(vt0.c0, v0.c0, v0.c0, vt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) BETWEEN ('?nR') AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) BETWEEN ('?nR') AND (vt0.c0)))AND((vt0.c0 IN ()))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) WHERE ((+ (COALESCE(vt0.c0, v0.c0, v0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY x'ec6c';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY x'ec6c');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY x'ec6c';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY x'ec6c');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY x'ec6c';
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, v0 INDEXED BY i52 WHERE (((((x'')OR('1560130866')))AND((- (x'2c1f'))))) ORDER BY (('iO\n?S98e') NOT BETWEEN (TRIM(v0.c0)) AND (CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR('1560130866')))AND((- (x'2c1f'))))) IS TRUE)  as count FROM vt0, v0 INDEXED BY i52 ORDER BY (('iO\n?S98e') NOT BETWEEN (TRIM(v0.c0)) AND (CAST(v0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM vt0, v0 INDEXED BY i52 WHERE (((((x'')OR('1560130866')))AND((- (x'2c1f'))))) ORDER BY (('iO\n?S98e') NOT BETWEEN (TRIM(v0.c0)) AND (CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR('1560130866')))AND((- (x'2c1f'))))) IS TRUE)  as count FROM vt0, v0 INDEXED BY i52 ORDER BY (('iO\n?S98e') NOT BETWEEN (TRIM(v0.c0)) AND (CAST(v0.c0 AS INTEGER))) DESC);
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c1 AS NUMERIC)))) ORDER BY (- (x''));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (- (x'')));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c1 AS NUMERIC)))) ORDER BY (- (x''));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (- (x'')));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c1 AS NUMERIC)))) ORDER BY (- (x''));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE vt0.c1 END)GLOB(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE vt0.c1 END)GLOB(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE vt0.c1 END)GLOB(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE vt0.c1 END)GLOB(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE vt0.c1 END)GLOB(vt0.c0 COLLATE NOCASE)));
SELECT * FROM v0 WHERE (((RTRIM(v0.c0)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)*(v0.c0))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)/(v0.c0))))  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) ASC, (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(v0.c0)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)/(v0.c0))))  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) ASC, (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((RTRIM(v0.c0)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)*(v0.c0))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)/(v0.c0))))  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) ASC, (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(v0.c0)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)/(v0.c0))))  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) ASC, (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((RTRIM(v0.c0)) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)*(v0.c0))))) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)/(v0.c0))))  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) ASC, (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) DESC;
SELECT * FROM vt0, t0 WHERE ((~ (((t0.c1)IS NOT(-2046271999)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)IS NOT(-2046271999))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (((t0.c1)IS NOT(-2046271999)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c1)IS NOT(-2046271999))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((~ (((t0.c1)IS NOT(-2046271999)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE ((CASE WHEN t0.c0 THEN t0.c2 END IN ())) ORDER BY TIME(((t0.c0)>>(v0.c0)), ((((t0.c2)OR(v0.c0)))OR(t0.c1)), ((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c2 END IN ())) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0 ORDER BY TIME(((t0.c0)>>(v0.c0)), ((((t0.c2)OR(v0.c0)))OR(t0.c1)), ((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE ((CASE WHEN t0.c0 THEN t0.c2 END IN ())) ORDER BY TIME(((t0.c0)>>(v0.c0)), ((((t0.c2)OR(v0.c0)))OR(t0.c1)), ((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c2 END IN ())) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0 ORDER BY TIME(((t0.c0)>>(v0.c0)), ((((t0.c2)OR(v0.c0)))OR(t0.c1)), ((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN t0 WHERE ((CASE WHEN t0.c0 THEN t0.c2 END IN ())) ORDER BY TIME(((t0.c0)>>(v0.c0)), ((((t0.c2)OR(v0.c0)))OR(t0.c1)), ((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (0.15560666640577558) ORDER BY (((((t0.c2)) BETWEEN ((t0.c32)) AND ((t0.c32)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.15560666640577558) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() ORDER BY (((((t0.c2)) BETWEEN ((t0.c32)) AND ((t0.c32)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (0.15560666640577558) ORDER BY (((((t0.c2)) BETWEEN ((t0.c32)) AND ((t0.c32)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.15560666640577558) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() ORDER BY (((((t0.c2)) BETWEEN ((t0.c32)) AND ((t0.c32)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE (0.15560666640577558) ORDER BY (((((t0.c2)) BETWEEN ((t0.c32)) AND ((t0.c32)))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM v0 CROSS JOIN t0 ON CAST(((t0.c0)<>(0.02098695085684721)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)OR(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))))AND(((v0.c0)LIKE(t0.c1)))))OR((((t0.c1, vt0.c0, t0.c1))<>((x'', t0.c32, t0.c2))))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c32)))) WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(((t0.c0)<>(0.02098695085684721)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)OR(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))))AND(((v0.c0)LIKE(t0.c1)))))OR((((t0.c1, vt0.c0, t0.c1))!=((x'', t0.c32, t0.c2))))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c32)))));
SELECT * FROM v0 CROSS JOIN t0 ON CAST(((t0.c0)<>(0.02098695085684721)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)OR(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))))AND(((v0.c0)LIKE(t0.c1)))))OR((((t0.c1, vt0.c0, t0.c1))<>((x'', t0.c32, t0.c2))))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c32)))) WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CAST(((t0.c0)<>(0.02098695085684721)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)OR(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))))AND(((v0.c0)LIKE(t0.c1)))))OR((((t0.c1, vt0.c0, t0.c1))!=((x'', t0.c32, t0.c2))))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c32)))));
SELECT * FROM v0 CROSS JOIN t0 ON CAST(((t0.c0)<>(0.02098695085684721)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((((CASE t0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)OR(((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))))AND(((v0.c0)LIKE(t0.c1)))))OR((((t0.c1, vt0.c0, t0.c1))<>((x'', t0.c32, t0.c2))))))OR(((((t0.c0)AND(t0.c0)))OR(t0.c32)))) WHERE (((t0.c0) ISNULL));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN '1006991066' ELSE -3.96122459E8 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CAST(vt0.c1 AS BLOB))) WHERE ((NOT (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32))))) ORDER BY NULL DESC  NULLS LAST, ((((((((t0.c1 COLLATE BINARY)OR(((vt0.c0)||(vt0.c1)))))AND((('1062715528') NOT BETWEEN (vt0.c0) AND (0.22242135703267008)))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c1)>>(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN '1006991066' ELSE -3.96122459E8 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CAST(vt0.c1 AS BLOB))) ORDER BY NULL DESC  NULLS LAST, ((((((((t0.c1 COLLATE BINARY)OR(((vt0.c0)||(vt0.c1)))))AND((('1062715528') NOT BETWEEN (vt0.c0) AND (0.22242135703267008)))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c1)>>(t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN '1006991066' ELSE -3.96122459E8 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CAST(vt0.c1 AS BLOB))) WHERE ((NOT (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32))))) ORDER BY NULL DESC  NULLS LAST, ((((((((t0.c1 COLLATE BINARY)OR(((vt0.c0)||(vt0.c1)))))AND((('1062715528') NOT BETWEEN (vt0.c0) AND (0.22242135703267008)))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c1)>>(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN '1006991066' ELSE -3.96122459E8 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CAST(vt0.c1 AS BLOB))) ORDER BY NULL DESC  NULLS LAST, ((((((((t0.c1 COLLATE BINARY)OR(((vt0.c0)||(vt0.c1)))))AND((('1062715528') NOT BETWEEN (vt0.c0) AND (0.22242135703267008)))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c1)>>(t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (CAST(vt0.c0 AS INTEGER) IN ()) RIGHT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN t0.c0 THEN '1006991066' ELSE -3.96122459E8 END) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CAST(vt0.c1 AS BLOB))) WHERE ((NOT (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c32))))) ORDER BY NULL DESC  NULLS LAST, ((((((((t0.c1 COLLATE BINARY)OR(((vt0.c0)||(vt0.c1)))))AND((('1062715528') NOT BETWEEN (vt0.c0) AND (0.22242135703267008)))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR(((t0.c1)>>(t0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, t0 INDEXED BY i52 WHERE (((((0Xffffffffc527ded5)IS NOT(0.9876646492359927)))>>(((t0.c0) ISNULL)))) ORDER BY (~ (t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffc527ded5)IS NOT(0.9876646492359927)))>>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0, t0 INDEXED BY i52 ORDER BY (~ (t0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 INDEXED BY i52 WHERE (((((0Xffffffffc527ded5)IS NOT(0.9876646492359927)))>>(((t0.c0) ISNULL)))) ORDER BY (~ (t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffc527ded5)IS NOT(0.9876646492359927)))>>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0, t0 INDEXED BY i52 ORDER BY (~ (t0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 INDEXED BY i52 WHERE (((((0Xffffffffc527ded5)IS NOT(0.9876646492359927)))>>(((t0.c0) ISNULL)))) ORDER BY (~ (t0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (t0.c0) ORDER BY (vt0.c1 IN ()) ASC, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))/((('9P	4zIc*V')%(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (vt0.c1 IN ()) ASC, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))/((('9P	4zIc*V')%(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (t0.c0) ORDER BY (vt0.c1 IN ()) ASC, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))/((('9P	4zIc*V')%(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (vt0.c1 IN ()) ASC, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))/((('9P	4zIc*V')%(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (t0.c0) ORDER BY (vt0.c1 IN ()) ASC, ((((((t0.c1)OR(t0.c1)))OR(t0.c2)))/((('9P	4zIc*V')%(t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((TRIM(vt0.c1))&('1572730892')));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c1))&('1572730892'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((TRIM(vt0.c1))&('1572730892')));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c1))&('1572730892'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((TRIM(vt0.c1))&('1572730892')));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE (NULL) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE (NULL) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE (NULL) ORDER BY NULL DESC;
SELECT * FROM t0, v0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (t0.c2 IN (t0.c32)) ELSE (NOT (',2c]KN^')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN ()) THEN (t0.c2 IN (t0.c32)) ELSE (NOT (',2c]KN^')) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (t0.c2 IN (t0.c32)) ELSE (NOT (',2c]KN^')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN ()) THEN (t0.c2 IN (t0.c32)) ELSE (NOT (',2c]KN^')) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE WHEN (t0.c0 IN ()) THEN (t0.c2 IN (t0.c32)) ELSE (NOT (',2c]KN^')) END);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, v0 WHERE ((((((t0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.8814590067034546)) AND ((t0.c1, t0.c32, vt0.c0))))IS(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.8814590067034546)) AND ((t0.c1, t0.c32, vt0.c0))))IS(x''))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, v0 WHERE ((((((t0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.8814590067034546)) AND ((t0.c1, t0.c32, vt0.c0))))IS(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.8814590067034546)) AND ((t0.c1, t0.c32, vt0.c0))))IS(x''))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, v0 WHERE ((((((t0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0.8814590067034546)) AND ((t0.c1, t0.c32, vt0.c0))))IS(x'')));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0))<((v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CAST(0.14261480575116692 AS BLOB))))AND((v0.c0 IN (v0.c0)))))OR((v0.c0 IN ())))) ORDER BY ((CAST(v0.c0 AS REAL))<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0))<((v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CAST(0.14261480575116692 AS BLOB))))AND((v0.c0 IN (v0.c0)))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL))<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0))<((v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CAST(0.14261480575116692 AS BLOB))))AND((v0.c0 IN (v0.c0)))))OR((v0.c0 IN ())))) ORDER BY ((CAST(v0.c0 AS REAL))<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0))<((v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CAST(0.14261480575116692 AS BLOB))))AND((v0.c0 IN (v0.c0)))))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL))<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((((v0.c0))<((v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CAST(0.14261480575116692 AS BLOB))))AND((v0.c0 IN (v0.c0)))))OR((v0.c0 IN ())))) ORDER BY ((CAST(v0.c0 AS REAL))<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT * FROM t0, vt0, v0 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT (((- (t0.c1))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT (((- (t0.c1))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT * FROM t0, vt0, v0 WHERE ((- (t0.c1)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(((v0.c0)>>(0.0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0)||(v0.c0))) IS FALSE)  NULLS LAST, v0.c0 DESC, CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(((v0.c0)>>(0.0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0))) IS FALSE)  NULLS LAST, v0.c0 DESC, CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(((v0.c0)>>(0.0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0)||(v0.c0))) IS FALSE)  NULLS LAST, v0.c0 DESC, CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(((v0.c0)>>(0.0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)||(v0.c0))) IS FALSE)  NULLS LAST, v0.c0 DESC, CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(((v0.c0)>>(0.0)))))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((v0.c0)||(v0.c0))) IS FALSE)  NULLS LAST, v0.c0 DESC, CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ('1834404004') ORDER BY (+ (vt0.c0)), vt0.c1  NULLS LAST, ((CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT (('1834404004') IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (+ (vt0.c0)), vt0.c1  NULLS LAST, ((CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ('1834404004') ORDER BY (+ (vt0.c0)), vt0.c1  NULLS LAST, ((CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT (('1834404004') IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (+ (vt0.c0)), vt0.c1  NULLS LAST, ((CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ('1834404004') ORDER BY (+ (vt0.c0)), vt0.c1  NULLS LAST, ((CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((~ (t0.c32))) ORDER BY (((v0.c0 COLLATE BINARY, (- (t0.c2)), ((v0.c0) IS TRUE)))<((vt0.c1, CAST(t0.c2 AS TEXT), ((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))AND(v0.c0)))AND(t0.c32))))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((t0.c1))<=((vt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c32))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((v0.c0 COLLATE BINARY, (- (t0.c2)), ((v0.c0) IS TRUE)))<((vt0.c1, CAST(t0.c2 AS TEXT), ((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))AND(v0.c0)))AND(t0.c32))))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((t0.c1))<=((vt0.c1)))))) DESC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((~ (t0.c32))) ORDER BY (((v0.c0 COLLATE BINARY, (- (t0.c2)), ((v0.c0) IS TRUE)))<((vt0.c1, CAST(t0.c2 AS TEXT), ((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))AND(v0.c0)))AND(t0.c32))))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((t0.c1))<=((vt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c32))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((v0.c0 COLLATE BINARY, (- (t0.c2)), ((v0.c0) IS TRUE)))<((vt0.c1, CAST(t0.c2 AS TEXT), ((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))AND(v0.c0)))AND(t0.c32))))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((t0.c1))<=((vt0.c1)))))) DESC);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((~ (t0.c32))) ORDER BY (((v0.c0 COLLATE BINARY, (- (t0.c2)), ((v0.c0) IS TRUE)))<((vt0.c1, CAST(t0.c2 AS TEXT), ((((((((vt0.c1)OR(vt0.c0)))OR(t0.c0)))AND(v0.c0)))AND(t0.c32))))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND (((((t0.c1))<=((vt0.c1)))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(vt0.c0)) NOT NULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(TYPEOF(DISTINCT vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(TYPEOF(DISTINCT vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(vt0.c0)) NOT NULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(TYPEOF(DISTINCT vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(TYPEOF(DISTINCT vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(vt0.c0)) NOT NULL)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(TYPEOF(DISTINCT vt0.c1))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN (+ (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN (+ (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN (+ (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN (+ (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN (+ (t0.c1)) END);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS REAL))&(LOWER(v0.c0))) WHERE (((((((v0.c0)AND(1.667176239E9)))AND(t0.c32)))<<('195143890'))) ORDER BY (((((NULL)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(1.667176239E9)))AND(t0.c32)))<<('195143890'))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS REAL))&(LOWER(v0.c0))) ORDER BY (((((NULL)OR(v0.c0)))OR(t0.c0)) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS REAL))&(LOWER(v0.c0))) WHERE (((((((v0.c0)AND(1.667176239E9)))AND(t0.c32)))<<('195143890'))) ORDER BY (((((NULL)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(1.667176239E9)))AND(t0.c32)))<<('195143890'))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS REAL))&(LOWER(v0.c0))) ORDER BY (((((NULL)OR(v0.c0)))OR(t0.c0)) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c0 AS REAL))&(LOWER(v0.c0))) WHERE (((((((v0.c0)AND(1.667176239E9)))AND(t0.c32)))<<('195143890'))) ORDER BY (((((NULL)OR(v0.c0)))OR(t0.c0)) IN ());
SELECT * FROM vt0 INNER JOIN t0 ON ((((t0.c32)<(t0.c32)))&((NOT (NULL)))) INNER JOIN v0 ON UPPER(DISTINCT t0.c32 COLLATE NOCASE) WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (((vt0.c1, t0.c1, x'')) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c32 THEN vt0.c1 END, ((v0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)))) AND (((v0.c0 IN ()), ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c32)), (-1.262565892E9 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((t0.c32)<(t0.c32)))&((NOT (NULL)))) INNER JOIN v0 ON UPPER(DISTINCT t0.c32 COLLATE NOCASE) ORDER BY (((vt0.c1, t0.c1, x'')) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c32 THEN vt0.c1 END, ((v0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)))) AND (((v0.c0 IN ()), ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c32)), (-1.262565892E9 IN ())))));
SELECT * FROM vt0 INNER JOIN t0 ON ((((t0.c32)<(t0.c32)))&((NOT (NULL)))) INNER JOIN v0 ON UPPER(DISTINCT t0.c32 COLLATE NOCASE) WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (((vt0.c1, t0.c1, x'')) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c32 THEN vt0.c1 END, ((v0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)))) AND (((v0.c0 IN ()), ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c32)), (-1.262565892E9 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((t0.c32)<(t0.c32)))&((NOT (NULL)))) INNER JOIN v0 ON UPPER(DISTINCT t0.c32 COLLATE NOCASE) ORDER BY (((vt0.c1, t0.c1, x'')) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c32 THEN vt0.c1 END, ((v0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)))) AND (((v0.c0 IN ()), ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c32)), (-1.262565892E9 IN ())))));
SELECT * FROM vt0 INNER JOIN t0 ON ((((t0.c32)<(t0.c32)))&((NOT (NULL)))) INNER JOIN v0 ON UPPER(DISTINCT t0.c32 COLLATE NOCASE) WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY (((vt0.c1, t0.c1, x'')) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c32 THEN vt0.c1 END, ((v0.c0) NOT BETWEEN (t0.c32) AND (vt0.c0)))) AND (((v0.c0 IN ()), ((t0.c32) NOT BETWEEN (t0.c0) AND (t0.c32)), (-1.262565892E9 IN ()))));
SELECT ALL * FROM v0, t0, vt0 WHERE (t0.c0) ORDER BY (((((vt0.c1) ISNULL), CASE WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END, ((((t0.c0)AND(t0.c32)))AND(v0.c0))))=((((t0.c32) NOTNULL), ((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)), x'5d38'))) ASC, (CAST(vt0.c1 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((vt0.c1) ISNULL), CASE WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END, ((((t0.c0)AND(t0.c32)))AND(v0.c0))))==((((t0.c32) NOTNULL), ((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)), x'5d38'))) ASC, (CAST(vt0.c1 AS TEXT) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0 WHERE (t0.c0) ORDER BY (((((vt0.c1) ISNULL), CASE WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END, ((((t0.c0)AND(t0.c32)))AND(v0.c0))))=((((t0.c32) NOTNULL), ((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)), x'5d38'))) ASC, (CAST(vt0.c1 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((vt0.c1) ISNULL), CASE WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END, ((((t0.c0)AND(t0.c32)))AND(v0.c0))))==((((t0.c32) NOTNULL), ((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)), x'5d38'))) ASC, (CAST(vt0.c1 AS TEXT) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0 WHERE (t0.c0) ORDER BY (((((vt0.c1) ISNULL), CASE WHEN t0.c32 THEN t0.c0 ELSE vt0.c1 END, ((((t0.c0)AND(t0.c32)))AND(v0.c0))))=((((t0.c32) NOTNULL), ((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)), x'5d38'))) ASC, (CAST(vt0.c1 AS TEXT) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((((vt0.c1, t0.c32, vt0.c1, t0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c0, t0.c2, t0.c1)) AND ((vt0.c1, t0.c1, v0.c0, vt0.c0, t0.c32))))AND((t0.c32 IN ()))))OR((((x'', t0.c32, t0.c0, vt0.c0, t0.c1))>((vt0.c0, x'', vt0.c0, v0.c0, 'V&')))))) ORDER BY ((CASE t0.c32  WHEN t0.c32 THEN t0.c32 WHEN v0.c0 THEN t0.c32 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)*(CASE t0.c32  WHEN t0.c0 THEN 0.9506811642124006 END))  NULLS FIRST, (((NULL IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1, t0.c32, vt0.c1, t0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c0, t0.c2, t0.c1)) AND ((vt0.c1, t0.c1, v0.c0, vt0.c0, t0.c32))))AND((t0.c32 IN ()))))OR((((x'', t0.c32, t0.c0, vt0.c0, t0.c1))>((vt0.c0, x'', vt0.c0, v0.c0, 'V&')))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE t0.c32  WHEN t0.c32 THEN t0.c32 WHEN v0.c0 THEN t0.c32 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)*(CASE t0.c32  WHEN t0.c0 THEN 0.9506811642124006 END))  NULLS FIRST, (((NULL IN ())) NOT NULL));
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((((vt0.c1, t0.c32, vt0.c1, t0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c0, t0.c2, t0.c1)) AND ((vt0.c1, t0.c1, v0.c0, vt0.c0, t0.c32))))AND((t0.c32 IN ()))))OR((((x'', t0.c32, t0.c0, vt0.c0, t0.c1))>((vt0.c0, x'', vt0.c0, v0.c0, 'V&')))))) ORDER BY ((CASE t0.c32  WHEN t0.c32 THEN t0.c32 WHEN v0.c0 THEN t0.c32 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)*(CASE t0.c32  WHEN t0.c0 THEN 0.9506811642124006 END))  NULLS FIRST, (((NULL IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1, t0.c32, vt0.c1, t0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c0, t0.c2, t0.c1)) AND ((vt0.c1, t0.c1, v0.c0, vt0.c0, t0.c32))))AND((t0.c32 IN ()))))OR((((x'', t0.c32, t0.c0, vt0.c0, t0.c1))>((vt0.c0, x'', vt0.c0, v0.c0, 'V&')))))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((CASE t0.c32  WHEN t0.c32 THEN t0.c32 WHEN v0.c0 THEN t0.c32 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)*(CASE t0.c32  WHEN t0.c0 THEN 0.9506811642124006 END))  NULLS FIRST, (((NULL IN ())) NOT NULL));
SELECT ALL * FROM v0, t0, vt0 WHERE ((((((((vt0.c1, t0.c32, vt0.c1, t0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, t0.c2, vt0.c0, t0.c2, t0.c1)) AND ((vt0.c1, t0.c1, v0.c0, vt0.c0, t0.c32))))AND((t0.c32 IN ()))))OR((((x'', t0.c32, t0.c0, vt0.c0, t0.c1))>((vt0.c0, x'', vt0.c0, v0.c0, 'V&')))))) ORDER BY ((CASE t0.c32  WHEN t0.c32 THEN t0.c32 WHEN v0.c0 THEN t0.c32 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)*(CASE t0.c32  WHEN t0.c0 THEN 0.9506811642124006 END))  NULLS FIRST, (((NULL IN ())) NOT NULL);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.23192746912346562 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)||(-2.046271999E9))))) ORDER BY 0.3371567182650269 DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.23192746912346562 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)||(-2.046271999E9))))) IS TRUE)  as count FROM v0 ORDER BY 0.3371567182650269 DESC);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.23192746912346562 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)||(-2.046271999E9))))) ORDER BY 0.3371567182650269 DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.23192746912346562 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)||(-2.046271999E9))))) IS TRUE)  as count FROM v0 ORDER BY 0.3371567182650269 DESC);
SELECT * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0.23192746912346562 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)||(-2.046271999E9))))) ORDER BY 0.3371567182650269 DESC;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY (((vt0.c1)) NOT BETWEEN (('')) AND ((vt0.c1))) DESC, ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.5647394794345076)) AND ((~ (NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (('')) AND ((vt0.c1))) DESC, ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.5647394794345076)) AND ((~ (NULL)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY (((vt0.c1)) NOT BETWEEN (('')) AND ((vt0.c1))) DESC, ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.5647394794345076)) AND ((~ (NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (('')) AND ((vt0.c1))) DESC, ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.5647394794345076)) AND ((~ (NULL)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL)) ORDER BY (((vt0.c1)) NOT BETWEEN (('')) AND ((vt0.c1))) DESC, ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.5647394794345076)) AND ((~ (NULL))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (((vt0.c1, vt0.c0, NULL)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0) NOT NULL), (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.2234297858683001)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (((vt0.c1, vt0.c0, NULL)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0) NOT NULL), (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.2234297858683001))))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (((vt0.c1, vt0.c0, NULL)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0) NOT NULL), (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.2234297858683001)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (((vt0.c1, vt0.c0, NULL)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0) NOT NULL), (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.2234297858683001))))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (((vt0.c1, vt0.c0, NULL)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((v0.c0) NOT NULL), (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.2234297858683001)))))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((CAST(t0.c1 AS INTEGER))OR((((t0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((NULL, v0.c0, t0.c2)) AND (('-1481960875', v0.c0, t0.c0))))))OR(CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c1 AS INTEGER))OR((((t0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((NULL, v0.c0, t0.c2)) AND (('-1481960875', v0.c0, t0.c0))))))OR(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((CAST(t0.c1 AS INTEGER))OR((((t0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((NULL, v0.c0, t0.c2)) AND (('-1481960875', v0.c0, t0.c0))))))OR(CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c1 AS INTEGER))OR((((t0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((NULL, v0.c0, t0.c2)) AND (('-1481960875', v0.c0, t0.c0))))))OR(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((CAST(t0.c1 AS INTEGER))OR((((t0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((NULL, v0.c0, t0.c2)) AND (('-1481960875', v0.c0, t0.c0))))))OR(CAST(t0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((+ (((t0.c0) NOT BETWEEN ('') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) NOT BETWEEN ('') AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((+ (((t0.c0) NOT BETWEEN ('') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) NOT BETWEEN ('') AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((+ (((t0.c0) NOT BETWEEN ('') AND (vt0.c1)))));
SELECT * FROM t0 WHERE (((((t0.c1)<<(t0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<<(t0.c2))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1)<<(t0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<<(t0.c2))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1)<<(t0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (CAST((t0.c2 IN ()) AS TEXT)) ORDER BY CAST(((((t0.c2)AND(v0.c0)))OR(t0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY CAST(((((t0.c2)AND(v0.c0)))OR(t0.c1)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (CAST((t0.c2 IN ()) AS TEXT)) ORDER BY CAST(((((t0.c2)AND(v0.c0)))OR(t0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY CAST(((((t0.c2)AND(v0.c0)))OR(t0.c1)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (CAST((t0.c2 IN ()) AS TEXT)) ORDER BY CAST(((((t0.c2)AND(v0.c0)))OR(t0.c1)) AS NUMERIC)  NULLS LAST;
SELECT * FROM vt0, t0, v0 WHERE (UPPER(DISTINCT t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (UPPER(DISTINCT t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (UPPER(DISTINCT t0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ ((- (v0.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT))==(LIKELIHOOD(vt0.c0, 0.2269877465964376)));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c1 AS TEXT))=(LIKELIHOOD(vt0.c0, 0.2269877465964376))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ ((- (v0.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT))==(LIKELIHOOD(vt0.c0, 0.2269877465964376)));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c1 AS TEXT))=(LIKELIHOOD(vt0.c0, 0.2269877465964376))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ ((- (v0.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT))==(LIKELIHOOD(vt0.c0, 0.2269877465964376)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN CAST(t0.c2 AS BLOB) THEN (((v0.c0, t0.c0, '0.27104766952429404')) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((v0.c0, t0.c32, t0.c2))) ELSE CAST(0.5689378023740621 AS NUMERIC) END) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c2 AS BLOB) THEN (((v0.c0, t0.c0, '0.27104766952429404')) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((v0.c0, t0.c32, t0.c2))) ELSE CAST(0.5689378023740621 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN CAST(t0.c2 AS BLOB) THEN (((v0.c0, t0.c0, '0.27104766952429404')) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((v0.c0, t0.c32, t0.c2))) ELSE CAST(0.5689378023740621 AS NUMERIC) END) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c2 AS BLOB) THEN (((v0.c0, t0.c0, '0.27104766952429404')) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((v0.c0, t0.c32, t0.c2))) ELSE CAST(0.5689378023740621 AS NUMERIC) END) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN CAST(t0.c2 AS BLOB) THEN (((v0.c0, t0.c0, '0.27104766952429404')) NOT BETWEEN ((t0.c1, t0.c2, t0.c1)) AND ((v0.c0, t0.c32, t0.c2))) ELSE CAST(0.5689378023740621 AS NUMERIC) END) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((+ (vt0.c0))) ISNULL) WHERE (((v0.c0) ISNULL) COLLATE NOCASE) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0)<=(vt0.c1))) AND (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((+ (vt0.c0))) ISNULL) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0)<=(vt0.c1))) AND (((vt0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((+ (vt0.c0))) ISNULL) WHERE (((v0.c0) ISNULL) COLLATE NOCASE) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0)<=(vt0.c1))) AND (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((+ (vt0.c0))) ISNULL) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0)<=(vt0.c1))) AND (((vt0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (((+ (vt0.c0))) ISNULL) WHERE (((v0.c0) ISNULL) COLLATE NOCASE) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0)<=(vt0.c1))) AND (((vt0.c0) NOT NULL))) ASC;
SELECT ALL * FROM vt0, v0, t0 WHERE ((((((t0.c0))<((t0.c32)))) BETWEEN (((t0.c0)==(x''))) AND (CAST(t0.c32 AS BLOB)))) ORDER BY COALESCE((((v0.c0, t0.c32, t0.c1, t0.c32, t0.c1))==((t0.c2, vt0.c0, t0.c2, vt0.c0, t0.c32))), (- (t0.c32)), NULL, ((t0.c1) BETWEEN (v0.c0) AND (t0.c32))), CASE v0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<('-2124974607')) THEN (vt0.c0 IN ()) ELSE (((t0.c2, t0.c1, t0.c32)) BETWEEN ((vt0.c1, vt0.c0, t0.c32)) AND ((v0.c0, vt0.c0, t0.c32))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c32)))) BETWEEN (((t0.c0)==(x''))) AND (CAST(t0.c32 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY COALESCE((((v0.c0, t0.c32, t0.c1, t0.c32, t0.c1))==((t0.c2, vt0.c0, t0.c2, vt0.c0, t0.c32))), (- (t0.c32)), NULL, ((t0.c1) BETWEEN (v0.c0) AND (t0.c32))), CASE v0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<('-2124974607')) THEN (vt0.c0 IN ()) ELSE (((t0.c2, t0.c1, t0.c32)) BETWEEN ((vt0.c1, vt0.c0, t0.c32)) AND ((v0.c0, vt0.c0, t0.c32))) END DESC);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((((t0.c0))<((t0.c32)))) BETWEEN (((t0.c0)==(x''))) AND (CAST(t0.c32 AS BLOB)))) ORDER BY COALESCE((((v0.c0, t0.c32, t0.c1, t0.c32, t0.c1))==((t0.c2, vt0.c0, t0.c2, vt0.c0, t0.c32))), (- (t0.c32)), NULL, ((t0.c1) BETWEEN (v0.c0) AND (t0.c32))), CASE v0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<('-2124974607')) THEN (vt0.c0 IN ()) ELSE (((t0.c2, t0.c1, t0.c32)) BETWEEN ((vt0.c1, vt0.c0, t0.c32)) AND ((v0.c0, vt0.c0, t0.c32))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c32)))) BETWEEN (((t0.c0)==(x''))) AND (CAST(t0.c32 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY COALESCE((((v0.c0, t0.c32, t0.c1, t0.c32, t0.c1))==((t0.c2, vt0.c0, t0.c2, vt0.c0, t0.c32))), (- (t0.c32)), NULL, ((t0.c1) BETWEEN (v0.c0) AND (t0.c32))), CASE v0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<('-2124974607')) THEN (vt0.c0 IN ()) ELSE (((t0.c2, t0.c1, t0.c32)) BETWEEN ((vt0.c1, vt0.c0, t0.c32)) AND ((v0.c0, vt0.c0, t0.c32))) END DESC);
SELECT ALL * FROM vt0, v0, t0 WHERE ((((((t0.c0))<((t0.c32)))) BETWEEN (((t0.c0)==(x''))) AND (CAST(t0.c32 AS BLOB)))) ORDER BY COALESCE((((v0.c0, t0.c32, t0.c1, t0.c32, t0.c1))==((t0.c2, vt0.c0, t0.c2, vt0.c0, t0.c32))), (- (t0.c32)), NULL, ((t0.c1) BETWEEN (v0.c0) AND (t0.c32))), CASE v0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<('-2124974607')) THEN (vt0.c0 IN ()) ELSE (((t0.c2, t0.c1, t0.c32)) BETWEEN ((vt0.c1, vt0.c0, t0.c32)) AND ((v0.c0, vt0.c0, t0.c32))) END DESC;
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY -3.1826971E7 ASC, ((CAST(t0.c0 AS TEXT))<>(LOWER(NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY -3.1826971E7 ASC, ((CAST(t0.c0 AS TEXT))!=(LOWER(NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY -3.1826971E7 ASC, ((CAST(t0.c0 AS TEXT))<>(LOWER(NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY -3.1826971E7 ASC, ((CAST(t0.c0 AS TEXT))!=(LOWER(NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY -3.1826971E7 ASC, ((CAST(t0.c0 AS TEXT))<>(LOWER(NULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((v0.c0 IN (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) ISNULL))%(((((t0.c2)OR('-1039570352')))OR(vt0.c1)))) WHERE ((((((((((t0.c32 IN ()))OR((t0.c0 IN (t0.c1)))))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))AND(((t0.c1)LIKE(1456447773))))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c32 IN ()))OR((t0.c0 IN (t0.c1)))))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))AND(((t0.c1)LIKE(1456447773))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) ISNULL))%(((((t0.c2)OR('-1039570352')))OR(vt0.c1)))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) ISNULL))%(((((t0.c2)OR('-1039570352')))OR(vt0.c1)))) WHERE ((((((((((t0.c32 IN ()))OR((t0.c0 IN (t0.c1)))))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))AND(((t0.c1)LIKE(1456447773))))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c32 IN ()))OR((t0.c0 IN (t0.c1)))))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))AND(((t0.c1)LIKE(1456447773))))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) ISNULL))%(((((t0.c2)OR('-1039570352')))OR(vt0.c1)))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) ISNULL))%(((((t0.c2)OR('-1039570352')))OR(vt0.c1)))) WHERE ((((((((((t0.c32 IN ()))OR((t0.c0 IN (t0.c1)))))AND(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))AND(((t0.c1)LIKE(1456447773))))) ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t0 WHERE (478042757) ORDER BY vt0.c1 COLLATE BINARY ASC, CAST(HEX(vt0.c0) AS BLOB)  NULLS LAST, ((((t0.c2)AND(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((v0.c0)OR(0.18642273432337064)))OR(0.33094864251976686)))OR(x'')))AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((478042757) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY vt0.c1 COLLATE BINARY ASC, CAST(HEX(vt0.c0) AS BLOB)  NULLS LAST, ((((t0.c2)AND(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((v0.c0)OR(0.18642273432337064)))OR(0.33094864251976686)))OR(x'')))AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE (478042757) ORDER BY vt0.c1 COLLATE BINARY ASC, CAST(HEX(vt0.c0) AS BLOB)  NULLS LAST, ((((t0.c2)AND(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((v0.c0)OR(0.18642273432337064)))OR(0.33094864251976686)))OR(x'')))AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((478042757) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY vt0.c1 COLLATE BINARY ASC, CAST(HEX(vt0.c0) AS BLOB)  NULLS LAST, ((((t0.c2)AND(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((v0.c0)OR(0.18642273432337064)))OR(0.33094864251976686)))OR(x'')))AND(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0, v0, t0 WHERE (478042757) ORDER BY vt0.c1 COLLATE BINARY ASC, CAST(HEX(vt0.c0) AS BLOB)  NULLS LAST, ((((t0.c2)AND(vt0.c0))) BETWEEN (vt0.c1) AND (((((((((v0.c0)OR(0.18642273432337064)))OR(0.33094864251976686)))OR(x'')))AND(v0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((((((vt0.c0 IN (t0.c1)))OR(t0.c2 COLLATE BINARY)))OR(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR(vt0.c1)))OR(((vt0.c0) NOT NULL))) WHERE (CASE ((t0.c1)>(t0.c2))  WHEN ((NULL)LIKE(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((('ug', '0.3297679975388039', t0.c1))<((t0.c1, t0.c2, t0.c32))) THEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(t0.c1)) END) ORDER BY ((t0.c32)LIKE(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)>(t0.c2))  WHEN ((NULL)LIKE(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((('ug', '0.3297679975388039', t0.c1))<((t0.c1, t0.c2, t0.c32))) THEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((((((vt0.c0 IN (t0.c1)))OR(t0.c2 COLLATE BINARY)))OR(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR(vt0.c1)))OR(((vt0.c0) NOT NULL))) ORDER BY ((t0.c32)LIKE(((vt0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((((((vt0.c0 IN (t0.c1)))OR(t0.c2 COLLATE BINARY)))OR(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR(vt0.c1)))OR(((vt0.c0) NOT NULL))) WHERE (CASE ((t0.c1)>(t0.c2))  WHEN ((NULL)LIKE(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((('ug', '0.3297679975388039', t0.c1))<((t0.c1, t0.c2, t0.c32))) THEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(t0.c1)) END) ORDER BY ((t0.c32)LIKE(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)>(t0.c2))  WHEN ((NULL)LIKE(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((('ug', '0.3297679975388039', t0.c1))<((t0.c1, t0.c2, t0.c32))) THEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((((((vt0.c0 IN (t0.c1)))OR(t0.c2 COLLATE BINARY)))OR(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR(vt0.c1)))OR(((vt0.c0) NOT NULL))) ORDER BY ((t0.c32)LIKE(((vt0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((((((vt0.c0 IN (t0.c1)))OR(t0.c2 COLLATE BINARY)))OR(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR(vt0.c1)))OR(((vt0.c0) NOT NULL))) WHERE (CASE ((t0.c1)>(t0.c2))  WHEN ((NULL)LIKE(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c1)) WHEN (t0.c0 IN (t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((('ug', '0.3297679975388039', t0.c1))<((t0.c1, t0.c2, t0.c32))) THEN ((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(t0.c1)) END) ORDER BY ((t0.c32)LIKE(((vt0.c1) NOT NULL)));
