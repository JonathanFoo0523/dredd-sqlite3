-- Time: 2024/06/10 06:39:51
-- Database: database3
-- Database version: 3.40.0
-- seed value: 2064110903
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=0.6375675406340503 WHERE ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))||(0.24607538126497053)); -- 0ms;
UPDATE OR REPLACE rt0 SET c2=x'd7f3', c0=NULL WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END) ISNULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c1) VALUES (0.24607538126497053, x'c7f3', 600014049); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
PRAGMA busy_timeout; -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('6'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('', 'GM糡P', NULL), ('!~#', NULL, 0.41605820182936726), (0.5144637091199166, '36019493', x'e9e4e7b99c77'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('-296707337', NULL), ('932540607', x'670b'), ('932540607', 0.544167728697932); -- 0ms;
CREATE VIEW v0(c0) AS SELECT ALL (((((rt0.c1))!=((rt0.c2)))) ISNULL) FROM rt0 WHERE ((((('Wm'))<((0.7123965711503516))) IN (((0.2157551895251174)LIKE(x''))))) GROUP BY ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))OR((rt0.c1 IN ()))))OR((- (rt0.c1)))), HEX(DISTINCT ((rt0.c2)/(rt0.c2))), CASE (+ (rt0.c1))  WHEN (((rt0.c0, rt0.c0, -2.96707337E8)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((600014049, rt0.c1, rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.24607538126497053), (NULL), ('36019493'); -- 0ms;
REINDEX NOCASE; -- 0ms;
ANALYZE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
REINDEX  rt0; -- 1ms;
PRAGMA temp.journal_size_limit = 2581019769874469235; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('36019493') NOT NULL)) NOT BETWEEN (CAST(x'' AS REAL)) AND ((NOT (-2.96707337E8)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.42049632964803263), (x''), (NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (x'', ''), ('r5', 0.0453369137901205), ('磤髷w3 ', 0.5587328673439302); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1) VALUES ((- (((((NULL)AND('36019493')))OR(0.9830030794891391)))), 'd䷈'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c0) VALUES ('36019493', 0.2613889497661035, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN 0.900241552942444 THEN '1462554805' END COLLATE BINARY; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE rt0 SET (c2, c1)=(0.7973197564177226, NULL) WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0X572cd0b5 END, ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)), ((rt0.c0)IS NOT(0.12876583412980191))))<>(((((('''u')AND(rt0.c1)))OR('w\n埃K\rPyHo')), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c2 AS NUMERIC)))); -- 1ms;
UPDATE OR FAIL rt0 SET (c1)=(0.2613889497661035) WHERE ((rt0.c2) IS TRUE) COLLATE RTRIM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE rt0 SET (c1)=('188381412'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.339328685584959; -- 2ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (NULL, ''), (x'5076', x'247b'), (NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (x'', ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('', '1797737928'), (x'', x''), (NULL, 188381412), (NULL, 0.44325802572496764), (NULL, x''), (0xffffffffca6e2ae8, 0.3890896623043887), ('36019493', 0Xffffffffc28f8161); -- 1ms;
DELETE FROM rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2, c2)=('/o', 0.4983009737236175) WHERE ((CAST(rt0.c2 AS INTEGER))<>((('')GLOB(rt0.c1)))); -- 0ms;
PRAGMA main.default_cache_size = -1982281997; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c0=0.42049632964803263 WHERE (((rt0.c2 IN ())) NOTNULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.mmap_size = 6059775870491063918; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2, c2, c1)=(-1.982281997E9, '-1676880077', x'49cf') WHERE (~ (((rt0.c2) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (-296707337); -- 0ms;
PRAGMA mmap_size = 5643438825708698255; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (NULL, x''); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (x'b8e0', NULL); -- 1ms;
PRAGMA shrink_memory; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=(x'9602') WHERE (((rt0.c1 IN ())) NOT NULL); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.3362902324164314, '', x''); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (NULL, ''); -- 0ms;
UPDATE OR ABORT rt0 SET c1='x~I'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1, c0)=(NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'', x'', x''), (0.5069030439407742, NULL, x'982c'), (x'', 0.7973197564177226, NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
UPDATE rt0 SET (c2)=(0.022235421993571536); -- 0ms;
UPDATE rt0 SET c1=x''; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(x'5cef', '-296707337') WHERE CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS REAL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'73e8', x'', -1980550846); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.default_cache_size = 754610996; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=NULL WHERE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
UPDATE rt0 SET (c2)=('6'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('932540607') WHERE CAST(((rt0.c2) NOTNULL) AS BLOB); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (0.1566828206149693); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES (x'', x''), (x'', x''), (x'', 0x52632a89); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', x'2a47', 0.634936938099917), (x'', '-85265288', 'SbHp+[]'), ('o-졀<5fSZ휳', 0.4004219023497808, 0.5399034650280512); -- 1ms;
PRAGMA incremental_vacuum(-351666149); -- 0ms;
PRAGMA main.cache_spill = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(NULL) WHERE ((UNLIKELY(rt0.c0)) NOT BETWEEN (((rt0.c2)||(rt0.c2))) AND (((rt0.c0)=(rt0.c0)))); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c2) VALUES (NULL, 754610996, NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (NULL, NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(0.15910691681954814, 0.022235421993571536); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE rt0.c2; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0xffffffffee509af7) WHERE CASE WHEN ((rt0.c0)|(rt0.c2)) THEN rt0.c2 ELSE rt0.c0 END; -- 0ms;
UPDATE rt0 SET c1=x'2370', c0='-1479065692' WHERE (- ((rt0.c1 IN ()))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0 WHERE (((v0.c0)<<(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<<(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<<(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)<<(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<<(((v0.c0) ISNULL))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (- (((1.382230665E9)&(rt0.c2)))) WHERE ((((v0.c0 IN ()))-('-371786295')));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))-('-371786295'))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- (((1.382230665E9)&(rt0.c2)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (- (((1.382230665E9)&(rt0.c2)))) WHERE ((((v0.c0 IN ()))-('-371786295')));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))-('-371786295'))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- (((1.382230665E9)&(rt0.c2)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (- (((1.382230665E9)&(rt0.c2)))) WHERE ((((v0.c0 IN ()))-('-371786295')));
SELECT * FROM v0 WHERE (LENGTH(((v0.c0)/(-1.676880077E9)))) ORDER BY LIKELIHOOD(DISTINCT (((v0.c0))>=((1797737928))), 0.9750642607321921);
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((v0.c0)/(-1.676880077E9)))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(DISTINCT (((v0.c0))>=((1797737928))), 0.9750642607321921));
SELECT * FROM v0 WHERE (LENGTH(((v0.c0)/(-1.676880077E9)))) ORDER BY LIKELIHOOD(DISTINCT (((v0.c0))>=((1797737928))), 0.9750642607321921);
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((v0.c0)/(-1.676880077E9)))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(DISTINCT (((v0.c0))>=((1797737928))), 0.9750642607321921));
SELECT * FROM v0 WHERE (LENGTH(((v0.c0)/(-1.676880077E9)))) ORDER BY LIKELIHOOD(DISTINCT (((v0.c0))>=((1797737928))), 0.9750642607321921);
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c1)<<(rt0.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL), LENGTH(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL), LENGTH(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c1)<<(rt0.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL), LENGTH(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)<<(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL), LENGTH(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c1)<<(rt0.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL), LENGTH(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)));
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0))  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0))  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (((v0.c0)-(v0.c0))) AND (v0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM rt0 WHERE (json_array_length(rt0.c2 COLLATE RTRIM, rt0.c1)) ORDER BY '0.4983009737236175'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c2 COLLATE RTRIM, rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY '0.4983009737236175'  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (json_array_length(rt0.c2 COLLATE RTRIM, rt0.c1)) ORDER BY '0.4983009737236175'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c2 COLLATE RTRIM, rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY '0.4983009737236175'  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0)OR(rt0.c2)) IN (((v0.c0)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)OR(rt0.c2)) IN (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0)OR(rt0.c2)) IN (((v0.c0)/(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)OR(rt0.c2)) IN (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0)OR(rt0.c2)) IN (((v0.c0)/(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (HEX(DISTINCT (((rt0.c1, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((rt0.c1, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (HEX(DISTINCT (((rt0.c1, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((rt0.c1, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (HEX(DISTINCT (((rt0.c1, v0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c0)) AND ((rt0.c0, v0.c0, v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) BETWEEN (DATETIME(v0.c0, v0.c0, v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0))) BETWEEN (DATETIME(v0.c0, v0.c0, v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) BETWEEN (DATETIME(v0.c0, v0.c0, v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS NOT(v0.c0))) BETWEEN (DATETIME(v0.c0, v0.c0, v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) BETWEEN (DATETIME(v0.c0, v0.c0, v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY v0.c0 ASC;
SELECT ALL * FROM rt0 NOT INDEXED CROSS JOIN v0 ON CASE ((0.667578312236534)==(rt0.c0))  WHEN rt0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((0.5587328673439302)AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END WHERE ((- ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE ((0.667578312236534)=(rt0.c0))  WHEN rt0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((0.5587328673439302)AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END);
SELECT ALL * FROM rt0 NOT INDEXED CROSS JOIN v0 ON CASE ((0.667578312236534)==(rt0.c0))  WHEN rt0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((0.5587328673439302)AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END WHERE ((- ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE ((0.667578312236534)=(rt0.c0))  WHEN rt0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((0.5587328673439302)AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END);
SELECT ALL * FROM rt0 NOT INDEXED CROSS JOIN v0 ON CASE ((0.667578312236534)==(rt0.c0))  WHEN rt0.c1 COLLATE BINARY THEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((0.5587328673439302)AND(rt0.c0)) THEN ((v0.c0) IS FALSE) END WHERE ((- ((- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))) ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c1)>=(rt0.c2)))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(rt0.c2)))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c1)>=(rt0.c2)))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(rt0.c2)))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))) ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c1)>=(rt0.c2)))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(rt0.c2)))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c1)>=(rt0.c2)))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(rt0.c2)))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))) ORDER BY (((((((((NOT (rt0.c0)))AND(((rt0.c1)>=(rt0.c2)))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))))OR(rt0.c2)))AND(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- (LIKELY(rt0.c1)))) ORDER BY ((((((rt0.c1)<(rt0.c2)))AND('361846723')))AND((+ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)<(rt0.c2)))AND('361846723')))AND((+ (rt0.c0)))) DESC);
SELECT ALL * FROM rt0 WHERE ((- (LIKELY(rt0.c1)))) ORDER BY ((((((rt0.c1)<(rt0.c2)))AND('361846723')))AND((+ (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)<(rt0.c2)))AND('361846723')))AND((+ (rt0.c0)))) DESC);
SELECT ALL * FROM rt0 WHERE ((- (LIKELY(rt0.c1)))) ORDER BY ((((((rt0.c1)<(rt0.c2)))AND('361846723')))AND((+ (rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN (LOWER(rt0.c0)) AND ((((rt0.c2))<>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) BETWEEN (LOWER(rt0.c0)) AND ((((rt0.c2))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN (LOWER(rt0.c0)) AND ((((rt0.c2))<>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) BETWEEN (LOWER(rt0.c0)) AND ((((rt0.c2))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN (LOWER(rt0.c0)) AND ((((rt0.c2))<>((rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0))<=((rt0.c0, 0.19245453365157006, rt0.c1))))GLOB(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0))<=((rt0.c0, 0.19245453365157006, rt0.c1))))GLOB(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0))<=((rt0.c0, 0.19245453365157006, rt0.c1))))GLOB(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0))<=((rt0.c0, 0.19245453365157006, rt0.c1))))GLOB(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0))<=((rt0.c0, 0.19245453365157006, rt0.c1))))GLOB(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS TEXT) DESC;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT 188381412)) ORDER BY (((((rt0.c0)||(rt0.c0)), ((x'')+(rt0.c1)), (((rt0.c1))>=((rt0.c1)))))>(((rt0.c1 IN ()), ((rt0.c2) ISNULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 188381412)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)||(rt0.c0)), ((x'')+(rt0.c1)), (((rt0.c1))>=((rt0.c1)))))>(((rt0.c1 IN ()), ((rt0.c2) ISNULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT 188381412)) ORDER BY (((((rt0.c0)||(rt0.c0)), ((x'')+(rt0.c1)), (((rt0.c1))>=((rt0.c1)))))>(((rt0.c1 IN ()), ((rt0.c2) ISNULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 188381412)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)||(rt0.c0)), ((x'')+(rt0.c1)), (((rt0.c1))>=((rt0.c1)))))>(((rt0.c1 IN ()), ((rt0.c2) ISNULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT 188381412)) ORDER BY (((((rt0.c0)||(rt0.c0)), ((x'')+(rt0.c1)), (((rt0.c1))>=((rt0.c1)))))>(((rt0.c1 IN ()), ((rt0.c2) ISNULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)))  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 COLLATE BINARY)AND(((v0.c0) IS TRUE))))AND(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE BINARY)AND(((v0.c0) IS TRUE))))AND(v0.c0))  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 COLLATE BINARY)AND(((v0.c0) IS TRUE))))AND(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE BINARY)AND(((v0.c0) IS TRUE))))AND(v0.c0))  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0 COLLATE BINARY)AND(((v0.c0) IS TRUE))))AND(v0.c0))  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN TYPEOF(DISTINCT v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN TYPEOF(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN TYPEOF(DISTINCT v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS REAL) THEN TYPEOF(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS REAL) THEN TYPEOF(DISTINCT v0.c0) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))>(((v0.c0) NOTNULL)))) ORDER BY (((((rt0.c1 IN ()))OR((NOT (rt0.c2)))))OR(((rt0.c1)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))>(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1 IN ()))OR((NOT (rt0.c2)))))OR(((rt0.c1)OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))>(((v0.c0) NOTNULL)))) ORDER BY (((((rt0.c1 IN ()))OR((NOT (rt0.c2)))))OR(((rt0.c1)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))>(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1 IN ()))OR((NOT (rt0.c2)))))OR(((rt0.c1)OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))))>(((v0.c0) NOTNULL)))) ORDER BY (((((rt0.c1 IN ()))OR((NOT (rt0.c2)))))OR(((rt0.c1)OR(v0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY (- (((rt0.c2)|('-283532785'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((rt0.c2)|('-283532785')))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY (- (((rt0.c2)|('-283532785'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((rt0.c2)|('-283532785')))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY (- (((rt0.c2)|('-283532785'))));
SELECT * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT COUNT(*) FROM rt0 WHERE (json(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((json(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL ((json(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))AND(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))AND(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))AND(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))AND(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))AND(v0.c0 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2))<((rt0.c0))))&((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY ((0x33139028) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((rt0.c0))))&((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((0x33139028) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2))<((rt0.c0))))&((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY ((0x33139028) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((rt0.c0))))&((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((0x33139028) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2))<((rt0.c0))))&((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY ((0x33139028) NOTNULL) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((~ (TYPEOF(rt0.c0)))) ORDER BY json_array((((rt0.c2))=((rt0.c1))), ((rt0.c1)/(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY json_array((((rt0.c2))==((rt0.c1))), ((rt0.c1)/(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c0))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ (TYPEOF(rt0.c0)))) ORDER BY json_array((((rt0.c2))=((rt0.c1))), ((rt0.c1)/(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY json_array((((rt0.c2))==((rt0.c1))), ((rt0.c1)/(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c0))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((~ (TYPEOF(rt0.c0)))) ORDER BY json_array((((rt0.c2))=((rt0.c1))), ((rt0.c1)/(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, (rt0.c1 IN (rt0.c0))) ASC;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c1, ((highlight(rt0.c0, rt0.c0, x'', rt0.c0)) ISNULL) ASC  NULLS LAST, ((+ (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, ((highlight(rt0.c0, rt0.c0, x'', rt0.c0)) ISNULL) ASC  NULLS LAST, ((+ (rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c1, ((highlight(rt0.c0, rt0.c0, x'', rt0.c0)) ISNULL) ASC  NULLS LAST, ((+ (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, ((highlight(rt0.c0, rt0.c0, x'', rt0.c0)) ISNULL) ASC  NULLS LAST, ((+ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c2) IS TRUE) THEN TRIM(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c2) IS TRUE) THEN TRIM(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c2) IS TRUE) THEN TRIM(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c2) IS TRUE) THEN TRIM(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c2) IS TRUE) THEN TRIM(DISTINCT rt0.c2) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c1  WHEN x'' THEN v0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c1  WHEN x'' THEN v0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c1  WHEN x'' THEN v0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c1  WHEN x'' THEN v0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c1  WHEN x'' THEN v0.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0, v0 WHERE (LOWER(((((((((((((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))AND(1931772142)))OR(NULL)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((((((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))AND(1931772142)))OR(NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (LOWER(((((((((((((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))AND(1931772142)))OR(NULL)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((LOWER(((((((((((((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))AND(1931772142)))OR(NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (LOWER(((((((((((((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))AND(1931772142)))OR(NULL)))) ORDER BY v0.c0;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (x'd42b') ORDER BY CAST(((((rt0.c2)AND(rt0.c1)))OR(v0.c0)) AS INTEGER), (((CAST(v0.c0 AS TEXT), rt0.c0, ((((v0.c0)OR(rt0.c1)))OR(rt0.c1))))=((rt0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT v0.c0, 0.8631868746888197)))), (((((((((rt0.c2 IN ()))AND((NOT (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((x'd42b') IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CAST(((((rt0.c2)AND(rt0.c1)))OR(v0.c0)) AS INTEGER), (((CAST(v0.c0 AS TEXT), rt0.c0, ((((v0.c0)OR(rt0.c1)))OR(rt0.c1))))==((rt0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT v0.c0, 0.8631868746888197)))), (((((((((rt0.c2 IN ()))AND((NOT (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN ()))) ASC);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (x'd42b') ORDER BY CAST(((((rt0.c2)AND(rt0.c1)))OR(v0.c0)) AS INTEGER), (((CAST(v0.c0 AS TEXT), rt0.c0, ((((v0.c0)OR(rt0.c1)))OR(rt0.c1))))=((rt0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT v0.c0, 0.8631868746888197)))), (((((((((rt0.c2 IN ()))AND((NOT (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((x'd42b') IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CAST(((((rt0.c2)AND(rt0.c1)))OR(v0.c0)) AS INTEGER), (((CAST(v0.c0 AS TEXT), rt0.c0, ((((v0.c0)OR(rt0.c1)))OR(rt0.c1))))==((rt0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT v0.c0, 0.8631868746888197)))), (((((((((rt0.c2 IN ()))AND((NOT (rt0.c2)))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)OR(rt0.c1)) IN ()) WHERE (((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c1)OR(rt0.c1)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)OR(rt0.c1)) IN ()) WHERE (((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c1)OR(rt0.c1)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c1)OR(rt0.c1)) IN ()) WHERE (((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-1980550846' COLLATE BINARY) ORDER BY CASE WHEN v0.c0 THEN rt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1980550846' COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN v0.c0 THEN rt0.c0 END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-1980550846' COLLATE BINARY) ORDER BY CASE WHEN v0.c0 THEN rt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1980550846' COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN v0.c0 THEN rt0.c0 END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-1980550846' COLLATE BINARY) ORDER BY CASE WHEN v0.c0 THEN rt0.c0 END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))>=(UPPER(v0.c0)))) ORDER BY TYPEOF(SQLITE_SOURCE_ID())  NULLS FIRST, (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)OR(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))>=(UPPER(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(SQLITE_SOURCE_ID())  NULLS FIRST, (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)OR(v0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))>=(UPPER(v0.c0)))) ORDER BY TYPEOF(SQLITE_SOURCE_ID())  NULLS FIRST, (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)OR(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))>=(UPPER(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(SQLITE_SOURCE_ID())  NULLS FIRST, (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)OR(v0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))>=(UPPER(v0.c0)))) ORDER BY TYPEOF(SQLITE_SOURCE_ID())  NULLS FIRST, (((v0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)OR(v0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((v0.c0)|(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN (rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)|(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN (rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((v0.c0)|(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN (rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)|(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN (rt0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((v0.c0)|(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c1 IN (rt0.c0, rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(v0.c0 COLLATE RTRIM)))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 1931772142 ELSE v0.c0 END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 1931772142 ELSE v0.c0 END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 1931772142 ELSE v0.c0 END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 1931772142 ELSE v0.c0 END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 1931772142 ELSE v0.c0 END COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0))>((~ (rt0.c2))))) ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 END DESC  NULLS LAST, (((- (rt0.c2)))*(rt0.c2 COLLATE NOCASE)), json_object(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))>((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 END DESC  NULLS LAST, (((- (rt0.c2)))*(rt0.c2 COLLATE NOCASE)), json_object(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c0))>((~ (rt0.c2))))) ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 END DESC  NULLS LAST, (((- (rt0.c2)))*(rt0.c2 COLLATE NOCASE)), json_object(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))>((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2) IS FALSE)  WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 END DESC  NULLS LAST, (((- (rt0.c2)))*(rt0.c2 COLLATE NOCASE)), json_object(rt0.c0, rt0.c1) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (ABS(NULL)) AND ((((v0.c0, rt0.c2, x'')) BETWEEN ((v0.c0, x'cc26', v0.c0)) AND ((rt0.c0, rt0.c2, 0.4839194942229087))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (ABS(NULL)) AND ((((v0.c0, rt0.c2, x'')) BETWEEN ((v0.c0, x'cc26', v0.c0)) AND ((rt0.c0, rt0.c2, 0.4839194942229087))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (ABS(NULL)) AND ((((v0.c0, rt0.c2, x'')) BETWEEN ((v0.c0, x'cc26', v0.c0)) AND ((rt0.c0, rt0.c2, 0.4839194942229087))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (ABS(NULL)) AND ((((v0.c0, rt0.c2, x'')) BETWEEN ((v0.c0, x'cc26', v0.c0)) AND ((rt0.c0, rt0.c2, 0.4839194942229087))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (ABS(NULL)) AND ((((v0.c0, rt0.c2, x'')) BETWEEN ((v0.c0, x'cc26', v0.c0)) AND ((rt0.c0, rt0.c2, 0.4839194942229087))))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ((((v0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ((((v0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ((((v0.c0))<((v0.c0))))));
SELECT * FROM v0, rt0 WHERE (((GLOB(rt0.c0, rt0.c2)) BETWEEN ((('')*(rt0.c2))) AND (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '9223372036854775807' ELSE v0.c0 END))) ORDER BY ((COALESCE(DISTINCT NULL, rt0.c0))IS(((v0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c0, rt0.c2)) BETWEEN ((('')*(rt0.c2))) AND (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '9223372036854775807' ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((COALESCE(DISTINCT NULL, rt0.c0))IS(((v0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((GLOB(rt0.c0, rt0.c2)) BETWEEN ((('')*(rt0.c2))) AND (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '9223372036854775807' ELSE v0.c0 END))) ORDER BY ((COALESCE(DISTINCT NULL, rt0.c0))IS(((v0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c0, rt0.c2)) BETWEEN ((('')*(rt0.c2))) AND (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '9223372036854775807' ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((COALESCE(DISTINCT NULL, rt0.c0))IS(((v0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((GLOB(rt0.c0, rt0.c2)) BETWEEN ((('')*(rt0.c2))) AND (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN '9223372036854775807' ELSE v0.c0 END))) ORDER BY ((COALESCE(DISTINCT NULL, rt0.c0))IS(((v0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)/(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(x'848c2ad9' AS INTEGER), rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)/(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(x'848c2ad9' AS INTEGER), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)/(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(x'848c2ad9' AS INTEGER), rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)/(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(x'848c2ad9' AS INTEGER), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)/(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(x'848c2ad9' AS INTEGER), rt0.c0 COLLATE RTRIM))));
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))|(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))|(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))|(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))|(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))|(v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))=(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((((rt0.c1))>((v0.c0)))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0))) AND (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((v0.c0)))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0))) AND (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))==(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))=(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((((rt0.c1))>((v0.c0)))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0))) AND (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((v0.c0)))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0))) AND (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))==(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))=(CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((((((rt0.c1))>((v0.c0)))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c0))) AND (CAST(NULL AS TEXT))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (0.15458890239674128))) NOT BETWEEN (CASE 'G!I'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (0.15458890239674128))) NOT BETWEEN (CASE 'G!I'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (0.15458890239674128))) NOT BETWEEN (CASE 'G!I'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (0.15458890239674128))) NOT BETWEEN (CASE 'G!I'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (0.15458890239674128))) NOT BETWEEN (CASE 'G!I'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0)AND(v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 END)) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 END)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 END)) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 END)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 END)) AND (((~ (rt0.c2))))));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST(rt0.c2 AS REAL) WHEN NULL THEN rt0.c1 END) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.1615388442700647 THEN rt0.c2 ELSE rt0.c1 END THEN 0.2960361432092955 WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST(rt0.c2 AS REAL) WHEN NULL THEN rt0.c1 END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.1615388442700647 THEN rt0.c2 ELSE rt0.c1 END THEN 0.2960361432092955 WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST(rt0.c2 AS REAL) WHEN NULL THEN rt0.c1 END) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.1615388442700647 THEN rt0.c2 ELSE rt0.c1 END THEN 0.2960361432092955 WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST(rt0.c2 AS REAL) WHEN NULL THEN rt0.c1 END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.1615388442700647 THEN rt0.c2 ELSE rt0.c1 END THEN 0.2960361432092955 WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CAST(rt0.c2 AS REAL) WHEN NULL THEN rt0.c1 END) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.1615388442700647 THEN rt0.c2 ELSE rt0.c1 END THEN 0.2960361432092955 WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) IS TRUE) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END  NULLS LAST;
SELECT * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE '0.0' END THEN v0.c0 END) ORDER BY (((v0.c0 IN (v0.c0)))IS((+ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE '0.0' END THEN v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))IS((+ (v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE '0.0' END THEN v0.c0 END) ORDER BY (((v0.c0 IN (v0.c0)))IS((+ (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE '0.0' END THEN v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))IS((+ (v0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE '0.0' END THEN v0.c0 END) ORDER BY (((v0.c0 IN (v0.c0)))IS((+ (v0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE '	믌X\n'  WHEN '0.2960361432092955' THEN rt0.c2 ELSE rt0.c1 END) NOT NULL)) ORDER BY ((((rt0.c0)>(rt0.c0)))<<((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '	믌X\n'  WHEN '0.2960361432092955' THEN rt0.c2 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>(rt0.c0)))<<((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE '	믌X\n'  WHEN '0.2960361432092955' THEN rt0.c2 ELSE rt0.c1 END) NOT NULL)) ORDER BY ((((rt0.c0)>(rt0.c0)))<<((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '	믌X\n'  WHEN '0.2960361432092955' THEN rt0.c2 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>(rt0.c0)))<<((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE '	믌X\n'  WHEN '0.2960361432092955' THEN rt0.c2 ELSE rt0.c1 END) NOT NULL)) ORDER BY ((((rt0.c0)>(rt0.c0)))<<((+ (rt0.c2))));
SELECT * FROM v0 WHERE (((v0.c0)*(v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)*(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0)*(v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)*(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0 WHERE (((v0.c0)*(v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0) IS FALSE) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((~ ((('')/(v0.c0))))) ORDER BY CASE (~ (v0.c0))  WHEN ((rt0.c2) NOT NULL) THEN rt0.c0 END, (NOT ('-1030782623' COLLATE BINARY))  NULLS FIRST, CASE WHEN ((rt0.c1)-(rt0.c1)) THEN ((((v0.c0)OR(rt0.c1)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((('')/(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY CASE (~ (v0.c0))  WHEN ((rt0.c2) NOT NULL) THEN rt0.c0 END, (NOT ('-1030782623' COLLATE BINARY))  NULLS FIRST, CASE WHEN ((rt0.c1)-(rt0.c1)) THEN ((((v0.c0)OR(rt0.c1)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((~ ((('')/(v0.c0))))) ORDER BY CASE (~ (v0.c0))  WHEN ((rt0.c2) NOT NULL) THEN rt0.c0 END, (NOT ('-1030782623' COLLATE BINARY))  NULLS FIRST, CASE WHEN ((rt0.c1)-(rt0.c1)) THEN ((((v0.c0)OR(rt0.c1)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((('')/(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY CASE (~ (v0.c0))  WHEN ((rt0.c2) NOT NULL) THEN rt0.c0 END, (NOT ('-1030782623' COLLATE BINARY))  NULLS FIRST, CASE WHEN ((rt0.c1)-(rt0.c1)) THEN ((((v0.c0)OR(rt0.c1)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((~ ((('')/(v0.c0))))) ORDER BY CASE (~ (v0.c0))  WHEN ((rt0.c2) NOT NULL) THEN rt0.c0 END, (NOT ('-1030782623' COLLATE BINARY))  NULLS FIRST, CASE WHEN ((rt0.c1)-(rt0.c1)) THEN ((((v0.c0)OR(rt0.c1)))AND(v0.c0)) END  NULLS LAST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))IS(((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))IS(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))IS(((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))IS(((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))IS(((rt0.c0)AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE 0.6376604381475588  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 1.92866182E8 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (x''))) ORDER BY ((((((rt0.c1) NOTNULL))AND(((rt0.c1)<(rt0.c0)))))OR((((rt0.c2))==((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.6376604381475588  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 1.92866182E8 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (x''))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOTNULL))AND(((rt0.c1)<(rt0.c0)))))OR((((rt0.c2))==((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE 0.6376604381475588  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 1.92866182E8 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (x''))) ORDER BY ((((((rt0.c1) NOTNULL))AND(((rt0.c1)<(rt0.c0)))))OR((((rt0.c2))==((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.6376604381475588  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 1.92866182E8 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (x''))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOTNULL))AND(((rt0.c1)<(rt0.c0)))))OR((((rt0.c2))==((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE 0.6376604381475588  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 1.92866182E8 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (x''))) ORDER BY ((((((rt0.c1) NOTNULL))AND(((rt0.c1)<(rt0.c0)))))OR((((rt0.c2))==((rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (PRINTF(((rt0.c1)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((rt0.c1)IS NOT(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (PRINTF(((rt0.c1)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((rt0.c1)IS NOT(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (PRINTF(((rt0.c1)IS NOT(rt0.c0))));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((0.667578312236534) IS FALSE) THEN v0.c0 COLLATE NOCASE ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.667578312236534) IS FALSE) THEN v0.c0 COLLATE NOCASE ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((0.667578312236534) IS FALSE) THEN v0.c0 COLLATE NOCASE ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.667578312236534) IS FALSE) THEN v0.c0 COLLATE NOCASE ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((0.667578312236534) IS FALSE) THEN v0.c0 COLLATE NOCASE ELSE ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((('-825471164', v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), (+ (v0.c0)), ((v0.c0)<=(v0.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND(0x52632a89)))AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0)), TYPEOF(DISTINCT v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-825471164', v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), (+ (v0.c0)), ((v0.c0)<=(v0.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND(0X52632a89)))AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0)), TYPEOF(DISTINCT v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('-825471164', v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), (+ (v0.c0)), ((v0.c0)<=(v0.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND(0x52632a89)))AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0)), TYPEOF(DISTINCT v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-825471164', v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), (+ (v0.c0)), ((v0.c0)<=(v0.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND(0X52632a89)))AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0)), TYPEOF(DISTINCT v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('-825471164', v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), (+ (v0.c0)), ((v0.c0)<=(v0.c0)))) AND ((((((((((v0.c0)AND(v0.c0)))AND(0x52632a89)))AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0)), TYPEOF(DISTINCT v0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY 0.7766159855505146 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.7766159855505146 DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY 0.7766159855505146 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.7766159855505146 DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)<(rt0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY 0.7766159855505146 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)>>(rt0.c0))))>((v0.c0 COLLATE RTRIM)))) ORDER BY ''  NULLS LAST, (((rt0.c2)-(rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c0))))>((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ''  NULLS LAST, (((rt0.c2)-(rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)>>(rt0.c0))))>((v0.c0 COLLATE RTRIM)))) ORDER BY ''  NULLS LAST, (((rt0.c2)-(rt0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c0))))>((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ''  NULLS LAST, (((rt0.c2)-(rt0.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c1)>>(rt0.c0))))>((v0.c0 COLLATE RTRIM)))) ORDER BY ''  NULLS LAST, (((rt0.c2)-(rt0.c2)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT NULL) WHERE ((+ (x''))) ORDER BY UNLIKELY(((rt0.c1) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT NULL) ORDER BY UNLIKELY(((rt0.c1) ISNULL)) ASC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT NULL) WHERE ((+ (x''))) ORDER BY UNLIKELY(((rt0.c1) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT NULL) ORDER BY UNLIKELY(((rt0.c1) ISNULL)) ASC);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT NULL) WHERE ((+ (x''))) ORDER BY UNLIKELY(((rt0.c1) ISNULL)) ASC;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS TEXT))IS(v0.c0))) ORDER BY CAST('6' AS REAL), TRIM(((v0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))IS(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST('6' AS REAL), TRIM(((v0.c0) IS TRUE)) DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS TEXT))IS(v0.c0))) ORDER BY CAST('6' AS REAL), TRIM(((v0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))IS(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST('6' AS REAL), TRIM(((v0.c0) IS TRUE)) DESC);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS TEXT))IS(v0.c0))) ORDER BY CAST('6' AS REAL), TRIM(((v0.c0) IS TRUE)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))/(rt0.c1))) ORDER BY ((((- (rt0.c2)), rt0.c0 COLLATE RTRIM, 0.48908251139538483))>=(((rt0.c2 IN (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c2)))/(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((- (rt0.c2)), rt0.c0 COLLATE RTRIM, 0.48908251139538483))>=(((rt0.c2 IN (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))/(rt0.c1))) ORDER BY ((((- (rt0.c2)), rt0.c0 COLLATE RTRIM, 0.48908251139538483))>=(((rt0.c2 IN (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c2)))/(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((- (rt0.c2)), rt0.c0 COLLATE RTRIM, 0.48908251139538483))>=(((rt0.c2 IN (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))/(rt0.c1))) ORDER BY ((((- (rt0.c2)), rt0.c0 COLLATE RTRIM, 0.48908251139538483))>=(((rt0.c2 IN (rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), rt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0))))<=(((rt0.c0 IN ()))))) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0))))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS NOT(rt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0))))<=(((rt0.c0 IN ()))))) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0))))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS NOT(rt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0))))<=(((rt0.c0 IN ()))))) ORDER BY ((((v0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)IS NOT(rt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0))!=((rt0.c1))) IN ()) WHERE (json_array(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0))!=((rt0.c1))) IN ()) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0))!=((rt0.c1))) IN ()) WHERE (json_array(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0))!=((rt0.c1))) IN ()) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0))!=((rt0.c1))) IN ()) WHERE (json_array(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ('-1858613212');
SELECT SUM(count) FROM (SELECT (('-1858613212') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1858613212');
SELECT SUM(count) FROM (SELECT (('-1858613212') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('-1858613212');
SELECT ALL * FROM v0 WHERE (HEX(STRFTIME(v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX(STRFTIME(v0.c0, v0.c0, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (HEX(STRFTIME(v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX(STRFTIME(v0.c0, v0.c0, v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (HEX(STRFTIME(v0.c0, v0.c0, v0.c0)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((((v0.c0)&(v0.c0)))AND(((rt0.c1)GLOB(v0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.020163118325891904 WHEN rt0.c2 THEN v0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((v0.c0)&(v0.c0)))AND(((rt0.c1)GLOB(v0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.020163118325891904 WHEN rt0.c2 THEN v0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((((v0.c0)&(v0.c0)))AND(((rt0.c1)GLOB(v0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.020163118325891904 WHEN rt0.c2 THEN v0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((v0.c0)&(v0.c0)))AND(((rt0.c1)GLOB(v0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.020163118325891904 WHEN rt0.c2 THEN v0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((((v0.c0)&(v0.c0)))AND(((rt0.c1)GLOB(v0.c0)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN 0.020163118325891904 WHEN rt0.c2 THEN v0.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) ASC;
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB);
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB);
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY CAST(v0.c0 COLLATE BINARY AS BLOB);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(rt0.c0)) AND ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(rt0.c0)) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(rt0.c0)) AND ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(rt0.c0)) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (UNLIKELY(rt0.c0)) AND ((- (rt0.c1)))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR(rt0.c1)))AND('-1980550846')) WHERE (x'') ORDER BY (((- (rt0.c2)))/(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR(rt0.c1)))AND('-1980550846')) ORDER BY (((- (rt0.c2)))/(rt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR(rt0.c1)))AND('-1980550846')) WHERE (x'') ORDER BY (((- (rt0.c2)))/(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR(rt0.c1)))AND('-1980550846')) ORDER BY (((- (rt0.c2)))/(rt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR(rt0.c1)))AND('-1980550846')) WHERE (x'') ORDER BY (((- (rt0.c2)))/(rt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c1))) ORDER BY COALESCE(DISTINCT ((rt0.c1)<=(rt0.c2)), rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)<=(rt0.c2)), rt0.c2));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c1))) ORDER BY COALESCE(DISTINCT ((rt0.c1)<=(rt0.c2)), rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)<=(rt0.c2)), rt0.c2));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(rt0.c0 AS BLOB))))AND(rt0.c1))) ORDER BY COALESCE(DISTINCT ((rt0.c1)<=(rt0.c2)), rt0.c2);
SELECT * FROM v0 WHERE ((((('-875352266')OR(v0.c0)))AND(x'')) COLLATE NOCASE) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))&(v0.c0))  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((('-875352266')OR(v0.c0)))AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))&(v0.c0))  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT * FROM v0 WHERE ((((('-875352266')OR(v0.c0)))AND(x'')) COLLATE NOCASE) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))&(v0.c0))  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((('-875352266')OR(v0.c0)))AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))&(v0.c0))  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT * FROM v0 WHERE ((((('-875352266')OR(v0.c0)))AND(x'')) COLLATE NOCASE) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))&(v0.c0))  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY 0.9172137651984327 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY 0.9172137651984327 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY 0.9172137651984327 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY 0.9172137651984327 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY 0.9172137651984327 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((rt0.c2)>>('0.544167728697932'))))) ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), 0.22858982839701636) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN (((rt0.c2)>>('0.544167728697932'))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), 0.22858982839701636) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((rt0.c2)>>('0.544167728697932'))))) ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), 0.22858982839701636) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN (((rt0.c2)>>('0.544167728697932'))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), 0.22858982839701636) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN (((rt0.c2)>>('0.544167728697932'))))) ORDER BY LIKELIHOOD(DISTINCT ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)), 0.22858982839701636) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS TEXT)) ORDER BY (((v0.c0 IN ())) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT NULL) DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS TEXT)) ORDER BY (((v0.c0 IN ())) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT NULL) DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS TEXT)) ORDER BY (((v0.c0 IN ())) NOT NULL) DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN ('1382230665') AND (-32323520)) IN ((rt0.c0 IN (rt0.c1)))) WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0xffffffffe6937cad END)||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (rt0.c2 IN (NULL)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0xffffffffe6937cad END)||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN ('1382230665') AND (-32323520)) IN ((rt0.c0 IN (rt0.c1)))) ORDER BY (rt0.c2 IN (NULL)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN ('1382230665') AND (-32323520)) IN ((rt0.c0 IN (rt0.c1)))) WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0xffffffffe6937cad END)||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (rt0.c2 IN (NULL)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0xffffffffe6937cad END)||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN ('1382230665') AND (-32323520)) IN ((rt0.c0 IN (rt0.c1)))) ORDER BY (rt0.c2 IN (NULL)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN ('1382230665') AND (-32323520)) IN ((rt0.c0 IN (rt0.c1)))) WHERE (((CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 0xffffffffe6937cad END)||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (rt0.c2 IN (NULL)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL), '856920104', (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) IS FALSE), ((rt0.c2)/(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL), '856920104', (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) IS FALSE), ((rt0.c2)/(x'')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL), '856920104', (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) IS FALSE), ((rt0.c2)/(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL), '856920104', (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) IS FALSE), ((rt0.c2)/(x'')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((((rt0.c0) NOTNULL), '856920104', (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) IS FALSE), ((rt0.c2)/(x''))))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((x'' IN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((x'' IN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((x'' IN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((('LeL,睊Z,oa')<=(v0.c0))))=(((((v0.c0))<>((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('LeL,睊Z,oa')<=(v0.c0))))==(((((v0.c0))<>((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((('LeL,睊Z,oa')<=(v0.c0))))=(((((v0.c0))<>((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('LeL,睊Z,oa')<=(v0.c0))))==(((((v0.c0))<>((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((('LeL,睊Z,oa')<=(v0.c0))))=(((((v0.c0))<>((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((0.3729688006672467) BETWEEN ((NOT (v0.c0))) AND (((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.3729688006672467) BETWEEN ((NOT (v0.c0))) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.3729688006672467) BETWEEN ((NOT (v0.c0))) AND (((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.3729688006672467) BETWEEN ((NOT (v0.c0))) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.3729688006672467) BETWEEN ((NOT (v0.c0))) AND (((v0.c0)%(v0.c0)))));
SELECT * FROM rt0, v0 WHERE ((((+ (rt0.c0)))GLOB((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))GLOB((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((+ (rt0.c0)))GLOB((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))GLOB((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((+ (rt0.c0)))GLOB((rt0.c2 IN (rt0.c2)))));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c0))>=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c0))>=((v0.c0))) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c0))>=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c0))>=((v0.c0))) END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CASE ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))  WHEN (rt0.c0 IN ()) THEN (((rt0.c0))>=((v0.c0))) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(v0.c0))) WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOT NULL)) ORDER BY ',n)#粭' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(v0.c0))) ORDER BY ',n)#粭' ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(v0.c0))) WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOT NULL)) ORDER BY ',n)#粭' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(v0.c0))) ORDER BY ',n)#粭' ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (+ (ABS(v0.c0))) WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c2)) NOT NULL)) ORDER BY ',n)#粭' ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))))>=(((NOT (rt0.c2)))))) ORDER BY (+ ((rt0.c1 IN ()))), (+ (TRIM(DISTINCT rt0.c1, rt0.c2))) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN (rt0.c0 IN (rt0.c1, rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))))>=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((rt0.c1 IN ()))), (+ (TRIM(DISTINCT rt0.c1, rt0.c2))) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN (rt0.c0 IN (rt0.c1, rt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))))>=(((NOT (rt0.c2)))))) ORDER BY (+ ((rt0.c1 IN ()))), (+ (TRIM(DISTINCT rt0.c1, rt0.c2))) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN (rt0.c0 IN (rt0.c1, rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))))>=(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((rt0.c1 IN ()))), (+ (TRIM(DISTINCT rt0.c1, rt0.c2))) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN (rt0.c0 IN (rt0.c1, rt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c1))))>=(((NOT (rt0.c2)))))) ORDER BY (+ ((rt0.c1 IN ()))), (+ (TRIM(DISTINCT rt0.c1, rt0.c2))) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN (rt0.c0 IN (rt0.c1, rt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (0.7251112937913552) AND (CHANGES()))) ORDER BY IFNULL((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))), ((v0.c0)IS NOT(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (0.7251112937913552) AND (CHANGES()))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY IFNULL((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))), ((v0.c0)IS NOT(rt0.c1))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (0.7251112937913552) AND (CHANGES()))) ORDER BY IFNULL((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))), ((v0.c0)IS NOT(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (0.7251112937913552) AND (CHANGES()))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY IFNULL((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))), ((v0.c0)IS NOT(rt0.c1))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c1)>=(rt0.c0))) NOT BETWEEN (0.7251112937913552) AND (CHANGES()))) ORDER BY IFNULL((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))), ((v0.c0)IS NOT(rt0.c1)));
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((v0.c0)==(rt0.c2)))OR(-2047280410)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'J8' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN 0.13347446731529544 ELSE rt0.c1 END)) WHERE (((CAST(rt0.c0 AS TEXT)) NOT NULL)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((v0.c0)==(rt0.c2)))OR(-2047280410)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'J8' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN 0.13347446731529544 ELSE rt0.c1 END)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((v0.c0)==(rt0.c2)))OR(-2047280410)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'J8' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN 0.13347446731529544 ELSE rt0.c1 END)) WHERE (((CAST(rt0.c0 AS TEXT)) NOT NULL)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((v0.c0)==(rt0.c2)))OR(-2047280410)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'J8' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN 0.13347446731529544 ELSE rt0.c1 END)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((v0.c0)==(rt0.c2)))OR(-2047280410)))OR(CASE WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'J8' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN 0.13347446731529544 ELSE rt0.c1 END)) WHERE (((CAST(rt0.c0 AS TEXT)) NOT NULL)) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)%(rt0.c2)) THEN ((rt0.c2) NOT NULL) END WHERE ((((+ (rt0.c1))) IS TRUE)) ORDER BY (((rt0.c1 IN ()))!=(((((((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)%(rt0.c2)) THEN ((rt0.c2) NOT NULL) END ORDER BY (((rt0.c1 IN ()))<>(((((((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)%(rt0.c2)) THEN ((rt0.c2) NOT NULL) END WHERE ((((+ (rt0.c1))) IS TRUE)) ORDER BY (((rt0.c1 IN ()))!=(((((((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)%(rt0.c2)) THEN ((rt0.c2) NOT NULL) END ORDER BY (((rt0.c1 IN ()))<>(((((((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)%(rt0.c2)) THEN ((rt0.c2) NOT NULL) END WHERE ((((+ (rt0.c1))) IS TRUE)) ORDER BY (((rt0.c1 IN ()))!=(((((((((rt0.c1)AND(rt0.c2)))OR(v0.c0)))OR(rt0.c0)))AND(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, '932540607')) BETWEEN (((v0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)!=(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((NULL)!=(8.56920104E8)), (~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, '932540607')) BETWEEN (((v0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)<>(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((NULL)<>(8.56920104E8)), (~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, '932540607')) BETWEEN (((v0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)!=(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((NULL)!=(8.56920104E8)), (~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, '932540607')) BETWEEN (((v0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)<>(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((NULL)<>(8.56920104E8)), (~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, '932540607')) BETWEEN (((v0.c0 IN ()), v0.c0 COLLATE RTRIM, ((v0.c0)!=(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 END, ((NULL)!=(8.56920104E8)), (~ (v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (~ ((~ ('粭1i')))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ ((~ ('粭1i')))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (~ ((~ ('粭1i')))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ ((~ ('粭1i')))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (~ ((~ ('粭1i')))) WHERE (v0.c0);
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) ORDER BY LOWER(((rt0.c2) BETWEEN (rt0.c0) AND (0.21374972163834016))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY LOWER(((rt0.c2) BETWEEN (rt0.c0) AND (0.21374972163834016))) ASC);
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) ORDER BY LOWER(((rt0.c2) BETWEEN (rt0.c0) AND (0.21374972163834016))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY LOWER(((rt0.c2) BETWEEN (rt0.c0) AND (0.21374972163834016))) ASC);
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) ORDER BY LOWER(((rt0.c2) BETWEEN (rt0.c0) AND (0.21374972163834016))) ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c0)<>(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<>(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<>(v0.c0))) IS TRUE));
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(NULL)) AS NUMERIC)) ORDER BY (((0.9658356913897541, '', ((((v0.c0)OR(v0.c0)))AND(''))))<((NULL, ((v0.c0)-('-1980550846')), NULL))) DESC  NULLS FIRST, (~ (SQLITE_COMPILEOPTION_GET(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))AND(NULL)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((0.9658356913897541, '', ((((v0.c0)OR(v0.c0)))AND(''))))<((NULL, ((v0.c0)-('-1980550846')), NULL))) DESC  NULLS FIRST, (~ (SQLITE_COMPILEOPTION_GET(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(NULL)) AS NUMERIC)) ORDER BY (((0.9658356913897541, '', ((((v0.c0)OR(v0.c0)))AND(''))))<((NULL, ((v0.c0)-('-1980550846')), NULL))) DESC  NULLS FIRST, (~ (SQLITE_COMPILEOPTION_GET(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))AND(NULL)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((0.9658356913897541, '', ((((v0.c0)OR(v0.c0)))AND(''))))<((NULL, ((v0.c0)-('-1980550846')), NULL))) DESC  NULLS FIRST, (~ (SQLITE_COMPILEOPTION_GET(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(NULL)) AS NUMERIC)) ORDER BY (((0.9658356913897541, '', ((((v0.c0)OR(v0.c0)))AND(''))))<((NULL, ((v0.c0)-('-1980550846')), NULL))) DESC  NULLS FIRST, (~ (SQLITE_COMPILEOPTION_GET(v0.c0)));
SELECT * FROM rt0, v0 WHERE (((((json_array_length(rt0.c1, x''))OR('KDw#')))AND((('*E') NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt0.c1, x''))OR('KDw#')))AND((('*E') NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((json_array_length(rt0.c1, x''))OR('KDw#')))AND((('*E') NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(rt0.c1, x''))OR('KDw#')))AND((('*E') NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c0)))&(MIN(v0.c0, NULL)))) ORDER BY '-283532785' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))&(MIN(v0.c0, NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY '-283532785' ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c0)))&(MIN(v0.c0, NULL)))) ORDER BY '-283532785' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))&(MIN(v0.c0, NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY '-283532785' ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((~ (rt0.c0)))&(MIN(v0.c0, NULL)))) ORDER BY '-283532785' ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (UNLIKELY(x'')) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(x'')) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (UNLIKELY(x'')) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(x'')) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (UNLIKELY(x'')) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE (('-875352266' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-875352266' IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE (('-875352266' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-875352266' IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON v0.c0 WHERE (('-875352266' IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULLIF((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), x'cf58') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULLIF((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), x'cf58') ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULLIF((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), x'cf58') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULLIF((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), x'cf58') ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULLIF((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c0))), x'cf58') ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (CAST((v0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST((v0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST((v0.c0 IN ()) AS BLOB));
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) THEN COALESCE(DISTINCT v0.c0, rt0.c0) WHEN NULL THEN CASE rt0.c2  WHEN NULL THEN '1462554805' WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) ORDER BY (((- (rt0.c2))) IS FALSE) ASC, CASE (+ (rt0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) THEN COALESCE(DISTINCT v0.c0, rt0.c0) WHEN NULL THEN CASE rt0.c2  WHEN NULL THEN '1462554805' WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((- (rt0.c2))) IS FALSE) ASC, CASE (+ (rt0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 END);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) THEN COALESCE(DISTINCT v0.c0, rt0.c0) WHEN NULL THEN CASE rt0.c2  WHEN NULL THEN '1462554805' WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) ORDER BY (((- (rt0.c2))) IS FALSE) ASC, CASE (+ (rt0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) THEN COALESCE(DISTINCT v0.c0, rt0.c0) WHEN NULL THEN CASE rt0.c2  WHEN NULL THEN '1462554805' WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((- (rt0.c2))) IS FALSE) ASC, CASE (+ (rt0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 END);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) THEN COALESCE(DISTINCT v0.c0, rt0.c0) WHEN NULL THEN CASE rt0.c2  WHEN NULL THEN '1462554805' WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN ((rt0.c1) IS FALSE) END) ORDER BY (((- (rt0.c2))) IS FALSE) ASC, CASE (+ (rt0.c2))  WHEN CAST(v0.c0 AS INTEGER) THEN rt0.c0 END;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))/('-32323520')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))/('-32323520'))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))/('-32323520')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))/('-32323520'))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))/('-32323520')));
SELECT * FROM v0 WHERE ((+ (v0.c0))) ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST);
SELECT * FROM v0 WHERE ((+ (v0.c0))) ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST);
SELECT * FROM v0 WHERE ((+ (v0.c0))) ORDER BY CAST(v0.c0 AS INTEGER)  NULLS LAST;
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS FALSE)) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((ABS(0.9271830906753339))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((ABS(0.9271830906753339))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS FALSE)) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((ABS(0.9271830906753339))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((ABS(0.9271830906753339))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) IS FALSE)) ORDER BY (((v0.c0)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((ABS(0.9271830906753339))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ('0.9658356913897541' COLLATE NOCASE) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))  NULLS FIRST, TRIM(DISTINCT ((v0.c0)*(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.9658356913897541' COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))  NULLS FIRST, TRIM(DISTINCT ((v0.c0)*(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('0.9658356913897541' COLLATE NOCASE) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))  NULLS FIRST, TRIM(DISTINCT ((v0.c0)*(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.9658356913897541' COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))  NULLS FIRST, TRIM(DISTINCT ((v0.c0)*(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('0.9658356913897541' COLLATE NOCASE) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0))  NULLS FIRST, TRIM(DISTINCT ((v0.c0)*(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)/(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)/(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)/(CASE WHEN rt0.c0 THEN rt0.c1 END)));
SELECT * FROM rt0, v0 WHERE (((((ABS(DISTINCT rt0.c0))AND(CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)))OR((((v0.c0, v0.c0, rt0.c2))!=((rt0.c2, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(DISTINCT rt0.c0))AND(CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)))OR((((v0.c0, v0.c0, rt0.c2))!=((rt0.c2, v0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((ABS(DISTINCT rt0.c0))AND(CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)))OR((((v0.c0, v0.c0, rt0.c2))!=((rt0.c2, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(DISTINCT rt0.c0))AND(CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)))OR((((v0.c0, v0.c0, rt0.c2))!=((rt0.c2, v0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((ABS(DISTINCT rt0.c0))AND(CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)))OR((((v0.c0, v0.c0, rt0.c2))!=((rt0.c2, v0.c0, v0.c0))))));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))!=(CAST(rt0.c2 AS BLOB)))) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))%(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))!=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))%(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))!=(CAST(rt0.c2 AS BLOB)))) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))%(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))!=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))%(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))!=(CAST(rt0.c2 AS BLOB)))) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))%(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC;
SELECT ALL * FROM rt0 WHERE ((x'' IN ()) COLLATE RTRIM) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((x'' IN ()) COLLATE RTRIM) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((x'' IN ()) COLLATE RTRIM) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0))<=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0))<=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0))<=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0))<=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((((v0.c0))<=((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, v0.c0, '-296707337')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((~ (rt0.c0)))))AND(rt0.c0)))AND('-32323520' COLLATE RTRIM))) ORDER BY ((((x'')AND(((1131125877) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, v0.c0, '-296707337')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((~ (rt0.c0)))))AND(rt0.c0)))AND('-32323520' COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((x'')AND(((1131125877) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, v0.c0, '-296707337')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((~ (rt0.c0)))))AND(rt0.c0)))AND('-32323520' COLLATE RTRIM))) ORDER BY ((((x'')AND(((1131125877) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, v0.c0, '-296707337')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((~ (rt0.c0)))))AND(rt0.c0)))AND('-32323520' COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((x'')AND(((1131125877) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((rt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, v0.c0, '-296707337')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(rt0.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((~ (rt0.c0)))))AND(rt0.c0)))AND('-32323520' COLLATE RTRIM))) ORDER BY ((((x'')AND(((1131125877) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((rt0.c1) ISNULL)));
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) NOTNULL) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((v0.c0) NOTNULL) THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) NOTNULL) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN ((v0.c0) NOTNULL) THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN ((v0.c0) NOTNULL) THEN v0.c0 END);
SELECT COUNT(*) FROM v0 WHERE ('T\n!#X[}&');
SELECT SUM(count) FROM (SELECT (('T\n!#X[}&') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('T\n!#X[}&');
SELECT SUM(count) FROM (SELECT (('T\n!#X[}&') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('T\n!#X[}&');
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1807610759');
SELECT SUM(count) FROM (SELECT (('-1807610759') IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1807610759');
SELECT SUM(count) FROM (SELECT (('-1807610759') IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1807610759');
SELECT * FROM rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))<=((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS NUMERIC)))<=((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))<=((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS NUMERIC)))<=((rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))<=((rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((((((('尚hnK]	')<=(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((('尚hnK]	')<=(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((('尚hnK]	')<=(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((('尚hnK]	')<=(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((('尚hnK]	')<=(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((NULLIF(rt0.c2, rt0.c1)) NOTNULL)) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c2, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((NULLIF(rt0.c2, rt0.c1)) NOTNULL)) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c2, rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((NULLIF(rt0.c2, rt0.c1)) NOTNULL)) ORDER BY CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0))=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0))==((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0))=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0))==((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0))=((v0.c0))))));
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c0)>(rt0.c0)))OR(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))AND(v0.c0)))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1)<(rt0.c2)))))OR(json_insert(rt0.c0, v0.c0, rt0.c1)))) ORDER BY ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)>(rt0.c0)))OR(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))AND(v0.c0)))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1)<(rt0.c2)))))OR(json_insert(rt0.c0, v0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c0)>(rt0.c0)))OR(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))AND(v0.c0)))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1)<(rt0.c2)))))OR(json_insert(rt0.c0, v0.c0, rt0.c1)))) ORDER BY ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)>(rt0.c0)))OR(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))AND(v0.c0)))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1)<(rt0.c2)))))OR(json_insert(rt0.c0, v0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC)) ORDER BY CAST(ABS(v0.c0) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(ABS(v0.c0) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC)) ORDER BY CAST(ABS(v0.c0) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(ABS(v0.c0) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC)) ORDER BY CAST(ABS(v0.c0) AS REAL)  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) NOT NULL)) ORDER BY ((v0.c0 COLLATE RTRIM)>(((v0.c0)<<(v0.c0)))) ASC, x'4bf65abf';
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)>(((v0.c0)<<(v0.c0)))) ASC, x'4bf65abf');
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) NOT NULL)) ORDER BY ((v0.c0 COLLATE RTRIM)>(((v0.c0)<<(v0.c0)))) ASC, x'4bf65abf';
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM)>(((v0.c0)<<(v0.c0)))) ASC, x'4bf65abf');
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) NOT NULL)) ORDER BY ((v0.c0 COLLATE RTRIM)>(((v0.c0)<<(v0.c0)))) ASC, x'4bf65abf';
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (((0x30ab1aaf) IS TRUE)) AND (((rt0.c0)-(0.2505662803589781))))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((0x30ab1aaf) IS TRUE)) AND (((rt0.c0)-(0.2505662803589781))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (((0x30ab1aaf) IS TRUE)) AND (((rt0.c0)-(0.2505662803589781))))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((0x30ab1aaf) IS TRUE)) AND (((rt0.c0)-(0.2505662803589781))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (((0x30ab1aaf) IS TRUE)) AND (((rt0.c0)-(0.2505662803589781))))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))<((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE BINARY))) ORDER BY TRIM(CASE WHEN NULL THEN v0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY TRIM(CASE WHEN NULL THEN v0.c0 END) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))<((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE BINARY))) ORDER BY TRIM(CASE WHEN NULL THEN v0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY TRIM(CASE WHEN NULL THEN v0.c0 END) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))<((v0.c0)))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (v0.c0 COLLATE BINARY))) ORDER BY TRIM(CASE WHEN NULL THEN v0.c0 END) ASC;
SELECT * FROM v0, rt0 WHERE ((json_remove(rt0.c0, rt0.c1, rt0.c1, '') IN (863688502, (((('-1689058275')OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((json_remove(rt0.c0, rt0.c1, rt0.c1, '') IN (863688502, (((('-1689058275')OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((json_remove(rt0.c0, rt0.c1, rt0.c1, '') IN (863688502, (((('-1689058275')OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((json_remove(rt0.c0, rt0.c1, rt0.c1, '') IN (863688502, (((('-1689058275')OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c0 COLLATE NOCASE)|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN x'' WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)==(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN x'' WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)=(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c0 COLLATE NOCASE)|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN x'' WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)==(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN x'' WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)=(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE (((v0.c0 COLLATE NOCASE)|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN v0.c0 THEN x'' WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS BLOB) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0)==(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (IFNULL(rt0.c2, rt0.c1)))) ORDER BY ((rt0.c1)IS NOT((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- (IFNULL(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)IS NOT((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (IFNULL(rt0.c2, rt0.c1)))) ORDER BY ((rt0.c1)IS NOT((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- (IFNULL(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)IS NOT((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (IFNULL(rt0.c2, rt0.c1)))) ORDER BY ((rt0.c1)IS NOT((rt0.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (v0.c0 IN (v0.c0, v0.c0)) COLLATE RTRIM WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (v0.c0 IN (v0.c0, v0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (v0.c0 IN (v0.c0, v0.c0)) COLLATE RTRIM WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (v0.c0 IN (v0.c0, v0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (v0.c0 IN (v0.c0, v0.c0)) COLLATE RTRIM WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '-924569737' END) BETWEEN (((0xffffffff86e205a4) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN '-924569737' END) BETWEEN (((0xffffffff86e205a4) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '-924569737' END) BETWEEN (((0xffffffff86e205a4) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN '-924569737' END) BETWEEN (((0xffffffff86e205a4) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN '-924569737' END) BETWEEN (((0xffffffff86e205a4) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)|(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY TRIM(rt0.c2, ((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(rt0.c2, ((v0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY TRIM(rt0.c2, ((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY TRIM(rt0.c2, ((v0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) ORDER BY TRIM(rt0.c2, ((v0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(0.9171177054217314)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(0.9171177054217314)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(0.9171177054217314)))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(0.9171177054217314)))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))AND(0.9171177054217314)))OR((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)=(rt0.c2)))=(''))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c2)))==(''))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)=(rt0.c2)))=(''))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c2)))==(''))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)=(rt0.c2)))=(''))) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)OR(rt0.c2))) AND (rt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY v0.c0;
SELECT * FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((rt0.c0)IS(rt0.c0))))) ORDER BY rt0.c2, ((((rt0.c2)OR(CAST(rt0.c1 AS REAL))))OR(0.6249904456399062));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)>>(rt0.c2)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, ((((rt0.c2)OR(CAST(rt0.c1 AS REAL))))OR(0.6249904456399062)));
SELECT * FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((rt0.c0)IS(rt0.c0))))) ORDER BY rt0.c2, ((((rt0.c2)OR(CAST(rt0.c1 AS REAL))))OR(0.6249904456399062));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)>>(rt0.c2)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, ((((rt0.c2)OR(CAST(rt0.c1 AS REAL))))OR(0.6249904456399062)));
SELECT * FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c2)))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(((rt0.c0)IS(rt0.c0))))) ORDER BY rt0.c2, ((((rt0.c2)OR(CAST(rt0.c1 AS REAL))))OR(0.6249904456399062));
SELECT COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (((rt0.c0)==(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((rt0.c0)=(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (((rt0.c0)==(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((rt0.c0)=(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (((rt0.c0)==(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY rt0.c1;
SELECT ALL * FROM rt0, v0 WHERE (MAX(((v0.c0)>>(rt0.c0)), ((NULL) NOT BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((v0.c0)>>(rt0.c0)), ((NULL) NOT BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (MAX(((v0.c0)>>(rt0.c0)), ((NULL) NOT BETWEEN (rt0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((v0.c0)>>(rt0.c0)), ((NULL) NOT BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (MAX(((v0.c0)>>(rt0.c0)), ((NULL) NOT BETWEEN (rt0.c0) AND (v0.c0))));
SELECT ALL * FROM rt0 WHERE (IFNULL(rt0.c1, rt0.c2) COLLATE BINARY) ORDER BY (~ (((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c1, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2) IS FALSE))));
SELECT ALL * FROM rt0 WHERE (IFNULL(rt0.c1, rt0.c2) COLLATE BINARY) ORDER BY (~ (((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt0.c1, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2) IS FALSE))));
SELECT ALL * FROM rt0 WHERE (IFNULL(rt0.c1, rt0.c2) COLLATE BINARY) ORDER BY (~ (((rt0.c2) IS FALSE)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) WHERE (((((rt0.c2)AND(rt0.c1)))IS(((v0.c0)AND(rt0.c2))))) ORDER BY ABS(DISTINCT (NOT (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c1)))IS(((v0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) ORDER BY ABS(DISTINCT (NOT (rt0.c0))) ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) WHERE (((((rt0.c2)AND(rt0.c1)))IS(((v0.c0)AND(rt0.c2))))) ORDER BY ABS(DISTINCT (NOT (rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c1)))IS(((v0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) ORDER BY ABS(DISTINCT (NOT (rt0.c0))) ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON CAST((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS REAL) WHERE (((((rt0.c2)AND(rt0.c1)))IS(((v0.c0)AND(rt0.c2))))) ORDER BY ABS(DISTINCT (NOT (rt0.c0))) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(STRFTIME(rt0.c2, rt0.c0, v0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(rt0.c2, rt0.c0, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(STRFTIME(rt0.c2, rt0.c0, v0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(rt0.c2, rt0.c0, v0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(STRFTIME(rt0.c2, rt0.c0, v0.c0) AS NUMERIC));
SELECT * FROM v0 WHERE (CASE (NULL IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) IS FALSE) END) ORDER BY ((((((v0.c0)GLOB(v0.c0)))OR((~ (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))), (NOT (28301934));
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)GLOB(v0.c0)))OR((~ (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))), (NOT (28301934)));
SELECT * FROM v0 WHERE (CASE (NULL IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) IS FALSE) END) ORDER BY ((((((v0.c0)GLOB(v0.c0)))OR((~ (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))), (NOT (28301934));
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)GLOB(v0.c0)))OR((~ (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))), (NOT (28301934)));
SELECT * FROM v0 WHERE (CASE (NULL IN (v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) IS FALSE) END) ORDER BY ((((((v0.c0)GLOB(v0.c0)))OR((~ (v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))), (NOT (28301934));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))GLOB(CASE WHEN '856920104' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))GLOB(CASE WHEN '856920104' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE NULL END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))GLOB(CASE WHEN '856920104' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))GLOB(CASE WHEN '856920104' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE NULL END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0)))GLOB(CASE WHEN '856920104' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE NULL END)));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM v0, rt0 WHERE (CASE (((v0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0)))  WHEN ((0.6691746460134959)>(rt0.c0)) THEN NULL END) ORDER BY ((((((rt0.c1)==(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c2))>((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0)))  WHEN ((0.6691746460134959)>(rt0.c0)) THEN NULL END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c1)=(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c2))>((rt0.c2))))));
SELECT * FROM v0, rt0 WHERE (CASE (((v0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0)))  WHEN ((0.6691746460134959)>(rt0.c0)) THEN NULL END) ORDER BY ((((((rt0.c1)==(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c2))>((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0)))  WHEN ((0.6691746460134959)>(rt0.c0)) THEN NULL END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c1)=(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c2))>((rt0.c2))))));
SELECT * FROM v0, rt0 WHERE (CASE (((v0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c2, v0.c0)))  WHEN ((0.6691746460134959)>(rt0.c0)) THEN NULL END) ORDER BY ((((((rt0.c1)==(rt0.c2)))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((rt0.c2))>((rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE '1022269133' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE '1022269133' END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE '1022269133' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE '1022269133' END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)<<(v0.c0)) THEN ((v0.c0)IS(v0.c0)) ELSE '1022269133' END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, x'5866', rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS REAL), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS BLOB), UPPER(rt0.c2), ((rt0.c1) ISNULL))))) ORDER BY (~ (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, x'5866', rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS REAL), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS BLOB), UPPER(rt0.c2), ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, x'5866', rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS REAL), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS BLOB), UPPER(rt0.c2), ((rt0.c1) ISNULL))))) ORDER BY (~ (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, x'5866', rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS REAL), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS BLOB), UPPER(rt0.c2), ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, x'5866', rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY, CAST(rt0.c0 AS REAL), (rt0.c1 IN ()))) AND ((CAST(rt0.c0 AS BLOB), UPPER(rt0.c2), ((rt0.c1) ISNULL))))) ORDER BY (~ (rt0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(v0.c0));
SELECT SUM(count) FROM (SELECT ((LIKELY(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(v0.c0));
SELECT SUM(count) FROM (SELECT ((LIKELY(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(v0.c0));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)<>(rt0.c0)) IN ())) ORDER BY x'518b799b'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<>(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY x'518b799b'  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)<>(rt0.c0)) IN ())) ORDER BY x'518b799b'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<>(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY x'518b799b'  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)<>(rt0.c0)) IN ())) ORDER BY x'518b799b'  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c0)));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0))<(((v0.c0 IN ()))))) ORDER BY CAST('1444082585' AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((v0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST('1444082585' AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0))<(((v0.c0 IN ()))))) ORDER BY CAST('1444082585' AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((v0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST('1444082585' AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0))<(((v0.c0 IN ()))))) ORDER BY CAST('1444082585' AS BLOB) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2)&(rt0.c2)) COLLATE BINARY) ORDER BY ((v0.c0) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2)&(rt0.c2)) COLLATE BINARY) ORDER BY ((v0.c0) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c2)&(rt0.c2)) COLLATE BINARY) ORDER BY ((v0.c0) NOT BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS REAL)));
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1))>=((rt0.c2))) AS INTEGER)) ORDER BY TYPEOF(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) DESC, (((((((((((NULL)AND(rt0.c0)))OR('1677954569')))AND(rt0.c2)))OR(rt0.c1))))<((rt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) DESC, (((((((((((NULL)AND(rt0.c0)))OR('1677954569')))AND(rt0.c2)))OR(rt0.c1))))<((rt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1))>=((rt0.c2))) AS INTEGER)) ORDER BY TYPEOF(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) DESC, (((((((((((NULL)AND(rt0.c0)))OR('1677954569')))AND(rt0.c2)))OR(rt0.c1))))<((rt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) DESC, (((((((((((NULL)AND(rt0.c0)))OR('1677954569')))AND(rt0.c2)))OR(rt0.c1))))<((rt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1))>=((rt0.c2))) AS INTEGER)) ORDER BY TYPEOF(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) DESC, (((((((((((NULL)AND(rt0.c0)))OR('1677954569')))AND(rt0.c2)))OR(rt0.c1))))<((rt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE ((rt0.c2)<(rt0.c0)) END) ORDER BY CAST(CAST(NULL AS NUMERIC) AS BLOB), (((((x'', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))<<(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE ((rt0.c2)<(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(NULL AS NUMERIC) AS BLOB), (((((x'', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))<<(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE ((rt0.c2)<(rt0.c0)) END) ORDER BY CAST(CAST(NULL AS NUMERIC) AS BLOB), (((((x'', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))<<(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE ((rt0.c2)<(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(NULL AS NUMERIC) AS BLOB), (((((x'', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))<<(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c1)) THEN (((rt0.c2, rt0.c0, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE ((rt0.c2)<(rt0.c0)) END) ORDER BY CAST(CAST(NULL AS NUMERIC) AS BLOB), (((((x'', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))<<(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) ASC;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (rt0.c1);
SELECT ALL * FROM v0, rt0 WHERE ((('' COLLATE NOCASE)%((+ (v0.c0))))) ORDER BY ((((((v0.c0)AND('rZ')))AND(rt0.c2)))&((((rt0.c1, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((('' COLLATE NOCASE)%((+ (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0)AND('rZ')))AND(rt0.c2)))&((((rt0.c1, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, v0.c0))))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((('' COLLATE NOCASE)%((+ (v0.c0))))) ORDER BY ((((((v0.c0)AND('rZ')))AND(rt0.c2)))&((((rt0.c1, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((('' COLLATE NOCASE)%((+ (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0)AND('rZ')))AND(rt0.c2)))&((((rt0.c1, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, v0.c0))))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((('' COLLATE NOCASE)%((+ (v0.c0))))) ORDER BY ((((((v0.c0)AND('rZ')))AND(rt0.c2)))&((((rt0.c1, rt0.c1, rt0.c2))>((v0.c0, rt0.c2, v0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)-(rt0.c2))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((v0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((((v0.c0)AND(-1.689058275E9)))AND(rt0.c2))))) ORDER BY (((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c0)AND(-1.689058275E9)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((((v0.c0)AND(-1.689058275E9)))AND(rt0.c2))))) ORDER BY (((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c0)AND(-1.689058275E9)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((~ (((((v0.c0)AND(-1.689058275E9)))AND(rt0.c2))))) ORDER BY (((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c2  WHEN (((rt0.c1))<>((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND ('1444082585')) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN (((rt0.c1))<>((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND ('1444082585')) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c2  WHEN (((rt0.c1))<>((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND ('1444082585')) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN (((rt0.c1))<>((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND ('1444082585')) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c2  WHEN (((rt0.c1))<>((rt0.c1))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND ('1444082585')) END);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((CAST(rt0.c0 AS NUMERIC))>=(rt0.c1))) ORDER BY (~ (rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST, x'5f0c';
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))>=(rt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY (~ (rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST, x'5f0c');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((CAST(rt0.c0 AS NUMERIC))>=(rt0.c1))) ORDER BY (~ (rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST, x'5f0c';
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))>=(rt0.c1))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY (~ (rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST, x'5f0c');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((CAST(rt0.c0 AS NUMERIC))>=(rt0.c1))) ORDER BY (~ (rt0.c2 COLLATE NOCASE)) ASC  NULLS LAST, x'5f0c';
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(DISTINCT v0.c0));
SELECT ALL * FROM rt0, v0 WHERE ((~ (v0.c0)) COLLATE NOCASE) ORDER BY CASE CAST(rt0.c1 AS BLOB)  WHEN (((rt0.c0))>=((rt0.c2))) THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE CAST(rt0.c1 AS BLOB)  WHEN (((rt0.c0))>=((rt0.c2))) THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((~ (v0.c0)) COLLATE NOCASE) ORDER BY CASE CAST(rt0.c1 AS BLOB)  WHEN (((rt0.c0))>=((rt0.c2))) THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE CAST(rt0.c1 AS BLOB)  WHEN (((rt0.c0))>=((rt0.c2))) THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((~ (v0.c0)) COLLATE NOCASE) ORDER BY CASE CAST(rt0.c1 AS BLOB)  WHEN (((rt0.c0))>=((rt0.c2))) THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((v0.c0)>('')))))AND(rt0.c0))) ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS NUMERIC))AND(((v0.c0)>('')))))AND(rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((v0.c0)>('')))))AND(rt0.c0))) ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS NUMERIC))AND(((v0.c0)>('')))))AND(rt0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((v0.c0)>('')))))AND(rt0.c0))) ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c2))) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) IS TRUE) ELSE v0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) IS TRUE) ELSE v0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) IS TRUE) ELSE v0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) IS TRUE) ELSE v0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2) IS TRUE) ELSE v0.c0 COLLATE NOCASE END;
SELECT ALL * FROM rt0, v0 WHERE (x'') ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM rt0, v0 WHERE (x'') ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM rt0, v0 WHERE (x'') ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE;
SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0) IS TRUE)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0) IS TRUE)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c1, rt0.c1, rt0.c0))))OR(((rt0.c0) IS TRUE)))) ORDER BY rt0.c2;
SELECT * FROM rt0 CROSS JOIN v0 ON (+ (rt0.c2 COLLATE NOCASE)) WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (((rt0.c0)AND(rt0.c1))))) ORDER BY ((rt0.c2)IS NOT(0.9835979698554651)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ (rt0.c2 COLLATE NOCASE)) ORDER BY ((rt0.c2)IS NOT(0.9835979698554651)) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN v0 ON (+ (rt0.c2 COLLATE NOCASE)) WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (((rt0.c0)AND(rt0.c1))))) ORDER BY ((rt0.c2)IS NOT(0.9835979698554651)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (+ (rt0.c2 COLLATE NOCASE)) ORDER BY ((rt0.c2)IS NOT(0.9835979698554651)) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN v0 ON (+ (rt0.c2 COLLATE NOCASE)) WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (((rt0.c0)AND(rt0.c1))))) ORDER BY ((rt0.c2)IS NOT(0.9835979698554651)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY (- (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON v0.c0 ORDER BY (- (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY (- (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON v0.c0 ORDER BY (- (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON v0.c0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY (- (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2))!=((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2))!=((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2))!=((v0.c0)))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (ABS(rt0.c1), ((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN (ABS(rt0.c1), ((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (ABS(rt0.c1), ((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN (ABS(rt0.c1), ((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (ABS(rt0.c1), ((rt0.c0)%(rt0.c2)))));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c0))<>((x'', rt0.c1, v0.c0, rt0.c2, rt0.c1))))LIKE(((0.5062826963624327)==(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c0))<>((x'', rt0.c1, v0.c0, rt0.c2, rt0.c1))))LIKE(((0.5062826963624327)=(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c0))<>((x'', rt0.c1, v0.c0, rt0.c2, rt0.c1))))LIKE(((0.5062826963624327)==(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c0))<>((x'', rt0.c1, v0.c0, rt0.c2, rt0.c1))))LIKE(((0.5062826963624327)=(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c2, v0.c0, rt0.c0))<>((x'', rt0.c1, v0.c0, rt0.c2, rt0.c1))))LIKE(((0.5062826963624327)==(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB)) ORDER BY ((TYPEOF(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((TYPEOF(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB)) ORDER BY ((TYPEOF(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((TYPEOF(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB)) ORDER BY ((TYPEOF(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c1));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)||(v0.c0))))!=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)||(v0.c0))))!=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)||(v0.c0))))!=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)||(v0.c0))))!=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)||(v0.c0))))!=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (LOWER(((rt0.c0)GLOB('''h)*UO'))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)GLOB('''h)*UO')))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (LOWER(((rt0.c0)GLOB('''h)*UO'))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)GLOB('''h)*UO')))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (LOWER(((rt0.c0)GLOB('''h)*UO'))));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((NULL)))) ORDER BY CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((NULL)))) ORDER BY CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((NULL)))) ORDER BY CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER)) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 END))));
SELECT * FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER)) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 END))));
SELECT * FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS INTEGER)) ORDER BY (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LAST_INSERT_ROWID() THEN CAST(v0.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LAST_INSERT_ROWID() THEN CAST(v0.c0 AS INTEGER) END DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LAST_INSERT_ROWID() THEN CAST(v0.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LAST_INSERT_ROWID() THEN CAST(v0.c0 AS INTEGER) END DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LAST_INSERT_ROWID() THEN CAST(v0.c0 AS INTEGER) END DESC;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((- (((rt0.c0)OR(rt0.c0))))) ORDER BY ((((rt0.c2, NULL, '1111895788'))<>((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST, ((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2, NULL, '1111895788'))!=((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST, ((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE))) DESC);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((- (((rt0.c0)OR(rt0.c0))))) ORDER BY ((((rt0.c2, NULL, '1111895788'))<>((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST, ((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2, NULL, '1111895788'))!=((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST, ((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE))) DESC);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((- (((rt0.c0)OR(rt0.c0))))) ORDER BY ((((rt0.c2, NULL, '1111895788'))<>((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST, ((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c1) IS FALSE))) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(NULL AS REAL))||(((rt0.c1)>=(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS REAL))||(((rt0.c1)>=(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(NULL AS REAL))||(((rt0.c1)>=(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS REAL))||(((rt0.c1)>=(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(NULL AS REAL))||(((rt0.c1)>=(rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c1, rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c1, rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c1))) ISNULL));
SELECT ALL * FROM rt0 WHERE ((NULL IN (((rt0.c1)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((rt0.c1)&(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NULL IN (((rt0.c1)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((rt0.c1)&(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NULL IN (((rt0.c1)&(rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c0)=(rt0.c0))))) WHERE (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LOWER(DISTINCT rt0.c1))))OR((rt0.c1 IN ()))))OR((('564084622') NOT NULL))))OR((rt0.c1 IN (rt0.c0))))) ORDER BY 0.8813926039649306 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LOWER(DISTINCT rt0.c1))))OR((rt0.c1 IN ()))))OR((('564084622') NOT NULL))))OR((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c0)=(rt0.c0))))) ORDER BY 0.8813926039649306 ASC);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c0)=(rt0.c0))))) WHERE (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LOWER(DISTINCT rt0.c1))))OR((rt0.c1 IN ()))))OR((('564084622') NOT NULL))))OR((rt0.c1 IN (rt0.c0))))) ORDER BY 0.8813926039649306 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LOWER(DISTINCT rt0.c1))))OR((rt0.c1 IN ()))))OR((('564084622') NOT NULL))))OR((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c0)=(rt0.c0))))) ORDER BY 0.8813926039649306 ASC);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((rt0.c0)=(rt0.c0))))) WHERE (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LOWER(DISTINCT rt0.c1))))OR((rt0.c1 IN ()))))OR((('564084622') NOT NULL))))OR((rt0.c1 IN (rt0.c0))))) ORDER BY 0.8813926039649306 ASC;
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)/(0.029967000073106265))) ORDER BY '.-<2C'  NULLS FIRST, v0.c0 ASC, ((((v0.c0)LIKE(v0.c0)))IS NOT(((v0.c0)&(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)/(0.029967000073106265))) IS TRUE)  as count FROM v0 ORDER BY '.-<2C'  NULLS FIRST, v0.c0 ASC, ((((v0.c0)LIKE(v0.c0)))IS NOT(((v0.c0)&(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)/(0.029967000073106265))) ORDER BY '.-<2C'  NULLS FIRST, v0.c0 ASC, ((((v0.c0)LIKE(v0.c0)))IS NOT(((v0.c0)&(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)/(0.029967000073106265))) IS TRUE)  as count FROM v0 ORDER BY '.-<2C'  NULLS FIRST, v0.c0 ASC, ((((v0.c0)LIKE(v0.c0)))IS NOT(((v0.c0)&(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)/(0.029967000073106265))) ORDER BY '.-<2C'  NULLS FIRST, v0.c0 ASC, ((((v0.c0)LIKE(v0.c0)))IS NOT(((v0.c0)&(v0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0 IN ()), CAST(rt0.c2 AS REAL), rt0.c0 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN '1730732767' END, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, CASE rt0.c0  WHEN NULL THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) ORDER BY (COALESCE(rt0.c1, rt0.c1) IN ())  NULLS LAST, CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS BLOB) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1881797391' WHEN rt0.c2 THEN rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), CAST(rt0.c2 AS REAL), rt0.c0 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN '1730732767' END, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, CASE rt0.c0  WHEN NULL THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(rt0.c1, rt0.c1) IN ())  NULLS LAST, CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS BLOB) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1881797391' WHEN rt0.c2 THEN rt0.c0 END END DESC);
SELECT * FROM rt0 WHERE (((((rt0.c0 IN ()), CAST(rt0.c2 AS REAL), rt0.c0 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN '1730732767' END, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, CASE rt0.c0  WHEN NULL THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) ORDER BY (COALESCE(rt0.c1, rt0.c1) IN ())  NULLS LAST, CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS BLOB) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1881797391' WHEN rt0.c2 THEN rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), CAST(rt0.c2 AS REAL), rt0.c0 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN '1730732767' END, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, CASE rt0.c0  WHEN NULL THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(rt0.c1, rt0.c1) IN ())  NULLS LAST, CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS BLOB) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1881797391' WHEN rt0.c2 THEN rt0.c0 END END DESC);
SELECT * FROM rt0 WHERE (((((rt0.c0 IN ()), CAST(rt0.c2 AS REAL), rt0.c0 COLLATE NOCASE))<=((CASE WHEN rt0.c1 THEN '1730732767' END, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END, CASE rt0.c0  WHEN NULL THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) ORDER BY (COALESCE(rt0.c1, rt0.c1) IN ())  NULLS LAST, CASE WHEN rt0.c0 THEN CAST(rt0.c2 AS BLOB) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1881797391' WHEN rt0.c2 THEN rt0.c0 END END DESC;
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (UNLIKELY((((v0.c0))==((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((v0.c0))==((v0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM);
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (UNLIKELY((((v0.c0))==((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((v0.c0))==((v0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM);
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (UNLIKELY((((v0.c0))==((v0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((v0.c0)<(v0.c0)) COLLATE NOCASE WHERE (COALESCE(rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((v0.c0)<(v0.c0)) COLLATE NOCASE WHERE (COALESCE(rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0)<(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((v0.c0)<(v0.c0)) COLLATE NOCASE WHERE (COALESCE(rt0.c0 COLLATE RTRIM, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))));
SELECT * FROM v0 WHERE (UNICODE(v0.c0));
SELECT SUM(count) FROM (SELECT ((UNICODE(v0.c0)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNICODE(v0.c0));
SELECT SUM(count) FROM (SELECT ((UNICODE(v0.c0)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (UNICODE(v0.c0));
SELECT * FROM rt0 WHERE (((rt0.c1)IS NOT(rt0.c1)) COLLATE NOCASE) ORDER BY LIKE(((rt0.c0) BETWEEN (0.3271951672400172) AND (rt0.c1)), (~ (rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY LIKE(((rt0.c0) BETWEEN (0.3271951672400172) AND (rt0.c1)), (~ (rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1)IS NOT(rt0.c1)) COLLATE NOCASE) ORDER BY LIKE(((rt0.c0) BETWEEN (0.3271951672400172) AND (rt0.c1)), (~ (rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY LIKE(((rt0.c0) BETWEEN (0.3271951672400172) AND (rt0.c1)), (~ (rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1)IS NOT(rt0.c1)) COLLATE NOCASE) ORDER BY LIKE(((rt0.c0) BETWEEN (0.3271951672400172) AND (rt0.c1)), (~ (rt0.c2)))  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c0)>>(rt0.c1)) AS TEXT)) ORDER BY (((0.770614356446857)) NOT BETWEEN (((- (rt0.c2)))) AND ((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.770614356446857)) NOT BETWEEN (((- (rt0.c2)))) AND ((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c0)>>(rt0.c1)) AS TEXT)) ORDER BY (((0.770614356446857)) NOT BETWEEN (((- (rt0.c2)))) AND ((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)>>(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.770614356446857)) NOT BETWEEN (((- (rt0.c2)))) AND ((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c0)>>(rt0.c1)) AS TEXT)) ORDER BY (((0.770614356446857)) NOT BETWEEN (((- (rt0.c2)))) AND ((CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 END)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0, v0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((- (rt0.c1)) IN ()));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((((((((rt0.c1)>(rt0.c0)))OR('6 ')))AND(((rt0.c2)>>(rt0.c1)))))OR(((rt0.c2)/(rt0.c2)))))OR(rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)>(rt0.c0)))OR('6 ')))AND(((rt0.c2)>>(rt0.c1)))))OR(((rt0.c2)/(rt0.c2)))))OR(rt0.c1)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((((((((rt0.c1)>(rt0.c0)))OR('6 ')))AND(((rt0.c2)>>(rt0.c1)))))OR(((rt0.c2)/(rt0.c2)))))OR(rt0.c1));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)>(rt0.c0)))OR('6 ')))AND(((rt0.c2)>>(rt0.c1)))))OR(((rt0.c2)/(rt0.c2)))))OR(rt0.c1)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((((((((rt0.c1)>(rt0.c0)))OR('6 ')))AND(((rt0.c2)>>(rt0.c1)))))OR(((rt0.c2)/(rt0.c2)))))OR(rt0.c1));
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE RTRIM);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS TEXT)) ORDER BY TRIM(DISTINCT ((v0.c0)|(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT ((v0.c0)|(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS TEXT)) ORDER BY TRIM(DISTINCT ((v0.c0)|(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT ((v0.c0)|(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS TEXT)) ORDER BY TRIM(DISTINCT ((v0.c0)|(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>>(((v0.c0)&(v0.c0))))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)IS(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN json_array(v0.c0, '') WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -1824682508 WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN CAST(v0.c0 AS INTEGER) WHEN CAST(v0.c0 AS REAL) THEN CAST(0.3515599971160681 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>>(((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)IS(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN json_array(v0.c0, '') WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -1824682508 WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN CAST(v0.c0 AS INTEGER) WHEN CAST(v0.c0 AS REAL) THEN CAST(0.3515599971160681 AS NUMERIC) END ASC);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>>(((v0.c0)&(v0.c0))))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)IS(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN json_array(v0.c0, '') WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -1824682508 WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN CAST(v0.c0 AS INTEGER) WHEN CAST(v0.c0 AS REAL) THEN CAST(0.3515599971160681 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)>>(((v0.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)IS(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN json_array(v0.c0, '') WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -1824682508 WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN CAST(v0.c0 AS INTEGER) WHEN CAST(v0.c0 AS REAL) THEN CAST(0.3515599971160681 AS NUMERIC) END ASC);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>>(((v0.c0)&(v0.c0))))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)IS(v0.c0)) WHEN CAST(v0.c0 AS NUMERIC) THEN json_array(v0.c0, '') WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN -1824682508 WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN CAST(v0.c0 AS INTEGER) WHEN CAST(v0.c0 AS REAL) THEN CAST(0.3515599971160681 AS NUMERIC) END ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c2) IS FALSE))));
SELECT ALL * FROM v0, rt0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (+ (((v0.c0)IS NOT(rt0.c2)))), (0.04970810451717378 IN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)), NULL)), ((TRIM(v0.c0, rt0.c0))AND((~ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((v0.c0)IS NOT(rt0.c2)))), (0.04970810451717378 IN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)), NULL)), ((TRIM(v0.c0, rt0.c0))AND((~ (v0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (+ (((v0.c0)IS NOT(rt0.c2)))), (0.04970810451717378 IN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)), NULL)), ((TRIM(v0.c0, rt0.c0))AND((~ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((v0.c0)IS NOT(rt0.c2)))), (0.04970810451717378 IN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)), NULL)), ((TRIM(v0.c0, rt0.c0))AND((~ (v0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY (+ (((v0.c0)IS NOT(rt0.c2)))), (0.04970810451717378 IN (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)), NULL)), ((TRIM(v0.c0, rt0.c0))AND((~ (v0.c0)))) DESC;
SELECT * FROM rt0, v0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END, ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c0, rt0.c0, CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END, ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c0, rt0.c0, CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END, ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c0, rt0.c0, CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END, ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c0, rt0.c0, CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 END, ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((rt0.c0, rt0.c0, CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c0)) COLLATE NOCASE WHERE (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c0)) COLLATE NOCASE ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c0)) COLLATE NOCASE WHERE (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c0)) COLLATE NOCASE ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c0)) COLLATE NOCASE WHERE (((v0.c0)GLOB(v0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((((((((((((NULL)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)==(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND ((((rt0.c1, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c2))))) ASC  NULLS FIRST, ((((0.9981244094297835)>(rt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND ((((rt0.c1, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c2))))) ASC  NULLS FIRST, ((((0.9981244094297835)>(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)==(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND ((((rt0.c1, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c2))))) ASC  NULLS FIRST, ((((0.9981244094297835)>(rt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND ((((rt0.c1, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c2))))) ASC  NULLS FIRST, ((((0.9981244094297835)>(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)==(rt0.c2)) COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND ((((rt0.c1, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c2))))) ASC  NULLS FIRST, ((((0.9981244094297835)>(rt0.c0))) IS FALSE);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(NULL)))OR(rt0.c0)))AND(((rt0.c1)/(rt0.c0)))))AND(((rt0.c1)>=(rt0.c1))))) ORDER BY (((rt0.c0 IN ()))-((+ (rt0.c1)))), ((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2 IN ()))AND(NULL)))OR(rt0.c0)))AND(((rt0.c1)/(rt0.c0)))))AND(((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))-((+ (rt0.c1)))), ((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(NULL)))OR(rt0.c0)))AND(((rt0.c1)/(rt0.c0)))))AND(((rt0.c1)>=(rt0.c1))))) ORDER BY (((rt0.c0 IN ()))-((+ (rt0.c1)))), ((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c2 IN ()))AND(NULL)))OR(rt0.c0)))AND(((rt0.c1)/(rt0.c0)))))AND(((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))-((+ (rt0.c1)))), ((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c2 IN ()))AND(NULL)))OR(rt0.c0)))AND(((rt0.c1)/(rt0.c0)))))AND(((rt0.c1)>=(rt0.c1))))) ORDER BY (((rt0.c0 IN ()))-((+ (rt0.c1)))), ((~ (rt0.c0)) IN (((rt0.c0) IS FALSE), rt0.c2 COLLATE NOCASE));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0, '313881553', v0.c0))))-((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0, '313881553', v0.c0))))-((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0, '313881553', v0.c0))))-((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0, '313881553', v0.c0))))-((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0, '313881553', v0.c0))))-((rt0.c0 IN ()))));
SELECT * FROM rt0, v0 WHERE (CAST(CASE WHEN '-1479065692' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '-1479065692' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(CASE WHEN '-1479065692' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '-1479065692' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(CASE WHEN '-1479065692' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN (((x'') NOTNULL)) AND (((v0.c0)%(rt0.c0)))) WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN (((x'') NOTNULL)) AND (((v0.c0)%(rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN (((x'') NOTNULL)) AND (((v0.c0)%(rt0.c0)))) WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN (((x'') NOTNULL)) AND (((v0.c0)%(rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN (((x'') NOTNULL)) AND (((v0.c0)%(rt0.c0)))) WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))+(((rt0.c2) ISNULL)))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))+(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS TEXT) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))+(((rt0.c2) ISNULL)))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))+(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS TEXT) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))+(((rt0.c2) ISNULL)))) ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS TEXT) DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0))!=((rt0.c1))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((rt0.c1))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0))!=((rt0.c1))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((rt0.c1))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c0))!=((rt0.c1))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(v0.c0))))) ORDER BY ((((((((((rt0.c1)OR(0x17680233)))OR(rt0.c2)))OR(0.7926846199715774)))AND(v0.c0)))*(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((rt0.c1)OR(0x17680233)))OR(rt0.c2)))OR(0.7926846199715774)))AND(v0.c0)))*(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(v0.c0))))) ORDER BY ((((((((((rt0.c1)OR(0x17680233)))OR(rt0.c2)))OR(0.7926846199715774)))AND(v0.c0)))*(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((rt0.c1)OR(0x17680233)))OR(rt0.c2)))OR(0.7926846199715774)))AND(v0.c0)))*(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)/(v0.c0))))) ORDER BY ((((((((((rt0.c1)OR(0x17680233)))OR(rt0.c2)))OR(0.7926846199715774)))AND(v0.c0)))*(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((- (v0.c0))) ORDER BY ((((((v0.c0)LIKE(v0.c0)))OR(((v0.c0)%(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))), ((IFNULL(DISTINCT x'9042', v0.c0)) NOT BETWEEN (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(1527490714)))AND(NULL)))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)LIKE(v0.c0)))OR(((v0.c0)%(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))), ((IFNULL(DISTINCT x'9042', v0.c0)) NOT BETWEEN (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(1527490714)))AND(NULL)))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((- (v0.c0))) ORDER BY ((((((v0.c0)LIKE(v0.c0)))OR(((v0.c0)%(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))), ((IFNULL(DISTINCT x'9042', v0.c0)) NOT BETWEEN (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(1527490714)))AND(NULL)))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)LIKE(v0.c0)))OR(((v0.c0)%(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))), ((IFNULL(DISTINCT x'9042', v0.c0)) NOT BETWEEN (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(1527490714)))AND(NULL)))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE ((- (v0.c0))) ORDER BY ((((((v0.c0)LIKE(v0.c0)))OR(((v0.c0)%(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))), ((IFNULL(DISTINCT x'9042', v0.c0)) NOT BETWEEN (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(1527490714)))AND(NULL)))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (x'', v0.c0)))) AND (((v0.c0 IN ()))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('')))IS NOT(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((v0.c0 IN (x'', v0.c0)))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('')))IS NOT(v0.c0)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (x'', v0.c0)))) AND (((v0.c0 IN ()))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('')))IS NOT(v0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((v0.c0 IN (x'', v0.c0)))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('')))IS NOT(v0.c0)) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN (x'', v0.c0)))) AND (((v0.c0 IN ()))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND ('')))IS NOT(v0.c0)) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ('-2047280410');
SELECT SUM(count) FROM (SELECT (('-2047280410') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('-2047280410');
SELECT SUM(count) FROM (SELECT (('-2047280410') IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ('-2047280410');
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM v0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))>((((rt0.c1) IS TRUE))))) ORDER BY HEX(rt0.c1 COLLATE RTRIM)  NULLS LAST, (~ ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))>((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX(rt0.c1 COLLATE RTRIM)  NULLS LAST, (~ ((rt0.c1 IN ()))));
SELECT * FROM v0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))>((((rt0.c1) IS TRUE))))) ORDER BY HEX(rt0.c1 COLLATE RTRIM)  NULLS LAST, (~ ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))>((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY HEX(rt0.c1 COLLATE RTRIM)  NULLS LAST, (~ ((rt0.c1 IN ()))));
SELECT * FROM v0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))>((((rt0.c1) IS TRUE))))) ORDER BY HEX(rt0.c1 COLLATE RTRIM)  NULLS LAST, (~ ((rt0.c1 IN ())));
SELECT * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (v0.c0);
SELECT ALL * FROM rt0, v0 WHERE (((((LENGTH(v0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((0.7200817953120718)OR(rt0.c0))))) ORDER BY NULL ASC  NULLS LAST, (((NULL)) NOT BETWEEN (((- (rt0.c2)))) AND (((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((LENGTH(v0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((0.7200817953120718)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL ASC  NULLS LAST, (((NULL)) NOT BETWEEN (((- (rt0.c2)))) AND (((NULL IN ())))));
SELECT ALL * FROM rt0, v0 WHERE (((((LENGTH(v0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((0.7200817953120718)OR(rt0.c0))))) ORDER BY NULL ASC  NULLS LAST, (((NULL)) NOT BETWEEN (((- (rt0.c2)))) AND (((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((LENGTH(v0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((0.7200817953120718)OR(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY NULL ASC  NULLS LAST, (((NULL)) NOT BETWEEN (((- (rt0.c2)))) AND (((NULL IN ())))));
SELECT ALL * FROM rt0, v0 WHERE (((((LENGTH(v0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((0.7200817953120718)OR(rt0.c0))))) ORDER BY NULL ASC  NULLS LAST, (((NULL)) NOT BETWEEN (((- (rt0.c2)))) AND (((NULL IN ()))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1) ISNULL))OR(0.2264086725028145)))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))OR(0.2264086725028145)))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1) ISNULL))OR(0.2264086725028145)))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))OR(0.2264086725028145)))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((((rt0.c1) ISNULL))OR(0.2264086725028145)))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM rt0, v0 WHERE ((((NOT (v0.c0)))OR(((((((((((((rt0.c0)OR(rt0.c0)))OR('')))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC, (((((rt0.c2, rt0.c1, rt0.c1))>=((rt0.c2, NULL, rt0.c0)))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))OR(((((((((((((rt0.c0)OR(rt0.c0)))OR('')))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC, (((((rt0.c2, rt0.c1, rt0.c1))>=((rt0.c2, NULL, rt0.c0)))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((NOT (v0.c0)))OR(((((((((((((rt0.c0)OR(rt0.c0)))OR('')))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC, (((((rt0.c2, rt0.c1, rt0.c1))>=((rt0.c2, NULL, rt0.c0)))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))OR(((((((((((((rt0.c0)OR(rt0.c0)))OR('')))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC, (((((rt0.c2, rt0.c1, rt0.c1))>=((rt0.c2, NULL, rt0.c0)))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((NOT (v0.c0)))OR(((((((((((((rt0.c0)OR(rt0.c0)))OR('')))OR(v0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (v0.c0)))>=(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) DESC, (((((rt0.c2, rt0.c1, rt0.c1))>=((rt0.c2, NULL, rt0.c0)))) NOT BETWEEN (((rt0.c0)<=(rt0.c1))) AND (rt0.c2))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c0)) ORDER BY ((('0.0453369137901205', rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), rt0.c0, (- (rt0.c1)))) AND ((((rt0.c2) NOTNULL), ((rt0.c1) ISNULL), CAST(rt0.c2 AS BLOB)))) ASC, CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END THEN ((rt0.c0) IS TRUE) WHEN ((((((((x'')AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c0 IN ()) THEN (- (0Xffffffffd1089c7d)) END DESC, LOWER(((rt0.c1)&(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY ((('0.0453369137901205', rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), rt0.c0, (- (rt0.c1)))) AND ((((rt0.c2) NOTNULL), ((rt0.c1) ISNULL), CAST(rt0.c2 AS BLOB)))) ASC, CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END THEN ((rt0.c0) IS TRUE) WHEN ((((((((x'')AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c0 IN ()) THEN (- (0xffffffffd1089c7d)) END DESC, LOWER(((rt0.c1)&(rt0.c1))) ASC);
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c0)) ORDER BY ((('0.0453369137901205', rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), rt0.c0, (- (rt0.c1)))) AND ((((rt0.c2) NOTNULL), ((rt0.c1) ISNULL), CAST(rt0.c2 AS BLOB)))) ASC, CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END THEN ((rt0.c0) IS TRUE) WHEN ((((((((x'')AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c0 IN ()) THEN (- (0Xffffffffd1089c7d)) END DESC, LOWER(((rt0.c1)&(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY ((('0.0453369137901205', rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), rt0.c0, (- (rt0.c1)))) AND ((((rt0.c2) NOTNULL), ((rt0.c1) ISNULL), CAST(rt0.c2 AS BLOB)))) ASC, CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END THEN ((rt0.c0) IS TRUE) WHEN ((((((((x'')AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c0 IN ()) THEN (- (0xffffffffd1089c7d)) END DESC, LOWER(((rt0.c1)&(rt0.c1))) ASC);
SELECT ALL * FROM rt0 WHERE (HEX(rt0.c0)) ORDER BY ((('0.0453369137901205', rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), rt0.c0, (- (rt0.c1)))) AND ((((rt0.c2) NOTNULL), ((rt0.c1) ISNULL), CAST(rt0.c2 AS BLOB)))) ASC, CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END THEN ((rt0.c0) IS TRUE) WHEN ((((((((x'')AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c0 IN ()) THEN (- (0Xffffffffd1089c7d)) END DESC, LOWER(((rt0.c1)&(rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2)IS(rt0.c0))) AND ((NOT (rt0.c0))))) ORDER BY CAST(NULL COLLATE NOCASE AS REAL) DESC, ((v0.c0) BETWEEN ((NOT (v0.c0))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2)IS(rt0.c0))) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(NULL COLLATE NOCASE AS REAL) DESC, ((v0.c0) BETWEEN ((NOT (v0.c0))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2)IS(rt0.c0))) AND ((NOT (rt0.c0))))) ORDER BY CAST(NULL COLLATE NOCASE AS REAL) DESC, ((v0.c0) BETWEEN ((NOT (v0.c0))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2)IS(rt0.c0))) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(NULL COLLATE NOCASE AS REAL) DESC, ((v0.c0) BETWEEN ((NOT (v0.c0))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c1)) NOT BETWEEN (((rt0.c2)IS(rt0.c0))) AND ((NOT (rt0.c0))))) ORDER BY CAST(NULL COLLATE NOCASE AS REAL) DESC, ((v0.c0) BETWEEN ((NOT (v0.c0))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((((v0.c0)<<(v0.c0))))>((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)<<(v0.c0))))>((v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((((v0.c0)<<(v0.c0))))>((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)<<(v0.c0))))>((v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY (((((v0.c0)<<(v0.c0))))>((v0.c0))) ASC;
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) ORDER BY (~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 END)), (rt0.c1 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 END)), (rt0.c1 COLLATE NOCASE IN ()));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) ORDER BY (~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 END)), (rt0.c1 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 END)), (rt0.c1 COLLATE NOCASE IN ()));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((NULL)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) ORDER BY (~ (CASE rt0.c1  WHEN v0.c0 THEN v0.c0 END)), (rt0.c1 COLLATE NOCASE IN ());
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c1) NOT NULL))AND((((rt0.c1))<>((rt0.c2))))))AND(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR((rt0.c1 IN ()))))OR(((v0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOT NULL))AND((((rt0.c1))<>((rt0.c2))))))AND(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR((rt0.c1 IN ()))))OR(((v0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c1) NOT NULL))AND((((rt0.c1))<>((rt0.c2))))))AND(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR((rt0.c1 IN ()))))OR(((v0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOT NULL))AND((((rt0.c1))<>((rt0.c2))))))AND(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR((rt0.c1 IN ()))))OR(((v0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c1) NOT NULL))AND((((rt0.c1))<>((rt0.c2))))))AND(((((rt0.c1)AND(rt0.c0)))AND(v0.c0)))))OR((rt0.c1 IN ()))))OR(((v0.c0)AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON '1142368123' WHERE (((NOT (rt0.c0)) IN ())) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (CASE WHEN rt0.c2 THEN 0.6115369094932388 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON '1142368123' ORDER BY (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (CASE WHEN rt0.c2 THEN 0.6115369094932388 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON '1142368123' WHERE (((NOT (rt0.c0)) IN ())) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (CASE WHEN rt0.c2 THEN 0.6115369094932388 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON '1142368123' ORDER BY (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (CASE WHEN rt0.c2 THEN 0.6115369094932388 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON '1142368123' WHERE (((NOT (rt0.c0)) IN ())) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (CASE WHEN rt0.c2 THEN 0.6115369094932388 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE) WHERE (rt0.c1);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE BINARY) ORDER BY (((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))+((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))+((NOT (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE BINARY) ORDER BY (((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))+((NOT (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))+((NOT (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT v0.c0) COLLATE BINARY COLLATE BINARY) ORDER BY (((((v0.c0, v0.c0, '')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))+((NOT (v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) ORDER BY CASE 'Ykf8OK'  WHEN CASE WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END THEN COALESCE(DISTINCT rt0.c2, x'') END;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) ORDER BY CASE 'Ykf8OK'  WHEN CASE WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END THEN COALESCE(DISTINCT rt0.c2, x'') END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) ORDER BY CASE 'Ykf8OK'  WHEN CASE WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END THEN COALESCE(DISTINCT rt0.c2, x'') END;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) ORDER BY CASE 'Ykf8OK'  WHEN CASE WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END THEN COALESCE(DISTINCT rt0.c2, x'') END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (- ((rt0.c0 IN ()))) WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) ORDER BY CASE 'Ykf8OK'  WHEN CASE WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END THEN COALESCE(DISTINCT rt0.c2, x'') END;
SELECT * FROM rt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))));
SELECT * FROM rt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))));
SELECT * FROM rt0 INNER JOIN v0 ON (- (((v0.c0) ISNULL))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND(HEX(v0.c0))))OR(533815052)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE BINARY)AND(HEX(v0.c0))))OR(533815052))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND(HEX(v0.c0))))OR(533815052)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE BINARY)AND(HEX(v0.c0))))OR(533815052))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND(HEX(v0.c0))))OR(533815052)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((('')OR(CASE v0.c0  WHEN v0.c0 THEN x'13af00f4' ELSE v0.c0 END)))OR(CHANGES())))OR(x'')))AND(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((('')OR(CASE v0.c0  WHEN v0.c0 THEN x'13af00f4' ELSE v0.c0 END)))OR(CHANGES())))OR(x'')))AND(UPPER(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((('')OR(CASE v0.c0  WHEN v0.c0 THEN x'13af00f4' ELSE v0.c0 END)))OR(CHANGES())))OR(x'')))AND(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((('')OR(CASE v0.c0  WHEN v0.c0 THEN x'13af00f4' ELSE v0.c0 END)))OR(CHANGES())))OR(x'')))AND(UPPER(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((('')OR(CASE v0.c0  WHEN v0.c0 THEN x'13af00f4' ELSE v0.c0 END)))OR(CHANGES())))OR(x'')))AND(UPPER(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN NULL ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE RTRIM THEN NULL ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN NULL ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE RTRIM THEN NULL ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN NULL ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN CAST(v0.c0 AS NUMERIC) THEN (rt0.c0 IN ()) END);
SELECT * FROM rt0 WHERE (x'0bb5') ORDER BY ((((((((rt0.c0)AND((NOT (rt0.c2)))))AND(x'e84f')))OR((~ ('-1858613212')))))AND(((rt0.c2)>=(rt0.c0)))) DESC, (- (((rt0.c0)&(rt0.c2)))) DESC  NULLS FIRST, ((rt0.c2 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'0bb5') IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND((NOT (rt0.c2)))))AND(x'e84f')))OR((~ ('-1858613212')))))AND(((rt0.c2)>=(rt0.c0)))) DESC, (- (((rt0.c0)&(rt0.c2)))) DESC  NULLS FIRST, ((rt0.c2 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'0bb5') ORDER BY ((((((((rt0.c0)AND((NOT (rt0.c2)))))AND(x'e84f')))OR((~ ('-1858613212')))))AND(((rt0.c2)>=(rt0.c0)))) DESC, (- (((rt0.c0)&(rt0.c2)))) DESC  NULLS FIRST, ((rt0.c2 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'0bb5') IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND((NOT (rt0.c2)))))AND(x'e84f')))OR((~ ('-1858613212')))))AND(((rt0.c2)>=(rt0.c0)))) DESC, (- (((rt0.c0)&(rt0.c2)))) DESC  NULLS FIRST, ((rt0.c2 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (x'0bb5') ORDER BY ((((((((rt0.c0)AND((NOT (rt0.c2)))))AND(x'e84f')))OR((~ ('-1858613212')))))AND(((rt0.c2)>=(rt0.c0)))) DESC, (- (((rt0.c0)&(rt0.c2)))) DESC  NULLS FIRST, ((rt0.c2 COLLATE RTRIM) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE -1699834867 END IN ())) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE -1699834867 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE -1699834867 END IN ())) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE -1699834867 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE NULL  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE -1699834867 END IN ())) ORDER BY CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)) AS REAL) ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) NOTNULL)) ORDER BY CASE WHEN QUOTE(v0.c0) THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN QUOTE(v0.c0) THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) NOTNULL)) ORDER BY CASE WHEN QUOTE(v0.c0) THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN QUOTE(v0.c0) THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) NOTNULL)) ORDER BY CASE WHEN QUOTE(v0.c0) THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) END  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN (((rt0.c0))==((rt0.c1))) END) ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN (((rt0.c0))==((rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN (((rt0.c0))==((rt0.c1))) END) ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN (((rt0.c0))==((rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) THEN (((rt0.c0))==((rt0.c1))) END) ORDER BY ((CAST(rt0.c2 AS REAL))<=(((rt0.c2) NOT NULL)));
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT v0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT v0.c0 COLLATE NOCASE));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN 'K6' END))) ORDER BY CAST(((v0.c0) BETWEEN (-1720889595) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, NULL COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE v0.c0  WHEN v0.c0 THEN 'K6' END))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (-1720889595) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, NULL COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN 'K6' END))) ORDER BY CAST(((v0.c0) BETWEEN (-1720889595) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, NULL COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE v0.c0  WHEN v0.c0 THEN 'K6' END))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0) BETWEEN (-1720889595) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, NULL COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN 'K6' END))) ORDER BY CAST(((v0.c0) BETWEEN (-1720889595) AND (v0.c0)) AS TEXT) ASC  NULLS LAST, NULL COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0)<>(0x219f3f8e))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1)) AND (((0.8076637396810711)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(0x219f3f8e))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1)) AND (((0.8076637396810711)<(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0)<>(0x219f3f8e))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1)) AND (((0.8076637396810711)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(0x219f3f8e))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1)) AND (((0.8076637396810711)<(v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((NOT ((rt0.c1 IN ())))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))GLOB(CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))GLOB(CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((NOT ((rt0.c1 IN ())))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))GLOB(CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))GLOB(CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((NOT ((rt0.c1 IN ())))) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))GLOB(CAST(rt0.c0 AS TEXT)));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((- (v0.c0)))) AND (((+ (rt0.c2))))) WHERE (CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((- (v0.c0)))) AND (((+ (rt0.c2))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((- (v0.c0)))) AND (((+ (rt0.c2))))) WHERE (CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((- (v0.c0)))) AND (((+ (rt0.c2))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN (((- (v0.c0)))) AND (((+ (rt0.c2))))) WHERE (CASE WHEN (rt0.c0 IN (rt0.c0)) THEN ((rt0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))IS NOT((((rt0.c2))!=((v0.c0)))))) ORDER BY (NOT (x'' COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))IS NOT((((rt0.c2))!=((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (x'' COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))IS NOT((((rt0.c2))!=((v0.c0)))))) ORDER BY (NOT (x'' COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))IS NOT((((rt0.c2))!=((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (x'' COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))IS NOT((((rt0.c2))!=((v0.c0)))))) ORDER BY (NOT (x'' COLLATE NOCASE))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((NOT (json_array_length(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_array_length(rt0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((NOT (json_array_length(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_array_length(rt0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((NOT (json_array_length(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1) NOT NULL))AND((rt0.c1 IN ()))))AND(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))AND((rt0.c1 IN ()))))AND(NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1) NOT NULL))AND((rt0.c1 IN ()))))AND(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT NULL))AND((rt0.c1 IN ()))))AND(NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c1) NOT NULL))AND((rt0.c1 IN ()))))AND(NULL COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((NOT (rt0.c1)) AS NUMERIC));
SELECT * FROM rt0 WHERE (TYPEOF(CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(CAST(rt0.c2 AS REAL)));
SELECT ALL * FROM v0, rt0 WHERE ((CAST(v0.c0 AS TEXT) IN ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN ((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((CAST(v0.c0 AS TEXT) IN ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN ((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((CAST(v0.c0 AS TEXT) IN ((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM v0, rt0 WHERE (0.2885169453761204);
SELECT SUM(count) FROM (SELECT ALL ((0.2885169453761204) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.2885169453761204);
SELECT SUM(count) FROM (SELECT ALL ((0.2885169453761204) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (0.2885169453761204);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY LIKELY(((((v0.c0)AND(v0.c0)))AND(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(((((v0.c0)AND(v0.c0)))AND(v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY LIKELY(((((v0.c0)AND(v0.c0)))AND(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(((((v0.c0)AND(v0.c0)))AND(v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY LIKELY(((((v0.c0)AND(v0.c0)))AND(v0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((v0.c0) NOT BETWEEN ('Ey\᎜A_~') AND (rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))AND(HEX(DISTINCT '1422021132'))))AND(-1.030782623E9)))OR(((rt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((v0.c0) NOT BETWEEN ('Ey\᎜A_~') AND (rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))AND(HEX(DISTINCT '1422021132'))))AND(-1.030782623E9)))OR(((rt0.c0)>=(rt0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((v0.c0) NOT BETWEEN ('Ey\᎜A_~') AND (rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))AND(HEX(DISTINCT '1422021132'))))AND(-1.030782623E9)))OR(((rt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((((v0.c0) NOT BETWEEN ('Ey\᎜A_~') AND (rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))AND(HEX(DISTINCT '1422021132'))))AND(-1.030782623E9)))OR(((rt0.c0)>=(rt0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((v0.c0) NOT BETWEEN ('Ey\᎜A_~') AND (rt0.c2)))AND(CAST(rt0.c0 AS INTEGER))))AND(HEX(DISTINCT '1422021132'))))AND(-1.030782623E9)))OR(((rt0.c0)>=(rt0.c0))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE '1382230665'  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1382230665'  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE '1382230665'  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1382230665'  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE '1382230665'  WHEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)) WHERE ('-1322023872');
SELECT SUM(count) FROM (SELECT ALL (('-1322023872') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)) WHERE ('-1322023872');
SELECT SUM(count) FROM (SELECT ALL (('-1322023872') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rt0.c2)) WHERE ('-1322023872');
SELECT COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND((rt0.c0 IN (NULL)))))AND(((rt0.c0) ISNULL))))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND((rt0.c0 IN (NULL)))))AND(((rt0.c0) ISNULL))))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND((rt0.c0 IN (NULL)))))AND(((rt0.c0) ISNULL))))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND((rt0.c0 IN (NULL)))))AND(((rt0.c0) ISNULL))))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND((rt0.c0 IN (NULL)))))AND(((rt0.c0) ISNULL))))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))))) ORDER BY rt0.c0;
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)<>(NULL)))AND(((((((((rt0.c2)AND(0.15813146824817248)))AND(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<>(NULL)))AND(((((((((rt0.c2)AND(0.15813146824817248)))AND(rt0.c1)))AND(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)<>(NULL)))AND(((((((((rt0.c2)AND(0.15813146824817248)))AND(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<>(NULL)))AND(((((((((rt0.c2)AND(0.15813146824817248)))AND(rt0.c1)))AND(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)<>(NULL)))AND(((((((((rt0.c2)AND(0.15813146824817248)))AND(rt0.c1)))AND(rt0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)<=(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<=(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)<=(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<=(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)<=(v0.c0)) IN ()));
SELECT * FROM v0, rt0 WHERE ((NOT (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((NOT (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((NOT (((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON NULLIF(JULIANDAY(rt0.c0, rt0.c1, rt0.c0), (+ (rt0.c1))) WHERE ((- (CASE WHEN rt0.c1 THEN '<.Z1' WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c1 THEN '<.Z1' WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON NULLIF(JULIANDAY(rt0.c0, rt0.c1, rt0.c0), (+ (rt0.c1))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON NULLIF(JULIANDAY(rt0.c0, rt0.c1, rt0.c0), (+ (rt0.c1))) WHERE ((- (CASE WHEN rt0.c1 THEN '<.Z1' WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c1 THEN '<.Z1' WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON NULLIF(JULIANDAY(rt0.c0, rt0.c1, rt0.c0), (+ (rt0.c1))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON NULLIF(JULIANDAY(rt0.c0, rt0.c1, rt0.c0), (+ (rt0.c1))) WHERE ((- (CASE WHEN rt0.c1 THEN '<.Z1' WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END)));
SELECT * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE BINARY) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c2))) AND (DATE(rt0.c1, rt0.c2, rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c2))) AND (DATE(rt0.c1, rt0.c2, rt0.c1))));
SELECT * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE BINARY) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c2))) AND (DATE(rt0.c1, rt0.c2, rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c2))) AND (DATE(rt0.c1, rt0.c2, rt0.c1))));
SELECT * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE BINARY) ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c2))) AND (DATE(rt0.c1, rt0.c2, rt0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)|(rt0.c2))) BETWEEN ((('!Mmnbr')&(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c2))) BETWEEN ((('!Mmnbr')&(rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)|(rt0.c2))) BETWEEN ((('!Mmnbr')&(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)|(rt0.c2))) BETWEEN ((('!Mmnbr')&(rt0.c0))) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)|(rt0.c2))) BETWEEN ((('!Mmnbr')&(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0, v0 WHERE ('0.4839194942229087');
SELECT SUM(count) FROM (SELECT (('0.4839194942229087') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('0.4839194942229087');
SELECT SUM(count) FROM (SELECT (('0.4839194942229087') IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ('0.4839194942229087');
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((UNLIKELY(rt0.c0)) BETWEEN (147993406) AND ((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((x'fe76', rt0.c0, rt0.c2)))))  NULLS LAST, ((((NULL)||(rt0.c0))) IS TRUE) DESC  NULLS LAST, (+ (INSTR(NULL, ''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((UNLIKELY(rt0.c0)) BETWEEN (147993406) AND ((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((x'fe76', rt0.c0, rt0.c2)))))  NULLS LAST, ((((NULL)||(rt0.c0))) IS TRUE) DESC  NULLS LAST, (+ (INSTR(NULL, ''))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((UNLIKELY(rt0.c0)) BETWEEN (147993406) AND ((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((x'fe76', rt0.c0, rt0.c2)))))  NULLS LAST, ((((NULL)||(rt0.c0))) IS TRUE) DESC  NULLS LAST, (+ (INSTR(NULL, ''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((UNLIKELY(rt0.c0)) BETWEEN (147993406) AND ((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((x'fe76', rt0.c0, rt0.c2)))))  NULLS LAST, ((((NULL)||(rt0.c0))) IS TRUE) DESC  NULLS LAST, (+ (INSTR(NULL, ''))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((UNLIKELY(rt0.c0)) BETWEEN (147993406) AND ((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((x'fe76', rt0.c0, rt0.c2)))))  NULLS LAST, ((((NULL)||(rt0.c0))) IS TRUE) DESC  NULLS LAST, (+ (INSTR(NULL, ''))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))==((((v0.c0)IS(v0.c0)))))) ORDER BY CAST(((v0.c0)OR(v0.c0)) AS NUMERIC) ASC, (((('-1858613212')AND(v0.c0 COLLATE BINARY)))AND(0.45527504917500483));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))==((((v0.c0)IS(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)OR(v0.c0)) AS NUMERIC) ASC, (((('-1858613212')AND(v0.c0 COLLATE BINARY)))AND(0.45527504917500483)));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))==((((v0.c0)IS(v0.c0)))))) ORDER BY CAST(((v0.c0)OR(v0.c0)) AS NUMERIC) ASC, (((('-1858613212')AND(v0.c0 COLLATE BINARY)))AND(0.45527504917500483));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))==((((v0.c0)IS(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)OR(v0.c0)) AS NUMERIC) ASC, (((('-1858613212')AND(v0.c0 COLLATE BINARY)))AND(0.45527504917500483)));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))==((((v0.c0)IS(v0.c0)))))) ORDER BY CAST(((v0.c0)OR(v0.c0)) AS NUMERIC) ASC, (((('-1858613212')AND(v0.c0 COLLATE BINARY)))AND(0.45527504917500483));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)IS(rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)IS(rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)IS(rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) WHERE (((rt0.c0)*(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) WHERE (((rt0.c0)*(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(CASE rt0.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END)) WHERE (((rt0.c0)*(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((CAST('28301934' AS TEXT)) BETWEEN (v0.c0) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST('28301934' AS TEXT)) BETWEEN (v0.c0) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST('28301934' AS TEXT)) BETWEEN (v0.c0) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST('28301934' AS TEXT)) BETWEEN (v0.c0) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST('28301934' AS TEXT)) BETWEEN (v0.c0) AND (((v0.c0) ISNULL))));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (~ ('-825471164')) WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0)+(v0.c0)) THEN (('') NOT NULL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN (v0.c0 IN ()) ELSE CASE WHEN x'd716' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN '%o747' ELSE v0.c0 END END) ORDER BY ((((((-373014540)OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (~ ('-825471164')) WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0)+(v0.c0)) THEN (('') NOT NULL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN (v0.c0 IN ()) ELSE CASE WHEN x'd716' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN '%o747' ELSE v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY ((((((-373014540)OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (~ ('-825471164')) WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0)+(v0.c0)) THEN (('') NOT NULL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN (v0.c0 IN ()) ELSE CASE WHEN x'd716' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN '%o747' ELSE v0.c0 END END) ORDER BY ((((((-373014540)OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (~ ('-825471164')) WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0)+(v0.c0)) THEN (('') NOT NULL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN ((v0.c0)&(v0.c0)) THEN (v0.c0 IN ()) ELSE CASE WHEN x'd716' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN '%o747' ELSE v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY ((((((-373014540)OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(((rt0.c2)*(rt0.c0)))))AND(((((rt0.c1)OR(NULL)))AND(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2) AND ('Z6' COLLATE RTRIM)), ((rt0.c1)%(COALESCE(DISTINCT rt0.c0, '1645728245')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(((rt0.c2)*(rt0.c0)))))AND(((((rt0.c1)OR(NULL)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2) AND ('Z6' COLLATE RTRIM)), ((rt0.c1)%(COALESCE(DISTINCT rt0.c0, '1645728245'))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(((rt0.c2)*(rt0.c0)))))AND(((((rt0.c1)OR(NULL)))AND(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2) AND ('Z6' COLLATE RTRIM)), ((rt0.c1)%(COALESCE(DISTINCT rt0.c0, '1645728245')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(((rt0.c2)*(rt0.c0)))))AND(((((rt0.c1)OR(NULL)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2) AND ('Z6' COLLATE RTRIM)), ((rt0.c1)%(COALESCE(DISTINCT rt0.c0, '1645728245'))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(((rt0.c2)*(rt0.c0)))))AND(((((rt0.c1)OR(NULL)))AND(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c2) AND ('Z6' COLLATE RTRIM)), ((rt0.c1)%(COALESCE(DISTINCT rt0.c0, '1645728245')));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT)) ORDER BY ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, '-296707337', rt0.c1))))))OR(''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, '-296707337', rt0.c1))))))OR('')));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT)) ORDER BY ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, '-296707337', rt0.c1))))))OR(''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, '-296707337', rt0.c1))))))OR('')));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT)) ORDER BY ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, '-296707337', rt0.c1))))))OR(''));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((((((v0.c0))>((rt0.c0))))AND(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)))OR(json_extract(rt0.c0, rt0.c0))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0))>((rt0.c0))))AND(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)))OR(json_extract(rt0.c0, rt0.c0))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((((((((v0.c0))>((rt0.c0))))AND(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)))OR(json_extract(rt0.c0, rt0.c0))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0))>((rt0.c0))))AND(CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END)))OR(json_extract(rt0.c0, rt0.c0))))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((('147993406')GLOB(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((('147993406')GLOB(rt0.c1))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((('147993406')GLOB(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((('147993406')GLOB(rt0.c1))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((('147993406')GLOB(rt0.c1)));
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 ELSE rt0.c2 END THEN (((rt0.c0))<=(('-1720020159'))) ELSE (~ (rt0.c1)) END) ORDER BY (- (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 ELSE rt0.c2 END THEN (((rt0.c0))<=(('-1720020159'))) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 ELSE rt0.c2 END THEN (((rt0.c0))<=(('-1720020159'))) ELSE (~ (rt0.c1)) END) ORDER BY (- (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 ELSE rt0.c2 END THEN (((rt0.c0))<=(('-1720020159'))) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN '' THEN rt0.c1 ELSE rt0.c2 END THEN (((rt0.c0))<=(('-1720020159'))) ELSE (~ (rt0.c1)) END) ORDER BY (- (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((v0.c0)>((- (rt0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>((- (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) IS TRUE)) ISNULL)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((v0.c0)>((- (rt0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>((- (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2) IS TRUE)) ISNULL)  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((v0.c0)>((- (rt0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (TRIM(DISTINCT v0.c0, NULL)) AND (((((((((0.42842972367323695)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (TRIM(DISTINCT v0.c0, NULL)) AND (((((((((0.42842972367323695)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT * FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (TRIM(DISTINCT v0.c0, NULL)) AND (((((((((0.42842972367323695)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (TRIM(DISTINCT v0.c0, NULL)) AND (((((((((0.42842972367323695)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT * FROM rt0 CROSS JOIN v0 ON ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (TRIM(DISTINCT v0.c0, NULL)) AND (((((((((0.42842972367323695)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))) WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (UPPER(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER(CAST(rt0.c0 AS NUMERIC)));
SELECT * FROM v0 WHERE ((((v0.c0) BETWEEN (x'233e') AND (v0.c0)) IN ())) ORDER BY (((((v0.c0)IS NOT('833152565'))))<((((((-1.858613212E9)AND(v0.c0)))OR(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (x'233e') AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)IS NOT('833152565'))))<((((((-1.858613212E9)AND(v0.c0)))OR(v0.c0))))) ASC);
SELECT * FROM v0 WHERE ((((v0.c0) BETWEEN (x'233e') AND (v0.c0)) IN ())) ORDER BY (((((v0.c0)IS NOT('833152565'))))<((((((-1.858613212E9)AND(v0.c0)))OR(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (x'233e') AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)IS NOT('833152565'))))<((((((-1.858613212E9)AND(v0.c0)))OR(v0.c0))))) ASC);
SELECT * FROM v0 WHERE ((((v0.c0) BETWEEN (x'233e') AND (v0.c0)) IN ())) ORDER BY (((((v0.c0)IS NOT('833152565'))))<((((((-1.858613212E9)AND(v0.c0)))OR(v0.c0))))) ASC;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c2)==(rt0.c2))  WHEN (+ (v0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END WHEN ((v0.c0) IS TRUE) THEN (rt0.c1 IN (v0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c2)) END) ORDER BY TYPEOF(DISTINCT rt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)=(rt0.c2))  WHEN (+ (v0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END WHEN ((v0.c0) IS TRUE) THEN (rt0.c1 IN (v0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(DISTINCT rt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c2)==(rt0.c2))  WHEN (+ (v0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END WHEN ((v0.c0) IS TRUE) THEN (rt0.c1 IN (v0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c2)) END) ORDER BY TYPEOF(DISTINCT rt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)=(rt0.c2))  WHEN (+ (v0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END WHEN ((v0.c0) IS TRUE) THEN (rt0.c1 IN (v0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(DISTINCT rt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CASE ((rt0.c2)==(rt0.c2))  WHEN (+ (v0.c0)) THEN CASE WHEN rt0.c1 THEN v0.c0 END WHEN ((v0.c0) IS TRUE) THEN (rt0.c1 IN (v0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (NOT (rt0.c2)) END) ORDER BY TYPEOF(DISTINCT rt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (json(rt0.c0)) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (json(rt0.c0)) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (json(rt0.c0)) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (json(rt0.c0)) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1)IS NOT(rt0.c2))) NOT BETWEEN (json(rt0.c0)) AND (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY CAST((NOT (rt0.c1)) AS NUMERIC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<(v0.c0))) IS FALSE)) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))))) DESC, SQLITE_COMPILEOPTION_GET(((v0.c0)%(v0.c0))), ((((((((CAST(v0.c0 AS NUMERIC))OR((~ (v0.c0)))))AND((v0.c0 IN ('-1088952274', v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))))) DESC, SQLITE_COMPILEOPTION_GET(((v0.c0)%(v0.c0))), ((((((((CAST(v0.c0 AS NUMERIC))OR((~ (v0.c0)))))AND((v0.c0 IN ('-1088952274', v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<(v0.c0))) IS FALSE)) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))))) DESC, SQLITE_COMPILEOPTION_GET(((v0.c0)%(v0.c0))), ((((((((CAST(v0.c0 AS NUMERIC))OR((~ (v0.c0)))))AND((v0.c0 IN ('-1088952274', v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))))) DESC, SQLITE_COMPILEOPTION_GET(((v0.c0)%(v0.c0))), ((((((((CAST(v0.c0 AS NUMERIC))OR((~ (v0.c0)))))AND((v0.c0 IN ('-1088952274', v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<(v0.c0))) IS FALSE)) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))))) DESC, SQLITE_COMPILEOPTION_GET(((v0.c0)%(v0.c0))), ((((((((CAST(v0.c0 AS NUMERIC))OR((~ (v0.c0)))))AND((v0.c0 IN ('-1088952274', v0.c0)))))AND(((v0.c0)%(v0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (0Xffffffffc10d3dbb) AND (CAST(rt0.c1 AS REAL))) WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (0Xffffffffc10d3dbb) AND (CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (0Xffffffffc10d3dbb) AND (CAST(rt0.c1 AS REAL))) WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (0Xffffffffc10d3dbb) AND (CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c1) IS FALSE)) NOT BETWEEN (0Xffffffffc10d3dbb) AND (CAST(rt0.c1 AS REAL))) WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((~ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<(v0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, v0.c0))))==((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, v0.c0))))==((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, v0.c0))))==((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, v0.c0))))==((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, NULL)) AND ((rt0.c0, rt0.c0, v0.c0))))==((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)IS((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT * FROM rt0, v0 WHERE (((rt0.c1) NOTNULL)) ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))||(rt0.c2 COLLATE BINARY)), 0.8076637396810711  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))||(rt0.c2 COLLATE BINARY)), 0.8076637396810711  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((rt0.c1) NOTNULL)) ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))||(rt0.c2 COLLATE BINARY)), 0.8076637396810711  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))||(rt0.c2 COLLATE BINARY)), 0.8076637396810711  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((rt0.c1) NOTNULL)) ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))||(rt0.c2 COLLATE BINARY)), 0.8076637396810711  NULLS FIRST;
SELECT * FROM v0 WHERE ((~ (((v0.c0) ISNULL)))) ORDER BY TYPEOF(DISTINCT v0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(DISTINCT v0.c0) COLLATE BINARY);
SELECT * FROM v0 WHERE ((~ (((v0.c0) ISNULL)))) ORDER BY TYPEOF(DISTINCT v0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY TYPEOF(DISTINCT v0.c0) COLLATE BINARY);
SELECT * FROM v0 WHERE ((~ (((v0.c0) ISNULL)))) ORDER BY TYPEOF(DISTINCT v0.c0) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY DATETIME(((v0.c0)||(v0.c0)), CAST(v0.c0 AS INTEGER), CASE WHEN v0.c0 THEN 'r5' ELSE v0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 ORDER BY DATETIME(((v0.c0)||(v0.c0)), CAST(v0.c0 AS INTEGER), CASE WHEN v0.c0 THEN 'r5' ELSE v0.c0 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY DATETIME(((v0.c0)||(v0.c0)), CAST(v0.c0 AS INTEGER), CASE WHEN v0.c0 THEN 'r5' ELSE v0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 ORDER BY DATETIME(((v0.c0)||(v0.c0)), CAST(v0.c0 AS INTEGER), CASE WHEN v0.c0 THEN 'r5' ELSE v0.c0 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY DATETIME(((v0.c0)||(v0.c0)), CAST(v0.c0 AS INTEGER), CASE WHEN v0.c0 THEN 'r5' ELSE v0.c0 END) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), x'1200');
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), x'1200'));
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), x'1200');
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), x'1200'));
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY MAX(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), x'1200');
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN (((rt0.c1))>((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND ('	T.*f')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS TEXT)  WHEN (((rt0.c1))>((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND ('	T.*f')) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN (((rt0.c1))>((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND ('	T.*f')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS TEXT)  WHEN (((rt0.c1))>((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND ('	T.*f')) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS TEXT)  WHEN (((rt0.c1))>((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND ('	T.*f')) END);
SELECT * FROM rt0, v0 WHERE (json_valid(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_valid(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c2) NOTNULL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_valid(((rt0.c2) NOTNULL)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS BLOB) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS BLOB) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST((NOT (v0.c0)) AS BLOB) WHERE (rt0.c2);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY TRIM(((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c2)), ((rt0.c2) NOTNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c2)), ((rt0.c2) NOTNULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY TRIM(((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c2)), ((rt0.c2) NOTNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c2)), ((rt0.c2) NOTNULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY TRIM(((((((((rt0.c2)AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(rt0.c2)), ((rt0.c2) NOTNULL)) ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (NULLIF(rt0.c1 COLLATE RTRIM, (- (0xffffffffb787059d))));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c1 COLLATE RTRIM, (- (0xffffffffb787059d)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULLIF(rt0.c1 COLLATE RTRIM, (- (0xffffffffb787059d))));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c1 COLLATE RTRIM, (- (0xffffffffb787059d)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (NULLIF(rt0.c1 COLLATE RTRIM, (- (0xffffffffb787059d))));
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0) BETWEEN (v0.c0) AND (x'')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0) BETWEEN (v0.c0) AND (x'')) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0) BETWEEN (v0.c0) AND (x'')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0) BETWEEN (v0.c0) AND (x'')) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0) BETWEEN (v0.c0) AND (x'')) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c1 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN NULL END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN NULL END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN NULL END);
SELECT ALL * FROM v0, rt0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT ((v0.c0 IN ()))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (((('-508546153')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE (json_type(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE BINARY, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((json_type(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT (((('-508546153')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE BINARY, rt0.c2 ASC);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (((('-508546153')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE (json_type(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE BINARY, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((json_type(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT (((('-508546153')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE BINARY, rt0.c2 ASC);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (((('-508546153')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE (json_type(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c0))) COLLATE BINARY, rt0.c2 ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN ('-107087740') AND (((rt0.c2)=(rt0.c2))))) ORDER BY (rt0.c2 IN ()) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN ('-107087740') AND (((rt0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN ('-107087740') AND (((rt0.c2)=(rt0.c2))))) ORDER BY (rt0.c2 IN ()) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN ('-107087740') AND (((rt0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN ('-107087740') AND (((rt0.c2)=(rt0.c2))))) ORDER BY (rt0.c2 IN ()) ASC  NULLS FIRST, CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c2);
SELECT * FROM rt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 END  WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>=(('')))))) ORDER BY ((HEX(DISTINCT v0.c0))<=((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>=(('')))))) IS TRUE)  as count FROM v0 ORDER BY ((HEX(DISTINCT v0.c0))<=((+ (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>=(('')))))) ORDER BY ((HEX(DISTINCT v0.c0))<=((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>=(('')))))) IS TRUE)  as count FROM v0 ORDER BY ((HEX(DISTINCT v0.c0))<=((+ (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>=(('')))))) ORDER BY ((HEX(DISTINCT v0.c0))<=((+ (v0.c0))))  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((((('-1908182164')OR(rt0.c1)))AND(rt0.c0)))AND((+ (v0.c0)))))AND(((rt0.c2) BETWEEN (v0.c0) AND (x''))))) ORDER BY CASE (((v0.c0))!=((rt0.c0)))  WHEN rt0.c1 THEN '' ELSE ((rt0.c2) NOTNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('-1908182164')OR(rt0.c1)))AND(rt0.c0)))AND((+ (v0.c0)))))AND(((rt0.c2) BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE (((v0.c0))<>((rt0.c0)))  WHEN rt0.c1 THEN '' ELSE ((rt0.c2) NOTNULL) END ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((((('-1908182164')OR(rt0.c1)))AND(rt0.c0)))AND((+ (v0.c0)))))AND(((rt0.c2) BETWEEN (v0.c0) AND (x''))))) ORDER BY CASE (((v0.c0))!=((rt0.c0)))  WHEN rt0.c1 THEN '' ELSE ((rt0.c2) NOTNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('-1908182164')OR(rt0.c1)))AND(rt0.c0)))AND((+ (v0.c0)))))AND(((rt0.c2) BETWEEN (v0.c0) AND (x''))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE (((v0.c0))<>((rt0.c0)))  WHEN rt0.c1 THEN '' ELSE ((rt0.c2) NOTNULL) END ASC  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((((((((('-1908182164')OR(rt0.c1)))AND(rt0.c0)))AND((+ (v0.c0)))))AND(((rt0.c2) BETWEEN (v0.c0) AND (x''))))) ORDER BY CASE (((v0.c0))!=((rt0.c0)))  WHEN rt0.c1 THEN '' ELSE ((rt0.c2) NOTNULL) END ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))  WHEN (- (rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c1)!=(rt0.c1)) WHEN x'' COLLATE NOCASE THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))  WHEN (- (rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c1)<>(rt0.c1)) WHEN x'' COLLATE NOCASE THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))  WHEN (- (rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c1)!=(rt0.c1)) WHEN x'' COLLATE NOCASE THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))  WHEN (- (rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c1)<>(rt0.c1)) WHEN x'' COLLATE NOCASE THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))  WHEN (- (rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c1)!=(rt0.c1)) WHEN x'' COLLATE NOCASE THEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE NOCASE) ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOTNULL)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOTNULL)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOTNULL)) ORDER BY v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY SQLITE_COMPILEOPTION_GET(ABS(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY SQLITE_COMPILEOPTION_GET(ABS(DISTINCT v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY SQLITE_COMPILEOPTION_GET(ABS(DISTINCT v0.c0));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY SQLITE_COMPILEOPTION_GET(ABS(DISTINCT v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY SQLITE_COMPILEOPTION_GET(ABS(DISTINCT v0.c0));
SELECT * FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM v0, rt0 WHERE (((((NULL)<=(rt0.c0)))<=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (~ (((rt0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(rt0.c0)))<=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c1) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((NULL)<=(rt0.c0)))<=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (~ (((rt0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(rt0.c0)))<=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c1) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((NULL)<=(rt0.c0)))<=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (~ (((rt0.c1) IS TRUE))) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1) ORDER BY ((CASE v0.c0  WHEN rt0.c2 THEN '-1720020159' ELSE v0.c0 END)||(NULL));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE v0.c0  WHEN rt0.c2 THEN '-1720020159' ELSE v0.c0 END)||(NULL)));
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1) ORDER BY ((CASE v0.c0  WHEN rt0.c2 THEN '-1720020159' ELSE v0.c0 END)||(NULL));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE v0.c0  WHEN rt0.c2 THEN '-1720020159' ELSE v0.c0 END)||(NULL)));
SELECT ALL * FROM v0, rt0 WHERE (rt0.c1) ORDER BY ((CASE v0.c0  WHEN rt0.c2 THEN '-1720020159' ELSE v0.c0 END)||(NULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (rt0.c1 IN ()) WHERE (rt0.c0) ORDER BY CAST(rt0.c1 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (rt0.c1 IN ()) ORDER BY CAST(rt0.c1 AS TEXT));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (rt0.c1 IN ()) WHERE (rt0.c0) ORDER BY CAST(rt0.c1 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (rt0.c1 IN ()) ORDER BY CAST(rt0.c1 AS TEXT));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (rt0.c1 IN ()) WHERE (rt0.c0) ORDER BY CAST(rt0.c1 AS TEXT);
SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0, rt0 WHERE ((('Sn') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY ((NULL) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('Sn') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY ((NULL) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((('Sn') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY ((NULL) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('Sn') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY ((NULL) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((('Sn') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY ((NULL) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((rt0.c1) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((rt0.c1) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((rt0.c1) IS FALSE) COLLATE NOCASE;
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)<=(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c0)>=(v0.c0))))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c0)>=(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS BLOB));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)<=(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c0)>=(v0.c0))))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c0)>=(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS BLOB));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)<=(rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c0)>=(v0.c0))))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS BLOB);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c1) IS FALSE)))) ORDER BY '1669259712'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY '1669259712'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c1) IS FALSE)))) ORDER BY '1669259712'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY '1669259712'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c1) IS FALSE)))) ORDER BY '1669259712'  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((+ (((((rt0.c2)AND(v0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((+ (((((rt0.c2)AND(v0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)AND(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((+ (((((rt0.c2)AND(v0.c0)))OR(NULL)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))<<(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ('-458737408') ORDER BY TRIM(v0.c0) COLLATE BINARY, ((~ (v0.c0)) IN (v0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (('-458737408') IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY TRIM(v0.c0) COLLATE BINARY, ((~ (v0.c0)) IN (v0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ('-458737408') ORDER BY TRIM(v0.c0) COLLATE BINARY, ((~ (v0.c0)) IN (v0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (('-458737408') IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY TRIM(v0.c0) COLLATE BINARY, ((~ (v0.c0)) IN (v0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ('-458737408') ORDER BY TRIM(v0.c0) COLLATE BINARY, ((~ (v0.c0)) IN (v0.c0 COLLATE BINARY, rt0.c1 COLLATE BINARY)) ASC;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON rt0.c2 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON rt0.c2 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE NOCASE) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY (((((v0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY (((((v0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.47712979191296423) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((0.47712979191296423) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.47712979191296423) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((0.47712979191296423) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((0.47712979191296423) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY v0.c0 DESC;
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((rt0.c2) IS TRUE))) WHERE ((((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c0, v0.c0, rt0.c2)))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (LTRIM(rt0.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c0, v0.c0, rt0.c2)))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (LTRIM(rt0.c1, NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((rt0.c2) IS TRUE))) WHERE ((((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c0, v0.c0, rt0.c2)))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (LTRIM(rt0.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c0, v0.c0, rt0.c2)))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (LTRIM(rt0.c1, NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((rt0.c2) IS TRUE))) WHERE ((((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((v0.c0, v0.c0, rt0.c2)))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND (LTRIM(rt0.c1, NULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.21096885328819204) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((0.21096885328819204) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.21096885328819204) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((0.21096885328819204) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.21096885328819204) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL));
SELECT * FROM rt0 WHERE (INSTR(((0.6319206405685778)&(rt0.c2)), 0.4434672555391326));
SELECT SUM(count) FROM (SELECT ((INSTR(((0.6319206405685778)&(rt0.c2)), 0.4434672555391326)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (INSTR(((0.6319206405685778)&(rt0.c2)), 0.4434672555391326));
SELECT SUM(count) FROM (SELECT ((INSTR(((0.6319206405685778)&(rt0.c2)), 0.4434672555391326)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (INSTR(((0.6319206405685778)&(rt0.c2)), 0.4434672555391326));
SELECT ALL * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN json_array(v0.c0, v0.c0) THEN ((v0.c0)-(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END) ORDER BY (((~ (v0.c0)))||((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN json_array(v0.c0, v0.c0) THEN ((v0.c0)-(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0)))||((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN json_array(v0.c0, v0.c0) THEN ((v0.c0)-(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END) ORDER BY (((~ (v0.c0)))||((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN json_array(v0.c0, v0.c0) THEN ((v0.c0)-(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0)))||((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN json_array(v0.c0, v0.c0) THEN ((v0.c0)-(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END) ORDER BY (((~ (v0.c0)))||((~ (v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (0.9891378420434047);
SELECT SUM(count) FROM (SELECT ALL ((0.9891378420434047) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.9891378420434047);
SELECT SUM(count) FROM (SELECT ALL ((0.9891378420434047) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.9891378420434047);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((((v0.c0 IN ()))OR(rt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM)) WHERE ('ﬠs+|&i&');
SELECT SUM(count) FROM (SELECT ALL (('ﬠs+|&i&') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((v0.c0 IN ()))OR(rt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((((v0.c0 IN ()))OR(rt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM)) WHERE ('ﬠs+|&i&');
SELECT SUM(count) FROM (SELECT ALL (('ﬠs+|&i&') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((v0.c0 IN ()))OR(rt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON (((((v0.c0 IN ()))OR(rt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM)) WHERE ('ﬠs+|&i&');
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY (((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c2)>(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c2)>(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY (((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c2)>(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c2)>(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) AS TEXT)) ORDER BY (((((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((v0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c2)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c2)>(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0))<((v0.c0))) AS NUMERIC)) ORDER BY CAST(v0.c0 COLLATE RTRIM AS REAL) ASC, (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))<((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS REAL) ASC, (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0))<((v0.c0))) AS NUMERIC)) ORDER BY CAST(v0.c0 COLLATE RTRIM AS REAL) ASC, (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))<((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS REAL) ASC, (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0))<((v0.c0))) AS NUMERIC)) ORDER BY CAST(v0.c0 COLLATE RTRIM AS REAL) ASC, (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL))!=((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY ABS(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))), CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN '-283532785' THEN rt0.c2 END, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN ((((rt0.c1))>=((rt0.c1)))) AND (NULLIF(DISTINCT rt0.c2, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL))<>((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ABS(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))), CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN '-283532785' THEN rt0.c2 END, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN ((((rt0.c1))>=((rt0.c1)))) AND (NULLIF(DISTINCT rt0.c2, rt0.c2)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL))!=((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY ABS(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))), CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN '-283532785' THEN rt0.c2 END, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN ((((rt0.c1))>=((rt0.c1)))) AND (NULLIF(DISTINCT rt0.c2, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL))<>((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ABS(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))), CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN '-283532785' THEN rt0.c2 END, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN ((((rt0.c1))>=((rt0.c1)))) AND (NULLIF(DISTINCT rt0.c2, rt0.c2)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOTNULL))!=((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY ABS(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))), CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN '-283532785' THEN rt0.c2 END, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN ((((rt0.c1))>=((rt0.c1)))) AND (NULLIF(DISTINCT rt0.c2, rt0.c2)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((((rt0.c0, rt0.c1, -1993118282))!=((rt0.c1, rt0.c2, rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c1, -1993118282))<>((rt0.c1, rt0.c2, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((((rt0.c0, rt0.c1, -1993118282))!=((rt0.c1, rt0.c2, rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, rt0.c1, -1993118282))<>((rt0.c1, rt0.c2, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST((((rt0.c0, rt0.c1, -1993118282))!=((rt0.c1, rt0.c2, rt0.c2))) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c0))  WHEN v0.c0 THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c0))  WHEN v0.c0 THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c0))  WHEN v0.c0 THEN (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c0))  WHEN v0.c0 THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c0))  WHEN v0.c0 THEN (NOT (v0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('') ORDER BY ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))>=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))>=((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('') ORDER BY ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))>=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))>=((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('') ORDER BY ((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))>=((rt0.c2 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((LOWER(v0.c0)) BETWEEN (((v0.c0)<<(3.6019493E7))) AND ((NOT (x'ac2a')))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(v0.c0)) BETWEEN (((v0.c0)<<(3.6019493E7))) AND ((NOT (x'ac2a'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LOWER(v0.c0)) BETWEEN (((v0.c0)<<(3.6019493E7))) AND ((NOT (x'ac2a')))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(v0.c0)) BETWEEN (((v0.c0)<<(3.6019493E7))) AND ((NOT (x'ac2a'))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LOWER(v0.c0)) BETWEEN (((v0.c0)<<(3.6019493E7))) AND ((NOT (x'ac2a')))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, v0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) IS TRUE) DESC;
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) NOTNULL)) AND (GLOB(0.2676617950358364, v0.c0)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) NOTNULL)) AND (GLOB(0.2676617950358364, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) NOTNULL)) AND (GLOB(0.2676617950358364, v0.c0)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) NOTNULL)) AND (GLOB(0.2676617950358364, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (((CAST(v0.c0 AS REAL)) BETWEEN (((v0.c0) NOTNULL)) AND (GLOB(0.2676617950358364, v0.c0)))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT NULL)))) ORDER BY '-642762450' COLLATE RTRIM, ((CAST(v0.c0 AS INTEGER))<=('2000241104')) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN 0.7604724069950435 ELSE ((rt0.c1) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY '-642762450' COLLATE RTRIM, ((CAST(v0.c0 AS INTEGER))<=('2000241104')) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN 0.7604724069950435 ELSE ((rt0.c1) ISNULL) END  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT NULL)))) ORDER BY '-642762450' COLLATE RTRIM, ((CAST(v0.c0 AS INTEGER))<=('2000241104')) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN 0.7604724069950435 ELSE ((rt0.c1) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY '-642762450' COLLATE RTRIM, ((CAST(v0.c0 AS INTEGER))<=('2000241104')) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN 0.7604724069950435 ELSE ((rt0.c1) ISNULL) END  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT NULL)))) ORDER BY '-642762450' COLLATE RTRIM, ((CAST(v0.c0 AS INTEGER))<=('2000241104')) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c2 AS TEXT) THEN 0.7604724069950435 ELSE ((rt0.c1) ISNULL) END  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0))>=((v0.c0))))IS(QUOTE(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))>=((v0.c0))))IS(QUOTE(v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0))>=((v0.c0))))IS(QUOTE(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))>=((v0.c0))))IS(QUOTE(v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0))>=((v0.c0))))IS(QUOTE(v0.c0))) ASC;
SELECT * FROM v0 WHERE (((((v0.c0)AND((~ (v0.c0)))))OR(NULL))) ORDER BY (+ (((v0.c0)!=(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((~ (v0.c0)))))OR(NULL))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)<>(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)AND((~ (v0.c0)))))OR(NULL))) ORDER BY (+ (((v0.c0)!=(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((~ (v0.c0)))))OR(NULL))) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)<>(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)AND((~ (v0.c0)))))OR(NULL))) ORDER BY (+ (((v0.c0)!=(v0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0, v0 WHERE (('192866182' IN (v0.c0, CASE rt0.c1  WHEN '1787747766' THEN v0.c0 ELSE v0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('192866182' IN (v0.c0, CASE rt0.c1  WHEN '1787747766' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) IS TRUE) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (('192866182' IN (v0.c0, CASE rt0.c1  WHEN '1787747766' THEN v0.c0 ELSE v0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) IS TRUE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('192866182' IN (v0.c0, CASE rt0.c1  WHEN '1787747766' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) IS TRUE) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (('192866182' IN (v0.c0, CASE rt0.c1  WHEN '1787747766' THEN v0.c0 ELSE v0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0) IS TRUE) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.882447701224592)>=(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((0.882447701224592)>=(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.882447701224592)>=(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((0.882447701224592)>=(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.882447701224592)>=(v0.c0))) IS FALSE));
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((((0Xa3eea10))>=((v0.c0)))) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((0Xa3eea10))>=((v0.c0)))) NOT NULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((((0Xa3eea10))>=((v0.c0)))) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((0Xa3eea10))>=((v0.c0)))) NOT NULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((((0Xa3eea10))>=((v0.c0)))) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (0xffffffff89f33142) ORDER BY ((((v0.c0) NOT BETWEEN ('1111895788') AND (v0.c0)))!=(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff89f33142) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN ('1111895788') AND (v0.c0)))!=(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (0xffffffff89f33142) ORDER BY ((((v0.c0) NOT BETWEEN ('1111895788') AND (v0.c0)))!=(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff89f33142) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN ('1111895788') AND (v0.c0)))!=(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (0xffffffff89f33142) ORDER BY ((((v0.c0) NOT BETWEEN ('1111895788') AND (v0.c0)))!=(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB))+(rt0.c0))) ORDER BY 0x6a8eddb6;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))+(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0X6a8eddb6);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB))+(rt0.c0))) ORDER BY 0x6a8eddb6;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))+(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0X6a8eddb6);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL)) ORDER BY (~ (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL)) ORDER BY (~ (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0, v0 WHERE (((((v0.c0) NOT NULL)) ISNULL)) ORDER BY (~ (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)AND(v0.c0)) IN ())) ORDER BY CASE WHEN (v0.c0 IN ()) THEN CAST(3.92692275E8 AS INTEGER) WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((x'', v0.c0, v0.c0, '1565399609', v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)!=(v0.c0)) THEN v0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN CAST(3.92692275E8 AS INTEGER) WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((x'', v0.c0, v0.c0, '1565399609', v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)<>(v0.c0)) THEN v0.c0 COLLATE NOCASE END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)AND(v0.c0)) IN ())) ORDER BY CASE WHEN (v0.c0 IN ()) THEN CAST(3.92692275E8 AS INTEGER) WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((x'', v0.c0, v0.c0, '1565399609', v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)!=(v0.c0)) THEN v0.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN CAST(3.92692275E8 AS INTEGER) WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((x'', v0.c0, v0.c0, '1565399609', v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)<>(v0.c0)) THEN v0.c0 COLLATE NOCASE END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)AND(v0.c0)) IN ())) ORDER BY CASE WHEN (v0.c0 IN ()) THEN CAST(3.92692275E8 AS INTEGER) WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((x'', v0.c0, v0.c0, '1565399609', v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)!=(v0.c0)) THEN v0.c0 COLLATE NOCASE END DESC;
SELECT * FROM rt0, v0 WHERE (((((((((TRIM(DISTINCT rt0.c2, rt0.c1))AND(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(DISTINCT rt0.c2, rt0.c1))AND(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((TRIM(DISTINCT rt0.c2, rt0.c1))AND(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(DISTINCT rt0.c2, rt0.c1))AND(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((TRIM(DISTINCT rt0.c2, rt0.c1))AND(((((((((rt0.c2)OR(v0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(CAST(NULL AS INTEGER))));
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY '');
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY '');
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY '';
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((v0.c0 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0)AND(v0.c0)), ((rt0.c1) BETWEEN ('%o747') AND (rt0.c1)), (v0.c0 IN (rt0.c0)), (NOT (rt0.c0)), ''))<((CASE WHEN '685218002' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), LOWER(rt0.c1), ((rt0.c2)<<(rt0.c2)), ((rt0.c0) ISNULL)))) WHERE (((rt0.c2)/(((rt0.c0)>=(rt0.c2))))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC, (+ (CASE WHEN '0.6376604381475588' THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN 0X213e4811 THEN rt0.c2 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0)AND(v0.c0)), ((rt0.c1) BETWEEN ('%o747') AND (rt0.c1)), (v0.c0 IN (rt0.c0)), (NOT (rt0.c0)), ''))<((CASE WHEN '685218002' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), LOWER(rt0.c1), ((rt0.c2)<<(rt0.c2)), ((rt0.c0) ISNULL)))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC, (+ (CASE WHEN '0.6376604381475588' THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN 0x213e4811 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0)AND(v0.c0)), ((rt0.c1) BETWEEN ('%o747') AND (rt0.c1)), (v0.c0 IN (rt0.c0)), (NOT (rt0.c0)), ''))<((CASE WHEN '685218002' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), LOWER(rt0.c1), ((rt0.c2)<<(rt0.c2)), ((rt0.c0) ISNULL)))) WHERE (((rt0.c2)/(((rt0.c0)>=(rt0.c2))))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC, (+ (CASE WHEN '0.6376604381475588' THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN 0X213e4811 THEN rt0.c2 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0)AND(v0.c0)), ((rt0.c1) BETWEEN ('%o747') AND (rt0.c1)), (v0.c0 IN (rt0.c0)), (NOT (rt0.c0)), ''))<((CASE WHEN '685218002' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), LOWER(rt0.c1), ((rt0.c2)<<(rt0.c2)), ((rt0.c0) ISNULL)))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC, (+ (CASE WHEN '0.6376604381475588' THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN 0x213e4811 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c0)AND(v0.c0)), ((rt0.c1) BETWEEN ('%o747') AND (rt0.c1)), (v0.c0 IN (rt0.c0)), (NOT (rt0.c0)), ''))<((CASE WHEN '685218002' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), LOWER(rt0.c1), ((rt0.c2)<<(rt0.c2)), ((rt0.c0) ISNULL)))) WHERE (((rt0.c2)/(((rt0.c0)>=(rt0.c2))))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM DESC, (+ (CASE WHEN '0.6376604381475588' THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN 0X213e4811 THEN rt0.c2 ELSE rt0.c2 END));
SELECT COUNT(*) FROM rt0 WHERE (0.460238633576208 COLLATE BINARY) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.460238633576208 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (0.460238633576208 COLLATE BINARY) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((0.460238633576208 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (0.460238633576208 COLLATE BINARY) ORDER BY LIKELY(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))IS NOT(TRIM(DISTINCT v0.c0)))) ORDER BY ((((v0.c0)>(v0.c0)))AND(((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))IS NOT(TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))AND(((v0.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))IS NOT(TRIM(DISTINCT v0.c0)))) ORDER BY ((((v0.c0)>(v0.c0)))AND(((v0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))IS NOT(TRIM(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0)))AND(((v0.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))IS NOT(TRIM(DISTINCT v0.c0)))) ORDER BY ((((v0.c0)>(v0.c0)))AND(((v0.c0) IS TRUE))) ASC;
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKE(rt0.c1, rt0.c2, 'T') THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR((((v0.c0))<((rt0.c0))))))AND(((rt0.c1)GLOB(v0.c0)))))OR(((rt0.c1)OR(v0.c0)))))OR(((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))), ((((rt0.c1)%(0.924199699392357))) BETWEEN (((((v0.c0)OR(0x561ea101)))OR(rt0.c0))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(rt0.c1, rt0.c2, 'T') THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR((((v0.c0))<((rt0.c0))))))AND(((rt0.c1)GLOB(v0.c0)))))OR(((rt0.c1)OR(v0.c0)))))OR(((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))), ((((rt0.c1)%(0.924199699392357))) BETWEEN (((((v0.c0)OR(0x561ea101)))OR(rt0.c0))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END)) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKE(rt0.c1, rt0.c2, 'T') THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR((((v0.c0))<((rt0.c0))))))AND(((rt0.c1)GLOB(v0.c0)))))OR(((rt0.c1)OR(v0.c0)))))OR(((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))), ((((rt0.c1)%(0.924199699392357))) BETWEEN (((((v0.c0)OR(0x561ea101)))OR(rt0.c0))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(rt0.c1, rt0.c2, 'T') THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR((((v0.c0))<((rt0.c0))))))AND(((rt0.c1)GLOB(v0.c0)))))OR(((rt0.c1)OR(v0.c0)))))OR(((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))), ((((rt0.c1)%(0.924199699392357))) BETWEEN (((((v0.c0)OR(0x561ea101)))OR(rt0.c0))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END)) ASC);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN LIKE(rt0.c1, rt0.c2, 'T') THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END END) ORDER BY ((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))OR((((v0.c0))<((rt0.c0))))))AND(((rt0.c1)GLOB(v0.c0)))))OR(((rt0.c1)OR(v0.c0)))))OR(((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))), ((((rt0.c1)%(0.924199699392357))) BETWEEN (((((v0.c0)OR(0x561ea101)))OR(rt0.c0))) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END)) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (('-116430656', rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1))))IS((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (('-116430656', rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1))))IS((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (('-116430656', rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1))))IS((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (('-116430656', rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1))))IS((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (('-116430656', rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c1))))IS((rt0.c0 IN (rt0.c1)))));
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY LAST_INSERT_ROWID());
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 ORDER BY LAST_INSERT_ROWID());
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2) ORDER BY LAST_INSERT_ROWID();
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN GLOB(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN GLOB(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN GLOB(v0.c0, v0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN GLOB(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN GLOB(v0.c0, v0.c0) END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<<(rt0.c0)) COLLATE BINARY WHERE (-1.855693798E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.855693798E9) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<<(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<<(rt0.c0)) COLLATE BINARY WHERE (-1.855693798E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.855693798E9) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<<(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<<(rt0.c0)) COLLATE BINARY WHERE (-1.855693798E9);
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1))))))AND(NULL))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((+ (NULL))) AND (CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1))))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((+ (NULL))) AND (CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1))))))AND(NULL))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((+ (NULL))) AND (CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1))))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((+ (NULL))) AND (CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c1))))))AND(NULL))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN ((+ (NULL))) AND (CAST(rt0.c1 AS BLOB)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 COLLATE BINARY)AND(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((v0.c0, 0.28645752705317895, rt0.c2)))))) ORDER BY (((NOT (v0.c0)))IS NOT(((rt0.c2) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)AND(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((v0.c0, 0.28645752705317895, rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (v0.c0)))IS NOT(((rt0.c2) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 COLLATE BINARY)AND(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((v0.c0, 0.28645752705317895, rt0.c2)))))) ORDER BY (((NOT (v0.c0)))IS NOT(((rt0.c2) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE BINARY)AND(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((v0.c0, 0.28645752705317895, rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (v0.c0)))IS NOT(((rt0.c2) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 COLLATE BINARY)AND(CAST(rt0.c2 AS INTEGER))))AND((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((v0.c0, 0.28645752705317895, rt0.c2)))))) ORDER BY (((NOT (v0.c0)))IS NOT(((rt0.c2) IS TRUE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))<>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, NULL, (((((NOT (v0.c0)))OR((v0.c0 IN ()))))OR(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))!=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, NULL, (((((NOT (v0.c0)))OR((v0.c0 IN ()))))OR(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))<>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, NULL, (((((NOT (v0.c0)))OR((v0.c0 IN ()))))OR(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))!=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, NULL, (((((NOT (v0.c0)))OR((v0.c0 IN ()))))OR(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))<>(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) ASC, NULL, (((((NOT (v0.c0)))OR((v0.c0 IN ()))))OR(v0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c0)AND(0.39743467217167705)))AND(rt0.c2)))AND(rt0.c2)))AND(x'9674'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))) AND (ABS(rt0.c2)))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))==((ROUND(rt0.c1, rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(0.39743467217167705)))AND(rt0.c2)))AND(rt0.c2)))AND(x'9674'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))) AND (ABS(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))==((ROUND(rt0.c1, rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c0)AND(0.39743467217167705)))AND(rt0.c2)))AND(rt0.c2)))AND(x'9674'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))) AND (ABS(rt0.c2)))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))==((ROUND(rt0.c1, rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(0.39743467217167705)))AND(rt0.c2)))AND(rt0.c2)))AND(x'9674'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))) AND (ABS(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))==((ROUND(rt0.c1, rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((((v0.c0)AND(0.39743467217167705)))AND(rt0.c2)))AND(rt0.c2)))AND(x'9674'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))) AND (ABS(rt0.c2)))) ORDER BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))==((ROUND(rt0.c1, rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c1)>(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c1)>(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c1)>(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c1)>(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c2)*(rt0.c2)) THEN ((rt0.c1)>(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((JULIANDAY('', v0.c0, v0.c0))>=((v0.c0 IN (v0.c0))))  NULLS FIRST, v0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((JULIANDAY('', v0.c0, v0.c0))>=((v0.c0 IN (v0.c0))))  NULLS FIRST, v0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((JULIANDAY('', v0.c0, v0.c0))>=((v0.c0 IN (v0.c0))))  NULLS FIRST, v0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((JULIANDAY('', v0.c0, v0.c0))>=((v0.c0 IN (v0.c0))))  NULLS FIRST, v0.c0 COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((JULIANDAY('', v0.c0, v0.c0))>=((v0.c0 IN (v0.c0))))  NULLS FIRST, v0.c0 COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)-(CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c2)+(rt0.c0))))), ((((NULL)<<(rt0.c0)))==(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER))|(JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)-(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c2)+(rt0.c0))))), ((((NULL)<<(rt0.c0)))=(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER))|(JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)-(CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c2)+(rt0.c0))))), ((((NULL)<<(rt0.c0)))==(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER))|(JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)-(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c2)+(rt0.c0))))), ((((NULL)<<(rt0.c0)))=(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER))|(JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)-(CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c2)) BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c2)+(rt0.c0))))), ((((NULL)<<(rt0.c0)))==(rt0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER))|(JULIANDAY(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1 COLLATE BINARY)||('932540607')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)||('932540607'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1 COLLATE BINARY)||('932540607')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)||('932540607'))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1 COLLATE BINARY)||('932540607')));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((((((NULL)AND(rt0.c2)))OR(rt0.c1)))<<(x''))) ORDER BY CASE CAST('teeE''P52' AS TEXT)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN LIKELY(DISTINCT rt0.c2) END ASC, ('' IN ()) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt0.c2)))OR(rt0.c1)))<<(x''))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST('teeE''P52' AS TEXT)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN LIKELY(DISTINCT rt0.c2) END ASC, ('' IN ()) ASC, rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((((NULL)AND(rt0.c2)))OR(rt0.c1)))<<(x''))) ORDER BY CASE CAST('teeE''P52' AS TEXT)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN LIKELY(DISTINCT rt0.c2) END ASC, ('' IN ()) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt0.c2)))OR(rt0.c1)))<<(x''))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST('teeE''P52' AS TEXT)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN LIKELY(DISTINCT rt0.c2) END ASC, ('' IN ()) ASC, rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((((NULL)AND(rt0.c2)))OR(rt0.c1)))<<(x''))) ORDER BY CASE CAST('teeE''P52' AS TEXT)  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN LIKELY(DISTINCT rt0.c2) END ASC, ('' IN ()) ASC, rt0.c1;
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((+ (rt0.c0))))) ORDER BY (~ (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((+ (rt0.c0))))) ORDER BY (~ (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((+ (rt0.c0))))) ORDER BY (~ (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON COALESCE(1, CAST(rt0.c1 AS INTEGER)) WHERE (((((((((CAST(rt0.c2 AS BLOB))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c0) NOTNULL))))AND((~ (v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))OR(rt0.c0))))) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c2))))!=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c2 AS BLOB))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c0) NOTNULL))))AND((~ (v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON COALESCE(1, CAST(rt0.c1 AS INTEGER)) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c2))))<>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON COALESCE(1, CAST(rt0.c1 AS INTEGER)) WHERE (((((((((CAST(rt0.c2 AS BLOB))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c0) NOTNULL))))AND((~ (v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))OR(rt0.c0))))) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c2))))!=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c2 AS BLOB))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c0) NOTNULL))))AND((~ (v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON COALESCE(1, CAST(rt0.c1 AS INTEGER)) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c2))))<>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON COALESCE(1, CAST(rt0.c1 AS INTEGER)) WHERE (((((((((CAST(rt0.c2 AS BLOB))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((v0.c0) NOTNULL))))AND((~ (v0.c0)))))AND(((((v0.c0)AND(rt0.c2)))OR(rt0.c0))))) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c2))))!=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)%((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)%((- (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)%((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)%((- (rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN v0.c0 END)%((- (rt0.c2)))));
SELECT * FROM v0 WHERE ((((v0.c0) BETWEEN (0.17342780853699613) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (0.17342780853699613) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) BETWEEN (0.17342780853699613) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (0.17342780853699613) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) BETWEEN (0.17342780853699613) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c1)))OR(v0.c0)) COLLATE BINARY) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c1)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS FALSE));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c1)))OR(v0.c0)) COLLATE BINARY) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c1)))OR(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS FALSE));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c1)))OR(v0.c0)) COLLATE BINARY) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) IS FALSE);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS BLOB), rt0.c1 COLLATE BINARY))==((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS BLOB), rt0.c1 COLLATE BINARY))==((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS BLOB), rt0.c1 COLLATE BINARY))==((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS BLOB), rt0.c1 COLLATE BINARY))==((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM, CAST(rt0.c1 AS BLOB), rt0.c1 COLLATE BINARY))==((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))) ORDER BY v0.c0;
SELECT * FROM rt0 WHERE (highlight(rt0.c1, ((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)>(0.8380907373443586)))) ORDER BY rt0.c0 DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT ((highlight(rt0.c1, ((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)>(0.8380907373443586)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, x'' ASC);
SELECT * FROM rt0 WHERE (highlight(rt0.c1, ((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)>(0.8380907373443586)))) ORDER BY rt0.c0 DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT ((highlight(rt0.c1, ((rt0.c1)<=(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)>(0.8380907373443586)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, x'' ASC);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c1) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c1) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (rt0.c1) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c0)>(x'')) THEN v0.c0 ELSE ((rt0.c2) BETWEEN ('') AND ('')) END) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))/(((v0.c0)OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c0)>(x'')) THEN v0.c0 ELSE ((rt0.c2) BETWEEN ('') AND ('')) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))/(((v0.c0)OR(rt0.c2)))) ASC);
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c0)>(x'')) THEN v0.c0 ELSE ((rt0.c2) BETWEEN ('') AND ('')) END) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))/(((v0.c0)OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c0)>(x'')) THEN v0.c0 ELSE ((rt0.c2) BETWEEN ('') AND ('')) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))/(((v0.c0)OR(rt0.c2)))) ASC);
SELECT * FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c0)>(x'')) THEN v0.c0 ELSE ((rt0.c2) BETWEEN ('') AND ('')) END) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))/(((v0.c0)OR(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE NULLIF(v0.c0, v0.c0)  WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_SOURCE_ID() ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(v0.c0, v0.c0)  WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_SOURCE_ID() ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE NULLIF(v0.c0, v0.c0)  WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_SOURCE_ID() ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(v0.c0, v0.c0)  WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_SOURCE_ID() ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE NULLIF(v0.c0, v0.c0)  WHEN rt0.c2 COLLATE RTRIM THEN SQLITE_SOURCE_ID() ELSE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (x'');
SELECT * FROM rt0, v0 WHERE (0.9984776233124304);
SELECT SUM(count) FROM (SELECT ALL ((0.9984776233124304) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0.9984776233124304);
SELECT SUM(count) FROM (SELECT ALL ((0.9984776233124304) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0.9984776233124304);
SELECT ALL * FROM v0 WHERE ((((((((((('599270166')-(v0.c0)))OR((- (v0.c0)))))AND(((x'')OR(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(('' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((('599270166')-(v0.c0)))OR((- (v0.c0)))))AND(((x'')OR(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(('' IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((('599270166')-(v0.c0)))OR((- (v0.c0)))))AND(((x'')OR(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(('' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((('599270166')-(v0.c0)))OR((- (v0.c0)))))AND(((x'')OR(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(('' IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((('599270166')-(v0.c0)))OR((- (v0.c0)))))AND(((x'')OR(v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(('' IN (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2) NOTNULL))))AND(0.28038398592422187)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2) NOTNULL))))AND(0.28038398592422187))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2) NOTNULL))))AND(0.28038398592422187)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2) NOTNULL))))AND(0.28038398592422187))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c2) NOTNULL))))AND(0.28038398592422187)));
SELECT COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)AND(0Xffffffffebcbf176)))AND(((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))) WHERE ((json_quote(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_quote(v0.c0) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)AND(0Xffffffffebcbf176)))AND(((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)AND(0Xffffffffebcbf176)))AND(((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))) WHERE ((json_quote(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_quote(v0.c0) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)AND(0Xffffffffebcbf176)))AND(((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((rt0.c0)AND(0Xffffffffebcbf176)))AND(((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c1)))) WHERE ((json_quote(v0.c0) IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)<=(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)<=(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)<=(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)<=(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2)<=(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) END);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.2526107069267469)) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c0, 0.2526107069267469)) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.2526107069267469)) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c0, 0.2526107069267469)) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.2526107069267469)) ORDER BY ((NULLIF(DISTINCT rt0.c0, rt0.c1)) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((NULL))<=(((((rt0.c0))!=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=(((((rt0.c0))!=((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL))<=(((((rt0.c0))!=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=(((((rt0.c0))!=((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL))<=(((((rt0.c0))!=((rt0.c2)))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(UNLIKELY(DISTINCT v0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(DISTINCT v0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(UNLIKELY(DISTINCT v0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(DISTINCT v0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(UNLIKELY(DISTINCT v0.c0) AS BLOB));
SELECT ALL * FROM v0 WHERE (((TIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))LIKE(LIKELIHOOD(v0.c0, 0.8276288150211877)))) ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN ()))))AND((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))LIKE(LIKELIHOOD(v0.c0, 0.8276288150211877)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN ()))))AND((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((TIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))LIKE(LIKELIHOOD(v0.c0, 0.8276288150211877)))) ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN ()))))AND((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TIME(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))LIKE(LIKELIHOOD(v0.c0, 0.8276288150211877)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND((v0.c0 IN ()))))AND((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))AND(LIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))AND(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))AND(LIKELY(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))AND(LIKELY(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)))AND(LIKELY(rt0.c0))));
SELECT * FROM v0 WHERE ((((IFNULL(DISTINCT v0.c0, v0.c0)))>=((((0.5609008466114812)OR(x''))))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT v0.c0, v0.c0)))>=((((0.5609008466114812)OR(x'')))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((IFNULL(DISTINCT v0.c0, v0.c0)))>=((((0.5609008466114812)OR(x''))))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT v0.c0, v0.c0)))>=((((0.5609008466114812)OR(x'')))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((IFNULL(DISTINCT v0.c0, v0.c0)))>=((((0.5609008466114812)OR(x''))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (('h>dv' IN ())) ORDER BY (~ ((NULL IN ()))), ((v0.c0)<=(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((('h>dv' IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ ((NULL IN ()))), ((v0.c0)<=(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (('h>dv' IN ())) ORDER BY (~ ((NULL IN ()))), ((v0.c0)<=(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((('h>dv' IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (~ ((NULL IN ()))), ((v0.c0)<=(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (('h>dv' IN ())) ORDER BY (~ ((NULL IN ()))), ((v0.c0)<=(rt0.c2)) COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE ((((((x'ce1f')OR(0X7c2dc1f)))OR(rt0.c2)) IN ())) ORDER BY ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((x'ce1f')OR(0x7c2dc1f)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE ((((((x'ce1f')OR(0X7c2dc1f)))OR(rt0.c2)) IN ())) ORDER BY ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((x'ce1f')OR(0x7c2dc1f)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0 WHERE ((((((x'ce1f')OR(0X7c2dc1f)))OR(rt0.c2)) IN ())) ORDER BY ((rt0.c1) NOT BETWEEN ('') AND (rt0.c1)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0, rt0.c1, rt0.c1))>((rt0.c0, v0.c0, rt0.c2))))) WHERE (((((rt0.c2)>=(rt0.c2)))=(((((rt0.c2)AND(rt0.c1)))OR(v0.c0))))) ORDER BY (- (0xffffffffb787059d))  NULLS LAST, ((('0.13347446731529544' IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c2)))==(((((rt0.c2)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0, rt0.c1, rt0.c1))>((rt0.c0, v0.c0, rt0.c2))))) ORDER BY (- (0xffffffffb787059d))  NULLS LAST, ((('0.13347446731529544' IN ())) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0, rt0.c1, rt0.c1))>((rt0.c0, v0.c0, rt0.c2))))) WHERE (((((rt0.c2)>=(rt0.c2)))=(((((rt0.c2)AND(rt0.c1)))OR(v0.c0))))) ORDER BY (- (0xffffffffb787059d))  NULLS LAST, ((('0.13347446731529544' IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c2)))==(((((rt0.c2)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0, rt0.c1, rt0.c1))>((rt0.c0, v0.c0, rt0.c2))))) ORDER BY (- (0xffffffffb787059d))  NULLS LAST, ((('0.13347446731529544' IN ())) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (NOT ((((rt0.c0, rt0.c1, rt0.c1))>((rt0.c0, v0.c0, rt0.c2))))) WHERE (((((rt0.c2)>=(rt0.c2)))=(((((rt0.c2)AND(rt0.c1)))OR(v0.c0))))) ORDER BY (- (0xffffffffb787059d))  NULLS LAST, ((('0.13347446731529544' IN ())) ISNULL)  NULLS FIRST;
SELECT * FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((+ ((v0.c0 IN ())))) ORDER BY (- (CAST(v0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN rt0.c0 THEN rt0.c2 WHEN ((rt0.c0)<=(rt0.c0)) THEN x'e721' COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN rt0.c0 THEN rt0.c2 WHEN ((rt0.c0)<=(rt0.c0)) THEN x'e721' COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN rt0.c0 THEN rt0.c2 WHEN ((rt0.c0)<=(rt0.c0)) THEN x'e721' COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN rt0.c0 THEN rt0.c2 WHEN ((rt0.c0)<=(rt0.c0)) THEN x'e721' COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN rt0.c0 THEN rt0.c2 WHEN ((rt0.c0)<=(rt0.c0)) THEN x'e721' COLLATE BINARY ELSE ((rt0.c0) NOTNULL) END);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CASE rt0.c0  WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((HEX(DISTINCT rt0.c2))AND(((rt0.c0) ISNULL))))OR(((rt0.c2)AND(rt0.c1))))) ORDER BY NULL ASC  NULLS FIRST, IFNULL(rt0.c2, rt0.c0) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT rt0.c2))AND(((rt0.c0) ISNULL))))OR(((rt0.c2)AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST, IFNULL(rt0.c2, rt0.c0) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((HEX(DISTINCT rt0.c2))AND(((rt0.c0) ISNULL))))OR(((rt0.c2)AND(rt0.c1))))) ORDER BY NULL ASC  NULLS FIRST, IFNULL(rt0.c2, rt0.c0) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT rt0.c2))AND(((rt0.c0) ISNULL))))OR(((rt0.c2)AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC  NULLS FIRST, IFNULL(rt0.c2, rt0.c0) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((HEX(DISTINCT rt0.c2))AND(((rt0.c0) ISNULL))))OR(((rt0.c2)AND(rt0.c1))))) ORDER BY NULL ASC  NULLS FIRST, IFNULL(rt0.c2, rt0.c0) COLLATE BINARY ASC;
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (rt0.c0 COLLATE NOCASE IN (((((((((rt0.c2)OR(rt0.c2)))OR(7.54610996E8)))AND(rt0.c2)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN (((((((((rt0.c2)OR(rt0.c2)))OR(7.54610996E8)))AND(rt0.c2)))OR(rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (rt0.c0 COLLATE NOCASE IN (((((((((rt0.c2)OR(rt0.c2)))OR(7.54610996E8)))AND(rt0.c2)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE NOCASE IN (((((((((rt0.c2)OR(rt0.c2)))OR(7.54610996E8)))AND(rt0.c2)))OR(rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY (rt0.c0 COLLATE NOCASE IN (((((((((rt0.c2)OR(rt0.c2)))OR(7.54610996E8)))AND(rt0.c2)))OR(rt0.c2)))) DESC;
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(DISTINCT JULIANDAY(rt0.c2, rt0.c0, v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT JULIANDAY(rt0.c2, rt0.c0, v0.c0, v0.c0, v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(DISTINCT JULIANDAY(rt0.c2, rt0.c0, v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT JULIANDAY(rt0.c2, rt0.c0, v0.c0, v0.c0, v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(DISTINCT JULIANDAY(rt0.c2, rt0.c0, v0.c0, v0.c0, v0.c0)));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0)>=(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0)>=(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0)>=(v0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, rt0 WHERE (((UPPER('{LZ?''g'))%(((((0.495334693243349)OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER('{LZ?''g'))%(((((0.495334693243349)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((UPPER('{LZ?''g'))%(((((0.495334693243349)OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER('{LZ?''g'))%(((((0.495334693243349)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((UPPER('{LZ?''g'))%(((((0.495334693243349)OR(rt0.c0)))OR(rt0.c2)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (- (((((rt0.c0)OR(0.09329485143211202)))OR(v0.c0)))) WHERE ((((((((rt0.c2)AND(rt0.c0)))OR(v0.c0)), (((rt0.c2, '', 0.020767625095758913))>((rt0.c2, rt0.c1, rt0.c0))), (('K6')LIKE(rt0.c1))))<=((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), UPPER(DISTINCT v0.c0))))) ORDER BY LOWER(v0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)AND(rt0.c0)))OR(v0.c0)), (((rt0.c2, '', 0.020767625095758913))>((rt0.c2, rt0.c1, rt0.c0))), (('K6')LIKE(rt0.c1))))<=((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), UPPER(DISTINCT v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (- (((((rt0.c0)OR(0.09329485143211202)))OR(v0.c0)))) ORDER BY LOWER(v0.c0)  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (- (((((rt0.c0)OR(0.09329485143211202)))OR(v0.c0)))) WHERE ((((((((rt0.c2)AND(rt0.c0)))OR(v0.c0)), (((rt0.c2, '', 0.020767625095758913))>((rt0.c2, rt0.c1, rt0.c0))), (('K6')LIKE(rt0.c1))))<=((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), UPPER(DISTINCT v0.c0))))) ORDER BY LOWER(v0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)AND(rt0.c0)))OR(v0.c0)), (((rt0.c2, '', 0.020767625095758913))>((rt0.c2, rt0.c1, rt0.c0))), (('K6')LIKE(rt0.c1))))<=((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), UPPER(DISTINCT v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (- (((((rt0.c0)OR(0.09329485143211202)))OR(v0.c0)))) ORDER BY LOWER(v0.c0)  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (- (((((rt0.c0)OR(0.09329485143211202)))OR(v0.c0)))) WHERE ((((((((rt0.c2)AND(rt0.c0)))OR(v0.c0)), (((rt0.c2, '', 0.020767625095758913))>((rt0.c2, rt0.c1, rt0.c0))), (('K6')LIKE(rt0.c1))))<=((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), UPPER(DISTINCT v0.c0))))) ORDER BY LOWER(v0.c0)  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), (v0.c0 IN (v0.c0)), ((((v0.c0)AND(0.06454375876275753)))OR(v0.c0)), (v0.c0 IN ())))<(('C웳', (NOT (v0.c0)), LOWER(DISTINCT v0.c0), ((v0.c0)>(v0.c0)), ((v0.c0)IS(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), (v0.c0 IN (v0.c0)), ((((v0.c0)AND(0.06454375876275753)))OR(v0.c0)), (v0.c0 IN ())))<(('C웳', (NOT (v0.c0)), LOWER(DISTINCT v0.c0), ((v0.c0)>(v0.c0)), ((v0.c0)IS(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), (v0.c0 IN (v0.c0)), ((((v0.c0)AND(0.06454375876275753)))OR(v0.c0)), (v0.c0 IN ())))<(('C웳', (NOT (v0.c0)), LOWER(DISTINCT v0.c0), ((v0.c0)>(v0.c0)), ((v0.c0)IS(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), (v0.c0 IN (v0.c0)), ((((v0.c0)AND(0.06454375876275753)))OR(v0.c0)), (v0.c0 IN ())))<(('C웳', (NOT (v0.c0)), LOWER(DISTINCT v0.c0), ((v0.c0)>(v0.c0)), ((v0.c0)IS(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)), (v0.c0 IN (v0.c0)), ((((v0.c0)AND(0.06454375876275753)))OR(v0.c0)), (v0.c0 IN ())))<(('C웳', (NOT (v0.c0)), LOWER(DISTINCT v0.c0), ((v0.c0)>(v0.c0)), ((v0.c0)IS(v0.c0))))));
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY LOWER(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY LOWER(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY LOWER(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0 ORDER BY LOWER(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2) ORDER BY LOWER(DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((json_extract(v0.c0, v0.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(v0.c0 AS BLOB)))) ORDER BY '-325790883'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, v0.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY '-325790883'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((json_extract(v0.c0, v0.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(v0.c0 AS BLOB)))) ORDER BY '-325790883'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, v0.c0)) BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY '-325790883'  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN ((+ (NULL))) AND ((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) BETWEEN ((+ (NULL))) AND ((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN ((+ (NULL))) AND ((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) BETWEEN ((+ (NULL))) AND ((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN ((+ (NULL))) AND ((((rt0.c2))<=((rt0.c1))))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (- (((v0.c0)||(v0.c0)))), ((((TIME(v0.c0, v0.c0, v0.c0))OR((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)||(v0.c0)))), ((((TIME(v0.c0, v0.c0, v0.c0))OR((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (- (((v0.c0)||(v0.c0)))), ((((TIME(v0.c0, v0.c0, v0.c0))OR((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)||(v0.c0)))), ((((TIME(v0.c0, v0.c0, v0.c0))OR((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))&(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (- (((v0.c0)||(v0.c0)))), ((((TIME(v0.c0, v0.c0, v0.c0))OR((- (v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))));
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT * FROM v0 WHERE (((((v0.c0)|(NULL)))OR((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(NULL)))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)|(NULL)))OR((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(NULL)))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)|(NULL)))OR((NOT (v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((((v0.c0)OR(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN 3.6019493E7 THEN rt0.c2 WHEN v0.c0 THEN 0.6505691744436185 COLLATE NOCASE END) ORDER BY (((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN 3.6019493E7 THEN rt0.c2 WHEN v0.c0 THEN 0.6505691744436185 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((((v0.c0)OR(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN 3.6019493E7 THEN rt0.c2 WHEN v0.c0 THEN 0.6505691744436185 COLLATE NOCASE END) ORDER BY (((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN 3.6019493E7 THEN rt0.c2 WHEN v0.c0 THEN 0.6505691744436185 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((((v0.c0)OR(v0.c0)))AND(rt0.c1))  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN NULL WHEN 3.6019493E7 THEN rt0.c2 WHEN v0.c0 THEN 0.6505691744436185 COLLATE NOCASE END) ORDER BY (((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOT NULL)))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.5697148617661154  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.5697148617661154  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOT NULL)))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.5697148617661154  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.5697148617661154  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) NOT NULL)))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST, 0.5697148617661154  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2) IS FALSE), ((rt0.c0)*(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c2, 0x6a8eddb6, rt0.c2, NULL))), (- ('-1814524922')), ((rt0.c1) NOT NULL)))<>((('3??㺻I>' IN ()), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.643780716019881, 0X3be0eea5, '1730732767')) AND ((rt0.c0, rt0.c2, 0.09924208190711192))), ((rt0.c1)|(rt0.c2)), (NOT (rt0.c2)), ((rt0.c2)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE), ((rt0.c0)*(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c2, 0x6a8eddb6, rt0.c2, NULL))), (- ('-1814524922')), ((rt0.c1) NOT NULL)))<>((('3??㺻I>' IN ()), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.643780716019881, 0x3be0eea5, '1730732767')) AND ((rt0.c0, rt0.c2, 0.09924208190711192))), ((rt0.c1)|(rt0.c2)), (NOT (rt0.c2)), ((rt0.c2)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2) IS FALSE), ((rt0.c0)*(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c2, 0x6a8eddb6, rt0.c2, NULL))), (- ('-1814524922')), ((rt0.c1) NOT NULL)))<>((('3??㺻I>' IN ()), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.643780716019881, 0X3be0eea5, '1730732767')) AND ((rt0.c0, rt0.c2, 0.09924208190711192))), ((rt0.c1)|(rt0.c2)), (NOT (rt0.c2)), ((rt0.c2)>=(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE), ((rt0.c0)*(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c2, 0x6a8eddb6, rt0.c2, NULL))), (- ('-1814524922')), ((rt0.c1) NOT NULL)))<>((('3??㺻I>' IN ()), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.643780716019881, 0x3be0eea5, '1730732767')) AND ((rt0.c0, rt0.c2, 0.09924208190711192))), ((rt0.c1)|(rt0.c2)), (NOT (rt0.c2)), ((rt0.c2)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2) IS FALSE), ((rt0.c0)*(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c2, 0x6a8eddb6, rt0.c2, NULL))), (- ('-1814524922')), ((rt0.c1) NOT NULL)))<>((('3??㺻I>' IN ()), (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((0.643780716019881, 0X3be0eea5, '1730732767')) AND ((rt0.c0, rt0.c2, 0.09924208190711192))), ((rt0.c1)|(rt0.c2)), (NOT (rt0.c2)), ((rt0.c2)>=(rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c1)<=(rt0.c1))) BETWEEN ((NULL IN ())) AND ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c1))) BETWEEN ((NULL IN ())) AND ((~ (rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c1)<=(rt0.c1))) BETWEEN ((NULL IN ())) AND ((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c1))) BETWEEN ((NULL IN ())) AND ((~ (rt0.c2)))) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c1)<=(rt0.c1))) BETWEEN ((NULL IN ())) AND ((~ (rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ((~ (rt0.c2)))));
SELECT ALL * FROM v0, rt0 WHERE (1.004596901E9) ORDER BY 'RQ2]㝿c' ASC;
SELECT SUM(count) FROM (SELECT ((1.004596901E9) IS TRUE)  as count FROM v0, rt0 ORDER BY 'RQ2]㝿c' ASC);
SELECT ALL * FROM v0, rt0 WHERE (1.004596901E9) ORDER BY 'RQ2]㝿c' ASC;
SELECT SUM(count) FROM (SELECT ((1.004596901E9) IS TRUE)  as count FROM v0, rt0 ORDER BY 'RQ2]㝿c' ASC);
SELECT ALL * FROM v0, rt0 WHERE (1.004596901E9) ORDER BY 'RQ2]㝿c' ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((((v0.c0)&(v0.c0)))-(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)&(v0.c0)))-(rt0.c2)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((((v0.c0)&(v0.c0)))-(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)&(v0.c0)))-(rt0.c2)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((((v0.c0)&(v0.c0)))-(rt0.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((('-1563384792'))=((rt0.c2))) COLLATE NOCASE) ORDER BY (- (json_insert(rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-1563384792'))=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (- (json_insert(rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('-1563384792'))=((rt0.c2))) COLLATE NOCASE) ORDER BY (- (json_insert(rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('-1563384792'))=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (- (json_insert(rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c0))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((- (rt0.c2))) BETWEEN (((rt0.c2)!=(''))) AND (((rt0.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN (((rt0.c2)<>(''))) AND (((rt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((- (rt0.c2))) BETWEEN (((rt0.c2)!=(''))) AND (((rt0.c0)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) BETWEEN (((rt0.c2)<>(''))) AND (((rt0.c0)>(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((- (rt0.c2))) BETWEEN (((rt0.c2)!=(''))) AND (((rt0.c0)>(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c1)==(rt0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((rt0.c1)=(rt0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c1)==(rt0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((rt0.c1)=(rt0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c1)==(rt0.c0))) AND (v0.c0)));
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL)))<=(((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOTNULL)))<=(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL)))<=(((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOTNULL)))<=(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL)))<=(((+ (rt0.c0))))));
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND((rt0.c2 IN ()))))AND(((rt0.c1)<<(v0.c0)))))AND(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)>>(rt0.c1))))) ORDER BY -642762450 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND((rt0.c2 IN ()))))AND(((rt0.c1)<<(v0.c0)))))AND(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY -642762450 DESC);
SELECT * FROM rt0, v0 WHERE (((((((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND((rt0.c2 IN ()))))AND(((rt0.c1)<<(v0.c0)))))AND(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)>>(rt0.c1))))) ORDER BY -642762450 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND((rt0.c2 IN ()))))AND(((rt0.c1)<<(v0.c0)))))AND(((rt0.c1)IS(rt0.c0)))))OR(((rt0.c2)>>(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY -642762450 DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('') IS FALSE))>=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((('') IS FALSE))>=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('') IS FALSE))>=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((('') IS FALSE))>=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('') IS FALSE))>=(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (IFNULL(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (IFNULL(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (IFNULL(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (IFNULL(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN ((((rt0.c2))<>((rt0.c0)))) AND (IFNULL(rt0.c2, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (CASE NULL  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE NULL  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (CASE NULL  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE NULL  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (CASE NULL  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2))<=((rt0.c0))), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('1205560068')), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))>=((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)), DATE(v0.c0, rt0.c0, rt0.c0), (((rt0.c0))<=((x'f59d')))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2))<=((rt0.c0))), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('1205560068')), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))>=((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)), DATE(v0.c0, rt0.c0, rt0.c0), (((rt0.c0))<=((x'f59d'))))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2))<=((rt0.c0))), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('1205560068')), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))>=((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)), DATE(v0.c0, rt0.c0, rt0.c0), (((rt0.c0))<=((x'f59d')))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2))<=((rt0.c0))), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('1205560068')), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))>=((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)), DATE(v0.c0, rt0.c0, rt0.c0), (((rt0.c0))<=((x'f59d'))))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c2))<=((rt0.c0))), ((((((((rt0.c2)OR(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND('1205560068')), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))))>=((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)), DATE(v0.c0, rt0.c0, rt0.c0), (((rt0.c0))<=((x'f59d')))))));
SELECT COUNT(*) FROM v0 WHERE (((x'') NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<((v0.c0)))))) ORDER BY ((CAST(0.6091975005642895 AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (x'4a8d')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(0.6091975005642895 AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (x'4a8d')) DESC);
SELECT COUNT(*) FROM v0 WHERE (((x'') NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<((v0.c0)))))) ORDER BY ((CAST(0.6091975005642895 AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (x'4a8d')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(0.6091975005642895 AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (x'4a8d')) DESC);
SELECT COUNT(*) FROM v0 WHERE (((x'') NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c0))<((v0.c0)))))) ORDER BY ((CAST(0.6091975005642895 AS TEXT)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (x'4a8d')) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS TEXT)) ORDER BY ((v0.c0)||(COALESCE(DISTINCT v0.c0, '1669259712'))), ((((v0.c0)<<(v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)||(COALESCE(DISTINCT v0.c0, '1669259712'))), ((((v0.c0)<<(v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS TEXT)) ORDER BY ((v0.c0)||(COALESCE(DISTINCT v0.c0, '1669259712'))), ((((v0.c0)<<(v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)||(COALESCE(DISTINCT v0.c0, '1669259712'))), ((((v0.c0)<<(v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS TEXT)) ORDER BY ((v0.c0)||(COALESCE(DISTINCT v0.c0, '1669259712'))), ((((v0.c0)<<(v0.c0)))IS(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON CAST(x'' AS INTEGER) WHERE (((((v0.c0) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(x'' AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON CAST(x'' AS INTEGER) WHERE (((((v0.c0) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(x'' AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON CAST(x'' AS INTEGER) WHERE (((((v0.c0) IS FALSE)) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))||(((v0.c0)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))||(((v0.c0)LIKE(x''))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))||(((v0.c0)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))||(((v0.c0)LIKE(x''))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))||(((v0.c0)LIKE(x'')))));
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (NULL);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS TEXT)) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0)>>(v0.c0)))))OR(((v0.c0)+(v0.c0)))))OR(v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))) ASC, (- (((v0.c0) IS TRUE))), ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0)>>(v0.c0)))))OR(((v0.c0)+(v0.c0)))))OR(v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))) ASC, (- (((v0.c0) IS TRUE))), ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS TEXT)) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0)>>(v0.c0)))))OR(((v0.c0)+(v0.c0)))))OR(v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))) ASC, (- (((v0.c0) IS TRUE))), ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0)>>(v0.c0)))))OR(((v0.c0)+(v0.c0)))))OR(v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))) ASC, (- (((v0.c0) IS TRUE))), ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS TEXT)) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0)>>(v0.c0)))))OR(((v0.c0)+(v0.c0)))))OR(v0.c0)))AND((v0.c0 IN (v0.c0, v0.c0)))) ASC, (- (((v0.c0) IS TRUE))), ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)LIKE(rt0.c1)) AS NUMERIC) WHERE ((((((((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))OR(((0.36466961208197335) ISNULL))))OR(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))OR(((0.36466961208197335) ISNULL))))OR(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)LIKE(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)LIKE(rt0.c1)) AS NUMERIC) WHERE ((((((((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))OR(((0.36466961208197335) ISNULL))))OR(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))OR(((0.36466961208197335) ISNULL))))OR(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)LIKE(rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0)LIKE(rt0.c1)) AS NUMERIC) WHERE ((((((((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))))AND(rt0.c0 COLLATE BINARY)))OR(((0.36466961208197335) ISNULL))))OR(((v0.c0)GLOB(v0.c0)))));
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0) AND (((((v0.c0)OR(0Xffffffffe6937cad)))OR(v0.c0))))) ORDER BY (((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 0.33197200393175974)))))<=(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0xa3eea10 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0) AND (((((v0.c0)OR(0Xffffffffe6937cad)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 0.33197200393175974)))))<=(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0xa3eea10 END)))  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0) AND (((((v0.c0)OR(0Xffffffffe6937cad)))OR(v0.c0))))) ORDER BY (((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 0.33197200393175974)))))<=(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0xa3eea10 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0) AND (((((v0.c0)OR(0Xffffffffe6937cad)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 0.33197200393175974)))))<=(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0xa3eea10 END)))  NULLS LAST);
SELECT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c0) AND (((((v0.c0)OR(0Xffffffffe6937cad)))OR(v0.c0))))) ORDER BY (((((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, 0.33197200393175974)))))<=(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN 0xa3eea10 END)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c0)));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((rt0.c1)OR(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)OR(v0.c0)))))AND(((rt0.c0)>>(v0.c0)))))AND((+ (0.22370036854499986)))) WHERE (((((json_patch(rt0.c1, rt0.c1))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((((((((rt0.c0)AND(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_patch(rt0.c1, rt0.c1))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((((((((rt0.c0)AND(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((rt0.c1)OR(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)OR(v0.c0)))))AND(((rt0.c0)>>(v0.c0)))))AND((+ (0.22370036854499986)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((rt0.c1)OR(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)OR(v0.c0)))))AND(((rt0.c0)>>(v0.c0)))))AND((+ (0.22370036854499986)))) WHERE (((((json_patch(rt0.c1, rt0.c1))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((((((((rt0.c0)AND(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_patch(rt0.c1, rt0.c1))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((((((((rt0.c0)AND(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((rt0.c1)OR(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)OR(v0.c0)))))AND(((rt0.c0)>>(v0.c0)))))AND((+ (0.22370036854499986)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((rt0.c1)OR(((v0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2)OR(v0.c0)))))AND(((rt0.c0)>>(v0.c0)))))AND((+ (0.22370036854499986)))) WHERE (((((json_patch(rt0.c1, rt0.c1))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((((((((rt0.c0)AND(v0.c0)))AND(x'')))OR(rt0.c0)))OR(rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)!=(v0.c0)))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c0)AND(rt0.c0))))) ORDER BY ((((rt0.c0)+(v0.c0)))-(((rt0.c0)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<>(v0.c0)))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)+(v0.c0)))-(((rt0.c0)<(rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)!=(v0.c0)))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c0)AND(rt0.c0))))) ORDER BY ((((rt0.c0)+(v0.c0)))-(((rt0.c0)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<>(v0.c0)))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)+(v0.c0)))-(((rt0.c0)<(rt0.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)!=(v0.c0)))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))AND(((rt0.c0)AND(rt0.c0))))) ORDER BY ((((rt0.c0)+(v0.c0)))-(((rt0.c0)<(rt0.c1))));
SELECT * FROM rt0 CROSS JOIN v0 ON (((- (rt0.c0)))>((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((- (rt0.c0)))>((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT * FROM rt0 CROSS JOIN v0 ON (((- (rt0.c0)))>((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((- (rt0.c0)))>((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT * FROM rt0 CROSS JOIN v0 ON (((- (rt0.c0)))>((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2)IS NOT(rt0.c0))))) ORDER BY (((rt0.c2 IN ()))<((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))<((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2)IS NOT(rt0.c0))))) ORDER BY (((rt0.c2 IN ()))<((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))<((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c2)IS NOT(rt0.c0))))) ORDER BY (((rt0.c2 IN ()))<((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-1374197684') ORDER BY (NOT (v0.c0 COLLATE RTRIM)) DESC, CAST((((rt0.c0))<((rt0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT (('-1374197684') IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (v0.c0 COLLATE RTRIM)) DESC, CAST((((rt0.c0))<((rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-1374197684') ORDER BY (NOT (v0.c0 COLLATE RTRIM)) DESC, CAST((((rt0.c0))<((rt0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT (('-1374197684') IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (v0.c0 COLLATE RTRIM)) DESC, CAST((((rt0.c0))<((rt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-1374197684') ORDER BY (NOT (v0.c0 COLLATE RTRIM)) DESC, CAST((((rt0.c0))<((rt0.c0))) AS TEXT);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1) ORDER BY (NOT (CAST('' AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (CAST('' AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1) ORDER BY (NOT (CAST('' AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (CAST('' AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1) ORDER BY (NOT (CAST('' AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (((((x'6783')AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((x'6783')AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (((((x'6783')AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((x'6783')AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (((((x'6783')AND(rt0.c0)))OR(v0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch(CAST(v0.c0 AS INTEGER), ((v0.c0)-(v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(v0.c0 AS INTEGER), ((v0.c0)-(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch(CAST(v0.c0 AS INTEGER), ((v0.c0)-(v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(v0.c0 AS INTEGER), ((v0.c0)-(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_patch(CAST(v0.c0 AS INTEGER), ((v0.c0)-(v0.c0))));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND((+ (rt0.c2)))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND((+ (rt0.c2)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND((+ (rt0.c2)))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND((+ (rt0.c2)))))AND(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND((+ (rt0.c2)))))AND(rt0.c2)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2)))||(' 2X/SS')) WHERE (((CASE WHEN '-1462274212' THEN rt0.c2 END)IS NOT(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-1462274212' THEN rt0.c2 END)IS NOT(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2)))||(' 2X/SS')));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2)))||(' 2X/SS')) WHERE (((CASE WHEN '-1462274212' THEN rt0.c2 END)IS NOT(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-1462274212' THEN rt0.c2 END)IS NOT(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2)))||(' 2X/SS')));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((~ (rt0.c2)))||(' 2X/SS')) WHERE (((CASE WHEN '-1462274212' THEN rt0.c2 END)IS NOT(((rt0.c1) ISNULL))));
SELECT * FROM rt0 WHERE (CHANGES()) ORDER BY HEX((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY HEX((NOT (rt0.c0))));
SELECT * FROM rt0 WHERE (CHANGES()) ORDER BY HEX((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY HEX((NOT (rt0.c0))));
SELECT * FROM rt0 WHERE (CHANGES()) ORDER BY HEX((NOT (rt0.c0)));
SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CASE (+ (v0.c0))  WHEN ((rt0.c0)OR(rt0.c2)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (+ (v0.c0))  WHEN ((rt0.c0)OR(rt0.c2)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CASE (+ (v0.c0))  WHEN ((rt0.c0)OR(rt0.c2)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE (+ (v0.c0))  WHEN ((rt0.c0)OR(rt0.c2)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CASE (+ (v0.c0))  WHEN ((rt0.c0)OR(rt0.c2)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END;
SELECT * FROM v0, rt0 WHERE (((+ (rt0.c1)) IN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((+ (rt0.c1)) IN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((+ (rt0.c1)) IN ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND (('', rt0.c0, rt0.c1))))));
SELECT * FROM rt0, v0 WHERE (LTRIM(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (LTRIM(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c1)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (LTRIM(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), rt0.c1));
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)GLOB(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST, CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)GLOB(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST, CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, v0.c0);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)GLOB(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST, CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)GLOB(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST, CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, v0.c0);
SELECT * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) ORDER BY CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)GLOB(v0.c0)) THEN (v0.c0 IN ()) END  NULLS LAST, CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)  NULLS LAST, v0.c0;
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0)))<(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)||(v0.c0)))<(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0)))<(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)||(v0.c0)))<(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0)))<(CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))||((NOT (304656092))))) ORDER BY (((((rt0.c0)AND(rt0.c0)))AND(x'')) IN ()) DESC  NULLS LAST, ((((rt0.c0 COLLATE NOCASE)AND((~ (rt0.c1)))))OR((- (rt0.c1))))  NULLS LAST, CASE (((rt0.c0))<=((v0.c0)))  WHEN rt0.c0 THEN (((rt0.c0, 0.27437553533199666, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE (rt0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))||((NOT (304656092))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c0)AND(rt0.c0)))AND(x'')) IN ()) DESC  NULLS LAST, ((((rt0.c0 COLLATE NOCASE)AND((~ (rt0.c1)))))OR((- (rt0.c1))))  NULLS LAST, CASE (((rt0.c0))<=((v0.c0)))  WHEN rt0.c0 THEN (((rt0.c0, 0.27437553533199666, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE (rt0.c2 IN ()) END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))||((NOT (304656092))))) ORDER BY (((((rt0.c0)AND(rt0.c0)))AND(x'')) IN ()) DESC  NULLS LAST, ((((rt0.c0 COLLATE NOCASE)AND((~ (rt0.c1)))))OR((- (rt0.c1))))  NULLS LAST, CASE (((rt0.c0))<=((v0.c0)))  WHEN rt0.c0 THEN (((rt0.c0, 0.27437553533199666, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE (rt0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))||((NOT (304656092))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c0)AND(rt0.c0)))AND(x'')) IN ()) DESC  NULLS LAST, ((((rt0.c0 COLLATE NOCASE)AND((~ (rt0.c1)))))OR((- (rt0.c1))))  NULLS LAST, CASE (((rt0.c0))<=((v0.c0)))  WHEN rt0.c0 THEN (((rt0.c0, 0.27437553533199666, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE (rt0.c2 IN ()) END);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c0 IN ()))||((NOT (304656092))))) ORDER BY (((((rt0.c0)AND(rt0.c0)))AND(x'')) IN ()) DESC  NULLS LAST, ((((rt0.c0 COLLATE NOCASE)AND((~ (rt0.c1)))))OR((- (rt0.c1))))  NULLS LAST, CASE (((rt0.c0))<=((v0.c0)))  WHEN rt0.c0 THEN (((rt0.c0, 0.27437553533199666, rt0.c2)) BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c2))) ELSE (rt0.c2 IN ()) END;
SELECT * FROM rt0 WHERE (((((((((NULL)AND(TRIM(x''))))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(rt0.c0)))))AND(((rt0.c0)>=(x'ceb4'))))) ORDER BY ((((0x1228aedc)OR(rt0.c2 COLLATE BINARY)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(TRIM(x''))))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(rt0.c0)))))AND(((rt0.c0)>=(x'ceb4'))))) IS TRUE)  as count FROM rt0 ORDER BY ((((0X1228aedc)OR(rt0.c2 COLLATE BINARY)))OR(NULL)) DESC);
SELECT * FROM rt0 WHERE (((((((((NULL)AND(TRIM(x''))))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(rt0.c0)))))AND(((rt0.c0)>=(x'ceb4'))))) ORDER BY ((((0x1228aedc)OR(rt0.c2 COLLATE BINARY)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(TRIM(x''))))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(rt0.c0)))))AND(((rt0.c0)>=(x'ceb4'))))) IS TRUE)  as count FROM rt0 ORDER BY ((((0X1228aedc)OR(rt0.c2 COLLATE BINARY)))OR(NULL)) DESC);
SELECT * FROM rt0 WHERE (((((((((NULL)AND(TRIM(x''))))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(rt0.c0)))))AND(((rt0.c0)>=(x'ceb4'))))) ORDER BY ((((0x1228aedc)OR(rt0.c2 COLLATE BINARY)))OR(NULL)) DESC;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON v0.c0 WHERE (NULL) ORDER BY 0.42695024322361474  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON v0.c0 ORDER BY 0.42695024322361474  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON v0.c0 WHERE (NULL) ORDER BY 0.42695024322361474  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON v0.c0 ORDER BY 0.42695024322361474  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON v0.c0 WHERE (NULL) ORDER BY 0.42695024322361474  NULLS FIRST;
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND('1730732767')))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND('1730732767')))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND('1730732767')))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND('1730732767')))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (((((((((v0.c0)AND(v0.c0)))AND('1730732767')))OR(v0.c0)))AND(v0.c0))) AND (((v0.c0)IS(v0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(-1322023872)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(-1322023872)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(-1322023872)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(-1322023872)))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(-1322023872)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (((((rt0.c0)+(rt0.c0))))>((MAX(rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c0)+(rt0.c0))))>((MAX(rt0.c1, rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (((((rt0.c0)+(rt0.c0))))>((MAX(rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c0)+(rt0.c0))))>((MAX(rt0.c1, rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (((((rt0.c0)+(rt0.c0))))>((MAX(rt0.c1, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c2 COLLATE RTRIM)) WHERE (((CAST(v0.c0 AS TEXT))|(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))|(x''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c2 COLLATE RTRIM)) WHERE (((CAST(v0.c0 AS TEXT))|(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))|(x''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (+ (rt0.c2 COLLATE RTRIM)) WHERE (((CAST(v0.c0 AS TEXT))|(x'')));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ()) WHERE (rt0.c2) ORDER BY ((rt0.c2)=(((v0.c0) IS TRUE))) ASC  NULLS LAST, ((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END)OR((- (rt0.c1)))))AND(((rt0.c1)%(v0.c0)))) ASC, (NULLIF(rt0.c2, '-1270054442') IN (((rt0.c2) NOTNULL), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE -642762450 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ()) ORDER BY ((rt0.c2)=(((v0.c0) IS TRUE))) ASC  NULLS LAST, ((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END)OR((- (rt0.c1)))))AND(((rt0.c1)%(v0.c0)))) ASC, (NULLIF(rt0.c2, '-1270054442') IN (((rt0.c2) NOTNULL), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE -642762450 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ()) WHERE (rt0.c2) ORDER BY ((rt0.c2)=(((v0.c0) IS TRUE))) ASC  NULLS LAST, ((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END)OR((- (rt0.c1)))))AND(((rt0.c1)%(v0.c0)))) ASC, (NULLIF(rt0.c2, '-1270054442') IN (((rt0.c2) NOTNULL), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE -642762450 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ()) ORDER BY ((rt0.c2)=(((v0.c0) IS TRUE))) ASC  NULLS LAST, ((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END)OR((- (rt0.c1)))))AND(((rt0.c1)%(v0.c0)))) ASC, (NULLIF(rt0.c2, '-1270054442') IN (((rt0.c2) NOTNULL), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE -642762450 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ()) WHERE (rt0.c2) ORDER BY ((rt0.c2)=(((v0.c0) IS TRUE))) ASC  NULLS LAST, ((((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END)OR((- (rt0.c1)))))AND(((rt0.c1)%(v0.c0)))) ASC, (NULLIF(rt0.c2, '-1270054442') IN (((rt0.c2) NOTNULL), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE -642762450 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY NULL DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(0.3890896623043887 COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c0)LIKE(0.9271830906753339))) NOTNULL) ASC  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.3890896623043887 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)LIKE(0.9271830906753339))) NOTNULL) ASC  NULLS FIRST, v0.c0 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(0.3890896623043887 COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c0)LIKE(0.9271830906753339))) NOTNULL) ASC  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.3890896623043887 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)LIKE(0.9271830906753339))) NOTNULL) ASC  NULLS FIRST, v0.c0 ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(0.3890896623043887 COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c0)LIKE(0.9271830906753339))) NOTNULL) ASC  NULLS FIRST, v0.c0 ASC;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c2)>=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1)))) AND (0.3984806643898312))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1)))) AND (0.3984806643898312))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c2)>=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1)))) AND (0.3984806643898312))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1)))) AND (0.3984806643898312))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c2)>=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1)))) AND (0.3984806643898312))  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE ((((((((rt0.c0))!=((rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<>((rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((((rt0.c0))!=((rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))<>((rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((((rt0.c0))!=((rt0.c2))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c0 END)));
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))GLOB(((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1, '1278661429', rt0.c0)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((('77682417'))=((rt0.c0))), CAST(rt0.c1 AS REAL), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, NULL))), (((rt0.c0, rt0.c1, rt0.c1))<((rt0.c1, rt0.c1, NULL))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ()), (rt0.c0 IN ()), rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))GLOB(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1, '1278661429', rt0.c0)) NOT BETWEEN ((((rt0.c1)<>(rt0.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((('77682417'))=((rt0.c0))), CAST(rt0.c1 AS REAL), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, NULL))), (((rt0.c0, rt0.c1, rt0.c1))<((rt0.c1, rt0.c1, NULL))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ()), (rt0.c0 IN ()), rt0.c2))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))GLOB(((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1, '1278661429', rt0.c0)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((('77682417'))=((rt0.c0))), CAST(rt0.c1 AS REAL), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, NULL))), (((rt0.c0, rt0.c1, rt0.c1))<((rt0.c1, rt0.c1, NULL))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ()), (rt0.c0 IN ()), rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))GLOB(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1, '1278661429', rt0.c0)) NOT BETWEEN ((((rt0.c1)<>(rt0.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((('77682417'))=((rt0.c0))), CAST(rt0.c1 AS REAL), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, NULL))), (((rt0.c0, rt0.c1, rt0.c1))<((rt0.c1, rt0.c1, NULL))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ()), (rt0.c0 IN ()), rt0.c2))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))GLOB(((rt0.c2) IS TRUE)))) ORDER BY (((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c1, '1278661429', rt0.c0)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((('77682417'))=((rt0.c0))), CAST(rt0.c1 AS REAL), ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, NULL))), (((rt0.c0, rt0.c1, rt0.c1))<((rt0.c1, rt0.c1, NULL))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ()), (rt0.c0 IN ()), rt0.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0)))<(CAST(v0.c0 AS NUMERIC)))) ORDER BY (((((v0.c0)>=(v0.c0))))<=((((v0.c0)||(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0)))<(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>=(v0.c0))))<=((((v0.c0)||(v0.c0))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0)))<(CAST(v0.c0 AS NUMERIC)))) ORDER BY (((((v0.c0)>=(v0.c0))))<=((((v0.c0)||(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0)))<(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>=(v0.c0))))<=((((v0.c0)||(v0.c0))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0)))<(CAST(v0.c0 AS NUMERIC)))) ORDER BY (((((v0.c0)>=(v0.c0))))<=((((v0.c0)||(v0.c0))))) ASC;
SELECT * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))=((((v0.c0) IS FALSE)))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))<=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((v0.c0 IN ()) IN ()) DESC;
