-- Time: 2024/06/09 03:49:08
-- Database: database16
-- Database version: 3.40.0
-- seed value: 1519570916
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2); -- 1ms;
ANALYZE main; -- 2ms;
ROLLBACK TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt0(c2) VALUES ('Wd'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
UPDATE vt0 SET c1='-1193627031' WHERE ((vt0.c2) BETWEEN ((((vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))) AND (((vt0.c0)||(vt0.c1)))); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(0.7815656524166257)  WHEN CAST('' AS TEXT) THEN 0.8115390544847835 END; -- 1ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0Xffffffffebf6f4fe); -- 0ms;
DELETE FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0))IS((- (vt0.c2)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffffebf6f4fe)<<(1993937554)))AND(NULL)))AND(((0xffffffffebf6f4fe) ISNULL))); -- 0ms;
UPDATE vt0 SET (c1, c1)=('', '<Dtㆨ6|\r'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(NULL) WHERE ((CAST(vt0.c2 AS TEXT))>>(HEX(vt0.c0))); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c2=-3.36136962E8, c0=0.7155692052909107; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (0xfffffffffdea503f), (x''), (x''); -- 1ms;
ANALYZE; -- 4ms;
UPDATE vt0 SET (c0)=(NULL) WHERE ((((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c1 AS NUMERIC))))AND((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))); -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES ('', x''), ('c', 1993937554), ('-1193627031', 'h|nh*DrC'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 TEXT ); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES ('><', NULL); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 2ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.7988895231395763, 0.6382071342519733); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2); -- 3ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR ABORT INTO vt1(c1) VALUES ('1158218652'); -- 0ms;
UPDATE OR FAIL vt1 SET (c1)=('4u') WHERE ((((vt1.c1)AND(vt1.c2)))OR(vt1.c2)) COLLATE RTRIM; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c1=1.993937554E9; -- 2ms;
CREATE TEMP TABLE t0 (c0 TEXT ); -- 0ms;
VACUUM; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i94 ON t0(MIN(TYPEOF(c0), c0 COLLATE RTRIM)) WHERE NULL; -- 0ms;
UPDATE rt0 SET (c1)=('991018225') WHERE ((933645927)>=(rt0.c1 COLLATE RTRIM)); -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(-1193627031); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c76; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (CAST(((vt0.c2) ISNULL) AS TEXT)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c3, 0.44205523883988074)) NOT BETWEEN (NULL) AND (-34975681)) DESC, ((COALESCE(rt0.c3, rt0.c0)) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 END) AND ('258274060')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON vt0.c1 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c3, 0.44205523883988074)) NOT BETWEEN (NULL) AND (-34975681)) DESC, ((COALESCE(rt0.c3, rt0.c0)) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 END) AND ('258274060')) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (CAST(((vt0.c2) ISNULL) AS TEXT)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c3, 0.44205523883988074)) NOT BETWEEN (NULL) AND (-34975681)) DESC, ((COALESCE(rt0.c3, rt0.c0)) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 END) AND ('258274060')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON vt0.c1 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c3, 0.44205523883988074)) NOT BETWEEN (NULL) AND (-34975681)) DESC, ((COALESCE(rt0.c3, rt0.c0)) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 END) AND ('258274060')) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON vt0.c1 WHERE (CAST(((vt0.c2) ISNULL) AS TEXT)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c3, 0.44205523883988074)) NOT BETWEEN (NULL) AND (-34975681)) DESC, ((COALESCE(rt0.c3, rt0.c0)) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c2 END) AND ('258274060')) ASC;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN load_extension(rt0.c0) END) ORDER BY ((vt1.c1) NOT NULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN load_extension(rt0.c0) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c1) NOT NULL) COLLATE RTRIM ASC);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN load_extension(rt0.c0) END) ORDER BY ((vt1.c1) NOT NULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN load_extension(rt0.c0) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c1) NOT NULL) COLLATE RTRIM ASC);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN load_extension(rt0.c0) END) ORDER BY ((vt1.c1) NOT NULL) COLLATE RTRIM ASC;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c1))!=((vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((((vt0.c1))<>((vt1.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c1))!=((vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((((vt0.c1))<>((vt1.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c1))!=((vt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) ORDER BY (((vt0.c2 IN ()))*(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2 IN ()))*(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) ORDER BY (((vt0.c2 IN ()))*(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2 IN ()))*(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS BLOB)) ORDER BY (((vt0.c2 IN ()))*(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS FALSE))+(CASE vt0.c0  WHEN NULL THEN vt0.c1 END))) ORDER BY (NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.5292459831766763))) ASC, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE))+(CASE vt0.c0  WHEN NULL THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.5292459831766763))) ASC, vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS FALSE))+(CASE vt0.c0  WHEN NULL THEN vt0.c1 END))) ORDER BY (NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.5292459831766763))) ASC, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE))+(CASE vt0.c0  WHEN NULL THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.5292459831766763))) ASC, vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS FALSE))+(CASE vt0.c0  WHEN NULL THEN vt0.c1 END))) ORDER BY (NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.5292459831766763))) ASC, vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2))<=((rt0.c2))) COLLATE NOCASE WHERE ((((0.16265809856826297)LIKE(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.16265809856826297)LIKE(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2))<=((rt0.c2))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2))<=((rt0.c2))) COLLATE NOCASE WHERE ((((0.16265809856826297)LIKE(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.16265809856826297)LIKE(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2))<=((rt0.c2))) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2))<=((rt0.c2))) COLLATE NOCASE WHERE ((((0.16265809856826297)LIKE(rt0.c0)) IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE (((IFNULL(t0.c76, rt0.c1)) BETWEEN (CASE WHEN t0.c76 THEN rt0.c0 END) AND (''))) ORDER BY ((~ (rt0.c2)) IN (TIME(rt0.c0, 991018225, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c76, rt0.c1)) BETWEEN (CASE WHEN t0.c76 THEN rt0.c0 END) AND (''))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((~ (rt0.c2)) IN (TIME(rt0.c0, 991018225, rt0.c0))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((IFNULL(t0.c76, rt0.c1)) BETWEEN (CASE WHEN t0.c76 THEN rt0.c0 END) AND (''))) ORDER BY ((~ (rt0.c2)) IN (TIME(rt0.c0, 991018225, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c76, rt0.c1)) BETWEEN (CASE WHEN t0.c76 THEN rt0.c0 END) AND (''))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((~ (rt0.c2)) IN (TIME(rt0.c0, 991018225, rt0.c0))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((IFNULL(t0.c76, rt0.c1)) BETWEEN (CASE WHEN t0.c76 THEN rt0.c0 END) AND (''))) ORDER BY ((~ (rt0.c2)) IN (TIME(rt0.c0, 991018225, rt0.c0))) ASC;
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((((((vt1.c0 COLLATE BINARY)AND((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(LIKE(vt0.c0, '', '6'))))OR((NOT (vt0.c0)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)%(rt0.c0)))<(CASE WHEN t0.c76 THEN vt0.c1 ELSE 0.5861152140414724 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE BINARY)AND((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(LIKE(vt0.c0, '', '6'))))OR((NOT (vt0.c0)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((rt0.c1)%(rt0.c0)))<(CASE WHEN t0.c76 THEN vt0.c1 ELSE 0.5861152140414724 END)) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((((((vt1.c0 COLLATE BINARY)AND((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(LIKE(vt0.c0, '', '6'))))OR((NOT (vt0.c0)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)%(rt0.c0)))<(CASE WHEN t0.c76 THEN vt0.c1 ELSE 0.5861152140414724 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE BINARY)AND((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(LIKE(vt0.c0, '', '6'))))OR((NOT (vt0.c0)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((rt0.c1)%(rt0.c0)))<(CASE WHEN t0.c76 THEN vt0.c1 ELSE 0.5861152140414724 END)) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((((((vt1.c0 COLLATE BINARY)AND((((x'')) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))AND(LIKE(vt0.c0, '', '6'))))OR((NOT (vt0.c0)))))OR(rt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)%(rt0.c0)))<(CASE WHEN t0.c76 THEN vt0.c1 ELSE 0.5861152140414724 END)) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((~ (rt0.c0)))OR((rt0.c1 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c0)))OR((rt0.c1 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((~ (rt0.c0)))OR((rt0.c1 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c0)))OR((rt0.c1 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((~ (rt0.c0)))OR((rt0.c1 IN ()))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((~ (rt0.c1)))%(((rt0.c1) ISNULL)))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))%(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((~ (rt0.c1)))%(((rt0.c1) ISNULL)))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))%(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY vt0.c1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE ((((~ (rt0.c1)))%(((rt0.c1) ISNULL)))) ORDER BY vt0.c1;
SELECT * FROM t0 WHERE (((t0.c76)+(0Xffffffffe9c2b007)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76)+(0Xffffffffe9c2b007))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c76)+(0Xffffffffe9c2b007)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76)+(0Xffffffffe9c2b007))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c76)+(0Xffffffffe9c2b007)));
SELECT ALL * FROM vt1, t0 WHERE ((('')=(UNLIKELY(t0.c76)))) ORDER BY (~ (((((t0.c76)AND(t0.c76)))OR(vt1.c1)))), CAST((+ (vt1.c1)) AS BLOB) DESC  NULLS LAST, (COALESCE(vt1.c2, NULL, vt1.c2, 0.9173314098134316) IN (x'', (((t0.c76))=((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')=(UNLIKELY(t0.c76)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (((((t0.c76)AND(t0.c76)))OR(vt1.c1)))), CAST((+ (vt1.c1)) AS BLOB) DESC  NULLS LAST, (COALESCE(vt1.c2, NULL, vt1.c2, 0.9173314098134316) IN (x'', (((t0.c76))=((vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE ((('')=(UNLIKELY(t0.c76)))) ORDER BY (~ (((((t0.c76)AND(t0.c76)))OR(vt1.c1)))), CAST((+ (vt1.c1)) AS BLOB) DESC  NULLS LAST, (COALESCE(vt1.c2, NULL, vt1.c2, 0.9173314098134316) IN (x'', (((t0.c76))=((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')=(UNLIKELY(t0.c76)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (((((t0.c76)AND(t0.c76)))OR(vt1.c1)))), CAST((+ (vt1.c1)) AS BLOB) DESC  NULLS LAST, (COALESCE(vt1.c2, NULL, vt1.c2, 0.9173314098134316) IN (x'', (((t0.c76))=((vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 WHERE ((('')=(UNLIKELY(t0.c76)))) ORDER BY (~ (((((t0.c76)AND(t0.c76)))OR(vt1.c1)))), CAST((+ (vt1.c1)) AS BLOB) DESC  NULLS LAST, (COALESCE(vt1.c2, NULL, vt1.c2, 0.9173314098134316) IN (x'', (((t0.c76))=((vt1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY ((vt1.c0)<(('' IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) ORDER BY ((vt1.c0)<(('' IN (rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY ((vt1.c0)<(('' IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) ORDER BY ((vt1.c0)<(('' IN (rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC) WHERE ((- (rt0.c1)) COLLATE NOCASE) ORDER BY ((vt1.c0)<(('' IN (rt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((CAST(vt0.c1 AS REAL))LIKE(LIKELIHOOD(DISTINCT vt1.c0, 0.11336306149478104))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))LIKE(LIKELIHOOD(DISTINCT vt1.c0, 0.11336306149478104)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((CAST(vt0.c1 AS REAL))LIKE(LIKELIHOOD(DISTINCT vt1.c0, 0.11336306149478104))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))LIKE(LIKELIHOOD(DISTINCT vt1.c0, 0.11336306149478104)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((CAST(vt0.c1 AS REAL))LIKE(LIKELIHOOD(DISTINCT vt1.c0, 0.11336306149478104))));
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL))IS(COALESCE(rt0.c1, vt0.c2, vt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))IS(COALESCE(rt0.c1, vt0.c2, vt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL))IS(COALESCE(rt0.c1, vt0.c2, vt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))IS(COALESCE(rt0.c1, vt0.c2, vt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL))IS(COALESCE(rt0.c1, vt0.c2, vt0.c2, rt0.c0))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE (rt0.c3 IN ())  WHEN ((vt0.c2) IS FALSE) THEN 9.91018225E8 END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c3 IN ())  WHEN ((vt0.c2) IS FALSE) THEN 9.91018225E8 END) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE (rt0.c3 IN ())  WHEN ((vt0.c2) IS FALSE) THEN 9.91018225E8 END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c3 IN ())  WHEN ((vt0.c2) IS FALSE) THEN 9.91018225E8 END) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CASE (rt0.c3 IN ())  WHEN ((vt0.c2) IS FALSE) THEN 9.91018225E8 END);
SELECT * FROM t0, rt0, vt1 WHERE (json_patch(LOWER(rt0.c3), CASE WHEN vt1.c0 THEN rt0.c2 END)) ORDER BY '-661596848';
SELECT SUM(count) FROM (SELECT ALL ((json_patch(LOWER(rt0.c3), CASE WHEN vt1.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY '-661596848');
SELECT * FROM t0, rt0, vt1 WHERE (json_patch(LOWER(rt0.c3), CASE WHEN vt1.c0 THEN rt0.c2 END)) ORDER BY '-661596848';
SELECT SUM(count) FROM (SELECT ALL ((json_patch(LOWER(rt0.c3), CASE WHEN vt1.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY '-661596848');
SELECT * FROM t0, rt0, vt1 WHERE (json_patch(LOWER(rt0.c3), CASE WHEN vt1.c0 THEN rt0.c2 END)) ORDER BY '-661596848';
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON NULL WHERE (((((CASE WHEN x'3b63' THEN t0.c76 WHEN rt0.c1 THEN t0.c76 WHEN rt0.c0 THEN '-1193627031' ELSE rt0.c1 END)AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1, rt0.c2)))) ORDER BY CAST(CASE t0.c76  WHEN rt0.c1 THEN rt0.c0 WHEN 0.5861152140414724 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN x'3b63' THEN t0.c76 WHEN rt0.c1 THEN t0.c76 WHEN rt0.c0 THEN '-1193627031' ELSE rt0.c1 END)AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON NULL ORDER BY CAST(CASE t0.c76  WHEN rt0.c1 THEN rt0.c0 WHEN 0.5861152140414724 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON NULL WHERE (((((CASE WHEN x'3b63' THEN t0.c76 WHEN rt0.c1 THEN t0.c76 WHEN rt0.c0 THEN '-1193627031' ELSE rt0.c1 END)AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1, rt0.c2)))) ORDER BY CAST(CASE t0.c76  WHEN rt0.c1 THEN rt0.c0 WHEN 0.5861152140414724 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN x'3b63' THEN t0.c76 WHEN rt0.c1 THEN t0.c76 WHEN rt0.c0 THEN '-1193627031' ELSE rt0.c1 END)AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON NULL ORDER BY CAST(CASE t0.c76  WHEN rt0.c1 THEN rt0.c0 WHEN 0.5861152140414724 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON NULL WHERE (((((CASE WHEN x'3b63' THEN t0.c76 WHEN rt0.c1 THEN t0.c76 WHEN rt0.c0 THEN '-1193627031' ELSE rt0.c1 END)AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1, rt0.c2)))) ORDER BY CAST(CASE t0.c76  WHEN rt0.c1 THEN rt0.c0 WHEN 0.5861152140414724 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c1) BETWEEN ('G2/o') AND (vt1.c2)))GLOB(((vt0.c2)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN ('G2/o') AND (vt1.c2)))GLOB(((vt0.c2)>>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c1) BETWEEN ('G2/o') AND (vt1.c2)))GLOB(((vt0.c2)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN ('G2/o') AND (vt1.c2)))GLOB(((vt0.c2)>>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((((vt0.c1) BETWEEN ('G2/o') AND (vt1.c2)))GLOB(((vt0.c2)>>(vt0.c1)))));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((UNICODE(rt0.c2))OR(((rt0.c1) BETWEEN (vt1.c1) AND (rt0.c2)))))AND(((t0.c76)+(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CASE 0.5364776948054726  WHEN 0.9173314098134316 THEN t0.c76 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN ((0.9524217723015067) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c3  WHEN vt1.c1 THEN rt0.c0 END ELSE (((rt0.c0)) BETWEEN (('390245490')) AND ((rt0.c0))) END WHERE (RTRIM(CASE WHEN rt0.c1 THEN t0.c76 END)) ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (x'5470'))) BETWEEN ((((rt0.c0, vt1.c0, t0.c76))<=((t0.c76, vt1.c0, rt0.c3)))) AND (((vt1.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE WHEN rt0.c1 THEN t0.c76 END)) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((UNICODE(rt0.c2))OR(((rt0.c1) BETWEEN (vt1.c1) AND (rt0.c2)))))AND(((t0.c76)+(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CASE 0.5364776948054726  WHEN 0.9173314098134316 THEN t0.c76 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN ((0.9524217723015067) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c3  WHEN vt1.c1 THEN rt0.c0 END ELSE (((rt0.c0)) BETWEEN (('390245490')) AND ((rt0.c0))) END ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (x'5470'))) BETWEEN ((((rt0.c0, vt1.c0, t0.c76))<=((t0.c76, vt1.c0, rt0.c3)))) AND (((vt1.c2) NOT NULL))) ASC);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((UNICODE(rt0.c2))OR(((rt0.c1) BETWEEN (vt1.c1) AND (rt0.c2)))))AND(((t0.c76)+(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CASE 0.5364776948054726  WHEN 0.9173314098134316 THEN t0.c76 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN ((0.9524217723015067) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c3  WHEN vt1.c1 THEN rt0.c0 END ELSE (((rt0.c0)) BETWEEN (('390245490')) AND ((rt0.c0))) END WHERE (RTRIM(CASE WHEN rt0.c1 THEN t0.c76 END)) ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (x'5470'))) BETWEEN ((((rt0.c0, vt1.c0, t0.c76))<=((t0.c76, vt1.c0, rt0.c3)))) AND (((vt1.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CASE WHEN rt0.c1 THEN t0.c76 END)) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((((UNICODE(rt0.c2))OR(((rt0.c1) BETWEEN (vt1.c1) AND (rt0.c2)))))AND(((t0.c76)+(vt0.c0)))) RIGHT OUTER JOIN vt0 ON CASE 0.5364776948054726  WHEN 0.9173314098134316 THEN t0.c76 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN ((0.9524217723015067) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN CASE rt0.c3  WHEN vt1.c1 THEN rt0.c0 END ELSE (((rt0.c0)) BETWEEN (('390245490')) AND ((rt0.c0))) END ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (x'5470'))) BETWEEN ((((rt0.c0, vt1.c0, t0.c76))<=((t0.c76, vt1.c0, rt0.c3)))) AND (((vt1.c2) NOT NULL))) ASC);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((rt0.c3)GLOB(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)GLOB(vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((rt0.c3)GLOB(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)GLOB(vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((((rt0.c3)GLOB(vt1.c0))) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS REAL) WHERE (((((CAST(rt0.c0 AS NUMERIC))AND((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76))))))OR((- (rt0.c0))))) ORDER BY (((t0.c76)) BETWEEN (((((('')AND(rt0.c3)))OR(rt0.c1)))) AND ((((t0.c76) NOTNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS NUMERIC))AND((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76))))))OR((- (rt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS REAL) ORDER BY (((t0.c76)) BETWEEN (((((('')AND(rt0.c3)))OR(rt0.c1)))) AND ((((t0.c76) NOTNULL)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS REAL) WHERE (((((CAST(rt0.c0 AS NUMERIC))AND((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76))))))OR((- (rt0.c0))))) ORDER BY (((t0.c76)) BETWEEN (((((('')AND(rt0.c3)))OR(rt0.c1)))) AND ((((t0.c76) NOTNULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS NUMERIC))AND((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76))))))OR((- (rt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS REAL) ORDER BY (((t0.c76)) BETWEEN (((((('')AND(rt0.c3)))OR(rt0.c1)))) AND ((((t0.c76) NOTNULL)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS REAL) WHERE (((((CAST(rt0.c0 AS NUMERIC))AND((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76))))))OR((- (rt0.c0))))) ORDER BY (((t0.c76)) BETWEEN (((((('')AND(rt0.c3)))OR(rt0.c1)))) AND ((((t0.c76) NOTNULL)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2)-(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c2))) AND ((vt0.c0 IN (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c2))) AND ((vt0.c0 IN (vt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2)-(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c2))) AND ((vt0.c0 IN (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c2))) AND ((vt0.c0 IN (vt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c2)-(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c2))) AND ((vt0.c0 IN (vt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS NUMERIC)) ORDER BY CASE WHEN t0.c76 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN t0.c76 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS NUMERIC)) ORDER BY CASE WHEN t0.c76 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN t0.c76 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS NUMERIC)) ORDER BY CASE WHEN t0.c76 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((vt1.c0)IS((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((vt1.c0)IS((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((vt1.c0)IS((vt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c2)!=(vt1.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c1)) END FULL OUTER JOIN vt0 ON 0.7835098670017526 RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((t0.c76))))>>(CAST(vt1.c0 AS INTEGER))) WHERE (((((vt1.c2) BETWEEN (vt0.c1) AND (vt1.c1)))<((t0.c76 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) BETWEEN (vt0.c1) AND (vt1.c1)))<((t0.c76 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c2)<>(vt1.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c1)) END FULL OUTER JOIN vt0 ON 0.7835098670017526 RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((t0.c76))))>>(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c2)!=(vt1.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c1)) END FULL OUTER JOIN vt0 ON 0.7835098670017526 RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((t0.c76))))>>(CAST(vt1.c0 AS INTEGER))) WHERE (((((vt1.c2) BETWEEN (vt0.c1) AND (vt1.c1)))<((t0.c76 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) BETWEEN (vt0.c1) AND (vt1.c1)))<((t0.c76 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN ((vt1.c2)<>(vt1.c0)) THEN ((((vt0.c0)AND(rt0.c1)))OR(vt0.c1)) END FULL OUTER JOIN vt0 ON 0.7835098670017526 RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((t0.c76))))>>(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON (((- (vt0.c0)))<(rt0.c3 COLLATE NOCASE)) WHERE (CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (((- (vt0.c0)))<(rt0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON (((- (vt0.c0)))<(rt0.c3 COLLATE NOCASE)) WHERE (CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON (((- (vt0.c0)))<(rt0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN vt1 ON (((- (vt0.c0)))<(rt0.c3 COLLATE NOCASE)) WHERE (CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((CASE t0.c76  WHEN rt0.c2 THEN vt0.c2 ELSE vt0.c1 END) NOTNULL)) ORDER BY (((x'a6f0', rt0.c0, ((vt1.c2) ISNULL)))<>((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))OR(vt1.c2)))OR(vt0.c2)), rt0.c3 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c76  WHEN rt0.c2 THEN vt0.c2 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((x'a6f0', rt0.c0, ((vt1.c2) ISNULL)))!=((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))OR(vt1.c2)))OR(vt0.c2)), rt0.c3 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c2)))))));
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((CASE t0.c76  WHEN rt0.c2 THEN vt0.c2 ELSE vt0.c1 END) NOTNULL)) ORDER BY (((x'a6f0', rt0.c0, ((vt1.c2) ISNULL)))<>((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))OR(vt1.c2)))OR(vt0.c2)), rt0.c3 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c76  WHEN rt0.c2 THEN vt0.c2 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (((x'a6f0', rt0.c0, ((vt1.c2) ISNULL)))!=((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))OR(vt1.c2)))OR(vt0.c2)), rt0.c3 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c2)))))));
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((CASE t0.c76  WHEN rt0.c2 THEN vt0.c2 ELSE vt0.c1 END) NOTNULL)) ORDER BY (((x'a6f0', rt0.c0, ((vt1.c2) ISNULL)))<>((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))OR(vt1.c2)))OR(vt0.c2)), rt0.c3 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c2))))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c1) NOTNULL)) NOTNULL)) ORDER BY (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt0.c2  WHEN t0.c76 THEN vt1.c1 ELSE vt0.c1 END)LIKE(((t0.c76) BETWEEN (t0.c76) AND (vt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt0.c2  WHEN t0.c76 THEN vt1.c1 ELSE vt0.c1 END)LIKE(((t0.c76) BETWEEN (t0.c76) AND (vt1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c1) NOTNULL)) NOTNULL)) ORDER BY (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt0.c2  WHEN t0.c76 THEN vt1.c1 ELSE vt0.c1 END)LIKE(((t0.c76) BETWEEN (t0.c76) AND (vt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt0.c2  WHEN t0.c76 THEN vt1.c1 ELSE vt0.c1 END)LIKE(((t0.c76) BETWEEN (t0.c76) AND (vt1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c1) NOTNULL)) NOTNULL)) ORDER BY (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt0.c2  WHEN t0.c76 THEN vt1.c1 ELSE vt0.c1 END)LIKE(((t0.c76) BETWEEN (t0.c76) AND (vt1.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c1, rt0.c0))))>=(CAST(0.6345859153878695 AS TEXT))) ASC, CAST((((rt0.c1))<=((rt0.c1))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c1, rt0.c0))))>=(CAST(0.6345859153878695 AS TEXT))) ASC, CAST((((rt0.c1))<=((rt0.c1))) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c1, rt0.c0))))>=(CAST(0.6345859153878695 AS TEXT))) ASC, CAST((((rt0.c1))<=((rt0.c1))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c1, rt0.c0))))>=(CAST(0.6345859153878695 AS TEXT))) ASC, CAST((((rt0.c1))<=((rt0.c1))) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c1, rt0.c0))))>=(CAST(0.6345859153878695 AS TEXT))) ASC, CAST((((rt0.c1))<=((rt0.c1))) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, rt0, t0 WHERE (t0.c76) ORDER BY ((((t0.c76)+(rt0.c0)))LIKE(((rt0.c2)<>(rt0.c2)))), CASE WHEN CAST(vt1.c1 AS BLOB) THEN (~ (vt1.c2)) ELSE (rt0.c3 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((t0.c76)+(rt0.c0)))LIKE(((rt0.c2)<>(rt0.c2)))), CASE WHEN CAST(vt1.c1 AS BLOB) THEN (~ (vt1.c2)) ELSE (rt0.c3 IN ()) END  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE (t0.c76) ORDER BY ((((t0.c76)+(rt0.c0)))LIKE(((rt0.c2)<>(rt0.c2)))), CASE WHEN CAST(vt1.c1 AS BLOB) THEN (~ (vt1.c2)) ELSE (rt0.c3 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((t0.c76)+(rt0.c0)))LIKE(((rt0.c2)<>(rt0.c2)))), CASE WHEN CAST(vt1.c1 AS BLOB) THEN (~ (vt1.c2)) ELSE (rt0.c3 IN ()) END  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE (t0.c76) ORDER BY ((((t0.c76)+(rt0.c0)))LIKE(((rt0.c2)<>(rt0.c2)))), CASE WHEN CAST(vt1.c1 AS BLOB) THEN (~ (vt1.c2)) ELSE (rt0.c3 IN ()) END  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((t0.c76)<=(t0.c76)) AS TEXT)) ORDER BY (((t0.c76)) BETWEEN ((UPPER(t0.c76))) AND ((CAST(t0.c76 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c76)<=(t0.c76)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76)) BETWEEN ((UPPER(t0.c76))) AND ((CAST(t0.c76 AS REAL))))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((t0.c76)<=(t0.c76)) AS TEXT)) ORDER BY (((t0.c76)) BETWEEN ((UPPER(t0.c76))) AND ((CAST(t0.c76 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c76)<=(t0.c76)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76)) BETWEEN ((UPPER(t0.c76))) AND ((CAST(t0.c76 AS REAL))))  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((t0.c76)<=(t0.c76)) AS TEXT)) ORDER BY (((t0.c76)) BETWEEN ((UPPER(t0.c76))) AND ((CAST(t0.c76 AS REAL))))  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c76) ISNULL)) NOTNULL)) ORDER BY TRIM(((t0.c76)%(t0.c76)), '435016811') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c76) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY TRIM(((t0.c76)%(t0.c76)), '435016811') ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c76) ISNULL)) NOTNULL)) ORDER BY TRIM(((t0.c76)%(t0.c76)), '435016811') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c76) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY TRIM(((t0.c76)%(t0.c76)), '435016811') ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c76) ISNULL)) NOTNULL)) ORDER BY TRIM(((t0.c76)%(t0.c76)), '435016811') ASC  NULLS LAST;
SELECT * FROM rt0, vt1, t0 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c76))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c76))))  NULLS LAST);
SELECT * FROM rt0, vt1, t0 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c76))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c76))))  NULLS LAST);
SELECT * FROM rt0, vt1, t0 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c76))))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)*(vt0.c0)))) AND (((+ (vt0.c1)))))) ORDER BY CAST(IFNULL(vt0.c2, vt0.c0) AS REAL) DESC, ((CAST(vt0.c1 AS TEXT))<<('M_V6.>')) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)*(vt0.c0)))) AND (((+ (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(IFNULL(vt0.c2, vt0.c0) AS REAL) DESC, ((CAST(vt0.c1 AS TEXT))<<('M_V6.>')) DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)*(vt0.c0)))) AND (((+ (vt0.c1)))))) ORDER BY CAST(IFNULL(vt0.c2, vt0.c0) AS REAL) DESC, ((CAST(vt0.c1 AS TEXT))<<('M_V6.>')) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)*(vt0.c0)))) AND (((+ (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(IFNULL(vt0.c2, vt0.c0) AS REAL) DESC, ((CAST(vt0.c1 AS TEXT))<<('M_V6.>')) DESC);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)*(vt0.c0)))) AND (((+ (vt0.c1)))))) ORDER BY CAST(IFNULL(vt0.c2, vt0.c0) AS REAL) DESC, ((CAST(vt0.c1 AS TEXT))<<('M_V6.>')) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(((t0.c76)>=(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c76)>=(t0.c76)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(((t0.c76)>=(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c76)>=(t0.c76)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(((t0.c76)>=(t0.c76))));
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (rt0.c1);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY CAST(((((((((((((vt1.c1)OR(vt0.c1)))OR(rt0.c1)))OR(t0.c76)))OR(vt0.c1)))AND(rt0.c2)))OR(NULL)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY CAST(((((((((((((vt1.c1)OR(vt0.c1)))OR(rt0.c1)))OR(t0.c76)))OR(vt0.c1)))AND(rt0.c2)))OR(NULL)) AS INTEGER));
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY CAST(((((((((((((vt1.c1)OR(vt0.c1)))OR(rt0.c1)))OR(t0.c76)))OR(vt0.c1)))AND(rt0.c2)))OR(NULL)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY CAST(((((((((((((vt1.c1)OR(vt0.c1)))OR(rt0.c1)))OR(t0.c76)))OR(vt0.c1)))AND(rt0.c2)))OR(NULL)) AS INTEGER));
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (vt0.c2 COLLATE BINARY) ORDER BY CAST(((((((((((((vt1.c1)OR(vt0.c1)))OR(rt0.c1)))OR(t0.c76)))OR(vt0.c1)))AND(rt0.c2)))OR(NULL)) AS INTEGER);
SELECT * FROM vt0, vt1, rt0 WHERE (CASE (NOT (-1.193627031E9))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c3)||(NULL)) WHEN 'c|k*!' THEN (((vt0.c1))<((vt0.c2))) WHEN (+ (rt0.c3)) THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)))AND(rt0.c2)))OR(vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (-1.193627031E9))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c3)||(NULL)) WHEN 'c|k*!' THEN (((vt0.c1))<((vt0.c2))) WHEN (+ (rt0.c3)) THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)))AND(rt0.c2)))OR(vt1.c2)) END) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (CASE (NOT (-1.193627031E9))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c3)||(NULL)) WHEN 'c|k*!' THEN (((vt0.c1))<((vt0.c2))) WHEN (+ (rt0.c3)) THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)))AND(rt0.c2)))OR(vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (-1.193627031E9))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c3)||(NULL)) WHEN 'c|k*!' THEN (((vt0.c1))<((vt0.c2))) WHEN (+ (rt0.c3)) THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)))AND(rt0.c2)))OR(vt1.c2)) END) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (CASE (NOT (-1.193627031E9))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c3)||(NULL)) WHEN 'c|k*!' THEN (((vt0.c1))<((vt0.c2))) WHEN (+ (rt0.c3)) THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)))AND(rt0.c2)))OR(vt1.c2)) END);
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i94 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND((((vt0.c0))>((vt0.c1))))))OR(((vt1.c0)<=(vt0.c0)))))OR(((vt0.c1)>(rt0.c3)))))OR(rt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((((vt0.c1)>=(vt1.c0)))<(((rt0.c2)<(rt0.c1)))) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, t0 INDEXED BY i94 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND((((vt0.c0))>((vt0.c1))))))OR(((vt1.c0)<=(vt0.c0)))))OR(((vt0.c1)>(rt0.c3)))))OR(rt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((((vt0.c1)>=(vt1.c0)))<(((rt0.c2)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 INDEXED BY i94 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND((((vt0.c0))>((vt0.c1))))))OR(((vt1.c0)<=(vt0.c0)))))OR(((vt0.c1)>(rt0.c3)))))OR(rt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((((vt0.c1)>=(vt1.c0)))<(((rt0.c2)<(rt0.c1)))) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, t0 INDEXED BY i94 FULL OUTER JOIN vt1 ON ((((((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))AND((((vt0.c0))>((vt0.c1))))))OR(((vt1.c0)<=(vt0.c0)))))OR(((vt0.c1)>(rt0.c3)))))OR(rt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN rt0 ON ((((vt0.c1)>=(vt1.c0)))<(((rt0.c2)<(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN '-373116921' THEN rt0.c1 END)<=(rt0.c2))) ORDER BY (((rt0.c3)/(rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)%(rt0.c3)))<<((NOT (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN '-373116921' THEN rt0.c1 END)<=(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)/(rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)%(rt0.c3)))<<((NOT (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN '-373116921' THEN rt0.c1 END)<=(rt0.c2))) ORDER BY (((rt0.c3)/(rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)%(rt0.c3)))<<((NOT (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN '-373116921' THEN rt0.c1 END)<=(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)/(rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)%(rt0.c3)))<<((NOT (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN '-373116921' THEN rt0.c1 END)<=(rt0.c2))) ORDER BY (((rt0.c3)/(rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)%(rt0.c3)))<<((NOT (rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2)/(vt1.c0)) AS NUMERIC)) ORDER BY ((((((vt1.c2)AND(vt1.c2)))OR(0.23052060422850185)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))) ASC  NULLS FIRST, ((((vt1.c0) IS TRUE))>=(TRIM(x'', vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)/(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c2)AND(vt1.c2)))OR(0.23052060422850185)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))) ASC  NULLS FIRST, ((((vt1.c0) IS TRUE))>=(TRIM(x'', vt1.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2)/(vt1.c0)) AS NUMERIC)) ORDER BY ((((((vt1.c2)AND(vt1.c2)))OR(0.23052060422850185)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))) ASC  NULLS FIRST, ((((vt1.c0) IS TRUE))>=(TRIM(x'', vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)/(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c2)AND(vt1.c2)))OR(0.23052060422850185)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))) ASC  NULLS FIRST, ((((vt1.c0) IS TRUE))>=(TRIM(x'', vt1.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2)/(vt1.c0)) AS NUMERIC)) ORDER BY ((((((vt1.c2)AND(vt1.c2)))OR(0.23052060422850185)))AND(((((vt1.c2)OR(vt1.c1)))AND(vt1.c1)))) ASC  NULLS FIRST, ((((vt1.c0) IS TRUE))>=(TRIM(x'', vt1.c2)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))<<(0.1543549553229322)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))<<(0.1543549553229322))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))<<(0.1543549553229322)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))<<(0.1543549553229322))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER))<<(0.1543549553229322)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c3, x'')) NOT BETWEEN ((((rt0.c3)||(rt0.c1)), LIKE(rt0.c0, rt0.c3, 'k'), ((rt0.c2)+(rt0.c1)))) AND ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c3, x'')) NOT BETWEEN ((((rt0.c3)||(rt0.c1)), LIKE(rt0.c0, rt0.c3, 'k'), ((rt0.c2)+(rt0.c1)))) AND ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c3, x'')) NOT BETWEEN ((((rt0.c3)||(rt0.c1)), LIKE(rt0.c0, rt0.c3, 'k'), ((rt0.c2)+(rt0.c1)))) AND ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c3, x'')) NOT BETWEEN ((((rt0.c3)||(rt0.c1)), LIKE(rt0.c0, rt0.c3, 'k'), ((rt0.c2)+(rt0.c1)))) AND ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c3, x'')) NOT BETWEEN ((((rt0.c3)||(rt0.c1)), LIKE(rt0.c0, rt0.c3, 'k'), ((rt0.c2)+(rt0.c1)))) AND ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END, rt0.c2))));
SELECT * FROM vt0, rt0, vt1 WHERE (((((vt1.c2) NOT NULL)) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((0.6506788945798494)IS(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) NOT NULL)) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((0.6506788945798494)IS(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((((vt1.c2) NOT NULL)) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((0.6506788945798494)IS(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) NOT NULL)) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((0.6506788945798494)IS(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((((vt1.c2) NOT NULL)) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((0.6506788945798494)IS(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((vt1.c1) BETWEEN (vt0.c2) AND (NULL)))IS((NOT (rt0.c2))))) ORDER BY ((((0.33382380706364756) IS TRUE))>>((((rt0.c3, rt0.c0, vt1.c2)) BETWEEN ((rt0.c0, vt1.c2, vt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt0.c2) AND (NULL)))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((0.33382380706364756) IS TRUE))>>((((rt0.c3, rt0.c0, vt1.c2)) BETWEEN ((rt0.c0, vt1.c2, vt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((vt1.c1) BETWEEN (vt0.c2) AND (NULL)))IS((NOT (rt0.c2))))) ORDER BY ((((0.33382380706364756) IS TRUE))>>((((rt0.c3, rt0.c0, vt1.c2)) BETWEEN ((rt0.c0, vt1.c2, vt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt0.c2) AND (NULL)))IS((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((0.33382380706364756) IS TRUE))>>((((rt0.c3, rt0.c0, vt1.c2)) BETWEEN ((rt0.c0, vt1.c2, vt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((vt1.c1) BETWEEN (vt0.c2) AND (NULL)))IS((NOT (rt0.c2))))) ORDER BY ((((0.33382380706364756) IS TRUE))>>((((rt0.c3, rt0.c0, vt1.c2)) BETWEEN ((rt0.c0, vt1.c2, vt0.c1)) AND ((rt0.c1, rt0.c1, vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN 'H|NH*DRC' ELSE 1.475883432E9 END) NOTNULL)) ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN 'H|NH*DRC' ELSE 1.475883432E9 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN 'H|NH*DRC' ELSE 1.475883432E9 END) NOTNULL)) ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN 'H|NH*DRC' ELSE 1.475883432E9 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN 'H|NH*DRC' ELSE 1.475883432E9 END) NOTNULL)) ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE) DESC;
SELECT * FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1))) WHERE (((+ (vt1.c2)) IN ())) ORDER BY ((((((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((vt1.c2)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(((((((((rt0.c0)OR(vt1.c2)))AND(vt1.c2)))OR(rt0.c2)))OR(vt1.c0)))))OR((rt0.c3 IN (rt0.c3, rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c2)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1))) ORDER BY ((((((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((vt1.c2)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(((((((((rt0.c0)OR(vt1.c2)))AND(vt1.c2)))OR(rt0.c2)))OR(vt1.c0)))))OR((rt0.c3 IN (rt0.c3, rt0.c1)))) ASC);
SELECT * FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1))) WHERE (((+ (vt1.c2)) IN ())) ORDER BY ((((((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((vt1.c2)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(((((((((rt0.c0)OR(vt1.c2)))AND(vt1.c2)))OR(rt0.c2)))OR(vt1.c0)))))OR((rt0.c3 IN (rt0.c3, rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c2)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1))) ORDER BY ((((((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((vt1.c2)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(((((((((rt0.c0)OR(vt1.c2)))AND(vt1.c2)))OR(rt0.c2)))OR(vt1.c0)))))OR((rt0.c3 IN (rt0.c3, rt0.c1)))) ASC);
SELECT * FROM vt1 CROSS JOIN rt0 ON ABS(DISTINCT ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1))) WHERE (((+ (vt1.c2)) IN ())) ORDER BY ((((((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((vt1.c2)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0)))AND(((((((((rt0.c0)OR(vt1.c2)))AND(vt1.c2)))OR(rt0.c2)))OR(vt1.c0)))))OR((rt0.c3 IN (rt0.c3, rt0.c1)))) ASC;
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, t0.c76, (t0.c76 IN ()), (x'1afb' IN ()))) AND (((+ (0.7847491743899656)), ((t0.c76)%(vt0.c0)), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c1 WHEN t0.c76 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 END, CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3, t0.c76)))))) ORDER BY 0Xfffffffffdea503f DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, t0.c76, (t0.c76 IN ()), (x'1afb' IN ()))) AND (((+ (0.7847491743899656)), ((t0.c76)%(vt0.c0)), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c1 WHEN t0.c76 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 END, CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3, t0.c76)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 0Xfffffffffdea503f DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, t0.c76, (t0.c76 IN ()), (x'1afb' IN ()))) AND (((+ (0.7847491743899656)), ((t0.c76)%(vt0.c0)), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c1 WHEN t0.c76 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 END, CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3, t0.c76)))))) ORDER BY 0Xfffffffffdea503f DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, t0.c76, (t0.c76 IN ()), (x'1afb' IN ()))) AND (((+ (0.7847491743899656)), ((t0.c76)%(vt0.c0)), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c1 WHEN t0.c76 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 END, CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3, t0.c76)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 0Xfffffffffdea503f DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, t0.c76, (t0.c76 IN ()), (x'1afb' IN ()))) AND (((+ (0.7847491743899656)), ((t0.c76)%(vt0.c0)), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c1 WHEN t0.c76 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 END, CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END, (rt0.c3 IN (rt0.c3, t0.c76)))))) ORDER BY 0Xfffffffffdea503f DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c2)%(vt1.c0)) COLLATE RTRIM) ORDER BY (~ ((~ (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)%(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (~ ((~ (vt1.c2))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c2)%(vt1.c0)) COLLATE RTRIM) ORDER BY (~ ((~ (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)%(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (~ ((~ (vt1.c2))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c2)%(vt1.c0)) COLLATE RTRIM) ORDER BY (~ ((~ (vt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c2 AS INTEGER)) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (SQLITE_COMPILEOPTION_USED(vt1.c2))) WHERE (CAST(TRIM(vt1.c1) AS INTEGER)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt1.c1) AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c2 AS INTEGER)) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (SQLITE_COMPILEOPTION_USED(vt1.c2))) ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c2 AS INTEGER)) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (SQLITE_COMPILEOPTION_USED(vt1.c2))) WHERE (CAST(TRIM(vt1.c1) AS INTEGER)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt1.c1) AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c2 AS INTEGER)) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (SQLITE_COMPILEOPTION_USED(vt1.c2))) ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c2 AS INTEGER)) NOT BETWEEN (((vt1.c2)IS NOT(vt1.c2))) AND (SQLITE_COMPILEOPTION_USED(vt1.c2))) WHERE (CAST(TRIM(vt1.c1) AS INTEGER)) ORDER BY NULL  NULLS FIRST;
SELECT * FROM vt1, rt0, t0 WHERE (UPPER((((t0.c76))>=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((t0.c76))>=((vt1.c1))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (UPPER((((t0.c76))>=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((t0.c76))>=((vt1.c1))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (UPPER((((t0.c76))>=((vt1.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN (~ (rt0.c1)) END) ORDER BY ('390245490' IN ())  NULLS FIRST, rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ('390245490' IN ())  NULLS FIRST, rt0.c3  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN (~ (rt0.c1)) END) ORDER BY ('390245490' IN ())  NULLS FIRST, rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ('390245490' IN ())  NULLS FIRST, rt0.c3  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN (~ (rt0.c1)) END) ORDER BY ('390245490' IN ())  NULLS FIRST, rt0.c3  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 CROSS JOIN vt0 ON vt1.c1 COLLATE RTRIM WHERE (x'') ORDER BY COALESCE(DISTINCT ((vt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)), t0.c76, (+ (NULL)), ((vt0.c0) NOTNULL), highlight(vt1.c0, vt0.c1, rt0.c1, t0.c76), ((((((((vt1.c2)AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))  NULLS LAST, LIKELIHOOD(((vt0.c1)&(rt0.c0)), 0.46083953027810776) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, rt0 CROSS JOIN vt0 ON vt1.c1 COLLATE RTRIM ORDER BY COALESCE(DISTINCT ((vt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)), t0.c76, (+ (NULL)), ((vt0.c0) NOTNULL), highlight(vt1.c0, vt0.c1, rt0.c1, t0.c76), ((((((((vt1.c2)AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))  NULLS LAST, LIKELIHOOD(((vt0.c1)&(rt0.c0)), 0.46083953027810776) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 CROSS JOIN vt0 ON vt1.c1 COLLATE RTRIM WHERE (x'') ORDER BY COALESCE(DISTINCT ((vt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)), t0.c76, (+ (NULL)), ((vt0.c0) NOTNULL), highlight(vt1.c0, vt0.c1, rt0.c1, t0.c76), ((((((((vt1.c2)AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))  NULLS LAST, LIKELIHOOD(((vt0.c1)&(rt0.c0)), 0.46083953027810776) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, rt0 CROSS JOIN vt0 ON vt1.c1 COLLATE RTRIM ORDER BY COALESCE(DISTINCT ((vt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)), t0.c76, (+ (NULL)), ((vt0.c0) NOTNULL), highlight(vt1.c0, vt0.c1, rt0.c1, t0.c76), ((((((((vt1.c2)AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))  NULLS LAST, LIKELIHOOD(((vt0.c1)&(rt0.c0)), 0.46083953027810776) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 CROSS JOIN vt0 ON vt1.c1 COLLATE RTRIM WHERE (x'') ORDER BY COALESCE(DISTINCT ((vt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)), t0.c76, (+ (NULL)), ((vt0.c0) NOTNULL), highlight(vt1.c0, vt0.c1, rt0.c1, t0.c76), ((((((((vt1.c2)AND(vt0.c2)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))  NULLS LAST, LIKELIHOOD(((vt0.c1)&(rt0.c0)), 0.46083953027810776) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c76)) BETWEEN ((3.9024549E8)) AND (((t0.c76 IN ()))))) ORDER BY ((((t0.c76)&(t0.c76)))<>(NULL)) DESC, t0.c76  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c76)) BETWEEN ((3.9024549E8)) AND (((t0.c76 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76)&(t0.c76)))<>(NULL)) DESC, t0.c76  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c76)) BETWEEN ((3.9024549E8)) AND (((t0.c76 IN ()))))) ORDER BY ((((t0.c76)&(t0.c76)))<>(NULL)) DESC, t0.c76  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c76)) BETWEEN ((3.9024549E8)) AND (((t0.c76 IN ()))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76)&(t0.c76)))<>(NULL)) DESC, t0.c76  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c76)) BETWEEN ((3.9024549E8)) AND (((t0.c76 IN ()))))) ORDER BY ((((t0.c76)&(t0.c76)))<>(NULL)) DESC, t0.c76  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, t0 WHERE (((json(NULL)) IS TRUE)) ORDER BY CASE ((((vt1.c0)AND(rt0.c3)))OR(vt1.c2))  WHEN '-1193627031' THEN (rt0.c2 IN ()) WHEN LIKELY(rt0.c2) THEN (((vt1.c2))>=((rt0.c1))) WHEN NULL THEN ((vt1.c1) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json(NULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE ((((vt1.c0)AND(rt0.c3)))OR(vt1.c2))  WHEN '-1193627031' THEN (rt0.c2 IN ()) WHEN LIKELY(rt0.c2) THEN (((vt1.c2))>=((rt0.c1))) WHEN NULL THEN ((vt1.c1) ISNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((json(NULL)) IS TRUE)) ORDER BY CASE ((((vt1.c0)AND(rt0.c3)))OR(vt1.c2))  WHEN '-1193627031' THEN (rt0.c2 IN ()) WHEN LIKELY(rt0.c2) THEN (((vt1.c2))>=((rt0.c1))) WHEN NULL THEN ((vt1.c1) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json(NULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE ((((vt1.c0)AND(rt0.c3)))OR(vt1.c2))  WHEN '-1193627031' THEN (rt0.c2 IN ()) WHEN LIKELY(rt0.c2) THEN (((vt1.c2))>=((rt0.c1))) WHEN NULL THEN ((vt1.c1) ISNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (((json(NULL)) IS TRUE)) ORDER BY CASE ((((vt1.c0)AND(rt0.c3)))OR(vt1.c2))  WHEN '-1193627031' THEN (rt0.c2 IN ()) WHEN LIKELY(rt0.c2) THEN (((vt1.c2))>=((rt0.c1))) WHEN NULL THEN ((vt1.c1) ISNULL) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c2)))||(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON (((x'')+(vt1.c2)) IN ()) WHERE (CAST((((-336136962)) NOT BETWEEN ((0.1900940316232903)) AND ((x''))) AS INTEGER)) ORDER BY ((vt0.c0)<(vt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((-336136962)) NOT BETWEEN ((0.1900940316232903)) AND ((x''))) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c2)))||(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON (((x'')+(vt1.c2)) IN ()) ORDER BY ((vt0.c0)<(vt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c2)))||(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON (((x'')+(vt1.c2)) IN ()) WHERE (CAST((((-336136962)) NOT BETWEEN ((0.1900940316232903)) AND ((x''))) AS INTEGER)) ORDER BY ((vt0.c0)<(vt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((-336136962)) NOT BETWEEN ((0.1900940316232903)) AND ((x''))) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c2)))||(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON (((x'')+(vt1.c2)) IN ()) ORDER BY ((vt0.c0)<(vt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('') ORDER BY CAST((~ (vt1.c2)) AS REAL), NULL;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((~ (vt1.c2)) AS REAL), NULL);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('') ORDER BY CAST((~ (vt1.c2)) AS REAL), NULL;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((~ (vt1.c2)) AS REAL), NULL);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('') ORDER BY CAST((~ (vt1.c2)) AS REAL), NULL;
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(rt0.c2)) ORDER BY ((((rt0.c1)=(rt0.c1))) NOT BETWEEN (UPPER(DISTINCT rt0.c3)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN NULL THEN NULL ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c1))) NOT BETWEEN (UPPER(DISTINCT rt0.c3)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN NULL THEN NULL ELSE rt0.c1 END)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(rt0.c2)) ORDER BY ((((rt0.c1)=(rt0.c1))) NOT BETWEEN (UPPER(DISTINCT rt0.c3)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN NULL THEN NULL ELSE rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c1))) NOT BETWEEN (UPPER(DISTINCT rt0.c3)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN NULL THEN NULL ELSE rt0.c1 END)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (LENGTH(rt0.c2)) ORDER BY ((((rt0.c1)=(rt0.c1))) NOT BETWEEN (UPPER(DISTINCT rt0.c3)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c1 WHEN NULL THEN NULL ELSE rt0.c1 END)) ASC;
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt1.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt1.c2)) AS BLOB));
SELECT * FROM vt1, rt0 WHERE ((('%i') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))) AND (((rt0.c2)%(vt1.c1))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('%i') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))) AND (((rt0.c2)%(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((('%i') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))) AND (((rt0.c2)%(vt1.c1))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('%i') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))) AND (((rt0.c2)%(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((('%i') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))) AND (((rt0.c2)%(vt1.c1))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((rt0.c2)+(x'')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)+(x'')) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((rt0.c2)+(x'')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)+(x'')) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((rt0.c2)+(x'')) AS REAL));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((vt1.c2) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON (~ (TRIM(vt0.c2, vt1.c1))) WHERE (NULL COLLATE RTRIM) ORDER BY ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END) AND (CAST(vt1.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((vt1.c2) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON (~ (TRIM(vt0.c2, vt1.c1))) ORDER BY ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END) AND (CAST(vt1.c2 AS INTEGER))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((vt1.c2) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON (~ (TRIM(vt0.c2, vt1.c1))) WHERE (NULL COLLATE RTRIM) ORDER BY ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END) AND (CAST(vt1.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((vt1.c2) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON (~ (TRIM(vt0.c2, vt1.c1))) ORDER BY ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END) AND (CAST(vt1.c2 AS INTEGER))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((vt1.c2) IS FALSE))IS(vt0.c0)) INNER JOIN vt0 ON (~ (TRIM(vt0.c2, vt1.c1))) WHERE (NULL COLLATE RTRIM) ORDER BY ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END) AND (CAST(vt1.c2 AS INTEGER)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'f751') IS TRUE) THEN ((vt0.c2) IS FALSE) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'f751') IS TRUE) THEN ((vt0.c2) IS FALSE) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'f751') IS TRUE) THEN ((vt0.c2) IS FALSE) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'f751') IS TRUE) THEN ((vt0.c2) IS FALSE) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((x'f751') IS TRUE) THEN ((vt0.c2) IS FALSE) ELSE (NOT (vt0.c0)) END);
SELECT ALL * FROM rt0 WHERE (CAST('0.1543549553229322' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('0.1543549553229322' AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (CAST('0.1543549553229322' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('0.1543549553229322' AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (CAST('0.1543549553229322' AS BLOB));
SELECT ALL * FROM vt1, t0, vt0, rt0 WHERE (LTRIM(load_extension(rt0.c0, t0.c76)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(load_extension(rt0.c0, t0.c76))) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL * FROM vt1, t0, vt0, rt0 WHERE (LTRIM(load_extension(rt0.c0, t0.c76)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(load_extension(rt0.c0, t0.c76))) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL * FROM vt1, t0, vt0, rt0 WHERE (LTRIM(load_extension(rt0.c0, t0.c76)));
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CASE NULL  WHEN 0x49d43e4b THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN 0X49d43e4b THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CASE NULL  WHEN 0x49d43e4b THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN 0X49d43e4b THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CASE NULL  WHEN 0x49d43e4b THEN rt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((- (t0.c76)))>((((vt1.c2))>=((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c76)))>((((vt1.c2))>=((NULL)))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((- (t0.c76)))>((((vt1.c2))>=((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c76)))>((((vt1.c2))>=((NULL)))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((- (t0.c76)))>((((vt1.c2))>=((NULL))))));
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c2)))AND(vt1.c2)))*(((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c2)))AND(vt1.c2)))*(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c2)))AND(vt1.c2)))*(((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c2)))AND(vt1.c2)))*(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE (((((((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c2)))AND(vt1.c2)))*(((vt0.c1)!=(vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((CAST(x'' AS INTEGER))) AND ((((vt0.c2)OR(vt0.c0)))))) ORDER BY (NOT ((~ (vt0.c1)))) ASC, CAST((vt0.c0 IN ()) AS BLOB) ASC, CAST(((vt0.c2) BETWEEN (0X1aebb28d) AND ('-1921623121')) AS BLOB) DESC, ((((('-1551471158')GLOB(0X611e25a1))))=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((CAST(x'' AS INTEGER))) AND ((((vt0.c2)OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((~ (vt0.c1)))) ASC, CAST((vt0.c0 IN ()) AS BLOB) ASC, CAST(((vt0.c2) BETWEEN (0X1aebb28d) AND ('-1921623121')) AS BLOB) DESC, ((((('-1551471158')GLOB(0X611e25a1))))==((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((CAST(x'' AS INTEGER))) AND ((((vt0.c2)OR(vt0.c0)))))) ORDER BY (NOT ((~ (vt0.c1)))) ASC, CAST((vt0.c0 IN ()) AS BLOB) ASC, CAST(((vt0.c2) BETWEEN (0X1aebb28d) AND ('-1921623121')) AS BLOB) DESC, ((((('-1551471158')GLOB(0X611e25a1))))=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((CAST(x'' AS INTEGER))) AND ((((vt0.c2)OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((~ (vt0.c1)))) ASC, CAST((vt0.c0 IN ()) AS BLOB) ASC, CAST(((vt0.c2) BETWEEN (0X1aebb28d) AND ('-1921623121')) AS BLOB) DESC, ((((('-1551471158')GLOB(0X611e25a1))))==((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((CAST(x'' AS INTEGER))) AND ((((vt0.c2)OR(vt0.c0)))))) ORDER BY (NOT ((~ (vt0.c1)))) ASC, CAST((vt0.c0 IN ()) AS BLOB) ASC, CAST(((vt0.c2) BETWEEN (0X1aebb28d) AND ('-1921623121')) AS BLOB) DESC, ((((('-1551471158')GLOB(0X611e25a1))))=((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 2.5827406E8 END)OR((NULL IN ()))))AND((vt0.c2 IN (vt0.c1, rt0.c0)))) FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(0.8460080477183568)) WHERE ((- (CASE WHEN vt0.c0 THEN rt0.c1 END))) ORDER BY ((('353584698', vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)IS NOT(rt0.c3)), vt0.c2 COLLATE BINARY, ((t0.c76) IS FALSE))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((((vt0.c0)AND(rt0.c1)))OR(0.16265809856826297)), (('451654285')GLOB(rt0.c0))))) ASC, (- ((+ (t0.c76)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 2.5827406E8 END)OR((NULL IN ()))))AND((vt0.c2 IN (vt0.c1, rt0.c0)))) FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(0.8460080477183568)) ORDER BY ((('353584698', vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)IS NOT(rt0.c3)), vt0.c2 COLLATE BINARY, ((t0.c76) IS FALSE))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((((vt0.c0)AND(rt0.c1)))OR(0.16265809856826297)), (('451654285')GLOB(rt0.c0))))) ASC, (- ((+ (t0.c76)))) DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 2.5827406E8 END)OR((NULL IN ()))))AND((vt0.c2 IN (vt0.c1, rt0.c0)))) FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(0.8460080477183568)) WHERE ((- (CASE WHEN vt0.c0 THEN rt0.c1 END))) ORDER BY ((('353584698', vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)IS NOT(rt0.c3)), vt0.c2 COLLATE BINARY, ((t0.c76) IS FALSE))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((((vt0.c0)AND(rt0.c1)))OR(0.16265809856826297)), (('451654285')GLOB(rt0.c0))))) ASC, (- ((+ (t0.c76)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 2.5827406E8 END)OR((NULL IN ()))))AND((vt0.c2 IN (vt0.c1, rt0.c0)))) FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(0.8460080477183568)) ORDER BY ((('353584698', vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)IS NOT(rt0.c3)), vt0.c2 COLLATE BINARY, ((t0.c76) IS FALSE))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((((vt0.c0)AND(rt0.c1)))OR(0.16265809856826297)), (('451654285')GLOB(rt0.c0))))) ASC, (- ((+ (t0.c76)))) DESC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE 2.5827406E8 END)OR((NULL IN ()))))AND((vt0.c2 IN (vt0.c1, rt0.c0)))) FULL OUTER JOIN t0 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))*(0.8460080477183568)) WHERE ((- (CASE WHEN vt0.c0 THEN rt0.c1 END))) ORDER BY ((('353584698', vt0.c1, rt0.c1)) BETWEEN ((((vt0.c0)IS NOT(rt0.c3)), vt0.c2 COLLATE BINARY, ((t0.c76) IS FALSE))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((((vt0.c0)AND(rt0.c1)))OR(0.16265809856826297)), (('451654285')GLOB(rt0.c0))))) ASC, (- ((+ (t0.c76)))) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 INDEXED BY i94 WHERE ((NOT (((rt0.c0) IS FALSE)))) ORDER BY ((+ (rt0.c0)) IN ()) DESC  NULLS FIRST, CAST(vt1.c0 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0 INDEXED BY i94 ORDER BY ((+ (rt0.c0)) IN ()) DESC  NULLS FIRST, CAST(vt1.c0 AS TEXT) COLLATE RTRIM);
SELECT * FROM vt1, rt0 INDEXED BY i94 WHERE ((NOT (((rt0.c0) IS FALSE)))) ORDER BY ((+ (rt0.c0)) IN ()) DESC  NULLS FIRST, CAST(vt1.c0 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0 INDEXED BY i94 ORDER BY ((+ (rt0.c0)) IN ()) DESC  NULLS FIRST, CAST(vt1.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(3.53584698E8 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(3.53584698E8 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(3.53584698E8 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(3.53584698E8 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(3.53584698E8 AS REAL));
SELECT * FROM t0, vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))<=(('', vt1.c1, vt1.c0))) THEN 'Wd' WHEN (vt1.c2 IN (t0.c76)) THEN ((vt1.c0)IS(vt1.c2)) WHEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (~ (vt1.c2)) WHEN highlight(vt1.c0, t0.c76, vt1.c2, vt1.c0) THEN ((vt1.c2)IS NOT(t0.c76)) WHEN CAST(vt1.c1 AS REAL) THEN vt1.c2 COLLATE RTRIM ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))<=(('', vt1.c1, vt1.c0))) THEN 'Wd' WHEN (vt1.c2 IN (t0.c76)) THEN ((vt1.c0)IS(vt1.c2)) WHEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (~ (vt1.c2)) WHEN highlight(vt1.c0, t0.c76, vt1.c2, vt1.c0) THEN ((vt1.c2)IS NOT(t0.c76)) WHEN CAST(vt1.c1 AS REAL) THEN vt1.c2 COLLATE RTRIM ELSE vt1.c0 END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))<=(('', vt1.c1, vt1.c0))) THEN 'Wd' WHEN (vt1.c2 IN (t0.c76)) THEN ((vt1.c0)IS(vt1.c2)) WHEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (~ (vt1.c2)) WHEN highlight(vt1.c0, t0.c76, vt1.c2, vt1.c0) THEN ((vt1.c2)IS NOT(t0.c76)) WHEN CAST(vt1.c1 AS REAL) THEN vt1.c2 COLLATE RTRIM ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))<=(('', vt1.c1, vt1.c0))) THEN 'Wd' WHEN (vt1.c2 IN (t0.c76)) THEN ((vt1.c0)IS(vt1.c2)) WHEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (~ (vt1.c2)) WHEN highlight(vt1.c0, t0.c76, vt1.c2, vt1.c0) THEN ((vt1.c2)IS NOT(t0.c76)) WHEN CAST(vt1.c1 AS REAL) THEN vt1.c2 COLLATE RTRIM ELSE vt1.c0 END) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c1, vt1.c2))<=(('', vt1.c1, vt1.c0))) THEN 'Wd' WHEN (vt1.c2 IN (t0.c76)) THEN ((vt1.c0)IS(vt1.c2)) WHEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN (~ (vt1.c2)) WHEN highlight(vt1.c0, t0.c76, vt1.c2, vt1.c0) THEN ((vt1.c2)IS NOT(t0.c76)) WHEN CAST(vt1.c1 AS REAL) THEN vt1.c2 COLLATE RTRIM ELSE vt1.c0 END);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '953011234' RIGHT OUTER JOIN rt0 ON ((vt0.c1) IS FALSE) RIGHT OUTER JOIN t0 ON (((((vt1.c2))<=((rt0.c1)))) IS TRUE) WHERE (((((NULL) BETWEEN (vt0.c2) AND (rt0.c1)))>((((vt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))) ORDER BY CAST(NULL AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c2) AND (rt0.c1)))>((((vt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON '953011234' RIGHT OUTER JOIN rt0 ON ((vt0.c1) IS FALSE) RIGHT OUTER JOIN t0 ON (((((vt1.c2))<=((rt0.c1)))) IS TRUE) ORDER BY CAST(NULL AS TEXT) DESC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '953011234' RIGHT OUTER JOIN rt0 ON ((vt0.c1) IS FALSE) RIGHT OUTER JOIN t0 ON (((((vt1.c2))<=((rt0.c1)))) IS TRUE) WHERE (((((NULL) BETWEEN (vt0.c2) AND (rt0.c1)))>((((vt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))) ORDER BY CAST(NULL AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c2) AND (rt0.c1)))>((((vt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON '953011234' RIGHT OUTER JOIN rt0 ON ((vt0.c1) IS FALSE) RIGHT OUTER JOIN t0 ON (((((vt1.c2))<=((rt0.c1)))) IS TRUE) ORDER BY CAST(NULL AS TEXT) DESC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '953011234' RIGHT OUTER JOIN rt0 ON ((vt0.c1) IS FALSE) RIGHT OUTER JOIN t0 ON (((((vt1.c2))<=((rt0.c1)))) IS TRUE) WHERE (((((NULL) BETWEEN (vt0.c2) AND (rt0.c1)))>((((vt0.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))))) ORDER BY CAST(NULL AS TEXT) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN (NULL IN (rt0.c0, rt0.c3)) WHEN CAST(rt0.c2 AS NUMERIC) THEN LIKELIHOOD(rt0.c2, 0.16744720941721014) WHEN (- (rt0.c2)) THEN ((x'')<(rt0.c1)) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) END) ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST, (rt0.c3 COLLATE RTRIM IN ()) ASC, ((rt0.c2) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND ('-1065470452'))) AND ((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN (NULL IN (rt0.c0, rt0.c3)) WHEN CAST(rt0.c2 AS NUMERIC) THEN LIKELIHOOD(rt0.c2, 0.16744720941721014) WHEN (- (rt0.c2)) THEN ((x'')<(rt0.c1)) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST, (rt0.c3 COLLATE RTRIM IN ()) ASC, ((rt0.c2) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND ('-1065470452'))) AND ((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN (NULL IN (rt0.c0, rt0.c3)) WHEN CAST(rt0.c2 AS NUMERIC) THEN LIKELIHOOD(rt0.c2, 0.16744720941721014) WHEN (- (rt0.c2)) THEN ((x'')<(rt0.c1)) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) END) ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST, (rt0.c3 COLLATE RTRIM IN ()) ASC, ((rt0.c2) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND ('-1065470452'))) AND ((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN (NULL IN (rt0.c0, rt0.c3)) WHEN CAST(rt0.c2 AS NUMERIC) THEN LIKELIHOOD(rt0.c2, 0.16744720941721014) WHEN (- (rt0.c2)) THEN ((x'')<(rt0.c1)) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST, (rt0.c3 COLLATE RTRIM IN ()) ASC, ((rt0.c2) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND ('-1065470452'))) AND ((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))  WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END THEN (NULL IN (rt0.c0, rt0.c3)) WHEN CAST(rt0.c2 AS NUMERIC) THEN LIKELIHOOD(rt0.c2, 0.16744720941721014) WHEN (- (rt0.c2)) THEN ((x'')<(rt0.c1)) ELSE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) END) ORDER BY CAST(rt0.c2 AS REAL) COLLATE BINARY DESC  NULLS FIRST, (rt0.c3 COLLATE RTRIM IN ()) ASC, ((rt0.c2) BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND ('-1065470452'))) AND ((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, rt0.c0, rt0.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((((((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))OR(rt0.c3)))AND(vt1.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((((((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))OR(rt0.c3)))AND(vt1.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((((((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))OR(rt0.c3)))AND(vt1.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((((((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))OR(rt0.c3)))AND(vt1.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(((((((((vt1.c2)OR(vt1.c1)))OR(vt1.c2)))OR(rt0.c3)))AND(vt1.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (((x'') NOT NULL)))) ORDER BY CAST(NULLIF(DISTINCT rt0.c3, rt0.c1) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULLIF(DISTINCT rt0.c3, rt0.c1) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (((x'') NOT NULL)))) ORDER BY CAST(NULLIF(DISTINCT rt0.c3, rt0.c1) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULLIF(DISTINCT rt0.c3, rt0.c1) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (((x'') NOT NULL)))) ORDER BY CAST(NULLIF(DISTINCT rt0.c3, rt0.c1) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ('0.7835098670017526');
SELECT SUM(count) FROM (SELECT (('0.7835098670017526') IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ('0.7835098670017526');
SELECT SUM(count) FROM (SELECT (('0.7835098670017526') IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ('0.7835098670017526');
SELECT * FROM rt0 WHERE ((((((rt0.c0)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)), TYPEOF(DISTINCT NULL)))<(((((rt0.c1, NULL, 0.25383864178505844))<=((rt0.c3, rt0.c0, rt0.c1))), (NULL IN ()), rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)), TYPEOF(DISTINCT NULL)))<(((((rt0.c1, NULL, 0.25383864178505844))<=((rt0.c3, rt0.c0, rt0.c1))), (NULL IN ()), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)), TYPEOF(DISTINCT NULL)))<(((((rt0.c1, NULL, 0.25383864178505844))<=((rt0.c3, rt0.c0, rt0.c1))), (NULL IN ()), rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)), TYPEOF(DISTINCT NULL)))<(((((rt0.c1, NULL, 0.25383864178505844))<=((rt0.c3, rt0.c0, rt0.c1))), (NULL IN ()), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)), TYPEOF(DISTINCT NULL)))<(((((rt0.c1, NULL, 0.25383864178505844))<=((rt0.c3, rt0.c0, rt0.c1))), (NULL IN ()), rt0.c2 COLLATE RTRIM))));
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END AS INTEGER)) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT), x'' ASC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>>(((rt0.c3)%(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT), x'' ASC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>>(((rt0.c3)%(rt0.c2)))) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END AS INTEGER)) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT), x'' ASC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>>(((rt0.c3)%(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT), x'' ASC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>>(((rt0.c3)%(rt0.c2)))) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END AS INTEGER)) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT), x'' ASC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>>(((rt0.c3)%(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM) ORDER BY ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1 NOT INDEXED ORDER BY ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM) ORDER BY ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt1 NOT INDEXED ORDER BY ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM) ORDER BY ((((((((((vt1.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c3 IN ())))!=((CAST(rt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ())))!=((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c3 IN ())))!=((CAST(rt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ())))!=((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c3 IN ())))!=((CAST(rt0.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((TRIM(DISTINCT vt0.c2))OR(vt0.c2)))AND(((rt0.c1) IS FALSE)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN rt0.c3 WHEN vt1.c2 THEN rt0.c3 ELSE rt0.c0 END)>=(((((((((vt0.c2)OR(vt0.c0)))OR(vt1.c1)))AND(NULL)))AND(x'1d7b'))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c2))OR(vt0.c2)))AND(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN rt0.c3 WHEN vt1.c2 THEN rt0.c3 ELSE rt0.c0 END)>=(((((((((vt0.c2)OR(vt0.c0)))OR(vt1.c1)))AND(NULL)))AND(x'1d7b')))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((TRIM(DISTINCT vt0.c2))OR(vt0.c2)))AND(((rt0.c1) IS FALSE)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN rt0.c3 WHEN vt1.c2 THEN rt0.c3 ELSE rt0.c0 END)>=(((((((((vt0.c2)OR(vt0.c0)))OR(vt1.c1)))AND(NULL)))AND(x'1d7b'))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c2))OR(vt0.c2)))AND(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN rt0.c3 WHEN vt1.c2 THEN rt0.c3 ELSE rt0.c0 END)>=(((((((((vt0.c2)OR(vt0.c0)))OR(vt1.c1)))AND(NULL)))AND(x'1d7b')))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((TRIM(DISTINCT vt0.c2))OR(vt0.c2)))AND(((rt0.c1) IS FALSE)))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c2 THEN rt0.c3 WHEN vt1.c2 THEN rt0.c3 ELSE rt0.c0 END)>=(((((((((vt0.c2)OR(vt0.c0)))OR(vt1.c1)))AND(NULL)))AND(x'1d7b'))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_array_length(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((json_array_length(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_array_length(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((json_array_length(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c2 IN ()))*(rt0.c3))) ORDER BY CAST(JULIANDAY(rt0.c0, NULL, rt0.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))*(rt0.c3))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(JULIANDAY(rt0.c0, NULL, rt0.c0) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c2 IN ()))*(rt0.c3))) ORDER BY CAST(JULIANDAY(rt0.c0, NULL, rt0.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))*(rt0.c3))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(JULIANDAY(rt0.c0, NULL, rt0.c0) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c2 IN ()))*(rt0.c3))) ORDER BY CAST(JULIANDAY(rt0.c0, NULL, rt0.c0) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (0.9383255419705974);
SELECT SUM(count) FROM (SELECT ALL ((0.9383255419705974) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.9383255419705974);
SELECT SUM(count) FROM (SELECT ALL ((0.9383255419705974) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.9383255419705974);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c1)AND(t0.c76)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(t0.c76)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c1)AND(t0.c76)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(t0.c76)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((((rt0.c1)AND(t0.c76)))AND(vt0.c0))) NOTNULL));
SELECT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON LTRIM(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)), '^[Tc倿b a') CROSS JOIN t0 ON ((((t0.c76 IN ()), ((rt0.c1) BETWEEN (vt1.c2) AND (vt1.c2)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))>((vt0.c1 COLLATE BINARY, ((vt1.c2) ISNULL), (rt0.c1 IN ())))) WHERE ((((t0.c76 IN (NULL))) NOT NULL)) ORDER BY CAST(((vt1.c1)%(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76 IN (NULL))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON LTRIM(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)), '^[Tc倿b a') CROSS JOIN t0 ON ((((t0.c76 IN ()), ((rt0.c1) BETWEEN (vt1.c2) AND (vt1.c2)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))>((vt0.c1 COLLATE BINARY, ((vt1.c2) ISNULL), (rt0.c1 IN ())))) ORDER BY CAST(((vt1.c1)%(vt1.c0)) AS INTEGER) ASC);
SELECT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON LTRIM(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)), '^[Tc倿b a') CROSS JOIN t0 ON ((((t0.c76 IN ()), ((rt0.c1) BETWEEN (vt1.c2) AND (vt1.c2)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))>((vt0.c1 COLLATE BINARY, ((vt1.c2) ISNULL), (rt0.c1 IN ())))) WHERE ((((t0.c76 IN (NULL))) NOT NULL)) ORDER BY CAST(((vt1.c1)%(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76 IN (NULL))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON LTRIM(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)), '^[Tc倿b a') CROSS JOIN t0 ON ((((t0.c76 IN ()), ((rt0.c1) BETWEEN (vt1.c2) AND (vt1.c2)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))>((vt0.c1 COLLATE BINARY, ((vt1.c2) ISNULL), (rt0.c1 IN ())))) ORDER BY CAST(((vt1.c1)%(vt1.c0)) AS INTEGER) ASC);
SELECT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON LTRIM(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)), '^[Tc倿b a') CROSS JOIN t0 ON ((((t0.c76 IN ()), ((rt0.c1) BETWEEN (vt1.c2) AND (vt1.c2)), ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))>((vt0.c1 COLLATE BINARY, ((vt1.c2) ISNULL), (rt0.c1 IN ())))) WHERE ((((t0.c76 IN (NULL))) NOT NULL)) ORDER BY CAST(((vt1.c1)%(vt1.c0)) AS INTEGER) ASC;
SELECT * FROM t0, vt0, rt0 WHERE (((CASE WHEN t0.c76 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((0x7cc80942)&(t0.c76)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c76 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((vt0.c0)<>(vt0.c1))) AND (((0x7cc80942)&(t0.c76))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((CASE WHEN t0.c76 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((0x7cc80942)&(t0.c76)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c76 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((vt0.c0)<>(vt0.c1))) AND (((0x7cc80942)&(t0.c76))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((CASE WHEN t0.c76 THEN rt0.c0 ELSE vt0.c1 END) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((0x7cc80942)&(t0.c76)))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE ((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) END) ORDER BY TYPEOF(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE ((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE ((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) END) ORDER BY TYPEOF(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE ((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE ((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) END) ORDER BY TYPEOF(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT * FROM t0 WHERE ((+ (CASE t0.c76  WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END))) ORDER BY ((t0.c76 COLLATE RTRIM) BETWEEN ((((t0.c76, t0.c76, t0.c76))<=((t0.c76, t0.c76, t0.c76)))) AND (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))) ASC  NULLS LAST, ((((((((((((((((t0.c76)OR(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(HEX(DISTINCT t0.c76))))AND(x'')))AND((t0.c76 IN ()))))AND(((((((((t0.c76)AND(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR('1158218652')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t0.c76  WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c76 COLLATE RTRIM) BETWEEN ((((t0.c76, t0.c76, t0.c76))<=((t0.c76, t0.c76, t0.c76)))) AND (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))) ASC  NULLS LAST, ((((((((((((((((t0.c76)OR(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(HEX(DISTINCT t0.c76))))AND(x'')))AND((t0.c76 IN ()))))AND(((((((((t0.c76)AND(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR('1158218652')))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((+ (CASE t0.c76  WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END))) ORDER BY ((t0.c76 COLLATE RTRIM) BETWEEN ((((t0.c76, t0.c76, t0.c76))<=((t0.c76, t0.c76, t0.c76)))) AND (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))) ASC  NULLS LAST, ((((((((((((((((t0.c76)OR(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(HEX(DISTINCT t0.c76))))AND(x'')))AND((t0.c76 IN ()))))AND(((((((((t0.c76)AND(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR('1158218652')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t0.c76  WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c76 COLLATE RTRIM) BETWEEN ((((t0.c76, t0.c76, t0.c76))<=((t0.c76, t0.c76, t0.c76)))) AND (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR(t0.c76)))) ASC  NULLS LAST, ((((((((((((((((t0.c76)OR(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))AND(HEX(DISTINCT t0.c76))))AND(x'')))AND((t0.c76 IN ()))))AND(((((((((t0.c76)AND(t0.c76)))OR(t0.c76)))OR(t0.c76)))OR('1158218652')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT ABS(vt1.c2)) INNER JOIN rt0 ON ((((vt0.c0) IS FALSE))LIKE(vt0.c1 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((((((rt0.c3)OR(x'ef3d')))AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c1)))) WHERE (json_patch(DATETIME('0.6382071342519733', t0.c76, rt0.c0, rt0.c3, rt0.c2), (((NULL))<=((0.18512396110107254)))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(DATETIME('0.6382071342519733', t0.c76, rt0.c0, rt0.c3, rt0.c2), (((NULL))<=((0.18512396110107254))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT ABS(vt1.c2)) INNER JOIN rt0 ON ((((vt0.c0) IS FALSE))LIKE(vt0.c1 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((((((rt0.c3)OR(x'ef3d')))AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT ABS(vt1.c2)) INNER JOIN rt0 ON ((((vt0.c0) IS FALSE))LIKE(vt0.c1 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((((((rt0.c3)OR(x'ef3d')))AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c1)))) WHERE (json_patch(DATETIME('0.6382071342519733', t0.c76, rt0.c0, rt0.c3, rt0.c2), (((NULL))<=((0.18512396110107254)))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(DATETIME('0.6382071342519733', t0.c76, rt0.c0, rt0.c3, rt0.c2), (((NULL))<=((0.18512396110107254))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT ABS(vt1.c2)) INNER JOIN rt0 ON ((((vt0.c0) IS FALSE))LIKE(vt0.c1 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((((((rt0.c3)OR(x'ef3d')))AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT ABS(vt1.c2)) INNER JOIN rt0 ON ((((vt0.c0) IS FALSE))LIKE(vt0.c1 COLLATE BINARY)) LEFT OUTER JOIN t0 ON ((vt0.c0) NOT BETWEEN (rt0.c0) AND (((((((((rt0.c3)OR(x'ef3d')))AND(rt0.c0)))OR(rt0.c2)))AND(vt1.c1)))) WHERE (json_patch(DATETIME('0.6382071342519733', t0.c76, rt0.c0, rt0.c3, rt0.c2), (((NULL))<=((0.18512396110107254)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c1 AS REAL) IN ()) INNER JOIN rt0 ON CASE WHEN t0.c76 COLLATE RTRIM THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.8241765894587615 END WHERE (((((((((vt0.c2)OR(rt0.c0)))AND('')))OR(vt0.c2)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((rt0.c2) NOTNULL), rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2)OR(rt0.c0)))AND('')))OR(vt0.c2)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c1 AS REAL) IN ()) INNER JOIN rt0 ON CASE WHEN t0.c76 COLLATE RTRIM THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.8241765894587615 END ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((rt0.c2) NOTNULL), rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c1 AS REAL) IN ()) INNER JOIN rt0 ON CASE WHEN t0.c76 COLLATE RTRIM THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.8241765894587615 END WHERE (((((((((vt0.c2)OR(rt0.c0)))AND('')))OR(vt0.c2)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((rt0.c2) NOTNULL), rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2)OR(rt0.c0)))AND('')))OR(vt0.c2)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c1 AS REAL) IN ()) INNER JOIN rt0 ON CASE WHEN t0.c76 COLLATE RTRIM THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.8241765894587615 END ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((rt0.c2) NOTNULL), rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (CAST(vt1.c1 AS REAL) IN ()) INNER JOIN rt0 ON CASE WHEN t0.c76 COLLATE RTRIM THEN CAST(rt0.c2 AS NUMERIC) ELSE 0.8241765894587615 END WHERE (((((((((vt0.c2)OR(rt0.c0)))AND('')))OR(vt0.c2)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((rt0.c2) NOTNULL), rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((vt0.c0) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END)*(t0.c76)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END)*(t0.c76))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END)*(t0.c76)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END)*(t0.c76))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END)*(t0.c76)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, 0.41937702138831123)) AND (((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY (((((rt0.c3))<((rt0.c3))))+(((rt0.c1) NOTNULL))), (+ (json_array(rt0.c1, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, 0.41937702138831123)) AND (((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3))<((rt0.c3))))+(((rt0.c1) NOTNULL))), (+ (json_array(rt0.c1, rt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, 0.41937702138831123)) AND (((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY (((((rt0.c3))<((rt0.c3))))+(((rt0.c1) NOTNULL))), (+ (json_array(rt0.c1, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, 0.41937702138831123)) AND (((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3))<((rt0.c3))))+(((rt0.c1) NOTNULL))), (+ (json_array(rt0.c1, rt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, 0.41937702138831123)) AND (((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY (((((rt0.c3))<((rt0.c3))))+(((rt0.c1) NOTNULL))), (+ (json_array(rt0.c1, rt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((((t0.c76)AND(vt0.c1)))AND(rt0.c1)) ELSE ((x'14a2') NOTNULL) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE))IS(0xffffffffb34b0aa1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((((t0.c76)AND(vt0.c1)))AND(rt0.c1)) ELSE ((x'14a2') NOTNULL) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE))IS(0Xffffffffb34b0aa1 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((((t0.c76)AND(vt0.c1)))AND(rt0.c1)) ELSE ((x'14a2') NOTNULL) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE))IS(0xffffffffb34b0aa1 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((((t0.c76)AND(vt0.c1)))AND(rt0.c1)) ELSE ((x'14a2') NOTNULL) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE))IS(0Xffffffffb34b0aa1 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((((t0.c76)AND(vt0.c1)))AND(rt0.c1)) ELSE ((x'14a2') NOTNULL) END DESC  NULLS LAST, ((((rt0.c3) IS FALSE))IS(0xffffffffb34b0aa1 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2))>((vt0.c0)))) ISNULL) CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN (- (rt0.c2)) END WHERE (((((((vt0.c2)AND(rt0.c0)))OR(0.9147848889016592))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)AND(rt0.c0)))OR(0.9147848889016592))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2))>((vt0.c0)))) ISNULL) CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN (- (rt0.c2)) END);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2))>((vt0.c0)))) ISNULL) CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN (- (rt0.c2)) END WHERE (((((((vt0.c2)AND(rt0.c0)))OR(0.9147848889016592))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)AND(rt0.c0)))OR(0.9147848889016592))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((rt0.c2))>((vt0.c0)))) ISNULL) CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN (- (rt0.c2)) END);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT NULL)) ORDER BY CASE ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2)|(rt0.c0)) THEN ((rt0.c3)OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2)|(rt0.c0)) THEN ((rt0.c3)OR(rt0.c2)) END);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT NULL)) ORDER BY CASE ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2)|(rt0.c0)) THEN ((rt0.c3)OR(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2)|(rt0.c0)) THEN ((rt0.c3)OR(rt0.c2)) END);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT NULL)) ORDER BY CASE ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2)|(rt0.c0)) THEN ((rt0.c3)OR(rt0.c2)) END;
SELECT ALL * FROM t0, vt0 INDEXED BY i94 WHERE (CASE WHEN (((vt0.c0, vt0.c1, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c2))) THEN ((t0.c76)&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c1, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c2))) THEN ((t0.c76)&(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 INDEXED BY i94);
SELECT ALL * FROM t0, vt0 INDEXED BY i94 WHERE (CASE WHEN (((vt0.c0, vt0.c1, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c2))) THEN ((t0.c76)&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c1, vt0.c2))>=((vt0.c0, vt0.c2, vt0.c2))) THEN ((t0.c76)&(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 INDEXED BY i94);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((vt1.c1)<(NULL)))OR((((vt1.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))))AND((rt0.c2 IN ())))) ORDER BY ((CASE vt1.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)==(vt1.c0)), -1.286927711E9 DESC  NULLS FIRST, (vt1.c2 IN (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)<(NULL)))OR((((vt1.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE vt1.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)==(vt1.c0)), -1.286927711E9 DESC  NULLS FIRST, (vt1.c2 IN (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((vt1.c1)<(NULL)))OR((((vt1.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))))AND((rt0.c2 IN ())))) ORDER BY ((CASE vt1.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)==(vt1.c0)), -1.286927711E9 DESC  NULLS FIRST, (vt1.c2 IN (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)<(NULL)))OR((((vt1.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE vt1.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)==(vt1.c0)), -1.286927711E9 DESC  NULLS FIRST, (vt1.c2 IN (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((vt1.c1)<(NULL)))OR((((vt1.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))))AND((rt0.c2 IN ())))) ORDER BY ((CASE vt1.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)==(vt1.c0)), -1.286927711E9 DESC  NULLS FIRST, (vt1.c2 IN (rt0.c1)) COLLATE NOCASE;
SELECT * FROM vt0, rt0 WHERE (CASE 0Xf292222  WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE 0xf292222  WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE 0Xf292222  WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE 0xf292222  WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE 0Xf292222  WHEN vt0.c1 THEN rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)-(vt1.c1))))) ORDER BY (((((vt1.c0) IS TRUE)))!=(((vt1.c0 IN ())))), CASE WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)-(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) IS TRUE)))!=(((vt1.c0 IN ())))), CASE WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) IS FALSE) END DESC);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)-(vt1.c1))))) ORDER BY (((((vt1.c0) IS TRUE)))!=(((vt1.c0 IN ())))), CASE WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) IS FALSE) END DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)-(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) IS TRUE)))!=(((vt1.c0 IN ())))), CASE WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) IS FALSE) END DESC);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)-(vt1.c1))))) ORDER BY (((((vt1.c0) IS TRUE)))!=(((vt1.c0 IN ())))), CASE WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) IS FALSE) END DESC;
SELECT * FROM vt0, rt0, t0 NOT INDEXED WHERE ((((((((t0.c76)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(((((vt0.c2)AND(rt0.c2)))OR(rt0.c3)))))AND((('1475883432')>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c76)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(((((vt0.c2)AND(rt0.c2)))OR(rt0.c3)))))AND((('1475883432')>(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 NOT INDEXED WHERE ((((((((t0.c76)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(((((vt0.c2)AND(rt0.c2)))OR(rt0.c3)))))AND((('1475883432')>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c76)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(((((vt0.c2)AND(rt0.c2)))OR(rt0.c3)))))AND((('1475883432')>(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 NOT INDEXED WHERE ((((((((t0.c76)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(((((vt0.c2)AND(rt0.c2)))OR(rt0.c3)))))AND((('1475883432')>(rt0.c3)))));
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))  WHEN LIKELY(DISTINCT vt1.c0) THEN IFNULL(DISTINCT 'N6,.*e촙闡j', t0.c76) END) ORDER BY (~ (CAST(vt0.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))  WHEN LIKELY(DISTINCT vt1.c0) THEN IFNULL(DISTINCT 'N6,.*e촙闡j', t0.c76) END) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (~ (CAST(vt0.c2 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))  WHEN LIKELY(DISTINCT vt1.c0) THEN IFNULL(DISTINCT 'N6,.*e촙闡j', t0.c76) END) ORDER BY (~ (CAST(vt0.c2 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))  WHEN LIKELY(DISTINCT vt1.c0) THEN IFNULL(DISTINCT 'N6,.*e촙闡j', t0.c76) END) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY (~ (CAST(vt0.c2 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))  WHEN LIKELY(DISTINCT vt1.c0) THEN IFNULL(DISTINCT 'N6,.*e촙闡j', t0.c76) END) ORDER BY (~ (CAST(vt0.c2 AS NUMERIC))) ASC;
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) COLLATE BINARY) ORDER BY ((((((((x'0f20')OR(CAST(vt1.c2 AS BLOB))))AND((((vt0.c1, x'763a', rt0.c1, rt0.c2, vt0.c2))>((rt0.c3, vt1.c2, rt0.c2, t0.c76, rt0.c1))))))AND(-1251049777)))OR((((rt0.c1))<((0Xfffffffff4a0c70a))))) ASC, (((rt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((vt1.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((((((x'0f20')OR(CAST(vt1.c2 AS BLOB))))AND((((vt0.c1, x'763a', rt0.c1, rt0.c2, vt0.c2))>((rt0.c3, vt1.c2, rt0.c2, t0.c76, rt0.c1))))))AND(-1251049777)))OR((((rt0.c1))<((0xfffffffff4a0c70a))))) ASC, (((rt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((vt1.c0)IS(vt0.c0)))));
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) COLLATE BINARY) ORDER BY ((((((((x'0f20')OR(CAST(vt1.c2 AS BLOB))))AND((((vt0.c1, x'763a', rt0.c1, rt0.c2, vt0.c2))>((rt0.c3, vt1.c2, rt0.c2, t0.c76, rt0.c1))))))AND(-1251049777)))OR((((rt0.c1))<((0Xfffffffff4a0c70a))))) ASC, (((rt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((vt1.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((((((x'0f20')OR(CAST(vt1.c2 AS BLOB))))AND((((vt0.c1, x'763a', rt0.c1, rt0.c2, vt0.c2))>((rt0.c3, vt1.c2, rt0.c2, t0.c76, rt0.c1))))))AND(-1251049777)))OR((((rt0.c1))<((0xfffffffff4a0c70a))))) ASC, (((rt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((vt1.c0)IS(vt0.c0)))));
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) COLLATE BINARY) ORDER BY ((((((((x'0f20')OR(CAST(vt1.c2 AS BLOB))))AND((((vt0.c1, x'763a', rt0.c1, rt0.c2, vt0.c2))>((rt0.c3, vt1.c2, rt0.c2, t0.c76, rt0.c1))))))AND(-1251049777)))OR((((rt0.c1))<((0Xfffffffff4a0c70a))))) ASC, (((rt0.c1 IN ())) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((vt1.c0)IS(vt0.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((('0.5364776948054726')AND(rt0.c1)))AND(rt0.c3)) COLLATE NOCASE WHERE ((+ (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c2))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((('0.5364776948054726')AND(rt0.c1)))AND(rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((('0.5364776948054726')AND(rt0.c1)))AND(rt0.c3)) COLLATE NOCASE WHERE ((+ (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c2))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((('0.5364776948054726')AND(rt0.c1)))AND(rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((('0.5364776948054726')AND(rt0.c1)))AND(rt0.c3)) COLLATE NOCASE WHERE ((+ (vt0.c2)));
SELECT ALL * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('');
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND (('뉩', rt0.c1, rt0.c2))))>=((rt0.c3 IN ())))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND ((((rt0.c2))<=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND (('뉩', rt0.c1, rt0.c2))))>=((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND ((((rt0.c2))<=((rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND (('뉩', rt0.c1, rt0.c2))))>=((rt0.c3 IN ())))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND ((((rt0.c2))<=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND (('뉩', rt0.c1, rt0.c2))))>=((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND ((((rt0.c2))<=((rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND (('뉩', rt0.c1, rt0.c2))))>=((rt0.c3 IN ())))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2)))) AND ((((rt0.c2))<=((rt0.c0))))) DESC;
SELECT * FROM vt0, vt1, rt0 WHERE (']Jz');
SELECT SUM(count) FROM (SELECT ((']Jz') IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (']Jz');
SELECT SUM(count) FROM (SELECT ((']Jz') IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (']Jz');
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((t0.c76, t0.c76, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c2))))) WHERE ((((- (t0.c76))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((- (t0.c76))) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((t0.c76, t0.c76, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c2))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((t0.c76, t0.c76, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c2))))) WHERE ((((- (t0.c76))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((- (t0.c76))) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((t0.c76, t0.c76, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c2))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((t0.c76, t0.c76, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c2))))) WHERE ((((- (t0.c76))) ISNULL));
SELECT * FROM t0, vt0, rt0, vt1 WHERE (CAST(CASE NULL  WHEN vt1.c2 THEN vt1.c0 END AS TEXT)) ORDER BY '1100502428' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN vt1.c2 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY '1100502428' COLLATE NOCASE DESC);
SELECT * FROM t0, vt0, rt0, vt1 WHERE (CAST(CASE NULL  WHEN vt1.c2 THEN vt1.c0 END AS TEXT)) ORDER BY '1100502428' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN vt1.c2 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY '1100502428' COLLATE NOCASE DESC);
SELECT * FROM t0, vt0, rt0, vt1 WHERE (CAST(CASE NULL  WHEN vt1.c2 THEN vt1.c0 END AS TEXT)) ORDER BY '1100502428' COLLATE NOCASE DESC;
SELECT * FROM t0 WHERE ((CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN 0xffffffff82bd88a2 THEN t0.c76 WHEN t0.c76 THEN t0.c76 END IN ((((t0.c76))>=((0.45613849148935326))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN 0xffffffff82bd88a2 THEN t0.c76 WHEN t0.c76 THEN t0.c76 END IN ((((t0.c76))>=((0.45613849148935326)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN 0xffffffff82bd88a2 THEN t0.c76 WHEN t0.c76 THEN t0.c76 END IN ((((t0.c76))>=((0.45613849148935326))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN 0xffffffff82bd88a2 THEN t0.c76 WHEN t0.c76 THEN t0.c76 END IN ((((t0.c76))>=((0.45613849148935326)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN 0xffffffff82bd88a2 THEN t0.c76 WHEN t0.c76 THEN t0.c76 END IN ((((t0.c76))>=((0.45613849148935326))))));
SELECT ALL * FROM vt1 NOT INDEXED, vt0, rt0 INNER JOIN t0 ON (~ (rt0.c0)) COLLATE RTRIM WHERE ((- (((vt1.c1)LIKE(vt1.c2))))) ORDER BY CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN ((((vt0.c2)AND(rt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c1)) ELSE rt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1)LIKE(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 INNER JOIN t0 ON (~ (rt0.c0)) COLLATE RTRIM ORDER BY CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN ((((vt0.c2)AND(rt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c1)) ELSE rt0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, rt0 INNER JOIN t0 ON (~ (rt0.c0)) COLLATE RTRIM WHERE ((- (((vt1.c1)LIKE(vt1.c2))))) ORDER BY CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN ((((vt0.c2)AND(rt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c1)) ELSE rt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1)LIKE(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 INNER JOIN t0 ON (~ (rt0.c0)) COLLATE RTRIM ORDER BY CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN ((((vt0.c2)AND(rt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c1)) ELSE rt0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, rt0 INNER JOIN t0 ON (~ (rt0.c0)) COLLATE RTRIM WHERE ((- (((vt1.c1)LIKE(vt1.c2))))) ORDER BY CASE ((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))  WHEN ((((vt0.c2)AND(rt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c1)) ELSE rt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))AND(rt0.c2)))OR(((vt1.c2) NOT NULL))))OR(((((rt0.c3)OR(t0.c76)))OR(rt0.c3)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) ORDER BY ((((NULL)AND((((vt0.c2))==((rt0.c1))))))AND(((((vt0.c2)AND(rt0.c3)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))AND(rt0.c2)))OR(((vt1.c2) NOT NULL))))OR(((((rt0.c3)OR(t0.c76)))OR(rt0.c3)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((NULL)AND((((vt0.c2))==((rt0.c1))))))AND(((((vt0.c2)AND(rt0.c3)))AND(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))AND(rt0.c2)))OR(((vt1.c2) NOT NULL))))OR(((((rt0.c3)OR(t0.c76)))OR(rt0.c3)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) ORDER BY ((((NULL)AND((((vt0.c2))==((rt0.c1))))))AND(((((vt0.c2)AND(rt0.c3)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))AND(rt0.c2)))OR(((vt1.c2) NOT NULL))))OR(((((rt0.c3)OR(t0.c76)))OR(rt0.c3)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((NULL)AND((((vt0.c2))==((rt0.c1))))))AND(((((vt0.c2)AND(rt0.c3)))AND(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((((((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))))AND(rt0.c2)))OR(((vt1.c2) NOT NULL))))OR(((((rt0.c3)OR(t0.c76)))OR(rt0.c3)))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) ORDER BY ((((NULL)AND((((vt0.c2))==((rt0.c1))))))AND(((((vt0.c2)AND(rt0.c3)))AND(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c3) BETWEEN (t0.c76) AND (rt0.c0)))*(TRIM(NULL, rt0.c2))) WHERE (((-3.73116921E8)||(((rt0.c0) IS FALSE)))) ORDER BY (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN (((rt0.c3) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-3.73116921E8)||(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c3) BETWEEN (t0.c76) AND (rt0.c0)))*(TRIM(NULL, rt0.c2))) ORDER BY (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN (((rt0.c3) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c3) BETWEEN (t0.c76) AND (rt0.c0)))*(TRIM(NULL, rt0.c2))) WHERE (((-3.73116921E8)||(((rt0.c0) IS FALSE)))) ORDER BY (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN (((rt0.c3) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-3.73116921E8)||(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c3) BETWEEN (t0.c76) AND (rt0.c0)))*(TRIM(NULL, rt0.c2))) ORDER BY (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN (((rt0.c3) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c3) BETWEEN (t0.c76) AND (rt0.c0)))*(TRIM(NULL, rt0.c2))) WHERE (((-3.73116921E8)||(((rt0.c0) IS FALSE)))) ORDER BY (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) IN (((rt0.c3) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (CAST(CASE rt0.c3  WHEN vt1.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY (((- (t0.c76))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN vt1.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY (((- (t0.c76))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (CAST(CASE rt0.c3  WHEN vt1.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY (((- (t0.c76))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN vt1.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY (((- (t0.c76))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (CAST(CASE rt0.c3  WHEN vt1.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY (((- (t0.c76))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((((-748087991)OR(vt0.c1)))OR(t0.c76))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((-748087991)OR(vt0.c1)))OR(t0.c76))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((((-748087991)OR(vt0.c1)))OR(t0.c76))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((-748087991)OR(vt0.c1)))OR(t0.c76))) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((((-748087991)OR(vt0.c1)))OR(t0.c76))) NOTNULL));
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c2)) THEN ((NULL)GLOB(vt1.c2)) ELSE ((vt1.c1)>=(vt1.c2)) END) ORDER BY CASE ((vt1.c1) ISNULL)  WHEN ROUND(vt1.c1, vt1.c2) THEN CAST(vt1.c2 AS BLOB) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c2)) THEN ((NULL)GLOB(vt1.c2)) ELSE ((vt1.c1)>=(vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c1) ISNULL)  WHEN ROUND(vt1.c1, vt1.c2) THEN CAST(vt1.c2 AS BLOB) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c2)) THEN ((NULL)GLOB(vt1.c2)) ELSE ((vt1.c1)>=(vt1.c2)) END) ORDER BY CASE ((vt1.c1) ISNULL)  WHEN ROUND(vt1.c1, vt1.c2) THEN CAST(vt1.c2 AS BLOB) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c2)) THEN ((NULL)GLOB(vt1.c2)) ELSE ((vt1.c1)>=(vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c1) ISNULL)  WHEN ROUND(vt1.c1, vt1.c2) THEN CAST(vt1.c2 AS BLOB) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (- (vt1.c2)) THEN ((NULL)GLOB(vt1.c2)) ELSE ((vt1.c1)>=(vt1.c2)) END) ORDER BY CASE ((vt1.c1) ISNULL)  WHEN ROUND(vt1.c1, vt1.c2) THEN CAST(vt1.c2 AS BLOB) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((((rt0.c2)OR(vt0.c2)))AND(rt0.c0))  WHEN ((rt0.c0)&(rt0.c1)) THEN ((vt0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)OR(vt0.c2)))AND(rt0.c0))  WHEN ((rt0.c0)&(rt0.c1)) THEN ((vt0.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((((rt0.c2)OR(vt0.c2)))AND(rt0.c0))  WHEN ((rt0.c0)&(rt0.c1)) THEN ((vt0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c2)OR(vt0.c2)))AND(rt0.c0))  WHEN ((rt0.c0)&(rt0.c1)) THEN ((vt0.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((((rt0.c2)OR(vt0.c2)))AND(rt0.c0))  WHEN ((rt0.c0)&(rt0.c1)) THEN ((vt0.c2) NOTNULL) END);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((((x'992d', vt1.c2, t0.c76)) BETWEEN ((t0.c76, (vt1.c1 IN (t0.c76, rt0.c3)), (NOT ('Hm/b')))) AND (((~ (rt0.c1)), rt0.c0 COLLATE RTRIM, (((t0.c76))<((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((x'992d', vt1.c2, t0.c76)) BETWEEN ((t0.c76, (vt1.c1 IN (t0.c76, rt0.c3)), (NOT ('Hm/b')))) AND (((~ (rt0.c1)), rt0.c0 COLLATE RTRIM, (((t0.c76))<((rt0.c2))))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((((x'992d', vt1.c2, t0.c76)) BETWEEN ((t0.c76, (vt1.c1 IN (t0.c76, rt0.c3)), (NOT ('Hm/b')))) AND (((~ (rt0.c1)), rt0.c0 COLLATE RTRIM, (((t0.c76))<((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((x'992d', vt1.c2, t0.c76)) BETWEEN ((t0.c76, (vt1.c1 IN (t0.c76, rt0.c3)), (NOT ('Hm/b')))) AND (((~ (rt0.c1)), rt0.c0 COLLATE RTRIM, (((t0.c76))<((rt0.c2))))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((((x'992d', vt1.c2, t0.c76)) BETWEEN ((t0.c76, (vt1.c1 IN (t0.c76, rt0.c3)), (NOT ('Hm/b')))) AND (((~ (rt0.c1)), rt0.c0 COLLATE RTRIM, (((t0.c76))<((rt0.c2)))))));
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((~ (t0.c76))) AND ((((('2093484354')OR(rt0.c1)))AND(rt0.c1))))) ORDER BY ((rt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((~ (t0.c76))) AND ((((('2093484354')OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c0) IS FALSE));
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((~ (t0.c76))) AND ((((('2093484354')OR(rt0.c1)))AND(rt0.c1))))) ORDER BY ((rt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((~ (t0.c76))) AND ((((('2093484354')OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c0) IS FALSE));
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((~ (t0.c76))) AND ((((('2093484354')OR(rt0.c1)))AND(rt0.c1))))) ORDER BY ((rt0.c0) IS FALSE);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<>((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<>((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))!=((vt0.c1))) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0)<=((NOT (x''))))) ORDER BY (((((((1.629365665E9)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))OR(CAST(vt0.c0 AS REAL))))AND(t0.c76)) ASC, ((((vt0.c0)<(t0.c76)))<<(((((((((t0.c76)AND('-34975681')))OR(t0.c76)))AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=((NOT (x''))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((1.629365665E9)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))OR(CAST(vt0.c0 AS REAL))))AND(t0.c76)) ASC, ((((vt0.c0)<(t0.c76)))<<(((((((((t0.c76)AND('-34975681')))OR(t0.c76)))AND(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0)<=((NOT (x''))))) ORDER BY (((((((1.629365665E9)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))OR(CAST(vt0.c0 AS REAL))))AND(t0.c76)) ASC, ((((vt0.c0)<(t0.c76)))<<(((((((((t0.c76)AND('-34975681')))OR(t0.c76)))AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<=((NOT (x''))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((1.629365665E9)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))OR(CAST(vt0.c0 AS REAL))))AND(t0.c76)) ASC, ((((vt0.c0)<(t0.c76)))<<(((((((((t0.c76)AND('-34975681')))OR(t0.c76)))AND(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((vt0.c0)<=((NOT (x''))))) ORDER BY (((((((1.629365665E9)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))OR(CAST(vt0.c0 AS REAL))))AND(t0.c76)) ASC, ((((vt0.c0)<(t0.c76)))<<(((((((((t0.c76)AND('-34975681')))OR(t0.c76)))AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.8115390544847835)))AND(vt1.c2))))!=((((x'')=(vt1.c0)))))) ORDER BY ((((((vt0.c1)OR(vt1.c1)))AND(vt1.c0))) BETWEEN (vt1.c2) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.8115390544847835)))AND(vt1.c2))))<>((((x'')=(vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY ((((((vt0.c1)OR(vt1.c1)))AND(vt1.c0))) BETWEEN (vt1.c2) AND (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.8115390544847835)))AND(vt1.c2))))!=((((x'')=(vt1.c0)))))) ORDER BY ((((((vt0.c1)OR(vt1.c1)))AND(vt1.c0))) BETWEEN (vt1.c2) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.8115390544847835)))AND(vt1.c2))))<>((((x'')=(vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY ((((((vt0.c1)OR(vt1.c1)))AND(vt1.c0))) BETWEEN (vt1.c2) AND (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((((((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(0.8115390544847835)))AND(vt1.c2))))!=((((x'')=(vt1.c0)))))) ORDER BY ((((((vt0.c1)OR(vt1.c1)))AND(vt1.c0))) BETWEEN (vt1.c2) AND (NULL)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE))<=(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE))<=(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE))<=(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE))<=(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE))<=(CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2))) NOT NULL));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON vt1.c2 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt1.c2) IS TRUE))) AND ((((vt0.c2) NOT BETWEEN (t0.c76) AND (vt1.c2))))) WHERE (ABS(DISTINCT ((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON vt1.c2 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt1.c2) IS TRUE))) AND ((((vt0.c2) NOT BETWEEN (t0.c76) AND (vt1.c2))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON vt1.c2 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt1.c2) IS TRUE))) AND ((((vt0.c2) NOT BETWEEN (t0.c76) AND (vt1.c2))))) WHERE (ABS(DISTINCT ((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON vt1.c2 LEFT OUTER JOIN vt0 ON rt0.c3 INNER JOIN rt0 ON (((vt0.c1)) BETWEEN ((((vt1.c2) IS TRUE))) AND ((((vt0.c2) NOT BETWEEN (t0.c76) AND (vt1.c2))))));
SELECT * FROM vt1, t0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN (vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN (vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (vt0.c0)));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c2)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c1)!=(t0.c76))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c1)<>(t0.c76)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c2)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c1)!=(t0.c76))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c1)<>(t0.c76)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c2)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c1)!=(t0.c76))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3))>((rt0.c0)))))<=((LENGTH(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3))>((rt0.c0)))))<=((LENGTH(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3))>((rt0.c0)))))<=((LENGTH(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3))>((rt0.c0)))))<=((LENGTH(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c3))>((rt0.c0)))))<=((LENGTH(rt0.c0)))));
SELECT ALL * FROM t0 WHERE (t0.c76) ORDER BY t0.c76 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0 ORDER BY t0.c76 COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (t0.c76) ORDER BY t0.c76 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0 ORDER BY t0.c76 COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (t0.c76) ORDER BY t0.c76 COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN t0 ON ((vt0.c1) IS TRUE) WHERE (CAST(((vt0.c2) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN t0 ON ((vt0.c1) IS TRUE));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN t0 ON ((vt0.c1) IS TRUE) WHERE (CAST(((vt0.c2) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN t0 ON ((vt0.c1) IS TRUE));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN t0 ON ((vt0.c1) IS TRUE) WHERE (CAST(((vt0.c2) IS TRUE) AS INTEGER));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c2)) AS INTEGER) WHERE (((((vt1.c2)AND(((vt0.c1)&(vt1.c2)))))OR(0.3057049189176546))) ORDER BY CASE ((vt1.c1)||(vt0.c1))  WHEN NULL THEN -1336775968 ELSE (vt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)AND(((vt0.c1)&(vt1.c2)))))OR(0.3057049189176546))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c2)) AS INTEGER) ORDER BY CASE ((vt1.c1)||(vt0.c1))  WHEN NULL THEN -1336775968 ELSE (vt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c2)) AS INTEGER) WHERE (((((vt1.c2)AND(((vt0.c1)&(vt1.c2)))))OR(0.3057049189176546))) ORDER BY CASE ((vt1.c1)||(vt0.c1))  WHEN NULL THEN -1336775968 ELSE (vt0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)AND(((vt0.c1)&(vt1.c2)))))OR(0.3057049189176546))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c2)) AS INTEGER) ORDER BY CASE ((vt1.c1)||(vt0.c1))  WHEN NULL THEN -1336775968 ELSE (vt0.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t0 ON CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c2)) AS INTEGER) WHERE (((((vt1.c2)AND(((vt0.c1)&(vt1.c2)))))OR(0.3057049189176546))) ORDER BY CASE ((vt1.c1)||(vt0.c1))  WHEN NULL THEN -1336775968 ELSE (vt0.c0 IN ()) END DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE) ORDER BY (- ((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), CASE LIKELIHOOD(DISTINCT vt1.c2, 0.41129844239751123)  WHEN CAST(vt1.c1 AS TEXT) THEN (~ (vt1.c2)) WHEN ((vt1.c2) ISNULL) THEN vt1.c1 WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c2)) THEN ((vt1.c1)>=(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (- ((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), CASE LIKELIHOOD(DISTINCT vt1.c2, 0.41129844239751123)  WHEN CAST(vt1.c1 AS TEXT) THEN (~ (vt1.c2)) WHEN ((vt1.c2) ISNULL) THEN vt1.c1 WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c2)) THEN ((vt1.c1)>=(vt1.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE) ORDER BY (- ((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), CASE LIKELIHOOD(DISTINCT vt1.c2, 0.41129844239751123)  WHEN CAST(vt1.c1 AS TEXT) THEN (~ (vt1.c2)) WHEN ((vt1.c2) ISNULL) THEN vt1.c1 WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c2)) THEN ((vt1.c1)>=(vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (- ((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), CASE LIKELIHOOD(DISTINCT vt1.c2, 0.41129844239751123)  WHEN CAST(vt1.c1 AS TEXT) THEN (~ (vt1.c2)) WHEN ((vt1.c2) ISNULL) THEN vt1.c1 WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c2)) THEN ((vt1.c1)>=(vt1.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)) COLLATE NOCASE) ORDER BY (- ((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), CASE LIKELIHOOD(DISTINCT vt1.c2, 0.41129844239751123)  WHEN CAST(vt1.c1 AS TEXT) THEN (~ (vt1.c2)) WHEN ((vt1.c2) ISNULL) THEN vt1.c1 WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c2)) THEN ((vt1.c1)>=(vt1.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((DATETIME(rt0.c3, vt1.c1, rt0.c2))>=(((t0.c76)<=(rt0.c3))))) ORDER BY CAST((NOT (vt0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((DATETIME(rt0.c3, vt1.c1, rt0.c2))>=(((t0.c76)<=(rt0.c3))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY CAST((NOT (vt0.c2)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((DATETIME(rt0.c3, vt1.c1, rt0.c2))>=(((t0.c76)<=(rt0.c3))))) ORDER BY CAST((NOT (vt0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((DATETIME(rt0.c3, vt1.c1, rt0.c2))>=(((t0.c76)<=(rt0.c3))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY CAST((NOT (vt0.c2)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((DATETIME(rt0.c3, vt1.c1, rt0.c2))>=(((t0.c76)<=(rt0.c3))))) ORDER BY CAST((NOT (vt0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, rt0 INNER JOIN vt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c2 IN (rt0.c1, vt1.c1)) ELSE CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END END WHERE (((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt0.c1))) IS TRUE)  as count FROM t0, vt1, rt0 INNER JOIN vt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c2 IN (rt0.c1, vt1.c1)) ELSE CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END END);
SELECT COUNT(*) FROM t0, vt1, rt0 INNER JOIN vt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c2 IN (rt0.c1, vt1.c1)) ELSE CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END END WHERE (((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt0.c1))) IS TRUE)  as count FROM t0, vt1, rt0 INNER JOIN vt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c2 IN (rt0.c1, vt1.c1)) ELSE CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END END);
SELECT COUNT(*) FROM t0, vt1, rt0 INNER JOIN vt0 ON CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c2 IN (rt0.c1, vt1.c1)) ELSE CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END END WHERE (((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1))) NOTNULL)) ORDER BY (- (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1))) NOTNULL)) ORDER BY (- (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1))) NOTNULL)) ORDER BY (- (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT * FROM t0, rt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN json_valid(rt0.c3) THEN (((t0.c76))<=((rt0.c3))) ELSE COALESCE(x'', rt0.c2) END) ORDER BY (NOT ((+ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE RTRIM  WHEN json_valid(rt0.c3) THEN (((t0.c76))<=((rt0.c3))) ELSE COALESCE(x'', rt0.c2) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT ((+ (rt0.c2))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN json_valid(rt0.c3) THEN (((t0.c76))<=((rt0.c3))) ELSE COALESCE(x'', rt0.c2) END) ORDER BY (NOT ((+ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE RTRIM  WHEN json_valid(rt0.c3) THEN (((t0.c76))<=((rt0.c3))) ELSE COALESCE(x'', rt0.c2) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT ((+ (rt0.c2))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN json_valid(rt0.c3) THEN (((t0.c76))<=((rt0.c3))) ELSE COALESCE(x'', rt0.c2) END) ORDER BY (NOT ((+ (rt0.c2))))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c2 COLLATE RTRIM)) AND (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c2 COLLATE RTRIM)) AND (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c2 COLLATE RTRIM)) AND (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c2 COLLATE RTRIM)) AND (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c2 COLLATE RTRIM)) AND (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER) WHERE (HEX(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER) WHERE (HEX(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON CAST(((rt0.c0)OR(rt0.c2)) AS INTEGER) WHERE (HEX(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2))));
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ('-1551471158');
SELECT SUM(count) FROM (SELECT (('-1551471158') IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ('-1551471158');
SELECT SUM(count) FROM (SELECT (('-1551471158') IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ('-1551471158');
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((((vt1.c2)OR(rt0.c0)))OR(t0.c76)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)OR(rt0.c0)))OR(t0.c76)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((((vt1.c2)OR(rt0.c0)))OR(t0.c76)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)OR(rt0.c0)))OR(t0.c76)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((((vt1.c2)OR(rt0.c0)))OR(t0.c76)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c1 COLLATE BINARY)))) ORDER BY (json_insert(vt0.c2, vt0.c2, vt0.c2, vt0.c0, vt0.c0) IN (((vt0.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (json_insert(vt0.c2, vt0.c2, vt0.c2, vt0.c0, vt0.c0) IN (((vt0.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c1 COLLATE BINARY)))) ORDER BY (json_insert(vt0.c2, vt0.c2, vt0.c2, vt0.c0, vt0.c0) IN (((vt0.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (json_insert(vt0.c2, vt0.c2, vt0.c2, vt0.c0, vt0.c0) IN (((vt0.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c1, NULL, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, NULL, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1, NULL, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, NULL, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1, NULL, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c2)))) IS FALSE));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON '' WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '');
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON '' WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON '');
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON '' WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1 IN ()))OR(570071133))) ORDER BY CAST(((vt0.c0)=(vt0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))OR(570071133))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c0)==(vt0.c2)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1 IN ()))OR(570071133))) ORDER BY CAST(((vt0.c0)=(vt0.c2)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))OR(570071133))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c0)==(vt0.c2)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1 IN ()))OR(570071133))) ORDER BY CAST(((vt0.c0)=(vt0.c2)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((vt0.c2 IN (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c1)), ((NULL) IS TRUE)))) ORDER BY vt1.c2;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c1)), ((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c2);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((vt0.c2 IN (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c1)), ((NULL) IS TRUE)))) ORDER BY vt1.c2;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c1)), ((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY vt1.c2);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((vt0.c2 IN (((vt1.c1) BETWEEN (vt0.c2) AND (vt0.c1)), ((NULL) IS TRUE)))) ORDER BY vt1.c2;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c2)==(vt1.c2))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)LIKE(vt1.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)=(vt1.c2))) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)LIKE(vt1.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c2)==(vt1.c2))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)LIKE(vt1.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)=(vt1.c2))) IS TRUE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)LIKE(vt1.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c2)==(vt1.c2))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)LIKE(vt1.c1 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (0.3986268736494112);
SELECT SUM(count) FROM (SELECT ((0.3986268736494112) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.3986268736494112);
SELECT SUM(count) FROM (SELECT ((0.3986268736494112) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.3986268736494112);
SELECT COUNT(*) FROM vt1 INDEXED BY i94 CROSS JOIN t0 ON (((((vt0.c0 IN (vt1.c2)))AND(((vt1.c2)AND(t0.c76)))))OR((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((((vt0.c0)OR(t0.c76)))OR(vt1.c0))) WHERE (((((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c2 AS REAL))))AND(-1.7976931348623157E308))) ORDER BY ((vt1.c2 IN ()) IN ((NOT (vt0.c2))))  NULLS FIRST, ((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c2 AS REAL))))AND(-1.7976931348623157E308))) IS TRUE)  as count FROM vt1 INDEXED BY i94 CROSS JOIN t0 ON (((((vt0.c0 IN (vt1.c2)))AND(((vt1.c2)AND(t0.c76)))))OR((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((((vt0.c0)OR(t0.c76)))OR(vt1.c0))) ORDER BY ((vt1.c2 IN ()) IN ((NOT (vt0.c2))))  NULLS FIRST, ((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 INDEXED BY i94 CROSS JOIN t0 ON (((((vt0.c0 IN (vt1.c2)))AND(((vt1.c2)AND(t0.c76)))))OR((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((((vt0.c0)OR(t0.c76)))OR(vt1.c0))) WHERE (((((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c2 AS REAL))))AND(-1.7976931348623157E308))) ORDER BY ((vt1.c2 IN ()) IN ((NOT (vt0.c2))))  NULLS FIRST, ((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c2 AS REAL))))AND(-1.7976931348623157E308))) IS TRUE)  as count FROM vt1 INDEXED BY i94 CROSS JOIN t0 ON (((((vt0.c0 IN (vt1.c2)))AND(((vt1.c2)AND(t0.c76)))))OR((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FULL OUTER JOIN vt0 ON LIKELY(DISTINCT ((((vt0.c0)OR(t0.c76)))OR(vt1.c0))) ORDER BY ((vt1.c2 IN ()) IN ((NOT (vt0.c2))))  NULLS FIRST, ((((((vt1.c2)OR(vt1.c0)))OR(vt1.c2))) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((0.16265809856826297 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND (rt0.c3)) WHERE (((rt0.c3 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c2 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((0.16265809856826297 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND (rt0.c3)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c2 ELSE rt0.c3 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((0.16265809856826297 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND (rt0.c3)) WHERE (((rt0.c3 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c2 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((0.16265809856826297 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND (rt0.c3)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c2 ELSE rt0.c3 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((0.16265809856826297 IN ())) BETWEEN (CAST(rt0.c2 AS REAL)) AND (rt0.c3)) WHERE (((rt0.c3 COLLATE RTRIM) NOTNULL)) ORDER BY (+ (CASE vt0.c0  WHEN rt0.c3 THEN vt0.c2 ELSE rt0.c3 END)) DESC;
SELECT * FROM rt0 INNER JOIN t0 ON 'F' RIGHT OUTER JOIN vt1 ON 0.06296352738767286 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)) THEN (((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c2))) WHEN (vt0.c1 IN (vt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((t0.c76))) WHEN (vt1.c1 IN ()) THEN (((rt0.c1, '-1286927711', rt0.c2))>=((vt0.c0, 0.33382380706364756, rt0.c2))) END WHERE ((~ (((vt1.c0)|(vt1.c2))))) ORDER BY (- ('-1251049777'))  NULLS LAST, ((vt1.c2 COLLATE NOCASE)%(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c1 THEN t0.c76 ELSE vt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)|(vt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON 'F' RIGHT OUTER JOIN vt1 ON 0.06296352738767286 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)) THEN (((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c2))) WHEN (vt0.c1 IN (vt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((t0.c76))) WHEN (vt1.c1 IN ()) THEN (((rt0.c1, '-1286927711', rt0.c2))>=((vt0.c0, 0.33382380706364756, rt0.c2))) END ORDER BY (- ('-1251049777'))  NULLS LAST, ((vt1.c2 COLLATE NOCASE)%(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c1 THEN t0.c76 ELSE vt1.c1 END)) ASC);
SELECT * FROM rt0 INNER JOIN t0 ON 'F' RIGHT OUTER JOIN vt1 ON 0.06296352738767286 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)) THEN (((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c2))) WHEN (vt0.c1 IN (vt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((t0.c76))) WHEN (vt1.c1 IN ()) THEN (((rt0.c1, '-1286927711', rt0.c2))>=((vt0.c0, 0.33382380706364756, rt0.c2))) END WHERE ((~ (((vt1.c0)|(vt1.c2))))) ORDER BY (- ('-1251049777'))  NULLS LAST, ((vt1.c2 COLLATE NOCASE)%(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c1 THEN t0.c76 ELSE vt1.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)|(vt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON 'F' RIGHT OUTER JOIN vt1 ON 0.06296352738767286 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)) THEN (((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c2))) WHEN (vt0.c1 IN (vt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((t0.c76))) WHEN (vt1.c1 IN ()) THEN (((rt0.c1, '-1286927711', rt0.c2))>=((vt0.c0, 0.33382380706364756, rt0.c2))) END ORDER BY (- ('-1251049777'))  NULLS LAST, ((vt1.c2 COLLATE NOCASE)%(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c1 THEN t0.c76 ELSE vt1.c1 END)) ASC);
SELECT * FROM rt0 INNER JOIN t0 ON 'F' RIGHT OUTER JOIN vt1 ON 0.06296352738767286 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)) THEN (((vt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c2))) WHEN (vt0.c1 IN (vt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((t0.c76))) WHEN (vt1.c1 IN ()) THEN (((rt0.c1, '-1286927711', rt0.c2))>=((vt0.c0, 0.33382380706364756, rt0.c2))) END WHERE ((~ (((vt1.c0)|(vt1.c2))))) ORDER BY (- ('-1251049777'))  NULLS LAST, ((vt1.c2 COLLATE NOCASE)%(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c1 THEN t0.c76 ELSE vt1.c1 END)) ASC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.5190386000387841) AS BLOB) WHERE (NULL) ORDER BY ((((((vt1.c2)OR(rt0.c3)))OR(rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.5190386000387841) AS BLOB) ORDER BY ((((((vt1.c2)OR(rt0.c3)))OR(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.5190386000387841) AS BLOB) WHERE (NULL) ORDER BY ((((((vt1.c2)OR(rt0.c3)))OR(rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.5190386000387841) AS BLOB) ORDER BY ((((((vt1.c2)OR(rt0.c3)))OR(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.5190386000387841) AS BLOB) WHERE (NULL) ORDER BY ((((((vt1.c2)OR(rt0.c3)))OR(rt0.c1))) IS TRUE);
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0 WHERE (((((NULL)&(957367351)))-(933645927)));
SELECT SUM(count) FROM (SELECT ((((((NULL)&(957367351)))-(933645927))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0 WHERE (((((NULL)&(957367351)))-(933645927)));
SELECT SUM(count) FROM (SELECT ((((((NULL)&(957367351)))-(933645927))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0 WHERE (((((NULL)&(957367351)))-(933645927)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (x'');
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((('-1336775968')GLOB(vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((('-1336775968')GLOB(vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((('-1336775968')GLOB(vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((('-1336775968')GLOB(vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((('-1336775968')GLOB(vt0.c2))))));
SELECT ALL * FROM vt1, t0, rt0 WHERE ((((- (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE ((((- (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE ((((- (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1)|(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1)|(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1)|(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1)|(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1)|(vt1.c1)) END);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2)>=(t0.c76))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(t0.c76))) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2)>=(t0.c76))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(t0.c76))) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2)>=(t0.c76))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))>=(((vt1.c1) NOT BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))>=(((vt1.c1) NOT BETWEEN (vt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))>=(((vt1.c1) NOT BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))>=(((vt1.c1) NOT BETWEEN (vt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))>=(((vt1.c1) NOT BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c2) ORDER BY vt1.c2;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM t0, vt1 ORDER BY vt1.c2);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c2) ORDER BY vt1.c2;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM t0, vt1 ORDER BY vt1.c2);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c2) ORDER BY vt1.c2;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((vt0.c1 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(x'')))OR(rt0.c2)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(x'')))OR(rt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((vt0.c1 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(x'')))OR(rt0.c2)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(x'')))OR(rt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((vt0.c1 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(x'')))OR(rt0.c2)))AND(vt0.c2)))));
SELECT ALL * FROM t0 WHERE (((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)) COLLATE BINARY) ORDER BY json_object(CAST(t0.c76 AS BLOB), ((t0.c76)%(t0.c76)), (t0.c76 IN (t0.c76)), t0.c76 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY json_object(CAST(t0.c76 AS BLOB), ((t0.c76)%(t0.c76)), (t0.c76 IN (t0.c76)), t0.c76 COLLATE NOCASE) ASC);
SELECT ALL * FROM t0 WHERE (((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)) COLLATE BINARY) ORDER BY json_object(CAST(t0.c76 AS BLOB), ((t0.c76)%(t0.c76)), (t0.c76 IN (t0.c76)), t0.c76 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY json_object(CAST(t0.c76 AS BLOB), ((t0.c76)%(t0.c76)), (t0.c76 IN (t0.c76)), t0.c76 COLLATE NOCASE) ASC);
SELECT ALL * FROM t0 WHERE (((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)) COLLATE BINARY) ORDER BY json_object(CAST(t0.c76 AS BLOB), ((t0.c76)%(t0.c76)), (t0.c76 IN (t0.c76)), t0.c76 COLLATE NOCASE) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(vt1.c2 AS BLOB))|(vt1.c2 COLLATE BINARY))) ORDER BY (~ ((rt0.c1 IN (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS BLOB))|(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((rt0.c1 IN (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(vt1.c2 AS BLOB))|(vt1.c2 COLLATE BINARY))) ORDER BY (~ ((rt0.c1 IN (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS BLOB))|(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ ((rt0.c1 IN (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(vt1.c2 AS BLOB))|(vt1.c2 COLLATE BINARY))) ORDER BY (~ ((rt0.c1 IN (rt0.c3)))) DESC;
SELECT * FROM vt1, vt0 WHERE (vt1.c1) ORDER BY NULL  NULLS FIRST, TRIM(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL  NULLS FIRST, TRIM(vt0.c0) DESC);
SELECT * FROM vt1, vt0 WHERE (vt1.c1) ORDER BY NULL  NULLS FIRST, TRIM(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL  NULLS FIRST, TRIM(vt0.c0) DESC);
SELECT * FROM vt1, vt0 WHERE (vt1.c1) ORDER BY NULL  NULLS FIRST, TRIM(vt0.c0) DESC;
SELECT * FROM vt0, vt1, rt0, t0 WHERE (CASE ((vt1.c1)%(vt1.c1))  WHEN (rt0.c2 IN ()) THEN x'' ELSE ((((vt0.c2)AND(rt0.c2)))OR(vt0.c1)) END) ORDER BY ((((rt0.c2)IS(rt0.c3))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)%(vt1.c1))  WHEN (rt0.c2 IN ()) THEN x'' ELSE ((((vt0.c2)AND(rt0.c2)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((rt0.c2)IS(rt0.c3))) IS FALSE));
SELECT * FROM vt0, vt1, rt0, t0 WHERE (CASE ((vt1.c1)%(vt1.c1))  WHEN (rt0.c2 IN ()) THEN x'' ELSE ((((vt0.c2)AND(rt0.c2)))OR(vt0.c1)) END) ORDER BY ((((rt0.c2)IS(rt0.c3))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)%(vt1.c1))  WHEN (rt0.c2 IN ()) THEN x'' ELSE ((((vt0.c2)AND(rt0.c2)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((rt0.c2)IS(rt0.c3))) IS FALSE));
SELECT * FROM vt0, vt1, rt0, t0 WHERE (CASE ((vt1.c1)%(vt1.c1))  WHEN (rt0.c2 IN ()) THEN x'' ELSE ((((vt0.c2)AND(rt0.c2)))OR(vt0.c1)) END) ORDER BY ((((rt0.c2)IS(rt0.c3))) IS FALSE);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 NOT INDEXED WHERE (rt0.c3) ORDER BY CASE WHEN (((rt0.c3))==((vt1.c2))) THEN ((vt0.c0) IS FALSE) ELSE 258274060 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY CASE WHEN (((rt0.c3))==((vt1.c2))) THEN ((vt0.c0) IS FALSE) ELSE 258274060 END ASC);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 NOT INDEXED WHERE (rt0.c3) ORDER BY CASE WHEN (((rt0.c3))==((vt1.c2))) THEN ((vt0.c0) IS FALSE) ELSE 258274060 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY CASE WHEN (((rt0.c3))==((vt1.c2))) THEN ((vt0.c0) IS FALSE) ELSE 258274060 END ASC);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 NOT INDEXED WHERE (rt0.c3) ORDER BY CASE WHEN (((rt0.c3))==((vt1.c2))) THEN ((vt0.c0) IS FALSE) ELSE 258274060 END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)%(rt0.c0)) IN ((rt0.c2 IN (rt0.c0)), ((rt0.c2)IS NOT(rt0.c3))))) ORDER BY CASE WHEN (- (rt0.c3)) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c1)IS(x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)%(rt0.c0)) IN ((rt0.c2 IN (rt0.c0)), ((rt0.c2)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c3)) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c1)IS(x'')) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)%(rt0.c0)) IN ((rt0.c2 IN (rt0.c0)), ((rt0.c2)IS NOT(rt0.c3))))) ORDER BY CASE WHEN (- (rt0.c3)) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c1)IS(x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)%(rt0.c0)) IN ((rt0.c2 IN (rt0.c0)), ((rt0.c2)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c3)) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c1)IS(x'')) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)%(rt0.c0)) IN ((rt0.c2 IN (rt0.c0)), ((rt0.c2)IS NOT(rt0.c3))))) ORDER BY CASE WHEN (- (rt0.c3)) THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c1)IS(x'')) END;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)&(rt0.c2)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)=(CASE x''  WHEN 2143326573 THEN vt1.c0 END))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN (- (vt1.c2)) END, (((rt0.c3 IN (rt0.c0))) ISNULL)  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)==(CASE x''  WHEN 2143326573 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)&(rt0.c2)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN (- (vt1.c2)) END, (((rt0.c3 IN (rt0.c0))) ISNULL)  NULLS LAST, rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)&(rt0.c2)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)=(CASE x''  WHEN 2143326573 THEN vt1.c0 END))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN (- (vt1.c2)) END, (((rt0.c3 IN (rt0.c0))) ISNULL)  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)==(CASE x''  WHEN 2143326573 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)&(rt0.c2)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN (- (vt1.c2)) END, (((rt0.c3 IN (rt0.c0))) ISNULL)  NULLS LAST, rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((vt1.c0)&(rt0.c2)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))) WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END)=(CASE x''  WHEN 2143326573 THEN vt1.c0 END))) ORDER BY CASE WHEN (NOT (rt0.c0)) THEN (- (vt1.c2)) END, (((rt0.c3 IN (rt0.c0))) ISNULL)  NULLS LAST, rt0.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt0 WHERE (CASE WHEN ((t0.c76) BETWEEN (rt0.c3) AND (vt0.c2)) THEN x'' END) ORDER BY CASE ((rt0.c0)IS('ep]\r'))  WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c3))>((vt1.c1))) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) END DESC, ((CAST(rt0.c3 AS BLOB)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c76) BETWEEN (rt0.c3) AND (vt0.c2)) THEN x'' END) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN rt0 ORDER BY CASE ((rt0.c0)IS('ep]\r'))  WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c3))>((vt1.c1))) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) END DESC, ((CAST(rt0.c3 AS BLOB)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt0 WHERE (CASE WHEN ((t0.c76) BETWEEN (rt0.c3) AND (vt0.c2)) THEN x'' END) ORDER BY CASE ((rt0.c0)IS('ep]\r'))  WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c3))>((vt1.c1))) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) END DESC, ((CAST(rt0.c3 AS BLOB)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c76) BETWEEN (rt0.c3) AND (vt0.c2)) THEN x'' END) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN rt0 ORDER BY CASE ((rt0.c0)IS('ep]\r'))  WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c3))>((vt1.c1))) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) END DESC, ((CAST(rt0.c3 AS BLOB)) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt0 WHERE (CASE WHEN ((t0.c76) BETWEEN (rt0.c3) AND (vt0.c2)) THEN x'' END) ORDER BY CASE ((rt0.c0)IS('ep]\r'))  WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c3))>((vt1.c1))) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) END DESC, ((CAST(rt0.c3 AS BLOB)) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c1 WHERE (((((((((rt0.c2)AND((vt0.c0 IN ()))))AND(UPPER(rt0.c2))))AND(INSTR(vt0.c0, rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND((vt0.c0 IN ()))))AND(UPPER(rt0.c2))))AND(INSTR(vt0.c0, rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c1 WHERE (((((((((rt0.c2)AND((vt0.c0 IN ()))))AND(UPPER(rt0.c2))))AND(INSTR(vt0.c0, rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND((vt0.c0 IN ()))))AND(UPPER(rt0.c2))))AND(INSTR(vt0.c0, rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c1 WHERE (((((((((rt0.c2)AND((vt0.c0 IN ()))))AND(UPPER(rt0.c2))))AND(INSTR(vt0.c0, rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END)));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c3 CROSS JOIN vt0 ON (((vt1.c2)*(vt0.c2)) IN ()) WHERE (((((((((vt1.c2)OR(rt0.c2)))OR(0.6355009717903167)))OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM) ORDER BY ((((((((((x'')OR(vt0.c0)))OR(vt0.c2)))OR(rt0.c0)))AND(rt0.c1)))<=((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c2)OR(rt0.c2)))OR(0.6355009717903167)))OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON rt0.c3 CROSS JOIN vt0 ON (((vt1.c2)*(vt0.c2)) IN ()) ORDER BY ((((((((((x'')OR(vt0.c0)))OR(vt0.c2)))OR(rt0.c0)))AND(rt0.c1)))<=((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c3 CROSS JOIN vt0 ON (((vt1.c2)*(vt0.c2)) IN ()) WHERE (((((((((vt1.c2)OR(rt0.c2)))OR(0.6355009717903167)))OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM) ORDER BY ((((((((((x'')OR(vt0.c0)))OR(vt0.c2)))OR(rt0.c0)))AND(rt0.c1)))<=((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c2)OR(rt0.c2)))OR(0.6355009717903167)))OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON rt0.c3 CROSS JOIN vt0 ON (((vt1.c2)*(vt0.c2)) IN ()) ORDER BY ((((((((((x'')OR(vt0.c0)))OR(vt0.c2)))OR(rt0.c0)))AND(rt0.c1)))<=((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN rt0 ON rt0.c3 CROSS JOIN vt0 ON (((vt1.c2)*(vt0.c2)) IN ()) WHERE (((((((((vt1.c2)OR(rt0.c2)))OR(0.6355009717903167)))OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM) ORDER BY ((((((((((x'')OR(vt0.c0)))OR(vt0.c2)))OR(rt0.c0)))AND(rt0.c1)))<=((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((- (((((rt0.c3)AND(rt0.c2)))AND(t0.c76)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c3)AND(rt0.c2)))AND(t0.c76))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((- (((((rt0.c3)AND(rt0.c2)))AND(t0.c76)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c3)AND(rt0.c2)))AND(t0.c76))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((- (((((rt0.c3)AND(rt0.c2)))AND(t0.c76)))));
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (MIN(((rt0.c1)|(vt1.c2)), ((((rt0.c0)OR(vt0.c1)))AND(vt1.c1)))) ORDER BY ((t0.c76 COLLATE BINARY)<=(SUBSTR(vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c1)|(vt1.c2)), ((((rt0.c0)OR(vt0.c1)))AND(vt1.c1)))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY ((t0.c76 COLLATE BINARY)<=(SUBSTR(vt1.c0, vt1.c0))) ASC);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (MIN(((rt0.c1)|(vt1.c2)), ((((rt0.c0)OR(vt0.c1)))AND(vt1.c1)))) ORDER BY ((t0.c76 COLLATE BINARY)<=(SUBSTR(vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((MIN(((rt0.c1)|(vt1.c2)), ((((rt0.c0)OR(vt0.c1)))AND(vt1.c1)))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY ((t0.c76 COLLATE BINARY)<=(SUBSTR(vt1.c0, vt1.c0))) ASC);
SELECT ALL * FROM t0, rt0, vt1, vt0 WHERE (MIN(((rt0.c1)|(vt1.c2)), ((((rt0.c0)OR(vt0.c1)))AND(vt1.c1)))) ORDER BY ((t0.c76 COLLATE BINARY)<=(SUBSTR(vt1.c0, vt1.c0))) ASC;
SELECT COUNT(*) FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '-1336775968' THEN vt1.c1 ELSE rt0.c0 END) NOT BETWEEN ((+ (vt1.c0))) AND (0.2641612963155877)) WHERE ((((CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c1 THEN vt0.c2 WHEN rt0.c0 THEN t0.c76 ELSE vt0.c2 END, (NOT (vt0.c0)), x'f4f28009', json(vt1.c0), (NULL IN ())))<((vt1.c0, ((((vt0.c1)OR(rt0.c1)))AND('')), (rt0.c3 IN ()), vt0.c1, UNLIKELY(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c1 THEN vt0.c2 WHEN rt0.c0 THEN t0.c76 ELSE vt0.c2 END, (NOT (vt0.c0)), x'f4f28009', json(vt1.c0), (NULL IN ())))<((vt1.c0, ((((vt0.c1)OR(rt0.c1)))AND('')), (rt0.c3 IN ()), vt0.c1, UNLIKELY(NULL))))) IS TRUE)  as count FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '-1336775968' THEN vt1.c1 ELSE rt0.c0 END) NOT BETWEEN ((+ (vt1.c0))) AND (0.2641612963155877)));
SELECT COUNT(*) FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '-1336775968' THEN vt1.c1 ELSE rt0.c0 END) NOT BETWEEN ((+ (vt1.c0))) AND (0.2641612963155877)) WHERE ((((CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c1 THEN vt0.c2 WHEN rt0.c0 THEN t0.c76 ELSE vt0.c2 END, (NOT (vt0.c0)), x'f4f28009', json(vt1.c0), (NULL IN ())))<((vt1.c0, ((((vt0.c1)OR(rt0.c1)))AND('')), (rt0.c3 IN ()), vt0.c1, UNLIKELY(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c1 THEN vt0.c2 WHEN rt0.c0 THEN t0.c76 ELSE vt0.c2 END, (NOT (vt0.c0)), x'f4f28009', json(vt1.c0), (NULL IN ())))<((vt1.c0, ((((vt0.c1)OR(rt0.c1)))AND('')), (rt0.c3 IN ()), vt0.c1, UNLIKELY(NULL))))) IS TRUE)  as count FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '-1336775968' THEN vt1.c1 ELSE rt0.c0 END) NOT BETWEEN ((+ (vt1.c0))) AND (0.2641612963155877)));
SELECT COUNT(*) FROM vt1, t0, rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN '-1336775968' THEN vt1.c1 ELSE rt0.c0 END) NOT BETWEEN ((+ (vt1.c0))) AND (0.2641612963155877)) WHERE ((((CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c1 THEN vt0.c2 WHEN rt0.c0 THEN t0.c76 ELSE vt0.c2 END, (NOT (vt0.c0)), x'f4f28009', json(vt1.c0), (NULL IN ())))<((vt1.c0, ((((vt0.c1)OR(rt0.c1)))AND('')), (rt0.c3 IN ()), vt0.c1, UNLIKELY(NULL)))));
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ((NOT (((((vt0.c2)AND(vt0.c1)))AND(rt0.c3))))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c1))))>=((CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN 570071133 END)));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c2)AND(vt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c1))))>=((CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN 570071133 END))));
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ((NOT (((((vt0.c2)AND(vt0.c1)))AND(rt0.c3))))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c1))))>=((CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN 570071133 END)));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c2)AND(vt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c1))))>=((CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN 570071133 END))));
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ((NOT (((((vt0.c2)AND(vt0.c1)))AND(rt0.c3))))) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c1))))>=((CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN 570071133 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(0.23132384045955257)) COLLATE NOCASE) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c76))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c0)))OR(0.23132384045955257)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c76))) ISNULL) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(0.23132384045955257)) COLLATE NOCASE) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c76))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c0)))OR(0.23132384045955257)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c76))) ISNULL) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)OR(vt0.c0)))OR(0.23132384045955257)) COLLATE NOCASE) ORDER BY ((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c76))) ISNULL) DESC;
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((+ (rt0.c0)), CAST(t0.c76 AS BLOB), (NOT (rt0.c2))))==((NULL, rt0.c0 COLLATE RTRIM, CASE t0.c76  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN 'h|nh*DrC' END))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c0)), CAST(t0.c76 AS BLOB), (NOT (rt0.c2))))==((NULL, rt0.c0 COLLATE RTRIM, CASE t0.c76  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN 'h|nh*DrC' END)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((+ (rt0.c0)), CAST(t0.c76 AS BLOB), (NOT (rt0.c2))))==((NULL, rt0.c0 COLLATE RTRIM, CASE t0.c76  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN 'h|nh*DrC' END))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c0)), CAST(t0.c76 AS BLOB), (NOT (rt0.c2))))==((NULL, rt0.c0 COLLATE RTRIM, CASE t0.c76  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN 'h|nh*DrC' END)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((+ (rt0.c0)), CAST(t0.c76 AS BLOB), (NOT (rt0.c2))))==((NULL, rt0.c0 COLLATE RTRIM, CASE t0.c76  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN 'h|nh*DrC' END))));
SELECT COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (((rt0.c2)<=(rt0.c2)) IN ()) WHERE (vt1.c1) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))AND(t0.c76)) WHEN ((vt1.c0)<<(vt0.c2)) THEN 0.37195423738826083 WHEN 0.6952040262911987 THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) ELSE ((((vt0.c2)AND(rt0.c0)))OR(t0.c76)) END ASC, ((((vt0.c2)/(rt0.c0)))>>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (((rt0.c2)<=(rt0.c2)) IN ()) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))AND(t0.c76)) WHEN ((vt1.c0)<<(vt0.c2)) THEN 0.37195423738826083 WHEN 0.6952040262911987 THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) ELSE ((((vt0.c2)AND(rt0.c0)))OR(t0.c76)) END ASC, ((((vt0.c2)/(rt0.c0)))>>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (((rt0.c2)<=(rt0.c2)) IN ()) WHERE (vt1.c1) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))AND(t0.c76)) WHEN ((vt1.c0)<<(vt0.c2)) THEN 0.37195423738826083 WHEN 0.6952040262911987 THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) ELSE ((((vt0.c2)AND(rt0.c0)))OR(t0.c76)) END ASC, ((((vt0.c2)/(rt0.c0)))>>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (((rt0.c2)<=(rt0.c2)) IN ()) ORDER BY CASE (- (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c2)))AND(t0.c76)) WHEN ((vt1.c0)<<(vt0.c2)) THEN 0.37195423738826083 WHEN 0.6952040262911987 THEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)) ELSE ((((vt0.c2)AND(rt0.c0)))OR(t0.c76)) END ASC, ((((vt0.c2)/(rt0.c0)))>>(CAST(vt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 FULL OUTER JOIN t0 ON vt0.c1 COLLATE NOCASE WHERE (vt1.c1) ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 FULL OUTER JOIN t0 ON vt0.c1 COLLATE NOCASE ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 FULL OUTER JOIN t0 ON vt0.c1 COLLATE NOCASE WHERE (vt1.c1) ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 FULL OUTER JOIN t0 ON vt0.c1 COLLATE NOCASE ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 FULL OUTER JOIN t0 ON vt0.c1 COLLATE NOCASE WHERE (vt1.c1) ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS INTEGER);
SELECT * FROM t0 WHERE (CAST(((t0.c76) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c76) ISNULL) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c76) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c76) ISNULL) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c76) ISNULL) AS BLOB));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN ((((rt0.c0)AND('')))AND(rt0.c0)) WHEN (rt0.c0 IN ()) THEN rt0.c2 WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, t0.c76, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN rt0.c2 COLLATE BINARY END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c76))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN ((((rt0.c0)AND('')))AND(rt0.c0)) WHEN (rt0.c0 IN ()) THEN rt0.c2 WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, t0.c76, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c76))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN ((((rt0.c0)AND('')))AND(rt0.c0)) WHEN (rt0.c0 IN ()) THEN rt0.c2 WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, t0.c76, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN rt0.c2 COLLATE BINARY END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c76))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE RTRIM THEN ((((rt0.c0)AND('')))AND(rt0.c0)) WHEN (rt0.c0 IN ()) THEN rt0.c2 WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, t0.c76, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c76))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (CASE WHEN rt0.c0 COLLATE RTRIM THEN ((((rt0.c0)AND('')))AND(rt0.c0)) WHEN (rt0.c0 IN ()) THEN rt0.c2 WHEN (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, t0.c76, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN rt0.c2 COLLATE BINARY END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c76))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM rt0, vt1 NOT INDEXED WHERE (3.53584698E8);
SELECT SUM(count) FROM (SELECT ALL ((3.53584698E8) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 NOT INDEXED WHERE (3.53584698E8);
SELECT SUM(count) FROM (SELECT ALL ((3.53584698E8) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 NOT INDEXED WHERE (3.53584698E8);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN (((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(0xffffffffb3aa6e5b)))) FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL) WHERE ((((vt0.c1)<=(vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt1.c1)IS NOT(vt1.c0)) THEN CAST(x'' AS BLOB) WHEN '>O+EJi' THEN ((vt0.c0)GLOB(vt0.c2)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((t0.c76)<(vt0.c0)) ELSE ((vt0.c2) IS FALSE) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN (((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(0Xffffffffb3aa6e5b)))) FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL) ORDER BY CASE WHEN ((vt1.c1)IS NOT(vt1.c0)) THEN CAST(x'' AS BLOB) WHEN '>O+EJi' THEN ((vt0.c0)GLOB(vt0.c2)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((t0.c76)<(vt0.c0)) ELSE ((vt0.c2) IS FALSE) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN (((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(0xffffffffb3aa6e5b)))) FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL) WHERE ((((vt0.c1)<=(vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt1.c1)IS NOT(vt1.c0)) THEN CAST(x'' AS BLOB) WHEN '>O+EJi' THEN ((vt0.c0)GLOB(vt0.c2)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((t0.c76)<(vt0.c0)) ELSE ((vt0.c2) IS FALSE) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN (((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(0Xffffffffb3aa6e5b)))) FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL) ORDER BY CASE WHEN ((vt1.c1)IS NOT(vt1.c0)) THEN CAST(x'' AS BLOB) WHEN '>O+EJi' THEN ((vt0.c0)GLOB(vt0.c2)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((t0.c76)<(vt0.c0)) ELSE ((vt0.c2) IS FALSE) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN (((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(0xffffffffb3aa6e5b)))) FULL OUTER JOIN t0 ON ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL) WHERE ((((vt0.c1)<=(vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt1.c1)IS NOT(vt1.c0)) THEN CAST(x'' AS BLOB) WHEN '>O+EJi' THEN ((vt0.c0)GLOB(vt0.c2)) WHEN ((vt0.c0)+(vt0.c0)) THEN ((t0.c76)<(vt0.c0)) ELSE ((vt0.c2) IS FALSE) END DESC  NULLS FIRST;
SELECT * FROM vt1, rt0, t0, vt0 WHERE ((((((vt0.c2))<((vt0.c0)))) NOT BETWEEN (0.9977105674350476) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c76 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))<((vt0.c0)))) NOT BETWEEN (0.9977105674350476) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c76 END))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT * FROM vt1, rt0, t0, vt0 WHERE ((((((vt0.c2))<((vt0.c0)))) NOT BETWEEN (0.9977105674350476) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c76 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))<((vt0.c0)))) NOT BETWEEN (0.9977105674350476) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c76 END))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT * FROM vt1, rt0, t0, vt0 WHERE ((((((vt0.c2))<((vt0.c0)))) NOT BETWEEN (0.9977105674350476) AND (CASE vt1.c1  WHEN vt1.c1 THEN t0.c76 END)));
SELECT * FROM t0, vt0, rt0, vt1 WHERE (TRIM(DISTINCT ((((((((vt1.c2)AND(vt0.c1)))AND(vt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ORDER BY CAST(((vt0.c2) IS FALSE) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((vt1.c2)AND(vt0.c1)))AND(vt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY CAST(((vt0.c2) IS FALSE) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, vt0, rt0, vt1 WHERE (TRIM(DISTINCT ((((((((vt1.c2)AND(vt0.c1)))AND(vt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ORDER BY CAST(((vt0.c2) IS FALSE) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((vt1.c2)AND(vt0.c1)))AND(vt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY CAST(((vt0.c2) IS FALSE) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, vt0, rt0, vt1 WHERE (TRIM(DISTINCT ((((((((vt1.c2)AND(vt0.c1)))AND(vt0.c2)))OR(rt0.c3)))AND(rt0.c2)))) ORDER BY CAST(((vt0.c2) IS FALSE) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c1) IS TRUE))) ORDER BY ((((((vt0.c2)*(vt0.c0)))AND('kuo_!.')))AND(LIKELIHOOD(vt0.c1, 0.5902071823664639)));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c1) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)*(vt0.c0)))AND('kuo_!.')))AND(LIKELIHOOD(vt0.c1, 0.5902071823664639))));
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c1) IS TRUE))) ORDER BY ((((((vt0.c2)*(vt0.c0)))AND('kuo_!.')))AND(LIKELIHOOD(vt0.c1, 0.5902071823664639)));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c1) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)*(vt0.c0)))AND('kuo_!.')))AND(LIKELIHOOD(vt0.c1, 0.5902071823664639))));
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c1) IS TRUE))) ORDER BY ((((((vt0.c2)*(vt0.c0)))AND('kuo_!.')))AND(LIKELIHOOD(vt0.c1, 0.5902071823664639)));
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY NULL;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (2.093484354E9) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN rt0 ON (rt0.c2 IN ((+ (vt0.c0)))) WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN vt0.c1 END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END WHEN ((vt0.c1)AND(vt0.c2)) THEN vt1.c0 WHEN (((vt0.c1, '&_.{p', vt1.c1))>=((vt0.c1, x'0817', vt0.c0))) THEN (('') IS FALSE) ELSE CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0xffffffffde50479b END END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN vt0.c1 END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END WHEN ((vt0.c1)AND(vt0.c2)) THEN vt1.c0 WHEN (((vt0.c1, '&_.{p', vt1.c1))>=((vt0.c1, x'0817', vt0.c0))) THEN (('') IS FALSE) ELSE CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0xffffffffde50479b END END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (2.093484354E9) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN rt0 ON (rt0.c2 IN ((+ (vt0.c0)))) ORDER BY vt1.c0);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (2.093484354E9) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN rt0 ON (rt0.c2 IN ((+ (vt0.c0)))) WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN vt0.c1 END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END WHEN ((vt0.c1)AND(vt0.c2)) THEN vt1.c0 WHEN (((vt0.c1, '&_.{p', vt1.c1))>=((vt0.c1, x'0817', vt0.c0))) THEN (('') IS FALSE) ELSE CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0xffffffffde50479b END END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN vt0.c1 END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END WHEN ((vt0.c1)AND(vt0.c2)) THEN vt1.c0 WHEN (((vt0.c1, '&_.{p', vt1.c1))>=((vt0.c1, x'0817', vt0.c0))) THEN (('') IS FALSE) ELSE CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0xffffffffde50479b END END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (2.093484354E9) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN rt0 ON (rt0.c2 IN ((+ (vt0.c0)))) ORDER BY vt1.c0);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (2.093484354E9) AND (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)) CROSS JOIN rt0 ON (rt0.c2 IN ((+ (vt0.c0)))) WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN rt0.c2 THEN vt0.c1 END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END WHEN ((vt0.c1)AND(vt0.c2)) THEN vt1.c0 WHEN (((vt0.c1, '&_.{p', vt1.c1))>=((vt0.c1, x'0817', vt0.c0))) THEN (('') IS FALSE) ELSE CASE WHEN rt0.c0 THEN vt1.c1 ELSE 0xffffffffde50479b END END) ORDER BY vt1.c0;
SELECT * FROM vt1, vt0, t0, rt0 WHERE ((((((rt0.c2))<=((vt0.c1))))|((((x'1c6f')) BETWEEN ((vt1.c2)) AND ((534759977))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((vt0.c1))))|((((x'1c6f')) BETWEEN ((vt1.c2)) AND ((534759977)))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT * FROM vt1, vt0, t0, rt0 WHERE ((((((rt0.c2))<=((vt0.c1))))|((((x'1c6f')) BETWEEN ((vt1.c2)) AND ((534759977))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((vt0.c1))))|((((x'1c6f')) BETWEEN ((vt1.c2)) AND ((534759977)))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT * FROM vt1, vt0, t0, rt0 WHERE ((((((rt0.c2))<=((vt0.c1))))|((((x'1c6f')) BETWEEN ((vt1.c2)) AND ((534759977))))));
SELECT * FROM vt0, rt0 WHERE (IFNULL((rt0.c0 IN (vt0.c1)), (((vt0.c1))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL((rt0.c0 IN (vt0.c1)), (((vt0.c1))>((rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (IFNULL((rt0.c0 IN (vt0.c1)), (((vt0.c1))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL((rt0.c0 IN (vt0.c1)), (((vt0.c1))>((rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (IFNULL((rt0.c0 IN (vt0.c1)), (((vt0.c1))>((rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2))))<(((vt1.c2 IN ()))))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2))))<(((vt1.c2 IN ()))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2))))<(((vt1.c2 IN ()))))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2))))<(((vt1.c2 IN ()))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c2))))<(((vt1.c2 IN ()))))) ORDER BY vt0.c1  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 IN ()));
SELECT * FROM vt0, vt1, t0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt1.c2)))) AND ((((rt0.c2)-(vt1.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c1)*(NULL))) AND ((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt1.c2)))) AND ((((rt0.c2)-(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c1)*(NULL))) AND ((NOT (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt1.c2)))) AND ((((rt0.c2)-(vt1.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c1)*(NULL))) AND ((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt1.c2)))) AND ((((rt0.c2)-(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c1)*(NULL))) AND ((NOT (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, rt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt1.c2)))) AND ((((rt0.c2)-(vt1.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c1)*(NULL))) AND ((NOT (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS REAL) LEFT OUTER JOIN vt1 ON ((((t0.c76) BETWEEN (rt0.c2) AND (rt0.c1)))<(CAST(rt0.c1 AS REAL))) WHERE (((rt0.c3 IN ()) IN (vt1.c1))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN (vt1.c1))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS REAL) LEFT OUTER JOIN vt1 ON ((((t0.c76) BETWEEN (rt0.c2) AND (rt0.c1)))<(CAST(rt0.c1 AS REAL))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS REAL) LEFT OUTER JOIN vt1 ON ((((t0.c76) BETWEEN (rt0.c2) AND (rt0.c1)))<(CAST(rt0.c1 AS REAL))) WHERE (((rt0.c3 IN ()) IN (vt1.c1))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN (vt1.c1))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS REAL) LEFT OUTER JOIN vt1 ON ((((t0.c76) BETWEEN (rt0.c2) AND (rt0.c1)))<(CAST(rt0.c1 AS REAL))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST((~ (rt0.c1)) AS REAL) LEFT OUTER JOIN vt1 ON ((((t0.c76) BETWEEN (rt0.c2) AND (rt0.c1)))<(CAST(rt0.c1 AS REAL))) WHERE (((rt0.c3 IN ()) IN (vt1.c1))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS TRUE))) AND ((NULL)))) ORDER BY CAST(vt0.c0 AS REAL), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS TRUE))) AND ((NULL)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 ORDER BY CAST(vt0.c0 AS REAL), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS TRUE))) AND ((NULL)))) ORDER BY CAST(vt0.c0 AS REAL), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS TRUE))) AND ((NULL)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 ORDER BY CAST(vt0.c0 AS REAL), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS TRUE))) AND ((NULL)))) ORDER BY CAST(vt0.c0 AS REAL), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((~ (((t0.c76)*(rt0.c3))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c76)*(rt0.c3))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((~ (((t0.c76)*(rt0.c3))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c76)*(rt0.c3))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((~ (((t0.c76)*(rt0.c3))))) ORDER BY '' DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((((t0.c76)AND(rt0.c3)), (x'' IN ()), t0.c76 COLLATE NOCASE))>((((rt0.c3)/(rt0.c1)), rt0.c3, (NOT (vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c76)AND(rt0.c3)), (x'' IN ()), t0.c76 COLLATE NOCASE))>((((rt0.c3)/(rt0.c1)), rt0.c3, (NOT (vt0.c2)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((((t0.c76)AND(rt0.c3)), (x'' IN ()), t0.c76 COLLATE NOCASE))>((((rt0.c3)/(rt0.c1)), rt0.c3, (NOT (vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c76)AND(rt0.c3)), (x'' IN ()), t0.c76 COLLATE NOCASE))>((((rt0.c3)/(rt0.c1)), rt0.c3, (NOT (vt0.c2)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((((t0.c76)AND(rt0.c3)), (x'' IN ()), t0.c76 COLLATE NOCASE))>((((rt0.c3)/(rt0.c1)), rt0.c3, (NOT (vt0.c2))))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(json_valid(vt0.c0))))AND(((vt0.c2)>>(rt0.c0)))) WHERE (((0X37a64e67)<=(x'bb34')));
SELECT SUM(count) FROM (SELECT ALL ((((0X37a64e67)<=(x'bb34'))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(json_valid(vt0.c0))))AND(((vt0.c2)>>(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(json_valid(vt0.c0))))AND(((vt0.c2)>>(rt0.c0)))) WHERE (((0X37a64e67)<=(x'bb34')));
SELECT SUM(count) FROM (SELECT ALL ((((0X37a64e67)<=(x'bb34'))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(json_valid(vt0.c0))))AND(((vt0.c2)>>(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((((vt0.c1)OR(rt0.c1)))AND(vt0.c1)))OR(json_valid(vt0.c0))))AND(((vt0.c2)>>(rt0.c0)))) WHERE (((0X37a64e67)<=(x'bb34')));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 INDEXED BY i94 WHERE (0.5861152140414724);
SELECT SUM(count) FROM (SELECT ALL ((0.5861152140414724) IS TRUE)  as count FROM vt1, rt0, vt0 INDEXED BY i94);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 INDEXED BY i94 WHERE (0.5861152140414724);
SELECT SUM(count) FROM (SELECT ALL ((0.5861152140414724) IS TRUE)  as count FROM vt1, rt0, vt0 INDEXED BY i94);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (CAST(rt0.c3 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (CAST(rt0.c3 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (CAST(rt0.c3 AS BLOB) COLLATE RTRIM);
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((NOT (IFNULL(vt1.c0, t0.c76)))) ORDER BY (- (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(vt1.c0, t0.c76)))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (- (rt0.c1))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((NOT (IFNULL(vt1.c0, t0.c76)))) ORDER BY (- (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(vt1.c0, t0.c76)))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (- (rt0.c1))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((NOT (IFNULL(vt1.c0, t0.c76)))) ORDER BY (- (rt0.c1))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (rt0.c3 IN ()) CROSS JOIN vt0 ON rt0.c0 WHERE (((x'') NOT BETWEEN ((+ (rt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY LIKELY(LOWER(DISTINCT rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((+ (rt0.c1))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (rt0.c3 IN ()) CROSS JOIN vt0 ON rt0.c0 ORDER BY LIKELY(LOWER(DISTINCT rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (rt0.c3 IN ()) CROSS JOIN vt0 ON rt0.c0 WHERE (((x'') NOT BETWEEN ((+ (rt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY LIKELY(LOWER(DISTINCT rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((+ (rt0.c1))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (rt0.c3 IN ()) CROSS JOIN vt0 ON rt0.c0 ORDER BY LIKELY(LOWER(DISTINCT rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (rt0.c3 IN ()) CROSS JOIN vt0 ON rt0.c0 WHERE (((x'') NOT BETWEEN ((+ (rt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY LIKELY(LOWER(DISTINCT rt0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (HEX(((vt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c1) NOTNULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (HEX(((vt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c1) NOTNULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (HEX(((vt1.c1) NOTNULL)));
SELECT * FROM vt1 WHERE ((((((((((vt1.c1 IN ()))AND((vt1.c1 IN ()))))OR(0.7921155094884832)))OR((('g.') IS TRUE))))AND(TRIM(vt1.c2))));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c1 IN ()))AND((vt1.c1 IN ()))))OR(0.7921155094884832)))OR((('g.') IS TRUE))))AND(TRIM(vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c1 IN ()))AND((vt1.c1 IN ()))))OR(0.7921155094884832)))OR((('g.') IS TRUE))))AND(TRIM(vt1.c2))));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c1 IN ()))AND((vt1.c1 IN ()))))OR(0.7921155094884832)))OR((('g.') IS TRUE))))AND(TRIM(vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c1 IN ()))AND((vt1.c1 IN ()))))OR(0.7921155094884832)))OR((('g.') IS TRUE))))AND(TRIM(vt1.c2))));
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt1.c1)) THEN (t0.c76 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c1)) THEN (t0.c76 IN ()) END) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt1.c1)) THEN (t0.c76 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c1)) THEN (t0.c76 IN ()) END) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (NOT (vt1.c1)) THEN (t0.c76 IN ()) END);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0) NOTNULL));
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED FULL OUTER JOIN rt0 ON TRIM(DISTINCT CAST(vt1.c2 AS BLOB), CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c1 END) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c3 THEN vt0.c2 END)<=(CAST(rt0.c2 AS NUMERIC))) WHERE (TRIM(DISTINCT ((vt0.c1)IS(vt1.c1)), ((t0.c76) ISNULL))) ORDER BY rt0.c3, CASE WHEN ((vt1.c1)|(rt0.c3)) THEN ((rt0.c2)=(t0.c76)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c1)IS(vt1.c1)), ((t0.c76) ISNULL))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT CAST(vt1.c2 AS BLOB), CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c1 END) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c3 THEN vt0.c2 END)<=(CAST(rt0.c2 AS NUMERIC))) ORDER BY rt0.c3, CASE WHEN ((vt1.c1)|(rt0.c3)) THEN ((rt0.c2)==(t0.c76)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED FULL OUTER JOIN rt0 ON TRIM(DISTINCT CAST(vt1.c2 AS BLOB), CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c1 END) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c3 THEN vt0.c2 END)<=(CAST(rt0.c2 AS NUMERIC))) WHERE (TRIM(DISTINCT ((vt0.c1)IS(vt1.c1)), ((t0.c76) ISNULL))) ORDER BY rt0.c3, CASE WHEN ((vt1.c1)|(rt0.c3)) THEN ((rt0.c2)=(t0.c76)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c1)IS(vt1.c1)), ((t0.c76) ISNULL))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN rt0 ON TRIM(DISTINCT CAST(vt1.c2 AS BLOB), CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c1 END) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c3 THEN vt0.c2 END)<=(CAST(rt0.c2 AS NUMERIC))) ORDER BY rt0.c3, CASE WHEN ((vt1.c1)|(rt0.c3)) THEN ((rt0.c2)==(t0.c76)) END ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((- (rt0.c3))) ORDER BY ((((TYPEOF(rt0.c1))AND(((rt0.c2)AND(t0.c76)))))AND(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY ((((TYPEOF(rt0.c1))AND(((rt0.c2)AND(t0.c76)))))AND(NULL)) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE ((- (rt0.c3))) ORDER BY ((((TYPEOF(rt0.c1))AND(((rt0.c2)AND(t0.c76)))))AND(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY ((((TYPEOF(rt0.c1))AND(((rt0.c2)AND(t0.c76)))))AND(NULL)) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE ((- (rt0.c3))) ORDER BY ((((TYPEOF(rt0.c1))AND(((rt0.c2)AND(t0.c76)))))AND(NULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((((vt1.c0))>((t0.c76))))<>(CASE WHEN vt1.c0 THEN vt1.c1 ELSE 0.8115390544847835 END))) ORDER BY ((((vt0.c2)||(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((t0.c76))))<>(CASE WHEN vt1.c0 THEN vt1.c1 ELSE 0.8115390544847835 END))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((vt0.c2)||(vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((((vt1.c0))>((t0.c76))))<>(CASE WHEN vt1.c0 THEN vt1.c1 ELSE 0.8115390544847835 END))) ORDER BY ((((vt0.c2)||(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((t0.c76))))<>(CASE WHEN vt1.c0 THEN vt1.c1 ELSE 0.8115390544847835 END))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((vt0.c2)||(vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((((vt1.c0))>((t0.c76))))<>(CASE WHEN vt1.c0 THEN vt1.c1 ELSE 0.8115390544847835 END))) ORDER BY ((((vt0.c2)||(vt1.c0))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((vt0.c1)!=(rt0.c2)) AS REAL) WHERE ((((rt0.c2 COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((vt0.c1)<>(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((vt0.c1)!=(rt0.c2)) AS REAL) WHERE ((((rt0.c2 COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((vt0.c1)<>(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON CAST(((vt0.c1)!=(rt0.c2)) AS REAL) WHERE ((((rt0.c2 COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((vt0.c1) NOT NULL)) BETWEEN (((rt0.c3) NOT BETWEEN (0.33938390151894604) AND (vt0.c1))) AND (((vt0.c1)IS NOT(rt0.c1)))) WHERE (((((((((((rt0.c2) IS FALSE))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c3)))))AND(((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))))OR((((rt0.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, rt0.c3, vt0.c0)))))) ORDER BY (((((rt0.c0))!=((rt0.c0))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) IS FALSE))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c3)))))AND(((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))))OR((((rt0.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c1) NOT NULL)) BETWEEN (((rt0.c3) NOT BETWEEN (0.33938390151894604) AND (vt0.c1))) AND (((vt0.c1)IS NOT(rt0.c1)))) ORDER BY (((((rt0.c0))!=((rt0.c0))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((vt0.c1) NOT NULL)) BETWEEN (((rt0.c3) NOT BETWEEN (0.33938390151894604) AND (vt0.c1))) AND (((vt0.c1)IS NOT(rt0.c1)))) WHERE (((((((((((rt0.c2) IS FALSE))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c3)))))AND(((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))))OR((((rt0.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, rt0.c3, vt0.c0)))))) ORDER BY (((((rt0.c0))!=((rt0.c0))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) IS FALSE))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c3)))))AND(((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))))OR((((rt0.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c1) NOT NULL)) BETWEEN (((rt0.c3) NOT BETWEEN (0.33938390151894604) AND (vt0.c1))) AND (((vt0.c1)IS NOT(rt0.c1)))) ORDER BY (((((rt0.c0))!=((rt0.c0))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((vt0.c1) NOT NULL)) BETWEEN (((rt0.c3) NOT BETWEEN (0.33938390151894604) AND (vt0.c1))) AND (((vt0.c1)IS NOT(rt0.c1)))) WHERE (((((((((((rt0.c2) IS FALSE))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c3)))))AND(((((vt0.c0)AND(vt0.c1)))OR(rt0.c1)))))OR((((rt0.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, rt0.c3, vt0.c0)))))) ORDER BY (((((rt0.c0))!=((rt0.c0))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (x'') ORDER BY TRIM(DISTINCT vt1.c2, '' COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY TRIM(DISTINCT vt1.c2, '' COLLATE BINARY) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (x'') ORDER BY TRIM(DISTINCT vt1.c2, '' COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY TRIM(DISTINCT vt1.c2, '' COLLATE BINARY) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (x'') ORDER BY TRIM(DISTINCT vt1.c2, '' COLLATE BINARY) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ('^a큀') ORDER BY (('-190789878')/((~ (rt0.c3))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c2 END)IS(((vt1.c1)|(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (('^a큀') IS TRUE)  as count FROM rt0, vt1 ORDER BY (('-190789878')/((~ (rt0.c3))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c2 END)IS(((vt1.c1)|(vt1.c1)))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE ('^a큀') ORDER BY (('-190789878')/((~ (rt0.c3))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c2 END)IS(((vt1.c1)|(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (('^a큀') IS TRUE)  as count FROM rt0, vt1 ORDER BY (('-190789878')/((~ (rt0.c3))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c2 END)IS(((vt1.c1)|(vt1.c1)))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE ('^a큀') ORDER BY (('-190789878')/((~ (rt0.c3))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c2 END)IS(((vt1.c1)|(vt1.c1)))) DESC;
SELECT ALL * FROM vt1, t0 INDEXED BY i94 WHERE ((('')GLOB(((t0.c76) BETWEEN (t0.c76) AND (vt1.c1))))) ORDER BY ((CAST('802542980' AS BLOB)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((('')GLOB(((t0.c76) BETWEEN (t0.c76) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i94 ORDER BY ((CAST('802542980' AS BLOB)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt1.c2)))));
SELECT ALL * FROM vt1, t0 INDEXED BY i94 WHERE ((('')GLOB(((t0.c76) BETWEEN (t0.c76) AND (vt1.c1))))) ORDER BY ((CAST('802542980' AS BLOB)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((('')GLOB(((t0.c76) BETWEEN (t0.c76) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i94 ORDER BY ((CAST('802542980' AS BLOB)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)<<(vt1.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULLIF(CAST(vt1.c1 AS INTEGER), NULL COLLATE BINARY)) ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(t0.c76)))OR(vt1.c2)))OR(vt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(vt1.c1 AS INTEGER), NULL COLLATE BINARY)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(t0.c76)))OR(vt1.c2)))OR(vt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULLIF(CAST(vt1.c1 AS INTEGER), NULL COLLATE BINARY)) ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(t0.c76)))OR(vt1.c2)))OR(vt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(vt1.c1 AS INTEGER), NULL COLLATE BINARY)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(t0.c76)))OR(vt1.c2)))OR(vt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (NULLIF(CAST(vt1.c1 AS INTEGER), NULL COLLATE BINARY)) ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(t0.c76)))OR(vt1.c2)))OR(vt0.c1))) ISNULL);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (((((vt0.c1) BETWEEN (vt1.c2) AND (vt0.c1))))==((0.33938390151894604))) DESC  NULLS LAST, (((('0.9147848889016592')AND('-1680911009')))OR((- (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1) BETWEEN (vt1.c2) AND (vt0.c1))))=((0.33938390151894604))) DESC  NULLS LAST, (((('0.9147848889016592')AND('-1680911009')))OR((- (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (((((vt0.c1) BETWEEN (vt1.c2) AND (vt0.c1))))==((0.33938390151894604))) DESC  NULLS LAST, (((('0.9147848889016592')AND('-1680911009')))OR((- (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1) BETWEEN (vt1.c2) AND (vt0.c1))))=((0.33938390151894604))) DESC  NULLS LAST, (((('0.9147848889016592')AND('-1680911009')))OR((- (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (((((vt0.c1) BETWEEN (vt1.c2) AND (vt0.c1))))==((0.33938390151894604))) DESC  NULLS LAST, (((('0.9147848889016592')AND('-1680911009')))OR((- (vt1.c1))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((- ((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((+ (vt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((vt0.c1)AND(rt0.c3)))OR(vt0.c0)))OR('/O')))OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(rt0.c3)))OR(vt0.c0)))OR('/O')))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((vt0.c1)AND(rt0.c3)))OR(vt0.c0)))OR('/O')))OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(rt0.c3)))OR(vt0.c0)))OR('/O')))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((vt0.c1)AND(rt0.c3)))OR(vt0.c0)))OR('/O')))OR(rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((TRIM(t0.c76)) NOT NULL)) ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((t0.c76)>(t0.c76))) AND ('B,D')) ASC  NULLS LAST, CAST(((rt0.c1) BETWEEN (vt1.c1) AND (vt1.c2)) AS REAL) ASC, ((((((((((((vt1.c2)OR(vt1.c1)))AND(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c1 COLLATE BINARY)))AND(rt0.c0)))OR(CASE rt0.c3  WHEN vt1.c2 THEN '-1251049777' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c76)) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((t0.c76)>(t0.c76))) AND ('B,D')) ASC  NULLS LAST, CAST(((rt0.c1) BETWEEN (vt1.c1) AND (vt1.c2)) AS REAL) ASC, ((((((((((((vt1.c2)OR(vt1.c1)))AND(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c1 COLLATE BINARY)))AND(rt0.c0)))OR(CASE rt0.c3  WHEN vt1.c2 THEN '-1251049777' END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((TRIM(t0.c76)) NOT NULL)) ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((t0.c76)>(t0.c76))) AND ('B,D')) ASC  NULLS LAST, CAST(((rt0.c1) BETWEEN (vt1.c1) AND (vt1.c2)) AS REAL) ASC, ((((((((((((vt1.c2)OR(vt1.c1)))AND(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c1 COLLATE BINARY)))AND(rt0.c0)))OR(CASE rt0.c3  WHEN vt1.c2 THEN '-1251049777' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c76)) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((t0.c76)>(t0.c76))) AND ('B,D')) ASC  NULLS LAST, CAST(((rt0.c1) BETWEEN (vt1.c1) AND (vt1.c2)) AS REAL) ASC, ((((((((((((vt1.c2)OR(vt1.c1)))AND(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c1 COLLATE BINARY)))AND(rt0.c0)))OR(CASE rt0.c3  WHEN vt1.c2 THEN '-1251049777' END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((TRIM(t0.c76)) NOT NULL)) ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (((t0.c76)>(t0.c76))) AND ('B,D')) ASC  NULLS LAST, CAST(((rt0.c1) BETWEEN (vt1.c1) AND (vt1.c2)) AS REAL) ASC, ((((((((((((vt1.c2)OR(vt1.c1)))AND(rt0.c1)))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c1 COLLATE BINARY)))AND(rt0.c0)))OR(CASE rt0.c3  WHEN vt1.c2 THEN '-1251049777' END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((('1367449139', t0.c76, NULL)) BETWEEN ((NULL, (vt0.c1 IN ('')), ((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c1)))) AND ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c1)), CASE WHEN x'' THEN vt1.c1 WHEN x'' THEN vt0.c2 WHEN NULL THEN vt1.c0 ELSE t0.c76 END, TRIM(DISTINCT t0.c76, vt1.c1)))) WHERE (((((vt1.c1) IS FALSE))GLOB(-774682428))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS FALSE))GLOB(-774682428))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((('1367449139', t0.c76, NULL)) BETWEEN ((NULL, (vt0.c1 IN ('')), ((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c1)))) AND ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c1)), CASE WHEN x'' THEN vt1.c1 WHEN x'' THEN vt0.c2 WHEN NULL THEN vt1.c0 ELSE t0.c76 END, TRIM(DISTINCT t0.c76, vt1.c1)))) ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((('1367449139', t0.c76, NULL)) BETWEEN ((NULL, (vt0.c1 IN ('')), ((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c1)))) AND ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c1)), CASE WHEN x'' THEN vt1.c1 WHEN x'' THEN vt0.c2 WHEN NULL THEN vt1.c0 ELSE t0.c76 END, TRIM(DISTINCT t0.c76, vt1.c1)))) WHERE (((((vt1.c1) IS FALSE))GLOB(-774682428))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS FALSE))GLOB(-774682428))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((('1367449139', t0.c76, NULL)) BETWEEN ((NULL, (vt0.c1 IN ('')), ((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c1)))) AND ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c1)), CASE WHEN x'' THEN vt1.c1 WHEN x'' THEN vt0.c2 WHEN NULL THEN vt1.c0 ELSE t0.c76 END, TRIM(DISTINCT t0.c76, vt1.c1)))) ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON ((('1367449139', t0.c76, NULL)) BETWEEN ((NULL, (vt0.c1 IN ('')), ((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c1)))) AND ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c1)), CASE WHEN x'' THEN vt1.c1 WHEN x'' THEN vt0.c2 WHEN NULL THEN vt1.c0 ELSE t0.c76 END, TRIM(DISTINCT t0.c76, vt1.c1)))) WHERE (((((vt1.c1) IS FALSE))GLOB(-774682428))) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c76)))OR(((rt0.c1) NOT NULL))))OR((((rt0.c3))>((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c76)))OR(((rt0.c1) NOT NULL))))OR((((rt0.c3))>((vt0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c76)))OR(((rt0.c1) NOT NULL))))OR((((rt0.c3))>((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c76)))OR(((rt0.c1) NOT NULL))))OR((((rt0.c3))>((vt0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c76)))OR(((rt0.c1) NOT NULL))))OR((((rt0.c3))>((vt0.c2))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) WHERE (LTRIM((((vt0.c0, vt0.c2, vt0.c0))>((vt0.c2, vt0.c1, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((((vt0.c0, vt0.c2, vt0.c0))>((vt0.c2, vt0.c1, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) WHERE (LTRIM((((vt0.c0, vt0.c2, vt0.c0))>((vt0.c2, vt0.c1, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((((vt0.c0, vt0.c2, vt0.c0))>((vt0.c2, vt0.c1, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) WHERE (LTRIM((((vt0.c0, vt0.c2, vt0.c0))>((vt0.c2, vt0.c1, vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (('<D6ㆨ6H\r' IN ()))) WHERE (((((((((((t0.c76)OR(rt0.c0)))OR(t0.c76)))OR(rt0.c1)))AND(0.37555524177195465)))>=(((((rt0.c3)AND(rt0.c3)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76)OR(rt0.c0)))OR(t0.c76)))OR(rt0.c1)))AND(0.37555524177195465)))>=(((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (('<D6ㆨ6H\r' IN ()))));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (('<D6ㆨ6H\r' IN ()))) WHERE (((((((((((t0.c76)OR(rt0.c0)))OR(t0.c76)))OR(rt0.c1)))AND(0.37555524177195465)))>=(((((rt0.c3)AND(rt0.c3)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76)OR(rt0.c0)))OR(t0.c76)))OR(rt0.c1)))AND(0.37555524177195465)))>=(((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (('<D6ㆨ6H\r' IN ()))));
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (('<D6ㆨ6H\r' IN ()))) WHERE (((((((((((t0.c76)OR(rt0.c0)))OR(t0.c76)))OR(rt0.c1)))AND(0.37555524177195465)))>=(((((rt0.c3)AND(rt0.c3)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, NULL, rt0.c2, '903303551', 0x86033c)) NOT BETWEEN ((vt1.c1, '-661596848', ((vt1.c1)*(NULL)), CAST(vt0.c0 AS TEXT), (vt0.c1 IN ()))) AND ((rt0.c0, (rt0.c0 IN (vt1.c2)), (((vt1.c0))<=((vt1.c2))), vt0.c0, (((''))>((rt0.c3)))))) CROSS JOIN vt1 ON 'RA།PE' WHERE ((((((rt0.c2))<>((vt0.c0))))&((((vt1.c2))==((rt0.c1)))))) ORDER BY x''  NULLS FIRST, (- ((('mD!촙2]')<<(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((vt0.c0))))&((((vt1.c2))=((rt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, NULL, rt0.c2, '903303551', 0x86033c)) NOT BETWEEN ((vt1.c1, '-661596848', ((vt1.c1)*(NULL)), CAST(vt0.c0 AS TEXT), (vt0.c1 IN ()))) AND ((rt0.c0, (rt0.c0 IN (vt1.c2)), (((vt1.c0))<=((vt1.c2))), vt0.c0, (((''))>((rt0.c3)))))) CROSS JOIN vt1 ON 'RA།PE' ORDER BY x''  NULLS FIRST, (- ((('mD!촙2]')<<(rt0.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, NULL, rt0.c2, '903303551', 0x86033c)) NOT BETWEEN ((vt1.c1, '-661596848', ((vt1.c1)*(NULL)), CAST(vt0.c0 AS TEXT), (vt0.c1 IN ()))) AND ((rt0.c0, (rt0.c0 IN (vt1.c2)), (((vt1.c0))<=((vt1.c2))), vt0.c0, (((''))>((rt0.c3)))))) CROSS JOIN vt1 ON 'RA།PE' WHERE ((((((rt0.c2))<>((vt0.c0))))&((((vt1.c2))==((rt0.c1)))))) ORDER BY x''  NULLS FIRST, (- ((('mD!촙2]')<<(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((vt0.c0))))&((((vt1.c2))=((rt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, NULL, rt0.c2, '903303551', 0x86033c)) NOT BETWEEN ((vt1.c1, '-661596848', ((vt1.c1)*(NULL)), CAST(vt0.c0 AS TEXT), (vt0.c1 IN ()))) AND ((rt0.c0, (rt0.c0 IN (vt1.c2)), (((vt1.c0))<=((vt1.c2))), vt0.c0, (((''))>((rt0.c3)))))) CROSS JOIN vt1 ON 'RA།PE' ORDER BY x''  NULLS FIRST, (- ((('mD!촙2]')<<(rt0.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, NULL, rt0.c2, '903303551', 0x86033c)) NOT BETWEEN ((vt1.c1, '-661596848', ((vt1.c1)*(NULL)), CAST(vt0.c0 AS TEXT), (vt0.c1 IN ()))) AND ((rt0.c0, (rt0.c0 IN (vt1.c2)), (((vt1.c0))<=((vt1.c2))), vt0.c0, (((''))>((rt0.c3)))))) CROSS JOIN vt1 ON 'RA།PE' WHERE ((((((rt0.c2))<>((vt0.c0))))&((((vt1.c2))==((rt0.c1)))))) ORDER BY x''  NULLS FIRST, (- ((('mD!촙2]')<<(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt1.c2 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c2 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt1.c2 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c2 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(CAST(vt1.c2 AS REAL) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c2 IN ())) ORDER BY CAST(x'02d2' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c2 IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'02d2' AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c2 IN ())) ORDER BY CAST(x'02d2' AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c2 IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'02d2' AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c2 IN ())) ORDER BY CAST(x'02d2' AS INTEGER);
SELECT * FROM vt1, vt0 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((~ (vt1.c0)));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((CASE WHEN 0xfffffffff85a11a3 THEN rt0.c0 ELSE vt1.c1 END)IS NOT((((rt0.c3, rt0.c3, x''))==((vt1.c2, rt0.c0, vt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0Xfffffffff85a11a3 THEN rt0.c0 ELSE vt1.c1 END)IS NOT((((rt0.c3, rt0.c3, x''))==((vt1.c2, rt0.c0, vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((CASE WHEN 0xfffffffff85a11a3 THEN rt0.c0 ELSE vt1.c1 END)IS NOT((((rt0.c3, rt0.c3, x''))==((vt1.c2, rt0.c0, vt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0Xfffffffff85a11a3 THEN rt0.c0 ELSE vt1.c1 END)IS NOT((((rt0.c3, rt0.c3, x''))==((vt1.c2, rt0.c0, vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((CASE WHEN 0xfffffffff85a11a3 THEN rt0.c0 ELSE vt1.c1 END)IS NOT((((rt0.c3, rt0.c3, x''))==((vt1.c2, rt0.c0, vt1.c2))))));
SELECT ALL * FROM t0, rt0, vt1 WHERE ((~ (((rt0.c3) IS FALSE)))) ORDER BY (((~ (rt0.c3))) ISNULL)  NULLS LAST, CASE rt0.c1 COLLATE NOCASE  WHEN vt1.c2 THEN ((rt0.c3) BETWEEN (rt0.c3) AND (t0.c76)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((~ (rt0.c3))) ISNULL)  NULLS LAST, CASE rt0.c1 COLLATE NOCASE  WHEN vt1.c2 THEN ((rt0.c3) BETWEEN (rt0.c3) AND (t0.c76)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((~ (((rt0.c3) IS FALSE)))) ORDER BY (((~ (rt0.c3))) ISNULL)  NULLS LAST, CASE rt0.c1 COLLATE NOCASE  WHEN vt1.c2 THEN ((rt0.c3) BETWEEN (rt0.c3) AND (t0.c76)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY (((~ (rt0.c3))) ISNULL)  NULLS LAST, CASE rt0.c1 COLLATE NOCASE  WHEN vt1.c2 THEN ((rt0.c3) BETWEEN (rt0.c3) AND (t0.c76)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((~ (((rt0.c3) IS FALSE)))) ORDER BY (((~ (rt0.c3))) ISNULL)  NULLS LAST, CASE rt0.c1 COLLATE NOCASE  WHEN vt1.c2 THEN ((rt0.c3) BETWEEN (rt0.c3) AND (t0.c76)) ELSE ((vt1.c0) NOT NULL) END  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((('p', t0.c76, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, HEX(DISTINCT x''), ROUND(vt1.c2, t0.c76))) AND ((x'', (- (vt1.c1)), (NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((('p', t0.c76, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, HEX(DISTINCT x''), ROUND(vt1.c2, t0.c76))) AND ((x'', (- (vt1.c1)), (NOT (vt1.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((('p', t0.c76, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, HEX(DISTINCT x''), ROUND(vt1.c2, t0.c76))) AND ((x'', (- (vt1.c1)), (NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((('p', t0.c76, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, HEX(DISTINCT x''), ROUND(vt1.c2, t0.c76))) AND ((x'', (- (vt1.c1)), (NOT (vt1.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((('p', t0.c76, vt1.c0)) BETWEEN ((vt1.c0 COLLATE RTRIM, HEX(DISTINCT x''), ROUND(vt1.c2, t0.c76))) AND ((x'', (- (vt1.c1)), (NOT (vt1.c0))))));
SELECT * FROM vt0, vt1, t0, rt0 WHERE ('?.5') ORDER BY (vt1.c0 IN (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('?.5') IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (vt1.c0 IN (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, rt0 WHERE ('?.5') ORDER BY (vt1.c0 IN (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('?.5') IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (vt1.c0 IN (vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0, rt0 WHERE ('?.5') ORDER BY (vt1.c0 IN (vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM vt0, rt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (NULL);
SELECT ALL * FROM rt0, vt1, vt0, t0 INDEXED BY i94 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)) IN (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0, ((((((vt1.c2) BETWEEN (rt0.c0) AND (vt0.c1)))AND(((vt1.c2) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)) IN (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 INDEXED BY i94 ORDER BY vt0.c0, ((((((vt1.c2) BETWEEN (rt0.c0) AND (vt0.c1)))AND(((vt1.c2) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, t0 INDEXED BY i94 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)) IN (vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c0, ((((((vt1.c2) BETWEEN (rt0.c0) AND (vt0.c1)))AND(((vt1.c2) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)) IN (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 INDEXED BY i94 ORDER BY vt0.c0, ((((((vt1.c2) BETWEEN (rt0.c0) AND (vt0.c1)))AND(((vt1.c2) NOT NULL))))OR(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON 0.04092445551574697 RIGHT OUTER JOIN vt0 ON (('2093484354' COLLATE RTRIM) ISNULL) LEFT OUTER JOIN t0 ON ((vt1.c2)AND(0.45608912029880033)) WHERE (CASE WHEN ((rt0.c2) BETWEEN (t0.c76) AND (rt0.c1)) THEN (((rt0.c1))<=((vt1.c1))) WHEN -608055232 THEN '' COLLATE BINARY WHEN (vt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE rtreenode(t0.c76, vt0.c1) END) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (t0.c76) AND (rt0.c1)) THEN (((rt0.c1))<=((vt1.c1))) WHEN -608055232 THEN '' COLLATE BINARY WHEN (vt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE rtreenode(t0.c76, vt0.c1) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON 0.04092445551574697 RIGHT OUTER JOIN vt0 ON (('2093484354' COLLATE RTRIM) ISNULL) LEFT OUTER JOIN t0 ON ((vt1.c2)AND(0.45608912029880033)) ORDER BY rt0.c3);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON 0.04092445551574697 RIGHT OUTER JOIN vt0 ON (('2093484354' COLLATE RTRIM) ISNULL) LEFT OUTER JOIN t0 ON ((vt1.c2)AND(0.45608912029880033)) WHERE (CASE WHEN ((rt0.c2) BETWEEN (t0.c76) AND (rt0.c1)) THEN (((rt0.c1))<=((vt1.c1))) WHEN -608055232 THEN '' COLLATE BINARY WHEN (vt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE rtreenode(t0.c76, vt0.c1) END) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (t0.c76) AND (rt0.c1)) THEN (((rt0.c1))<=((vt1.c1))) WHEN -608055232 THEN '' COLLATE BINARY WHEN (vt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE rtreenode(t0.c76, vt0.c1) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON 0.04092445551574697 RIGHT OUTER JOIN vt0 ON (('2093484354' COLLATE RTRIM) ISNULL) LEFT OUTER JOIN t0 ON ((vt1.c2)AND(0.45608912029880033)) ORDER BY rt0.c3);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON 0.04092445551574697 RIGHT OUTER JOIN vt0 ON (('2093484354' COLLATE RTRIM) ISNULL) LEFT OUTER JOIN t0 ON ((vt1.c2)AND(0.45608912029880033)) WHERE (CASE WHEN ((rt0.c2) BETWEEN (t0.c76) AND (rt0.c1)) THEN (((rt0.c1))<=((vt1.c1))) WHEN -608055232 THEN '' COLLATE BINARY WHEN (vt0.c1 IN ()) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE rtreenode(t0.c76, vt0.c1) END) ORDER BY rt0.c3;
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c0) ORDER BY (NOT (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (NOT (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c0) ORDER BY (NOT (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (NOT (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c0) ORDER BY (NOT (((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c76 AS NUMERIC)) BETWEEN (((((x'')OR(t0.c76)))AND(t0.c76))) AND (CAST(t0.c76 AS NUMERIC)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c76 AS NUMERIC)) BETWEEN (((((x'')OR(t0.c76)))AND(t0.c76))) AND (CAST(t0.c76 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c76 AS NUMERIC)) BETWEEN (((((x'')OR(t0.c76)))AND(t0.c76))) AND (CAST(t0.c76 AS NUMERIC)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c76 AS NUMERIC)) BETWEEN (((((x'')OR(t0.c76)))AND(t0.c76))) AND (CAST(t0.c76 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c76 AS NUMERIC)) BETWEEN (((((x'')OR(t0.c76)))AND(t0.c76))) AND (CAST(t0.c76 AS NUMERIC)))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('-34975681');
SELECT SUM(count) FROM (SELECT (('-34975681') IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('-34975681');
SELECT SUM(count) FROM (SELECT (('-34975681') IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('-34975681');
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS INTEGER));
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((vt1.c2)<=(vt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(vt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((vt1.c2)<=(vt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(vt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((vt1.c2)<=(vt1.c2))) IS FALSE));
SELECT * FROM t0, rt0, vt1, vt0 WHERE (NULL) ORDER BY CAST(((rt0.c3)GLOB(vt0.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY CAST(((rt0.c3)GLOB(vt0.c2)) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (NULL) ORDER BY CAST(((rt0.c3)GLOB(vt0.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY CAST(((rt0.c3)GLOB(vt0.c2)) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt1, vt0 WHERE (NULL) ORDER BY CAST(((rt0.c3)GLOB(vt0.c2)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON rt0.c3 WHERE (((((((vt0.c0)AND(vt0.c2)))OR(rt0.c3))) IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN x'c672' THEN rt0.c2 WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c0 END)/(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c2)))OR(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON rt0.c3 ORDER BY (((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN x'c672' THEN rt0.c2 WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c0 END)/(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON rt0.c3 WHERE (((((((vt0.c0)AND(vt0.c2)))OR(rt0.c3))) IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN x'c672' THEN rt0.c2 WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c0 END)/(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c2)))OR(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON rt0.c3 ORDER BY (((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN x'c672' THEN rt0.c2 WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c0 END)/(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON rt0.c3 WHERE (((((((vt0.c0)AND(vt0.c2)))OR(rt0.c3))) IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c1))) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN x'c672' THEN rt0.c2 WHEN rt0.c0 THEN '' WHEN vt0.c2 THEN rt0.c0 END)/(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT * FROM vt0, t0, vt1, rt0 WHERE ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END))<((((((rt0.c1)AND(vt1.c0)))AND(rt0.c2))))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CASE WHEN 0.9147848889016592 THEN rt0.c2 END) AND (json_patch(vt0.c0, rt0.c3)))) ORDER BY HEX(DISTINCT 0x6788517b) DESC, CAST(((rt0.c3)-(rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CASE WHEN 0.9147848889016592 THEN rt0.c2 END) AND (json_patch(vt0.c0, rt0.c3)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY HEX(DISTINCT 0X6788517b) DESC, CAST(((rt0.c3)-(rt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CASE WHEN 0.9147848889016592 THEN rt0.c2 END) AND (json_patch(vt0.c0, rt0.c3)))) ORDER BY HEX(DISTINCT 0x6788517b) DESC, CAST(((rt0.c3)-(rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CASE WHEN 0.9147848889016592 THEN rt0.c2 END) AND (json_patch(vt0.c0, rt0.c3)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY HEX(DISTINCT 0X6788517b) DESC, CAST(((rt0.c3)-(rt0.c0)) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ('' IN (rt0.c1 COLLATE BINARY)) WHERE (CAST(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c2 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c2 END AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ('' IN (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ('' IN (rt0.c1 COLLATE BINARY)) WHERE (CAST(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c2 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c2 END AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ('' IN (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ('' IN (rt0.c1 COLLATE BINARY)) WHERE (CAST(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c2 END AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((0.9292695914571749) NOT NULL)) ORDER BY ((((vt1.c0)||(vt0.c1)))|(((rt0.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((0.9292695914571749) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((vt1.c0)||(vt0.c1)))|(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((0.9292695914571749) NOT NULL)) ORDER BY ((((vt1.c0)||(vt0.c1)))|(((rt0.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((0.9292695914571749) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((vt1.c0)||(vt0.c1)))|(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((0.9292695914571749) NOT NULL)) ORDER BY ((((vt1.c0)||(vt0.c1)))|(((rt0.c3) NOTNULL)));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)OR(t0.c76)))AND(vt0.c1)) AS NUMERIC) WHERE ((NOT ((0.3700554448847523 IN ())))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c76)) AND ((vt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((t0.c76)GLOB(vt0.c2)))+(((vt0.c0)OR(t0.c76)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((0.3700554448847523 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)OR(t0.c76)))AND(vt0.c1)) AS NUMERIC) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c76)) AND ((vt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((t0.c76)GLOB(vt0.c2)))+(((vt0.c0)OR(t0.c76)))) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)OR(t0.c76)))AND(vt0.c1)) AS NUMERIC) WHERE ((NOT ((0.3700554448847523 IN ())))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c76)) AND ((vt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((t0.c76)GLOB(vt0.c2)))+(((vt0.c0)OR(t0.c76)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((0.3700554448847523 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)OR(t0.c76)))AND(vt0.c1)) AS NUMERIC) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c76)) AND ((vt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((t0.c76)GLOB(vt0.c2)))+(((vt0.c0)OR(t0.c76)))) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((((vt0.c1)OR(t0.c76)))AND(vt0.c1)) AS NUMERIC) WHERE ((NOT ((0.3700554448847523 IN ())))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((t0.c76)) AND ((vt0.c2)))) NOTNULL) DESC  NULLS LAST, ((((t0.c76)GLOB(vt0.c2)))+(((vt0.c0)OR(t0.c76)))) ASC;
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND(TRIM(DISTINCT rt0.c0, vt1.c2))))AND(((rt0.c3) IS FALSE))))OR((vt1.c0 IN (vt1.c2)))))OR(((t0.c76) BETWEEN (NULL) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND(TRIM(DISTINCT rt0.c0, vt1.c2))))AND(((rt0.c3) IS FALSE))))OR((vt1.c0 IN (vt1.c2)))))OR(((t0.c76) BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND(TRIM(DISTINCT rt0.c0, vt1.c2))))AND(((rt0.c3) IS FALSE))))OR((vt1.c0 IN (vt1.c2)))))OR(((t0.c76) BETWEEN (NULL) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND(TRIM(DISTINCT rt0.c0, vt1.c2))))AND(((rt0.c3) IS FALSE))))OR((vt1.c0 IN (vt1.c2)))))OR(((t0.c76) BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))AND(TRIM(DISTINCT rt0.c0, vt1.c2))))AND(((rt0.c3) IS FALSE))))OR((vt1.c0 IN (vt1.c2)))))OR(((t0.c76) BETWEEN (NULL) AND (vt1.c0)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((+ (vt0.c0)));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-1012843234'))) ORDER BY (((rt0.c2 COLLATE NOCASE, ((rt0.c3)<=(rt0.c3)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c1))))>(('-1238028474', (rt0.c3 IN ()), LOWER(DISTINCT rt0.c2)))) ASC, ((CASE rt0.c2  WHEN rt0.c1 THEN t0.c76 WHEN t0.c76 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-1012843234'))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2 COLLATE NOCASE, ((rt0.c3)<=(rt0.c3)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c1))))>(('-1238028474', (rt0.c3 IN ()), LOWER(DISTINCT rt0.c2)))) ASC, ((CASE rt0.c2  WHEN rt0.c1 THEN t0.c76 WHEN t0.c76 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-1012843234'))) ORDER BY (((rt0.c2 COLLATE NOCASE, ((rt0.c3)<=(rt0.c3)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c1))))>(('-1238028474', (rt0.c3 IN ()), LOWER(DISTINCT rt0.c2)))) ASC, ((CASE rt0.c2  WHEN rt0.c1 THEN t0.c76 WHEN t0.c76 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-1012843234'))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2 COLLATE NOCASE, ((rt0.c3)<=(rt0.c3)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c1))))>(('-1238028474', (rt0.c3 IN ()), LOWER(DISTINCT rt0.c2)))) ASC, ((CASE rt0.c2  WHEN rt0.c1 THEN t0.c76 WHEN t0.c76 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND ('-1012843234'))) ORDER BY (((rt0.c2 COLLATE NOCASE, ((rt0.c3)<=(rt0.c3)), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c1))))>(('-1238028474', (rt0.c3 IN ()), LOWER(DISTINCT rt0.c2)))) ASC, ((CASE rt0.c2  WHEN rt0.c1 THEN t0.c76 WHEN t0.c76 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN (vt0.c1)))IS(((vt0.c2) IS FALSE))) LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN vt0 ON CASE WHEN '' THEN vt1.c2 END COLLATE BINARY WHERE ((CASE vt1.c1  WHEN t0.c76 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN t0.c76 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN (vt0.c1)))IS(((vt0.c2) IS FALSE))) LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN vt0 ON CASE WHEN '' THEN vt1.c2 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN (vt0.c1)))IS(((vt0.c2) IS FALSE))) LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN vt0 ON CASE WHEN '' THEN vt1.c2 END COLLATE BINARY WHERE ((CASE vt1.c1  WHEN t0.c76 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN t0.c76 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((vt0.c2 IN (vt0.c1)))IS(((vt0.c2) IS FALSE))) LEFT OUTER JOIN vt1 ON x'' LEFT OUTER JOIN vt0 ON CASE WHEN '' THEN vt1.c2 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (UPPER(((rt0.c2)%(vt1.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c2)%(vt1.c2)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (UPPER(((rt0.c2)%(vt1.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c2)%(vt1.c2)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (UPPER(((rt0.c2)%(vt1.c2))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'' COLLATE BINARY)&(((rt0.c3) NOTNULL)))) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)&(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c3 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'' COLLATE BINARY)&(((rt0.c3) NOTNULL)))) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)&(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c3 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'' COLLATE BINARY)&(((rt0.c3) NOTNULL)))) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON (((((('4)8U')AND(rt0.c3)))OR('-1551471158'))) NOT NULL) LEFT OUTER JOIN rt0 ON GLOB(TIME(rt0.c0, rt0.c1, vt1.c0), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) WHERE ((((vt0.c2))<=((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2))<=((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON (((((('4)8U')AND(rt0.c3)))OR('-1551471158'))) NOT NULL) LEFT OUTER JOIN rt0 ON GLOB(TIME(rt0.c0, rt0.c1, vt1.c0), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON (((((('4)8U')AND(rt0.c3)))OR('-1551471158'))) NOT NULL) LEFT OUTER JOIN rt0 ON GLOB(TIME(rt0.c0, rt0.c1, vt1.c0), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) WHERE ((((vt0.c2))<=((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2))<=((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON (((((('4)8U')AND(rt0.c3)))OR('-1551471158'))) NOT NULL) LEFT OUTER JOIN rt0 ON GLOB(TIME(rt0.c0, rt0.c1, vt1.c0), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2)|(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2)|(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2)|(CAST(rt0.c0 AS REAL))));
SELECT * FROM vt0 WHERE ((NOT (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (- (rt0.c3)) END) ORDER BY ((((rt0.c2)||(rt0.c2))) IS FALSE) DESC, ((CASE rt0.c2  WHEN rt0.c1 THEN x'' END) BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (- (rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)||(rt0.c2))) IS FALSE) DESC, ((CASE rt0.c2  WHEN rt0.c1 THEN x'' END) BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (- (rt0.c3)) END) ORDER BY ((((rt0.c2)||(rt0.c2))) IS FALSE) DESC, ((CASE rt0.c2  WHEN rt0.c1 THEN x'' END) BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c2 IN (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (- (rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)||(rt0.c2))) IS FALSE) DESC, ((CASE rt0.c2  WHEN rt0.c1 THEN x'' END) BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c2 IN (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (- (rt0.c3)) END) ORDER BY ((((rt0.c2)||(rt0.c2))) IS FALSE) DESC, ((CASE rt0.c2  WHEN rt0.c1 THEN x'' END) BETWEEN ((((rt0.c1))>=((rt0.c2)))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY CASE ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c1)))OR(0.3457183775187286)))AND(vt1.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c2 END THEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c1)|(rt0.c3)) THEN LAST_INSERT_ROWID() ELSE ((NULL)*(vt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CASE ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c1)))OR(0.3457183775187286)))AND(vt1.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c2 END THEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c1)|(rt0.c3)) THEN LAST_INSERT_ROWID() ELSE ((NULL)*(vt0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY CASE ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c1)))OR(0.3457183775187286)))AND(vt1.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c2 END THEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c1)|(rt0.c3)) THEN LAST_INSERT_ROWID() ELSE ((NULL)*(vt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CASE ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c1)))OR(0.3457183775187286)))AND(vt1.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c2 END THEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c1)|(rt0.c3)) THEN LAST_INSERT_ROWID() ELSE ((NULL)*(vt0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY CASE ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c1)))OR(0.3457183775187286)))AND(vt1.c2))  WHEN CASE WHEN rt0.c2 THEN vt0.c2 END THEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c1)|(rt0.c3)) THEN LAST_INSERT_ROWID() ELSE ((NULL)*(vt0.c2)) END DESC  NULLS FIRST;
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c2)<<(vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND (((t0.c76) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND (((t0.c76) IS TRUE)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c2)<<(vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND (((t0.c76) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND (((t0.c76) IS TRUE)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (((((rt0.c2)<<(vt1.c0))) BETWEEN (((vt1.c0) IS FALSE)) AND (((t0.c76) IS TRUE))));
SELECT ALL COUNT(*) FROM t0, vt0 INDEXED BY i94 WHERE ((vt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 INDEXED BY i94);
SELECT ALL COUNT(*) FROM t0, vt0 INDEXED BY i94 WHERE ((vt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 INDEXED BY i94);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))<=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c2)))))) ORDER BY (x'' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))<=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (x'' IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))<=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c2)))))) ORDER BY (x'' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB))<=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (x'' IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))<=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c2)))))) ORDER BY (x'' IN ()) DESC  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE (((((vt1.c2) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1)IS NOT('1993937554')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1)IS NOT('1993937554'))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((vt1.c2) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1)IS NOT('1993937554')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1)IS NOT('1993937554'))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((vt1.c2) BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c1)IS NOT('1993937554')))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3 COLLATE BINARY)AND(CASE t0.c76  WHEN rt0.c3 THEN rt0.c1 END)))OR(((t0.c76)<(rt0.c1))))) ORDER BY ((t0.c76)<(t0.c76)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE BINARY)AND(CASE t0.c76  WHEN rt0.c3 THEN rt0.c1 END)))OR(((t0.c76)<(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c76)<(t0.c76)) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3 COLLATE BINARY)AND(CASE t0.c76  WHEN rt0.c3 THEN rt0.c1 END)))OR(((t0.c76)<(rt0.c1))))) ORDER BY ((t0.c76)<(t0.c76)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE BINARY)AND(CASE t0.c76  WHEN rt0.c3 THEN rt0.c1 END)))OR(((t0.c76)<(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c76)<(t0.c76)) COLLATE RTRIM ASC);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3 COLLATE BINARY)AND(CASE t0.c76  WHEN rt0.c3 THEN rt0.c1 END)))OR(((t0.c76)<(rt0.c1))))) ORDER BY ((t0.c76)<(t0.c76)) COLLATE RTRIM ASC;
SELECT * FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (((vt1.c0)||(vt1.c1))) AND (((vt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN (((vt1.c0)||(vt1.c1))) AND (((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (((vt1.c0)||(vt1.c1))) AND (((vt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN (((vt1.c0)||(vt1.c1))) AND (((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (((vt1.c0)||(vt1.c1))) AND (((vt1.c1) NOT NULL))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c76)<(rt0.c1))) BETWEEN (((rt0.c1)||(rt0.c1))) AND ((((rt0.c1))<=((t0.c76))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c76)<(rt0.c1))) BETWEEN (((rt0.c1)||(rt0.c1))) AND ((((rt0.c1))<=((t0.c76)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c76)<(rt0.c1))) BETWEEN (((rt0.c1)||(rt0.c1))) AND ((((rt0.c1))<=((t0.c76))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c76)<(rt0.c1))) BETWEEN (((rt0.c1)||(rt0.c1))) AND ((((rt0.c1))<=((t0.c76)))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c76)<(rt0.c1))) BETWEEN (((rt0.c1)||(rt0.c1))) AND ((((rt0.c1))<=((t0.c76))))));
SELECT ALL * FROM vt1 NOT INDEXED, rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((0.3854221162066661 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((0.3854221162066661 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((0.3854221162066661 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((0.3854221162066661 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((0.3854221162066661 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (((rt0.c2) ISNULL)) ORDER BY CAST((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c2))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY CAST((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c2))) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (((rt0.c2) ISNULL)) ORDER BY CAST((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c2))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY CAST((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c2))) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (((rt0.c2) ISNULL)) ORDER BY CAST((((rt0.c1)) BETWEEN ((vt0.c2)) AND ((rt0.c2))) AS REAL) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((~ (TIME('-608055232', vt1.c0, vt1.c0, vt1.c2, vt1.c1, vt1.c2, vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TIME('-608055232', vt1.c0, vt1.c0, vt1.c2, vt1.c1, vt1.c2, vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (TIME('-608055232', vt1.c0, vt1.c0, vt1.c2, vt1.c1, vt1.c2, vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TIME('-608055232', vt1.c0, vt1.c0, vt1.c2, vt1.c1, vt1.c2, vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (TIME('-608055232', vt1.c0, vt1.c0, vt1.c2, vt1.c1, vt1.c2, vt1.c2))));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))>((((t0.c76)>>(vt1.c2)))))) ORDER BY CASE WHEN CAST(t0.c76 AS REAL) THEN NULL WHEN (((vt1.c1)) BETWEEN ((t0.c76)) AND ((vt1.c0))) THEN (x'' IN ()) WHEN CAST(vt1.c0 AS BLOB) THEN CASE 0.44097705816824895  WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c76 END ELSE CAST(t0.c76 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))>((((t0.c76)>>(vt1.c2)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN CAST(t0.c76 AS REAL) THEN NULL WHEN (((vt1.c1)) BETWEEN ((t0.c76)) AND ((vt1.c0))) THEN (x'' IN ()) WHEN CAST(vt1.c0 AS BLOB) THEN CASE 0.44097705816824895  WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c76 END ELSE CAST(t0.c76 AS REAL) END DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))>((((t0.c76)>>(vt1.c2)))))) ORDER BY CASE WHEN CAST(t0.c76 AS REAL) THEN NULL WHEN (((vt1.c1)) BETWEEN ((t0.c76)) AND ((vt1.c0))) THEN (x'' IN ()) WHEN CAST(vt1.c0 AS BLOB) THEN CASE 0.44097705816824895  WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c76 END ELSE CAST(t0.c76 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))>((((t0.c76)>>(vt1.c2)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN CAST(t0.c76 AS REAL) THEN NULL WHEN (((vt1.c1)) BETWEEN ((t0.c76)) AND ((vt1.c0))) THEN (x'' IN ()) WHEN CAST(vt1.c0 AS BLOB) THEN CASE 0.44097705816824895  WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c76 END ELSE CAST(t0.c76 AS REAL) END DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))>((((t0.c76)>>(vt1.c2)))))) ORDER BY CASE WHEN CAST(t0.c76 AS REAL) THEN NULL WHEN (((vt1.c1)) BETWEEN ((t0.c76)) AND ((vt1.c0))) THEN (x'' IN ()) WHEN CAST(vt1.c0 AS BLOB) THEN CASE 0.44097705816824895  WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c76 END ELSE CAST(t0.c76 AS REAL) END DESC;
SELECT ALL * FROM rt0, t0, vt0 WHERE (LIKELY(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (LIKELY(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (LIKELY(((vt0.c1) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((- (rt0.c2))) ORDER BY (~ (CAST(rt0.c2 AS INTEGER))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (((t0.c76) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (~ (CAST(rt0.c2 AS INTEGER))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (((t0.c76) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((- (rt0.c2))) ORDER BY (~ (CAST(rt0.c2 AS INTEGER))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (((t0.c76) IS TRUE) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (~ (CAST(rt0.c2 AS INTEGER))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (((t0.c76) IS TRUE) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((- (rt0.c2))) ORDER BY (~ (CAST(rt0.c2 AS INTEGER))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ()) DESC  NULLS LAST, (((t0.c76) IS TRUE) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((vt1.c1 IN (vt0.c2, vt0.c0, vt0.c1)))IS(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt0.c2, vt0.c0, vt0.c1)))IS(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY vt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((vt1.c1 IN (vt0.c2, vt0.c0, vt0.c1)))IS(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt0.c2, vt0.c0, vt0.c1)))IS(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY vt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE ((((vt1.c1 IN (vt0.c2, vt0.c0, vt0.c1)))IS(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY vt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (NOT ((vt1.c0 IN ()))) LEFT OUTER JOIN t0 ON ((LAST_INSERT_ROWID()) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt0.c2 COLLATE BINARY)!=(((vt0.c1)IS(rt0.c3)))) WHERE (vt0.c2) ORDER BY ((TYPEOF(t0.c76)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT ((vt1.c0 IN ()))) LEFT OUTER JOIN t0 ON ((LAST_INSERT_ROWID()) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt0.c2 COLLATE BINARY)<>(((vt0.c1)IS(rt0.c3)))) ORDER BY ((TYPEOF(t0.c76)) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (NOT ((vt1.c0 IN ()))) LEFT OUTER JOIN t0 ON ((LAST_INSERT_ROWID()) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt0.c2 COLLATE BINARY)!=(((vt0.c1)IS(rt0.c3)))) WHERE (vt0.c2) ORDER BY ((TYPEOF(t0.c76)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT ((vt1.c0 IN ()))) LEFT OUTER JOIN t0 ON ((LAST_INSERT_ROWID()) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt0.c2 COLLATE BINARY)<>(((vt0.c1)IS(rt0.c3)))) ORDER BY ((TYPEOF(t0.c76)) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (NOT ((vt1.c0 IN ()))) LEFT OUTER JOIN t0 ON ((LAST_INSERT_ROWID()) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt0.c2 COLLATE BINARY)!=(((vt0.c1)IS(rt0.c3)))) WHERE (vt0.c2) ORDER BY ((TYPEOF(t0.c76)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON vt1.c1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON vt1.c1);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON vt1.c1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON vt1.c1);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON vt1.c1 WHERE (vt1.c1);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((LOWER(-8.15460595E8)) IS TRUE) CROSS JOIN rt0 ON (((((((((((((((rt0.c0)OR(vt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))OR(876809323))))<((rt0.c3))) WHERE ((+ (((rt0.c2)IS(rt0.c3))))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))AND(((t0.c76)IS NOT(t0.c76)))))AND(CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST, ((((x'ce07', vt0.c1, t0.c76))>=((rt0.c3, vt0.c2, vt0.c2))) IN (rt0.c1 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS(rt0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((LOWER(-8.15460595E8)) IS TRUE) CROSS JOIN rt0 ON (((((((((((((((rt0.c0)OR(vt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))OR(876809323))))<((rt0.c3))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))AND(((t0.c76)IS NOT(t0.c76)))))AND(CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST, ((((x'ce07', vt0.c1, t0.c76))>=((rt0.c3, vt0.c2, vt0.c2))) IN (rt0.c1 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((LOWER(-8.15460595E8)) IS TRUE) CROSS JOIN rt0 ON (((((((((((((((rt0.c0)OR(vt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))OR(876809323))))<((rt0.c3))) WHERE ((+ (((rt0.c2)IS(rt0.c3))))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))AND(((t0.c76)IS NOT(t0.c76)))))AND(CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST, ((((x'ce07', vt0.c1, t0.c76))>=((rt0.c3, vt0.c2, vt0.c2))) IN (rt0.c1 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS(rt0.c3))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((LOWER(-8.15460595E8)) IS TRUE) CROSS JOIN rt0 ON (((((((((((((((rt0.c0)OR(vt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))OR(876809323))))<((rt0.c3))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))AND(((t0.c76)IS NOT(t0.c76)))))AND(CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST, ((((x'ce07', vt0.c1, t0.c76))>=((rt0.c3, vt0.c2, vt0.c2))) IN (rt0.c1 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((LOWER(-8.15460595E8)) IS TRUE) CROSS JOIN rt0 ON (((((((((((((((rt0.c0)OR(vt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))OR(876809323))))<((rt0.c3))) WHERE ((+ (((rt0.c2)IS(rt0.c3))))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))AND(((t0.c76)IS NOT(t0.c76)))))AND(CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST, ((((x'ce07', vt0.c1, t0.c76))>=((rt0.c3, vt0.c2, vt0.c2))) IN (rt0.c1 COLLATE RTRIM, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0)%(vt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0)%(vt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c0)%(vt1.c2)) AS NUMERIC));
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((vt1.c0, vt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt1.c2, vt1.c1)) AND ((rt0.c0, t0.c76, vt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, vt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt1.c2, vt1.c1)) AND ((rt0.c0, t0.c76, vt1.c2))) IN ())) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((vt1.c0, vt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt1.c2, vt1.c1)) AND ((rt0.c0, t0.c76, vt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, vt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt1.c2, vt1.c1)) AND ((rt0.c0, t0.c76, vt1.c2))) IN ())) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (((((vt1.c0, vt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt1.c2, vt1.c1)) AND ((rt0.c0, t0.c76, vt1.c2))) IN ()));
SELECT COUNT(*) FROM rt0, vt0, vt1 CROSS JOIN t0 ON (((NOT (t0.c76)))AND(0.9474594753889085)) WHERE ((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((x'1da7'))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((x'1da7'))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN t0 ON (((NOT (t0.c76)))AND(0.9474594753889085)));
SELECT COUNT(*) FROM rt0, vt0, vt1 CROSS JOIN t0 ON (((NOT (t0.c76)))AND(0.9474594753889085)) WHERE ((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((x'1da7'))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((x'1da7'))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN t0 ON (((NOT (t0.c76)))AND(0.9474594753889085)));
SELECT COUNT(*) FROM rt0, vt0, vt1 CROSS JOIN t0 ON (((NOT (t0.c76)))AND(0.9474594753889085)) WHERE ((((vt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((x'1da7'))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INDEXED BY i94, vt1, t0 INNER JOIN rt0 ON ((((rt0.c2)>(vt1.c1))) BETWEEN (((x'dd4f')>(vt1.c2))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)))) WHERE (((t0.c76 COLLATE NOCASE) NOT BETWEEN ((((156778074))>(('~c')))) AND (CASE vt0.c1  WHEN rt0.c3 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c76 COLLATE NOCASE) NOT BETWEEN ((((156778074))>(('~c')))) AND (CASE vt0.c1  WHEN rt0.c3 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 INDEXED BY i94, vt1, t0 INNER JOIN rt0 ON ((((rt0.c2)>(vt1.c1))) BETWEEN (((x'dd4f')>(vt1.c2))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt0 INDEXED BY i94, vt1, t0 INNER JOIN rt0 ON ((((rt0.c2)>(vt1.c1))) BETWEEN (((x'dd4f')>(vt1.c2))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)))) WHERE (((t0.c76 COLLATE NOCASE) NOT BETWEEN ((((156778074))>(('~c')))) AND (CASE vt0.c1  WHEN rt0.c3 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c76 COLLATE NOCASE) NOT BETWEEN ((((156778074))>(('~c')))) AND (CASE vt0.c1  WHEN rt0.c3 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 INDEXED BY i94, vt1, t0 INNER JOIN rt0 ON ((((rt0.c2)>(vt1.c1))) BETWEEN (((x'dd4f')>(vt1.c2))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1) NOTNULL))<=(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c1)))) INNER JOIN t0 ON json_type(CASE WHEN rt0.c2 THEN '&+' WHEN rt0.c0 THEN t0.c76 WHEN vt0.c1 THEN vt1.c1 END) WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN ('') AND ((+ (t0.c76))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1) NOTNULL))<=(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c1)))) INNER JOIN t0 ON json_type(CASE WHEN rt0.c2 THEN '&+' WHEN rt0.c0 THEN t0.c76 WHEN vt0.c1 THEN vt1.c1 END) ORDER BY ((rt0.c0) NOT BETWEEN ('') AND ((+ (t0.c76))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1) NOTNULL))<=(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c1)))) INNER JOIN t0 ON json_type(CASE WHEN rt0.c2 THEN '&+' WHEN rt0.c0 THEN t0.c76 WHEN vt0.c1 THEN vt1.c1 END) WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN ('') AND ((+ (t0.c76))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1) NOTNULL))<=(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c1)))) INNER JOIN t0 ON json_type(CASE WHEN rt0.c2 THEN '&+' WHEN rt0.c0 THEN t0.c76 WHEN vt0.c1 THEN vt1.c1 END) ORDER BY ((rt0.c0) NOT BETWEEN ('') AND ((+ (t0.c76))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((((vt1.c1) NOTNULL))<=(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c1)))) INNER JOIN t0 ON json_type(CASE WHEN rt0.c2 THEN '&+' WHEN rt0.c0 THEN t0.c76 WHEN vt0.c1 THEN vt1.c1 END) WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN ('') AND ((+ (t0.c76))))  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE ((((0X76df4e1a, rt0.c2, '1695434477')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 ELSE 0X709cb90c END, (vt0.c2 IN (rt0.c3)), ((rt0.c2) NOT NULL))) AND ((CAST(rt0.c1 AS TEXT), ((vt0.c0) NOTNULL), (~ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((0X76df4e1a, rt0.c2, '1695434477')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 ELSE 0x709cb90c END, (vt0.c2 IN (rt0.c3)), ((rt0.c2) NOT NULL))) AND ((CAST(rt0.c1 AS TEXT), ((vt0.c0) NOTNULL), (~ (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((0X76df4e1a, rt0.c2, '1695434477')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 ELSE 0X709cb90c END, (vt0.c2 IN (rt0.c3)), ((rt0.c2) NOT NULL))) AND ((CAST(rt0.c1 AS TEXT), ((vt0.c0) NOTNULL), (~ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((0X76df4e1a, rt0.c2, '1695434477')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 ELSE 0x709cb90c END, (vt0.c2 IN (rt0.c3)), ((rt0.c2) NOT NULL))) AND ((CAST(rt0.c1 AS TEXT), ((vt0.c0) NOTNULL), (~ (rt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((0X76df4e1a, rt0.c2, '1695434477')) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 ELSE 0X709cb90c END, (vt0.c2 IN (rt0.c3)), ((rt0.c2) NOT NULL))) AND ((CAST(rt0.c1 AS TEXT), ((vt0.c0) NOTNULL), (~ (rt0.c1))))));
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))) ORDER BY UPPER(vt0.c1 COLLATE BINARY) ASC  NULLS FIRST, ((((((NULL)>=(vt0.c2)))OR((((vt0.c2, vt0.c0, x'0f81')) NOT BETWEEN ((vt0.c1, 0.9797111414971867, vt0.c2)) AND ((vt0.c1, x'adb0', vt0.c2))))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) ASC  NULLS LAST, (~ ((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(vt0.c1 COLLATE BINARY) ASC  NULLS FIRST, ((((((NULL)>=(vt0.c2)))OR((((vt0.c2, vt0.c0, x'0f81')) NOT BETWEEN ((vt0.c1, 0.9797111414971867, vt0.c2)) AND ((vt0.c1, x'adb0', vt0.c2))))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) ASC  NULLS LAST, (~ ((~ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))) ORDER BY UPPER(vt0.c1 COLLATE BINARY) ASC  NULLS FIRST, ((((((NULL)>=(vt0.c2)))OR((((vt0.c2, vt0.c0, x'0f81')) NOT BETWEEN ((vt0.c1, 0.9797111414971867, vt0.c2)) AND ((vt0.c1, x'adb0', vt0.c2))))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) ASC  NULLS LAST, (~ ((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(vt0.c1 COLLATE BINARY) ASC  NULLS FIRST, ((((((NULL)>=(vt0.c2)))OR((((vt0.c2, vt0.c0, x'0f81')) NOT BETWEEN ((vt0.c1, 0.9797111414971867, vt0.c2)) AND ((vt0.c1, x'adb0', vt0.c2))))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) ASC  NULLS LAST, (~ ((~ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c1 AS NUMERIC))) ORDER BY UPPER(vt0.c1 COLLATE BINARY) ASC  NULLS FIRST, ((((((NULL)>=(vt0.c2)))OR((((vt0.c2, vt0.c0, x'0f81')) NOT BETWEEN ((vt0.c1, 0.9797111414971867, vt0.c2)) AND ((vt0.c1, x'adb0', vt0.c2))))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) ASC  NULLS LAST, (~ ((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c2) NOT NULL))GLOB(CAST(vt1.c2 AS REAL))) WHERE (((((vt0.c2)-(vt1.c2))) NOT BETWEEN (x'') AND (vt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(vt1.c2))) NOT BETWEEN (x'') AND (vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c2) NOT NULL))GLOB(CAST(vt1.c2 AS REAL))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c2) NOT NULL))GLOB(CAST(vt1.c2 AS REAL))) WHERE (((((vt0.c2)-(vt1.c2))) NOT BETWEEN (x'') AND (vt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)-(vt1.c2))) NOT BETWEEN (x'') AND (vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c2) NOT NULL))GLOB(CAST(vt1.c2 AS REAL))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c2) NOT NULL))GLOB(CAST(vt1.c2 AS REAL))) WHERE (((((vt0.c2)-(vt1.c2))) NOT BETWEEN (x'') AND (vt1.c2 COLLATE NOCASE)));
SELECT * FROM rt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (vt1.c2);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<<(vt0.c0)) IN (CASE x''  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN vt0.c1 THEN t0.c76 END, UPPER(vt0.c0))) LEFT OUTER JOIN vt1 ON (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))=((((vt1.c2)GLOB(vt1.c0))))) CROSS JOIN t0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE WHERE (CAST(((vt1.c2)-(rt0.c1)) AS INTEGER)) ORDER BY (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(vt1.c0)))AND(rt0.c3)))OR(vt1.c0)))OR(vt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c2)-(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<<(vt0.c0)) IN (CASE x''  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN vt0.c1 THEN t0.c76 END, UPPER(vt0.c0))) LEFT OUTER JOIN vt1 ON (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))==((((vt1.c2)GLOB(vt1.c0))))) CROSS JOIN t0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE ORDER BY (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(vt1.c0)))AND(rt0.c3)))OR(vt1.c0)))OR(vt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<<(vt0.c0)) IN (CASE x''  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN vt0.c1 THEN t0.c76 END, UPPER(vt0.c0))) LEFT OUTER JOIN vt1 ON (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))=((((vt1.c2)GLOB(vt1.c0))))) CROSS JOIN t0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE WHERE (CAST(((vt1.c2)-(rt0.c1)) AS INTEGER)) ORDER BY (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(vt1.c0)))AND(rt0.c3)))OR(vt1.c0)))OR(vt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c2)-(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c0)<<(vt0.c0)) IN (CASE x''  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN NULL WHEN vt0.c1 THEN t0.c76 END, UPPER(vt0.c0))) LEFT OUTER JOIN vt1 ON (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))==((((vt1.c2)GLOB(vt1.c0))))) CROSS JOIN t0 ON ((vt0.c0) NOT NULL) COLLATE NOCASE ORDER BY (((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(vt1.c0)))AND(rt0.c3)))OR(vt1.c0)))OR(vt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)>=((((1.238646347E9, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY)>=((((1.238646347E9, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)>=((((1.238646347E9, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY)>=((((1.238646347E9, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)>=((((1.238646347E9, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))))));
SELECT * FROM t0 WHERE (((t0.c76 IN ()) IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(STRFTIME(t0.c76, t0.c76, t0.c76)) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c76 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY SQLITE_COMPILEOPTION_USED(STRFTIME(t0.c76, t0.c76, t0.c76)) ASC);
SELECT * FROM t0 WHERE (((t0.c76 IN ()) IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(STRFTIME(t0.c76, t0.c76, t0.c76)) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c76 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY SQLITE_COMPILEOPTION_USED(STRFTIME(t0.c76, t0.c76, t0.c76)) ASC);
SELECT * FROM t0 WHERE (((t0.c76 IN ()) IN ())) ORDER BY SQLITE_COMPILEOPTION_USED(STRFTIME(t0.c76, t0.c76, t0.c76)) ASC;
SELECT * FROM vt1, rt0, vt0 WHERE ((CASE vt0.c1  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END IN ())) ORDER BY (((vt1.c1 IN (rt0.c0, rt0.c1))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c1  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt1.c1 IN (rt0.c0, rt0.c1))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE ((CASE vt0.c1  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END IN ())) ORDER BY (((vt1.c1 IN (rt0.c0, rt0.c1))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c1  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt1.c1 IN (rt0.c0, rt0.c1))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE ((CASE vt0.c1  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END IN ())) ORDER BY (((vt1.c1 IN (rt0.c0, rt0.c1))) NOTNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((vt1.c0)AND(((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1)<=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1)<=(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((vt1.c0)AND(((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1)<=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1)<=(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (((((vt1.c0)AND(((((vt1.c1)OR(vt1.c0)))OR(vt1.c2)))))OR(((vt1.c1)<=(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((((((NULL)AND(rt0.c0)))OR(vt1.c2)))OR(json_object(rt0.c2, rt0.c3, vt1.c0, rt0.c0))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(rt0.c0)))OR(vt1.c2)))OR(json_object(rt0.c2, rt0.c3, vt1.c0, rt0.c0))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((((((NULL)AND(rt0.c0)))OR(vt1.c2)))OR(json_object(rt0.c2, rt0.c3, vt1.c0, rt0.c0))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(rt0.c0)))OR(vt1.c2)))OR(json_object(rt0.c2, rt0.c3, vt1.c0, rt0.c0))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((((((NULL)AND(rt0.c0)))OR(vt1.c2)))OR(json_object(rt0.c2, rt0.c3, vt1.c0, rt0.c0))))AND(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 COLLATE BINARY IN (((rt0.c1) BETWEEN (rt0.c2) AND (0.8470297259428321)), (NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE BINARY IN (((rt0.c1) BETWEEN (rt0.c2) AND (0.8470297259428321)), (NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 COLLATE BINARY IN (((rt0.c1) BETWEEN (rt0.c2) AND (0.8470297259428321)), (NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE BINARY IN (((rt0.c1) BETWEEN (rt0.c2) AND (0.8470297259428321)), (NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 COLLATE BINARY IN (((rt0.c1) BETWEEN (rt0.c2) AND (0.8470297259428321)), (NOT (rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c3)<<(0X52128790)))AND(CASE vt0.c0  WHEN vt0.c2 THEN 0.9797111414971867 ELSE rt0.c1 END)))AND(((vt0.c2)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)<<(0X52128790)))AND(CASE vt0.c0  WHEN vt0.c2 THEN 0.9797111414971867 ELSE rt0.c1 END)))AND(((vt0.c2)/(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c3)<<(0X52128790)))AND(CASE vt0.c0  WHEN vt0.c2 THEN 0.9797111414971867 ELSE rt0.c1 END)))AND(((vt0.c2)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)<<(0X52128790)))AND(CASE vt0.c0  WHEN vt0.c2 THEN 0.9797111414971867 ELSE rt0.c1 END)))AND(((vt0.c2)/(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c3)<<(0X52128790)))AND(CASE vt0.c0  WHEN vt0.c2 THEN 0.9797111414971867 ELSE rt0.c1 END)))AND(((vt0.c2)/(rt0.c3)))));
SELECT ALL * FROM rt0, vt0 NOT INDEXED, vt1, t0 WHERE ((NOT (t0.c76))) ORDER BY CAST(((vt0.c2)LIKE(rt0.c3)) AS TEXT)  NULLS LAST, ((((t0.c76) NOT NULL)) BETWEEN (((rt0.c1) NOT NULL)) AND (((vt0.c0)<(rt0.c2)))) ASC, (CASE WHEN -410266116 THEN rt0.c1 ELSE rt0.c0 END IN (((vt1.c0)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c76))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CAST(((vt0.c2)LIKE(rt0.c3)) AS TEXT)  NULLS LAST, ((((t0.c76) NOT NULL)) BETWEEN (((rt0.c1) NOT NULL)) AND (((vt0.c0)<(rt0.c2)))) ASC, (CASE WHEN -410266116 THEN rt0.c1 ELSE rt0.c0 END IN (((vt1.c0)<=(rt0.c3)))));
SELECT ALL * FROM rt0, vt0 NOT INDEXED, vt1, t0 WHERE ((NOT (t0.c76))) ORDER BY CAST(((vt0.c2)LIKE(rt0.c3)) AS TEXT)  NULLS LAST, ((((t0.c76) NOT NULL)) BETWEEN (((rt0.c1) NOT NULL)) AND (((vt0.c0)<(rt0.c2)))) ASC, (CASE WHEN -410266116 THEN rt0.c1 ELSE rt0.c0 END IN (((vt1.c0)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c76))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY CAST(((vt0.c2)LIKE(rt0.c3)) AS TEXT)  NULLS LAST, ((((t0.c76) NOT NULL)) BETWEEN (((rt0.c1) NOT NULL)) AND (((vt0.c0)<(rt0.c2)))) ASC, (CASE WHEN -410266116 THEN rt0.c1 ELSE rt0.c0 END IN (((vt1.c0)<=(rt0.c3)))));
SELECT ALL * FROM rt0, vt0 NOT INDEXED, vt1, t0 WHERE ((NOT (t0.c76))) ORDER BY CAST(((vt0.c2)LIKE(rt0.c3)) AS TEXT)  NULLS LAST, ((((t0.c76) NOT NULL)) BETWEEN (((rt0.c1) NOT NULL)) AND (((vt0.c0)<(rt0.c2)))) ASC, (CASE WHEN -410266116 THEN rt0.c1 ELSE rt0.c0 END IN (((vt1.c0)<=(rt0.c3))));
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c76 THEN t0.c76 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c76 THEN t0.c76 END COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c76 THEN t0.c76 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c76 THEN t0.c76 END COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c76 THEN t0.c76 END COLLATE BINARY);
SELECT * FROM t0 FULL OUTER JOIN vt1 ON rt0.c2 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c2)GLOB(vt0.c2)))) FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN (vt0.c0)) AS BLOB) WHERE ((rt0.c3 COLLATE NOCASE IN (((rt0.c3)>>(rt0.c1)), LIKELY(DISTINCT t0.c76))));
SELECT SUM(count) FROM (SELECT (((rt0.c3 COLLATE NOCASE IN (((rt0.c3)>>(rt0.c1)), LIKELY(DISTINCT t0.c76)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON rt0.c2 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c2)GLOB(vt0.c2)))) FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN (vt0.c0)) AS BLOB));
SELECT * FROM t0 FULL OUTER JOIN vt1 ON rt0.c2 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c2)GLOB(vt0.c2)))) FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN (vt0.c0)) AS BLOB) WHERE ((rt0.c3 COLLATE NOCASE IN (((rt0.c3)>>(rt0.c1)), LIKELY(DISTINCT t0.c76))));
SELECT SUM(count) FROM (SELECT (((rt0.c3 COLLATE NOCASE IN (((rt0.c3)>>(rt0.c1)), LIKELY(DISTINCT t0.c76)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON rt0.c2 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c2)GLOB(vt0.c2)))) FULL OUTER JOIN vt0 ON CAST((rt0.c1 IN (vt0.c0)) AS BLOB));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((((((rt0.c0)AND(t0.c76)))AND(rt0.c2)))AND(x'')))AND(rt0.c1)))OR(((rt0.c2)GLOB(NULL)))))AND(((vt0.c2)OR(vt0.c2))))) ORDER BY vt0.c1 ASC, (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE x'f45d' END)) AND ((((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)AND(t0.c76)))AND(rt0.c2)))AND(x'')))AND(rt0.c1)))OR(((rt0.c2)GLOB(NULL)))))AND(((vt0.c2)OR(vt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY vt0.c1 ASC, (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE x'f45d' END)) AND ((((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))) DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((((((rt0.c0)AND(t0.c76)))AND(rt0.c2)))AND(x'')))AND(rt0.c1)))OR(((rt0.c2)GLOB(NULL)))))AND(((vt0.c2)OR(vt0.c2))))) ORDER BY vt0.c1 ASC, (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE x'f45d' END)) AND ((((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)AND(t0.c76)))AND(rt0.c2)))AND(x'')))AND(rt0.c1)))OR(((rt0.c2)GLOB(NULL)))))AND(((vt0.c2)OR(vt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY vt0.c1 ASC, (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE x'f45d' END)) AND ((((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))) DESC);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((((((rt0.c0)AND(t0.c76)))AND(rt0.c2)))AND(x'')))AND(rt0.c1)))OR(((rt0.c2)GLOB(NULL)))))AND(((vt0.c2)OR(vt0.c2))))) ORDER BY vt0.c1 ASC, (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE x'f45d' END)) AND ((((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(0.1168154309273216) IN (json_object(vt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((LENGTH(0.1168154309273216) IN (json_object(vt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(0.1168154309273216) IN (json_object(vt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((LENGTH(0.1168154309273216) IN (json_object(vt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((t0.c76) ISNULL) THEN LOWER(vt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c76) ISNULL) THEN LOWER(vt1.c2) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((t0.c76) ISNULL) THEN LOWER(vt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c76) ISNULL) THEN LOWER(vt1.c2) END) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN ((t0.c76) ISNULL) THEN LOWER(vt1.c2) END);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON vt0.c2 INNER JOIN vt1 ON x'' WHERE (CASE rt0.c2  WHEN -64902638 THEN (- (rt0.c2)) ELSE ((rt0.c2)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN -64902638 THEN (- (rt0.c2)) ELSE ((rt0.c2)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON vt0.c2 INNER JOIN vt1 ON x'');
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON vt0.c2 INNER JOIN vt1 ON x'' WHERE (CASE rt0.c2  WHEN -64902638 THEN (- (rt0.c2)) ELSE ((rt0.c2)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN -64902638 THEN (- (rt0.c2)) ELSE ((rt0.c2)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON vt0.c2 INNER JOIN vt1 ON x'');
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON vt0.c2 INNER JOIN vt1 ON x'' WHERE (CASE rt0.c2  WHEN -64902638 THEN (- (rt0.c2)) ELSE ((rt0.c2)<<(vt0.c0)) END);
SELECT COUNT(*) FROM t0 WHERE (((load_extension(t0.c76, t0.c76))IS NOT(CAST(t0.c76 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t0.c76, t0.c76))IS NOT(CAST(t0.c76 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((load_extension(t0.c76, t0.c76))IS NOT(CAST(t0.c76 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t0.c76, t0.c76))IS NOT(CAST(t0.c76 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((load_extension(t0.c76, t0.c76))IS NOT(CAST(t0.c76 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c0)GLOB(vt1.c1)))IS(((vt1.c1)OR(vt1.c2)))) DESC  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c1)))IS(((vt1.c1)OR(vt1.c2)))) DESC  NULLS LAST, vt1.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c0)GLOB(vt1.c1)))IS(((vt1.c1)OR(vt1.c2)))) DESC  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c1)))IS(((vt1.c1)OR(vt1.c2)))) DESC  NULLS LAST, vt1.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c0)GLOB(vt1.c1)))IS(((vt1.c1)OR(vt1.c2)))) DESC  NULLS LAST, vt1.c1;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((t0.c76)) AND ((vt0.c1))))<(((vt0.c2) NOTNULL))) LEFT OUTER JOIN t0 ON LOWER(vt0.c2) WHERE ((((vt0.c1))<((((vt0.c2)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<((((vt0.c2)|(vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((t0.c76)) AND ((vt0.c1))))<(((vt0.c2) NOTNULL))) LEFT OUTER JOIN t0 ON LOWER(vt0.c2));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((t0.c76)) AND ((vt0.c1))))<(((vt0.c2) NOTNULL))) LEFT OUTER JOIN t0 ON LOWER(vt0.c2) WHERE ((((vt0.c1))<((((vt0.c2)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<((((vt0.c2)|(vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)) BETWEEN ((t0.c76)) AND ((vt0.c1))))<(((vt0.c2) NOTNULL))) LEFT OUTER JOIN t0 ON LOWER(vt0.c2));
SELECT ALL * FROM vt0 INDEXED BY i94, rt0, t0 WHERE ((((t0.c76 IN (rt0.c0)))LIKE(((t0.c76)<(rt0.c3))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)GLOB((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c76 IN (rt0.c0)))LIKE(((t0.c76)<(rt0.c3))))) IS TRUE)  as count FROM vt0 INDEXED BY i94, rt0, t0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)GLOB((rt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0 INDEXED BY i94, rt0, t0 WHERE ((((t0.c76 IN (rt0.c0)))LIKE(((t0.c76)<(rt0.c3))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)GLOB((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c76 IN (rt0.c0)))LIKE(((t0.c76)<(rt0.c3))))) IS TRUE)  as count FROM vt0 INDEXED BY i94, rt0, t0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)GLOB((rt0.c0 IN ()))) ASC);
SELECT * FROM vt1, rt0, t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (t0.c76);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c2, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c1)<>(vt1.c2)), rt0.c1 COLLATE BINARY, ((vt1.c0)<<(vt1.c0)))) AND (((((vt1.c1, rt0.c3, vt0.c1, rt0.c2, vt1.c2)) BETWEEN ((vt1.c2, rt0.c1, vt0.c0, vt1.c2, vt0.c2)) AND (('2', -815460595, vt0.c0, vt1.c2, 0.7716617142995758))), CASE 0X5ca43c99  WHEN rt0.c0 THEN rt0.c0 END, ((vt1.c1)<=(vt0.c1))))) WHERE (((~ (rt0.c1)) IN (json_patch(vt0.c0, -3.4975681E7)))) ORDER BY CAST(((NULL) NOT BETWEEN (vt1.c2) AND (rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN (json_patch(vt0.c0, -3.4975681E7)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c2, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c1)!=(vt1.c2)), rt0.c1 COLLATE BINARY, ((vt1.c0)<<(vt1.c0)))) AND (((((vt1.c1, rt0.c3, vt0.c1, rt0.c2, vt1.c2)) BETWEEN ((vt1.c2, rt0.c1, vt0.c0, vt1.c2, vt0.c2)) AND (('2', -815460595, vt0.c0, vt1.c2, 0.7716617142995758))), CASE 0x5ca43c99  WHEN rt0.c0 THEN rt0.c0 END, ((vt1.c1)<=(vt0.c1))))) ORDER BY CAST(((NULL) NOT BETWEEN (vt1.c2) AND (rt0.c0)) AS BLOB) DESC);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c2, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c1)<>(vt1.c2)), rt0.c1 COLLATE BINARY, ((vt1.c0)<<(vt1.c0)))) AND (((((vt1.c1, rt0.c3, vt0.c1, rt0.c2, vt1.c2)) BETWEEN ((vt1.c2, rt0.c1, vt0.c0, vt1.c2, vt0.c2)) AND (('2', -815460595, vt0.c0, vt1.c2, 0.7716617142995758))), CASE 0X5ca43c99  WHEN rt0.c0 THEN rt0.c0 END, ((vt1.c1)<=(vt0.c1))))) WHERE (((~ (rt0.c1)) IN (json_patch(vt0.c0, -3.4975681E7)))) ORDER BY CAST(((NULL) NOT BETWEEN (vt1.c2) AND (rt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN (json_patch(vt0.c0, -3.4975681E7)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c2, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c1)!=(vt1.c2)), rt0.c1 COLLATE BINARY, ((vt1.c0)<<(vt1.c0)))) AND (((((vt1.c1, rt0.c3, vt0.c1, rt0.c2, vt1.c2)) BETWEEN ((vt1.c2, rt0.c1, vt0.c0, vt1.c2, vt0.c2)) AND (('2', -815460595, vt0.c0, vt1.c2, 0.7716617142995758))), CASE 0x5ca43c99  WHEN rt0.c0 THEN rt0.c0 END, ((vt1.c1)<=(vt0.c1))))) ORDER BY CAST(((NULL) NOT BETWEEN (vt1.c2) AND (rt0.c0)) AS BLOB) DESC);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c2, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c1)<>(vt1.c2)), rt0.c1 COLLATE BINARY, ((vt1.c0)<<(vt1.c0)))) AND (((((vt1.c1, rt0.c3, vt0.c1, rt0.c2, vt1.c2)) BETWEEN ((vt1.c2, rt0.c1, vt0.c0, vt1.c2, vt0.c2)) AND (('2', -815460595, vt0.c0, vt1.c2, 0.7716617142995758))), CASE 0X5ca43c99  WHEN rt0.c0 THEN rt0.c0 END, ((vt1.c1)<=(vt0.c1))))) WHERE (((~ (rt0.c1)) IN (json_patch(vt0.c0, -3.4975681E7)))) ORDER BY CAST(((NULL) NOT BETWEEN (vt1.c2) AND (rt0.c0)) AS BLOB) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- ((((x'5dae'))>=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((- ((((x'5dae'))>=((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- ((((x'5dae'))>=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((- ((((x'5dae'))>=((rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- ((((x'5dae'))>=((rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('1554267289') ORDER BY (+ ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('1554267289') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (+ ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('1554267289') ORDER BY (+ ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('1554267289') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (+ ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('1554267289') ORDER BY (+ ((rt0.c3 IN ())));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT NULL)) ORDER BY (((((vt1.c2, vt1.c2, 0.4910802279113001)) BETWEEN ((vt1.c2, vt1.c0, vt1.c2)) AND ((vt1.c2, vt1.c0, vt1.c1)))) BETWEEN (vt1.c2 COLLATE RTRIM) AND ((((vt1.c0))!=((vt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c2, vt1.c2, 0.4910802279113001)) BETWEEN ((vt1.c2, vt1.c0, vt1.c2)) AND ((vt1.c2, vt1.c0, vt1.c1)))) BETWEEN (vt1.c2 COLLATE RTRIM) AND ((((vt1.c0))!=((vt1.c2))))) ASC);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT NULL)) ORDER BY (((((vt1.c2, vt1.c2, 0.4910802279113001)) BETWEEN ((vt1.c2, vt1.c0, vt1.c2)) AND ((vt1.c2, vt1.c0, vt1.c1)))) BETWEEN (vt1.c2 COLLATE RTRIM) AND ((((vt1.c0))!=((vt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c2, vt1.c2, 0.4910802279113001)) BETWEEN ((vt1.c2, vt1.c0, vt1.c2)) AND ((vt1.c2, vt1.c0, vt1.c1)))) BETWEEN (vt1.c2 COLLATE RTRIM) AND ((((vt1.c0))!=((vt1.c2))))) ASC);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT NULL)) ORDER BY (((((vt1.c2, vt1.c2, 0.4910802279113001)) BETWEEN ((vt1.c2, vt1.c0, vt1.c2)) AND ((vt1.c2, vt1.c0, vt1.c1)))) BETWEEN (vt1.c2 COLLATE RTRIM) AND ((((vt1.c0))!=((vt1.c2))))) ASC;
SELECT * FROM t0 INNER JOIN vt1 ON (((t0.c76) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c3)))) CROSS JOIN rt0 ON ((CASE WHEN t0.c76 THEN rt0.c0 ELSE rt0.c0 END) ISNULL) WHERE ((- (((rt0.c3)!=(vt1.c1))))) ORDER BY (UPPER(DISTINCT rt0.c3) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)!=(vt1.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((t0.c76) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c3)))) CROSS JOIN rt0 ON ((CASE WHEN t0.c76 THEN rt0.c0 ELSE rt0.c0 END) ISNULL) ORDER BY (UPPER(DISTINCT rt0.c3) IN ()) ASC);
SELECT * FROM t0 INNER JOIN vt1 ON (((t0.c76) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c3)))) CROSS JOIN rt0 ON ((CASE WHEN t0.c76 THEN rt0.c0 ELSE rt0.c0 END) ISNULL) WHERE ((- (((rt0.c3)!=(vt1.c1))))) ORDER BY (UPPER(DISTINCT rt0.c3) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)!=(vt1.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((t0.c76) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c3)))) CROSS JOIN rt0 ON ((CASE WHEN t0.c76 THEN rt0.c0 ELSE rt0.c0 END) ISNULL) ORDER BY (UPPER(DISTINCT rt0.c3) IN ()) ASC);
SELECT * FROM t0 INNER JOIN vt1 ON (((t0.c76) BETWEEN (rt0.c2) AND (rt0.c0)) IN ((rt0.c1 IN (rt0.c3)))) CROSS JOIN rt0 ON ((CASE WHEN t0.c76 THEN rt0.c0 ELSE rt0.c0 END) ISNULL) WHERE ((- (((rt0.c3)!=(vt1.c1))))) ORDER BY (UPPER(DISTINCT rt0.c3) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((0.933784263237735)IS(rt0.c0)) IN (CAST(vt0.c0 AS INTEGER))) WHERE ((((NOT (rt0.c3)))AND(CAST(rt0.c3 AS REAL)))) ORDER BY json_extract(rt0.c3, vt0.c1) COLLATE NOCASE DESC, CASE rt0.c2  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3)))AND(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((0.933784263237735)IS(rt0.c0)) IN (CAST(vt0.c0 AS INTEGER))) ORDER BY json_extract(rt0.c3, vt0.c1) COLLATE NOCASE DESC, CASE rt0.c2  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((0.933784263237735)IS(rt0.c0)) IN (CAST(vt0.c0 AS INTEGER))) WHERE ((((NOT (rt0.c3)))AND(CAST(rt0.c3 AS REAL)))) ORDER BY json_extract(rt0.c3, vt0.c1) COLLATE NOCASE DESC, CASE rt0.c2  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3)))AND(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((0.933784263237735)IS(rt0.c0)) IN (CAST(vt0.c0 AS INTEGER))) ORDER BY json_extract(rt0.c3, vt0.c1) COLLATE NOCASE DESC, CASE rt0.c2  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON (((0.933784263237735)IS(rt0.c0)) IN (CAST(vt0.c0 AS INTEGER))) WHERE ((((NOT (rt0.c3)))AND(CAST(rt0.c3 AS REAL)))) ORDER BY json_extract(rt0.c3, vt0.c1) COLLATE NOCASE DESC, CASE rt0.c2  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c2 ELSE vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((((NULL) ISNULL))AND((vt0.c1 IN (rt0.c0, rt0.c1)))))OR(((((rt0.c3)AND(vt1.c2)))OR(rt0.c0)))) FULL OUTER JOIN vt1 ON (((((((vt0.c2))<=((vt0.c1))))OR(((('-190789878')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) WHERE (((- (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c1)) IN ())) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((((NULL) ISNULL))AND((vt0.c1 IN (rt0.c0, rt0.c1)))))OR(((((rt0.c3)AND(vt1.c2)))OR(rt0.c0)))) FULL OUTER JOIN vt1 ON (((((((vt0.c2))<=((vt0.c1))))OR(((('-190789878')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))));
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((((NULL) ISNULL))AND((vt0.c1 IN (rt0.c0, rt0.c1)))))OR(((((rt0.c3)AND(vt1.c2)))OR(rt0.c0)))) FULL OUTER JOIN vt1 ON (((((((vt0.c2))<=((vt0.c1))))OR(((('-190789878')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) WHERE (((- (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c1)) IN ())) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((((NULL) ISNULL))AND((vt0.c1 IN (rt0.c0, rt0.c1)))))OR(((((rt0.c3)AND(vt1.c2)))OR(rt0.c0)))) FULL OUTER JOIN vt1 ON (((((((vt0.c2))<=((vt0.c1))))OR(((('-190789878')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))));
SELECT * FROM vt0 INNER JOIN t0 ON (- ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON x'' WHERE (((((((vt0.c0)>=(rt0.c0)))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(rt0.c0)))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON x'');
SELECT * FROM vt0 INNER JOIN t0 ON (- ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON x'' WHERE (((((((vt0.c0)>=(rt0.c0)))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(rt0.c0)))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON x'');
SELECT * FROM vt0 INNER JOIN t0 ON (- ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON x'' WHERE (((((((vt0.c0)>=(rt0.c0)))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((((NULL) IS FALSE)) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0 IN ()))), HEX(vt1.c2) COLLATE RTRIM DESC, (+ ((vt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((((NULL) IS FALSE)) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0 IN ()))), HEX(vt1.c2) COLLATE RTRIM DESC, (+ ((vt1.c2 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((((NULL) IS FALSE)) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0 IN ()))), HEX(vt1.c2) COLLATE RTRIM DESC, (+ ((vt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((((NULL) IS FALSE)) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0 IN ()))), HEX(vt1.c2) COLLATE RTRIM DESC, (+ ((vt1.c2 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((((NULL) IS FALSE)) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0 IN ()))), HEX(vt1.c2) COLLATE RTRIM DESC, (+ ((vt1.c2 IN ())));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((('1406536965') IS FALSE)) ORDER BY x''  NULLS FIRST, CASE WHEN ((rt0.c3) ISNULL) THEN (((vt0.c1)) NOT BETWEEN (('0.3700554448847523')) AND ((vt1.c1))) ELSE vt0.c2 COLLATE RTRIM END DESC, CAST(((rt0.c3)<(vt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((('1406536965') IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY x''  NULLS FIRST, CASE WHEN ((rt0.c3) ISNULL) THEN (((vt0.c1)) NOT BETWEEN (('0.3700554448847523')) AND ((vt1.c1))) ELSE vt0.c2 COLLATE RTRIM END DESC, CAST(((rt0.c3)<(vt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((('1406536965') IS FALSE)) ORDER BY x''  NULLS FIRST, CASE WHEN ((rt0.c3) ISNULL) THEN (((vt0.c1)) NOT BETWEEN (('0.3700554448847523')) AND ((vt1.c1))) ELSE vt0.c2 COLLATE RTRIM END DESC, CAST(((rt0.c3)<(vt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((('1406536965') IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY x''  NULLS FIRST, CASE WHEN ((rt0.c3) ISNULL) THEN (((vt0.c1)) NOT BETWEEN (('0.3700554448847523')) AND ((vt1.c1))) ELSE vt0.c2 COLLATE RTRIM END DESC, CAST(((rt0.c3)<(vt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((('1406536965') IS FALSE)) ORDER BY x''  NULLS FIRST, CASE WHEN ((rt0.c3) ISNULL) THEN (((vt0.c1)) NOT BETWEEN (('0.3700554448847523')) AND ((vt1.c1))) ELSE vt0.c2 COLLATE RTRIM END DESC, CAST(((rt0.c3)<(vt0.c2)) AS REAL);
SELECT ALL * FROM t0 WHERE ((x'0fcd' IN ()));
SELECT SUM(count) FROM (SELECT (((x'0fcd' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((x'0fcd' IN ()));
SELECT SUM(count) FROM (SELECT (((x'0fcd' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((x'0fcd' IN ()));
SELECT * FROM t0 CROSS JOIN rt0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) IS TRUE) WHERE ((- (((((rt0.c3)AND(x'da0f8fdb')))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c3)AND(x'da0f8fdb')))AND(rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) IS TRUE));
SELECT * FROM t0 CROSS JOIN rt0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) IS TRUE) WHERE ((- (((((rt0.c3)AND(x'da0f8fdb')))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c3)AND(x'da0f8fdb')))AND(rt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) IS TRUE));
SELECT * FROM t0 CROSS JOIN rt0 ON ((IFNULL(DISTINCT rt0.c1, rt0.c1)) IS TRUE) WHERE ((- (((((rt0.c3)AND(x'da0f8fdb')))AND(rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((('TRUE') NOT BETWEEN ((+ (t0.c76))) AND ((t0.c76 IN ())))) ORDER BY (((((((((t0.c76 IN ()))AND((NOT (t0.c76)))))OR(json_patch(t0.c76, t0.c76))))OR(t0.c76 COLLATE NOCASE)))AND(t0.c76 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('TRUE') NOT BETWEEN ((+ (t0.c76))) AND ((t0.c76 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c76 IN ()))AND((NOT (t0.c76)))))OR(json_patch(t0.c76, t0.c76))))OR(t0.c76 COLLATE NOCASE)))AND(t0.c76 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((('TRUE') NOT BETWEEN ((+ (t0.c76))) AND ((t0.c76 IN ())))) ORDER BY (((((((((t0.c76 IN ()))AND((NOT (t0.c76)))))OR(json_patch(t0.c76, t0.c76))))OR(t0.c76 COLLATE NOCASE)))AND(t0.c76 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('TRUE') NOT BETWEEN ((+ (t0.c76))) AND ((t0.c76 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c76 IN ()))AND((NOT (t0.c76)))))OR(json_patch(t0.c76, t0.c76))))OR(t0.c76 COLLATE NOCASE)))AND(t0.c76 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((('TRUE') NOT BETWEEN ((+ (t0.c76))) AND ((t0.c76 IN ())))) ORDER BY (((((((((t0.c76 IN ()))AND((NOT (t0.c76)))))OR(json_patch(t0.c76, t0.c76))))OR(t0.c76 COLLATE NOCASE)))AND(t0.c76 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)AND(vt0.c0))) ORDER BY ((((NULL)OR(((t0.c76)!=(vt0.c2)))))OR(vt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)AND(vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((NULL)OR(((t0.c76)<>(vt0.c2)))))OR(vt1.c2 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)AND(vt0.c0))) ORDER BY ((((NULL)OR(((t0.c76)!=(vt0.c2)))))OR(vt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)AND(vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((NULL)OR(((t0.c76)<>(vt0.c2)))))OR(vt1.c2 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)AND(vt0.c0))) ORDER BY ((((NULL)OR(((t0.c76)!=(vt0.c2)))))OR(vt1.c2 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON '?*<}' WHERE ((((LIKELY(rt0.c1), CASE vt1.c0  WHEN NULL THEN vt1.c0 END, (rt0.c0 IN (rt0.c1, rt0.c1))))>=((rt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) ORDER BY CASE '-1366905721'  WHEN rt0.c3 THEN vt1.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(rt0.c1), CASE vt1.c0  WHEN NULL THEN vt1.c0 END, (rt0.c0 IN (rt0.c1, rt0.c1))))>=((rt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON '?*<}' ORDER BY CASE '-1366905721'  WHEN rt0.c3 THEN vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON '?*<}' WHERE ((((LIKELY(rt0.c1), CASE vt1.c0  WHEN NULL THEN vt1.c0 END, (rt0.c0 IN (rt0.c1, rt0.c1))))>=((rt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) ORDER BY CASE '-1366905721'  WHEN rt0.c3 THEN vt1.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(rt0.c1), CASE vt1.c0  WHEN NULL THEN vt1.c0 END, (rt0.c0 IN (rt0.c1, rt0.c1))))>=((rt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON '?*<}' ORDER BY CASE '-1366905721'  WHEN rt0.c3 THEN vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON '?*<}' WHERE ((((LIKELY(rt0.c1), CASE vt1.c0  WHEN NULL THEN vt1.c0 END, (rt0.c0 IN (rt0.c1, rt0.c1))))>=((rt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) ORDER BY CASE '-1366905721'  WHEN rt0.c3 THEN vt1.c0 END COLLATE NOCASE;
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((CASE WHEN rt0.c1 THEN t0.c76 END))>((((t0.c76) NOTNULL)))) RIGHT OUTER JOIN t0 ON UNLIKELY((vt1.c0 IN ())) WHERE (CAST(1994346010 AS REAL)) ORDER BY ((((CASE WHEN rt0.c1 THEN x'' END)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN '-1714583386' THEN rt0.c1 END)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, (vt0.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(1994346010 AS REAL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((CASE WHEN rt0.c1 THEN t0.c76 END))>((((t0.c76) NOTNULL)))) RIGHT OUTER JOIN t0 ON UNLIKELY((vt1.c0 IN ())) ORDER BY ((((CASE WHEN rt0.c1 THEN x'' END)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN '-1714583386' THEN rt0.c1 END)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, (vt0.c2 IN ()) ASC);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((CASE WHEN rt0.c1 THEN t0.c76 END))>((((t0.c76) NOTNULL)))) RIGHT OUTER JOIN t0 ON UNLIKELY((vt1.c0 IN ())) WHERE (CAST(1994346010 AS REAL)) ORDER BY ((((CASE WHEN rt0.c1 THEN x'' END)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN '-1714583386' THEN rt0.c1 END)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, (vt0.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(1994346010 AS REAL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((CASE WHEN rt0.c1 THEN t0.c76 END))>((((t0.c76) NOTNULL)))) RIGHT OUTER JOIN t0 ON UNLIKELY((vt1.c0 IN ())) ORDER BY ((((CASE WHEN rt0.c1 THEN x'' END)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN '-1714583386' THEN rt0.c1 END)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, (vt0.c2 IN ()) ASC);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (vt1.c2) ORDER BY CASE vt0.c1  WHEN vt1.c2 THEN UNLIKELY(NULL) END  NULLS FIRST, ((vt0.c2)&(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE vt0.c1  WHEN vt1.c2 THEN UNLIKELY(NULL) END  NULLS FIRST, ((vt0.c2)&(rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (vt1.c2) ORDER BY CASE vt0.c1  WHEN vt1.c2 THEN UNLIKELY(NULL) END  NULLS FIRST, ((vt0.c2)&(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE vt0.c1  WHEN vt1.c2 THEN UNLIKELY(NULL) END  NULLS FIRST, ((vt0.c2)&(rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (vt1.c2) ORDER BY CASE vt0.c1  WHEN vt1.c2 THEN UNLIKELY(NULL) END  NULLS FIRST, ((vt0.c2)&(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE ((t0.c76 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c76 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE ((t0.c76 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c76 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE ((t0.c76 IN ()) COLLATE BINARY);
SELECT * FROM vt1 WHERE (CASE ((((vt1.c2)AND(vt1.c2)))AND(vt1.c1))  WHEN CAST(vt1.c1 AS BLOB) THEN ((((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c2)AND(vt1.c2)))AND(vt1.c1))  WHEN CAST(vt1.c1 AS BLOB) THEN ((((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((((vt1.c2)AND(vt1.c2)))AND(vt1.c1))  WHEN CAST(vt1.c1 AS BLOB) THEN ((((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c2)AND(vt1.c2)))AND(vt1.c1))  WHEN CAST(vt1.c1 AS BLOB) THEN ((((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((((vt1.c2)AND(vt1.c2)))AND(vt1.c1))  WHEN CAST(vt1.c1 AS BLOB) THEN ((((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)) END);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c76 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c76 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c76 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c76 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c76 AS INTEGER)) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((NOT (LIKELY(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (LIKELY(vt1.c2)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((NOT (LIKELY(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (LIKELY(vt1.c2)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((NOT (LIKELY(vt1.c2))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS BLOB));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (x'' IN ()) WHERE (((((rt0.c3) NOTNULL)) BETWEEN (LTRIM(vt0.c1)) AND ((((rt0.c3, rt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-365299955', rt0.c2)) AND ((rt0.c3, vt0.c2, vt0.c0)))))) ORDER BY (((((rt0.c0)&(vt0.c2))))<=((rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) BETWEEN (LTRIM(vt0.c1)) AND ((((rt0.c3, rt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-365299955', rt0.c2)) AND ((rt0.c3, vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (x'' IN ()) ORDER BY (((((rt0.c0)&(vt0.c2))))<=((rt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (x'' IN ()) WHERE (((((rt0.c3) NOTNULL)) BETWEEN (LTRIM(vt0.c1)) AND ((((rt0.c3, rt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-365299955', rt0.c2)) AND ((rt0.c3, vt0.c2, vt0.c0)))))) ORDER BY (((((rt0.c0)&(vt0.c2))))<=((rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) BETWEEN (LTRIM(vt0.c1)) AND ((((rt0.c3, rt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-365299955', rt0.c2)) AND ((rt0.c3, vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (x'' IN ()) ORDER BY (((((rt0.c0)&(vt0.c2))))<=((rt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (x'' IN ()) WHERE (((((rt0.c3) NOTNULL)) BETWEEN (LTRIM(vt0.c1)) AND ((((rt0.c3, rt0.c0, vt0.c1)) BETWEEN ((vt0.c0, '-365299955', rt0.c2)) AND ((rt0.c3, vt0.c2, vt0.c0)))))) ORDER BY (((((rt0.c0)&(vt0.c2))))<=((rt0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (-465534193) ORDER BY TRIM(((rt0.c0) NOT BETWEEN (0.6978755080341829) AND (0.3736829099168658))) DESC  NULLS FIRST, ((((rt0.c3)>=(rt0.c2)))IS((vt1.c0 IN ())))  NULLS LAST, CASE rt0.c3  WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-465534193) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY TRIM(((rt0.c0) NOT BETWEEN (0.6978755080341829) AND (0.3736829099168658))) DESC  NULLS FIRST, ((((rt0.c3)>=(rt0.c2)))IS((vt1.c0 IN ())))  NULLS LAST, CASE rt0.c3  WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (-465534193) ORDER BY TRIM(((rt0.c0) NOT BETWEEN (0.6978755080341829) AND (0.3736829099168658))) DESC  NULLS FIRST, ((((rt0.c3)>=(rt0.c2)))IS((vt1.c0 IN ())))  NULLS LAST, CASE rt0.c3  WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-465534193) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY TRIM(((rt0.c0) NOT BETWEEN (0.6978755080341829) AND (0.3736829099168658))) DESC  NULLS FIRST, ((((rt0.c3)>=(rt0.c2)))IS((vt1.c0 IN ())))  NULLS LAST, CASE rt0.c3  WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (-465534193) ORDER BY TRIM(((rt0.c0) NOT BETWEEN (0.6978755080341829) AND (0.3736829099168658))) DESC  NULLS FIRST, ((((rt0.c3)>=(rt0.c2)))IS((vt1.c0 IN ())))  NULLS LAST, CASE rt0.c3  WHEN vt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 INDEXED BY i94, vt0 WHERE ((- (CASE rt0.c3  WHEN rt0.c3 THEN '3䣄\r~l셄&,1' ELSE rt0.c3 END))) ORDER BY (~ ((~ (rt0.c2)))) ASC, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c3  WHEN rt0.c3 THEN '3䣄\r~l셄&,1' ELSE rt0.c3 END))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i94, vt0 ORDER BY (~ ((~ (rt0.c2)))) ASC, rt0.c0 DESC);
SELECT COUNT(*) FROM t0, rt0 INDEXED BY i94, vt0 WHERE ((- (CASE rt0.c3  WHEN rt0.c3 THEN '3䣄\r~l셄&,1' ELSE rt0.c3 END))) ORDER BY (~ ((~ (rt0.c2)))) ASC, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c3  WHEN rt0.c3 THEN '3䣄\r~l셄&,1' ELSE rt0.c3 END))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i94, vt0 ORDER BY (~ ((~ (rt0.c2)))) ASC, rt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c2)>('-1336775968'))) BETWEEN (((vt0.c2)GLOB(0.08437122676989428))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c2)))) RIGHT OUTER JOIN rt0 ON (- (((vt1.c2)GLOB(x'6235')))) WHERE (((CAST(rt0.c3 AS TEXT))OR(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c2)>('-1336775968'))) BETWEEN (((vt0.c2)GLOB(0.08437122676989428))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c2)))) RIGHT OUTER JOIN rt0 ON (- (((vt1.c2)GLOB(x'6235')))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c2)>('-1336775968'))) BETWEEN (((vt0.c2)GLOB(0.08437122676989428))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c2)))) RIGHT OUTER JOIN rt0 ON (- (((vt1.c2)GLOB(x'6235')))) WHERE (((CAST(rt0.c3 AS TEXT))OR(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c2)>('-1336775968'))) BETWEEN (((vt0.c2)GLOB(0.08437122676989428))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c2)))) RIGHT OUTER JOIN rt0 ON (- (((vt1.c2)GLOB(x'6235')))));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY UNLIKELY(0.23132384045955257) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(0.23132384045955257) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY UNLIKELY(0.23132384045955257) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(0.23132384045955257) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY UNLIKELY(0.23132384045955257) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (x'') ORDER BY (('0.2641612963155877') IS FALSE), CAST(CASE vt1.c0  WHEN rt0.c2 THEN 'BH쏤*8' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN NULL ELSE vt1.c1 END AS TEXT), (+ (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (('0.2641612963155877') IS FALSE), CAST(CASE vt1.c0  WHEN rt0.c2 THEN 'BH쏤*8' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN NULL ELSE vt1.c1 END AS TEXT), (+ (((rt0.c1) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (x'') ORDER BY (('0.2641612963155877') IS FALSE), CAST(CASE vt1.c0  WHEN rt0.c2 THEN 'BH쏤*8' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN NULL ELSE vt1.c1 END AS TEXT), (+ (((rt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (('0.2641612963155877') IS FALSE), CAST(CASE vt1.c0  WHEN rt0.c2 THEN 'BH쏤*8' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN NULL ELSE vt1.c1 END AS TEXT), (+ (((rt0.c1) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (x'') ORDER BY (('0.2641612963155877') IS FALSE), CAST(CASE vt1.c0  WHEN rt0.c2 THEN 'BH쏤*8' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN NULL ELSE vt1.c1 END AS TEXT), (+ (((rt0.c1) IS FALSE))) DESC;
SELECT COUNT(*) FROM vt1, vt0, rt0 RIGHT OUTER JOIN t0 ON (+ (vt1.c2)) COLLATE RTRIM WHERE ('0.7988895231395763');
SELECT SUM(count) FROM (SELECT (('0.7988895231395763') IS TRUE)  as count FROM vt1, vt0, rt0 RIGHT OUTER JOIN t0 ON (+ (vt1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0, rt0 RIGHT OUTER JOIN t0 ON (+ (vt1.c2)) COLLATE RTRIM WHERE ('0.7988895231395763');
SELECT SUM(count) FROM (SELECT (('0.7988895231395763') IS TRUE)  as count FROM vt1, vt0, rt0 RIGHT OUTER JOIN t0 ON (+ (vt1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0, rt0 RIGHT OUTER JOIN t0 ON (+ (vt1.c2)) COLLATE RTRIM WHERE ('0.7988895231395763');
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((CAST(t0.c76 AS INTEGER))+(((((((((vt0.c1)OR(vt1.c2)))OR(vt1.c0)))AND(rt0.c0)))OR(vt0.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c76 AS INTEGER))+(((((((((vt0.c1)OR(vt1.c2)))OR(vt1.c0)))AND(rt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((CAST(t0.c76 AS INTEGER))+(((((((((vt0.c1)OR(vt1.c2)))OR(vt1.c0)))AND(rt0.c0)))OR(vt0.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c76 AS INTEGER))+(((((((((vt0.c1)OR(vt1.c2)))OR(vt1.c0)))AND(rt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((CAST(t0.c76 AS INTEGER))+(((((((((vt0.c1)OR(vt1.c2)))OR(vt1.c0)))AND(rt0.c0)))OR(vt0.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (LOWER((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER((NOT (vt1.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((NULL)+(NULL)) WHERE (CAST(CAST(t0.c76 AS INTEGER) AS TEXT)) ORDER BY ((((NULL)>(vt0.c2)))+((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c76 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((NULL)+(NULL)) ORDER BY ((((NULL)>(vt0.c2)))+((NOT (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((NULL)+(NULL)) WHERE (CAST(CAST(t0.c76 AS INTEGER) AS TEXT)) ORDER BY ((((NULL)>(vt0.c2)))+((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c76 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((NULL)+(NULL)) ORDER BY ((((NULL)>(vt0.c2)))+((NOT (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((NULL)+(NULL)) WHERE (CAST(CAST(t0.c76 AS INTEGER) AS TEXT)) ORDER BY ((((NULL)>(vt0.c2)))+((NOT (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT * FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c76);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((t0.c76 IN ()) IN ((((1.158218652E9)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), (- ('1619853278'))))) ORDER BY (UNLIKELY(vt0.c0) IN ()) ASC, ((((t0.c76)>>(vt0.c1)))GLOB(vt0.c2))  NULLS LAST, (((vt0.c0, ((vt0.c2)>>(vt0.c2)), ((vt0.c1) IS TRUE)))<>((vt0.c1, vt0.c1 COLLATE RTRIM, ((((t0.c76)OR(t0.c76)))AND(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76 IN ()) IN ((((1.158218652E9)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), (- ('1619853278'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (UNLIKELY(vt0.c0) IN ()) ASC, ((((t0.c76)>>(vt0.c1)))GLOB(vt0.c2))  NULLS LAST, (((vt0.c0, ((vt0.c2)>>(vt0.c2)), ((vt0.c1) IS TRUE)))<>((vt0.c1, vt0.c1 COLLATE RTRIM, ((((t0.c76)OR(t0.c76)))AND(vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((t0.c76 IN ()) IN ((((1.158218652E9)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), (- ('1619853278'))))) ORDER BY (UNLIKELY(vt0.c0) IN ()) ASC, ((((t0.c76)>>(vt0.c1)))GLOB(vt0.c2))  NULLS LAST, (((vt0.c0, ((vt0.c2)>>(vt0.c2)), ((vt0.c1) IS TRUE)))<>((vt0.c1, vt0.c1 COLLATE RTRIM, ((((t0.c76)OR(t0.c76)))AND(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76 IN ()) IN ((((1.158218652E9)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), (- ('1619853278'))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (UNLIKELY(vt0.c0) IN ()) ASC, ((((t0.c76)>>(vt0.c1)))GLOB(vt0.c2))  NULLS LAST, (((vt0.c0, ((vt0.c2)>>(vt0.c2)), ((vt0.c1) IS TRUE)))<>((vt0.c1, vt0.c1 COLLATE RTRIM, ((((t0.c76)OR(t0.c76)))AND(vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((t0.c76 IN ()) IN ((((1.158218652E9)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), (- ('1619853278'))))) ORDER BY (UNLIKELY(vt0.c0) IN ()) ASC, ((((t0.c76)>>(vt0.c1)))GLOB(vt0.c2))  NULLS LAST, (((vt0.c0, ((vt0.c2)>>(vt0.c2)), ((vt0.c1) IS TRUE)))<>((vt0.c1, vt0.c1 COLLATE RTRIM, ((((t0.c76)OR(t0.c76)))AND(vt0.c1))))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1, rt0 WHERE (((((vt1.c0)*(vt0.c2)))|(vt0.c2))) ORDER BY (NOT (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt0.c2)))|(vt0.c2))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (NOT (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (((((vt1.c0)*(vt0.c2)))|(vt0.c2))) ORDER BY (NOT (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt0.c2)))|(vt0.c2))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (NOT (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (((((vt1.c0)*(vt0.c2)))|(vt0.c2))) ORDER BY (NOT (((((rt0.c0)OR(vt0.c0)))AND(rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c2)), ((rt0.c1)AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (NOT (rt0.c2)), ((rt0.c1)AND(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c2)), ((rt0.c1)AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (NOT (rt0.c2)), ((rt0.c1)AND(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c2)), ((rt0.c1)AND(rt0.c3))));
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((CAST(rt0.c2 AS TEXT)))>=(((~ (t0.c76))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS TEXT)))>=(((~ (t0.c76)))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((CAST(rt0.c2 AS TEXT)))>=(((~ (t0.c76))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS TEXT)))>=(((~ (t0.c76)))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((CAST(rt0.c2 AS TEXT)))>=(((~ (t0.c76))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((~ (vt1.c0)))=((((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c2, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))) RIGHT OUTER JOIN vt1 ON ((((CAST(vt0.c1 AS TEXT))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c1)=(x'')))) WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((~ (vt1.c0)))==((((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c2, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))) RIGHT OUTER JOIN vt1 ON ((((CAST(vt0.c1 AS TEXT))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c1)=(x'')))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((~ (vt1.c0)))=((((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c2, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))) RIGHT OUTER JOIN vt1 ON ((((CAST(vt0.c1 AS TEXT))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c1)=(x'')))) WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT BETWEEN (x'') AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((~ (vt1.c0)))==((((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c2, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))))) RIGHT OUTER JOIN vt1 ON ((((CAST(vt0.c1 AS TEXT))OR(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c1)=(x'')))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((+ (vt1.c1)))+((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1)))+((x'' IN ())))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((+ (vt1.c1)))+((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1)))+((x'' IN ())))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((+ (vt1.c1)))+((x'' IN ()))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c2))) NOT BETWEEN (x'5695') AND (((((((((vt1.c1)OR('')))OR(vt1.c2)))OR(t0.c76)))AND(vt1.c2)))) CROSS JOIN rt0 ON vt1.c1 WHERE (((((CASE WHEN vt1.c2 THEN rt0.c1 ELSE vt0.c2 END)AND(((NULL) IS FALSE))))AND(vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c2 THEN rt0.c1 ELSE vt0.c2 END)AND(((NULL) IS FALSE))))AND(vt1.c2))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c2))) NOT BETWEEN (x'5695') AND (((((((((vt1.c1)OR('')))OR(vt1.c2)))OR(t0.c76)))AND(vt1.c2)))) CROSS JOIN rt0 ON vt1.c1);
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c2))) NOT BETWEEN (x'5695') AND (((((((((vt1.c1)OR('')))OR(vt1.c2)))OR(t0.c76)))AND(vt1.c2)))) CROSS JOIN rt0 ON vt1.c1 WHERE (((((CASE WHEN vt1.c2 THEN rt0.c1 ELSE vt0.c2 END)AND(((NULL) IS FALSE))))AND(vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c2 THEN rt0.c1 ELSE vt0.c2 END)AND(((NULL) IS FALSE))))AND(vt1.c2))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c2))) NOT BETWEEN (x'5695') AND (((((((((vt1.c1)OR('')))OR(vt1.c2)))OR(t0.c76)))AND(vt1.c2)))) CROSS JOIN rt0 ON vt1.c1);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))=(((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))=(((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((vt0.c0)GLOB(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN rt0 ON ((json_extract(x'c606', rt0.c0))OR(((0.23132384045955257) NOT NULL))) WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)|(vt1.c2))) AND (x'825c')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)|(vt1.c2))) AND (x'825c'))) IS TRUE)  as count FROM t0, vt1 INNER JOIN rt0 ON ((json_extract(x'c606', rt0.c0))OR(((0.23132384045955257) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN rt0 ON ((json_extract(x'c606', rt0.c0))OR(((0.23132384045955257) NOT NULL))) WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)|(vt1.c2))) AND (x'825c')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)|(vt1.c2))) AND (x'825c'))) IS TRUE)  as count FROM t0, vt1 INNER JOIN rt0 ON ((json_extract(x'c606', rt0.c0))OR(((0.23132384045955257) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN rt0 ON ((json_extract(x'c606', rt0.c0))OR(((0.23132384045955257) NOT NULL))) WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)|(vt1.c2))) AND (x'825c')));
SELECT ALL * FROM vt1, t0 WHERE (((LIKE(vt1.c0, 0.5481806879771165, 'h'))==(vt1.c2 COLLATE RTRIM))) ORDER BY (((NULL, t0.c76, vt1.c2)) BETWEEN ((((vt1.c2) BETWEEN (vt1.c2) AND (t0.c76)), CAST(vt1.c0 AS BLOB), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND ((((vt1.c0)<>(x'')), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), COALESCE(DISTINCT t0.c76, t0.c76, vt1.c2, vt1.c2)))) ASC, CASE ((vt1.c1) IS TRUE)  WHEN CAST(t0.c76 AS BLOB) THEN (- ('-120606751')) END DESC, t0.c76 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, 0.5481806879771165, 'h'))==(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((NULL, t0.c76, vt1.c2)) BETWEEN ((((vt1.c2) BETWEEN (vt1.c2) AND (t0.c76)), CAST(vt1.c0 AS BLOB), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND ((((vt1.c0)!=(x'')), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), COALESCE(DISTINCT t0.c76, t0.c76, vt1.c2, vt1.c2)))) ASC, CASE ((vt1.c1) IS TRUE)  WHEN CAST(t0.c76 AS BLOB) THEN (- ('-120606751')) END DESC, t0.c76 ASC);
SELECT ALL * FROM vt1, t0 WHERE (((LIKE(vt1.c0, 0.5481806879771165, 'h'))==(vt1.c2 COLLATE RTRIM))) ORDER BY (((NULL, t0.c76, vt1.c2)) BETWEEN ((((vt1.c2) BETWEEN (vt1.c2) AND (t0.c76)), CAST(vt1.c0 AS BLOB), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND ((((vt1.c0)<>(x'')), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), COALESCE(DISTINCT t0.c76, t0.c76, vt1.c2, vt1.c2)))) ASC, CASE ((vt1.c1) IS TRUE)  WHEN CAST(t0.c76 AS BLOB) THEN (- ('-120606751')) END DESC, t0.c76 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c0, 0.5481806879771165, 'h'))==(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((NULL, t0.c76, vt1.c2)) BETWEEN ((((vt1.c2) BETWEEN (vt1.c2) AND (t0.c76)), CAST(vt1.c0 AS BLOB), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND ((((vt1.c0)!=(x'')), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), COALESCE(DISTINCT t0.c76, t0.c76, vt1.c2, vt1.c2)))) ASC, CASE ((vt1.c1) IS TRUE)  WHEN CAST(t0.c76 AS BLOB) THEN (- ('-120606751')) END DESC, t0.c76 ASC);
SELECT ALL * FROM vt1, t0 WHERE (((LIKE(vt1.c0, 0.5481806879771165, 'h'))==(vt1.c2 COLLATE RTRIM))) ORDER BY (((NULL, t0.c76, vt1.c2)) BETWEEN ((((vt1.c2) BETWEEN (vt1.c2) AND (t0.c76)), CAST(vt1.c0 AS BLOB), ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) AND ((((vt1.c0)<>(x'')), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), COALESCE(DISTINCT t0.c76, t0.c76, vt1.c2, vt1.c2)))) ASC, CASE ((vt1.c1) IS TRUE)  WHEN CAST(t0.c76 AS BLOB) THEN (- ('-120606751')) END DESC, t0.c76 ASC;
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((vt1.c2 COLLATE BINARY IN ((((rt0.c1, t0.c76, 0.8714603400717138)) BETWEEN ((vt1.c1, vt0.c0, rt0.c1)) AND ((NULL, vt0.c0, vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c2 COLLATE BINARY IN ((((rt0.c1, t0.c76, 0.8714603400717138)) BETWEEN ((vt1.c1, vt0.c0, rt0.c1)) AND ((NULL, vt0.c0, vt1.c2)))))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((vt1.c2 COLLATE BINARY IN ((((rt0.c1, t0.c76, 0.8714603400717138)) BETWEEN ((vt1.c1, vt0.c0, rt0.c1)) AND ((NULL, vt0.c0, vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c2 COLLATE BINARY IN ((((rt0.c1, t0.c76, 0.8714603400717138)) BETWEEN ((vt1.c1, vt0.c0, rt0.c1)) AND ((NULL, vt0.c0, vt1.c2)))))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((vt1.c2 COLLATE BINARY IN ((((rt0.c1, t0.c76, 0.8714603400717138)) BETWEEN ((vt1.c1, vt0.c0, rt0.c1)) AND ((NULL, vt0.c0, vt1.c2))))));
SELECT * FROM vt0 INDEXED BY i94, t0, vt1, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt0 INDEXED BY i94, t0, vt1, rt0);
SELECT * FROM vt0 INDEXED BY i94, t0, vt1, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt0 INDEXED BY i94, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(t0.c76 AS NUMERIC))LIKE(CAST(t0.c76 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c76 AS NUMERIC))LIKE(CAST(t0.c76 AS BLOB)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(t0.c76 AS NUMERIC))LIKE(CAST(t0.c76 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c76 AS NUMERIC))LIKE(CAST(t0.c76 AS BLOB)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(t0.c76 AS NUMERIC))LIKE(CAST(t0.c76 AS BLOB))));
SELECT * FROM t0, vt0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((HEX('k8')) BETWEEN (rt0.c3 COLLATE NOCASE) AND (x''))  NULLS FIRST, CASE WHEN (((rt0.c0))==((rt0.c0))) THEN ((((vt0.c2)AND(rt0.c0)))OR(0.016925806613016348)) END  NULLS LAST, CASE ((vt0.c0)>>(vt0.c1))  WHEN UPPER(rt0.c0) THEN ((rt0.c3)>=(vt0.c2)) WHEN ((rt0.c3)==(vt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((t0.c76) IS TRUE) THEN (NOT (rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((HEX('k8')) BETWEEN (rt0.c3 COLLATE NOCASE) AND (x''))  NULLS FIRST, CASE WHEN (((rt0.c0))=((rt0.c0))) THEN ((((vt0.c2)AND(rt0.c0)))OR(0.016925806613016348)) END  NULLS LAST, CASE ((vt0.c0)>>(vt0.c1))  WHEN UPPER(rt0.c0) THEN ((rt0.c3)>=(vt0.c2)) WHEN ((rt0.c3)==(vt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((t0.c76) IS TRUE) THEN (NOT (rt0.c1)) END ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((HEX('k8')) BETWEEN (rt0.c3 COLLATE NOCASE) AND (x''))  NULLS FIRST, CASE WHEN (((rt0.c0))==((rt0.c0))) THEN ((((vt0.c2)AND(rt0.c0)))OR(0.016925806613016348)) END  NULLS LAST, CASE ((vt0.c0)>>(vt0.c1))  WHEN UPPER(rt0.c0) THEN ((rt0.c3)>=(vt0.c2)) WHEN ((rt0.c3)==(vt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((t0.c76) IS TRUE) THEN (NOT (rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((HEX('k8')) BETWEEN (rt0.c3 COLLATE NOCASE) AND (x''))  NULLS FIRST, CASE WHEN (((rt0.c0))=((rt0.c0))) THEN ((((vt0.c2)AND(rt0.c0)))OR(0.016925806613016348)) END  NULLS LAST, CASE ((vt0.c0)>>(vt0.c1))  WHEN UPPER(rt0.c0) THEN ((rt0.c3)>=(vt0.c2)) WHEN ((rt0.c3)==(vt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((t0.c76) IS TRUE) THEN (NOT (rt0.c1)) END ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN (CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((HEX('k8')) BETWEEN (rt0.c3 COLLATE NOCASE) AND (x''))  NULLS FIRST, CASE WHEN (((rt0.c0))==((rt0.c0))) THEN ((((vt0.c2)AND(rt0.c0)))OR(0.016925806613016348)) END  NULLS LAST, CASE ((vt0.c0)>>(vt0.c1))  WHEN UPPER(rt0.c0) THEN ((rt0.c3)>=(vt0.c2)) WHEN ((rt0.c3)==(vt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN ((t0.c76) IS TRUE) THEN (NOT (rt0.c1)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(vt1.c2))) IS TRUE)) ORDER BY (+ (CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c1)))OR(vt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (+ (CAST(rt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(vt1.c2))) IS TRUE)) ORDER BY (+ (CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c1)))OR(vt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY (+ (CAST(rt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(vt1.c2))) IS TRUE)) ORDER BY (+ (CAST(rt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ALL ((t0.c76) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ALL ((t0.c76) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c76);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c1 WHERE (LOWER(DISTINCT (rt0.c2 IN (rt0.c0)))) ORDER BY TYPEOF((~ (rt0.c2))), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (rt0.c2 IN (rt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c1 ORDER BY TYPEOF((~ (rt0.c2))), NULL  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c1 WHERE (LOWER(DISTINCT (rt0.c2 IN (rt0.c0)))) ORDER BY TYPEOF((~ (rt0.c2))), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (rt0.c2 IN (rt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c1 ORDER BY TYPEOF((~ (rt0.c2))), NULL  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt0 ON rt0.c1 WHERE (LOWER(DISTINCT (rt0.c2 IN (rt0.c0)))) ORDER BY TYPEOF((~ (rt0.c2))), NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE BINARY) LEFT OUTER JOIN t0 ON ((((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)AND(0.9893060101835847)))AND(CAST(rt0.c1 AS REAL))) WHERE (((((rt0.c1 COLLATE RTRIM)OR((((NULL, vt1.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c2, rt0.c1)) AND ((rt0.c3, vt1.c0, rt0.c0))))))OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) ORDER BY (((CASE vt1.c2  WHEN t0.c76 THEN rt0.c2 WHEN rt0.c0 THEN t0.c76 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END))>=((((NULL)&(x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE RTRIM)OR((((NULL, vt1.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c2, rt0.c1)) AND ((rt0.c3, vt1.c0, rt0.c0))))))OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE BINARY) LEFT OUTER JOIN t0 ON ((((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)AND(0.9893060101835847)))AND(CAST(rt0.c1 AS REAL))) ORDER BY (((CASE vt1.c2  WHEN t0.c76 THEN rt0.c2 WHEN rt0.c0 THEN t0.c76 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END))>=((((NULL)&(x'')))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE BINARY) LEFT OUTER JOIN t0 ON ((((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)AND(0.9893060101835847)))AND(CAST(rt0.c1 AS REAL))) WHERE (((((rt0.c1 COLLATE RTRIM)OR((((NULL, vt1.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c2, rt0.c1)) AND ((rt0.c3, vt1.c0, rt0.c0))))))OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) ORDER BY (((CASE vt1.c2  WHEN t0.c76 THEN rt0.c2 WHEN rt0.c0 THEN t0.c76 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END))>=((((NULL)&(x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE RTRIM)OR((((NULL, vt1.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c2, rt0.c1)) AND ((rt0.c3, vt1.c0, rt0.c0))))))OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE BINARY) LEFT OUTER JOIN t0 ON ((((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)AND(0.9893060101835847)))AND(CAST(rt0.c1 AS REAL))) ORDER BY (((CASE vt1.c2  WHEN t0.c76 THEN rt0.c2 WHEN rt0.c0 THEN t0.c76 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END))>=((((NULL)&(x'')))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE BINARY) LEFT OUTER JOIN t0 ON ((((CASE vt1.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)AND(0.9893060101835847)))AND(CAST(rt0.c1 AS REAL))) WHERE (((((rt0.c1 COLLATE RTRIM)OR((((NULL, vt1.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, vt1.c2, rt0.c1)) AND ((rt0.c3, vt1.c0, rt0.c0))))))OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) ORDER BY (((CASE vt1.c2  WHEN t0.c76 THEN rt0.c2 WHEN rt0.c0 THEN t0.c76 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END))>=((((NULL)&(x'')))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((vt0.c2)IS(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)IS(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((vt0.c2)IS(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2)IS(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((vt0.c2)IS(NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c76) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c76) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c76) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c76) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c76) ISNULL))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((0.08437122676989428)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) ORDER BY ((((vt1.c1)OR(t0.c76)))AND(vt1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.08437122676989428)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c1)OR(t0.c76)))AND(vt1.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((0.08437122676989428)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) ORDER BY ((((vt1.c1)OR(t0.c76)))AND(vt1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.08437122676989428)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c1)OR(t0.c76)))AND(vt1.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((0.08437122676989428)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) ORDER BY ((((vt1.c1)OR(t0.c76)))AND(vt1.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, rt0 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c2))))==(('/~'))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c2))))=(('/~')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c2))))==(('/~'))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c2))))=(('/~')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c2))))==(('/~'))));
SELECT ALL * FROM vt0 WHERE (x'faea');
SELECT SUM(count) FROM (SELECT ((x'faea') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'faea');
SELECT SUM(count) FROM (SELECT ((x'faea') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'faea');
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ ((0xffffffffa9a77dfe IN ())))) ORDER BY (((rt0.c3, vt0.c2, x'4850')) NOT BETWEEN (((+ (rt0.c1)), CAST(vt0.c1 AS INTEGER), vt1.c0)) AND ((((vt0.c1)!=(vt0.c0)), 'M_V6.>', rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((0xffffffffa9a77dfe IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c3, vt0.c2, x'4850')) NOT BETWEEN (((+ (rt0.c1)), CAST(vt0.c1 AS INTEGER), vt1.c0)) AND ((((vt0.c1)!=(vt0.c0)), 'M_V6.>', rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ ((0xffffffffa9a77dfe IN ())))) ORDER BY (((rt0.c3, vt0.c2, x'4850')) NOT BETWEEN (((+ (rt0.c1)), CAST(vt0.c1 AS INTEGER), vt1.c0)) AND ((((vt0.c1)!=(vt0.c0)), 'M_V6.>', rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((0xffffffffa9a77dfe IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c3, vt0.c2, x'4850')) NOT BETWEEN (((+ (rt0.c1)), CAST(vt0.c1 AS INTEGER), vt1.c0)) AND ((((vt0.c1)!=(vt0.c0)), 'M_V6.>', rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ ((0xffffffffa9a77dfe IN ())))) ORDER BY (((rt0.c3, vt0.c2, x'4850')) NOT BETWEEN (((+ (rt0.c1)), CAST(vt0.c1 AS INTEGER), vt1.c0)) AND ((((vt0.c1)!=(vt0.c0)), 'M_V6.>', rt0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c76  WHEN t0.c76 THEN t0.c76 END)OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76)))))AND(((t0.c76) ISNULL)))) ORDER BY ((((NULL)>=(t0.c76)))/(((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))) DESC, (NOT (CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c76  WHEN t0.c76 THEN t0.c76 END)OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76)))))AND(((t0.c76) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL)>=(t0.c76)))/(((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))) DESC, (NOT (CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c76  WHEN t0.c76 THEN t0.c76 END)OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76)))))AND(((t0.c76) ISNULL)))) ORDER BY ((((NULL)>=(t0.c76)))/(((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))) DESC, (NOT (CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c76  WHEN t0.c76 THEN t0.c76 END)OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76)))))AND(((t0.c76) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL)>=(t0.c76)))/(((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))) DESC, (NOT (CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((CASE t0.c76  WHEN t0.c76 THEN t0.c76 END)OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76)))))AND(((t0.c76) ISNULL)))) ORDER BY ((((NULL)>=(t0.c76)))/(((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))) DESC, (NOT (CASE WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END));
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY)GLOB(((vt0.c2)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)GLOB(((vt0.c2)<=(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY)GLOB(((vt0.c2)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)GLOB(((vt0.c2)<=(vt0.c0))))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY)GLOB(((vt0.c2)<=(vt0.c0)))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((vt0.c1)<>(((vt0.c1) ISNULL)))) ORDER BY ((((vt0.c0)OR(vt0.c1)))OR(t0.c76)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<>(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c0)OR(vt0.c1)))OR(t0.c76)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((vt0.c1)<>(((vt0.c1) ISNULL)))) ORDER BY ((((vt0.c0)OR(vt0.c1)))OR(t0.c76)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<>(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c0)OR(vt0.c1)))OR(t0.c76)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((vt0.c1)<>(((vt0.c1) ISNULL)))) ORDER BY ((((vt0.c0)OR(vt0.c1)))OR(t0.c76)) COLLATE RTRIM;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CASE rt0.c3  WHEN vt0.c2 THEN t0.c76 ELSE 'U3B8' END)<((~ (vt0.c1))))) ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))AND((((vt0.c0, vt0.c1, rt0.c0, vt0.c1, t0.c76))>((rt0.c1, t0.c76, vt0.c1, t0.c76, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN vt0.c2 THEN t0.c76 ELSE 'U3B8' END)<((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))AND((((vt0.c0, vt0.c1, rt0.c0, vt0.c1, t0.c76))>((rt0.c1, t0.c76, vt0.c1, t0.c76, rt0.c2))))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CASE rt0.c3  WHEN vt0.c2 THEN t0.c76 ELSE 'U3B8' END)<((~ (vt0.c1))))) ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))AND((((vt0.c0, vt0.c1, rt0.c0, vt0.c1, t0.c76))>((rt0.c1, t0.c76, vt0.c1, t0.c76, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN vt0.c2 THEN t0.c76 ELSE 'U3B8' END)<((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))AND((((vt0.c0, vt0.c1, rt0.c0, vt0.c1, t0.c76))>((rt0.c1, t0.c76, vt0.c1, t0.c76, rt0.c2))))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CASE rt0.c3  WHEN vt0.c2 THEN t0.c76 ELSE 'U3B8' END)<((~ (vt0.c1))))) ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))AND((((vt0.c0, vt0.c1, rt0.c0, vt0.c1, t0.c76))>((rt0.c1, t0.c76, vt0.c1, t0.c76, rt0.c2)))));
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt1 WHERE ((- (x''))) ORDER BY ((((((((((((((((rt0.c2)AND('%f')))AND(vt1.c1)))AND(t0.c76)))OR(rt0.c1)))AND((~ (rt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c1 THEN t0.c76 WHEN vt1.c0 THEN 1.100502428E9 WHEN rt0.c2 THEN -1201514956 WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c3 END)))OR(rt0.c0)))OR(rt0.c0 COLLATE RTRIM)), CAST(rt0.c2 AS BLOB) DESC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt1 ORDER BY ((((((((((((((((rt0.c2)AND('%f')))AND(vt1.c1)))AND(t0.c76)))OR(rt0.c1)))AND((~ (rt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c1 THEN t0.c76 WHEN vt1.c0 THEN 1.100502428E9 WHEN rt0.c2 THEN -1201514956 WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c3 END)))OR(rt0.c0)))OR(rt0.c0 COLLATE RTRIM)), CAST(rt0.c2 AS BLOB) DESC, ''  NULLS FIRST);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt1 WHERE ((- (x''))) ORDER BY ((((((((((((((((rt0.c2)AND('%f')))AND(vt1.c1)))AND(t0.c76)))OR(rt0.c1)))AND((~ (rt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c1 THEN t0.c76 WHEN vt1.c0 THEN 1.100502428E9 WHEN rt0.c2 THEN -1201514956 WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c3 END)))OR(rt0.c0)))OR(rt0.c0 COLLATE RTRIM)), CAST(rt0.c2 AS BLOB) DESC, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt1 ORDER BY ((((((((((((((((rt0.c2)AND('%f')))AND(vt1.c1)))AND(t0.c76)))OR(rt0.c1)))AND((~ (rt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c1 THEN t0.c76 WHEN vt1.c0 THEN 1.100502428E9 WHEN rt0.c2 THEN -1201514956 WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c3 END)))OR(rt0.c0)))OR(rt0.c0 COLLATE RTRIM)), CAST(rt0.c2 AS BLOB) DESC, ''  NULLS FIRST);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt1 WHERE ((- (x''))) ORDER BY ((((((((((((((((rt0.c2)AND('%f')))AND(vt1.c1)))AND(t0.c76)))OR(rt0.c1)))AND((~ (rt0.c0)))))AND(CASE vt1.c0  WHEN vt1.c1 THEN t0.c76 WHEN vt1.c0 THEN 1.100502428E9 WHEN rt0.c2 THEN -1201514956 WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c3 END)))OR(rt0.c0)))OR(rt0.c0 COLLATE RTRIM)), CAST(rt0.c2 AS BLOB) DESC, ''  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON 'uE' RIGHT OUTER JOIN vt0 ON 0.5101808234725113 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ('1695434477');
SELECT SUM(count) FROM (SELECT (('1695434477') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 'uE' RIGHT OUTER JOIN vt0 ON 0.5101808234725113 RIGHT OUTER JOIN t0 ON rt0.c1);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON 'uE' RIGHT OUTER JOIN vt0 ON 0.5101808234725113 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ('1695434477');
SELECT SUM(count) FROM (SELECT (('1695434477') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 'uE' RIGHT OUTER JOIN vt0 ON 0.5101808234725113 RIGHT OUTER JOIN t0 ON rt0.c1);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON 'uE' RIGHT OUTER JOIN vt0 ON 0.5101808234725113 RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ('1695434477');
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS BLOB))||(vt1.c2 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))||(vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS BLOB))||(vt1.c2 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))||(vt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CAST(vt1.c0 AS BLOB))||(vt1.c2 COLLATE NOCASE))) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((((vt0.c0)<(t0.c76))))<(((+ (vt0.c1))))) WHERE ((((t0.c76)>>(t0.c76)) IN ((- (t0.c76)), (((vt0.c1, t0.c76, vt0.c0))>=((t0.c76, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c76)>>(t0.c76)) IN ((- (t0.c76)), (((vt0.c1, t0.c76, vt0.c0))>=((t0.c76, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((vt0.c0)<(t0.c76))))<(((+ (vt0.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((((vt0.c0)<(t0.c76))))<(((+ (vt0.c1))))) WHERE ((((t0.c76)>>(t0.c76)) IN ((- (t0.c76)), (((vt0.c1, t0.c76, vt0.c0))>=((t0.c76, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c76)>>(t0.c76)) IN ((- (t0.c76)), (((vt0.c1, t0.c76, vt0.c0))>=((t0.c76, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((vt0.c0)<(t0.c76))))<(((+ (vt0.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (((((vt0.c0)<(t0.c76))))<(((+ (vt0.c1))))) WHERE ((((t0.c76)>>(t0.c76)) IN ((- (t0.c76)), (((vt0.c1, t0.c76, vt0.c0))>=((t0.c76, vt0.c0, vt0.c2))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON '' COLLATE BINARY FULL OUTER JOIN t0 ON rt0.c3 COLLATE RTRIM LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (CAST(((((vt0.c0)AND(NULL)))OR(vt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(NULL)))OR(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '' COLLATE BINARY FULL OUTER JOIN t0 ON rt0.c3 COLLATE RTRIM LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON '' COLLATE BINARY FULL OUTER JOIN t0 ON rt0.c3 COLLATE RTRIM LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (CAST(((((vt0.c0)AND(NULL)))OR(vt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(NULL)))OR(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '' COLLATE BINARY FULL OUTER JOIN t0 ON rt0.c3 COLLATE RTRIM LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON '' COLLATE BINARY FULL OUTER JOIN t0 ON rt0.c3 COLLATE RTRIM LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (CAST(((((vt0.c0)AND(NULL)))OR(vt1.c2)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (ABS(((vt0.c0) BETWEEN (x'3d89') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) BETWEEN (x'3d89') AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(((vt0.c0) BETWEEN (x'3d89') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) BETWEEN (x'3d89') AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(((vt0.c0) BETWEEN (x'3d89') AND (vt0.c0))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c76 THEN '0.6952040262911987' ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c76 THEN '0.6952040262911987' ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c76 THEN '0.6952040262911987' ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c76 THEN '0.6952040262911987' ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c76 THEN '0.6952040262911987' ELSE rt0.c3 END)));
SELECT ALL * FROM t0 WHERE (((((((((((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))AND((t0.c76 IN ()))))OR(((t0.c76)!=(t0.c76)))))OR(t0.c76 COLLATE NOCASE)))AND(CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))AND((t0.c76 IN ()))))OR(((t0.c76)<>(t0.c76)))))OR(t0.c76 COLLATE NOCASE)))AND(CAST('' AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))AND((t0.c76 IN ()))))OR(((t0.c76)!=(t0.c76)))))OR(t0.c76 COLLATE NOCASE)))AND(CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))AND((t0.c76 IN ()))))OR(((t0.c76)<>(t0.c76)))))OR(t0.c76 COLLATE NOCASE)))AND(CAST('' AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c76) NOT BETWEEN (t0.c76) AND (t0.c76)))AND((t0.c76 IN ()))))OR(((t0.c76)!=(t0.c76)))))OR(t0.c76 COLLATE NOCASE)))AND(CAST('' AS NUMERIC))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c1)OR(vt0.c1)))AND(0xffffffff9e09f47f)))AND(vt1.c2)))OR(rt0.c2)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((vt1.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) AND (((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c3)))))) RIGHT OUTER JOIN vt1 ON t0.c76 WHERE (((vt1.c2 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt0.c3) NOT NULL))/('2093484354')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c1)OR(vt0.c1)))AND(0Xffffffff9e09f47f)))AND(vt1.c2)))OR(rt0.c2)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((vt1.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) AND (((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c3)))))) RIGHT OUTER JOIN vt1 ON t0.c76 ORDER BY ((((rt0.c3) NOT NULL))/('2093484354')) DESC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c1)OR(vt0.c1)))AND(0xffffffff9e09f47f)))AND(vt1.c2)))OR(rt0.c2)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((vt1.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) AND (((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c3)))))) RIGHT OUTER JOIN vt1 ON t0.c76 WHERE (((vt1.c2 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt0.c3) NOT NULL))/('2093484354')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((((rt0.c1)OR(vt0.c1)))AND(0Xffffffff9e09f47f)))AND(vt1.c2)))OR(rt0.c2)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON (((vt1.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) AND (((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c3)))))) RIGHT OUTER JOIN vt1 ON t0.c76 ORDER BY ((((rt0.c3) NOT NULL))/('2093484354')) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((NULL) IS TRUE) THEN (+ (vt1.c1)) ELSE (NOT (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) IS TRUE) THEN (+ (vt1.c1)) ELSE (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((NULL) IS TRUE) THEN (+ (vt1.c1)) ELSE (NOT (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) IS TRUE) THEN (+ (vt1.c1)) ELSE (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((NULL) IS TRUE) THEN (+ (vt1.c1)) ELSE (NOT (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE BINARY)/(CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)/(CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE BINARY)/(CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)/(CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE BINARY)/(CASE rt0.c2  WHEN vt0.c2 THEN vt0.c2 END)));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN rt0 ON ((('' IN ())) ISNULL) WHERE (0.6978755080341829) ORDER BY (('-1921623121')IS(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6978755080341829) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN rt0 ON ((('' IN ())) ISNULL) ORDER BY (('-1921623121')IS(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN rt0 ON ((('' IN ())) ISNULL) WHERE (0.6978755080341829) ORDER BY (('-1921623121')IS(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6978755080341829) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN rt0 ON ((('' IN ())) ISNULL) ORDER BY (('-1921623121')IS(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON vt0.c1 RIGHT OUTER JOIN rt0 ON ((('' IN ())) ISNULL) WHERE (0.6978755080341829) ORDER BY (('-1921623121')IS(rt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (ROUND((rt0.c3 IN ()), ((vt0.c2) ISNULL))) ORDER BY ((((vt1.c2)*(0.401665456020573))) NOT BETWEEN (0.37767293111472566) AND ('')) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)))LIKE(((vt0.c1)<=(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((ROUND((rt0.c3 IN ()), ((vt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((vt1.c2)*(0.401665456020573))) NOT BETWEEN (0.37767293111472566) AND ('')) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)))LIKE(((vt0.c1)<=(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (ROUND((rt0.c3 IN ()), ((vt0.c2) ISNULL))) ORDER BY ((((vt1.c2)*(0.401665456020573))) NOT BETWEEN (0.37767293111472566) AND ('')) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)))LIKE(((vt0.c1)<=(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((ROUND((rt0.c3 IN ()), ((vt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((vt1.c2)*(0.401665456020573))) NOT BETWEEN (0.37767293111472566) AND ('')) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)))LIKE(((vt0.c1)<=(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (ROUND((rt0.c3 IN ()), ((vt0.c2) ISNULL))) ORDER BY ((((vt1.c2)*(0.401665456020573))) NOT BETWEEN (0.37767293111472566) AND ('')) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c1)))LIKE(((vt0.c1)<=(rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE ((+ (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE ((+ (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE ((+ (rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE (0.11973670613821696) ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c3)<>(vt0.c0)) THEN (vt0.c2 IN (rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.11973670613821696) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c3)!=(vt0.c0)) THEN (vt0.c2 IN (rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (0.11973670613821696) ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c3)<>(vt0.c0)) THEN (vt0.c2 IN (rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.11973670613821696) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c3)!=(vt0.c0)) THEN (vt0.c2 IN (rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (0.11973670613821696) ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c3)<>(vt0.c0)) THEN (vt0.c2 IN (rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((vt1.c2)=(vt1.c1)))IS(((vt1.c2)GLOB(rt0.c1))))) ORDER BY (rt0.c2 COLLATE RTRIM IN ((((vt1.c1, rt0.c0, rt0.c3)) BETWEEN ((t0.c76, t0.c76, vt1.c1)) AND ((vt1.c2, vt1.c0, vt1.c0))))) DESC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1)))) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE 1.619853278E9 END) AND (vt1.c1)) ASC, '-674983883' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)==(vt1.c1)))IS(((vt1.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (rt0.c2 COLLATE RTRIM IN ((((vt1.c1, rt0.c0, rt0.c3)) BETWEEN ((t0.c76, t0.c76, vt1.c1)) AND ((vt1.c2, vt1.c0, vt1.c0))))) DESC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1)))) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE 1.619853278E9 END) AND (vt1.c1)) ASC, '-674983883' COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((vt1.c2)=(vt1.c1)))IS(((vt1.c2)GLOB(rt0.c1))))) ORDER BY (rt0.c2 COLLATE RTRIM IN ((((vt1.c1, rt0.c0, rt0.c3)) BETWEEN ((t0.c76, t0.c76, vt1.c1)) AND ((vt1.c2, vt1.c0, vt1.c0))))) DESC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1)))) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE 1.619853278E9 END) AND (vt1.c1)) ASC, '-674983883' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)==(vt1.c1)))IS(((vt1.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (rt0.c2 COLLATE RTRIM IN ((((vt1.c1, rt0.c0, rt0.c3)) BETWEEN ((t0.c76, t0.c76, vt1.c1)) AND ((vt1.c2, vt1.c0, vt1.c0))))) DESC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1)))) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE 1.619853278E9 END) AND (vt1.c1)) ASC, '-674983883' COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((vt1.c2)=(vt1.c1)))IS(((vt1.c2)GLOB(rt0.c1))))) ORDER BY (rt0.c2 COLLATE RTRIM IN ((((vt1.c1, rt0.c0, rt0.c3)) BETWEEN ((t0.c76, t0.c76, vt1.c1)) AND ((vt1.c2, vt1.c0, vt1.c0))))) DESC, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c1)))) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE 1.619853278E9 END) AND (vt1.c1)) ASC, '-674983883' COLLATE BINARY;
SELECT ALL * FROM t0 WHERE (((t0.c76)IS(0xfffffffff6920b99))) ORDER BY (((+ (t0.c76))) NOT BETWEEN (UPPER(DISTINCT -1.680911009E9)) AND (ABS(t0.c76))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c76)IS(0Xfffffffff6920b99))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c76))) NOT BETWEEN (UPPER(DISTINCT -1.680911009E9)) AND (ABS(t0.c76))) ASC);
SELECT ALL * FROM t0 WHERE (((t0.c76)IS(0xfffffffff6920b99))) ORDER BY (((+ (t0.c76))) NOT BETWEEN (UPPER(DISTINCT -1.680911009E9)) AND (ABS(t0.c76))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c76)IS(0Xfffffffff6920b99))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c76))) NOT BETWEEN (UPPER(DISTINCT -1.680911009E9)) AND (ABS(t0.c76))) ASC);
SELECT ALL * FROM t0 WHERE (((t0.c76)IS(0xfffffffff6920b99))) ORDER BY (((+ (t0.c76))) NOT BETWEEN (UPPER(DISTINCT -1.680911009E9)) AND (ABS(t0.c76))) ASC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'fbf15aa9' CROSS JOIN vt0 ON ((((((((((vt1.c1)AND(vt1.c1)))AND(vt0.c2)))OR(vt1.c2)))OR(0xffffffff8b7c5ffa)))<<(vt0.c2 COLLATE BINARY)) WHERE (((((vt0.c2)AND(rt0.c3)))AND(vt1.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c3)>=(rt0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(rt0.c3)))AND(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON x'fbf15aa9' CROSS JOIN vt0 ON ((((((((((vt1.c1)AND(vt1.c1)))AND(vt0.c2)))OR(vt1.c2)))OR(0Xffffffff8b7c5ffa)))<<(vt0.c2 COLLATE BINARY)) ORDER BY ((((rt0.c3)>=(rt0.c1))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'fbf15aa9' CROSS JOIN vt0 ON ((((((((((vt1.c1)AND(vt1.c1)))AND(vt0.c2)))OR(vt1.c2)))OR(0xffffffff8b7c5ffa)))<<(vt0.c2 COLLATE BINARY)) WHERE (((((vt0.c2)AND(rt0.c3)))AND(vt1.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c3)>=(rt0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(rt0.c3)))AND(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON x'fbf15aa9' CROSS JOIN vt0 ON ((((((((((vt1.c1)AND(vt1.c1)))AND(vt0.c2)))OR(vt1.c2)))OR(0Xffffffff8b7c5ffa)))<<(vt0.c2 COLLATE BINARY)) ORDER BY ((((rt0.c3)>=(rt0.c1))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'fbf15aa9' CROSS JOIN vt0 ON ((((((((((vt1.c1)AND(vt1.c1)))AND(vt0.c2)))OR(vt1.c2)))OR(0xffffffff8b7c5ffa)))<<(vt0.c2 COLLATE BINARY)) WHERE (((((vt0.c2)AND(rt0.c3)))AND(vt1.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c3)>=(rt0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)<((vt0.c1 IN ())))) ORDER BY (((vt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((json_patch(vt0.c0, 'u\}rO_불')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)<((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((json_patch(vt0.c0, 'u\}rO_불')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)<((vt0.c1 IN ())))) ORDER BY (((vt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((json_patch(vt0.c0, 'u\}rO_불')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)<((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((json_patch(vt0.c0, 'u\}rO_불')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c3 WHERE (vt0.c2) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c2))))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END)))OR(t0.c76 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c3 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c2))))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END)))OR(t0.c76 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c3 WHERE (vt0.c2) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c2))))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END)))OR(t0.c76 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c3 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c2))))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END)))OR(t0.c76 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 INNER JOIN t0 ON rt0.c3 WHERE (vt0.c2) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c2))))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END)))OR(t0.c76 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (((vt0.c2, rt0.c2, rt0.c1))<((rt0.c0, vt0.c1, rt0.c2))) ELSE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (((vt0.c2, rt0.c2, rt0.c1))<((rt0.c0, vt0.c1, rt0.c2))) ELSE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (((vt0.c2, rt0.c2, rt0.c1))<((rt0.c0, vt0.c1, rt0.c2))) ELSE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (((vt0.c2, rt0.c2, rt0.c1))<((rt0.c0, vt0.c1, rt0.c2))) ELSE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (((vt0.c2, rt0.c2, rt0.c1))<((rt0.c0, vt0.c1, rt0.c2))) ELSE ((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((((vt0.c2)AND(0X1742ac72)))OR(vt0.c1))) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((((vt0.c2)AND(0x1742ac72)))OR(vt0.c1))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((((vt0.c2)AND(0X1742ac72)))OR(vt0.c1))) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((((vt0.c2)AND(0x1742ac72)))OR(vt0.c1))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((((vt0.c2)AND(0X1742ac72)))OR(vt0.c1))) AND ((~ (rt0.c1)))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1)/(rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76)))) AND (0.6978755080341829)) WHERE (COALESCE(((rt0.c1)OR(vt1.c1)), CASE WHEN t0.c76 THEN vt1.c1 END, ((((vt1.c2)AND(vt1.c0)))OR(vt0.c1)), (vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c1)OR(vt1.c1)), CASE WHEN t0.c76 THEN vt1.c1 END, ((((vt1.c2)AND(vt1.c0)))OR(vt0.c1)), (vt1.c1 IN ()))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1)/(rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76)))) AND (0.6978755080341829)));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1)/(rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76)))) AND (0.6978755080341829)) WHERE (COALESCE(((rt0.c1)OR(vt1.c1)), CASE WHEN t0.c76 THEN vt1.c1 END, ((((vt1.c2)AND(vt1.c0)))OR(vt0.c1)), (vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c1)OR(vt1.c1)), CASE WHEN t0.c76 THEN vt1.c1 END, ((((vt1.c2)AND(vt1.c0)))OR(vt0.c1)), (vt1.c1 IN ()))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1)/(rt0.c2)) AS BLOB) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS TEXT)) BETWEEN ((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c76)))) AND (0.6978755080341829)));
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0, vt0.c2, vt0.c0))<((vt1.c2, vt1.c0, vt0.c2))) COLLATE NOCASE FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))&(((((1294519173)AND(t0.c76)))OR(vt1.c1)))) WHERE (CASE -7.74682428E8  WHEN (((vt0.c1))>((vt1.c2))) THEN ((x'')OR(t0.c76)) END) ORDER BY ((0.5663639433779392)<(vt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE -7.74682428E8  WHEN (((vt0.c1))>((vt1.c2))) THEN ((x'')OR(t0.c76)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0, vt0.c2, vt0.c0))<((vt1.c2, vt1.c0, vt0.c2))) COLLATE NOCASE FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))&(((((1294519173)AND(t0.c76)))OR(vt1.c1)))) ORDER BY ((0.5663639433779392)<(vt1.c1 COLLATE BINARY)));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0, vt0.c2, vt0.c0))<((vt1.c2, vt1.c0, vt0.c2))) COLLATE NOCASE FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))&(((((1294519173)AND(t0.c76)))OR(vt1.c1)))) WHERE (CASE -7.74682428E8  WHEN (((vt0.c1))>((vt1.c2))) THEN ((x'')OR(t0.c76)) END) ORDER BY ((0.5663639433779392)<(vt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE -7.74682428E8  WHEN (((vt0.c1))>((vt1.c2))) THEN ((x'')OR(t0.c76)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((vt0.c0, vt0.c2, vt0.c0))<((vt1.c2, vt1.c0, vt0.c2))) COLLATE NOCASE FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))&(((((1294519173)AND(t0.c76)))OR(vt1.c1)))) ORDER BY ((0.5663639433779392)<(vt1.c1 COLLATE BINARY)));
SELECT * FROM t0 WHERE (((t0.c76)LIKE(((t0.c76)GLOB(t0.c76))))) ORDER BY CASE (((t0.c76))>((t0.c76)))  WHEN ((t0.c76)>>(t0.c76)) THEN t0.c76 END DESC, (- ('848303721')) ASC, t0.c76 DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c76)LIKE(((t0.c76)GLOB(t0.c76))))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c76))>((t0.c76)))  WHEN ((t0.c76)>>(t0.c76)) THEN t0.c76 END DESC, (- ('848303721')) ASC, t0.c76 DESC);
SELECT * FROM t0 WHERE (((t0.c76)LIKE(((t0.c76)GLOB(t0.c76))))) ORDER BY CASE (((t0.c76))>((t0.c76)))  WHEN ((t0.c76)>>(t0.c76)) THEN t0.c76 END DESC, (- ('848303721')) ASC, t0.c76 DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c76)LIKE(((t0.c76)GLOB(t0.c76))))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c76))>((t0.c76)))  WHEN ((t0.c76)>>(t0.c76)) THEN t0.c76 END DESC, (- ('848303721')) ASC, t0.c76 DESC);
SELECT * FROM t0 WHERE (((t0.c76)LIKE(((t0.c76)GLOB(t0.c76))))) ORDER BY CASE (((t0.c76))>((t0.c76)))  WHEN ((t0.c76)>>(t0.c76)) THEN t0.c76 END DESC, (- ('848303721')) ASC, t0.c76 DESC;
SELECT * FROM rt0, t0, vt0, vt1 WHERE (CASE (0.4363698546902167 IN ())  WHEN ((rt0.c3)<<(vt1.c0)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((((vt1.c2)OR(rt0.c0)))AND(rt0.c1)) END) ORDER BY (vt1.c2 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (0.4363698546902167 IN ())  WHEN ((rt0.c3)<<(vt1.c0)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((((vt1.c2)OR(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY (vt1.c2 IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (CASE (0.4363698546902167 IN ())  WHEN ((rt0.c3)<<(vt1.c0)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((((vt1.c2)OR(rt0.c0)))AND(rt0.c1)) END) ORDER BY (vt1.c2 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (0.4363698546902167 IN ())  WHEN ((rt0.c3)<<(vt1.c0)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((((vt1.c2)OR(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY (vt1.c2 IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (CASE (0.4363698546902167 IN ())  WHEN ((rt0.c3)<<(vt1.c0)) THEN ((rt0.c3)>(rt0.c0)) ELSE ((((vt1.c2)OR(rt0.c0)))AND(rt0.c1)) END) ORDER BY (vt1.c2 IN ()) DESC  NULLS LAST;
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((((((((NULL)OR(rt0.c1)))OR(t0.c76)))OR(rt0.c0)))AND(vt1.c2)) AS BLOB) WHERE (((NULL) BETWEEN (TRIM(t0.c76)) AND (((rt0.c3)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (TRIM(t0.c76)) AND (((rt0.c3)+(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((((((((NULL)OR(rt0.c1)))OR(t0.c76)))OR(rt0.c0)))AND(vt1.c2)) AS BLOB));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((((((((NULL)OR(rt0.c1)))OR(t0.c76)))OR(rt0.c0)))AND(vt1.c2)) AS BLOB) WHERE (((NULL) BETWEEN (TRIM(t0.c76)) AND (((rt0.c3)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (TRIM(t0.c76)) AND (((rt0.c3)+(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((((((((NULL)OR(rt0.c1)))OR(t0.c76)))OR(rt0.c0)))AND(vt1.c2)) AS BLOB));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt1 ON CAST(((((((((NULL)OR(rt0.c1)))OR(t0.c76)))OR(rt0.c0)))AND(vt1.c2)) AS BLOB) WHERE (((NULL) BETWEEN (TRIM(t0.c76)) AND (((rt0.c3)+(rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((((vt0.c2)IS(x''))) IS FALSE)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS(x''))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((((vt0.c2)IS(x''))) IS FALSE)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)IS(x''))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((((vt0.c2)IS(x''))) IS FALSE)) ORDER BY rt0.c0;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c1 COLLATE BINARY)AND(RTRIM(rt0.c0))))OR('-''8I'))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c76)))AND(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c2))==((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(RTRIM(rt0.c0))))OR('-''8I'))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c76)))AND(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c2))=((rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c1 COLLATE BINARY)AND(RTRIM(rt0.c0))))OR('-''8I'))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c76)))AND(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c2))==((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(RTRIM(rt0.c0))))OR('-''8I'))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c76)))AND(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c2))=((rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c1 COLLATE BINARY)AND(RTRIM(rt0.c0))))OR('-''8I'))) ORDER BY ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c76)))AND(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))AND((((rt0.c2))==((rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (((((((((((vt0.c1)<=(vt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (t0.c76)))))OR(((-6.74983883E8) NOTNULL))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))OR((rt0.c0 IN (vt0.c1))))) ORDER BY (((((NULL)AND(vt1.c0)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)<=(vt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (t0.c76)))))OR(((-6.74983883E8) NOTNULL))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))OR((rt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (((((NULL)AND(vt1.c0)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (((((((((((vt0.c1)<=(vt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (t0.c76)))))OR(((-6.74983883E8) NOTNULL))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))OR((rt0.c0 IN (vt0.c1))))) ORDER BY (((((NULL)AND(vt1.c0)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)<=(vt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (t0.c76)))))OR(((-6.74983883E8) NOTNULL))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))OR((rt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (((((NULL)AND(vt1.c0)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (((((((((((vt0.c1)<=(vt0.c0)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (t0.c76)))))OR(((-6.74983883E8) NOTNULL))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))OR((rt0.c0 IN (vt0.c1))))) ORDER BY (((((NULL)AND(vt1.c0)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ ((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON NULL WHERE ((((json_patch(vt1.c0, vt1.c0), CAST(vt1.c1 AS INTEGER), CAST(vt1.c2 AS INTEGER)))>(((t0.c76 IN (vt1.c0, vt1.c1)), ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)), ((t0.c76) BETWEEN (vt1.c2) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((json_patch(vt1.c0, vt1.c0), CAST(vt1.c1 AS INTEGER), CAST(vt1.c2 AS INTEGER)))>(((t0.c76 IN (vt1.c0, vt1.c1)), ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)), ((t0.c76) BETWEEN (vt1.c2) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON NULL);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON NULL WHERE ((((json_patch(vt1.c0, vt1.c0), CAST(vt1.c1 AS INTEGER), CAST(vt1.c2 AS INTEGER)))>(((t0.c76 IN (vt1.c0, vt1.c1)), ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)), ((t0.c76) BETWEEN (vt1.c2) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((json_patch(vt1.c0, vt1.c0), CAST(vt1.c1 AS INTEGER), CAST(vt1.c2 AS INTEGER)))>(((t0.c76 IN (vt1.c0, vt1.c1)), ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)), ((t0.c76) BETWEEN (vt1.c2) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON NULL);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON NULL WHERE ((((json_patch(vt1.c0, vt1.c0), CAST(vt1.c1 AS INTEGER), CAST(vt1.c2 AS INTEGER)))>(((t0.c76 IN (vt1.c0, vt1.c1)), ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)), ((t0.c76) BETWEEN (vt1.c2) AND (vt1.c1))))));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((CASE WHEN vt1.c1 THEN t0.c76 END) NOT NULL)) ORDER BY ((((rt0.c1)<<(vt1.c0)))+((rt0.c1 IN ()))), ((vt1.c1 COLLATE BINARY) BETWEEN (CASE WHEN vt1.c2 THEN rt0.c0 END) AND (0.9383255419705974)), (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (CASE rt0.c0  WHEN vt1.c2 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN t0.c76 END) NOT NULL)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((rt0.c1)<<(vt1.c0)))+((rt0.c1 IN ()))), ((vt1.c1 COLLATE BINARY) BETWEEN (CASE WHEN vt1.c2 THEN rt0.c0 END) AND (0.9383255419705974)), (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (CASE rt0.c0  WHEN vt1.c2 THEN vt1.c1 END)));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((CASE WHEN vt1.c1 THEN t0.c76 END) NOT NULL)) ORDER BY ((((rt0.c1)<<(vt1.c0)))+((rt0.c1 IN ()))), ((vt1.c1 COLLATE BINARY) BETWEEN (CASE WHEN vt1.c2 THEN rt0.c0 END) AND (0.9383255419705974)), (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (CASE rt0.c0  WHEN vt1.c2 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN t0.c76 END) NOT NULL)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((rt0.c1)<<(vt1.c0)))+((rt0.c1 IN ()))), ((vt1.c1 COLLATE BINARY) BETWEEN (CASE WHEN vt1.c2 THEN rt0.c0 END) AND (0.9383255419705974)), (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (CASE rt0.c0  WHEN vt1.c2 THEN vt1.c1 END)));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((CASE WHEN vt1.c1 THEN t0.c76 END) NOT NULL)) ORDER BY ((((rt0.c1)<<(vt1.c0)))+((rt0.c1 IN ()))), ((vt1.c1 COLLATE BINARY) BETWEEN (CASE WHEN vt1.c2 THEN rt0.c0 END) AND (0.9383255419705974)), (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (CASE rt0.c0  WHEN vt1.c2 THEN vt1.c1 END));
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c3)) BETWEEN ((t0.c76)) AND ((((x'6715') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((t0.c76)) AND ((((x'6715') NOT NULL))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c3)) BETWEEN ((t0.c76)) AND ((((x'6715') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((t0.c76)) AND ((((x'6715') NOT NULL))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c3)) BETWEEN ((t0.c76)) AND ((((x'6715') NOT NULL)))));
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c2)) NOT BETWEEN ((t0.c76)) AND ((rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((t0.c76)) AND ((rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c2)) NOT BETWEEN ((t0.c76)) AND ((rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((t0.c76)) AND ((rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c2)) NOT BETWEEN ((t0.c76)) AND ((rt0.c3))) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((0.593631131263663, (((('570071133')OR(NULL)))AND('8782652')), 0.4947353259356567, (~ (vt1.c2)), (vt1.c2 IN (rt0.c3)))) AND ((0.7406731221903153, vt1.c1 COLLATE RTRIM, ((vt1.c0) NOTNULL), ((rt0.c0)GLOB(rt0.c2)), CASE WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c3 END))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((0.593631131263663, (((('570071133')OR(NULL)))AND('8782652')), 0.4947353259356567, (~ (vt1.c2)), (vt1.c2 IN (rt0.c3)))) AND ((0.7406731221903153, vt1.c1 COLLATE RTRIM, ((vt1.c0) NOTNULL), ((rt0.c0)GLOB(rt0.c2)), CASE WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c3 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((0.593631131263663, (((('570071133')OR(NULL)))AND('8782652')), 0.4947353259356567, (~ (vt1.c2)), (vt1.c2 IN (rt0.c3)))) AND ((0.7406731221903153, vt1.c1 COLLATE RTRIM, ((vt1.c0) NOTNULL), ((rt0.c0)GLOB(rt0.c2)), CASE WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c3 END))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((0.593631131263663, (((('570071133')OR(NULL)))AND('8782652')), 0.4947353259356567, (~ (vt1.c2)), (vt1.c2 IN (rt0.c3)))) AND ((0.7406731221903153, vt1.c1 COLLATE RTRIM, ((vt1.c0) NOTNULL), ((rt0.c0)GLOB(rt0.c2)), CASE WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c3 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((0.593631131263663, (((('570071133')OR(NULL)))AND('8782652')), 0.4947353259356567, (~ (vt1.c2)), (vt1.c2 IN (rt0.c3)))) AND ((0.7406731221903153, vt1.c1 COLLATE RTRIM, ((vt1.c0) NOTNULL), ((rt0.c0)GLOB(rt0.c2)), CASE WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c3 END))));
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c3)IS(NULL)))LIKE(((x'') NOT BETWEEN (vt1.c2) AND (rt0.c3))))) ORDER BY (((((((((((NULL)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)), (+ (t0.c76)), ((((((((rt0.c3)OR(vt0.c0)))OR(t0.c76)))AND(vt0.c2)))OR(vt0.c1))))>((DATE(t0.c76, vt1.c2, vt0.c2), IFNULL(vt1.c2, rt0.c2), '~c')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)IS(NULL)))LIKE(((x'') NOT BETWEEN (vt1.c2) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (((((((((((NULL)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)), (+ (t0.c76)), ((((((((rt0.c3)OR(vt0.c0)))OR(t0.c76)))AND(vt0.c2)))OR(vt0.c1))))>((DATE(t0.c76, vt1.c2, vt0.c2), IFNULL(vt1.c2, rt0.c2), '~c'))));
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c3)IS(NULL)))LIKE(((x'') NOT BETWEEN (vt1.c2) AND (rt0.c3))))) ORDER BY (((((((((((NULL)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)), (+ (t0.c76)), ((((((((rt0.c3)OR(vt0.c0)))OR(t0.c76)))AND(vt0.c2)))OR(vt0.c1))))>((DATE(t0.c76, vt1.c2, vt0.c2), IFNULL(vt1.c2, rt0.c2), '~c')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)IS(NULL)))LIKE(((x'') NOT BETWEEN (vt1.c2) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (((((((((((NULL)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)), (+ (t0.c76)), ((((((((rt0.c3)OR(vt0.c0)))OR(t0.c76)))AND(vt0.c2)))OR(vt0.c1))))>((DATE(t0.c76, vt1.c2, vt0.c2), IFNULL(vt1.c2, rt0.c2), '~c'))));
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c3)IS(NULL)))LIKE(((x'') NOT BETWEEN (vt1.c2) AND (rt0.c3))))) ORDER BY (((((((((((NULL)OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)), (+ (t0.c76)), ((((((((rt0.c3)OR(vt0.c0)))OR(t0.c76)))AND(vt0.c2)))OR(vt0.c1))))>((DATE(t0.c76, vt1.c2, vt0.c2), IFNULL(vt1.c2, rt0.c2), '~c')));
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((vt0.c0 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((t0.c76) NOT BETWEEN (x'9e7a') AND (vt0.c0))))) ORDER BY vt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((t0.c76) NOT BETWEEN (x'9e7a') AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY vt0.c2 ASC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((vt0.c0 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((t0.c76) NOT BETWEEN (x'9e7a') AND (vt0.c0))))) ORDER BY vt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((t0.c76) NOT BETWEEN (x'9e7a') AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY vt0.c2 ASC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((vt0.c0 IN (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((t0.c76) NOT BETWEEN (x'9e7a') AND (vt0.c0))))) ORDER BY vt0.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((((((((ROUND(t0.c76, vt0.c2))AND((NULL IN ()))))AND(rt0.c2 COLLATE NOCASE)))OR(((((((((t0.c76)AND(vt0.c0)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c2)))))OR(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((ROUND(t0.c76, vt0.c2))AND((NULL IN ()))))AND(rt0.c2 COLLATE NOCASE)))OR(((((((((t0.c76)AND(vt0.c0)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c2)))))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((((((((ROUND(t0.c76, vt0.c2))AND((NULL IN ()))))AND(rt0.c2 COLLATE NOCASE)))OR(((((((((t0.c76)AND(vt0.c0)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c2)))))OR(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((ROUND(t0.c76, vt0.c2))AND((NULL IN ()))))AND(rt0.c2 COLLATE NOCASE)))OR(((((((((t0.c76)AND(vt0.c0)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c2)))))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (((((((((ROUND(t0.c76, vt0.c2))AND((NULL IN ()))))AND(rt0.c2 COLLATE NOCASE)))OR(((((((((t0.c76)AND(vt0.c0)))AND(rt0.c2)))AND(vt1.c1)))OR(rt0.c2)))))OR(((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((+ (rt0.c2)))IS(((((vt1.c2)AND(rt0.c3)))OR(3.9024549E8))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))IS(((((vt1.c2)AND(rt0.c3)))OR(3.9024549E8))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((+ (rt0.c2)))IS(((((vt1.c2)AND(rt0.c3)))OR(3.9024549E8))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))IS(((((vt1.c2)AND(rt0.c3)))OR(3.9024549E8))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((+ (rt0.c2)))IS(((((vt1.c2)AND(rt0.c3)))OR(3.9024549E8))))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'' IN ()) WHERE ((+ (HEX(vt0.c0)))) ORDER BY ((((vt0.c2)>=(vt0.c1))) ISNULL) DESC  NULLS FIRST, TRIM(DISTINCT x'', ((vt0.c2)<=(vt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (x'' IN ()) ORDER BY ((((vt0.c2)>=(vt0.c1))) ISNULL) DESC  NULLS FIRST, TRIM(DISTINCT x'', ((vt0.c2)<=(vt1.c2))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'' IN ()) WHERE ((+ (HEX(vt0.c0)))) ORDER BY ((((vt0.c2)>=(vt0.c1))) ISNULL) DESC  NULLS FIRST, TRIM(DISTINCT x'', ((vt0.c2)<=(vt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (x'' IN ()) ORDER BY ((((vt0.c2)>=(vt0.c1))) ISNULL) DESC  NULLS FIRST, TRIM(DISTINCT x'', ((vt0.c2)<=(vt1.c2))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (x'' IN ()) WHERE ((+ (HEX(vt0.c0)))) ORDER BY ((((vt0.c2)>=(vt0.c1))) ISNULL) DESC  NULLS FIRST, TRIM(DISTINCT x'', ((vt0.c2)<=(vt1.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c76, '', rt0.c1))<((rt0.c2, rt0.c2, rt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((t0.c76, '', rt0.c1))<((rt0.c2, rt0.c2, rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c76, '', rt0.c1))<((rt0.c2, rt0.c2, rt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((t0.c76, '', rt0.c1))<((rt0.c2, rt0.c2, rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c76, '', rt0.c1))<((rt0.c2, rt0.c2, rt0.c1)))) IS FALSE));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON CAST(((vt1.c1)LIKE(NULL)) AS BLOB) CROSS JOIN t0 ON (((+ (rt0.c1))) NOT BETWEEN (((vt1.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) WHERE (json_array_length(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)), x'')) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)), x'')) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON CAST(((vt1.c1)LIKE(NULL)) AS BLOB) CROSS JOIN t0 ON (((+ (rt0.c1))) NOT BETWEEN (((vt1.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) ORDER BY x'' DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON CAST(((vt1.c1)LIKE(NULL)) AS BLOB) CROSS JOIN t0 ON (((+ (rt0.c1))) NOT BETWEEN (((vt1.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) WHERE (json_array_length(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)), x'')) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)), x'')) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON CAST(((vt1.c1)LIKE(NULL)) AS BLOB) CROSS JOIN t0 ON (((+ (rt0.c1))) NOT BETWEEN (((vt1.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) ORDER BY x'' DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL CROSS JOIN vt0 ON CAST(((vt1.c1)LIKE(NULL)) AS BLOB) CROSS JOIN t0 ON (((+ (rt0.c1))) NOT BETWEEN (((vt1.c2) BETWEEN (vt0.c0) AND (rt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) WHERE (json_array_length(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)), x'')) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0 INDEXED BY i94 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY x''  NULLS FIRST, (~ (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 INDEXED BY i94 ORDER BY x''  NULLS FIRST, (~ (rt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 INDEXED BY i94 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY x''  NULLS FIRST, (~ (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 INDEXED BY i94 ORDER BY x''  NULLS FIRST, (~ (rt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((('' COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT (((('' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((('' COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT (((('' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((('' COLLATE BINARY) NOT NULL));
SELECT * FROM t0, vt1, vt0, rt0 WHERE ((~ (((vt1.c1) NOT BETWEEN (x'') AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1) NOT BETWEEN (x'') AND (vt0.c2))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT * FROM t0, vt1, vt0, rt0 WHERE ((~ (((vt1.c1) NOT BETWEEN (x'') AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1) NOT BETWEEN (x'') AND (vt0.c2))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT * FROM t0, vt1, vt0, rt0 WHERE ((~ (((vt1.c1) NOT BETWEEN (x'') AND (vt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((vt1.c1)>=(vt1.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c3)<<(vt1.c1)))) WHERE (((rt0.c1) ISNULL)) ORDER BY ((1222153164)IS NOT(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((vt1.c1)>=(vt1.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c3)<<(vt1.c1)))) ORDER BY ((1222153164)IS NOT(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((vt1.c1)>=(vt1.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c3)<<(vt1.c1)))) WHERE (((rt0.c1) ISNULL)) ORDER BY ((1222153164)IS NOT(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((vt1.c1)>=(vt1.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c3)<<(vt1.c1)))) ORDER BY ((1222153164)IS NOT(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((vt1.c1)>=(vt1.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c3)<<(vt1.c1)))) WHERE (((rt0.c1) ISNULL)) ORDER BY ((1222153164)IS NOT(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('겇x' COLLATE BINARY)<=((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c2  NULLS LAST, ((((((((vt0.c0)OR(((NULL)==(rt0.c2)))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c1))<>((rt0.c0))))))OR(QUOTE(rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('겇x' COLLATE BINARY)<=((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2  NULLS LAST, ((((((((vt0.c0)OR(((NULL)=(rt0.c2)))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c1))<>((rt0.c0))))))OR(QUOTE(rt0.c3))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('겇x' COLLATE BINARY)<=((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c2  NULLS LAST, ((((((((vt0.c0)OR(((NULL)==(rt0.c2)))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c1))<>((rt0.c0))))))OR(QUOTE(rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('겇x' COLLATE BINARY)<=((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2  NULLS LAST, ((((((((vt0.c0)OR(((NULL)=(rt0.c2)))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c1))<>((rt0.c0))))))OR(QUOTE(rt0.c3))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('겇x' COLLATE BINARY)<=((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c2  NULLS LAST, ((((((((vt0.c0)OR(((NULL)==(rt0.c2)))))OR(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c1))<>((rt0.c0))))))OR(QUOTE(rt0.c3))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TYPEOF(DISTINCT ((t0.c76)IS(vt1.c1)))) ORDER BY (0.7457961085470001 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((t0.c76)IS(vt1.c1)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (0.7457961085470001 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TYPEOF(DISTINCT ((t0.c76)IS(vt1.c1)))) ORDER BY (0.7457961085470001 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((t0.c76)IS(vt1.c1)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (0.7457961085470001 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TYPEOF(DISTINCT ((t0.c76)IS(vt1.c1)))) ORDER BY (0.7457961085470001 IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((1)) BETWEEN ((((((((((t0.c76)AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))OR(t0.c76)))) AND ((((t0.c76)&(t0.c76))))));
SELECT SUM(count) FROM (SELECT (((((1)) BETWEEN ((((((((((t0.c76)AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))OR(t0.c76)))) AND ((((t0.c76)&(t0.c76)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((1)) BETWEEN ((((((((((t0.c76)AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))OR(t0.c76)))) AND ((((t0.c76)&(t0.c76))))));
SELECT SUM(count) FROM (SELECT (((((1)) BETWEEN ((((((((((t0.c76)AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))OR(t0.c76)))) AND ((((t0.c76)&(t0.c76)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((1)) BETWEEN ((((((((((t0.c76)AND(t0.c76)))AND(t0.c76)))AND(t0.c76)))OR(t0.c76)))) AND ((((t0.c76)&(t0.c76))))));
SELECT * FROM vt0, t0, vt1 WHERE ((- ((t0.c76 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c76 IN (vt1.c2))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((- ((t0.c76 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c76 IN (vt1.c2))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((- ((t0.c76 IN (vt1.c2)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)LIKE(vt1.c2)))>>(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.c2)))>>(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)LIKE(vt1.c2)))>>(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.c2)))>>(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)LIKE(vt1.c2)))>>(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c2) NOTNULL) AS TEXT)) ORDER BY (((~ (vt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c2) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((~ (vt1.c2))) IS FALSE));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c2) NOTNULL) AS TEXT)) ORDER BY (((~ (vt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c2) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((~ (vt1.c2))) IS FALSE));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c2) NOTNULL) AS TEXT)) ORDER BY (((~ (vt1.c2))) IS FALSE);
SELECT * FROM t0 CROSS JOIN vt1 ON CASE WHEN IFNULL(NULL, -3.38958208E8) THEN (t0.c76 IN (vt1.c1)) WHEN (((vt1.c2))<((vt1.c1))) THEN x'' WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE x'' END THEN ((vt1.c2)/(vt1.c0)) END WHERE (CASE WHEN (((vt1.c2, t0.c76, vt1.c1)) BETWEEN ((vt1.c1, vt1.c2, vt1.c1)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c1)+(vt1.c2)) END) ORDER BY (((((~ (vt1.c0)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c2))<=((t0.c76))))) DESC  NULLS LAST, ((CASE vt1.c2  WHEN t0.c76 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c76 THEN t0.c76 ELSE vt1.c0 END) BETWEEN (CASE WHEN t0.c76 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN t0.c76 THEN vt1.c0 ELSE 0.07641645777155381 END) AND (vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c2, t0.c76, vt1.c1)) BETWEEN ((vt1.c1, vt1.c2, vt1.c1)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c1)+(vt1.c2)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CASE WHEN IFNULL(NULL, -3.38958208E8) THEN (t0.c76 IN (vt1.c1)) WHEN (((vt1.c2))<((vt1.c1))) THEN x'' WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE x'' END THEN ((vt1.c2)/(vt1.c0)) END ORDER BY (((((~ (vt1.c0)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c2))<=((t0.c76))))) DESC  NULLS LAST, ((CASE vt1.c2  WHEN t0.c76 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c76 THEN t0.c76 ELSE vt1.c0 END) BETWEEN (CASE WHEN t0.c76 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN t0.c76 THEN vt1.c0 ELSE 0.07641645777155381 END) AND (vt1.c1)));
SELECT * FROM t0 CROSS JOIN vt1 ON CASE WHEN IFNULL(NULL, -3.38958208E8) THEN (t0.c76 IN (vt1.c1)) WHEN (((vt1.c2))<((vt1.c1))) THEN x'' WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE x'' END THEN ((vt1.c2)/(vt1.c0)) END WHERE (CASE WHEN (((vt1.c2, t0.c76, vt1.c1)) BETWEEN ((vt1.c1, vt1.c2, vt1.c1)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c1)+(vt1.c2)) END) ORDER BY (((((~ (vt1.c0)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c2))<=((t0.c76))))) DESC  NULLS LAST, ((CASE vt1.c2  WHEN t0.c76 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c76 THEN t0.c76 ELSE vt1.c0 END) BETWEEN (CASE WHEN t0.c76 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN t0.c76 THEN vt1.c0 ELSE 0.07641645777155381 END) AND (vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c2, t0.c76, vt1.c1)) BETWEEN ((vt1.c1, vt1.c2, vt1.c1)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c1)+(vt1.c2)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CASE WHEN IFNULL(NULL, -3.38958208E8) THEN (t0.c76 IN (vt1.c1)) WHEN (((vt1.c2))<((vt1.c1))) THEN x'' WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE x'' END THEN ((vt1.c2)/(vt1.c0)) END ORDER BY (((((~ (vt1.c0)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c2))<=((t0.c76))))) DESC  NULLS LAST, ((CASE vt1.c2  WHEN t0.c76 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c76 THEN t0.c76 ELSE vt1.c0 END) BETWEEN (CASE WHEN t0.c76 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN t0.c76 THEN vt1.c0 ELSE 0.07641645777155381 END) AND (vt1.c1)));
SELECT * FROM t0 CROSS JOIN vt1 ON CASE WHEN IFNULL(NULL, -3.38958208E8) THEN (t0.c76 IN (vt1.c1)) WHEN (((vt1.c2))<((vt1.c1))) THEN x'' WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE x'' END THEN ((vt1.c2)/(vt1.c0)) END WHERE (CASE WHEN (((vt1.c2, t0.c76, vt1.c1)) BETWEEN ((vt1.c1, vt1.c2, vt1.c1)) AND ((NULL, vt1.c0, vt1.c0))) THEN ((vt1.c1)+(vt1.c2)) END) ORDER BY (((((~ (vt1.c0)))AND(vt1.c1 COLLATE BINARY)))OR((((vt1.c2))<=((t0.c76))))) DESC  NULLS LAST, ((CASE vt1.c2  WHEN t0.c76 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 WHEN t0.c76 THEN t0.c76 ELSE vt1.c0 END) BETWEEN (CASE WHEN t0.c76 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN t0.c76 THEN vt1.c0 ELSE 0.07641645777155381 END) AND (vt1.c1));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((((vt1.c2) ISNULL)))==((json_remove(vt1.c1, vt0.c0)))) WHERE (((CASE WHEN vt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN '377602921' WHEN x'65e1' THEN rt0.c1 WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c2 THEN vt1.c0 END)>=(((0xffffffffde50479b) IS FALSE)))) ORDER BY ((0X53d60d05)<=(SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN '377602921' WHEN x'65e1' THEN rt0.c1 WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c2 THEN vt1.c0 END)>=(((0xffffffffde50479b) IS FALSE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((((vt1.c2) ISNULL)))==((json_remove(vt1.c1, vt0.c0)))) ORDER BY ((0x53d60d05)<=(SQLITE_SOURCE_ID())));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((((vt1.c2) ISNULL)))==((json_remove(vt1.c1, vt0.c0)))) WHERE (((CASE WHEN vt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN '377602921' WHEN x'65e1' THEN rt0.c1 WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c2 THEN vt1.c0 END)>=(((0xffffffffde50479b) IS FALSE)))) ORDER BY ((0X53d60d05)<=(SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN '377602921' WHEN x'65e1' THEN rt0.c1 WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c2 THEN vt1.c0 END)>=(((0xffffffffde50479b) IS FALSE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((((vt1.c2) ISNULL)))==((json_remove(vt1.c1, vt0.c0)))) ORDER BY ((0x53d60d05)<=(SQLITE_SOURCE_ID())));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN vt1 ON (((((vt1.c2) ISNULL)))==((json_remove(vt1.c1, vt0.c0)))) WHERE (((CASE WHEN vt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN '377602921' WHEN x'65e1' THEN rt0.c1 WHEN rt0.c3 THEN vt0.c2 WHEN vt1.c2 THEN vt1.c0 END)>=(((0xffffffffde50479b) IS FALSE)))) ORDER BY ((0X53d60d05)<=(SQLITE_SOURCE_ID()));
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c1) IS TRUE)  WHEN ((vt1.c1)OR(vt0.c2)) THEN ((vt1.c2) BETWEEN (t0.c76) AND (vt0.c0)) END WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY (CASE WHEN '0.1168154309273216' THEN vt1.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c1) IS TRUE)  WHEN ((vt1.c1)OR(vt0.c2)) THEN ((vt1.c2) BETWEEN (t0.c76) AND (vt0.c0)) END ORDER BY (CASE WHEN '0.1168154309273216' THEN vt1.c2 END IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c1) IS TRUE)  WHEN ((vt1.c1)OR(vt0.c2)) THEN ((vt1.c2) BETWEEN (t0.c76) AND (vt0.c0)) END WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY (CASE WHEN '0.1168154309273216' THEN vt1.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c1) IS TRUE)  WHEN ((vt1.c1)OR(vt0.c2)) THEN ((vt1.c2) BETWEEN (t0.c76) AND (vt0.c0)) END ORDER BY (CASE WHEN '0.1168154309273216' THEN vt1.c2 END IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON CASE ((vt0.c1) IS TRUE)  WHEN ((vt1.c1)OR(vt0.c2)) THEN ((vt1.c2) BETWEEN (t0.c76) AND (vt0.c0)) END WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY (CASE WHEN '0.1168154309273216' THEN vt1.c2 END IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON UNLIKELY(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((((vt0.c2) NOTNULL)))) LEFT OUTER JOIN vt0 ON (((vt1.c1 IN ()))>>(rt0.c2)) WHERE ((((rt0.c0) NOTNULL) IN (((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOTNULL) IN (((((rt0.c1)AND(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON UNLIKELY(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((((vt0.c2) NOTNULL)))) LEFT OUTER JOIN vt0 ON (((vt1.c1 IN ()))>>(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON UNLIKELY(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((((vt0.c2) NOTNULL)))) LEFT OUTER JOIN vt0 ON (((vt1.c1 IN ()))>>(rt0.c2)) WHERE ((((rt0.c0) NOTNULL) IN (((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOTNULL) IN (((((rt0.c1)AND(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON UNLIKELY(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END) FULL OUTER JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))) AND ((((vt0.c2) NOTNULL)))) LEFT OUTER JOIN vt0 ON (((vt1.c1 IN ()))>>(rt0.c2)));
SELECT * FROM t0, vt0, vt1 WHERE ((((((((('1532621463' COLLATE RTRIM)OR(CASE vt0.c0  WHEN vt1.c0 THEN 'd*h' ELSE vt1.c1 END)))OR(vt0.c2)))OR(((vt1.c1)>=(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE 0.37615565470606616 END))) ORDER BY CAST(((vt1.c2) ISNULL) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((('1532621463' COLLATE RTRIM)OR(CASE vt0.c0  WHEN vt1.c0 THEN 'd*h' ELSE vt1.c1 END)))OR(vt0.c2)))OR(((vt1.c1)>=(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE 0.37615565470606616 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((vt1.c2) ISNULL) AS INTEGER) ASC);
SELECT * FROM t0, vt0, vt1 WHERE ((((((((('1532621463' COLLATE RTRIM)OR(CASE vt0.c0  WHEN vt1.c0 THEN 'd*h' ELSE vt1.c1 END)))OR(vt0.c2)))OR(((vt1.c1)>=(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE 0.37615565470606616 END))) ORDER BY CAST(((vt1.c2) ISNULL) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((('1532621463' COLLATE RTRIM)OR(CASE vt0.c0  WHEN vt1.c0 THEN 'd*h' ELSE vt1.c1 END)))OR(vt0.c2)))OR(((vt1.c1)>=(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE 0.37615565470606616 END))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST(((vt1.c2) ISNULL) AS INTEGER) ASC);
SELECT * FROM t0, vt0, vt1 WHERE ((((((((('1532621463' COLLATE RTRIM)OR(CASE vt0.c0  WHEN vt1.c0 THEN 'd*h' ELSE vt1.c1 END)))OR(vt0.c2)))OR(((vt1.c1)>=(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE 0.37615565470606616 END))) ORDER BY CAST(((vt1.c2) ISNULL) AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((((((0.6434173194835527)OR(vt0.c1)))OR(vt1.c2)))AND(((vt0.c0) NOT NULL))))AND(NULL)))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))) WHERE (((((vt1.c0) IS TRUE)) BETWEEN ('') AND (((rt0.c1)|(x''))))) ORDER BY ((CAST(vt1.c1 AS REAL))>(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) BETWEEN ('') AND (((rt0.c1)|(x''))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((((((0.6434173194835527)OR(vt0.c1)))OR(vt1.c2)))AND(((vt0.c0) NOT NULL))))AND(NULL)))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))) ORDER BY ((CAST(vt1.c1 AS REAL))>(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((((((0.6434173194835527)OR(vt0.c1)))OR(vt1.c2)))AND(((vt0.c0) NOT NULL))))AND(NULL)))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))) WHERE (((((vt1.c0) IS TRUE)) BETWEEN ('') AND (((rt0.c1)|(x''))))) ORDER BY ((CAST(vt1.c1 AS REAL))>(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) BETWEEN ('') AND (((rt0.c1)|(x''))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((((((0.6434173194835527)OR(vt0.c1)))OR(vt1.c2)))AND(((vt0.c0) NOT NULL))))AND(NULL)))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))) ORDER BY ((CAST(vt1.c1 AS REAL))>(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((((((((((0.6434173194835527)OR(vt0.c1)))OR(vt1.c2)))AND(((vt0.c0) NOT NULL))))AND(NULL)))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))) WHERE (((((vt1.c0) IS TRUE)) BETWEEN ('') AND (((rt0.c1)|(x''))))) ORDER BY ((CAST(vt1.c1 AS REAL))>(vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c76)<(t0.c76)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c76)<(t0.c76))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c76)<(t0.c76)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c76)<(t0.c76))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c76)<(t0.c76)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2))%((+ (vt1.c2)))) WHERE (((0x4836cea1)IS NOT((- (vt1.c1))))) ORDER BY TRIM(DISTINCT CAST(vt1.c1 AS BLOB), UPPER(DISTINCT t0.c76));
SELECT SUM(count) FROM (SELECT ALL ((((0x4836cea1)IS NOT((- (vt1.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2))%((+ (vt1.c2)))) ORDER BY TRIM(DISTINCT CAST(vt1.c1 AS BLOB), UPPER(DISTINCT t0.c76)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2))%((+ (vt1.c2)))) WHERE (((0x4836cea1)IS NOT((- (vt1.c1))))) ORDER BY TRIM(DISTINCT CAST(vt1.c1 AS BLOB), UPPER(DISTINCT t0.c76));
SELECT SUM(count) FROM (SELECT ALL ((((0x4836cea1)IS NOT((- (vt1.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2))%((+ (vt1.c2)))) ORDER BY TRIM(DISTINCT CAST(vt1.c1 AS BLOB), UPPER(DISTINCT t0.c76)));
SELECT * FROM rt0 CROSS JOIN t0 ON rtreenode((~ (rt0.c3)), CASE ''  WHEN rt0.c0 THEN vt0.c1 END) RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT UPPER(vt0.c1)) FULL OUTER JOIN vt0 ON TYPEOF(TRIM(DISTINCT rt0.c0, vt1.c2)) WHERE (((((vt0.c1) NOT NULL))<>(((((((((vt0.c1)AND(rt0.c3)))OR(vt1.c2)))OR(vt1.c2)))OR(vt0.c1))))) ORDER BY (+ ((((rt0.c2))<>((vt0.c1))))), (- (0.18737230194510812))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<>(((((((((vt0.c1)AND(rt0.c3)))OR(vt1.c2)))OR(vt1.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON rtreenode((~ (rt0.c3)), CASE ''  WHEN rt0.c0 THEN vt0.c1 END) RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT UPPER(vt0.c1)) FULL OUTER JOIN vt0 ON TYPEOF(TRIM(DISTINCT rt0.c0, vt1.c2)) ORDER BY (+ ((((rt0.c2))!=((vt0.c1))))), (- (0.18737230194510812))  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN t0 ON rtreenode((~ (rt0.c3)), CASE ''  WHEN rt0.c0 THEN vt0.c1 END) RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT UPPER(vt0.c1)) FULL OUTER JOIN vt0 ON TYPEOF(TRIM(DISTINCT rt0.c0, vt1.c2)) WHERE (((((vt0.c1) NOT NULL))<>(((((((((vt0.c1)AND(rt0.c3)))OR(vt1.c2)))OR(vt1.c2)))OR(vt0.c1))))) ORDER BY (+ ((((rt0.c2))<>((vt0.c1))))), (- (0.18737230194510812))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<>(((((((((vt0.c1)AND(rt0.c3)))OR(vt1.c2)))OR(vt1.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON rtreenode((~ (rt0.c3)), CASE ''  WHEN rt0.c0 THEN vt0.c1 END) RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT UPPER(vt0.c1)) FULL OUTER JOIN vt0 ON TYPEOF(TRIM(DISTINCT rt0.c0, vt1.c2)) ORDER BY (+ ((((rt0.c2))!=((vt0.c1))))), (- (0.18737230194510812))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((~ (vt1.c1)) IN ())) ORDER BY ((((((NULL, 0Xffffffff9e09f47f, vt1.c1))!=((vt1.c0, rt0.c2, vt1.c0)))))=(((((rt0.c3))<((NULL)))))) DESC, ((((rt0.c1)/(t0.c76)))<=(rt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c1)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((((NULL, 0Xffffffff9e09f47f, vt1.c1))!=((vt1.c0, rt0.c2, vt1.c0)))))==(((((rt0.c3))<((NULL)))))) DESC, ((((rt0.c1)/(t0.c76)))<=(rt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((~ (vt1.c1)) IN ())) ORDER BY ((((((NULL, 0Xffffffff9e09f47f, vt1.c1))!=((vt1.c0, rt0.c2, vt1.c0)))))=(((((rt0.c3))<((NULL)))))) DESC, ((((rt0.c1)/(t0.c76)))<=(rt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c1)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((((NULL, 0Xffffffff9e09f47f, vt1.c1))!=((vt1.c0, rt0.c2, vt1.c0)))))==(((((rt0.c3))<((NULL)))))) DESC, ((((rt0.c1)/(t0.c76)))<=(rt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((~ (vt1.c1)) IN ())) ORDER BY ((((((NULL, 0Xffffffff9e09f47f, vt1.c1))!=((vt1.c0, rt0.c2, vt1.c0)))))=(((((rt0.c3))<((NULL)))))) DESC, ((((rt0.c1)/(t0.c76)))<=(rt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 INNER JOIN t0 ON ((((vt1.c2)AND(rt0.c0))) IS FALSE) WHERE ((((vt1.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c3)))) IS TRUE)  as count FROM vt1, rt0, vt0 INNER JOIN t0 ON ((((vt1.c2)AND(rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, rt0, vt0 INNER JOIN t0 ON ((((vt1.c2)AND(rt0.c0))) IS FALSE) WHERE ((((vt1.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c3)))) IS TRUE)  as count FROM vt1, rt0, vt0 INNER JOIN t0 ON ((((vt1.c2)AND(rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, rt0, vt0 INNER JOIN t0 ON ((((vt1.c2)AND(rt0.c0))) IS FALSE) WHERE ((((vt1.c1)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c3))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) ISNULL))GLOB(CAST(vt1.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))GLOB(CAST(vt1.c2 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) ISNULL))GLOB(CAST(vt1.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))GLOB(CAST(vt1.c2 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) ISNULL))GLOB(CAST(vt1.c2 AS REAL))));
SELECT ALL * FROM rt0, vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(t0.c76 COLLATE NOCASE, 0.006578908787085558) WHERE (((((vt1.c1)AND(NULL))) BETWEEN (rt0.c0) AND (vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(NULL))) BETWEEN (rt0.c0) AND (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(t0.c76 COLLATE NOCASE, 0.006578908787085558));
SELECT ALL * FROM rt0, vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(t0.c76 COLLATE NOCASE, 0.006578908787085558) WHERE (((((vt1.c1)AND(NULL))) BETWEEN (rt0.c0) AND (vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(NULL))) BETWEEN (rt0.c0) AND (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(t0.c76 COLLATE NOCASE, 0.006578908787085558));
SELECT ALL * FROM rt0, vt1, t0 RIGHT OUTER JOIN vt0 ON LIKELIHOOD(t0.c76 COLLATE NOCASE, 0.006578908787085558) WHERE (((((vt1.c1)AND(NULL))) BETWEEN (rt0.c0) AND (vt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c3 COLLATE BINARY)||(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)||(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c3 COLLATE BINARY)||(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)||(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((rt0.c3 COLLATE BINARY)||(rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c1) ISNULL) THEN ((((vt1.c0)OR('q')))AND(vt0.c1)) ELSE IFNULL(vt1.c2, rt0.c3) END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1 NOT INDEXED ORDER BY CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c1) ISNULL) THEN ((((vt1.c0)OR('q')))AND(vt0.c1)) ELSE IFNULL(vt1.c2, rt0.c3) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c1) ISNULL) THEN ((((vt1.c0)OR('q')))AND(vt0.c1)) ELSE IFNULL(vt1.c2, rt0.c3) END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1 NOT INDEXED ORDER BY CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c1) ISNULL) THEN ((((vt1.c0)OR('q')))AND(vt0.c1)) ELSE IFNULL(vt1.c2, rt0.c3) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN ((rt0.c1) ISNULL) THEN ((((vt1.c0)OR('q')))AND(vt0.c1)) ELSE IFNULL(vt1.c2, rt0.c3) END ASC;
SELECT ALL * FROM rt0 WHERE ((((NOT ('2102048046'))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('2102048046'))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT ('2102048046'))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('2102048046'))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT ('2102048046'))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (NULL)));
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((vt0.c1)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((vt0.c1)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((vt0.c1)<=(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1, t0 INDEXED BY i94 WHERE (((CAST(vt1.c1 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt1, t0 INDEXED BY i94);
SELECT COUNT(*) FROM vt1, t0 INDEXED BY i94 WHERE (((CAST(vt1.c1 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt1, t0 INDEXED BY i94);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (CAST((('911975488')<(vt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('911975488')<(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (CAST((('911975488')<(vt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('911975488')<(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (CAST((('911975488')<(vt1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((((' G-uN+')<(vt1.c0)), (- (vt0.c0)), ABS(vt0.c2)))>=((((vt0.c2)OR(rt0.c1)), ((vt0.c1)<<(rt0.c3)), CAST(NULL AS BLOB)))) LEFT OUTER JOIN rt0 ON (~ (TRIM(vt0.c1))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((((' G-uN+')<(vt1.c0)), (- (vt0.c0)), ABS(vt0.c2)))>=((((vt0.c2)OR(rt0.c1)), ((vt0.c1)<<(rt0.c3)), CAST(NULL AS BLOB)))) LEFT OUTER JOIN rt0 ON (~ (TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((((' G-uN+')<(vt1.c0)), (- (vt0.c0)), ABS(vt0.c2)))>=((((vt0.c2)OR(rt0.c1)), ((vt0.c1)<<(rt0.c3)), CAST(NULL AS BLOB)))) LEFT OUTER JOIN rt0 ON (~ (TRIM(vt0.c1))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON (((((' G-uN+')<(vt1.c0)), (- (vt0.c0)), ABS(vt0.c2)))>=((((vt0.c2)OR(rt0.c1)), ((vt0.c1)<<(rt0.c3)), CAST(NULL AS BLOB)))) LEFT OUTER JOIN rt0 ON (~ (TRIM(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((((((((vt0.c1))>((rt0.c0))))AND(rt0.c3)))AND(MIN(t0.c76, rt0.c0, vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1))>((rt0.c0))))AND(rt0.c3)))AND(MIN(t0.c76, rt0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((((((((vt0.c1))>((rt0.c0))))AND(rt0.c3)))AND(MIN(t0.c76, rt0.c0, vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1))>((rt0.c0))))AND(rt0.c3)))AND(MIN(t0.c76, rt0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE ((((((((vt0.c1))>((rt0.c0))))AND(rt0.c3)))AND(MIN(t0.c76, rt0.c0, vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM t0 WHERE (((((x'')AND((NOT (t0.c76)))))OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND((NOT (t0.c76)))))OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((x'')AND((NOT (t0.c76)))))OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND((NOT (t0.c76)))))OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((x'')AND((NOT (t0.c76)))))OR(((t0.c76) BETWEEN (t0.c76) AND (t0.c76))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)) AS BLOB)) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)) AS BLOB)) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)) AS BLOB)) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((((((((rt0.c3 IN ()))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))OR(rt0.c0)))OR((((t0.c76, vt1.c1, vt1.c1, vt0.c1, vt0.c1))>((rt0.c0, vt0.c1, rt0.c0, vt1.c1, vt0.c1))))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))AND(vt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))OR(rt0.c0)))OR((((t0.c76, vt1.c1, vt1.c1, vt0.c1, vt0.c1))>((rt0.c0, vt0.c1, rt0.c0, vt1.c1, vt0.c1))))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))AND(vt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((((((((rt0.c3 IN ()))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))OR(rt0.c0)))OR((((t0.c76, vt1.c1, vt1.c1, vt0.c1, vt0.c1))>((rt0.c0, vt0.c1, rt0.c0, vt1.c1, vt0.c1))))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))AND(vt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN ()))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))OR(rt0.c0)))OR((((t0.c76, vt1.c1, vt1.c1, vt0.c1, vt0.c1))>((rt0.c0, vt0.c1, rt0.c0, vt1.c1, vt0.c1))))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))AND(vt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((((((((rt0.c3 IN ()))AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))OR(rt0.c0)))OR((((t0.c76, vt1.c1, vt1.c1, vt0.c1, vt0.c1))>((rt0.c0, vt0.c1, rt0.c0, vt1.c1, vt0.c1))))))OR(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))AND(vt0.c2)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END AS BLOB)) ORDER BY CAST(((vt1.c0)>>(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(((vt1.c0)>>(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END AS BLOB)) ORDER BY CAST(((vt1.c0)>>(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(((vt1.c0)>>(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END AS BLOB)) ORDER BY CAST(((vt1.c0)>>(vt0.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((COALESCE(NULL, vt0.c0))AND(((vt0.c0)IS NOT(rt0.c1)))))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(NULL, vt0.c0))AND(((vt0.c0)IS NOT(rt0.c1)))))AND(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((COALESCE(NULL, vt0.c0))AND(((vt0.c0)IS NOT(rt0.c1)))))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(NULL, vt0.c0))AND(((vt0.c0)IS NOT(rt0.c1)))))AND(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((COALESCE(NULL, vt0.c0))AND(((vt0.c0)IS NOT(rt0.c1)))))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0, vt1 INDEXED BY i94, vt0, rt0 WHERE (((rt0.c1) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i94, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt1 INDEXED BY i94, vt0, rt0 WHERE (((rt0.c1) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((vt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM t0, vt1 INDEXED BY i94, vt0, rt0);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((+ (vt0.c0)))OR(((vt0.c0)>>(rt0.c3)))))AND(((vt0.c1)&(vt0.c0)))) FULL OUTER JOIN vt0 ON ((CAST(t0.c76 AS INTEGER))=(((t0.c76)-(vt0.c1)))) WHERE (CAST(((rt0.c2)||(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)||(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((+ (vt0.c0)))OR(((vt0.c0)>>(rt0.c3)))))AND(((vt0.c1)&(vt0.c0)))) FULL OUTER JOIN vt0 ON ((CAST(t0.c76 AS INTEGER))=(((t0.c76)-(vt0.c1)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((((+ (vt0.c0)))OR(((vt0.c0)>>(rt0.c3)))))AND(((vt0.c1)&(vt0.c0)))) FULL OUTER JOIN vt0 ON ((CAST(t0.c76 AS INTEGER))=(((t0.c76)-(vt0.c1)))) WHERE (CAST(((rt0.c2)||(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)||(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((+ (vt0.c0)))OR(((vt0.c0)>>(rt0.c3)))))AND(((vt0.c1)&(vt0.c0)))) FULL OUTER JOIN vt0 ON ((CAST(t0.c76 AS INTEGER))=(((t0.c76)-(vt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (vt1.c0) ORDER BY ((vt1.c1)+(((t0.c76) BETWEEN (vt1.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((vt1.c1)+(((t0.c76) BETWEEN (vt1.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (vt1.c0) ORDER BY ((vt1.c1)+(((t0.c76) BETWEEN (vt1.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((vt1.c1)+(((t0.c76) BETWEEN (vt1.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (vt1.c0) ORDER BY ((vt1.c1)+(((t0.c76) BETWEEN (vt1.c1) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c2)))AND(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c3)<>(rt0.c1))))) ORDER BY ((((('-373116921') BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c0)<>(rt0.c2)), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2))))<((0.6603172470929205, (rt0.c3 IN ()), ((rt0.c3)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)|(rt0.c2)))AND(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c3)!=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('-373116921') BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c0)<>(rt0.c2)), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2))))<((0.6603172470929205, (rt0.c3 IN ()), ((rt0.c3)==(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c2)))AND(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c3)<>(rt0.c1))))) ORDER BY ((((('-373116921') BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c0)<>(rt0.c2)), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2))))<((0.6603172470929205, (rt0.c3 IN ()), ((rt0.c3)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)|(rt0.c2)))AND(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c3)!=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('-373116921') BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c0)<>(rt0.c2)), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2))))<((0.6603172470929205, (rt0.c3 IN ()), ((rt0.c3)==(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)|(rt0.c2)))AND(((rt0.c1)OR(rt0.c1)))))OR(((rt0.c3)<>(rt0.c1))))) ORDER BY ((((('-373116921') BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c0)<>(rt0.c2)), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c2))))<((0.6603172470929205, (rt0.c3 IN ()), ((rt0.c3)=(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((vt1.c1)+(t0.c76)))>=(NULL)) FULL OUTER JOIN vt0 ON (((((((((((t0.c76)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))OR((vt0.c2 IN (t0.c76)))))AND((((vt1.c1))>((vt0.c2))))))OR('砬')))AND('0.23132384045955257')) WHERE (((((NULL) IS TRUE)) BETWEEN (CASE WHEN '0.45608912029880033' THEN vt0.c1 ELSE vt1.c1 END) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) BETWEEN (CASE WHEN '0.45608912029880033' THEN vt0.c1 ELSE vt1.c1 END) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((vt1.c1)+(t0.c76)))>=(NULL)) FULL OUTER JOIN vt0 ON (((((((((((t0.c76)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))OR((vt0.c2 IN (t0.c76)))))AND((((vt1.c1))>((vt0.c2))))))OR('砬')))AND('0.23132384045955257')));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((vt1.c1)+(t0.c76)))>=(NULL)) FULL OUTER JOIN vt0 ON (((((((((((t0.c76)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))OR((vt0.c2 IN (t0.c76)))))AND((((vt1.c1))>((vt0.c2))))))OR('砬')))AND('0.23132384045955257')) WHERE (((((NULL) IS TRUE)) BETWEEN (CASE WHEN '0.45608912029880033' THEN vt0.c1 ELSE vt1.c1 END) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) BETWEEN (CASE WHEN '0.45608912029880033' THEN vt0.c1 ELSE vt1.c1 END) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((((vt1.c1)+(t0.c76)))>=(NULL)) FULL OUTER JOIN vt0 ON (((((((((((t0.c76)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))OR((vt0.c2 IN (t0.c76)))))AND((((vt1.c1))>((vt0.c2))))))OR('砬')))AND('0.23132384045955257')));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((((vt1.c1)+(t0.c76)))>=(NULL)) FULL OUTER JOIN vt0 ON (((((((((((t0.c76)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))OR((vt0.c2 IN (t0.c76)))))AND((((vt1.c1))>((vt0.c2))))))OR('砬')))AND('0.23132384045955257')) WHERE (((((NULL) IS TRUE)) BETWEEN (CASE WHEN '0.45608912029880033' THEN vt0.c1 ELSE vt1.c1 END) AND (((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((t0.c76) NOT BETWEEN (rt0.c3) AND (vt0.c1)), (- (vt0.c0)), ((rt0.c2)AND(t0.c76)))) AND ((HEX(0X3f84fbec), CAST(rt0.c3 AS NUMERIC), TRIM(rt0.c1, vt1.c1)))) CROSS JOIN vt1 ON ((rt0.c3 COLLATE BINARY) BETWEEN (rt0.c2) AND ((NOT (rt0.c1)))) WHERE (CASE WHEN (('258274060')>=(rt0.c0)) THEN CAST(rt0.c3 AS REAL) END) ORDER BY (((rt0.c0 IN ())) IS FALSE), ((((rt0.c2)OR(vt1.c0)))OR(0.409038819460392)) COLLATE RTRIM DESC  NULLS FIRST, (((((rt0.c0, vt0.c2, vt1.c0))<=((rt0.c3, vt0.c2, vt0.c1)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ('2093484354'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('258274060')>=(rt0.c0)) THEN CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((t0.c76) NOT BETWEEN (rt0.c3) AND (vt0.c1)), (- (vt0.c0)), ((rt0.c2)AND(t0.c76)))) AND ((HEX(0x3f84fbec), CAST(rt0.c3 AS NUMERIC), TRIM(rt0.c1, vt1.c1)))) CROSS JOIN vt1 ON ((rt0.c3 COLLATE BINARY) BETWEEN (rt0.c2) AND ((NOT (rt0.c1)))) ORDER BY (((rt0.c0 IN ())) IS FALSE), ((((rt0.c2)OR(vt1.c0)))OR(0.409038819460392)) COLLATE RTRIM DESC  NULLS FIRST, (((((rt0.c0, vt0.c2, vt1.c0))<=((rt0.c3, vt0.c2, vt0.c1)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ('2093484354'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((t0.c76) NOT BETWEEN (rt0.c3) AND (vt0.c1)), (- (vt0.c0)), ((rt0.c2)AND(t0.c76)))) AND ((HEX(0X3f84fbec), CAST(rt0.c3 AS NUMERIC), TRIM(rt0.c1, vt1.c1)))) CROSS JOIN vt1 ON ((rt0.c3 COLLATE BINARY) BETWEEN (rt0.c2) AND ((NOT (rt0.c1)))) WHERE (CASE WHEN (('258274060')>=(rt0.c0)) THEN CAST(rt0.c3 AS REAL) END) ORDER BY (((rt0.c0 IN ())) IS FALSE), ((((rt0.c2)OR(vt1.c0)))OR(0.409038819460392)) COLLATE RTRIM DESC  NULLS FIRST, (((((rt0.c0, vt0.c2, vt1.c0))<=((rt0.c3, vt0.c2, vt0.c1)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ('2093484354'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('258274060')>=(rt0.c0)) THEN CAST(rt0.c3 AS REAL) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((((t0.c76) NOT BETWEEN (rt0.c3) AND (vt0.c1)), (- (vt0.c0)), ((rt0.c2)AND(t0.c76)))) AND ((HEX(0x3f84fbec), CAST(rt0.c3 AS NUMERIC), TRIM(rt0.c1, vt1.c1)))) CROSS JOIN vt1 ON ((rt0.c3 COLLATE BINARY) BETWEEN (rt0.c2) AND ((NOT (rt0.c1)))) ORDER BY (((rt0.c0 IN ())) IS FALSE), ((((rt0.c2)OR(vt1.c0)))OR(0.409038819460392)) COLLATE RTRIM DESC  NULLS FIRST, (((((rt0.c0, vt0.c2, vt1.c0))<=((rt0.c3, vt0.c2, vt0.c1)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ('2093484354'))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (t0.c76 COLLATE NOCASE) ORDER BY CASE WHEN (t0.c76 IN ()) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (vt1.c0)) WHEN ((((((((0.9330992170132035)AND(rt0.c0)))OR('-1174927699')))AND(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (vt1.c2) AND (rt0.c2)) WHEN (- (rt0.c2)) THEN (- (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c76 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN (t0.c76 IN ()) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (vt1.c0)) WHEN ((((((((0.9330992170132035)AND(rt0.c0)))OR('-1174927699')))AND(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (vt1.c2) AND (rt0.c2)) WHEN (- (rt0.c2)) THEN (- (rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (t0.c76 COLLATE NOCASE) ORDER BY CASE WHEN (t0.c76 IN ()) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (vt1.c0)) WHEN ((((((((0.9330992170132035)AND(rt0.c0)))OR('-1174927699')))AND(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (vt1.c2) AND (rt0.c2)) WHEN (- (rt0.c2)) THEN (- (rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c76 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN (t0.c76 IN ()) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (vt1.c0)) WHEN ((((((((0.9330992170132035)AND(rt0.c0)))OR('-1174927699')))AND(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (vt1.c2) AND (rt0.c2)) WHEN (- (rt0.c2)) THEN (- (rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0 WHERE (t0.c76 COLLATE NOCASE) ORDER BY CASE WHEN (t0.c76 IN ()) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (vt1.c0)) WHEN ((((((((0.9330992170132035)AND(rt0.c0)))OR('-1174927699')))AND(rt0.c0)))AND(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (vt1.c2) AND (rt0.c2)) WHEN (- (rt0.c2)) THEN (- (rt0.c2)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (~ ('*K' COLLATE NOCASE)) CROSS JOIN vt0 ON (~ (CASE vt0.c0  WHEN t0.c76 THEN vt0.c0 WHEN 0xffffffffd890d550 THEN '-2018559015' WHEN rt0.c0 THEN t0.c76 ELSE rt0.c2 END)) WHERE (CAST(((rt0.c1)|('}(YAAY6')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)|('}(YAAY6')) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (~ ('*K' COLLATE NOCASE)) CROSS JOIN vt0 ON (~ (CASE vt0.c0  WHEN t0.c76 THEN vt0.c0 WHEN 0xffffffffd890d550 THEN '-2018559015' WHEN rt0.c0 THEN t0.c76 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (~ ('*K' COLLATE NOCASE)) CROSS JOIN vt0 ON (~ (CASE vt0.c0  WHEN t0.c76 THEN vt0.c0 WHEN 0xffffffffd890d550 THEN '-2018559015' WHEN rt0.c0 THEN t0.c76 ELSE rt0.c2 END)) WHERE (CAST(((rt0.c1)|('}(YAAY6')) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)|('}(YAAY6')) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (~ ('*K' COLLATE NOCASE)) CROSS JOIN vt0 ON (~ (CASE vt0.c0  WHEN t0.c76 THEN vt0.c0 WHEN 0xffffffffd890d550 THEN '-2018559015' WHEN rt0.c0 THEN t0.c76 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (~ ('*K' COLLATE NOCASE)) CROSS JOIN vt0 ON (~ (CASE vt0.c0  WHEN t0.c76 THEN vt0.c0 WHEN 0xffffffffd890d550 THEN '-2018559015' WHEN rt0.c0 THEN t0.c76 ELSE rt0.c2 END)) WHERE (CAST(((rt0.c1)|('}(YAAY6')) AS REAL));
SELECT * FROM vt1, vt0, rt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c2 AS REAL) AS NUMERIC)) ORDER BY ((vt0.c0 IN (vt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c2)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c2 AS REAL) AS NUMERIC)) ORDER BY ((vt0.c0 IN (vt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c2 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c2)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c2 AS REAL) AS NUMERIC)) ORDER BY ((vt0.c0 IN (vt0.c2)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c76 COLLATE NOCASE WHERE (((((t0.c76)IS('1428230323')))<(((t0.c76) NOTNULL)))) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (COALESCE(DISTINCT vt0.c0, t0.c76, vt0.c0, vt0.c0)) AND (vt0.c1)), LENGTH(ABS(t0.c76)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c76)IS('1428230323')))<(((t0.c76) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c76 COLLATE NOCASE ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (COALESCE(DISTINCT vt0.c0, t0.c76, vt0.c0, vt0.c0)) AND (vt0.c1)), LENGTH(ABS(t0.c76)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c76 COLLATE NOCASE WHERE (((((t0.c76)IS('1428230323')))<(((t0.c76) NOTNULL)))) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (COALESCE(DISTINCT vt0.c0, t0.c76, vt0.c0, vt0.c0)) AND (vt0.c1)), LENGTH(ABS(t0.c76)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c76)IS('1428230323')))<(((t0.c76) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c76 COLLATE NOCASE ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (COALESCE(DISTINCT vt0.c0, t0.c76, vt0.c0, vt0.c0)) AND (vt0.c1)), LENGTH(ABS(t0.c76)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c76 COLLATE NOCASE WHERE (((((t0.c76)IS('1428230323')))<(((t0.c76) NOTNULL)))) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (COALESCE(DISTINCT vt0.c0, t0.c76, vt0.c0, vt0.c0)) AND (vt0.c1)), LENGTH(ABS(t0.c76)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((x'4e68')/(vt0.c0)))+(0X5b59f297))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.6804885627057998) ASC, ((CAST(vt0.c0 AS BLOB))IS((((((((('')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'4e68')/(vt0.c0)))+(0x5b59f297))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.6804885627057998) ASC, ((CAST(vt0.c0 AS BLOB))IS((((((((('')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'4e68')/(vt0.c0)))+(0X5b59f297))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.6804885627057998) ASC, ((CAST(vt0.c0 AS BLOB))IS((((((((('')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'4e68')/(vt0.c0)))+(0x5b59f297))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.6804885627057998) ASC, ((CAST(vt0.c0 AS BLOB))IS((((((((('')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'4e68')/(vt0.c0)))+(0X5b59f297))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.6804885627057998) ASC, ((CAST(vt0.c0 AS BLOB))IS((((((((('')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS TEXT) AS BLOB));
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((vt1.c2)<=(vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(vt1.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((vt1.c2)<=(vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(vt1.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((vt1.c2)<=(vt1.c2))) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c2 AS BLOB)) AND (vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c2 AS BLOB)) AND (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c2 AS BLOB)) AND (vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c2 AS BLOB)) AND (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c2 AS BLOB)) AND (vt0.c2)));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (t0.c76) AND (rt0.c0)) IN (((rt0.c2)|(vt0.c1)), ((rt0.c1)<<(vt1.c2)))) WHERE (((((rt0.c3)AND(t0.c76))) IS FALSE)) ORDER BY (((t0.c76)) NOT BETWEEN (((((vt0.c0, vt0.c1, rt0.c3))>((vt0.c2, vt0.c0, vt1.c1))))) AND ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(t0.c76))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (t0.c76) AND (rt0.c0)) IN (((rt0.c2)|(vt0.c1)), ((rt0.c1)<<(vt1.c2)))) ORDER BY (((t0.c76)) NOT BETWEEN (((((vt0.c0, vt0.c1, rt0.c3))>((vt0.c2, vt0.c0, vt1.c1))))) AND ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (t0.c76) AND (rt0.c0)) IN (((rt0.c2)|(vt0.c1)), ((rt0.c1)<<(vt1.c2)))) WHERE (((((rt0.c3)AND(t0.c76))) IS FALSE)) ORDER BY (((t0.c76)) NOT BETWEEN (((((vt0.c0, vt0.c1, rt0.c3))>((vt0.c2, vt0.c0, vt1.c1))))) AND ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(t0.c76))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (t0.c76) AND (rt0.c0)) IN (((rt0.c2)|(vt0.c1)), ((rt0.c1)<<(vt1.c2)))) ORDER BY (((t0.c76)) NOT BETWEEN (((((vt0.c0, vt0.c1, rt0.c3))>((vt0.c2, vt0.c0, vt1.c1))))) AND ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 FULL OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (t0.c76) AND (rt0.c0)) IN (((rt0.c2)|(vt0.c1)), ((rt0.c1)<<(vt1.c2)))) WHERE (((((rt0.c3)AND(t0.c76))) IS FALSE)) ORDER BY (((t0.c76)) NOT BETWEEN (((((vt0.c0, vt0.c1, rt0.c3))>((vt0.c2, vt0.c0, vt1.c1))))) AND ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c1))))) DESC;
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c2)*(vt1.c0)))<<(((vt1.c0)>(rt0.c0)))) WHERE ((((vt0.c0)) BETWEEN (((((vt1.c1))==((rt0.c1))))) AND ((((((vt1.c2)OR(vt0.c0)))AND(''))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt1.c1))=((rt0.c1))))) AND ((((((vt1.c2)OR(vt0.c0)))AND('')))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c2)*(vt1.c0)))<<(((vt1.c0)>(rt0.c0)))));
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c2)*(vt1.c0)))<<(((vt1.c0)>(rt0.c0)))) WHERE ((((vt0.c0)) BETWEEN (((((vt1.c1))==((rt0.c1))))) AND ((((((vt1.c2)OR(vt0.c0)))AND(''))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt1.c1))=((rt0.c1))))) AND ((((((vt1.c2)OR(vt0.c0)))AND('')))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c2)*(vt1.c0)))<<(((vt1.c0)>(rt0.c0)))));
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((((vt0.c2)*(vt1.c0)))<<(((vt1.c0)>(rt0.c0)))) WHERE ((((vt0.c0)) BETWEEN (((((vt1.c1))==((rt0.c1))))) AND ((((((vt1.c2)OR(vt0.c0)))AND(''))))));
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)&(vt1.c1))))) ORDER BY (('288079634')<((~ (vt1.c1)))) DESC  NULLS LAST, ((vt1.c2 COLLATE BINARY)AND(vt1.c0)) DESC, ((((((((CASE WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)AND((- (vt1.c0)))))OR(MAX(0.4073943608773777, 0.25383864178505844))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)&(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (('288079634')<((~ (vt1.c1)))) DESC  NULLS LAST, ((vt1.c2 COLLATE BINARY)AND(vt1.c0)) DESC, ((((((((CASE WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)AND((- (vt1.c0)))))OR(MAX(0.4073943608773777, 0.25383864178505844))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)&(vt1.c1))))) ORDER BY (('288079634')<((~ (vt1.c1)))) DESC  NULLS LAST, ((vt1.c2 COLLATE BINARY)AND(vt1.c0)) DESC, ((((((((CASE WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)AND((- (vt1.c0)))))OR(MAX(0.4073943608773777, 0.25383864178505844))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)&(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (('288079634')<((~ (vt1.c1)))) DESC  NULLS LAST, ((vt1.c2 COLLATE BINARY)AND(vt1.c0)) DESC, ((((((((CASE WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)AND((- (vt1.c0)))))OR(MAX(0.4073943608773777, 0.25383864178505844))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)&(vt1.c1))))) ORDER BY (('288079634')<((~ (vt1.c1)))) DESC  NULLS LAST, ((vt1.c2 COLLATE BINARY)AND(vt1.c0)) DESC, ((((((((CASE WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)AND((- (vt1.c0)))))OR(MAX(0.4073943608773777, 0.25383864178505844))))AND(CAST(vt1.c0 AS REAL))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END IN ())) ORDER BY vt0.c2  NULLS LAST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS LAST, vt0.c1 ASC);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END IN ())) ORDER BY vt0.c2  NULLS LAST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS LAST, vt0.c1 ASC);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END IN ())) ORDER BY vt0.c2  NULLS LAST, vt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN (vt0.c2)))IS NOT(((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c2)))IS NOT(((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN (vt0.c2)))IS NOT(((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c2)))IS NOT(((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN (vt0.c2)))IS NOT(((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE ((PRINTF(vt0.c2) IN (((0.8470297259428321)<<(vt1.c2)), vt0.c0 COLLATE BINARY))) ORDER BY TYPEOF(((((vt1.c1)OR('911975488')))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((PRINTF(vt0.c2) IN (((0.8470297259428321)<<(vt1.c2)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(((((vt1.c1)OR('911975488')))AND(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((PRINTF(vt0.c2) IN (((0.8470297259428321)<<(vt1.c2)), vt0.c0 COLLATE BINARY))) ORDER BY TYPEOF(((((vt1.c1)OR('911975488')))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((PRINTF(vt0.c2) IN (((0.8470297259428321)<<(vt1.c2)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(((((vt1.c1)OR('911975488')))AND(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((PRINTF(vt0.c2) IN (((0.8470297259428321)<<(vt1.c2)), vt0.c0 COLLATE BINARY))) ORDER BY TYPEOF(((((vt1.c1)OR('911975488')))AND(vt1.c0)))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((('L]i/')||(vt0.c2))) IS FALSE)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((('L]i/')||(vt0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0 WHERE ((((('L]i/')||(vt0.c2))) IS FALSE)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((('L]i/')||(vt0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0 WHERE ((((('L]i/')||(vt0.c2))) IS FALSE)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (LIKELIHOOD(rt0.c1, 0.1440491778626859) COLLATE BINARY) ORDER BY CAST(((((vt1.c1)AND(NULL)))OR(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c1, 0.1440491778626859) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST(((((vt1.c1)AND(NULL)))OR(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (LIKELIHOOD(rt0.c1, 0.1440491778626859) COLLATE BINARY) ORDER BY CAST(((((vt1.c1)AND(NULL)))OR(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt0.c1, 0.1440491778626859) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST(((((vt1.c1)AND(NULL)))OR(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (LIKELIHOOD(rt0.c1, 0.1440491778626859) COLLATE BINARY) ORDER BY CAST(((((vt1.c1)AND(NULL)))OR(vt0.c0)) AS INTEGER);
SELECT * FROM rt0, vt0 WHERE (LIKE(((vt0.c1)+(vt0.c0)), ((vt0.c1)IS(vt0.c0)))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c1)+(vt0.c0)), ((vt0.c1)IS(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END AS REAL));
SELECT * FROM rt0, vt0 WHERE (LIKE(((vt0.c1)+(vt0.c0)), ((vt0.c1)IS(vt0.c0)))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c1)+(vt0.c0)), ((vt0.c1)IS(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END AS REAL));
SELECT * FROM rt0, vt0 WHERE (LIKE(((vt0.c1)+(vt0.c0)), ((vt0.c1)IS(vt0.c0)))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c1 END AS REAL);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY NULL DESC, ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) AND (x'7ddd'));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC, ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) AND (x'7ddd')));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY NULL DESC, ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) AND (x'7ddd'));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC, ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) AND (x'7ddd')));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY NULL DESC, ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT BETWEEN (((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) AND (x'7ddd'));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c0)) AS TEXT));
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((SUBSTR(vt0.c0, vt0.c2) IN ())) ORDER BY (- (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((SUBSTR(vt0.c0, vt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (- (((vt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((SUBSTR(vt0.c0, vt0.c2) IN ())) ORDER BY (- (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((SUBSTR(vt0.c0, vt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (- (((vt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((SUBSTR(vt0.c0, vt0.c2) IN ())) ORDER BY (- (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN ((rt0.c2)>=(vt1.c0)) THEN ((((((((t0.c76)AND(vt0.c1)))AND(t0.c76)))AND(NULL)))OR(rt0.c0)) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)>=(vt1.c0)) THEN ((((((((t0.c76)AND(vt0.c1)))AND(t0.c76)))AND(NULL)))OR(rt0.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN ((rt0.c2)>=(vt1.c0)) THEN ((((((((t0.c76)AND(vt0.c1)))AND(t0.c76)))AND(NULL)))OR(rt0.c0)) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)>=(vt1.c0)) THEN ((((((((t0.c76)AND(vt0.c1)))AND(t0.c76)))AND(NULL)))OR(rt0.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CASE WHEN ((rt0.c2)>=(vt1.c0)) THEN ((((((((t0.c76)AND(vt0.c1)))AND(t0.c76)))AND(NULL)))OR(rt0.c0)) ELSE (vt1.c0 IN ()) END);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt0.c2)>(vt0.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt0.c2)>(vt0.c0)))))AND(x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt0.c2)>(vt0.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt0.c2)>(vt0.c0)))))AND(x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt0.c2)>(vt0.c0)))))AND(x'')));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((~ (''))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))IS(((((((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(0.4145316878994001)))AND(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (''))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))IS(((((((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(0.4145316878994001)))AND(vt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((~ (''))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))IS(((((((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(0.4145316878994001)))AND(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (''))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))IS(((((((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(0.4145316878994001)))AND(vt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((~ (''))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))IS(((((((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(0.4145316878994001)))AND(vt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))LIKE((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c0)))LIKE((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))LIKE((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c0)))LIKE((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))LIKE((- (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON t0.c76 FULL OUTER JOIN vt1 ON ((CASE x''  WHEN 1325976498 THEN rt0.c2 WHEN t0.c76 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c2 END)AND(((t0.c76) NOTNULL))) WHERE (((((rt0.c3) ISNULL)) IS TRUE)) ORDER BY t0.c76;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON t0.c76 FULL OUTER JOIN vt1 ON ((CASE x''  WHEN 1325976498 THEN rt0.c2 WHEN t0.c76 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c2 END)AND(((t0.c76) NOTNULL))) ORDER BY t0.c76);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON t0.c76 FULL OUTER JOIN vt1 ON ((CASE x''  WHEN 1325976498 THEN rt0.c2 WHEN t0.c76 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c2 END)AND(((t0.c76) NOTNULL))) WHERE (((((rt0.c3) ISNULL)) IS TRUE)) ORDER BY t0.c76;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON t0.c76 FULL OUTER JOIN vt1 ON ((CASE x''  WHEN 1325976498 THEN rt0.c2 WHEN t0.c76 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c2 END)AND(((t0.c76) NOTNULL))) ORDER BY t0.c76);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON t0.c76 FULL OUTER JOIN vt1 ON ((CASE x''  WHEN 1325976498 THEN rt0.c2 WHEN t0.c76 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c2 END)AND(((t0.c76) NOTNULL))) WHERE (((((rt0.c3) ISNULL)) IS TRUE)) ORDER BY t0.c76;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((x'' IN ())) ORDER BY (NOT (TYPEOF(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (NOT (TYPEOF(vt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((x'' IN ())) ORDER BY (NOT (TYPEOF(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (NOT (TYPEOF(vt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((x'' IN ())) ORDER BY (NOT (TYPEOF(vt0.c2))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (LOWER(vt0.c0) IN (((vt0.c0)GLOB(vt1.c1)))) WHERE ((((CAST(vt1.c2 AS INTEGER)))>=((TYPEOF(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c2 AS INTEGER)))>=((TYPEOF(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (LOWER(vt0.c0) IN (((vt0.c0)GLOB(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (LOWER(vt0.c0) IN (((vt0.c0)GLOB(vt1.c1)))) WHERE ((((CAST(vt1.c2 AS INTEGER)))>=((TYPEOF(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c2 AS INTEGER)))>=((TYPEOF(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (LOWER(vt0.c0) IN (((vt0.c0)GLOB(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (LOWER(vt0.c0) IN (((vt0.c0)GLOB(vt1.c1)))) WHERE ((((CAST(vt1.c2 AS INTEGER)))>=((TYPEOF(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))==((JULIANDAY(rt0.c2, vt1.c1, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS INTEGER)))==((JULIANDAY(rt0.c2, vt1.c1, vt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))==((JULIANDAY(rt0.c2, vt1.c1, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS INTEGER)))==((JULIANDAY(rt0.c2, vt1.c1, vt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))==((JULIANDAY(rt0.c2, vt1.c1, vt0.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST('>[' AS TEXT) WHERE (LIKELIHOOD(vt0.c2, 0.8919451119239549) COLLATE RTRIM) ORDER BY ((vt0.c1)>=(vt0.c0)) COLLATE NOCASE DESC, ((('288079634')>(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt0.c2, 0.8919451119239549) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST('>[' AS TEXT) ORDER BY ((vt0.c1)>=(vt0.c0)) COLLATE NOCASE DESC, ((('288079634')>(vt0.c1)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST('>[' AS TEXT) WHERE (LIKELIHOOD(vt0.c2, 0.8919451119239549) COLLATE RTRIM) ORDER BY ((vt0.c1)>=(vt0.c0)) COLLATE NOCASE DESC, ((('288079634')>(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt0.c2, 0.8919451119239549) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST('>[' AS TEXT) ORDER BY ((vt0.c1)>=(vt0.c0)) COLLATE NOCASE DESC, ((('288079634')>(vt0.c1)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST('>[' AS TEXT) WHERE (LIKELIHOOD(vt0.c2, 0.8919451119239549) COLLATE RTRIM) ORDER BY ((vt0.c1)>=(vt0.c0)) COLLATE NOCASE DESC, ((('288079634')>(vt0.c1)) IN ());
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((0.8572931979079834)>(rt0.c3))))<((json_array(rt0.c1, rt0.c2)))) RIGHT OUTER JOIN t0 ON ((((((rt0.c2)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c0 THEN t0.c76 ELSE vt1.c0 END)))OR(CAST(rt0.c0 AS BLOB))) WHERE (CAST('-1728530070' AS BLOB)) ORDER BY ((((rt0.c0)AND(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (LIKELY(DISTINCT rt0.c3))) ASC, (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<((- (vt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('-1728530070' AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((0.8572931979079834)>(rt0.c3))))<((json_array(rt0.c1, rt0.c2)))) RIGHT OUTER JOIN t0 ON ((((((rt0.c2)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c0 THEN t0.c76 ELSE vt1.c0 END)))OR(CAST(rt0.c0 AS BLOB))) ORDER BY ((((rt0.c0)AND(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (LIKELY(DISTINCT rt0.c3))) ASC, (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<((- (vt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((0.8572931979079834)>(rt0.c3))))<((json_array(rt0.c1, rt0.c2)))) RIGHT OUTER JOIN t0 ON ((((((rt0.c2)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c0 THEN t0.c76 ELSE vt1.c0 END)))OR(CAST(rt0.c0 AS BLOB))) WHERE (CAST('-1728530070' AS BLOB)) ORDER BY ((((rt0.c0)AND(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (LIKELY(DISTINCT rt0.c3))) ASC, (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<((- (vt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('-1728530070' AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((0.8572931979079834)>(rt0.c3))))<((json_array(rt0.c1, rt0.c2)))) RIGHT OUTER JOIN t0 ON ((((((rt0.c2)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c0 THEN t0.c76 ELSE vt1.c0 END)))OR(CAST(rt0.c0 AS BLOB))) ORDER BY ((((rt0.c0)AND(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (LIKELY(DISTINCT rt0.c3))) ASC, (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<((- (vt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((0.8572931979079834)>(rt0.c3))))<((json_array(rt0.c1, rt0.c2)))) RIGHT OUTER JOIN t0 ON ((((((rt0.c2)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c0 THEN t0.c76 ELSE vt1.c0 END)))OR(CAST(rt0.c0 AS BLOB))) WHERE (CAST('-1728530070' AS BLOB)) ORDER BY ((((rt0.c0)AND(vt1.c0))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (LIKELY(DISTINCT rt0.c3))) ASC, (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))<((- (vt1.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c1)!=(vt1.c1)))<<(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE ((((vt1.c2 IN ()))IS NOT(GLOB(rt0.c1, vt1.c2)))) ORDER BY (CASE rt0.c3  WHEN vt1.c1 THEN vt1.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c2 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))IS NOT(GLOB(rt0.c1, vt1.c2)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c1)!=(vt1.c1)))<<(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) ORDER BY (CASE rt0.c3  WHEN vt1.c1 THEN vt1.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c2 END IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c1)!=(vt1.c1)))<<(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE ((((vt1.c2 IN ()))IS NOT(GLOB(rt0.c1, vt1.c2)))) ORDER BY (CASE rt0.c3  WHEN vt1.c1 THEN vt1.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c2 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))IS NOT(GLOB(rt0.c1, vt1.c2)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c1)!=(vt1.c1)))<<(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) ORDER BY (CASE rt0.c3  WHEN vt1.c1 THEN vt1.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c2 END IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c1)!=(vt1.c1)))<<(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE ((((vt1.c2 IN ()))IS NOT(GLOB(rt0.c1, vt1.c2)))) ORDER BY (CASE rt0.c3  WHEN vt1.c1 THEN vt1.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c2 END IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((0.14834882074747546 IN ()))) LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.5638571031859844 AS REAL) THEN ((vt0.c0)<(rt0.c2)) WHEN (((t0.c76))<>((rt0.c2))) THEN (((vt0.c2))<((vt0.c2))) WHEN ((rt0.c1)IS(-1.201514956E9)) THEN vt0.c0 END WHERE (CAST(rt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((0.14834882074747546 IN ()))) LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.5638571031859844 AS REAL) THEN ((vt0.c0)<(rt0.c2)) WHEN (((t0.c76))!=((rt0.c2))) THEN (((vt0.c2))<((vt0.c2))) WHEN ((rt0.c1)IS(-1.201514956E9)) THEN vt0.c0 END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((0.14834882074747546 IN ()))) LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.5638571031859844 AS REAL) THEN ((vt0.c0)<(rt0.c2)) WHEN (((t0.c76))<>((rt0.c2))) THEN (((vt0.c2))<((vt0.c2))) WHEN ((rt0.c1)IS(-1.201514956E9)) THEN vt0.c0 END WHERE (CAST(rt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((0.14834882074747546 IN ()))) LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.5638571031859844 AS REAL) THEN ((vt0.c0)<(rt0.c2)) WHEN (((t0.c76))!=((rt0.c2))) THEN (((vt0.c2))<((vt0.c2))) WHEN ((rt0.c1)IS(-1.201514956E9)) THEN vt0.c0 END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((0.14834882074747546 IN ()))) LEFT OUTER JOIN rt0 ON CASE WHEN CAST(0.5638571031859844 AS REAL) THEN ((vt0.c0)<(rt0.c2)) WHEN (((t0.c76))<>((rt0.c2))) THEN (((vt0.c2))<((vt0.c2))) WHEN ((rt0.c1)IS(-1.201514956E9)) THEN vt0.c0 END WHERE (CAST(rt0.c0 COLLATE RTRIM AS BLOB));
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i94 LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c76 AS NUMERIC) AS BLOB) WHERE (((((rt0.c1) ISNULL)) ISNULL)) ORDER BY ((((((((((rt0.c1)/(vt0.c1)))OR((- (rt0.c0)))))AND(((vt0.c2) NOT NULL))))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))))OR(((((NULL)AND(NULL)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 INDEXED BY i94 LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c76 AS NUMERIC) AS BLOB) ORDER BY ((((((((((rt0.c1)/(vt0.c1)))OR((- (rt0.c0)))))AND(((vt0.c2) NOT NULL))))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))))OR(((((NULL)AND(NULL)))OR(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 INDEXED BY i94 LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c76 AS NUMERIC) AS BLOB) WHERE (((((rt0.c1) ISNULL)) ISNULL)) ORDER BY ((((((((((rt0.c1)/(vt0.c1)))OR((- (rt0.c0)))))AND(((vt0.c2) NOT NULL))))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))))OR(((((NULL)AND(NULL)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 INDEXED BY i94 LEFT OUTER JOIN rt0 ON CAST(CAST(t0.c76 AS NUMERIC) AS BLOB) ORDER BY ((((((((((rt0.c1)/(vt0.c1)))OR((- (rt0.c0)))))AND(((vt0.c2) NOT NULL))))OR((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c3))))))OR(((((NULL)AND(NULL)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((rt0.c2)IS NOT(vt1.c2)) DESC  NULLS FIRST, ((((COALESCE(rt0.c3, vt1.c2))OR(((rt0.c3)IS(x'')))))AND(((vt1.c2) BETWEEN ('0M7\nl,뤌a') AND (rt0.c0)))), LIKELIHOOD('-2018559015' COLLATE BINARY, 0.3481175151256676), (- (((((((((vt1.c1)AND(vt1.c1)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2)IS NOT(vt1.c2)) DESC  NULLS FIRST, ((((COALESCE(rt0.c3, vt1.c2))OR(((rt0.c3)IS(x'')))))AND(((vt1.c2) BETWEEN ('0M7\nl,뤌a') AND (rt0.c0)))), LIKELIHOOD('-2018559015' COLLATE BINARY, 0.3481175151256676), (- (((((((((vt1.c1)AND(vt1.c1)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((rt0.c2)IS NOT(vt1.c2)) DESC  NULLS FIRST, ((((COALESCE(rt0.c3, vt1.c2))OR(((rt0.c3)IS(x'')))))AND(((vt1.c2) BETWEEN ('0M7\nl,뤌a') AND (rt0.c0)))), LIKELIHOOD('-2018559015' COLLATE BINARY, 0.3481175151256676), (- (((((((((vt1.c1)AND(vt1.c1)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2)IS NOT(vt1.c2)) DESC  NULLS FIRST, ((((COALESCE(rt0.c3, vt1.c2))OR(((rt0.c3)IS(x'')))))AND(((vt1.c2) BETWEEN ('0M7\nl,뤌a') AND (rt0.c0)))), LIKELIHOOD('-2018559015' COLLATE BINARY, 0.3481175151256676), (- (((((((((vt1.c1)AND(vt1.c1)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((rt0.c2)IS NOT(vt1.c2)) DESC  NULLS FIRST, ((((COALESCE(rt0.c3, vt1.c2))OR(((rt0.c3)IS(x'')))))AND(((vt1.c2) BETWEEN ('0M7\nl,뤌a') AND (rt0.c0)))), LIKELIHOOD('-2018559015' COLLATE BINARY, 0.3481175151256676), (- (((((((((vt1.c1)AND(vt1.c1)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c76) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY))) ORDER BY 0.6355009717903167 ASC, CASE (((t0.c76, vt0.c0, t0.c76)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 WHEN (- (t0.c76)) THEN ((vt0.c0) IS FALSE) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt0.c2)) THEN '' WHEN ((vt0.c0)/(vt0.c0)) THEN (2093484354 IN (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t0.c76) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.6355009717903167 ASC, CASE (((t0.c76, vt0.c0, t0.c76)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 WHEN (- (t0.c76)) THEN ((vt0.c0) IS FALSE) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt0.c2)) THEN '' WHEN ((vt0.c0)/(vt0.c0)) THEN (2093484354 IN (vt0.c0)) END);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c76) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY))) ORDER BY 0.6355009717903167 ASC, CASE (((t0.c76, vt0.c0, t0.c76)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 WHEN (- (t0.c76)) THEN ((vt0.c0) IS FALSE) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt0.c2)) THEN '' WHEN ((vt0.c0)/(vt0.c0)) THEN (2093484354 IN (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t0.c76) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.6355009717903167 ASC, CASE (((t0.c76, vt0.c0, t0.c76)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 WHEN (- (t0.c76)) THEN ((vt0.c0) IS FALSE) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt0.c2)) THEN '' WHEN ((vt0.c0)/(vt0.c0)) THEN (2093484354 IN (vt0.c0)) END);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1) BETWEEN (t0.c76) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY))) ORDER BY 0.6355009717903167 ASC, CASE (((t0.c76, vt0.c0, t0.c76)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c0)))  WHEN vt0.c0 THEN vt0.c0 WHEN (- (t0.c76)) THEN ((vt0.c0) IS FALSE) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (vt0.c1)) WHEN ((vt0.c0)>>(vt0.c2)) THEN '' WHEN ((vt0.c0)/(vt0.c0)) THEN (2093484354 IN (vt0.c0)) END;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((t0.c76) NOT NULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((vt1.c1)+(CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE vt1.c1 END))) ORDER BY CASE ((((rt0.c2)OR(NULL)))OR(vt1.c2))  WHEN rt0.c0 COLLATE NOCASE THEN vt1.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)+(CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE vt1.c1 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((t0.c76) NOT NULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE ((((rt0.c2)OR(NULL)))OR(vt1.c2))  WHEN rt0.c0 COLLATE NOCASE THEN vt1.c0 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((t0.c76) NOT NULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((vt1.c1)+(CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE vt1.c1 END))) ORDER BY CASE ((((rt0.c2)OR(NULL)))OR(vt1.c2))  WHEN rt0.c0 COLLATE NOCASE THEN vt1.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)+(CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE vt1.c1 END))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((t0.c76) NOT NULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE ((((rt0.c2)OR(NULL)))OR(vt1.c2))  WHEN rt0.c0 COLLATE NOCASE THEN vt1.c0 END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((t0.c76) NOT NULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((vt1.c1)+(CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE vt1.c1 END))) ORDER BY CASE ((((rt0.c2)OR(NULL)))OR(vt1.c2))  WHEN rt0.c0 COLLATE NOCASE THEN vt1.c0 END DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0 NATURAL JOIN rt0 WHERE (vt1.c2) ORDER BY (NOT ((NOT (vt1.c0)))) DESC, (((t0.c76, rt0.c2, 0xffffffffeaa3d777)) NOT BETWEEN ((CASE NULL  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END, CAST(t0.c76 AS REAL), 'Qg')) AND ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)), CASE vt1.c2  WHEN vt1.c2 THEN rt0.c0 ELSE t0.c76 END, vt1.c2 COLLATE RTRIM))), ((rt0.c2 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN rt0 ORDER BY (NOT ((NOT (vt1.c0)))) DESC, (((t0.c76, rt0.c2, 0xffffffffeaa3d777)) NOT BETWEEN ((CASE NULL  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END, CAST(t0.c76 AS REAL), 'Qg')) AND ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)), CASE vt1.c2  WHEN vt1.c2 THEN rt0.c0 ELSE t0.c76 END, vt1.c2 COLLATE RTRIM))), ((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt1, t0 NATURAL JOIN rt0 WHERE (vt1.c2) ORDER BY (NOT ((NOT (vt1.c0)))) DESC, (((t0.c76, rt0.c2, 0xffffffffeaa3d777)) NOT BETWEEN ((CASE NULL  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END, CAST(t0.c76 AS REAL), 'Qg')) AND ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)), CASE vt1.c2  WHEN vt1.c2 THEN rt0.c0 ELSE t0.c76 END, vt1.c2 COLLATE RTRIM))), ((rt0.c2 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN rt0 ORDER BY (NOT ((NOT (vt1.c0)))) DESC, (((t0.c76, rt0.c2, 0xffffffffeaa3d777)) NOT BETWEEN ((CASE NULL  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END, CAST(t0.c76 AS REAL), 'Qg')) AND ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)), CASE vt1.c2  WHEN vt1.c2 THEN rt0.c0 ELSE t0.c76 END, vt1.c2 COLLATE RTRIM))), ((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt1, t0 NATURAL JOIN rt0 WHERE (vt1.c2) ORDER BY (NOT ((NOT (vt1.c0)))) DESC, (((t0.c76, rt0.c2, 0xffffffffeaa3d777)) NOT BETWEEN ((CASE NULL  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c76 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END, CAST(t0.c76 AS REAL), 'Qg')) AND ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)), CASE vt1.c2  WHEN vt1.c2 THEN rt0.c0 ELSE t0.c76 END, vt1.c2 COLLATE RTRIM))), ((rt0.c2 COLLATE RTRIM) IS TRUE);
SELECT * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((NOT (vt0.c2)) IN ())) ORDER BY (+ (((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)))), ((((t0.c76)OR((vt0.c0 IN ()))))AND('?*<}'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY (+ (((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)))), ((((t0.c76)OR((vt0.c0 IN ()))))AND('?*<}'))  NULLS LAST);
SELECT * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((NOT (vt0.c2)) IN ())) ORDER BY (+ (((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)))), ((((t0.c76)OR((vt0.c0 IN ()))))AND('?*<}'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY (+ (((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)))), ((((t0.c76)OR((vt0.c0 IN ()))))AND('?*<}'))  NULLS LAST);
SELECT * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((NOT (vt0.c2)) IN ())) ORDER BY (+ (((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)))), ((((t0.c76)OR((vt0.c0 IN ()))))AND('?*<}'))  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (vt1.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3) NOT BETWEEN (vt1.c2) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (vt1.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3) NOT BETWEEN (vt1.c2) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN (vt1.c2) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS NOT(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3)IS NOT(rt0.c1))) ISNULL));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3)+(rt0.c0))  WHEN json_array(vt1.c1, vt1.c2) THEN ((vt0.c1) IS FALSE) END WHERE (NULLIF((((vt1.c2))!=((vt1.c0))), (+ (vt1.c0)))) ORDER BY '>t㘌	oh斟A^'  NULLS LAST, (((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))*('-1680911009'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((vt1.c2))!=((vt1.c0))), (+ (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3)+(rt0.c0))  WHEN json_array(vt1.c1, vt1.c2) THEN ((vt0.c1) IS FALSE) END ORDER BY '>t㘌	oh斟A^'  NULLS LAST, (((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))*('-1680911009')));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3)+(rt0.c0))  WHEN json_array(vt1.c1, vt1.c2) THEN ((vt0.c1) IS FALSE) END WHERE (NULLIF((((vt1.c2))!=((vt1.c0))), (+ (vt1.c0)))) ORDER BY '>t㘌	oh斟A^'  NULLS LAST, (((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))*('-1680911009'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((vt1.c2))!=((vt1.c0))), (+ (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3)+(rt0.c0))  WHEN json_array(vt1.c1, vt1.c2) THEN ((vt0.c1) IS FALSE) END ORDER BY '>t㘌	oh斟A^'  NULLS LAST, (((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))*('-1680911009')));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3)+(rt0.c0))  WHEN json_array(vt1.c1, vt1.c2) THEN ((vt0.c1) IS FALSE) END WHERE (NULLIF((((vt1.c2))!=((vt1.c0))), (+ (vt1.c0)))) ORDER BY '>t㘌	oh斟A^'  NULLS LAST, (((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))*('-1680911009'));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (vt1.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN CAST(vt1.c2 AS REAL) THEN ((t0.c76)!=(vt1.c0)) WHEN ((vt1.c1)/(vt1.c1)) THEN CAST(t0.c76 AS TEXT) WHEN ((933645927) BETWEEN (vt1.c1) AND ('')) THEN (vt1.c1 IN (vt1.c0, vt1.c1)) END WHERE (vt1.c2) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (vt1.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN CAST(vt1.c2 AS REAL) THEN ((t0.c76)<>(vt1.c0)) WHEN ((vt1.c1)/(vt1.c1)) THEN CAST(t0.c76 AS TEXT) WHEN ((933645927) BETWEEN (vt1.c1) AND ('')) THEN (vt1.c1 IN (vt1.c0, vt1.c1)) END ORDER BY x'');
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (vt1.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN CAST(vt1.c2 AS REAL) THEN ((t0.c76)!=(vt1.c0)) WHEN ((vt1.c1)/(vt1.c1)) THEN CAST(t0.c76 AS TEXT) WHEN ((933645927) BETWEEN (vt1.c1) AND ('')) THEN (vt1.c1 IN (vt1.c0, vt1.c1)) END WHERE (vt1.c2) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((vt0.c2) NOTNULL)) NOT BETWEEN ((~ (vt0.c2))) AND (vt1.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CASE WHEN CAST(vt1.c2 AS REAL) THEN ((t0.c76)<>(vt1.c0)) WHEN ((vt1.c1)/(vt1.c1)) THEN CAST(t0.c76 AS TEXT) WHEN ((933645927) BETWEEN (vt1.c1) AND ('')) THEN (vt1.c1 IN (vt1.c0, vt1.c1)) END ORDER BY x'');
SELECT * FROM rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt0.c3)<=(rt0.c0)))))AND(0.8108302103195042)))OR((rt0.c3 IN (rt0.c3)))))OR(0.19019517398108055)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt0.c3)<=(rt0.c0)))))AND(0.8108302103195042)))OR((rt0.c3 IN (rt0.c3)))))OR(0.19019517398108055))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt0.c3)<=(rt0.c0)))))AND(0.8108302103195042)))OR((rt0.c3 IN (rt0.c3)))))OR(0.19019517398108055)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt0.c3)<=(rt0.c0)))))AND(0.8108302103195042)))OR((rt0.c3 IN (rt0.c3)))))OR(0.19019517398108055))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt0.c3)<=(rt0.c0)))))AND(0.8108302103195042)))OR((rt0.c3 IN (rt0.c3)))))OR(0.19019517398108055)));
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((rt0.c1)>=(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((rt0.c1)>=(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((rt0.c1)>=(rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN vt0.c2 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)))<=(CASE WHEN -6.74983883E8 THEN t0.c76 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 END)) WHERE (CASE WHEN vt1.c1 THEN ((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))AND('2K')))OR(t0.c76)) WHEN COALESCE(rt0.c0, t0.c76) THEN (('ym\Wv')&(vt1.c2)) WHEN ((((((((vt0.c2)AND(vt1.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (t0.c76)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN ((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))AND('2K')))OR(t0.c76)) WHEN COALESCE(rt0.c0, t0.c76) THEN (('ym\Wv')&(vt1.c2)) WHEN ((((((((vt0.c2)AND(vt1.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (t0.c76)) END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN vt0.c2 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)))<=(CASE WHEN -6.74983883E8 THEN t0.c76 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN vt0.c2 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)))<=(CASE WHEN -6.74983883E8 THEN t0.c76 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 END)) WHERE (CASE WHEN vt1.c1 THEN ((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))AND('2K')))OR(t0.c76)) WHEN COALESCE(rt0.c0, t0.c76) THEN (('ym\Wv')&(vt1.c2)) WHEN ((((((((vt0.c2)AND(vt1.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (t0.c76)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN ((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))AND('2K')))OR(t0.c76)) WHEN COALESCE(rt0.c0, t0.c76) THEN (('ym\Wv')&(vt1.c2)) WHEN ((((((((vt0.c2)AND(vt1.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (t0.c76) AND (t0.c76)) END) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN vt0.c2 COLLATE BINARY THEN CAST(vt1.c0 AS TEXT) END RIGHT OUTER JOIN vt0 ON ((((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)))<=(CASE WHEN -6.74983883E8 THEN t0.c76 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON load_extension(('%' IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (vt0.c1))) RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM) NOT NULL) RIGHT OUTER JOIN vt1 ON CAST((t0.c76 IN ()) AS REAL) WHERE (((NULL)IS(((((rt0.c0)AND(vt0.c2)))AND(vt0.c1))))) ORDER BY json_insert(vt0.c0, ((vt0.c1)LIKE(vt1.c2)), LOWER(NULL))  NULLS FIRST, (('0.401665456020573' COLLATE NOCASE)||(((((((((vt1.c2)AND(rt0.c1)))OR(vt1.c2)))AND(rt0.c2)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(((((rt0.c0)AND(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON load_extension(('%' IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (vt0.c1))) RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM) NOT NULL) RIGHT OUTER JOIN vt1 ON CAST((t0.c76 IN ()) AS REAL) ORDER BY json_insert(vt0.c0, ((vt0.c1)LIKE(vt1.c2)), LOWER(NULL))  NULLS FIRST, (('0.401665456020573' COLLATE NOCASE)||(((((((((vt1.c2)AND(rt0.c1)))OR(vt1.c2)))AND(rt0.c2)))OR(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON load_extension(('%' IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (vt0.c1))) RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM) NOT NULL) RIGHT OUTER JOIN vt1 ON CAST((t0.c76 IN ()) AS REAL) WHERE (((NULL)IS(((((rt0.c0)AND(vt0.c2)))AND(vt0.c1))))) ORDER BY json_insert(vt0.c0, ((vt0.c1)LIKE(vt1.c2)), LOWER(NULL))  NULLS FIRST, (('0.401665456020573' COLLATE NOCASE)||(((((((((vt1.c2)AND(rt0.c1)))OR(vt1.c2)))AND(rt0.c2)))OR(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(((((rt0.c0)AND(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON load_extension(('%' IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (vt0.c1))) RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM) NOT NULL) RIGHT OUTER JOIN vt1 ON CAST((t0.c76 IN ()) AS REAL) ORDER BY json_insert(vt0.c0, ((vt0.c1)LIKE(vt1.c2)), LOWER(NULL))  NULLS FIRST, (('0.401665456020573' COLLATE NOCASE)||(((((((((vt1.c2)AND(rt0.c1)))OR(vt1.c2)))AND(rt0.c2)))OR(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c76) NOTNULL))GLOB(((t0.c76) NOT NULL)))) ORDER BY ((CAST(t0.c76 AS TEXT)) NOT BETWEEN (CAST(t0.c76 AS BLOB)) AND (STRFTIME(t0.c76, t0.c76, 0.2159387734319489, t0.c76, t0.c76)));
SELECT SUM(count) FROM (SELECT ((((((t0.c76) NOTNULL))GLOB(((t0.c76) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c76 AS TEXT)) NOT BETWEEN (CAST(t0.c76 AS BLOB)) AND (STRFTIME(t0.c76, t0.c76, 0.2159387734319489, t0.c76, t0.c76))));
SELECT * FROM t0 WHERE (((((t0.c76) NOTNULL))GLOB(((t0.c76) NOT NULL)))) ORDER BY ((CAST(t0.c76 AS TEXT)) NOT BETWEEN (CAST(t0.c76 AS BLOB)) AND (STRFTIME(t0.c76, t0.c76, 0.2159387734319489, t0.c76, t0.c76)));
SELECT SUM(count) FROM (SELECT ((((((t0.c76) NOTNULL))GLOB(((t0.c76) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c76 AS TEXT)) NOT BETWEEN (CAST(t0.c76 AS BLOB)) AND (STRFTIME(t0.c76, t0.c76, 0.2159387734319489, t0.c76, t0.c76))));
SELECT * FROM t0 WHERE (((((t0.c76) NOTNULL))GLOB(((t0.c76) NOT NULL)))) ORDER BY ((CAST(t0.c76 AS TEXT)) NOT BETWEEN (CAST(t0.c76 AS BLOB)) AND (STRFTIME(t0.c76, t0.c76, 0.2159387734319489, t0.c76, t0.c76)));
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (((((t0.c76)GLOB(rt0.c2)))/(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)GLOB(rt0.c2)))/(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (((((t0.c76)GLOB(rt0.c2)))/(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)GLOB(rt0.c2)))/(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (((((t0.c76)GLOB(rt0.c2)))/(CAST(rt0.c3 AS INTEGER))));
SELECT * FROM rt0, vt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) NOT BETWEEN (TIME(vt0.c0, vt0.c2, rt0.c3)) AND ((rt0.c1 IN ())))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) NOT BETWEEN (TIME(vt0.c0, vt0.c2, rt0.c3)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) NOT BETWEEN (TIME(vt0.c0, vt0.c2, rt0.c3)) AND ((rt0.c1 IN ())))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) NOT BETWEEN (TIME(vt0.c0, vt0.c2, rt0.c3)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) NOT BETWEEN (TIME(vt0.c0, vt0.c2, rt0.c3)) AND ((rt0.c1 IN ())))) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON json_array((~ (rt0.c0)), x'') WHERE ((((rt0.c0 IN (rt0.c0))) NOT BETWEEN ((+ (vt0.c2))) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0))) NOT BETWEEN ((+ (vt0.c2))) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON json_array((~ (rt0.c0)), x''));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON json_array((~ (rt0.c0)), x'') WHERE ((((rt0.c0 IN (rt0.c0))) NOT BETWEEN ((+ (vt0.c2))) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0))) NOT BETWEEN ((+ (vt0.c2))) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((vt0.c0) IS FALSE))) INNER JOIN vt0 ON json_array((~ (rt0.c0)), x''));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('')AND((NOT (t0.c76)))))AND(rt0.c0))) ORDER BY ((0.21974325794406835) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((('')AND((NOT (t0.c76)))))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((0.21974325794406835) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('')AND((NOT (t0.c76)))))AND(rt0.c0))) ORDER BY ((0.21974325794406835) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((('')AND((NOT (t0.c76)))))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((0.21974325794406835) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('')AND((NOT (t0.c76)))))AND(rt0.c0))) ORDER BY ((0.21974325794406835) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY;
SELECT * FROM rt0, t0 WHERE (((((((((CAST(rt0.c1 AS TEXT))AND(rt0.c3)))AND(((((((((rt0.c3)AND(rt0.c2)))AND(0xffffffffd9ec4d08)))OR(rt0.c3)))OR(rt0.c3)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))))AND(x''))) ORDER BY (('%f' COLLATE BINARY) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS TEXT))AND(rt0.c3)))AND(((((((((rt0.c3)AND(rt0.c2)))AND(0Xffffffffd9ec4d08)))OR(rt0.c3)))OR(rt0.c3)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))))AND(x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY (('%f' COLLATE BINARY) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((((((((CAST(rt0.c1 AS TEXT))AND(rt0.c3)))AND(((((((((rt0.c3)AND(rt0.c2)))AND(0xffffffffd9ec4d08)))OR(rt0.c3)))OR(rt0.c3)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))))AND(x''))) ORDER BY (('%f' COLLATE BINARY) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS TEXT))AND(rt0.c3)))AND(((((((((rt0.c3)AND(rt0.c2)))AND(0Xffffffffd9ec4d08)))OR(rt0.c3)))OR(rt0.c3)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))))AND(x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY (('%f' COLLATE BINARY) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((((((((CAST(rt0.c1 AS TEXT))AND(rt0.c3)))AND(((((((((rt0.c3)AND(rt0.c2)))AND(0xffffffffd9ec4d08)))OR(rt0.c3)))OR(rt0.c3)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))))AND(x''))) ORDER BY (('%f' COLLATE BINARY) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((UNLIKELY(vt1.c2))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c2 END)))OR(((vt1.c0)|(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c1 THEN 0.4073943608773777 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(LIKELIHOOD(0X36f9b6e8, 0.8615837328087121))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(vt1.c2))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c2 END)))OR(((vt1.c0)|(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c1 THEN 0.4073943608773777 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(LIKELIHOOD(0x36f9b6e8, 0.8615837328087121)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((UNLIKELY(vt1.c2))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c2 END)))OR(((vt1.c0)|(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c1 THEN 0.4073943608773777 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(LIKELIHOOD(0X36f9b6e8, 0.8615837328087121))));
SELECT SUM(count) FROM (SELECT ((((((((((UNLIKELY(vt1.c2))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c2 END)))OR(((vt1.c0)|(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c1 THEN 0.4073943608773777 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(LIKELIHOOD(0x36f9b6e8, 0.8615837328087121)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((UNLIKELY(vt1.c2))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c2 END)))OR(((vt1.c0)|(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c1 THEN 0.4073943608773777 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(LIKELIHOOD(0X36f9b6e8, 0.8615837328087121))));
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((((((vt0.c1)GLOB('O+\ryoBds')))AND(CAST(rt0.c3 AS TEXT))))OR(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)GLOB('O+\ryoBds')))AND(CAST(rt0.c3 AS TEXT))))OR(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0, t0);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((((((vt0.c1)GLOB('O+\ryoBds')))AND(CAST(rt0.c3 AS TEXT))))OR(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)GLOB('O+\ryoBds')))AND(CAST(rt0.c3 AS TEXT))))OR(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0, t0);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((((((vt0.c1)GLOB('O+\ryoBds')))AND(CAST(rt0.c3 AS TEXT))))OR(CAST(NULL AS NUMERIC))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (((((UPPER(t0.c76))AND('876809323')))OR((- (t0.c76)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(t0.c76))AND('876809323')))OR((- (t0.c76))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 NOT INDEXED WHERE (((((UPPER(t0.c76))AND('876809323')))OR((- (t0.c76)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(t0.c76))AND('876809323')))OR((- (t0.c76))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 NOT INDEXED WHERE (((((UPPER(t0.c76))AND('876809323')))OR((- (t0.c76)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt1.c1)))AND(0X51819e33))) NOT BETWEEN (((t0.c76)-('1946586657'))) AND (((t0.c76) IS FALSE))) WHERE (0.5364776948054726) ORDER BY CHAR(vt1.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((0.5364776948054726) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt1.c1)))AND(0x51819e33))) NOT BETWEEN (((t0.c76)-('1946586657'))) AND (((t0.c76) IS FALSE))) ORDER BY CHAR(vt1.c0) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt1.c1)))AND(0X51819e33))) NOT BETWEEN (((t0.c76)-('1946586657'))) AND (((t0.c76) IS FALSE))) WHERE (0.5364776948054726) ORDER BY CHAR(vt1.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((0.5364776948054726) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt1.c1)))AND(0x51819e33))) NOT BETWEEN (((t0.c76)-('1946586657'))) AND (((t0.c76) IS FALSE))) ORDER BY CHAR(vt1.c0) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt1.c1)))AND(0X51819e33))) NOT BETWEEN (((t0.c76)-('1946586657'))) AND (((t0.c76) IS FALSE))) WHERE (0.5364776948054726) ORDER BY CHAR(vt1.c0) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN (- (x'df0c')) THEN (NOT (vt0.c2)) END) ORDER BY -1864123897 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (x'df0c')) THEN (NOT (vt0.c2)) END) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY -1864123897 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN (- (x'df0c')) THEN (NOT (vt0.c2)) END) ORDER BY -1864123897 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (x'df0c')) THEN (NOT (vt0.c2)) END) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY -1864123897 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c1)+(rt0.c2))))=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))) ORDER BY CASE ((NULL) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)+(rt0.c2))))==((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((NULL) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)) END);
SELECT * FROM rt0 WHERE ((((((rt0.c1)+(rt0.c2))))=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))) ORDER BY CASE ((NULL) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)+(rt0.c2))))==((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((NULL) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)) END);
SELECT * FROM rt0 WHERE ((((((rt0.c1)+(rt0.c2))))=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))) ORDER BY CASE ((NULL) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)) END;
SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON (('袢L') IS TRUE) INNER JOIN t0 ON GLOB((NOT (vt1.c1)), ((vt0.c0) IS FALSE)) WHERE (CASE ((((x'ffb2')AND(rt0.c3)))AND(rt0.c2))  WHEN CASE NULL  WHEN rt0.c3 THEN vt0.c1 END THEN (rt0.c0 IN ()) WHEN (('') BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c2 END THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (rt0.c2)) END) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c76 END AS REAL) DESC  NULLS FIRST, (((((rt0.c3) IS FALSE)))>((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2))))) DESC, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))>>(CAST(vt1.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((x'ffb2')AND(rt0.c3)))AND(rt0.c2))  WHEN CASE NULL  WHEN rt0.c3 THEN vt0.c1 END THEN (rt0.c0 IN ()) WHEN (('') BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c2 END THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON (('袢L') IS TRUE) INNER JOIN t0 ON GLOB((NOT (vt1.c1)), ((vt0.c0) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c76 END AS REAL) DESC  NULLS FIRST, (((((rt0.c3) IS FALSE)))>((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2))))) DESC, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))>>(CAST(vt1.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON (('袢L') IS TRUE) INNER JOIN t0 ON GLOB((NOT (vt1.c1)), ((vt0.c0) IS FALSE)) WHERE (CASE ((((x'ffb2')AND(rt0.c3)))AND(rt0.c2))  WHEN CASE NULL  WHEN rt0.c3 THEN vt0.c1 END THEN (rt0.c0 IN ()) WHEN (('') BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c2 END THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (rt0.c2)) END) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c76 END AS REAL) DESC  NULLS FIRST, (((((rt0.c3) IS FALSE)))>((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2))))) DESC, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))>>(CAST(vt1.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((x'ffb2')AND(rt0.c3)))AND(rt0.c2))  WHEN CASE NULL  WHEN rt0.c3 THEN vt0.c1 END THEN (rt0.c0 IN ()) WHEN (('') BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c2 END THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON (('袢L') IS TRUE) INNER JOIN t0 ON GLOB((NOT (vt1.c1)), ((vt0.c0) IS FALSE)) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c76 END AS REAL) DESC  NULLS FIRST, (((((rt0.c3) IS FALSE)))>((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2))))) DESC, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))>>(CAST(vt1.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 CROSS JOIN rt0 ON (('袢L') IS TRUE) INNER JOIN t0 ON GLOB((NOT (vt1.c1)), ((vt0.c0) IS FALSE)) WHERE (CASE ((((x'ffb2')AND(rt0.c3)))AND(rt0.c2))  WHEN CASE NULL  WHEN rt0.c3 THEN vt0.c1 END THEN (rt0.c0 IN ()) WHEN (('') BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((vt0.c2) NOTNULL) WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c2 END THEN ((vt0.c0) NOT BETWEEN (t0.c76) AND (rt0.c2)) END) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE t0.c76 END AS REAL) DESC  NULLS FIRST, (((((rt0.c3) IS FALSE)))>((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2))))) DESC, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))>>(CAST(vt1.c1 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2)&(vt1.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY (((vt1.c2 COLLATE RTRIM))<((CAST(x'' AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)&(vt1.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 COLLATE RTRIM))<((CAST(x'' AS REAL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2)&(vt1.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY (((vt1.c2 COLLATE RTRIM))<((CAST(x'' AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)&(vt1.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 COLLATE RTRIM))<((CAST(x'' AS REAL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2)&(vt1.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (vt1.c0 COLLATE NOCASE))) ORDER BY (((vt1.c2 COLLATE RTRIM))<((CAST(x'' AS REAL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((~ (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((~ (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((~ (vt1.c1)));
SELECT ALL * FROM vt1, rt0 WHERE (807012977);
SELECT SUM(count) FROM (SELECT ((807012977) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (807012977);
SELECT SUM(count) FROM (SELECT ((807012977) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (807012977);
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((vt0.c2 COLLATE RTRIM)OR(((t0.c76) IS FALSE))))AND((((vt1.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c76, rt0.c1, vt0.c1)) AND ((vt1.c0, NULL, vt1.c1))))) FULL OUTER JOIN vt1 ON IFNULL(((rt0.c2)>=(vt1.c0)), CASE vt1.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c2 ELSE x'' END) WHERE (NULL) ORDER BY (- (CASE ')W'  WHEN rt0.c0 THEN vt1.c1 ELSE vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((vt0.c2 COLLATE RTRIM)OR(((t0.c76) IS FALSE))))AND((((vt1.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c76, rt0.c1, vt0.c1)) AND ((vt1.c0, NULL, vt1.c1))))) FULL OUTER JOIN vt1 ON IFNULL(((rt0.c2)>=(vt1.c0)), CASE vt1.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c2 ELSE x'' END) ORDER BY (- (CASE ')W'  WHEN rt0.c0 THEN vt1.c1 ELSE vt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((vt0.c2 COLLATE RTRIM)OR(((t0.c76) IS FALSE))))AND((((vt1.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c76, rt0.c1, vt0.c1)) AND ((vt1.c0, NULL, vt1.c1))))) FULL OUTER JOIN vt1 ON IFNULL(((rt0.c2)>=(vt1.c0)), CASE vt1.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c2 ELSE x'' END) WHERE (NULL) ORDER BY (- (CASE ')W'  WHEN rt0.c0 THEN vt1.c1 ELSE vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((vt0.c2 COLLATE RTRIM)OR(((t0.c76) IS FALSE))))AND((((vt1.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c76, rt0.c1, vt0.c1)) AND ((vt1.c0, NULL, vt1.c1))))) FULL OUTER JOIN vt1 ON IFNULL(((rt0.c2)>=(vt1.c0)), CASE vt1.c0  WHEN rt0.c2 THEN vt1.c2 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c2 ELSE x'' END) ORDER BY (- (CASE ')W'  WHEN rt0.c0 THEN vt1.c1 ELSE vt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0, vt1 WHERE ((- ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0, vt1 WHERE ((- ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0, vt1 WHERE ((- ((rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i94 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (vt0.c0 COLLATE BINARY)) WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((rt0.c1)<=(vt0.c2))))<=(((rt0.c0 IN (vt0.c2, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 INDEXED BY i94 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (vt0.c0 COLLATE BINARY)) ORDER BY (((((rt0.c1)<=(vt0.c2))))<=(((rt0.c0 IN (vt0.c2, rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i94 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (vt0.c0 COLLATE BINARY)) WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((rt0.c1)<=(vt0.c2))))<=(((rt0.c0 IN (vt0.c2, rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 INDEXED BY i94 RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (vt0.c0 COLLATE BINARY)) ORDER BY (((((rt0.c1)<=(vt0.c2))))<=(((rt0.c0 IN (vt0.c2, rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c76) BETWEEN (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))AND(t0.c76)))AND(t0.c76))) AND ((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76)))))) ORDER BY ((((t0.c76)IS(t0.c76))) NOT BETWEEN (((t0.c76) NOT NULL)) AND (((t0.c76) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76) BETWEEN (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))AND(t0.c76)))AND(t0.c76))) AND ((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76)IS(t0.c76))) NOT BETWEEN (((t0.c76) NOT NULL)) AND (((t0.c76) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c76) BETWEEN (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))AND(t0.c76)))AND(t0.c76))) AND ((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76)))))) ORDER BY ((((t0.c76)IS(t0.c76))) NOT BETWEEN (((t0.c76) NOT NULL)) AND (((t0.c76) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76) BETWEEN (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))AND(t0.c76)))AND(t0.c76))) AND ((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76)IS(t0.c76))) NOT BETWEEN (((t0.c76) NOT NULL)) AND (((t0.c76) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c76) BETWEEN (((((((((t0.c76)OR(t0.c76)))OR(t0.c76)))AND(t0.c76)))AND(t0.c76))) AND ((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c76)))))) ORDER BY ((((t0.c76)IS(t0.c76))) NOT BETWEEN (((t0.c76) NOT NULL)) AND (((t0.c76) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((NULL)) BETWEEN ((((t0.c76) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN t0.c76 THEN vt0.c2 ELSE vt0.c1 END))) WHERE (CASE WHEN UPPER(vt0.c2) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) WHEN '' THEN ((vt0.c2)GLOB('0.0')) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c2))=((vt0.c1))) END) ORDER BY IFNULL(405967233, ((vt0.c2) BETWEEN (NULL) AND (vt0.c0))) ASC  NULLS FIRST, 0.7558570771760923 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(vt0.c2) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) WHEN '' THEN ((vt0.c2)GLOB('0.0')) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c2))=((vt0.c1))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((NULL)) BETWEEN ((((t0.c76) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN t0.c76 THEN vt0.c2 ELSE vt0.c1 END))) ORDER BY IFNULL(405967233, ((vt0.c2) BETWEEN (NULL) AND (vt0.c0))) ASC  NULLS FIRST, 0.7558570771760923 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((NULL)) BETWEEN ((((t0.c76) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN t0.c76 THEN vt0.c2 ELSE vt0.c1 END))) WHERE (CASE WHEN UPPER(vt0.c2) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) WHEN '' THEN ((vt0.c2)GLOB('0.0')) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c2))=((vt0.c1))) END) ORDER BY IFNULL(405967233, ((vt0.c2) BETWEEN (NULL) AND (vt0.c0))) ASC  NULLS FIRST, 0.7558570771760923 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(vt0.c2) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) WHEN '' THEN ((vt0.c2)GLOB('0.0')) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c2))=((vt0.c1))) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((NULL)) BETWEEN ((((t0.c76) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN t0.c76 THEN vt0.c2 ELSE vt0.c1 END))) ORDER BY IFNULL(405967233, ((vt0.c2) BETWEEN (NULL) AND (vt0.c0))) ASC  NULLS FIRST, 0.7558570771760923 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((NULL)) BETWEEN ((((t0.c76) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN t0.c76 THEN vt0.c2 ELSE vt0.c1 END))) WHERE (CASE WHEN UPPER(vt0.c2) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) WHEN '' THEN ((vt0.c2)GLOB('0.0')) WHEN vt0.c1 COLLATE NOCASE THEN (((vt0.c2))=((vt0.c1))) END) ORDER BY IFNULL(405967233, ((vt0.c2) BETWEEN (NULL) AND (vt0.c0))) ASC  NULLS FIRST, 0.7558570771760923 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (UNLIKELY((-2001356165 IN ()))) ORDER BY rt0.c2, (((rt0.c1)<>(rt0.c0)) IN ((rt0.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((-2001356165 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, (((rt0.c1)<>(rt0.c0)) IN ((rt0.c3 IN ())))  NULLS FIRST);
SELECT * FROM rt0 WHERE (UNLIKELY((-2001356165 IN ()))) ORDER BY rt0.c2, (((rt0.c1)<>(rt0.c0)) IN ((rt0.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((-2001356165 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, (((rt0.c1)<>(rt0.c0)) IN ((rt0.c3 IN ())))  NULLS FIRST);
SELECT * FROM rt0 WHERE (UNLIKELY((-2001356165 IN ()))) ORDER BY rt0.c2, (((rt0.c1)<>(rt0.c0)) IN ((rt0.c3 IN ())))  NULLS FIRST;
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (180836951);
SELECT SUM(count) FROM (SELECT ALL ((180836951) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (180836951);
SELECT SUM(count) FROM (SELECT ALL ((180836951) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (180836951);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((rt0.c2)>=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((rt0.c2)>=(vt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((rt0.c2)>=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((rt0.c2)>=(vt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((rt0.c2)>=(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((x'') ISNULL) AS INTEGER)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) IS FALSE)) AND (((0xffffffffc91da80f) IS FALSE))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))<=(vt1.c0)) DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN HEX(x'') ELSE CASE vt0.c1  WHEN vt1.c2 THEN vt1.c0 ELSE vt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'') ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) IS FALSE)) AND (((0Xffffffffc91da80f) IS FALSE))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))<=(vt1.c0)) DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN HEX(x'') ELSE CASE vt0.c1  WHEN vt1.c2 THEN vt1.c0 ELSE vt0.c0 END END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((x'') ISNULL) AS INTEGER)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) IS FALSE)) AND (((0xffffffffc91da80f) IS FALSE))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))<=(vt1.c0)) DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN HEX(x'') ELSE CASE vt0.c1  WHEN vt1.c2 THEN vt1.c0 ELSE vt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'') ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) IS FALSE)) AND (((0Xffffffffc91da80f) IS FALSE))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))<=(vt1.c0)) DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN HEX(x'') ELSE CASE vt0.c1  WHEN vt1.c2 THEN vt1.c0 ELSE vt0.c0 END END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((x'') ISNULL) AS INTEGER)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) IS FALSE)) AND (((0xffffffffc91da80f) IS FALSE))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))<=(vt1.c0)) DESC, CASE WHEN UPPER(DISTINCT vt0.c1) THEN HEX(x'') ELSE CASE vt0.c1  WHEN vt1.c2 THEN vt1.c0 ELSE vt0.c0 END END DESC;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((- ((- (vt1.c0))))) ORDER BY (((vt0.c0, rt0.c3, vt1.c1)) BETWEEN ((((vt0.c0)=(vt0.c0)), (~ (vt0.c1)), vt1.c1 COLLATE BINARY)) AND (((NOT (rt0.c2)), (((vt1.c2, rt0.c3, vt1.c1)) BETWEEN ((vt0.c1, rt0.c0, vt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c3))), ((vt1.c2)/(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt0.c0, rt0.c3, vt1.c1)) BETWEEN ((((vt0.c0)=(vt0.c0)), (~ (vt0.c1)), vt1.c1 COLLATE BINARY)) AND (((NOT (rt0.c2)), (((vt1.c2, rt0.c3, vt1.c1)) BETWEEN ((vt0.c1, rt0.c0, vt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c3))), ((vt1.c2)/(vt1.c0))))) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((- ((- (vt1.c0))))) ORDER BY (((vt0.c0, rt0.c3, vt1.c1)) BETWEEN ((((vt0.c0)=(vt0.c0)), (~ (vt0.c1)), vt1.c1 COLLATE BINARY)) AND (((NOT (rt0.c2)), (((vt1.c2, rt0.c3, vt1.c1)) BETWEEN ((vt0.c1, rt0.c0, vt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c3))), ((vt1.c2)/(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt0.c0, rt0.c3, vt1.c1)) BETWEEN ((((vt0.c0)=(vt0.c0)), (~ (vt0.c1)), vt1.c1 COLLATE BINARY)) AND (((NOT (rt0.c2)), (((vt1.c2, rt0.c3, vt1.c1)) BETWEEN ((vt0.c1, rt0.c0, vt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c3))), ((vt1.c2)/(vt1.c0))))) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((- ((- (vt1.c0))))) ORDER BY (((vt0.c0, rt0.c3, vt1.c1)) BETWEEN ((((vt0.c0)=(vt0.c0)), (~ (vt0.c1)), vt1.c1 COLLATE BINARY)) AND (((NOT (rt0.c2)), (((vt1.c2, rt0.c3, vt1.c1)) BETWEEN ((vt0.c1, rt0.c0, vt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c3))), ((vt1.c2)/(vt1.c0))))) DESC;
SELECT ALL * FROM vt1, rt0 WHERE (((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 WHEN '3䣄\r~l셄&,1' THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 WHEN '3䣄\r~l셄&,1' THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 WHEN '3䣄\r~l셄&,1' THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 WHEN '3䣄\r~l셄&,1' THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 WHEN '3䣄\r~l셄&,1' THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(rt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(rt0.c0 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(rt0.c0 AS BLOB) COLLATE NOCASE);
SELECT * FROM vt0, rt0 WHERE (-6.61596848E8) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-6.61596848E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (-6.61596848E8) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-6.61596848E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (-6.61596848E8) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((vt1.c1)<=(rt0.c3))) IS FALSE)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<=(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((vt1.c1)<=(rt0.c3))) IS FALSE)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<=(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((vt1.c1)<=(rt0.c3))) IS FALSE)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC;
SELECT ALL * FROM t0, rt0, vt0 INNER JOIN vt1 ON load_extension((~ (vt1.c0)), rt0.c1 COLLATE BINARY) WHERE ((CAST(rt0.c3 AS BLOB) IN ())) ORDER BY t0.c76 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS BLOB) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 INNER JOIN vt1 ON load_extension((~ (vt1.c0)), rt0.c1 COLLATE BINARY) ORDER BY t0.c76 ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 INNER JOIN vt1 ON load_extension((~ (vt1.c0)), rt0.c1 COLLATE BINARY) WHERE ((CAST(rt0.c3 AS BLOB) IN ())) ORDER BY t0.c76 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS BLOB) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 INNER JOIN vt1 ON load_extension((~ (vt1.c0)), rt0.c1 COLLATE BINARY) ORDER BY t0.c76 ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 INNER JOIN vt1 ON load_extension((~ (vt1.c0)), rt0.c1 COLLATE BINARY) WHERE ((CAST(rt0.c3 AS BLOB) IN ())) ORDER BY t0.c76 ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((vt1.c2) BETWEEN (vt0.c1) AND (t0.c76)))OR(CAST(vt1.c2 AS INTEGER))))OR((+ (vt1.c1))))) ORDER BY ((vt0.c0)-((- (vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2) BETWEEN (vt0.c1) AND (t0.c76)))OR(CAST(vt1.c2 AS INTEGER))))OR((+ (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt0.c0)-((- (vt1.c2)))) DESC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((vt1.c2) BETWEEN (vt0.c1) AND (t0.c76)))OR(CAST(vt1.c2 AS INTEGER))))OR((+ (vt1.c1))))) ORDER BY ((vt0.c0)-((- (vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2) BETWEEN (vt0.c1) AND (t0.c76)))OR(CAST(vt1.c2 AS INTEGER))))OR((+ (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt0.c0)-((- (vt1.c2)))) DESC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((vt1.c2) BETWEEN (vt0.c1) AND (t0.c76)))OR(CAST(vt1.c2 AS INTEGER))))OR((+ (vt1.c1))))) ORDER BY ((vt0.c0)-((- (vt1.c2)))) DESC;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (- (((((((((rt0.c3)OR(vt0.c2)))AND(-372126096)))AND(vt1.c1)))AND(vt1.c0)))) INNER JOIN vt0 ON rt0.c0 WHERE (((((vt0.c0 IN (vt0.c1))))>=((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c1))))>=((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (- (((((((((rt0.c3)OR(vt0.c2)))AND(-372126096)))AND(vt1.c1)))AND(vt1.c0)))) INNER JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (- (((((((((rt0.c3)OR(vt0.c2)))AND(-372126096)))AND(vt1.c1)))AND(vt1.c0)))) INNER JOIN vt0 ON rt0.c0 WHERE (((((vt0.c0 IN (vt0.c1))))>=((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c1))))>=((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (- (((((((((rt0.c3)OR(vt0.c2)))AND(-372126096)))AND(vt1.c1)))AND(vt1.c0)))) INNER JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON (- (((((((((rt0.c3)OR(vt0.c2)))AND(-372126096)))AND(vt1.c1)))AND(vt1.c0)))) INNER JOIN vt0 ON rt0.c0 WHERE (((((vt0.c0 IN (vt0.c1))))>=((((rt0.c1) NOT BETWEEN (vt1.c1) AND (rt0.c1))))));
