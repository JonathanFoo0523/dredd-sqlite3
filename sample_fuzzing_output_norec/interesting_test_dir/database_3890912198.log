-- Time: 2024/06/09 09:34:46
-- Database: database98
-- Database version: 3.40.0
-- seed value: 3890912198
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL , +c4 BLOB ); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (x'', 0.8755863460661387, x'', x'b41a36b6', 0.5518858441213742); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c4, c0, c3, c2) VALUES ('', '858822403', '}f', 1485366247, 0.5518858441213742); -- 5ms;
UPDATE OR IGNORE rt1 SET c2=NULL, c1=NULL, c1=0.8276128496535671 WHERE ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1))) IS FALSE); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2) VALUES (x'', ''), ('', 0.46967919209080755), (0.9536000896488472, '-692998759'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, 0.8088468078548219, '858822403'), (0.12211295313823867, '0.46967919209080755', x''), (0.8276128496535671, 0.5518858441213742, x''), (NULL, '0.9536000896488472', x''), (x'', NULL, ''), (x'', -1, ''), (0.2346677133683498, '1853045292', x'532c'); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c3) VALUES ('', '}f'), ('0.12211295313823867', 'L/?'), ('', NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.9130896374559857, c1=NULL, c2=x'b5ef'; -- 8ms;
INSERT OR ABORT INTO rt0(c2, c1, c0) VALUES ('-1386324094', -54504181, '0.9130896374559857'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'83c1', 'r%?E6zK3)'); -- 0ms;
UPDATE OR ABORT rt1 SET (c1)=(x''); -- 1ms;
UPDATE OR FAIL rt0 SET c1=NULL WHERE (CAST(rt0.c1 AS REAL) IN (((rt0.c0)*(rt0.c1)))); -- 2ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, languageid="lid"); -- 1ms;
COMMIT; -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA temp.threads; -- 0ms;
INSERT OR IGNORE INTO vt0(lid) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE rt1 SET c0=0.2346677133683498, c3=0.8088468078548219, c2=x''; -- 0ms;
UPDATE OR IGNORE vt0 SET (lid)=(x''); -- 0ms;
UPDATE rt1 SET (c2)=(NULL) WHERE (((rt1.c4)) BETWEEN ((((((rt1.c2)AND(rt1.c4)))AND(rt1.c3)))) AND (((rt1.c3 IN (rt1.c0))))); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('1853045292', x'eec2', 'x'); -- 0ms;
PRAGMA mmap_size = -1491025674113480720; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=('1350667853', '1蹍') WHERE ((((((((CAST(rt1.c0 AS REAL))AND((((rt1.c2))<((rt1.c1))))))AND(((rt1.c3)>=(rt1.c2)))))OR(CAST(rt1.c2 AS TEXT))))OR((((rt1.c0, rt1.c4, x'')) NOT BETWEEN ((0X2a413614, rt1.c4, rt1.c3)) AND ((rt1.c2, rt1.c4, rt1.c4))))); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES ('㨬wEz7F'), (x'4a76'), (1.7976931348623157E308); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('\rS|0	06ቇ', 0.04688819517434517); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('1887375943', NULL), ('858822403', x''), ('6mrAWZM{B', -1149030831); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0X3e250473, '0.5518858441213742'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0, lid) VALUES (0.5713583376258703, 8.58822403E8); -- 1ms;
DROP TABLE rt0; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=(NULL); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('c᢮_IH䁄Q''', (((x'b70d' IN ())) NOT BETWEEN (x'911d' COLLATE RTRIM) AND (('-1386324094' IN ()))), x'7f12', x'', 0x33309703); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'612f'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA threads; -- 0ms;
UPDATE OR IGNORE vt0 SET lid=NULL WHERE (((vt0.lid)%(vt0.c0)) IN ()); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c2) VALUES ('-1309482371', 0x3e250473); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x'5279', 'Nv'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3, c0) VALUES (x'', 'Liy', NULL); -- 0ms;
ANALYZE main; -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=('1853045292'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, '1蹍'), (0.8276128496535671, x'0ace'), ('', '#ii_*21u'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (x''), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL rt1 SET c4='-323852790'; -- 0ms;
UPDATE OR IGNORE vt0 SET lid=0.7765414664237086, lid='' WHERE (((NOT (vt0.lid)))!=(vt0.lid COLLATE BINARY)); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1309482371'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.4974424732710758, 'n'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c4, c2) VALUES (0x5918ac05, x'24b9', 0.6648746270141074); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c2=NULL, c0=-3.2385279E8 WHERE ((rt1.c2 COLLATE RTRIM)!=(((rt1.c2)||(NULL)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA secure_delete; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
PRAGMA application_id; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47608'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0) VALUES ('1312738293', NULL); -- 1ms;
UPDATE OR IGNORE rt1 SET (c4)=('1080644141') WHERE '-1386324094'; -- 0ms;
INSERT OR ROLLBACK INTO vt0(lid) VALUES (NULL), (0.6410080535694895), (NULL); -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 816232966);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR FAIL INTO rt1(c3, c0, c1, c2) VALUES (0.7596375515453304, 1.080644141E9, 0.05210749861320696, x'53a88ab9'), (0.21733093521230606, '', 0x36c6fb44, '-986048338'), (NULL, x'', NULL, 0.6864422488576946); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c2) VALUES (x'', ''); -- 17ms;
INSERT OR ABORT INTO vt0(lid, c0) VALUES (0Xffffffffe0305f93, NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c4, c1, c2, c0) VALUES (-1349452779, '', NULL, '1蹍'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c4, c2) VALUES ('-1349452779', 0.5518858441213742, '-692998759'); -- 3ms;
INSERT OR IGNORE INTO rt1(c4, c3, c0) VALUES ('i^hd4NH', 0.6674647619216852, NULL); -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (x'', '1853045292', -53252040, NULL, NULL); -- 4ms;
INSERT OR ROLLBACK INTO rt1(c3, c4, c2) VALUES (NULL, 'xf', ''); -- 0ms;
INSERT OR FAIL INTO rt1(c1, c4) VALUES (-1207484034, x''), (NULL, '-1638529005'), (0.4217113742728257, NULL); -- 3ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x'' WHERE CASE ((vt0.c0)!=(vt0.lid))  WHEN (vt0.lid IN ()) THEN (vt0.c0 IN ()) END; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('-19303250'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(lid) VALUES ((((((((('-568910426' COLLATE BINARY)OR((- ('919010116')))))AND((x'' IN ()))))OR(0.612863994085941 COLLATE NOCASE)))OR('-1309482371' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.4217113742728257); -- 0ms;
PRAGMA legacy_file_format = false; -- 18ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1337692196); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 297059633); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-238643952,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=546208879,12');\n; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((- ((rt1.c2 IN ())))) ORDER BY ((((((((CAST(rt1.c3 AS TEXT))OR(NULL)))OR(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))))OR(((rt1.c4) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((((((((CAST(rt1.c3 AS TEXT))OR(NULL)))OR(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))))OR(((rt1.c4) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((- ((rt1.c2 IN ())))) ORDER BY ((((((((CAST(rt1.c3 AS TEXT))OR(NULL)))OR(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))))OR(((rt1.c4) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((((((((CAST(rt1.c3 AS TEXT))OR(NULL)))OR(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))))OR(((rt1.c4) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((- ((rt1.c2 IN ())))) ORDER BY ((((((((CAST(rt1.c3 AS TEXT))OR(NULL)))OR(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))))OR(((rt1.c4) NOTNULL)));
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.lid)>(rt1.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (0xffffffffad5e5f82) AND (rt1.c0))) AND (((rt1.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)>(rt1.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (0xffffffffad5e5f82) AND (rt1.c0))) AND (((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.lid)>(rt1.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (0xffffffffad5e5f82) AND (rt1.c0))) AND (((rt1.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)>(rt1.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (0xffffffffad5e5f82) AND (rt1.c0))) AND (((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.lid)>(rt1.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (0xffffffffad5e5f82) AND (rt1.c0))) AND (((rt1.c4) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(CAST(vt0.lid AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(CAST(vt0.lid AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(CAST(vt0.lid AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(CAST(vt0.lid AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(CAST(vt0.lid AS BLOB))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST((vt0.lid IN ()) AS TEXT)) ORDER BY ((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.lid IN ()) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST((vt0.lid IN ()) AS TEXT)) ORDER BY ((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.lid IN ()) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST((vt0.lid IN ()) AS TEXT)) ORDER BY ((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (x'174f') ORDER BY ((919010116)GLOB(((rt1.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'174f') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((919010116)GLOB(((rt1.c2) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (x'174f') ORDER BY ((919010116)GLOB(((rt1.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'174f') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((919010116)GLOB(((rt1.c2) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (x'174f') ORDER BY ((919010116)GLOB(((rt1.c2) NOT NULL))) ASC;
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4)) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END) NOT NULL));
SELECT * FROM rt1, vt0 WHERE (((vt0.lid COLLATE RTRIM)!=(CAST(rt1.c4 AS TEXT)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c3)))OR(json_array_length(rt1.c0))))AND((- (vt0.lid)))))OR((NOT (rt1.c2)))))OR(((rt1.c4)>(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE RTRIM)<>(CAST(rt1.c4 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c3)))OR(json_array_length(rt1.c0))))AND((- (vt0.lid)))))OR((NOT (rt1.c2)))))OR(((rt1.c4)>(rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((vt0.lid COLLATE RTRIM)!=(CAST(rt1.c4 AS TEXT)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c3)))OR(json_array_length(rt1.c0))))AND((- (vt0.lid)))))OR((NOT (rt1.c2)))))OR(((rt1.c4)>(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE RTRIM)<>(CAST(rt1.c4 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c3)))OR(json_array_length(rt1.c0))))AND((- (vt0.lid)))))OR((NOT (rt1.c2)))))OR(((rt1.c4)>(rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((vt0.lid COLLATE RTRIM)!=(CAST(rt1.c4 AS TEXT)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c3)))OR(json_array_length(rt1.c0))))AND((- (vt0.lid)))))OR((NOT (rt1.c2)))))OR(((rt1.c4)>(rt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c4)+(rt1.c0))) NOT BETWEEN ((- (rt1.c3))) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)+(rt1.c0))) NOT BETWEEN ((- (rt1.c3))) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c4)+(rt1.c0))) NOT BETWEEN ((- (rt1.c3))) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)+(rt1.c0))) NOT BETWEEN ((- (rt1.c3))) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c4)+(rt1.c0))) NOT BETWEEN ((- (rt1.c3))) AND ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((UPPER(rt1.c1)))<=((0.2132771208211599))));
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(rt1.c1)))<=((0.2132771208211599)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((UPPER(rt1.c1)))<=((0.2132771208211599))));
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(rt1.c1)))<=((0.2132771208211599)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((UPPER(rt1.c1)))<=((0.2132771208211599))));
SELECT * FROM vt0 INNER JOIN rt1 ON CAST(rt1.c3 AS BLOB) WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((vt0.lid)&(rt1.c4))) AND (NULL))) ORDER BY CAST((((rt1.c1)) NOT BETWEEN (('%4')) AND ((rt1.c2))) AS INTEGER) DESC  NULLS LAST, (((rt1.c3, rt1.c4, NULL)) BETWEEN ((((rt1.c2)+(rt1.c4)), (+ (0x2d775226)), ((((((((vt0.lid)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))) AND ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS BLOB), ((0.22839771082134952) NOT NULL)))), CASE WHEN (- (vt0.c0)) THEN (+ (rt1.c2)) ELSE (rt1.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) NOT BETWEEN (((vt0.lid)&(rt1.c4))) AND (NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST(rt1.c3 AS BLOB) ORDER BY CAST((((rt1.c1)) NOT BETWEEN (('%4')) AND ((rt1.c2))) AS INTEGER) DESC  NULLS LAST, (((rt1.c3, rt1.c4, NULL)) BETWEEN ((((rt1.c2)+(rt1.c4)), (+ (0X2d775226)), ((((((((vt0.lid)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))) AND ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS BLOB), ((0.22839771082134952) NOT NULL)))), CASE WHEN (- (vt0.c0)) THEN (+ (rt1.c2)) ELSE (rt1.c2 IN ()) END);
SELECT * FROM vt0 INNER JOIN rt1 ON CAST(rt1.c3 AS BLOB) WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((vt0.lid)&(rt1.c4))) AND (NULL))) ORDER BY CAST((((rt1.c1)) NOT BETWEEN (('%4')) AND ((rt1.c2))) AS INTEGER) DESC  NULLS LAST, (((rt1.c3, rt1.c4, NULL)) BETWEEN ((((rt1.c2)+(rt1.c4)), (+ (0x2d775226)), ((((((((vt0.lid)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))) AND ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS BLOB), ((0.22839771082134952) NOT NULL)))), CASE WHEN (- (vt0.c0)) THEN (+ (rt1.c2)) ELSE (rt1.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) NOT BETWEEN (((vt0.lid)&(rt1.c4))) AND (NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST(rt1.c3 AS BLOB) ORDER BY CAST((((rt1.c1)) NOT BETWEEN (('%4')) AND ((rt1.c2))) AS INTEGER) DESC  NULLS LAST, (((rt1.c3, rt1.c4, NULL)) BETWEEN ((((rt1.c2)+(rt1.c4)), (+ (0X2d775226)), ((((((((vt0.lid)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))) AND ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS BLOB), ((0.22839771082134952) NOT NULL)))), CASE WHEN (- (vt0.c0)) THEN (+ (rt1.c2)) ELSE (rt1.c2 IN ()) END);
SELECT * FROM vt0 INNER JOIN rt1 ON CAST(rt1.c3 AS BLOB) WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((vt0.lid)&(rt1.c4))) AND (NULL))) ORDER BY CAST((((rt1.c1)) NOT BETWEEN (('%4')) AND ((rt1.c2))) AS INTEGER) DESC  NULLS LAST, (((rt1.c3, rt1.c4, NULL)) BETWEEN ((((rt1.c2)+(rt1.c4)), (+ (0x2d775226)), ((((((((vt0.lid)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c4)))) AND ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS BLOB), ((0.22839771082134952) NOT NULL)))), CASE WHEN (- (vt0.c0)) THEN (+ (rt1.c2)) ELSE (rt1.c2 IN ()) END;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)) AND ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c4 ELSE '' END)))) ORDER BY ((((rt1.c4)GLOB(rt1.c3)))IS NOT(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST, (((rt1.c3)) NOT BETWEEN ((((rt1.c3)>=(rt1.c2)))) AND ((((rt1.c2)<=(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)) AND ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c4 ELSE '' END)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)GLOB(rt1.c3)))IS NOT(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST, (((rt1.c3)) NOT BETWEEN ((((rt1.c3)>=(rt1.c2)))) AND ((((rt1.c2)<=(rt1.c1))))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)) AND ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c4 ELSE '' END)))) ORDER BY ((((rt1.c4)GLOB(rt1.c3)))IS NOT(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST, (((rt1.c3)) NOT BETWEEN ((((rt1.c3)>=(rt1.c2)))) AND ((((rt1.c2)<=(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)) AND ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c4 ELSE '' END)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)GLOB(rt1.c3)))IS NOT(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST, (((rt1.c3)) NOT BETWEEN ((((rt1.c3)>=(rt1.c2)))) AND ((((rt1.c2)<=(rt1.c1))))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END)) AND ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c4 ELSE '' END)))) ORDER BY ((((rt1.c4)GLOB(rt1.c3)))IS NOT(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST, (((rt1.c3)) NOT BETWEEN ((((rt1.c3)>=(rt1.c2)))) AND ((((rt1.c2)<=(rt1.c1))))) ASC;
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) COLLATE RTRIM) ORDER BY CASE '䁄L'  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END THEN LENGTH('-938594866') WHEN (+ (rt1.c4)) THEN (']Msh5m?e>' IN (rt1.c4, rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.04688819517434517 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CASE '䁄L'  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END THEN LENGTH('-938594866') WHEN (+ (rt1.c4)) THEN (']Msh5m?e>' IN (rt1.c4, rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.04688819517434517 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)) END  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) COLLATE RTRIM) ORDER BY CASE '䁄L'  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END THEN LENGTH('-938594866') WHEN (+ (rt1.c4)) THEN (']Msh5m?e>' IN (rt1.c4, rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.04688819517434517 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CASE '䁄L'  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END THEN LENGTH('-938594866') WHEN (+ (rt1.c4)) THEN (']Msh5m?e>' IN (rt1.c4, rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.04688819517434517 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)) END  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) COLLATE RTRIM) ORDER BY CASE '䁄L'  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c0 END THEN LENGTH('-938594866') WHEN (+ (rt1.c4)) THEN (']Msh5m?e>' IN (rt1.c4, rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN 0.04688819517434517 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c1 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)) END  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c2)OR(rt1.c4 COLLATE NOCASE)))AND((('6BOa') NOT NULL))))OR(rt1.c0 COLLATE NOCASE)))AND(((rt1.c0)LIKE(rt1.c4)))))OR(((rt1.c3)IS NOT(rt1.c4)))))OR((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c2)OR(rt1.c4 COLLATE NOCASE)))AND((('6BOa') NOT NULL))))OR(rt1.c0 COLLATE NOCASE)))AND(((rt1.c0)LIKE(rt1.c4)))))OR(((rt1.c3)IS NOT(rt1.c4)))))OR((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c2)OR(rt1.c4 COLLATE NOCASE)))AND((('6BOa') NOT NULL))))OR(rt1.c0 COLLATE NOCASE)))AND(((rt1.c0)LIKE(rt1.c4)))))OR(((rt1.c3)IS NOT(rt1.c4)))))OR((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c2)OR(rt1.c4 COLLATE NOCASE)))AND((('6BOa') NOT NULL))))OR(rt1.c0 COLLATE NOCASE)))AND(((rt1.c0)LIKE(rt1.c4)))))OR(((rt1.c3)IS NOT(rt1.c4)))))OR((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c2)OR(rt1.c4 COLLATE NOCASE)))AND((('6BOa') NOT NULL))))OR(rt1.c0 COLLATE NOCASE)))AND(((rt1.c0)LIKE(rt1.c4)))))OR(((rt1.c3)IS NOT(rt1.c4)))))OR((NOT (rt1.c3)))));
SELECT ALL * FROM vt0 WHERE (0.04219342547621607 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0.04219342547621607 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.04219342547621607 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0.04219342547621607 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.04219342547621607 COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((+ (CAST(1.080644141E9 AS REAL)))) ORDER BY (((vt0.lid IN (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (((vt0.lid)*(vt0.lid))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(1.080644141E9 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid IN (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (((vt0.lid)*(vt0.lid)))));
SELECT * FROM vt0 WHERE ((+ (CAST(1.080644141E9 AS REAL)))) ORDER BY (((vt0.lid IN (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (((vt0.lid)*(vt0.lid))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(1.080644141E9 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid IN (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (((vt0.lid)*(vt0.lid)))));
SELECT * FROM vt0 WHERE ((+ (CAST(1.080644141E9 AS REAL)))) ORDER BY (((vt0.lid IN (vt0.c0))) BETWEEN (((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid))) AND (((vt0.lid)*(vt0.lid))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4) ISNULL))*(((vt0.c0)GLOB(rt1.c0))))) ORDER BY ((((rt1.c3 COLLATE RTRIM)AND((- (rt1.c4)))))AND(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) ISNULL))*(((vt0.c0)GLOB(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c3 COLLATE RTRIM)AND((- (rt1.c4)))))AND(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4) ISNULL))*(((vt0.c0)GLOB(rt1.c0))))) ORDER BY ((((rt1.c3 COLLATE RTRIM)AND((- (rt1.c4)))))AND(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) ISNULL))*(((vt0.c0)GLOB(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c3 COLLATE RTRIM)AND((- (rt1.c4)))))AND(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c4) ISNULL))*(((vt0.c0)GLOB(rt1.c0))))) ORDER BY ((((rt1.c3 COLLATE RTRIM)AND((- (rt1.c4)))))AND(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json_patch(MIN(rt1.c1, vt0.c0), ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.lid)))) ORDER BY ((CASE rt1.c4  WHEN vt0.c0 THEN vt0.lid ELSE rt1.c2 END)=((- (vt0.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_patch(MIN(rt1.c1, vt0.c0), ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.lid)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE rt1.c4  WHEN vt0.c0 THEN vt0.lid ELSE rt1.c2 END)=((- (vt0.lid)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json_patch(MIN(rt1.c1, vt0.c0), ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.lid)))) ORDER BY ((CASE rt1.c4  WHEN vt0.c0 THEN vt0.lid ELSE rt1.c2 END)=((- (vt0.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_patch(MIN(rt1.c1, vt0.c0), ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.lid)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE rt1.c4  WHEN vt0.c0 THEN vt0.lid ELSE rt1.c2 END)=((- (vt0.lid)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json_patch(MIN(rt1.c1, vt0.c0), ((rt1.c2) BETWEEN (rt1.c2) AND (vt0.lid)))) ORDER BY ((CASE rt1.c4  WHEN vt0.c0 THEN vt0.lid ELSE rt1.c2 END)=((- (vt0.lid)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND (('')))))) ORDER BY ((((rt1.c1)LIKE(rt1.c2))) BETWEEN (((rt1.c1)+(rt1.c1))) AND (TRIM(DISTINCT x'', rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND (('')))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)LIKE(rt1.c2))) BETWEEN (((rt1.c1)+(rt1.c1))) AND (TRIM(DISTINCT x'', rt1.c4))));
SELECT COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND (('')))))) ORDER BY ((((rt1.c1)LIKE(rt1.c2))) BETWEEN (((rt1.c1)+(rt1.c1))) AND (TRIM(DISTINCT x'', rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND (('')))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)LIKE(rt1.c2))) BETWEEN (((rt1.c1)+(rt1.c1))) AND (TRIM(DISTINCT x'', rt1.c4))));
SELECT COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND (('')))))) ORDER BY ((((rt1.c1)LIKE(rt1.c2))) BETWEEN (((rt1.c1)+(rt1.c1))) AND (TRIM(DISTINCT x'', rt1.c4)));
SELECT * FROM rt1 WHERE ((~ ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) ORDER BY CAST(((rt1.c0)<=(rt1.c4)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0)<=(rt1.c4)) AS NUMERIC));
SELECT * FROM rt1 WHERE ((~ ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) ORDER BY CAST(((rt1.c0)<=(rt1.c4)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0)<=(rt1.c4)) AS NUMERIC));
SELECT * FROM rt1 WHERE ((~ ((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))))) ORDER BY CAST(((rt1.c0)<=(rt1.c4)) AS NUMERIC);
SELECT ALL * FROM rt1 WHERE (MAX(SQLITE_COMPILEOPTION_USED(rt1.c4), rt1.c2, ((rt1.c4) IS FALSE), ((rt1.c4)==(x''))));
SELECT SUM(count) FROM (SELECT ((MAX(SQLITE_COMPILEOPTION_USED(rt1.c4), rt1.c2, ((rt1.c4) IS FALSE), ((rt1.c4)=(x'')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (MAX(SQLITE_COMPILEOPTION_USED(rt1.c4), rt1.c2, ((rt1.c4) IS FALSE), ((rt1.c4)==(x''))));
SELECT SUM(count) FROM (SELECT ((MAX(SQLITE_COMPILEOPTION_USED(rt1.c4), rt1.c2, ((rt1.c4) IS FALSE), ((rt1.c4)=(x'')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (MAX(SQLITE_COMPILEOPTION_USED(rt1.c4), rt1.c2, ((rt1.c4) IS FALSE), ((rt1.c4)==(x''))));
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c2)>>(rt1.c0))))) ORDER BY ((((((((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))AND(NULL))) NOT NULL) DESC  NULLS FIRST, ((TRIM(rt1.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2)>>(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))AND(NULL))) NOT NULL) DESC  NULLS FIRST, ((TRIM(rt1.c0)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c2)>>(rt1.c0))))) ORDER BY ((((((((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))AND(NULL))) NOT NULL) DESC  NULLS FIRST, ((TRIM(rt1.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2)>>(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))AND(NULL))) NOT NULL) DESC  NULLS FIRST, ((TRIM(rt1.c0)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c2)>>(rt1.c0))))) ORDER BY ((((((((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c4)))AND(NULL))) NOT NULL) DESC  NULLS FIRST, ((TRIM(rt1.c0)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (vt0.c0))) NOTNULL)) ORDER BY DATE(vt0.lid, ((((rt1.c2)OR(rt1.c3)))OR(rt1.c4)), ((vt0.c0)<=(NULL))) ASC, (((vt0.c0)=(rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY DATE(vt0.lid, ((((rt1.c2)OR(rt1.c3)))OR(rt1.c4)), ((vt0.c0)<=(NULL))) ASC, (((vt0.c0)=(rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (vt0.c0))) NOTNULL)) ORDER BY DATE(vt0.lid, ((((rt1.c2)OR(rt1.c3)))OR(rt1.c4)), ((vt0.c0)<=(NULL))) ASC, (((vt0.c0)=(rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY DATE(vt0.lid, ((((rt1.c2)OR(rt1.c3)))OR(rt1.c4)), ((vt0.c0)<=(NULL))) ASC, (((vt0.c0)=(rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (vt0.c0))) NOTNULL)) ORDER BY DATE(vt0.lid, ((((rt1.c2)OR(rt1.c3)))OR(rt1.c4)), ((vt0.c0)<=(NULL))) ASC, (((vt0.c0)=(rt1.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE BINARY)>=((~ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)>=((~ (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE BINARY)>=((~ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)>=((~ (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE BINARY)>=((~ (rt1.c4)))));
SELECT ALL * FROM rt1 WHERE (CASE (((rt1.c3, rt1.c0, rt1.c1))>((1411301862, rt1.c1, rt1.c3)))  WHEN ((((((((NULL)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN ((rt1.c3) NOT NULL) END) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((TRIM(rt1.c3)))) DESC  NULLS FIRST, 444222426;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c3, rt1.c0, rt1.c1))>((1411301862, rt1.c1, rt1.c3)))  WHEN ((((((((NULL)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN ((rt1.c3) NOT NULL) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((TRIM(rt1.c3)))) DESC  NULLS FIRST, 444222426);
SELECT ALL * FROM rt1 WHERE (CASE (((rt1.c3, rt1.c0, rt1.c1))>((1411301862, rt1.c1, rt1.c3)))  WHEN ((((((((NULL)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN ((rt1.c3) NOT NULL) END) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((TRIM(rt1.c3)))) DESC  NULLS FIRST, 444222426;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c3, rt1.c0, rt1.c1))>((1411301862, rt1.c1, rt1.c3)))  WHEN ((((((((NULL)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)) THEN ((rt1.c3) NOT NULL) END) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((TRIM(rt1.c3)))) DESC  NULLS FIRST, 444222426);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt1, vt0 WHERE (((vt0.lid) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((vt0.lid) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((vt0.lid) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>>(rt1.c1)))>=(rt1.c0))) ORDER BY ((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3)))))!=((rt1.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>>(rt1.c1)))>=(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3)))))!=((rt1.c4))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>>(rt1.c1)))>=(rt1.c0))) ORDER BY ((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3)))))!=((rt1.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>>(rt1.c1)))>=(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3)))))!=((rt1.c4))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>>(rt1.c1)))>=(rt1.c0))) ORDER BY ((((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c3)))))!=((rt1.c4))) DESC;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL WHERE (x'') ORDER BY ((vt0.c0 COLLATE RTRIM)||(rt1.c4 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL ORDER BY ((vt0.c0 COLLATE RTRIM)||(rt1.c4 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL WHERE (x'') ORDER BY ((vt0.c0 COLLATE RTRIM)||(rt1.c4 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL ORDER BY ((vt0.c0 COLLATE RTRIM)||(rt1.c4 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL WHERE (x'') ORDER BY ((vt0.c0 COLLATE RTRIM)||(rt1.c4 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (x'')));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1) IS FALSE))-(((vt0.c0)|(vt0.c0))))) ORDER BY ((((rt1.c1) NOTNULL))|(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) IS FALSE))-(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1) NOTNULL))|(NULL)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1) IS FALSE))-(((vt0.c0)|(vt0.c0))))) ORDER BY ((((rt1.c1) NOTNULL))|(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) IS FALSE))-(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1) NOTNULL))|(NULL)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1) IS FALSE))-(((vt0.c0)|(vt0.c0))))) ORDER BY ((((rt1.c1) NOTNULL))|(NULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (((- (rt1.c1)))IS(((x'')AND(rt1.c4)))) WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c0) ISNULL))))) ORDER BY ((json(rt1.c2)) IS TRUE) ASC  NULLS LAST, json((- (vt0.c0))), ((CASE 0.021535156918733422  WHEN rt1.c1 THEN vt0.lid END) BETWEEN ((('919010116')<<(rt1.c4))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0xfffffffffcc9fae2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c0) ISNULL))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((- (rt1.c1)))IS(((x'')AND(rt1.c4)))) ORDER BY ((json(rt1.c2)) IS TRUE) ASC  NULLS LAST, json((- (vt0.c0))), ((CASE 0.021535156918733422  WHEN rt1.c1 THEN vt0.lid END) BETWEEN ((('919010116')<<(rt1.c4))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0Xfffffffffcc9fae2))))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (((- (rt1.c1)))IS(((x'')AND(rt1.c4)))) WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c0) ISNULL))))) ORDER BY ((json(rt1.c2)) IS TRUE) ASC  NULLS LAST, json((- (vt0.c0))), ((CASE 0.021535156918733422  WHEN rt1.c1 THEN vt0.lid END) BETWEEN ((('919010116')<<(rt1.c4))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0xfffffffffcc9fae2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c0) ISNULL))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((- (rt1.c1)))IS(((x'')AND(rt1.c4)))) ORDER BY ((json(rt1.c2)) IS TRUE) ASC  NULLS LAST, json((- (vt0.c0))), ((CASE 0.021535156918733422  WHEN rt1.c1 THEN vt0.lid END) BETWEEN ((('919010116')<<(rt1.c4))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0Xfffffffffcc9fae2))))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (((- (rt1.c1)))IS(((x'')AND(rt1.c4)))) WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c0) ISNULL))))) ORDER BY ((json(rt1.c2)) IS TRUE) ASC  NULLS LAST, json((- (vt0.c0))), ((CASE 0.021535156918733422  WHEN rt1.c1 THEN vt0.lid END) BETWEEN ((('919010116')<<(rt1.c4))) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0xfffffffffcc9fae2))))) ASC;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))<=(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT))<=(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 ELSE x'' END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))<=(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS TEXT))<=(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 ELSE x'' END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))<=(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 ELSE x'' END)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0))))));
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c3 IN ()) THEN CAST(rt1.c3 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c3 IN ()) THEN CAST(rt1.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c3 IN ()) THEN CAST(rt1.c3 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c3 IN ()) THEN CAST(rt1.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c3 IN ()) THEN CAST(rt1.c3 AS NUMERIC) END);
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) AS BLOB));
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) AS BLOB));
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) AS BLOB);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((x'') NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'') NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((x'') NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'') NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((x'') NOT NULL) IN ()));
SELECT * FROM rt1, vt0 WHERE (CAST(0.9079335286232174 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9079335286232174 AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(0.9079335286232174 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9079335286232174 AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(0.9079335286232174 AS INTEGER));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c0 IN ()))-(((rt1.c4) IS FALSE))) WHERE ((- (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c0 IN ()))-(((rt1.c4) IS FALSE))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c0 IN ()))-(((rt1.c4) IS FALSE))) WHERE ((- (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c0 IN ()))-(((rt1.c4) IS FALSE))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c0 IN ()))-(((rt1.c4) IS FALSE))) WHERE ((- (rt1.c2 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.lid, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.lid, vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.lid, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.lid, vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.lid, vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1)&(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1)&(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1)&(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1)&(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1)&(rt1.c0)))));
SELECT * FROM rt1 WHERE ((rt1.c4 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c4 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c4 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (JULIANDAY(rt1.c1, rt1.c3, x'') COLLATE BINARY) ORDER BY ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 END)OR(CASE 'GK\r'  WHEN rt1.c2 THEN rt1.c2 END)))AND(((rt1.c3)IS(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(rt1.c1, rt1.c3, x'') COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 END)OR(CASE 'GK\r'  WHEN rt1.c2 THEN rt1.c2 END)))AND(((rt1.c3)IS(rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (JULIANDAY(rt1.c1, rt1.c3, x'') COLLATE BINARY) ORDER BY ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 END)OR(CASE 'GK\r'  WHEN rt1.c2 THEN rt1.c2 END)))AND(((rt1.c3)IS(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(rt1.c1, rt1.c3, x'') COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 END)OR(CASE 'GK\r'  WHEN rt1.c2 THEN rt1.c2 END)))AND(((rt1.c3)IS(rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (JULIANDAY(rt1.c1, rt1.c3, x'') COLLATE BINARY) ORDER BY ((((CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 END)OR(CASE 'GK\r'  WHEN rt1.c2 THEN rt1.c2 END)))AND(((rt1.c3)IS(rt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON (~ (rt1.c2 COLLATE NOCASE)) WHERE ((((rt1.c4 IN ())) NOT BETWEEN (CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END) AND (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c1))))) ORDER BY ((rt1.c3) BETWEEN (0.04219342547621607) AND (vt0.lid)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END) AND (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (~ (rt1.c2 COLLATE NOCASE)) ORDER BY ((rt1.c3) BETWEEN (0.04219342547621607) AND (vt0.lid)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON (~ (rt1.c2 COLLATE NOCASE)) WHERE ((((rt1.c4 IN ())) NOT BETWEEN (CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END) AND (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c1))))) ORDER BY ((rt1.c3) BETWEEN (0.04219342547621607) AND (vt0.lid)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ())) NOT BETWEEN (CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END) AND (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (~ (rt1.c2 COLLATE NOCASE)) ORDER BY ((rt1.c3) BETWEEN (0.04219342547621607) AND (vt0.lid)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON (~ (rt1.c2 COLLATE NOCASE)) WHERE ((((rt1.c4 IN ())) NOT BETWEEN (CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c2 END) AND (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c1))))) ORDER BY ((rt1.c3) BETWEEN (0.04219342547621607) AND (vt0.lid)) COLLATE BINARY;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c3)) BETWEEN ((((rt1.c4)<>(rt1.c4)))) AND ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))))) ORDER BY (((rt1.c1, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))), ((rt1.c3)IS(vt0.lid))))=((CASE WHEN rt1.c4 THEN rt1.c2 END, ((((rt1.c3)OR(vt0.lid)))OR(vt0.c0)), ((0.7794893223886568) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN ((((rt1.c4)<>(rt1.c4)))) AND ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))), ((rt1.c3)IS(vt0.lid))))==((CASE WHEN rt1.c4 THEN rt1.c2 END, ((((rt1.c3)OR(vt0.lid)))OR(vt0.c0)), ((0.7794893223886568) ISNULL)))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c3)) BETWEEN ((((rt1.c4)<>(rt1.c4)))) AND ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))))) ORDER BY (((rt1.c1, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))), ((rt1.c3)IS(vt0.lid))))=((CASE WHEN rt1.c4 THEN rt1.c2 END, ((((rt1.c3)OR(vt0.lid)))OR(vt0.c0)), ((0.7794893223886568) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN ((((rt1.c4)<>(rt1.c4)))) AND ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))), ((rt1.c3)IS(vt0.lid))))==((CASE WHEN rt1.c4 THEN rt1.c2 END, ((((rt1.c3)OR(vt0.lid)))OR(vt0.c0)), ((0.7794893223886568) ISNULL)))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c3)) BETWEEN ((((rt1.c4)<>(rt1.c4)))) AND ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))))) ORDER BY (((rt1.c1, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3))), ((rt1.c3)IS(vt0.lid))))=((CASE WHEN rt1.c4 THEN rt1.c2 END, ((((rt1.c3)OR(vt0.lid)))OR(vt0.c0)), ((0.7794893223886568) ISNULL)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c4 AS NUMERIC) AS INTEGER)) ORDER BY (~ (((rt1.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c4 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c4 AS NUMERIC) AS INTEGER)) ORDER BY (~ (((rt1.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c4 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c4 AS NUMERIC) AS INTEGER)) ORDER BY (~ (((rt1.c3) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.lid))) NOTNULL) WHERE (((((rt1.c1)LIKE(rt1.c4))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((rt1.c2)OR(rt1.c2)))AND('594600531')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)LIKE(rt1.c4))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((rt1.c2)OR(rt1.c2)))AND('594600531'))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.lid))) NOTNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.lid))) NOTNULL) WHERE (((((rt1.c1)LIKE(rt1.c4))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((rt1.c2)OR(rt1.c2)))AND('594600531')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)LIKE(rt1.c4))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((rt1.c2)OR(rt1.c2)))AND('594600531'))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.lid))) NOTNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON (((+ (vt0.lid))) NOTNULL) WHERE (((((rt1.c1)LIKE(rt1.c4))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((rt1.c2)OR(rt1.c2)))AND('594600531')))));
SELECT * FROM rt1 WHERE (CAST(((rt1.c3)OR(rt1.c1)) AS BLOB)) ORDER BY '6BOa' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)OR(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY '6BOa' ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c3)OR(rt1.c1)) AS BLOB)) ORDER BY '6BOa' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)OR(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY '6BOa' ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c3)OR(rt1.c1)) AS BLOB)) ORDER BY '6BOa' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (((vt0.lid)>>(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.lid)>>(vt0.lid))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (((vt0.lid)>>(vt0.lid)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.lid)>>(vt0.lid))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (((vt0.lid)>>(vt0.lid)))));
SELECT COUNT(*) FROM rt1 WHERE ((((((+ (rt1.c3)))AND('0.021535156918733422')))OR((+ (rt1.c4))))) ORDER BY ((CAST(rt1.c0 AS INTEGER))LIKE((rt1.c2 IN ())))  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c2))<=((rt1.c1, rt1.c0, rt1.c4, 0.9130896374559857, 0.0322232732769242)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt1.c3)))AND('0.021535156918733422')))OR((+ (rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER))LIKE((rt1.c2 IN ())))  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c2))<=((rt1.c1, rt1.c0, rt1.c4, 0.9130896374559857, 0.0322232732769242)))) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((((+ (rt1.c3)))AND('0.021535156918733422')))OR((+ (rt1.c4))))) ORDER BY ((CAST(rt1.c0 AS INTEGER))LIKE((rt1.c2 IN ())))  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c2))<=((rt1.c1, rt1.c0, rt1.c4, 0.9130896374559857, 0.0322232732769242)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt1.c3)))AND('0.021535156918733422')))OR((+ (rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER))LIKE((rt1.c2 IN ())))  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c2))<=((rt1.c1, rt1.c0, rt1.c4, 0.9130896374559857, 0.0322232732769242)))) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((((+ (rt1.c3)))AND('0.021535156918733422')))OR((+ (rt1.c4))))) ORDER BY ((CAST(rt1.c0 AS INTEGER))LIKE((rt1.c2 IN ())))  NULLS FIRST, (((((rt1.c0, rt1.c1, rt1.c4, rt1.c2, rt1.c2))<=((rt1.c1, rt1.c0, rt1.c4, 0.9130896374559857, 0.0322232732769242)))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2) BETWEEN (vt0.lid) AND (-5.33700717E8)))%(0.4590294587724738))) ORDER BY (((((rt1.c3 IN ()))AND(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))OR((((rt1.c1))>((rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (vt0.lid) AND (-5.33700717E8)))%(0.4590294587724738))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c3 IN ()))AND(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))OR((((rt1.c1))>((rt1.c2)))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2) BETWEEN (vt0.lid) AND (-5.33700717E8)))%(0.4590294587724738))) ORDER BY (((((rt1.c3 IN ()))AND(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))OR((((rt1.c1))>((rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (vt0.lid) AND (-5.33700717E8)))%(0.4590294587724738))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c3 IN ()))AND(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))OR((((rt1.c1))>((rt1.c2)))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2) BETWEEN (vt0.lid) AND (-5.33700717E8)))%(0.4590294587724738))) ORDER BY (((((rt1.c3 IN ()))AND(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))OR((((rt1.c1))>((rt1.c2)))))  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE ((((rt1.c3 IN (vt0.c0)))<((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((0.8076717556083147))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN (vt0.c0)))<((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((0.8076717556083147)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c3 IN (vt0.c0)))<((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((0.8076717556083147))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN (vt0.c0)))<((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((0.8076717556083147)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c3 IN (vt0.c0)))<((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((0.8076717556083147))))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c4 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c4 AS INTEGER))))OR(CAST('-1631005782' AS BLOB))))AND(CAST(rt1.c3 AS NUMERIC))))AND((~ (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c4 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c4 AS INTEGER))))OR(CAST('-1631005782' AS BLOB))))AND(CAST(rt1.c3 AS NUMERIC))))AND((~ (rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c4 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c4 AS INTEGER))))OR(CAST('-1631005782' AS BLOB))))AND(CAST(rt1.c3 AS NUMERIC))))AND((~ (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c4 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c4 AS INTEGER))))OR(CAST('-1631005782' AS BLOB))))AND(CAST(rt1.c3 AS NUMERIC))))AND((~ (rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c4 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((((rt1.c3 COLLATE NOCASE)OR(CAST(rt1.c4 AS INTEGER))))OR(CAST('-1631005782' AS BLOB))))AND(CAST(rt1.c3 AS NUMERIC))))AND((~ (rt1.c0)))) ASC;
SELECT * FROM rt1 INNER JOIN vt0 ON NULLIF(DISTINCT rt1.c1 COLLATE NOCASE, '}f') WHERE (CASE QUOTE(rt1.c0)  WHEN CASE WHEN rt1.c2 THEN vt0.lid END THEN CAST(rt1.c0 AS TEXT) WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c0 WHEN rt1.c4 COLLATE NOCASE THEN vt0.c0 ELSE (((rt1.c0, vt0.lid, rt1.c0))<((rt1.c2, rt1.c4, '0.6674647619216852'))) END);
SELECT SUM(count) FROM (SELECT ((CASE QUOTE(rt1.c0)  WHEN CASE WHEN rt1.c2 THEN vt0.lid END THEN CAST(rt1.c0 AS TEXT) WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c0 WHEN rt1.c4 COLLATE NOCASE THEN vt0.c0 ELSE (((rt1.c0, vt0.lid, rt1.c0))<((rt1.c2, rt1.c4, '0.6674647619216852'))) END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULLIF(DISTINCT rt1.c1 COLLATE NOCASE, '}f'));
SELECT * FROM rt1 INNER JOIN vt0 ON NULLIF(DISTINCT rt1.c1 COLLATE NOCASE, '}f') WHERE (CASE QUOTE(rt1.c0)  WHEN CASE WHEN rt1.c2 THEN vt0.lid END THEN CAST(rt1.c0 AS TEXT) WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c0 WHEN rt1.c4 COLLATE NOCASE THEN vt0.c0 ELSE (((rt1.c0, vt0.lid, rt1.c0))<((rt1.c2, rt1.c4, '0.6674647619216852'))) END);
SELECT SUM(count) FROM (SELECT ((CASE QUOTE(rt1.c0)  WHEN CASE WHEN rt1.c2 THEN vt0.lid END THEN CAST(rt1.c0 AS TEXT) WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c0 WHEN rt1.c4 COLLATE NOCASE THEN vt0.c0 ELSE (((rt1.c0, vt0.lid, rt1.c0))<((rt1.c2, rt1.c4, '0.6674647619216852'))) END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULLIF(DISTINCT rt1.c1 COLLATE NOCASE, '}f'));
SELECT * FROM rt1 INNER JOIN vt0 ON NULLIF(DISTINCT rt1.c1 COLLATE NOCASE, '}f') WHERE (CASE QUOTE(rt1.c0)  WHEN CASE WHEN rt1.c2 THEN vt0.lid END THEN CAST(rt1.c0 AS TEXT) WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c0 WHEN rt1.c4 COLLATE NOCASE THEN vt0.c0 ELSE (((rt1.c0, vt0.lid, rt1.c0))<((rt1.c2, rt1.c4, '0.6674647619216852'))) END);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0 IN ())) BETWEEN (((vt0.lid) ISNULL)) AND (rt1.c0 COLLATE RTRIM))) ORDER BY (+ (json_quote(rt1.c4))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) BETWEEN (((vt0.lid) ISNULL)) AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (json_quote(rt1.c4))) ASC);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0 IN ())) BETWEEN (((vt0.lid) ISNULL)) AND (rt1.c0 COLLATE RTRIM))) ORDER BY (+ (json_quote(rt1.c4))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) BETWEEN (((vt0.lid) ISNULL)) AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (json_quote(rt1.c4))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY HEX('-281893253') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY HEX('-281893253') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY HEX('-281893253') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY HEX('-281893253') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY HEX('-281893253') DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c0)IS(x'19ad'))))=((NULL)))) ORDER BY ((rt1.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS(x'19ad'))))==((NULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2) IS TRUE));
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c0)IS(x'19ad'))))=((NULL)))) ORDER BY ((rt1.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)IS(x'19ad'))))==((NULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2) IS TRUE));
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c0)IS(x'19ad'))))=((NULL)))) ORDER BY ((rt1.c2) IS TRUE);
SELECT * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (x'')))GLOB(((rt1.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c4) AND (x'')))GLOB(((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (x'')))GLOB(((rt1.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c4) AND (x'')))GLOB(((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c4) AND (x'')))GLOB(((rt1.c3) IS FALSE))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((ABS(DISTINCT x''))) AND (((~ (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((ABS(DISTINCT x''))) AND (((~ (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((ABS(DISTINCT x''))) AND (((~ (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((ABS(DISTINCT x''))) AND (((~ (rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((ABS(DISTINCT x''))) AND (((~ (rt1.c0))))));
SELECT ALL * FROM rt1 WHERE (((rt1.c2) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((+ (NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((+ (NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((+ (NULL)))));
SELECT * FROM rt1 WHERE (((((rt1.c4)==(rt1.c0)))/((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)==(rt1.c0)))/((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4)==(rt1.c0)))/((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)==(rt1.c0)))/((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4)==(rt1.c0)))/((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1)*(rt1.c4)) AS INTEGER)) ORDER BY (JULIANDAY(rt1.c4, x'', rt1.c1) IN (rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)*(rt1.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (JULIANDAY(rt1.c4, x'', rt1.c1) IN (rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1)*(rt1.c4)) AS INTEGER)) ORDER BY (JULIANDAY(rt1.c4, x'', rt1.c1) IN (rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)*(rt1.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (JULIANDAY(rt1.c4, x'', rt1.c1) IN (rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1)*(rt1.c4)) AS INTEGER)) ORDER BY (JULIANDAY(rt1.c4, x'', rt1.c1) IN (rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))<<(rt1.c4 COLLATE RTRIM))) ORDER BY (((rt1.c1 COLLATE BINARY))<>((((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))<<(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY (((rt1.c1 COLLATE BINARY))!=((((rt1.c0) NOT BETWEEN (rt1.c3) AND (x''))))));
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))<<(rt1.c4 COLLATE RTRIM))) ORDER BY (((rt1.c1 COLLATE BINARY))<>((((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))<<(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY (((rt1.c1 COLLATE BINARY))!=((((rt1.c0) NOT BETWEEN (rt1.c3) AND (x''))))));
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))<<(rt1.c4 COLLATE RTRIM))) ORDER BY (((rt1.c1 COLLATE BINARY))<>((((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))));
SELECT ALL * FROM vt0 WHERE (0.43123292964268545) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN 0xffffffffc31cf641 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((0.43123292964268545) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN 0xffffffffc31cf641 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (0.43123292964268545) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN 0xffffffffc31cf641 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((0.43123292964268545) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN 0xffffffffc31cf641 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (0.43123292964268545) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN 0xffffffffc31cf641 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, vt0.lid, rt1.c2)) BETWEEN ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS REAL), TOTAL_CHANGES())) AND ((CASE WHEN vt0.c0 THEN vt0.lid WHEN rt1.c2 THEN rt1.c0 WHEN vt0.lid THEN rt1.c4 ELSE NULL END, (('3') NOTNULL), ((rt1.c4)!=(rt1.c4)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))), rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, vt0.lid, rt1.c2)) BETWEEN ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS REAL), TOTAL_CHANGES())) AND ((CASE WHEN vt0.c0 THEN vt0.lid WHEN rt1.c2 THEN rt1.c0 WHEN vt0.lid THEN rt1.c4 ELSE NULL END, (('3') NOTNULL), ((rt1.c4)<>(rt1.c4)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))), rt1.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, vt0.lid, rt1.c2)) BETWEEN ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS REAL), TOTAL_CHANGES())) AND ((CASE WHEN vt0.c0 THEN vt0.lid WHEN rt1.c2 THEN rt1.c0 WHEN vt0.lid THEN rt1.c4 ELSE NULL END, (('3') NOTNULL), ((rt1.c4)!=(rt1.c4)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))), rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, vt0.lid, rt1.c2)) BETWEEN ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS REAL), TOTAL_CHANGES())) AND ((CASE WHEN vt0.c0 THEN vt0.lid WHEN rt1.c2 THEN rt1.c0 WHEN vt0.lid THEN rt1.c4 ELSE NULL END, (('3') NOTNULL), ((rt1.c4)<>(rt1.c4)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))), rt1.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, vt0.lid, rt1.c2)) BETWEEN ((((rt1.c3) IS TRUE), CAST(rt1.c1 AS REAL), TOTAL_CHANGES())) AND ((CASE WHEN vt0.c0 THEN vt0.lid WHEN rt1.c2 THEN rt1.c0 WHEN vt0.lid THEN rt1.c4 ELSE NULL END, (('3') NOTNULL), ((rt1.c4)!=(rt1.c4)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0))))), rt1.c2 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.lid ELSE vt0.lid END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN NULL THEN vt0.lid ELSE vt0.lid END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.lid ELSE vt0.lid END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN NULL THEN vt0.lid ELSE vt0.lid END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.lid ELSE vt0.lid END) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)!=(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)!=(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(x''))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)!=(x'')));
SELECT COUNT(*) FROM vt0, rt1 WHERE (TRIM(vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TRIM(vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TRIM(vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN (rt1.c1, '858822403'))) NOT BETWEEN (rt1.c1) AND ((+ (rt1.c3))))) ORDER BY CAST(LIKELY(DISTINCT rt1.c1) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN (rt1.c1, '858822403'))) NOT BETWEEN (rt1.c1) AND ((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(LIKELY(DISTINCT rt1.c1) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN (rt1.c1, '858822403'))) NOT BETWEEN (rt1.c1) AND ((+ (rt1.c3))))) ORDER BY CAST(LIKELY(DISTINCT rt1.c1) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN (rt1.c1, '858822403'))) NOT BETWEEN (rt1.c1) AND ((+ (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(LIKELY(DISTINCT rt1.c1) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN (rt1.c1, '858822403'))) NOT BETWEEN (rt1.c1) AND ((+ (rt1.c3))))) ORDER BY CAST(LIKELY(DISTINCT rt1.c1) AS REAL)  NULLS LAST;
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN ((((rt1.c2))>((rt1.c4)))) AND (((('!xo⩴瀸lI~'))<((rt1.c0)))))) ORDER BY (((rt1.c2)LIKE(0.44390578660722835)) IN ()) DESC, (NOT (((rt1.c4)%(rt1.c3)))), (rt1.c1 COLLATE NOCASE IN ((rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN ((((rt1.c2))>((rt1.c4)))) AND (((('!xo⩴瀸lI~'))<((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)LIKE(0.44390578660722835)) IN ()) DESC, (NOT (((rt1.c4)%(rt1.c3)))), (rt1.c1 COLLATE NOCASE IN ((rt1.c3 IN ()))));
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN ((((rt1.c2))>((rt1.c4)))) AND (((('!xo⩴瀸lI~'))<((rt1.c0)))))) ORDER BY (((rt1.c2)LIKE(0.44390578660722835)) IN ()) DESC, (NOT (((rt1.c4)%(rt1.c3)))), (rt1.c1 COLLATE NOCASE IN ((rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN ((((rt1.c2))>((rt1.c4)))) AND (((('!xo⩴瀸lI~'))<((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)LIKE(0.44390578660722835)) IN ()) DESC, (NOT (((rt1.c4)%(rt1.c3)))), (rt1.c1 COLLATE NOCASE IN ((rt1.c3 IN ()))));
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN ((((rt1.c2))>((rt1.c4)))) AND (((('!xo⩴瀸lI~'))<((rt1.c0)))))) ORDER BY (((rt1.c2)LIKE(0.44390578660722835)) IN ()) DESC, (NOT (((rt1.c4)%(rt1.c3)))), (rt1.c1 COLLATE NOCASE IN ((rt1.c3 IN ())));
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1))  WHEN ((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)) THEN 0.21659201037447118 ELSE CAST(rt1.c4 AS TEXT) END) ORDER BY ((UPPER(rt1.c2)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1))  WHEN ((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)) THEN 0.21659201037447118 ELSE CAST(rt1.c4 AS TEXT) END) IS TRUE)  as count FROM rt1 ORDER BY ((UPPER(rt1.c2)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1))  WHEN ((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)) THEN 0.21659201037447118 ELSE CAST(rt1.c4 AS TEXT) END) ORDER BY ((UPPER(rt1.c2)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1))  WHEN ((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)) THEN 0.21659201037447118 ELSE CAST(rt1.c4 AS TEXT) END) IS TRUE)  as count FROM rt1 ORDER BY ((UPPER(rt1.c2)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1))  WHEN ((((rt1.c4)AND(rt1.c1)))AND(rt1.c2)) THEN 0.21659201037447118 ELSE CAST(rt1.c4 AS TEXT) END) ORDER BY ((UPPER(rt1.c2)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND (-5.3871902E7)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND (-5.3871902E7))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND (-5.3871902E7)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND (-5.3871902E7))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (CAST(rt1.c3 AS BLOB)) AND (-5.3871902E7)));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((vt0.lid) IS FALSE))=('먆z')) WHERE ((- (rt1.c4 COLLATE NOCASE))) ORDER BY ((((rt1.c1)OR(rt1.c4)))AND(rt1.c3)) COLLATE RTRIM, x'' ASC;
SELECT SUM(count) FROM (SELECT (((- (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((vt0.lid) IS FALSE))==('먆z')) ORDER BY ((((rt1.c1)OR(rt1.c4)))AND(rt1.c3)) COLLATE RTRIM, x'' ASC);
SELECT * FROM rt1 INNER JOIN vt0 ON ((((vt0.lid) IS FALSE))=('먆z')) WHERE ((- (rt1.c4 COLLATE NOCASE))) ORDER BY ((((rt1.c1)OR(rt1.c4)))AND(rt1.c3)) COLLATE RTRIM, x'' ASC;
SELECT SUM(count) FROM (SELECT (((- (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((vt0.lid) IS FALSE))==('먆z')) ORDER BY ((((rt1.c1)OR(rt1.c4)))AND(rt1.c3)) COLLATE RTRIM, x'' ASC);
SELECT * FROM rt1 INNER JOIN vt0 ON ((((vt0.lid) IS FALSE))=('먆z')) WHERE ((- (rt1.c4 COLLATE NOCASE))) ORDER BY ((((rt1.c1)OR(rt1.c4)))AND(rt1.c3)) COLLATE RTRIM, x'' ASC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN x'' THEN 0.2132771208211599 END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN 0.2132771208211599 END) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN x'' THEN 0.2132771208211599 END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN 0.2132771208211599 END) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN x'' THEN 0.2132771208211599 END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c4)OR(1745584757)))AND(rt1.c1)))OR('')))AND(((0.3022108304691502)*(rt1.c2))))) ORDER BY (((rt1.c2 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c4)OR(1745584757)))AND(rt1.c1)))OR('')))AND(((0.3022108304691502)*(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2 IN ())) IS FALSE) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c4)OR(1745584757)))AND(rt1.c1)))OR('')))AND(((0.3022108304691502)*(rt1.c2))))) ORDER BY (((rt1.c2 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c4)OR(1745584757)))AND(rt1.c1)))OR('')))AND(((0.3022108304691502)*(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2 IN ())) IS FALSE) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c4)OR(1745584757)))AND(rt1.c1)))OR('')))AND(((0.3022108304691502)*(rt1.c2))))) ORDER BY (((rt1.c2 IN ())) IS FALSE) DESC;
SELECT * FROM vt0 WHERE (CAST(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN '*h' THEN NULL WHEN x'' THEN vt0.lid END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN '*h' THEN NULL WHEN x'' THEN vt0.lid END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN '*h' THEN NULL WHEN x'' THEN vt0.lid END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN '*h' THEN NULL WHEN x'' THEN vt0.lid END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN '*h' THEN NULL WHEN x'' THEN vt0.lid END AS TEXT));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (+ (vt0.lid COLLATE BINARY)) WHERE (((UNLIKELY(rt1.c3)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt1.c3)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (vt0.lid COLLATE BINARY)));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (+ (vt0.lid COLLATE BINARY)) WHERE (((UNLIKELY(rt1.c3)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt1.c3)) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (vt0.lid COLLATE BINARY)));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (+ (vt0.lid COLLATE BINARY)) WHERE (((UNLIKELY(rt1.c3)) IS TRUE));
SELECT * FROM rt1, vt0 WHERE (((CASE WHEN x'' THEN rt1.c4 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN rt1.c4 END) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((CASE WHEN x'' THEN rt1.c4 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN rt1.c4 END) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((CASE WHEN x'' THEN rt1.c4 END) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((vt0.lid)) BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((131191354)))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))>=(LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((131191354)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))>=(LIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((vt0.lid)) BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((131191354)))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))>=(LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid)) BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((131191354)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))>=(LIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((vt0.lid)) BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((131191354)))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))>=(LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((LOWER(rt1.c0)) NOT BETWEEN (((NULL)-(rt1.c2))) AND ('R1㨬')));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c0)) NOT BETWEEN (((NULL)-(rt1.c2))) AND ('R1㨬'))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((LOWER(rt1.c0)) NOT BETWEEN (((NULL)-(rt1.c2))) AND ('R1㨬')));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c0)) NOT BETWEEN (((NULL)-(rt1.c2))) AND ('R1㨬'))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((LOWER(rt1.c0)) NOT BETWEEN (((NULL)-(rt1.c2))) AND ('R1㨬')));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3 COLLATE BINARY, x'', rt1.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)), (rt1.c1 IN (rt1.c1))))==((((rt1.c3)<<(rt1.c2)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c2)<>(rt1.c1)), json_array(rt1.c2, rt1.c1), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))))) ORDER BY ((((((((UNLIKELY(rt1.c1))OR(rt1.c2)))AND(((NULL)-(rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c4 END)))AND(CAST(rt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 COLLATE BINARY, x'', rt1.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)), (rt1.c1 IN (rt1.c1))))=((((rt1.c3)<<(rt1.c2)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c2)<>(rt1.c1)), json_array(rt1.c2, rt1.c1), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((UNLIKELY(rt1.c1))OR(rt1.c2)))AND(((NULL)-(rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c4 END)))AND(CAST(rt1.c2 AS REAL))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3 COLLATE BINARY, x'', rt1.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)), (rt1.c1 IN (rt1.c1))))==((((rt1.c3)<<(rt1.c2)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c2)<>(rt1.c1)), json_array(rt1.c2, rt1.c1), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))))) ORDER BY ((((((((UNLIKELY(rt1.c1))OR(rt1.c2)))AND(((NULL)-(rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c4 END)))AND(CAST(rt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 COLLATE BINARY, x'', rt1.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)), (rt1.c1 IN (rt1.c1))))=((((rt1.c3)<<(rt1.c2)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c2)<>(rt1.c1)), json_array(rt1.c2, rt1.c1), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((UNLIKELY(rt1.c1))OR(rt1.c2)))AND(((NULL)-(rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c4 END)))AND(CAST(rt1.c2 AS REAL))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3 COLLATE BINARY, x'', rt1.c0 COLLATE RTRIM, ((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)), (rt1.c1 IN (rt1.c1))))==((((rt1.c3)<<(rt1.c2)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c2)<>(rt1.c1)), json_array(rt1.c2, rt1.c1), ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))))) ORDER BY ((((((((UNLIKELY(rt1.c1))OR(rt1.c2)))AND(((NULL)-(rt1.c3)))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c4 END)))AND(CAST(rt1.c2 AS REAL)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c4);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((-1.207484034E9) IS FALSE) THEN (rt1.c1 IN ()) WHEN json_array_length(rt1.c3) THEN rt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((-1.207484034E9) IS FALSE) THEN (rt1.c1 IN ()) WHEN json_array_length(rt1.c3) THEN rt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((-1.207484034E9) IS FALSE) THEN (rt1.c1 IN ()) WHEN json_array_length(rt1.c3) THEN rt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)GLOB(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((-1.207484034E9) IS FALSE) THEN (rt1.c1 IN ()) WHEN json_array_length(rt1.c3) THEN rt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) WHEN ((-1.207484034E9) IS FALSE) THEN (rt1.c1 IN ()) WHEN json_array_length(rt1.c3) THEN rt1.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (((rt1.c3)IS NOT(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c3)IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (((rt1.c3)IS NOT(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c3)IS NOT(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (((rt1.c3)IS NOT(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c3 IN (vt0.c0, rt1.c2, vt0.c0))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY (((rt1.c0) NOT NULL) IN ((~ (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c3 IN (vt0.c0, rt1.c2, vt0.c0))) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0) NOT NULL) IN ((~ (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c3 IN (vt0.c0, rt1.c2, vt0.c0))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY (((rt1.c0) NOT NULL) IN ((~ (rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c3 IN (vt0.c0, rt1.c2, vt0.c0))) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0) NOT NULL) IN ((~ (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c3 IN (vt0.c0, rt1.c2, vt0.c0))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY (((rt1.c0) NOT NULL) IN ((~ (rt1.c4))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ('G{3ha')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('G{3ha'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ('G{3ha')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('G{3ha'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ('G{3ha')));
SELECT * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c3 THEN vt0.lid WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c4 THEN -1686618767 END IN ())) ORDER BY ((rt1.c1)||(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((UPPER(rt1.c2))>>(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c3 THEN vt0.lid WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c4 THEN -1686618767 END IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1)||(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((UPPER(rt1.c2))>>(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c3 THEN vt0.lid WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c4 THEN -1686618767 END IN ())) ORDER BY ((rt1.c1)||(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((UPPER(rt1.c2))>>(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c3 THEN vt0.lid WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c4 THEN -1686618767 END IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1)||(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((UPPER(rt1.c2))>>(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c3 THEN vt0.lid WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c4 THEN -1686618767 END IN ())) ORDER BY ((rt1.c1)||(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((UPPER(rt1.c2))>>(CAST(vt0.c0 AS REAL)));
SELECT ALL * FROM vt0 WHERE (x'63f3') ORDER BY ((0.4042044810838177)>(((vt0.lid)=('1197045286')))) ASC, TRIM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END), ((((vt0.c0))=(('C,[*8wCdu'))) IN ());
SELECT SUM(count) FROM (SELECT ((x'63f3') IS TRUE)  as count FROM vt0 ORDER BY ((0.4042044810838177)>(((vt0.lid)==('1197045286')))) ASC, TRIM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END), ((((vt0.c0))==(('C,[*8wCdu'))) IN ()));
SELECT ALL * FROM vt0 WHERE (x'63f3') ORDER BY ((0.4042044810838177)>(((vt0.lid)=('1197045286')))) ASC, TRIM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END), ((((vt0.c0))=(('C,[*8wCdu'))) IN ());
SELECT SUM(count) FROM (SELECT ((x'63f3') IS TRUE)  as count FROM vt0 ORDER BY ((0.4042044810838177)>(((vt0.lid)==('1197045286')))) ASC, TRIM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END), ((((vt0.c0))==(('C,[*8wCdu'))) IN ()));
SELECT ALL * FROM vt0 WHERE (x'63f3') ORDER BY ((0.4042044810838177)>(((vt0.lid)=('1197045286')))) ASC, TRIM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.lid ELSE vt0.lid END), ((((vt0.c0))=(('C,[*8wCdu'))) IN ());
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, x'', rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (((x''))<((rt1.c4))), CAST(rt1.c0 AS INTEGER))) AND ((CAST(rt1.c4 AS REAL), ((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c4)))OR('-1379244904')), (NOT (rt1.c4)))))) ORDER BY (((((816232966) NOTNULL)))<=((((rt1.c4) BETWEEN (-842772741) AND (rt1.c3))))), rt1.c2 DESC, CASE WHEN CAST(-1.686618767E9 AS INTEGER) THEN ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, x'', rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (((x''))<((rt1.c4))), CAST(rt1.c0 AS INTEGER))) AND ((CAST(rt1.c4 AS REAL), ((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c4)))OR('-1379244904')), (NOT (rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((816232966) NOTNULL)))<=((((rt1.c4) BETWEEN (-842772741) AND (rt1.c3))))), rt1.c2 DESC, CASE WHEN CAST(-1.686618767E9 AS INTEGER) THEN ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, x'', rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (((x''))<((rt1.c4))), CAST(rt1.c0 AS INTEGER))) AND ((CAST(rt1.c4 AS REAL), ((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c4)))OR('-1379244904')), (NOT (rt1.c4)))))) ORDER BY (((((816232966) NOTNULL)))<=((((rt1.c4) BETWEEN (-842772741) AND (rt1.c3))))), rt1.c2 DESC, CASE WHEN CAST(-1.686618767E9 AS INTEGER) THEN ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, x'', rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (((x''))<((rt1.c4))), CAST(rt1.c0 AS INTEGER))) AND ((CAST(rt1.c4 AS REAL), ((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c4)))OR('-1379244904')), (NOT (rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((816232966) NOTNULL)))<=((((rt1.c4) BETWEEN (-842772741) AND (rt1.c3))))), rt1.c2 DESC, CASE WHEN CAST(-1.686618767E9 AS INTEGER) THEN ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, x'', rt1.c4)) BETWEEN ((rt1.c3 COLLATE BINARY, (((x''))<((rt1.c4))), CAST(rt1.c0 AS INTEGER))) AND ((CAST(rt1.c4 AS REAL), ((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c4)))OR('-1379244904')), (NOT (rt1.c4)))))) ORDER BY (((((816232966) NOTNULL)))<=((((rt1.c4) BETWEEN (-842772741) AND (rt1.c3))))), rt1.c2 DESC, CASE WHEN CAST(-1.686618767E9 AS INTEGER) THEN ((((rt1.c4)OR(rt1.c1)))OR(rt1.c0)) END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)))) ASC, CASE ((vt0.lid) NOTNULL)  WHEN CASE WHEN vt0.lid THEN vt0.c0 END THEN CAST(vt0.lid AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)))) ASC, CASE ((vt0.lid) NOTNULL)  WHEN CASE WHEN vt0.lid THEN vt0.c0 END THEN CAST(vt0.lid AS BLOB) END ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)))) ASC, CASE ((vt0.lid) NOTNULL)  WHEN CASE WHEN vt0.lid THEN vt0.c0 END THEN CAST(vt0.lid AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)))) ASC, CASE ((vt0.lid) NOTNULL)  WHEN CASE WHEN vt0.lid THEN vt0.c0 END THEN CAST(vt0.lid AS BLOB) END ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.lid) AND (vt0.c0)))) ASC, CASE ((vt0.lid) NOTNULL)  WHEN CASE WHEN vt0.lid THEN vt0.c0 END THEN CAST(vt0.lid AS BLOB) END ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.lid)OR(vt0.lid)))OR(NULL)) AS BLOB)) ORDER BY (((vt0.lid IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.lid)OR(vt0.lid)))OR(NULL)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid IN ())) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.lid)OR(vt0.lid)))OR(NULL)) AS BLOB)) ORDER BY (((vt0.lid IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.lid)OR(vt0.lid)))OR(NULL)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid IN ())) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.lid)OR(vt0.lid)))OR(NULL)) AS BLOB)) ORDER BY (((vt0.lid IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.lid))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.lid))) AND ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, TOTAL_CHANGES() ASC, CASE WHEN vt0.c0 COLLATE NOCASE THEN '2076501494' COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.lid))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.lid))) AND ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, TOTAL_CHANGES() ASC, CASE WHEN vt0.c0 COLLATE NOCASE THEN '2076501494' COLLATE NOCASE END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.lid))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.lid))) AND ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, TOTAL_CHANGES() ASC, CASE WHEN vt0.c0 COLLATE NOCASE THEN '2076501494' COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.lid))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.lid))) AND ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, TOTAL_CHANGES() ASC, CASE WHEN vt0.c0 COLLATE NOCASE THEN '2076501494' COLLATE NOCASE END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.lid))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.lid))) AND ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST, TOTAL_CHANGES() ASC, CASE WHEN vt0.c0 COLLATE NOCASE THEN '2076501494' COLLATE NOCASE END ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (x'2d47')) THEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE x'' END END) ORDER BY (- ((vt0.c0 IN ()))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (x'2d47')) THEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE x'' END END) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ()))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (x'2d47')) THEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE x'' END END) ORDER BY (- ((vt0.c0 IN ()))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (x'2d47')) THEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE x'' END END) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ()))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (x'2d47')) THEN ((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.lid)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 ELSE x'' END END) ORDER BY (- ((vt0.c0 IN ()))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN x'1a47' THEN vt0.lid ELSE vt0.c0 END)IS NOT(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN x'1a47' THEN vt0.lid ELSE vt0.c0 END)IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN x'1a47' THEN vt0.lid ELSE vt0.c0 END)IS NOT(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN x'1a47' THEN vt0.lid ELSE vt0.c0 END)IS NOT(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN x'1a47' THEN vt0.lid ELSE vt0.c0 END)IS NOT(((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.lid, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.lid, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.lid, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.lid, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.lid, vt0.c0) AS INTEGER));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (TYPEOF(DISTINCT ((rt1.c4) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt1.c4) NOT NULL))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (TYPEOF(DISTINCT ((rt1.c4) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt1.c4) NOT NULL))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (NOT (vt0.c0 COLLATE RTRIM)) WHERE (TYPEOF(DISTINCT ((rt1.c4) NOT NULL)));
SELECT * FROM rt1 WHERE (CAST(CASE WHEN '' THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '' THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CASE WHEN '' THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '' THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CASE WHEN '' THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END AS TEXT));
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c2 IN ()));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)/(rt1.c2)), COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c3), (+ (vt0.c0))))==((COALESCE(DISTINCT vt0.c0, rt1.c4), ((((((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c2)))OR(rt1.c1)), ((rt1.c4) IS FALSE)))) WHERE (CASE vt0.lid COLLATE BINARY  WHEN (+ (rt1.c4)) THEN vt0.c0 COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN ((rt1.c2)=(0X16f6293d)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((((((((((((rt1.c2)AND(vt0.c0)))AND(0.7410475154687208)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.lid COLLATE BINARY  WHEN (+ (rt1.c4)) THEN vt0.c0 COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN ((rt1.c2)=(0X16f6293d)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((((((((((((rt1.c2)AND(vt0.c0)))AND(0.7410475154687208)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)/(rt1.c2)), COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c3), (+ (vt0.c0))))==((COALESCE(DISTINCT vt0.c0, rt1.c4), ((((((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c2)))OR(rt1.c1)), ((rt1.c4) IS FALSE)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)/(rt1.c2)), COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c3), (+ (vt0.c0))))==((COALESCE(DISTINCT vt0.c0, rt1.c4), ((((((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c2)))OR(rt1.c1)), ((rt1.c4) IS FALSE)))) WHERE (CASE vt0.lid COLLATE BINARY  WHEN (+ (rt1.c4)) THEN vt0.c0 COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN ((rt1.c2)=(0X16f6293d)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((((((((((((rt1.c2)AND(vt0.c0)))AND(0.7410475154687208)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.lid COLLATE BINARY  WHEN (+ (rt1.c4)) THEN vt0.c0 COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN ((rt1.c2)=(0X16f6293d)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((((((((((((rt1.c2)AND(vt0.c0)))AND(0.7410475154687208)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)/(rt1.c2)), COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c3), (+ (vt0.c0))))==((COALESCE(DISTINCT vt0.c0, rt1.c4), ((((((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c2)))OR(rt1.c1)), ((rt1.c4) IS FALSE)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((((rt1.c4)/(rt1.c2)), COALESCE(rt1.c1, rt1.c2, rt1.c2, rt1.c3), (+ (vt0.c0))))==((COALESCE(DISTINCT vt0.c0, rt1.c4), ((((((((((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c2)))OR(rt1.c1)), ((rt1.c4) IS FALSE)))) WHERE (CASE vt0.lid COLLATE BINARY  WHEN (+ (rt1.c4)) THEN vt0.c0 COLLATE BINARY WHEN ((rt1.c3) IS TRUE) THEN ((rt1.c2)=(0X16f6293d)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN ((((((((((((rt1.c2)AND(vt0.c0)))AND(0.7410475154687208)))AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)) END);
SELECT * FROM rt1 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'') ISNULL));
SELECT * FROM vt0 WHERE ((+ (NULL))) ORDER BY CAST('798085104' AS BLOB) ASC, (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST('798085104' AS BLOB) ASC, (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (NULL))) ORDER BY CAST('798085104' AS BLOB) ASC, (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST('798085104' AS BLOB) ASC, (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (NULL))) ORDER BY CAST('798085104' AS BLOB) ASC, (- ((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE ((vt0.c0)OR(rt1.c3))  WHEN ((2023953730)>>(rt1.c3)) THEN (rt1.c2 IN ()) END) ORDER BY '0.46967919209080755'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(rt1.c3))  WHEN ((2023953730)>>(rt1.c3)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY '0.46967919209080755'  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE ((vt0.c0)OR(rt1.c3))  WHEN ((2023953730)>>(rt1.c3)) THEN (rt1.c2 IN ()) END) ORDER BY '0.46967919209080755'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)OR(rt1.c3))  WHEN ((2023953730)>>(rt1.c3)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY '0.46967919209080755'  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE ((vt0.c0)OR(rt1.c3))  WHEN ((2023953730)>>(rt1.c3)) THEN (rt1.c2 IN ()) END) ORDER BY '0.46967919209080755'  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT ALL * FROM rt1 WHERE (json(((((rt1.c2)OR('-2079382746')))OR(rt1.c0)))) ORDER BY ((('tJ)')) NOT BETWEEN ((CAST(rt1.c3 AS REAL))) AND ((CAST(rt1.c0 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((((rt1.c2)OR('-2079382746')))OR(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((('tJ)')) NOT BETWEEN ((CAST(rt1.c3 AS REAL))) AND ((CAST(rt1.c0 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (json(((((rt1.c2)OR('-2079382746')))OR(rt1.c0)))) ORDER BY ((('tJ)')) NOT BETWEEN ((CAST(rt1.c3 AS REAL))) AND ((CAST(rt1.c0 AS REAL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(((((rt1.c2)OR('-2079382746')))OR(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((('tJ)')) NOT BETWEEN ((CAST(rt1.c3 AS REAL))) AND ((CAST(rt1.c0 AS REAL)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (json(((((rt1.c2)OR('-2079382746')))OR(rt1.c0)))) ORDER BY ((('tJ)')) NOT BETWEEN ((CAST(rt1.c3 AS REAL))) AND ((CAST(rt1.c0 AS REAL)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD(NULL, 0.3298714697925692));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(NULL, 0.3298714697925692)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD(NULL, 0.3298714697925692));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(NULL, 0.3298714697925692)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD(NULL, 0.3298714697925692));
SELECT * FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB)) ISNULL));
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(DISTINCT 0.6789231394676023)) ORDER BY ((CAST(rt1.c1 AS INTEGER))<<(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))), (((rt1.c4)) NOT BETWEEN ((CASE WHEN rt1.c2 THEN '2012975142' ELSE rt1.c4 END)) AND (((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0.6789231394676023)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c1 AS INTEGER))<<(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))), (((rt1.c4)) NOT BETWEEN ((CASE WHEN rt1.c2 THEN '2012975142' ELSE rt1.c4 END)) AND (((vt0.lid IN ())))));
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(DISTINCT 0.6789231394676023)) ORDER BY ((CAST(rt1.c1 AS INTEGER))<<(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))), (((rt1.c4)) NOT BETWEEN ((CASE WHEN rt1.c2 THEN '2012975142' ELSE rt1.c4 END)) AND (((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0.6789231394676023)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c1 AS INTEGER))<<(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))), (((rt1.c4)) NOT BETWEEN ((CASE WHEN rt1.c2 THEN '2012975142' ELSE rt1.c4 END)) AND (((vt0.lid IN ())))));
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(DISTINCT 0.6789231394676023)) ORDER BY ((CAST(rt1.c1 AS INTEGER))<<(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))), (((rt1.c4)) NOT BETWEEN ((CASE WHEN rt1.c2 THEN '2012975142' ELSE rt1.c4 END)) AND (((vt0.lid IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((x'' IN (((rt1.c3)%(rt1.c1)), ((rt1.c3)GLOB(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((rt1.c3)%(rt1.c1)), ((rt1.c3)GLOB(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((x'' IN (((rt1.c3)%(rt1.c1)), ((rt1.c3)GLOB(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((rt1.c3)%(rt1.c1)), ((rt1.c3)GLOB(rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((x'' IN (((rt1.c3)%(rt1.c1)), ((rt1.c3)GLOB(rt1.c4)))));
SELECT * FROM rt1 WHERE (((((((((((rt1.c4)AND('554465436')))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c4))) IS TRUE)) ORDER BY ((CASE rt1.c3  WHEN NULL THEN rt1.c4 WHEN rt1.c0 THEN -1858240410 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c4)AND('554465436')))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c4))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c3  WHEN NULL THEN rt1.c4 WHEN rt1.c0 THEN -1858240410 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END) IS FALSE) ASC);
SELECT * FROM rt1 WHERE (((((((((((rt1.c4)AND('554465436')))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c4))) IS TRUE)) ORDER BY ((CASE rt1.c3  WHEN NULL THEN rt1.c4 WHEN rt1.c0 THEN -1858240410 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c4)AND('554465436')))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c4))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c3  WHEN NULL THEN rt1.c4 WHEN rt1.c0 THEN -1858240410 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END) IS FALSE) ASC);
SELECT * FROM rt1 WHERE (((((((((((rt1.c4)AND('554465436')))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c4))) IS TRUE)) ORDER BY ((CASE rt1.c3  WHEN NULL THEN rt1.c4 WHEN rt1.c0 THEN -1858240410 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END) IS FALSE) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.lid THEN 0.7928882071852893 END) BETWEEN (((((vt0.lid)OR(rt1.c1)))OR('-53871902'))) AND (((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c1)))AND('''0ey')))OR(rt1.c4)))) WHERE (((vt0.lid) BETWEEN (x'') AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) BETWEEN (x'') AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.lid THEN 0.7928882071852893 END) BETWEEN (((((vt0.lid)OR(rt1.c1)))OR('-53871902'))) AND (((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c1)))AND('''0ey')))OR(rt1.c4)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.lid THEN 0.7928882071852893 END) BETWEEN (((((vt0.lid)OR(rt1.c1)))OR('-53871902'))) AND (((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c1)))AND('''0ey')))OR(rt1.c4)))) WHERE (((vt0.lid) BETWEEN (x'') AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) BETWEEN (x'') AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.lid THEN 0.7928882071852893 END) BETWEEN (((((vt0.lid)OR(rt1.c1)))OR('-53871902'))) AND (((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c1)))AND('''0ey')))OR(rt1.c4)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.lid THEN 0.7928882071852893 END) BETWEEN (((((vt0.lid)OR(rt1.c1)))OR('-53871902'))) AND (((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c1)))AND('''0ey')))OR(rt1.c4)))) WHERE (((vt0.lid) BETWEEN (x'') AND ((NOT (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.7794893223886568) ORDER BY ((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))%(vt0.lid COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7794893223886568) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))%(vt0.lid COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.7794893223886568) ORDER BY ((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))%(vt0.lid COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7794893223886568) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))%(vt0.lid COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.7794893223886568) ORDER BY ((((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))%(vt0.lid COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.lid)==(vt0.c0)) AS INTEGER)) ORDER BY ((((((((vt0.c0)AND(CASE WHEN vt0.lid THEN vt0.lid WHEN x'418d' THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)))OR(CAST(vt0.c0 AS BLOB))))OR((- (vt0.lid)))))AND(NULL COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.lid)==(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(CASE WHEN vt0.lid THEN vt0.lid WHEN x'418d' THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)))OR(CAST(vt0.c0 AS BLOB))))OR((- (vt0.lid)))))AND(NULL COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.lid)==(vt0.c0)) AS INTEGER)) ORDER BY ((((((((vt0.c0)AND(CASE WHEN vt0.lid THEN vt0.lid WHEN x'418d' THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)))OR(CAST(vt0.c0 AS BLOB))))OR((- (vt0.lid)))))AND(NULL COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.lid)==(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(CASE WHEN vt0.lid THEN vt0.lid WHEN x'418d' THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)))OR(CAST(vt0.c0 AS BLOB))))OR((- (vt0.lid)))))AND(NULL COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.lid)==(vt0.c0)) AS INTEGER)) ORDER BY ((((((((vt0.c0)AND(CASE WHEN vt0.lid THEN vt0.lid WHEN x'418d' THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)))OR(CAST(vt0.c0 AS BLOB))))OR((- (vt0.lid)))))AND(NULL COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c3)<=(rt1.c4 COLLATE BINARY))) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.lid ELSE rt1.c4 END) NOTNULL)  NULLS LAST, LIKELY(DISTINCT ((rt1.c3)-(rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)<=(rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN vt0.lid ELSE rt1.c4 END) NOTNULL)  NULLS LAST, LIKELY(DISTINCT ((rt1.c3)-(rt1.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c3)<=(rt1.c4 COLLATE BINARY))) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.lid ELSE rt1.c4 END) NOTNULL)  NULLS LAST, LIKELY(DISTINCT ((rt1.c3)-(rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)<=(rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN vt0.lid ELSE rt1.c4 END) NOTNULL)  NULLS LAST, LIKELY(DISTINCT ((rt1.c3)-(rt1.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c3)<=(rt1.c4 COLLATE BINARY))) ORDER BY ((CASE WHEN rt1.c0 THEN vt0.lid ELSE rt1.c4 END) NOTNULL)  NULLS LAST, LIKELY(DISTINCT ((rt1.c3)-(rt1.c1))) ASC;
SELECT ALL * FROM rt1 WHERE (json_array((rt1.c2 IN (rt1.c4)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)), (- (rt1.c1)), ((rt1.c4)<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_array((rt1.c2 IN (rt1.c4)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)), (- (rt1.c1)), ((rt1.c4)<=(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (json_array((rt1.c2 IN (rt1.c4)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)), (- (rt1.c1)), ((rt1.c4)<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_array((rt1.c2 IN (rt1.c4)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)), (- (rt1.c1)), ((rt1.c4)<=(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (json_array((rt1.c2 IN (rt1.c4)), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1)), (- (rt1.c1)), ((rt1.c4)<=(rt1.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN NULLIF(vt0.c0, vt0.c0) ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN NULLIF(vt0.c0, vt0.c0) ELSE ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN NULLIF(vt0.c0, vt0.c0) ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN NULLIF(vt0.c0, vt0.c0) ELSE ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN NULLIF(vt0.c0, vt0.c0) ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT * FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NULL IN ()));
SELECT * FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END) NOTNULL)) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC);
SELECT * FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END) NOTNULL)) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC);
SELECT * FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 END) NOTNULL)) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC;
SELECT * FROM vt0 WHERE (0.03999202820230163) ORDER BY vt0.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.03999202820230163) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid  NULLS LAST);
SELECT * FROM vt0 WHERE (0.03999202820230163) ORDER BY vt0.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.03999202820230163) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid  NULLS LAST);
SELECT * FROM vt0 WHERE (0.03999202820230163) ORDER BY vt0.lid  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (rt1.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2)||(rt1.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)||(rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2)||(rt1.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)||(rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2)||(rt1.c4)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) BETWEEN (x'8601901d') AND ((vt0.c0 IN ())))) ORDER BY (((vt0.lid)) NOT BETWEEN ((((vt0.lid)>=(vt0.c0)))) AND (((((vt0.lid))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) BETWEEN (x'8601901d') AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid)) NOT BETWEEN ((((vt0.lid)>=(vt0.c0)))) AND (((((vt0.lid))<=((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) BETWEEN (x'8601901d') AND ((vt0.c0 IN ())))) ORDER BY (((vt0.lid)) NOT BETWEEN ((((vt0.lid)>=(vt0.c0)))) AND (((((vt0.lid))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) BETWEEN (x'8601901d') AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid)) NOT BETWEEN ((((vt0.lid)>=(vt0.c0)))) AND (((((vt0.lid))<=((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) BETWEEN (x'8601901d') AND ((vt0.c0 IN ())))) ORDER BY (((vt0.lid)) NOT BETWEEN ((((vt0.lid)>=(vt0.c0)))) AND (((((vt0.lid))<=((vt0.c0))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN '1064057418' THEN (((rt1.c3, rt1.c4, vt0.lid, rt1.c1, vt0.lid))<((vt0.c0, rt1.c1, vt0.lid, x'', '1870983103'))) END) ORDER BY CAST((vt0.lid IN ()) AS REAL) DESC  NULLS LAST, CAST(((rt1.c1)<<(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS INTEGER)  WHEN '1064057418' THEN (((rt1.c3, rt1.c4, vt0.lid, rt1.c1, vt0.lid))<((vt0.c0, rt1.c1, vt0.lid, x'', '1870983103'))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST((vt0.lid IN ()) AS REAL) DESC  NULLS LAST, CAST(((rt1.c1)<<(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN '1064057418' THEN (((rt1.c3, rt1.c4, vt0.lid, rt1.c1, vt0.lid))<((vt0.c0, rt1.c1, vt0.lid, x'', '1870983103'))) END) ORDER BY CAST((vt0.lid IN ()) AS REAL) DESC  NULLS LAST, CAST(((rt1.c1)<<(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS INTEGER)  WHEN '1064057418' THEN (((rt1.c3, rt1.c4, vt0.lid, rt1.c1, vt0.lid))<((vt0.c0, rt1.c1, vt0.lid, x'', '1870983103'))) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST((vt0.lid IN ()) AS REAL) DESC  NULLS LAST, CAST(((rt1.c1)<<(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE CAST(rt1.c1 AS INTEGER)  WHEN '1064057418' THEN (((rt1.c3, rt1.c4, vt0.lid, rt1.c1, vt0.lid))<((vt0.c0, rt1.c1, vt0.lid, x'', '1870983103'))) END) ORDER BY CAST((vt0.lid IN ()) AS REAL) DESC  NULLS LAST, CAST(((rt1.c1)<<(vt0.c0)) AS TEXT);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ('1064057418'))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))) AND (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ('1064057418'))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))) AND (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ('1064057418'))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))) AND (rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4 IN ('1064057418'))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))) AND (rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4 IN ('1064057418'))) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))) AND (rt1.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((x'0034')AND(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(vt0.c0))) BETWEEN (((vt0.lid) IS TRUE)) AND (LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ((((((((((((x'0034')AND(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(vt0.c0))) BETWEEN (((vt0.lid) IS TRUE)) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((x'0034')AND(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(vt0.c0))) BETWEEN (((vt0.lid) IS TRUE)) AND (LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ((((((((((((x'0034')AND(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(vt0.c0))) BETWEEN (((vt0.lid) IS TRUE)) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((x'0034')AND(vt0.lid)))AND(vt0.c0)))OR(vt0.lid)))AND(vt0.c0))) BETWEEN (((vt0.lid) IS TRUE)) AND (LAST_INSERT_ROWID())));
SELECT * FROM rt1, vt0 WHERE ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))))>((((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid)))))) ORDER BY rt1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))))>((((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT * FROM rt1, vt0 WHERE ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))))>((((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid)))))) ORDER BY rt1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))))>((((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT * FROM rt1, vt0 WHERE ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))))>((((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid)))))) ORDER BY rt1.c1 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY;
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY CASE '1514933830'  WHEN NULL THEN ((rt1.c3)-(rt1.c0)) ELSE 0.4590294587724738 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE '1514933830'  WHEN NULL THEN ((rt1.c3)-(rt1.c0)) ELSE 0.4590294587724738 END DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY CASE '1514933830'  WHEN NULL THEN ((rt1.c3)-(rt1.c0)) ELSE 0.4590294587724738 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE '1514933830'  WHEN NULL THEN ((rt1.c3)-(rt1.c0)) ELSE 0.4590294587724738 END DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY CASE '1514933830'  WHEN NULL THEN ((rt1.c3)-(rt1.c0)) ELSE 0.4590294587724738 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (CAST(vt0.lid AS BLOB)))) ORDER BY (- (rt1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.lid AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (rt1.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (CAST(vt0.lid AS BLOB)))) ORDER BY (- (rt1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.lid AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (rt1.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (CAST(vt0.lid AS BLOB)))) ORDER BY (- (rt1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.lid COLLATE RTRIM)AND(CASE rt1.c1  WHEN rt1.c2 THEN NULL END)))OR(CAST(rt1.c2 AS NUMERIC))) WHERE (((ABS(DISTINCT x'')) NOT BETWEEN (CASE WHEN rt1.c0 THEN 'ᩥd㬙t' ELSE rt1.c2 END) AND ((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT x'')) NOT BETWEEN (CASE WHEN rt1.c0 THEN 'ᩥd㬙t' ELSE rt1.c2 END) AND ((NOT (rt1.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.lid COLLATE RTRIM)AND(CASE rt1.c1  WHEN rt1.c2 THEN NULL END)))OR(CAST(rt1.c2 AS NUMERIC))));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.lid COLLATE RTRIM)AND(CASE rt1.c1  WHEN rt1.c2 THEN NULL END)))OR(CAST(rt1.c2 AS NUMERIC))) WHERE (((ABS(DISTINCT x'')) NOT BETWEEN (CASE WHEN rt1.c0 THEN 'ᩥd㬙t' ELSE rt1.c2 END) AND ((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT x'')) NOT BETWEEN (CASE WHEN rt1.c0 THEN 'ᩥd㬙t' ELSE rt1.c2 END) AND ((NOT (rt1.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.lid COLLATE RTRIM)AND(CASE rt1.c1  WHEN rt1.c2 THEN NULL END)))OR(CAST(rt1.c2 AS NUMERIC))));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.lid COLLATE RTRIM)AND(CASE rt1.c1  WHEN rt1.c2 THEN NULL END)))OR(CAST(rt1.c2 AS NUMERIC))) WHERE (((ABS(DISTINCT x'')) NOT BETWEEN (CASE WHEN rt1.c0 THEN 'ᩥd㬙t' ELSE rt1.c2 END) AND ((NOT (rt1.c3)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.lid) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.lid) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.lid) NOTNULL));
SELECT ALL * FROM vt0, rt1 WHERE (('hbQX' IN ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('hbQX' IN ((- (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (('hbQX' IN ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((('hbQX' IN ((- (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (('hbQX' IN ((- (rt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((1.350667853E9)) AND ((rt1.c3))))=(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c1))))) ORDER BY ABS(rt1.c0) COLLATE BINARY  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) NOT BETWEEN ((1.350667853E9)) AND ((rt1.c3))))==(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ABS(rt1.c0) COLLATE BINARY  NULLS FIRST, NULL);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((1.350667853E9)) AND ((rt1.c3))))=(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c1))))) ORDER BY ABS(rt1.c0) COLLATE BINARY  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) NOT BETWEEN ((1.350667853E9)) AND ((rt1.c3))))==(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ABS(rt1.c0) COLLATE BINARY  NULLS FIRST, NULL);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((1.350667853E9)) AND ((rt1.c3))))=(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c1))))) ORDER BY ABS(rt1.c0) COLLATE BINARY  NULLS FIRST, NULL;
SELECT COUNT(*) FROM vt0 WHERE ((((('')OR(vt0.lid)))OR(vt0.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(vt0.lid)))OR(vt0.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('')OR(vt0.lid)))OR(vt0.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(vt0.lid)))OR(vt0.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('')OR(vt0.lid)))OR(vt0.lid)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((~ (0Xffffffffbcbf6d74))) ORDER BY (((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0Xffffffffbcbf6d74))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY (((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((~ (0Xffffffffbcbf6d74))) ORDER BY (((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0Xffffffffbcbf6d74))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY (((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((~ (0Xffffffffbcbf6d74))) ORDER BY (((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN ()) DESC;
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (798085104))) ORDER BY ((rt1.c4)AND(rt1.c4)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (798085104))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c4)AND(rt1.c4)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (798085104))) ORDER BY ((rt1.c4)AND(rt1.c4)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (798085104))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c4)AND(rt1.c4)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (798085104))) ORDER BY ((rt1.c4)AND(rt1.c4)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN '0.6648746270141074' THEN (((rt1.c1, rt1.c0, NULL)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND (('-737773803', rt1.c0, rt1.c2))) WHEN (vt0.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) WHEN ((rt1.c1)*(vt0.lid)) THEN CAST(vt0.lid AS REAL) END WHERE (((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN '0.6648746270141074' THEN (((rt1.c1, rt1.c0, NULL)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND (('-737773803', rt1.c0, rt1.c2))) WHEN (vt0.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) WHEN ((rt1.c1)*(vt0.lid)) THEN CAST(vt0.lid AS REAL) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN '0.6648746270141074' THEN (((rt1.c1, rt1.c0, NULL)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND (('-737773803', rt1.c0, rt1.c2))) WHEN (vt0.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) WHEN ((rt1.c1)*(vt0.lid)) THEN CAST(vt0.lid AS REAL) END WHERE (((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN '0.6648746270141074' THEN (((rt1.c1, rt1.c0, NULL)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND (('-737773803', rt1.c0, rt1.c2))) WHEN (vt0.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) WHEN ((rt1.c1)*(vt0.lid)) THEN CAST(vt0.lid AS REAL) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CASE WHEN '0.6648746270141074' THEN (((rt1.c1, rt1.c0, NULL)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND (('-737773803', rt1.c0, rt1.c2))) WHEN (vt0.c0 IN ()) THEN CAST(rt1.c2 AS NUMERIC) WHEN ((rt1.c1)*(vt0.lid)) THEN CAST(vt0.lid AS REAL) END WHERE (((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((NOT (x''))) ORDER BY (UNLIKELY(DISTINCT rt1.c4) IN ()) DESC, CAST((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt0.lid))) AS INTEGER) ASC, ((LIKELIHOOD(rt1.c2, 0.07400709217418744))&((NOT (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (UNLIKELY(DISTINCT rt1.c4) IN ()) DESC, CAST((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt0.lid))) AS INTEGER) ASC, ((LIKELIHOOD(rt1.c2, 0.07400709217418744))&((NOT (rt1.c0)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((NOT (x''))) ORDER BY (UNLIKELY(DISTINCT rt1.c4) IN ()) DESC, CAST((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt0.lid))) AS INTEGER) ASC, ((LIKELIHOOD(rt1.c2, 0.07400709217418744))&((NOT (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (UNLIKELY(DISTINCT rt1.c4) IN ()) DESC, CAST((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt0.lid))) AS INTEGER) ASC, ((LIKELIHOOD(rt1.c2, 0.07400709217418744))&((NOT (rt1.c0)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((NOT (x''))) ORDER BY (UNLIKELY(DISTINCT rt1.c4) IN ()) DESC, CAST((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt0.lid))) AS INTEGER) ASC, ((LIKELIHOOD(rt1.c2, 0.07400709217418744))&((NOT (rt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)==(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY HEX(DISTINCT ((((vt0.c0)AND(vt0.lid)))AND(vt0.lid))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((((vt0.c0)AND(vt0.lid)))AND(vt0.lid))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)==(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY HEX(DISTINCT ((((vt0.c0)AND(vt0.lid)))AND(vt0.lid))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((((vt0.c0)AND(vt0.lid)))AND(vt0.lid))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)==(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY HEX(DISTINCT ((((vt0.c0)AND(vt0.lid)))AND(vt0.lid))) ASC;
SELECT * FROM rt1, vt0 WHERE (vt0.lid) ORDER BY CAST(json_extract(vt0.c0, rt1.c3) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(json_extract(vt0.c0, rt1.c3) AS BLOB));
SELECT * FROM rt1, vt0 WHERE (vt0.lid) ORDER BY CAST(json_extract(vt0.c0, rt1.c3) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(json_extract(vt0.c0, rt1.c3) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0))  WHEN CAST(rt1.c3 AS NUMERIC) THEN ((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) WHEN rt1.c0 THEN '2076501494' WHEN rt1.c4 THEN LIKELIHOOD(rt1.c0, 0.2571002390431726) ELSE CASE WHEN rt1.c3 THEN rt1.c2 END END) ORDER BY ((rt1.c2)AND(rt1.c1)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0))  WHEN CAST(rt1.c3 AS NUMERIC) THEN ((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) WHEN rt1.c0 THEN '2076501494' WHEN rt1.c4 THEN LIKELIHOOD(rt1.c0, 0.2571002390431726) ELSE CASE WHEN rt1.c3 THEN rt1.c2 END END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)AND(rt1.c1)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0))  WHEN CAST(rt1.c3 AS NUMERIC) THEN ((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) WHEN rt1.c0 THEN '2076501494' WHEN rt1.c4 THEN LIKELIHOOD(rt1.c0, 0.2571002390431726) ELSE CASE WHEN rt1.c3 THEN rt1.c2 END END) ORDER BY ((rt1.c2)AND(rt1.c1)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0))  WHEN CAST(rt1.c3 AS NUMERIC) THEN ((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) WHEN rt1.c0 THEN '2076501494' WHEN rt1.c4 THEN LIKELIHOOD(rt1.c0, 0.2571002390431726) ELSE CASE WHEN rt1.c3 THEN rt1.c2 END END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)AND(rt1.c1)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c0))  WHEN CAST(rt1.c3 AS NUMERIC) THEN ((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) WHEN rt1.c0 THEN '2076501494' WHEN rt1.c4 THEN LIKELIHOOD(rt1.c0, 0.2571002390431726) ELSE CASE WHEN rt1.c3 THEN rt1.c2 END END) ORDER BY ((rt1.c2)AND(rt1.c1)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((('')|(CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c4 END))) ORDER BY ((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')|(CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((('')|(CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c4 END))) ORDER BY ((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')|(CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((('')|(CASE WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c4 END))) ORDER BY ((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.lid)OR(x'')))AND(vt0.lid)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)OR(x'')))AND(vt0.lid)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.lid)OR(x'')))AND(vt0.lid)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)OR(x'')))AND(vt0.lid)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.lid)OR(x'')))AND(vt0.lid)))LIKE(vt0.c0)));
SELECT * FROM vt0 INNER JOIN rt1 ON (((rt1.c0, vt0.c0, vt0.c0)) BETWEEN (((rt1.c3 IN (vt0.lid, 2.02395373E9)), (0Xffffffffe5aad21b IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c3)))OR(vt0.lid)))AND(1.7976931348623157E308)), ((rt1.c2) ISNULL)))) WHERE ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt0.c0)) IN ())) ORDER BY ((((((((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)))AND(NULL)))OR(((rt1.c0)<=(vt0.lid)))))AND(((rt1.c3) IS TRUE))))AND((+ (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c0, vt0.c0, vt0.c0)) BETWEEN (((rt1.c3 IN (vt0.lid, 2.02395373E9)), (0Xffffffffe5aad21b IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c3)))OR(vt0.lid)))AND(1.7976931348623157E308)), ((rt1.c2) ISNULL)))) ORDER BY ((((((((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)))AND(NULL)))OR(((rt1.c0)<=(vt0.lid)))))AND(((rt1.c3) IS TRUE))))AND((+ (rt1.c2)))) ASC);
SELECT * FROM vt0 INNER JOIN rt1 ON (((rt1.c0, vt0.c0, vt0.c0)) BETWEEN (((rt1.c3 IN (vt0.lid, 2.02395373E9)), (0Xffffffffe5aad21b IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c3)))OR(vt0.lid)))AND(1.7976931348623157E308)), ((rt1.c2) ISNULL)))) WHERE ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt0.c0)) IN ())) ORDER BY ((((((((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)))AND(NULL)))OR(((rt1.c0)<=(vt0.lid)))))AND(((rt1.c3) IS TRUE))))AND((+ (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c0, vt0.c0, vt0.c0)) BETWEEN (((rt1.c3 IN (vt0.lid, 2.02395373E9)), (0Xffffffffe5aad21b IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c3)))OR(vt0.lid)))AND(1.7976931348623157E308)), ((rt1.c2) ISNULL)))) ORDER BY ((((((((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)))AND(NULL)))OR(((rt1.c0)<=(vt0.lid)))))AND(((rt1.c3) IS TRUE))))AND((+ (rt1.c2)))) ASC);
SELECT * FROM vt0 INNER JOIN rt1 ON (((rt1.c0, vt0.c0, vt0.c0)) BETWEEN (((rt1.c3 IN (vt0.lid, 2.02395373E9)), (0Xffffffffe5aad21b IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)) AND (((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))), ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c3)))OR(vt0.lid)))AND(1.7976931348623157E308)), ((rt1.c2) ISNULL)))) WHERE ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt0.c0)) IN ())) ORDER BY ((((((((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)))AND(NULL)))OR(((rt1.c0)<=(vt0.lid)))))AND(((rt1.c3) IS TRUE))))AND((+ (rt1.c2)))) ASC;
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c3)!=(rt1.c4)))AND((rt1.c0 IN ()))))OR(((rt1.c4) IS FALSE)))) ORDER BY ((json_object(rt1.c2, rt1.c0, vt0.c0, rt1.c2))%(vt0.c0 COLLATE RTRIM)) ASC, UNLIKELY(CASE WHEN vt0.lid THEN vt0.lid ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)!=(rt1.c4)))AND((rt1.c0 IN ()))))OR(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((json_object(rt1.c2, rt1.c0, vt0.c0, rt1.c2))%(vt0.c0 COLLATE RTRIM)) ASC, UNLIKELY(CASE WHEN vt0.lid THEN vt0.lid ELSE rt1.c2 END));
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c3)!=(rt1.c4)))AND((rt1.c0 IN ()))))OR(((rt1.c4) IS FALSE)))) ORDER BY ((json_object(rt1.c2, rt1.c0, vt0.c0, rt1.c2))%(vt0.c0 COLLATE RTRIM)) ASC, UNLIKELY(CASE WHEN vt0.lid THEN vt0.lid ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)!=(rt1.c4)))AND((rt1.c0 IN ()))))OR(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((json_object(rt1.c2, rt1.c0, vt0.c0, rt1.c2))%(vt0.c0 COLLATE RTRIM)) ASC, UNLIKELY(CASE WHEN vt0.lid THEN vt0.lid ELSE rt1.c2 END));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) IS FALSE))<((rt1.c0 IN ())))) ORDER BY ((0.294455291064594) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))<((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((0.294455291064594) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) IS FALSE))<((rt1.c0 IN ())))) ORDER BY ((0.294455291064594) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))<((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((0.294455291064594) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) IS FALSE))<((rt1.c0 IN ())))) ORDER BY ((0.294455291064594) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c4)OR(0.5340652411149395)))AND(rt1.c4))) IS TRUE) WHERE ((rt1.c1 IN (json_extract(rt1.c4, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (json_extract(rt1.c4, rt1.c3)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c4)OR(0.5340652411149395)))AND(rt1.c4))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c4)OR(0.5340652411149395)))AND(rt1.c4))) IS TRUE) WHERE ((rt1.c1 IN (json_extract(rt1.c4, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (json_extract(rt1.c4, rt1.c3)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((rt1.c4)OR(0.5340652411149395)))AND(rt1.c4))) IS TRUE));
SELECT * FROM vt0 WHERE (((((vt0.lid)-(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.lid) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid)-(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.lid) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.lid)-(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.lid) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid)-(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.lid) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.lid)-(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.lid) IS TRUE))));
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c4)GLOB(rt1.c0))) NOT BETWEEN (9.19010116E8) AND ((NULL IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)GLOB(rt1.c0))) NOT BETWEEN (9.19010116E8) AND ((NULL IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c4)GLOB(rt1.c0))) NOT BETWEEN (9.19010116E8) AND ((NULL IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)GLOB(rt1.c0))) NOT BETWEEN (9.19010116E8) AND ((NULL IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY ((((rt1.c4)GLOB(rt1.c0))) NOT BETWEEN (9.19010116E8) AND ((NULL IN ()))) DESC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0))>((rt1.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))>((rt1.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0))>((rt1.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))>((rt1.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0))>((rt1.c3))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((RTRIM(vt0.lid)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt0.lid)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((RTRIM(vt0.lid)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt0.lid)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((RTRIM(vt0.lid)) IS FALSE));
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 IN ()) IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c4) NOT NULL)) NOT NULL) WHERE ((vt0.c0 IN ())) ORDER BY NULL ASC, x''  NULLS FIRST, CAST(((vt0.c0)AND(rt1.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((rt1.c4) NOT NULL)) NOT NULL) ORDER BY NULL ASC, x''  NULLS FIRST, CAST(((vt0.c0)AND(rt1.c2)) AS REAL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c4) NOT NULL)) NOT NULL) WHERE ((vt0.c0 IN ())) ORDER BY NULL ASC, x''  NULLS FIRST, CAST(((vt0.c0)AND(rt1.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((rt1.c4) NOT NULL)) NOT NULL) ORDER BY NULL ASC, x''  NULLS FIRST, CAST(((vt0.c0)AND(rt1.c2)) AS REAL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c4) NOT NULL)) NOT NULL) WHERE ((vt0.c0 IN ())) ORDER BY NULL ASC, x''  NULLS FIRST, CAST(((vt0.c0)AND(rt1.c2)) AS REAL);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (ABS(DISTINCT ((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION());
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (ABS(DISTINCT ((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION());
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (ABS(DISTINCT ((rt1.c4) BETWEEN (rt1.c1) AND (vt0.lid))));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) IS FALSE) WHERE ((((((rt1.c3, vt0.lid, rt1.c2)) NOT BETWEEN ((vt0.lid, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c0, rt1.c1))))+(SQLITE_SOURCE_ID()))) ORDER BY (NULL IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3, vt0.lid, rt1.c2)) NOT BETWEEN ((vt0.lid, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c0, rt1.c1))))+(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) IS FALSE) ORDER BY (NULL IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) IS FALSE) WHERE ((((((rt1.c3, vt0.lid, rt1.c2)) NOT BETWEEN ((vt0.lid, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c0, rt1.c1))))+(SQLITE_SOURCE_ID()))) ORDER BY (NULL IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3, vt0.lid, rt1.c2)) NOT BETWEEN ((vt0.lid, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c0, rt1.c1))))+(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) IS FALSE) ORDER BY (NULL IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c1) ISNULL)) IS FALSE) WHERE ((((((rt1.c3, vt0.lid, rt1.c2)) NOT BETWEEN ((vt0.lid, rt1.c4, rt1.c2)) AND ((rt1.c3, rt1.c0, rt1.c1))))+(SQLITE_SOURCE_ID()))) ORDER BY (NULL IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((UNICODE(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((UNICODE(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((UNICODE(rt1.c0)) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)))));
SELECT * FROM vt0 NOT INDEXED WHERE (TYPEOF(DISTINCT vt0.lid COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt0.lid COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (TYPEOF(DISTINCT vt0.lid COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt0.lid COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (TYPEOF(DISTINCT vt0.lid COLLATE NOCASE));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CASE x''  WHEN rt1.c1 THEN '2012975142' WHEN rt1.c0 THEN x'' WHEN vt0.lid THEN rt1.c2 END)<((((rt1.c2))>((''))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt1.c1 THEN '2012975142' WHEN rt1.c0 THEN x'' WHEN vt0.lid THEN rt1.c2 END)<((((rt1.c2))>(('')))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CASE x''  WHEN rt1.c1 THEN '2012975142' WHEN rt1.c0 THEN x'' WHEN vt0.lid THEN rt1.c2 END)<((((rt1.c2))>((''))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt1.c1 THEN '2012975142' WHEN rt1.c0 THEN x'' WHEN vt0.lid THEN rt1.c2 END)<((((rt1.c2))>(('')))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CASE x''  WHEN rt1.c1 THEN '2012975142' WHEN rt1.c0 THEN x'' WHEN vt0.lid THEN rt1.c2 END)<((((rt1.c2))>((''))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (0.7918874943183773)) WHERE ((((((((((vt0.lid IN ()))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2)))OR(vt0.c0))) ORDER BY INSTR((((rt1.c0))>=((vt0.c0))), (+ (6.46523508E8)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.lid IN ()))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2)))OR(vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (0.7918874943183773)) ORDER BY INSTR((((rt1.c0))>=((vt0.c0))), (+ (6.46523508E8))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (0.7918874943183773)) WHERE ((((((((((vt0.lid IN ()))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2)))OR(vt0.c0))) ORDER BY INSTR((((rt1.c0))>=((vt0.c0))), (+ (6.46523508E8)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.lid IN ()))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2)))OR(vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (0.7918874943183773)) ORDER BY INSTR((((rt1.c0))>=((vt0.c0))), (+ (6.46523508E8))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON (+ (0.7918874943183773)) WHERE ((((((((((vt0.lid IN ()))OR(rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2)))OR(vt0.c0))) ORDER BY INSTR((((rt1.c0))>=((vt0.c0))), (+ (6.46523508E8)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (load_extension(''))));
SELECT SUM(count) FROM (SELECT (((- (load_extension('')))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (load_extension(''))));
SELECT SUM(count) FROM (SELECT (((- (load_extension('')))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)=(rt1.c3)))AND(((rt1.c4) IS TRUE))))AND((rt1.c0 IN (rt1.c2, rt1.c0)))))AND(((rt1.c1) NOT BETWEEN ('') AND (rt1.c3)))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)=(rt1.c3)))AND(((rt1.c4) IS TRUE))))AND((rt1.c0 IN (rt1.c2, rt1.c0)))))AND(((rt1.c1) NOT BETWEEN ('') AND (rt1.c3)))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)=(rt1.c3)))AND(((rt1.c4) IS TRUE))))AND((rt1.c0 IN (rt1.c2, rt1.c0)))))AND(((rt1.c1) NOT BETWEEN ('') AND (rt1.c3)))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)=(rt1.c3)))AND(((rt1.c4) IS TRUE))))AND((rt1.c0 IN (rt1.c2, rt1.c0)))))AND(((rt1.c1) NOT BETWEEN ('') AND (rt1.c3)))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0)=(rt1.c3)))AND(((rt1.c4) IS TRUE))))AND((rt1.c0 IN (rt1.c2, rt1.c0)))))AND(((rt1.c1) NOT BETWEEN ('') AND (rt1.c3)))))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c2)AND(rt1.c1)))) AND ((((rt1.c2)<<(rt1.c0)))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((rt1.c2)AND(rt1.c1)))) AND ((((rt1.c2)<<(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (NULL IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c2)AND(rt1.c1)))) AND ((((rt1.c2)<<(rt1.c0)))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((rt1.c2)AND(rt1.c1)))) AND ((((rt1.c2)<<(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (NULL IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c2)AND(rt1.c1)))) AND ((((rt1.c2)<<(rt1.c0)))))) ORDER BY (NULL IN ());
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CAST((rt1.c3 IN (x'')) AS TEXT) WHERE (CAST(TRIM(DISTINCT rt1.c0, vt0.lid) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt1.c0, vt0.lid) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CAST((rt1.c3 IN (x'')) AS TEXT));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CAST((rt1.c3 IN (x'')) AS TEXT) WHERE (CAST(TRIM(DISTINCT rt1.c0, vt0.lid) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt1.c0, vt0.lid) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON CAST((rt1.c3 IN (x'')) AS TEXT));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON CAST((rt1.c3 IN (x'')) AS TEXT) WHERE (CAST(TRIM(DISTINCT rt1.c0, vt0.lid) AS TEXT));
SELECT ALL * FROM vt0 WHERE ((('2012975142') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('2012975142') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2012975142') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('2012975142') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2012975142') IS TRUE));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(((rt1.c4)==(rt1.c0))) WHERE (x'424d');
SELECT SUM(count) FROM (SELECT ALL ((x'424d') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(((rt1.c4)=(rt1.c0))));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(((rt1.c4)==(rt1.c0))) WHERE (x'424d');
SELECT SUM(count) FROM (SELECT ALL ((x'424d') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(((rt1.c4)=(rt1.c0))));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON LIKELY(((rt1.c4)==(rt1.c0))) WHERE (x'424d');
SELECT * FROM vt0 WHERE (CAST((((vt0.lid, vt0.c0, vt0.c0))>=((vt0.lid, vt0.lid, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.lid, vt0.c0, vt0.c0))>=((vt0.lid, vt0.lid, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.lid, vt0.c0, vt0.c0))>=((vt0.lid, vt0.lid, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.lid, vt0.c0, vt0.c0))>=((vt0.lid, vt0.lid, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.lid, vt0.c0, vt0.c0))>=((vt0.lid, vt0.lid, vt0.c0))) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.lid COLLATE RTRIM)));
SELECT * FROM vt0, rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN NULL THEN (+ (x'')) WHEN ((((((((rt1.c0)OR(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))OR(rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c3 END END) ORDER BY ((rt1.c4)==(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN NULL THEN (+ (x'')) WHEN ((((((((rt1.c0)OR(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))OR(rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c3 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c4)=(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN NULL THEN (+ (x'')) WHEN ((((((((rt1.c0)OR(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))OR(rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c3 END END) ORDER BY ((rt1.c4)==(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN NULL THEN (+ (x'')) WHEN ((((((((rt1.c0)OR(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))OR(rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c3 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c4)=(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN CAST(rt1.c2 AS TEXT) WHEN NULL THEN (+ (x'')) WHEN ((((((((rt1.c0)OR(vt0.c0)))AND(vt0.lid)))AND(vt0.c0)))OR(rt1.c3)) THEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c3 END END) ORDER BY ((rt1.c4)==(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 NOT INDEXED WHERE (SQLITE_SOURCE_ID()) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt1 NOT INDEXED WHERE (SQLITE_SOURCE_ID()) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt1 NOT INDEXED WHERE (SQLITE_SOURCE_ID()) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((((vt0.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0)))));
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c3)))<('-100515772'))) ORDER BY json_array_length(((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c3)))<('-100515772'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_array_length(((NULL) IS TRUE)));
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c3)))<('-100515772'))) ORDER BY json_array_length(((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c3)))<('-100515772'))) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_array_length(((NULL) IS TRUE)));
SELECT * FROM rt1, vt0 WHERE (((((((((((rt1.c3)AND(rt1.c0)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c3)))<('-100515772'))) ORDER BY json_array_length(((NULL) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE RTRIM, ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0 COLLATE RTRIM, ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE RTRIM, ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0 COLLATE RTRIM, ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (IFNULL(DISTINCT vt0.c0 COLLATE RTRIM, ((rt1.c1) IS TRUE)));
SELECT * FROM vt0 WHERE (TRIM(DISTINCT vt0.c0, x'6260') COLLATE BINARY) ORDER BY LIKELY(DISTINCT (+ (vt0.c0))) DESC, CAST(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0, x'6260') COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT (+ (vt0.c0))) DESC, CAST(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT vt0.c0, x'6260') COLLATE BINARY) ORDER BY LIKELY(DISTINCT (+ (vt0.c0))) DESC, CAST(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0, x'6260') COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT (+ (vt0.c0))) DESC, CAST(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT vt0.c0, x'6260') COLLATE BINARY) ORDER BY LIKELY(DISTINCT (+ (vt0.c0))) DESC, CAST(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE ((- (rt1.c1))) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((- (rt1.c1))) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((- (rt1.c1))) ORDER BY CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 END IN ()));
SELECT COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY (+ ((((vt0.lid, rt1.c3, vt0.lid))<>((rt1.c4, rt1.c0, vt0.c0))))), (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 END IN (((vt0.lid)||(vt0.lid)), (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((0.31130253093594495))))) ASC, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ ((((vt0.lid, rt1.c3, vt0.lid))!=((rt1.c4, rt1.c0, vt0.c0))))), (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 END IN (((vt0.lid)||(vt0.lid)), (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((0.31130253093594495))))) ASC, x'' ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY (+ ((((vt0.lid, rt1.c3, vt0.lid))<>((rt1.c4, rt1.c0, vt0.c0))))), (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 END IN (((vt0.lid)||(vt0.lid)), (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((0.31130253093594495))))) ASC, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ ((((vt0.lid, rt1.c3, vt0.lid))!=((rt1.c4, rt1.c0, vt0.c0))))), (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 END IN (((vt0.lid)||(vt0.lid)), (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((0.31130253093594495))))) ASC, x'' ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (NULL) ORDER BY (+ ((((vt0.lid, rt1.c3, vt0.lid))<>((rt1.c4, rt1.c0, vt0.c0))))), (CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 END IN (((vt0.lid)||(vt0.lid)), (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((0.31130253093594495))))) ASC, x'' ASC;
SELECT ALL * FROM vt0 WHERE (CAST((vt0.lid IN ()) AS NUMERIC)) ORDER BY (((((vt0.lid))<=((x''))))<<(('385231165' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.lid IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid))<=((x''))))<<(('385231165' IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.lid IN ()) AS NUMERIC)) ORDER BY (((((vt0.lid))<=((x''))))<<(('385231165' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.lid IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid))<=((x''))))<<(('385231165' IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE (CAST((vt0.lid IN ()) AS NUMERIC)) ORDER BY (((((vt0.lid))<=((x''))))<<(('385231165' IN ()))) ASC;
SELECT * FROM rt1, vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c4)))AND(1514933830)))OR(rt1.c2)))AND(((rt1.c4)<(rt1.c2)))))AND(((vt0.lid) ISNULL)))) ORDER BY (~ ((((vt0.lid, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c2)) AND ((x'', rt1.c0, rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c4)))AND(1514933830)))OR(rt1.c2)))AND(((rt1.c4)<(rt1.c2)))))AND(((vt0.lid) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ ((((vt0.lid, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c2)) AND ((x'', rt1.c0, rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c4)))AND(1514933830)))OR(rt1.c2)))AND(((rt1.c4)<(rt1.c2)))))AND(((vt0.lid) ISNULL)))) ORDER BY (~ ((((vt0.lid, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c2)) AND ((x'', rt1.c0, rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c4)))AND(1514933830)))OR(rt1.c2)))AND(((rt1.c4)<(rt1.c2)))))AND(((vt0.lid) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ ((((vt0.lid, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c2)) AND ((x'', rt1.c0, rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c4)))AND(1514933830)))OR(rt1.c2)))AND(((rt1.c4)<(rt1.c2)))))AND(((vt0.lid) ISNULL)))) ORDER BY (~ ((((vt0.lid, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c2)) AND ((x'', rt1.c0, rt1.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c2)OR(rt1.c2))  WHEN ((rt1.c0)-(NULL)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)) THEN ((rt1.c3) NOT NULL) WHEN x'' THEN NULLIF(rt1.c3, rt1.c0) ELSE ((rt1.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)OR(rt1.c2))  WHEN ((rt1.c0)-(NULL)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)) THEN ((rt1.c3) NOT NULL) WHEN x'' THEN NULLIF(rt1.c3, rt1.c0) ELSE ((rt1.c3) ISNULL) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c2)OR(rt1.c2))  WHEN ((rt1.c0)-(NULL)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)) THEN ((rt1.c3) NOT NULL) WHEN x'' THEN NULLIF(rt1.c3, rt1.c0) ELSE ((rt1.c3) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)OR(rt1.c2))  WHEN ((rt1.c0)-(NULL)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)) THEN ((rt1.c3) NOT NULL) WHEN x'' THEN NULLIF(rt1.c3, rt1.c0) ELSE ((rt1.c3) ISNULL) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c2)OR(rt1.c2))  WHEN ((rt1.c0)-(NULL)) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)) THEN ((rt1.c3) NOT NULL) WHEN x'' THEN NULLIF(rt1.c3, rt1.c0) ELSE ((rt1.c3) ISNULL) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.lid)))OR(vt0.lid)))))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.lid)))OR(vt0.lid)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.lid)))OR(vt0.lid)))))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.lid)))OR(vt0.lid)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.lid)))OR(vt0.lid)))))AND((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((x'')OR(vt0.lid COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))) ASC, (((vt0.c0 IN (vt0.c0, vt0.lid))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END) AND (-9.86048338E8));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(vt0.lid COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))) ASC, (((vt0.c0 IN (vt0.c0, vt0.lid))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END) AND (-9.86048338E8)));
SELECT * FROM vt0 WHERE (((((x'')OR(vt0.lid COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))) ASC, (((vt0.c0 IN (vt0.c0, vt0.lid))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END) AND (-9.86048338E8));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(vt0.lid COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))) ASC, (((vt0.c0 IN (vt0.c0, vt0.lid))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END) AND (-9.86048338E8)));
SELECT * FROM vt0 WHERE (((((x'')OR(vt0.lid COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))) ASC, (((vt0.c0 IN (vt0.c0, vt0.lid))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 END) AND (-9.86048338E8));
SELECT * FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c3)))OR(rt1.c2)))<=((rt1.c1 IN ())))) ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN ((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c2)) WHEN rt1.c4 THEN rt1.c1 WHEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) THEN -384190633 END  NULLS LAST, CASE (rt1.c0 IN (rt1.c0))  WHEN '2095061605' COLLATE BINARY THEN IFNULL(rt1.c2, rt1.c4) ELSE (('699442877') BETWEEN (rt1.c0) AND (rt1.c2)) END DESC  NULLS FIRST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c2)))<=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN ((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c2)) WHEN rt1.c4 THEN rt1.c1 WHEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) THEN -384190633 END  NULLS LAST, CASE (rt1.c0 IN (rt1.c0))  WHEN '2095061605' COLLATE BINARY THEN IFNULL(rt1.c2, rt1.c4) ELSE (('699442877') BETWEEN (rt1.c0) AND (rt1.c2)) END DESC  NULLS FIRST, rt1.c0);
SELECT * FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c3)))OR(rt1.c2)))<=((rt1.c1 IN ())))) ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN ((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c2)) WHEN rt1.c4 THEN rt1.c1 WHEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) THEN -384190633 END  NULLS LAST, CASE (rt1.c0 IN (rt1.c0))  WHEN '2095061605' COLLATE BINARY THEN IFNULL(rt1.c2, rt1.c4) ELSE (('699442877') BETWEEN (rt1.c0) AND (rt1.c2)) END DESC  NULLS FIRST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c2)))<=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN ((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c2)) WHEN rt1.c4 THEN rt1.c1 WHEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) THEN -384190633 END  NULLS LAST, CASE (rt1.c0 IN (rt1.c0))  WHEN '2095061605' COLLATE BINARY THEN IFNULL(rt1.c2, rt1.c4) ELSE (('699442877') BETWEEN (rt1.c0) AND (rt1.c2)) END DESC  NULLS FIRST, rt1.c0);
SELECT * FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c3)))OR(rt1.c2)))<=((rt1.c1 IN ())))) ORDER BY CASE WHEN CAST(NULL AS BLOB) THEN ((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c2)) WHEN rt1.c4 THEN rt1.c1 WHEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)) THEN -384190633 END  NULLS LAST, CASE (rt1.c0 IN (rt1.c0))  WHEN '2095061605' COLLATE BINARY THEN IFNULL(rt1.c2, rt1.c4) ELSE (('699442877') BETWEEN (rt1.c0) AND (rt1.c2)) END DESC  NULLS FIRST, rt1.c0;
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) IN ()) WHERE ((((+ (vt0.lid)))&(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid)))&(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) IN ()) WHERE ((((+ (vt0.lid)))&(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid)))&(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) IN ()) WHERE ((((+ (vt0.lid)))&(CAST(rt1.c3 AS BLOB))));
SELECT * FROM rt1 WHERE ('-1202277743');
SELECT SUM(count) FROM (SELECT (('-1202277743') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('-1202277743');
SELECT SUM(count) FROM (SELECT (('-1202277743') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('-1202277743');
SELECT COUNT(*) FROM rt1, vt0 WHERE (((vt0.lid)LIKE(rt1.c4)) COLLATE NOCASE) ORDER BY 'K7''KqBU㴞'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid)LIKE(rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'K7''KqBU㴞'  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((vt0.lid)LIKE(rt1.c4)) COLLATE NOCASE) ORDER BY 'K7''KqBU㴞'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid)LIKE(rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY 'K7''KqBU㴞'  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((vt0.lid)LIKE(rt1.c4)) COLLATE NOCASE) ORDER BY 'K7''KqBU㴞'  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((vt0.c0, rt1.c2, rt1.c0)) BETWEEN (((((rt1.c4, rt1.c1, rt1.c2))<((530316597, rt1.c4, vt0.lid))), ((rt1.c2)==(vt0.c0)), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((((vt0.c0) NOTNULL), CAST(vt0.lid AS NUMERIC), ((rt1.c0)==(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c2, rt1.c0)) BETWEEN (((((rt1.c4, rt1.c1, rt1.c2))<((530316597, rt1.c4, vt0.lid))), ((rt1.c2)==(vt0.c0)), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((((vt0.c0) NOTNULL), CAST(vt0.lid AS NUMERIC), ((rt1.c0)=(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((vt0.c0, rt1.c2, rt1.c0)) BETWEEN (((((rt1.c4, rt1.c1, rt1.c2))<((530316597, rt1.c4, vt0.lid))), ((rt1.c2)==(vt0.c0)), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((((vt0.c0) NOTNULL), CAST(vt0.lid AS NUMERIC), ((rt1.c0)==(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c2, rt1.c0)) BETWEEN (((((rt1.c4, rt1.c1, rt1.c2))<((530316597, rt1.c4, vt0.lid))), ((rt1.c2)==(vt0.c0)), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((((vt0.c0) NOTNULL), CAST(vt0.lid AS NUMERIC), ((rt1.c0)=(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((vt0.c0, rt1.c2, rt1.c0)) BETWEEN (((((rt1.c4, rt1.c1, rt1.c2))<((530316597, rt1.c4, vt0.lid))), ((rt1.c2)==(vt0.c0)), (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))) AND ((((vt0.c0) NOTNULL), CAST(vt0.lid AS NUMERIC), ((rt1.c0)==(rt1.c2))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.lid)))||(vt0.c0 COLLATE NOCASE))) ORDER BY CHANGES();
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.lid)))||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES());
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.lid)))||(vt0.c0 COLLATE NOCASE))) ORDER BY CHANGES();
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.lid)))||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES());
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.lid)))||(vt0.c0 COLLATE NOCASE))) ORDER BY CHANGES();
SELECT * FROM rt1, vt0 WHERE ((((~ (rt1.c2))) BETWEEN (((((((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c4)))AND(vt0.lid)))OR(vt0.lid)))OR(rt1.c2))) AND (rt1.c0))) ORDER BY rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) BETWEEN (((((((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c4)))AND(vt0.lid)))OR(vt0.lid)))OR(rt1.c2))) AND (rt1.c0))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0 DESC);
SELECT * FROM rt1, vt0 WHERE ((((~ (rt1.c2))) BETWEEN (((((((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c4)))AND(vt0.lid)))OR(vt0.lid)))OR(rt1.c2))) AND (rt1.c0))) ORDER BY rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) BETWEEN (((((((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c4)))AND(vt0.lid)))OR(vt0.lid)))OR(rt1.c2))) AND (rt1.c0))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0 DESC);
SELECT * FROM rt1, vt0 WHERE ((((~ (rt1.c2))) BETWEEN (((((((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c4)))AND(vt0.lid)))OR(vt0.lid)))OR(rt1.c2))) AND (rt1.c0))) ORDER BY rt1.c0 DESC;
SELECT ALL * FROM vt0, rt1 WHERE ((((+ (rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((+ (rt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((+ (rt1.c1))) IS TRUE));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1)))) BETWEEN (rt1.c4 COLLATE RTRIM) AND (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1)))) BETWEEN (rt1.c4 COLLATE RTRIM) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1)))) BETWEEN (rt1.c4 COLLATE RTRIM) AND (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1)))) BETWEEN (rt1.c4 COLLATE RTRIM) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1)))) BETWEEN (rt1.c4 COLLATE RTRIM) AND (NULL COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON (((((((vt0.c0)AND(rt1.c4)))AND(vt0.c0))))=(((+ (rt1.c0))))) WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2)==(rt1.c2)))) AND ((((vt0.lid)*(rt1.c4)))))) ORDER BY CASE '1042613363'  WHEN rt1.c3 COLLATE RTRIM THEN (vt0.lid IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c2)==(rt1.c2)))) AND ((((vt0.lid)*(rt1.c4)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((((((vt0.c0)AND(rt1.c4)))AND(vt0.c0))))=(((+ (rt1.c0))))) ORDER BY CASE '1042613363'  WHEN rt1.c3 COLLATE RTRIM THEN (vt0.lid IN ()) END);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON (((((((vt0.c0)AND(rt1.c4)))AND(vt0.c0))))=(((+ (rt1.c0))))) WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2)==(rt1.c2)))) AND ((((vt0.lid)*(rt1.c4)))))) ORDER BY CASE '1042613363'  WHEN rt1.c3 COLLATE RTRIM THEN (vt0.lid IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c2)==(rt1.c2)))) AND ((((vt0.lid)*(rt1.c4)))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((((((vt0.c0)AND(rt1.c4)))AND(vt0.c0))))=(((+ (rt1.c0))))) ORDER BY CASE '1042613363'  WHEN rt1.c3 COLLATE RTRIM THEN (vt0.lid IN ()) END);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON (((((((vt0.c0)AND(rt1.c4)))AND(vt0.c0))))=(((+ (rt1.c0))))) WHERE ((((rt1.c2)) BETWEEN ((((rt1.c2)==(rt1.c2)))) AND ((((vt0.lid)*(rt1.c4)))))) ORDER BY CASE '1042613363'  WHEN rt1.c3 COLLATE RTRIM THEN (vt0.lid IN ()) END;
SELECT * FROM rt1 WHERE ((((rt1.c0)) BETWEEN (((+ (rt1.c2)))) AND ((rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((+ (rt1.c2)))) AND ((rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0)) BETWEEN (((+ (rt1.c2)))) AND ((rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((+ (rt1.c2)))) AND ((rt1.c4)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0)) BETWEEN (((+ (rt1.c2)))) AND ((rt1.c4))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN rt1.c3 THEN 0.11463080963154748 END, ((vt0.lid) BETWEEN (rt1.c3) AND (rt1.c3)), (('-19303250') BETWEEN (rt1.c2) AND (rt1.c2)), 0.11323401743805317))<((CAST(rt1.c2 AS INTEGER), '-384190633', ((vt0.lid)<<(rt1.c4)), ((rt1.c3) IS TRUE), ((((rt1.c3)OR(vt0.lid)))OR(rt1.c1))))) WHERE (((((((vt0.lid)*(vt0.lid)))AND(CAST(rt1.c1 AS INTEGER))))AND((rt1.c1 IN ())))) ORDER BY CASE WHEN vt0.lid THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE, rt1.c3  NULLS LAST, (((rt1.c3 COLLATE RTRIM, CAST(rt1.c0 AS INTEGER), vt0.c0 COLLATE RTRIM))<((((0.15073299437654641) NOTNULL), ((((((((vt0.c0)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c4)))AND(vt0.c0)), rt1.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)*(vt0.lid)))AND(CAST(rt1.c1 AS INTEGER))))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN rt1.c3 THEN 0.11463080963154748 END, ((vt0.lid) BETWEEN (rt1.c3) AND (rt1.c3)), (('-19303250') BETWEEN (rt1.c2) AND (rt1.c2)), 0.11323401743805317))<((CAST(rt1.c2 AS INTEGER), '-384190633', ((vt0.lid)<<(rt1.c4)), ((rt1.c3) IS TRUE), ((((rt1.c3)OR(vt0.lid)))OR(rt1.c1))))) ORDER BY CASE WHEN vt0.lid THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE, rt1.c3  NULLS LAST, (((rt1.c3 COLLATE RTRIM, CAST(rt1.c0 AS INTEGER), vt0.c0 COLLATE RTRIM))<((((0.15073299437654641) NOTNULL), ((((((((vt0.c0)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c4)))AND(vt0.c0)), rt1.c4))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN rt1.c3 THEN 0.11463080963154748 END, ((vt0.lid) BETWEEN (rt1.c3) AND (rt1.c3)), (('-19303250') BETWEEN (rt1.c2) AND (rt1.c2)), 0.11323401743805317))<((CAST(rt1.c2 AS INTEGER), '-384190633', ((vt0.lid)<<(rt1.c4)), ((rt1.c3) IS TRUE), ((((rt1.c3)OR(vt0.lid)))OR(rt1.c1))))) WHERE (((((((vt0.lid)*(vt0.lid)))AND(CAST(rt1.c1 AS INTEGER))))AND((rt1.c1 IN ())))) ORDER BY CASE WHEN vt0.lid THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE, rt1.c3  NULLS LAST, (((rt1.c3 COLLATE RTRIM, CAST(rt1.c0 AS INTEGER), vt0.c0 COLLATE RTRIM))<((((0.15073299437654641) NOTNULL), ((((((((vt0.c0)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c4)))AND(vt0.c0)), rt1.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)*(vt0.lid)))AND(CAST(rt1.c1 AS INTEGER))))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN rt1.c3 THEN 0.11463080963154748 END, ((vt0.lid) BETWEEN (rt1.c3) AND (rt1.c3)), (('-19303250') BETWEEN (rt1.c2) AND (rt1.c2)), 0.11323401743805317))<((CAST(rt1.c2 AS INTEGER), '-384190633', ((vt0.lid)<<(rt1.c4)), ((rt1.c3) IS TRUE), ((((rt1.c3)OR(vt0.lid)))OR(rt1.c1))))) ORDER BY CASE WHEN vt0.lid THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE, rt1.c3  NULLS LAST, (((rt1.c3 COLLATE RTRIM, CAST(rt1.c0 AS INTEGER), vt0.c0 COLLATE RTRIM))<((((0.15073299437654641) NOTNULL), ((((((((vt0.c0)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c4)))AND(vt0.c0)), rt1.c4))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((CASE WHEN vt0.c0 THEN vt0.lid ELSE NULL END, CASE vt0.c0  WHEN rt1.c3 THEN 0.11463080963154748 END, ((vt0.lid) BETWEEN (rt1.c3) AND (rt1.c3)), (('-19303250') BETWEEN (rt1.c2) AND (rt1.c2)), 0.11323401743805317))<((CAST(rt1.c2 AS INTEGER), '-384190633', ((vt0.lid)<<(rt1.c4)), ((rt1.c3) IS TRUE), ((((rt1.c3)OR(vt0.lid)))OR(rt1.c1))))) WHERE (((((((vt0.lid)*(vt0.lid)))AND(CAST(rt1.c1 AS INTEGER))))AND((rt1.c1 IN ())))) ORDER BY CASE WHEN vt0.lid THEN rt1.c0 ELSE vt0.c0 END COLLATE NOCASE, rt1.c3  NULLS LAST, (((rt1.c3 COLLATE RTRIM, CAST(rt1.c0 AS INTEGER), vt0.c0 COLLATE RTRIM))<((((0.15073299437654641) NOTNULL), ((((((((vt0.c0)AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c4)))AND(vt0.c0)), rt1.c4))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD((rt1.c3 IN ()), 0.9148071923047443));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c3 IN ()), 0.9148071923047443)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD((rt1.c3 IN ()), 0.9148071923047443));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt1.c3 IN ()), 0.9148071923047443)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD((rt1.c3 IN ()), 0.9148071923047443));
SELECT COUNT(*) FROM rt1, vt0 WHERE (708916756);
SELECT SUM(count) FROM (SELECT ((708916756) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (708916756);
SELECT SUM(count) FROM (SELECT ((708916756) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (708916756);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END COLLATE BINARY) ORDER BY CAST(CASE NULL  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END AS INTEGER)  NULLS FIRST, (((vt0.c0 IN ()))||(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE NULL  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END AS INTEGER)  NULLS FIRST, (((vt0.c0 IN ()))||(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END COLLATE BINARY) ORDER BY CAST(CASE NULL  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END AS INTEGER)  NULLS FIRST, (((vt0.c0 IN ()))||(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE NULL  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END AS INTEGER)  NULLS FIRST, (((vt0.c0 IN ()))||(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.lid  WHEN vt0.c0 THEN vt0.lid END COLLATE BINARY) ORDER BY CAST(CASE NULL  WHEN vt0.lid THEN vt0.lid ELSE vt0.lid END AS INTEGER)  NULLS FIRST, (((vt0.c0 IN ()))||(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY (CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)-(vt0.lid))) NOTNULL) WHERE (((rt1.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)-(vt0.lid))) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)-(vt0.lid))) NOTNULL) WHERE (((rt1.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)-(vt0.lid))) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c3)-(vt0.lid))) NOTNULL) WHERE (((rt1.c2) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid))<=((vt0.c0))))<=(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.lid))<=((vt0.c0))))<=(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid))<=((vt0.c0))))<=(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.lid))<=((vt0.c0))))<=(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid))<=((vt0.c0))))<=(((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.lid) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt0.lid) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.lid) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt0.lid) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.lid) ISNULL)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CAST(rt1.c3 AS BLOB))OR(CAST(rt1.c4 AS BLOB))))OR(GLOB(rt1.c2, NULL)))) ORDER BY vt0.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c3 AS BLOB))OR(CAST(rt1.c4 AS BLOB))))OR(GLOB(rt1.c2, NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY vt0.lid  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CAST(rt1.c3 AS BLOB))OR(CAST(rt1.c4 AS BLOB))))OR(GLOB(rt1.c2, NULL)))) ORDER BY vt0.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c3 AS BLOB))OR(CAST(rt1.c4 AS BLOB))))OR(GLOB(rt1.c2, NULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY vt0.lid  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CAST(rt1.c3 AS BLOB))OR(CAST(rt1.c4 AS BLOB))))OR(GLOB(rt1.c2, NULL)))) ORDER BY vt0.lid  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.lid COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.lid COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.lid COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.lid COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.lid COLLATE NOCASE AS REAL));
SELECT ALL * FROM vt0 WHERE ((('2145362383')<(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((('2145362383')<(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2145362383')<(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((('2145362383')<(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2145362383')<(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(x'' AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY (- ('428789084')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (- ('428789084')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY (- ('428789084')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (- ('428789084')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY (- ('428789084')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c2 AS REAL) IN (((rt1.c4)!=(rt1.c0))))) ORDER BY CASE WHEN UNICODE(rt1.c2) THEN (rt1.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS REAL) IN (((rt1.c4)!=(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN UNICODE(rt1.c2) THEN (rt1.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c2 AS REAL) IN (((rt1.c4)!=(rt1.c0))))) ORDER BY CASE WHEN UNICODE(rt1.c2) THEN (rt1.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS REAL) IN (((rt1.c4)!=(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN UNICODE(rt1.c2) THEN (rt1.c0 IN ()) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c2 AS REAL) IN (((rt1.c4)!=(rt1.c0))))) ORDER BY CASE WHEN UNICODE(rt1.c2) THEN (rt1.c0 IN ()) END DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL)) ORDER BY CAST((~ (rt1.c4)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST((~ (rt1.c4)) AS NUMERIC) ASC);
SELECT ALL * FROM rt1 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL)) ORDER BY CAST((~ (rt1.c4)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST((~ (rt1.c4)) AS NUMERIC) ASC);
SELECT ALL * FROM rt1 WHERE (((((x'') NOT BETWEEN (rt1.c3) AND (rt1.c4))) NOT NULL)) ORDER BY CAST((~ (rt1.c4)) AS NUMERIC) ASC;
SELECT * FROM rt1 WHERE (((rt1.c3)/(rt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)/(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3)/(rt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)/(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3)/(rt1.c3)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((~ (rt1.c1)))OR(((((((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))OR('403734132')))OR(vt0.lid)))OR(rt1.c3)))OR(rt1.c3))))) ORDER BY ((CAST(vt0.lid AS TEXT)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))OR(((((((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))OR('403734132')))OR(vt0.lid)))OR(rt1.c3)))OR(rt1.c3))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.lid AS TEXT)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((~ (rt1.c1)))OR(((((((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))OR('403734132')))OR(vt0.lid)))OR(rt1.c3)))OR(rt1.c3))))) ORDER BY ((CAST(vt0.lid AS TEXT)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))OR(((((((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))OR('403734132')))OR(vt0.lid)))OR(rt1.c3)))OR(rt1.c3))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.lid AS TEXT)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((~ (rt1.c1)))OR(((((((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c3)))OR('403734132')))OR(vt0.lid)))OR(rt1.c3)))OR(rt1.c3))))) ORDER BY ((CAST(vt0.lid AS TEXT)) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(rt1.c3 AS INTEGER) WHERE ((~ (1485366247)));
SELECT SUM(count) FROM (SELECT ALL (((~ (1485366247))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(rt1.c3 AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(rt1.c3 AS INTEGER) WHERE ((~ (1485366247)));
SELECT SUM(count) FROM (SELECT ALL (((~ (1485366247))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(rt1.c3 AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CAST(rt1.c3 AS INTEGER) WHERE ((~ (1485366247)));
SELECT * FROM vt0 WHERE (((0X50818e4d) IS FALSE)) ORDER BY (NOT (vt0.lid))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x50818e4d) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.lid))  NULLS LAST);
SELECT * FROM vt0 WHERE (((0X50818e4d) IS FALSE)) ORDER BY (NOT (vt0.lid))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x50818e4d) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.lid))  NULLS LAST);
SELECT * FROM vt0 WHERE (((0X50818e4d) IS FALSE)) ORDER BY (NOT (vt0.lid))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))IS(((vt0.lid)*(vt0.c0))))) ORDER BY ((((vt0.lid) NOTNULL))+(CASE WHEN vt0.lid THEN NULL ELSE vt0.lid END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))IS(((vt0.lid)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid) NOTNULL))+(CASE WHEN vt0.lid THEN NULL ELSE vt0.lid END)) DESC);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))IS(((vt0.lid)*(vt0.c0))))) ORDER BY ((((vt0.lid) NOTNULL))+(CASE WHEN vt0.lid THEN NULL ELSE vt0.lid END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))IS(((vt0.lid)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid) NOTNULL))+(CASE WHEN vt0.lid THEN NULL ELSE vt0.lid END)) DESC);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))IS(((vt0.lid)*(vt0.c0))))) ORDER BY ((((vt0.lid) NOTNULL))+(CASE WHEN vt0.lid THEN NULL ELSE vt0.lid END)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((ABS(rt1.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c2)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((ABS(rt1.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c2)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((ABS(rt1.c2)) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c4) NOTNULL)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ((((rt1.c1)OR(vt0.lid)))OR(vt0.c0)) ELSE (rt1.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ((((rt1.c1)OR(vt0.lid)))OR(vt0.c0)) ELSE (rt1.c2 IN ()) END DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c4) NOTNULL)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ((((rt1.c1)OR(vt0.lid)))OR(vt0.c0)) ELSE (rt1.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ((((rt1.c1)OR(vt0.lid)))OR(vt0.c0)) ELSE (rt1.c2 IN ()) END DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c4) NOTNULL)) ORDER BY CASE WHEN rt1.c2 COLLATE BINARY THEN ((((rt1.c1)OR(vt0.lid)))OR(vt0.c0)) ELSE (rt1.c2 IN ()) END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN (((vt0.lid))!=((vt0.c0))) WHEN (((vt0.lid)) NOT BETWEEN (('q')) AND (('G聦/B묖d'))) THEN x'' WHEN UNLIKELY(vt0.lid) THEN LIKELIHOOD(DISTINCT vt0.lid, 0.8597402887196822) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN (((vt0.lid))!=((vt0.c0))) WHEN (((vt0.lid)) NOT BETWEEN (('q')) AND (('G聦/B묖d'))) THEN x'' WHEN UNLIKELY(vt0.lid) THEN LIKELIHOOD(DISTINCT vt0.lid, 0.8597402887196822) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN (((vt0.lid))!=((vt0.c0))) WHEN (((vt0.lid)) NOT BETWEEN (('q')) AND (('G聦/B묖d'))) THEN x'' WHEN UNLIKELY(vt0.lid) THEN LIKELIHOOD(DISTINCT vt0.lid, 0.8597402887196822) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN (((vt0.lid))!=((vt0.c0))) WHEN (((vt0.lid)) NOT BETWEEN (('q')) AND (('G聦/B묖d'))) THEN x'' WHEN UNLIKELY(vt0.lid) THEN LIKELIHOOD(DISTINCT vt0.lid, 0.8597402887196822) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN (((vt0.lid))!=((vt0.c0))) WHEN (((vt0.lid)) NOT BETWEEN (('q')) AND (('G聦/B묖d'))) THEN x'' WHEN UNLIKELY(vt0.lid) THEN LIKELIHOOD(DISTINCT vt0.lid, 0.8597402887196822) END);
SELECT * FROM vt0 WHERE (x'3757') ORDER BY (((((((vt0.lid, vt0.lid, vt0.lid))>=((vt0.lid, vt0.lid, vt0.c0))))OR(CAST(0.9613372672683276 AS BLOB))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'3757') IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.lid, vt0.lid, vt0.lid))>=((vt0.lid, vt0.lid, vt0.c0))))OR(CAST(0.9613372672683276 AS BLOB))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid)))) ASC);
SELECT * FROM vt0 WHERE (x'3757') ORDER BY (((((((vt0.lid, vt0.lid, vt0.lid))>=((vt0.lid, vt0.lid, vt0.c0))))OR(CAST(0.9613372672683276 AS BLOB))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'3757') IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.lid, vt0.lid, vt0.lid))>=((vt0.lid, vt0.lid, vt0.c0))))OR(CAST(0.9613372672683276 AS BLOB))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid)))) ASC);
SELECT * FROM vt0 WHERE (x'3757') ORDER BY (((((((vt0.lid, vt0.lid, vt0.lid))>=((vt0.lid, vt0.lid, vt0.c0))))OR(CAST(0.9613372672683276 AS BLOB))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid)))) ASC;
SELECT * FROM vt0, rt1 WHERE ('0h') ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (LIKELY(rt1.c0)) AND ((rt1.c3 IN ()))), INSTR(((rt1.c2)%(rt1.c1)), (rt1.c3 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0h') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (LIKELY(rt1.c0)) AND ((rt1.c3 IN ()))), INSTR(((rt1.c2)%(rt1.c1)), (rt1.c3 IN ())) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ('0h') ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (LIKELY(rt1.c0)) AND ((rt1.c3 IN ()))), INSTR(((rt1.c2)%(rt1.c1)), (rt1.c3 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0h') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (LIKELY(rt1.c0)) AND ((rt1.c3 IN ()))), INSTR(((rt1.c2)%(rt1.c1)), (rt1.c3 IN ())) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ('0h') ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (LIKELY(rt1.c0)) AND ((rt1.c3 IN ()))), INSTR(((rt1.c2)%(rt1.c1)), (rt1.c3 IN ())) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (json_extract(vt0.c0, vt0.lid)))) ORDER BY vt0.lid ASC  NULLS LAST, ((((vt0.c0) ISNULL)) IS TRUE) DESC, ((((vt0.c0)IS NOT(vt0.lid))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (json_extract(vt0.c0, vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid ASC  NULLS LAST, ((((vt0.c0) ISNULL)) IS TRUE) DESC, ((((vt0.c0)IS NOT(vt0.lid))) NOT NULL) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (json_extract(vt0.c0, vt0.lid)))) ORDER BY vt0.lid ASC  NULLS LAST, ((((vt0.c0) ISNULL)) IS TRUE) DESC, ((((vt0.c0)IS NOT(vt0.lid))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (json_extract(vt0.c0, vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid ASC  NULLS LAST, ((((vt0.c0) ISNULL)) IS TRUE) DESC, ((((vt0.c0)IS NOT(vt0.lid))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) IS FALSE));
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN (((rt1.c1)+(vt0.lid))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (((rt1.c1)+(vt0.lid))) AND (NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN (((rt1.c1)+(vt0.lid))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (((rt1.c1)+(vt0.lid))) AND (NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN (((rt1.c1)+(vt0.lid))) AND (NULL)));
SELECT * FROM vt0, rt1 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((- (vt0.c0)));
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.lid IN ()) THEN (~ (vt0.lid)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.lid IN ()) THEN (~ (vt0.lid)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.lid IN ()) THEN (~ (vt0.lid)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.lid IN ()) THEN (~ (vt0.lid)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.lid IN ()) THEN (~ (vt0.lid)) END);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(((vt0.lid)+(vt0.lid)))))AND((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x''))))))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(((vt0.lid)+(vt0.lid)))))AND((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x''))))))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(((vt0.lid)+(vt0.lid)))))AND((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x''))))))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(((vt0.lid)+(vt0.lid)))))AND((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x''))))))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(((vt0.lid)+(vt0.lid)))))AND((((vt0.lid)) BETWEEN ((vt0.c0)) AND ((x''))))))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1)>>(rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)>>(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1)>>(rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)>>(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c1)>>(rt1.c2)) AS INTEGER));
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (LTRIM(0.612863994085941 COLLATE RTRIM, (rt1.c1 IN (rt1.c3, rt1.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(0.612863994085941 COLLATE RTRIM, (rt1.c1 IN (rt1.c3, rt1.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (LTRIM(0.612863994085941 COLLATE RTRIM, (rt1.c1 IN (rt1.c3, rt1.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(0.612863994085941 COLLATE RTRIM, (rt1.c1 IN (rt1.c3, rt1.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (LTRIM(0.612863994085941 COLLATE RTRIM, (rt1.c1 IN (rt1.c3, rt1.c1, vt0.c0))));
SELECT * FROM rt1 WHERE ((+ ((NOT (rt1.c2))))) ORDER BY ((((rt1.c0)||(rt1.c0)))<<(((('''N2[aJwe')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)||(rt1.c0)))<<(((('''N2[aJwe')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ((NOT (rt1.c2))))) ORDER BY ((((rt1.c0)||(rt1.c0)))<<(((('''N2[aJwe')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)||(rt1.c0)))<<(((('''N2[aJwe')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ((NOT (rt1.c2))))) ORDER BY ((((rt1.c0)||(rt1.c0)))<<(((('''N2[aJwe')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT ALL * FROM rt1 WHERE (0.7619704082392535) ORDER BY (((rt1.c3)IS(rt1.c4)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7619704082392535) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)IS(rt1.c4)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (0.7619704082392535) ORDER BY (((rt1.c3)IS(rt1.c4)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7619704082392535) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3)IS(rt1.c4)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (0.7619704082392535) ORDER BY (((rt1.c3)IS(rt1.c4)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c4) BETWEEN ('') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4) BETWEEN ('') AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c4) BETWEEN ('') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c4) BETWEEN ('') AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c4) BETWEEN ('') AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1)=(vt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt1.c4 END))) ORDER BY '619547080' ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)=(vt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '619547080' ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1)=(vt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt1.c4 END))) ORDER BY '619547080' ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)=(vt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '619547080' ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1)=(vt0.c0)))OR(rt1.c3 COLLATE BINARY)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt1.c4 END))) ORDER BY '619547080' ASC;
SELECT * FROM rt1, vt0 WHERE (IFNULL(SQLITE_COMPILEOPTION_USED(vt0.c0), CAST(vt0.lid AS INTEGER))) ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c3)OR(vt0.lid)))AND(rt1.c2)) ELSE HEX(DISTINCT rt1.c3) END;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(SQLITE_COMPILEOPTION_USED(vt0.c0), CAST(vt0.lid AS INTEGER))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c3)OR(vt0.lid)))AND(rt1.c2)) ELSE HEX(DISTINCT rt1.c3) END);
SELECT * FROM rt1, vt0 WHERE (IFNULL(SQLITE_COMPILEOPTION_USED(vt0.c0), CAST(vt0.lid AS INTEGER))) ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c3)OR(vt0.lid)))AND(rt1.c2)) ELSE HEX(DISTINCT rt1.c3) END;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(SQLITE_COMPILEOPTION_USED(vt0.c0), CAST(vt0.lid AS INTEGER))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c3)OR(vt0.lid)))AND(rt1.c2)) ELSE HEX(DISTINCT rt1.c3) END);
SELECT * FROM rt1, vt0 WHERE (IFNULL(SQLITE_COMPILEOPTION_USED(vt0.c0), CAST(vt0.lid AS INTEGER))) ORDER BY CASE WHEN rt1.c4 THEN ((((rt1.c3)OR(vt0.lid)))AND(rt1.c2)) ELSE HEX(DISTINCT rt1.c3) END;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=('1887375943')))<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=('1887375943')))<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=('1887375943')))<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=('1887375943')))<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=('1887375943')))<(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (CAST('K(~N7p|Bs' AS REAL)) AND (CASE WHEN 0.021535156918733422 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (CAST('K(~N7p|Bs' AS REAL)) AND (CASE WHEN 0.021535156918733422 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (CAST('K(~N7p|Bs' AS REAL)) AND (CASE WHEN 0.021535156918733422 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (CAST('K(~N7p|Bs' AS REAL)) AND (CASE WHEN 0.021535156918733422 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (CAST('K(~N7p|Bs' AS REAL)) AND (CASE WHEN 0.021535156918733422 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0) NOTNULL)  WHEN ((2.012975142E9) BETWEEN (rt1.c0) AND (vt0.lid)) THEN UNLIKELY(rt1.c2) END) ORDER BY (~ (((rt1.c0)*(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) NOTNULL)  WHEN ((2.012975142E9) BETWEEN (rt1.c0) AND (vt0.lid)) THEN UNLIKELY(rt1.c2) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (~ (((rt1.c0)*(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0) NOTNULL)  WHEN ((2.012975142E9) BETWEEN (rt1.c0) AND (vt0.lid)) THEN UNLIKELY(rt1.c2) END) ORDER BY (~ (((rt1.c0)*(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) NOTNULL)  WHEN ((2.012975142E9) BETWEEN (rt1.c0) AND (vt0.lid)) THEN UNLIKELY(rt1.c2) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (~ (((rt1.c0)*(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0) NOTNULL)  WHEN ((2.012975142E9) BETWEEN (rt1.c0) AND (vt0.lid)) THEN UNLIKELY(rt1.c2) END) ORDER BY (~ (((rt1.c0)*(rt1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY UNLIKELY(((vt0.lid)AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(((vt0.lid)AND(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY UNLIKELY(((vt0.lid)AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(((vt0.lid)AND(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY UNLIKELY(((vt0.lid)AND(vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c4 AS TEXT)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c4 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c4 AS TEXT)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c4 AS TEXT))));
SELECT ALL * FROM rt1 WHERE (CAST(HEX(rt1.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(rt1.c2) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(HEX(rt1.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(rt1.c2) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(HEX(rt1.c2) AS TEXT));
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c4);
SELECT COUNT(*) FROM rt1 WHERE ((((0.35730351456016574, ((rt1.c4)/('1080644141')), (rt1.c0 IN ())))>=((((rt1.c2) IS FALSE), CAST(rt1.c4 AS REAL), ((rt1.c4) BETWEEN (rt1.c0) AND ('-238643952')))))) ORDER BY (((0.32429062424704214 IN ())) NOT BETWEEN ((('*Y') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.35730351456016574, ((rt1.c4)/('1080644141')), (rt1.c0 IN ())))>=((((rt1.c2) IS FALSE), CAST(rt1.c4 AS REAL), ((rt1.c4) BETWEEN (rt1.c0) AND ('-238643952')))))) IS TRUE)  as count FROM rt1 ORDER BY (((0.32429062424704214 IN ())) NOT BETWEEN ((('*Y') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((0.35730351456016574, ((rt1.c4)/('1080644141')), (rt1.c0 IN ())))>=((((rt1.c2) IS FALSE), CAST(rt1.c4 AS REAL), ((rt1.c4) BETWEEN (rt1.c0) AND ('-238643952')))))) ORDER BY (((0.32429062424704214 IN ())) NOT BETWEEN ((('*Y') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.35730351456016574, ((rt1.c4)/('1080644141')), (rt1.c0 IN ())))>=((((rt1.c2) IS FALSE), CAST(rt1.c4 AS REAL), ((rt1.c4) BETWEEN (rt1.c0) AND ('-238643952')))))) IS TRUE)  as count FROM rt1 ORDER BY (((0.32429062424704214 IN ())) NOT BETWEEN ((('*Y') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((0.35730351456016574, ((rt1.c4)/('1080644141')), (rt1.c0 IN ())))>=((((rt1.c2) IS FALSE), CAST(rt1.c4 AS REAL), ((rt1.c4) BETWEEN (rt1.c0) AND ('-238643952')))))) ORDER BY (((0.32429062424704214 IN ())) NOT BETWEEN ((('*Y') NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((((vt0.c0 IN (vt0.lid, vt0.lid))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.lid, vt0.lid))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c0 IN (vt0.lid, vt0.lid))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.lid, vt0.lid))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c0 IN (vt0.lid, vt0.lid))) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (CAST(rt1.c0 AS TEXT))));
SELECT ALL * FROM rt1 WHERE (0.5646541765107338);
SELECT SUM(count) FROM (SELECT ALL ((0.5646541765107338) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.5646541765107338);
SELECT SUM(count) FROM (SELECT ALL ((0.5646541765107338) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.5646541765107338);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))OR(((vt0.lid) NOTNULL))))OR(((vt0.c0) BETWEEN ('k]KY38*ꋲ㘯') AND (vt0.c0))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))OR(((vt0.lid) NOTNULL))))OR(((vt0.c0) BETWEEN ('k]KY38*ꋲ㘯') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))OR(((vt0.lid) NOTNULL))))OR(((vt0.c0) BETWEEN ('k]KY38*ꋲ㘯') AND (vt0.c0))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))OR(((vt0.lid) NOTNULL))))OR(((vt0.c0) BETWEEN ('k]KY38*ꋲ㘯') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))OR(((vt0.lid) NOTNULL))))OR(((vt0.c0) BETWEEN ('k]KY38*ꋲ㘯') AND (vt0.c0))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((UPPER(rt1.c3))<=(((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c3))<=(((((rt1.c1)AND(rt1.c4)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((UPPER(rt1.c3))<=(((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c3))<=(((((rt1.c1)AND(rt1.c4)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((UPPER(rt1.c3))<=(((((rt1.c1)AND(rt1.c4)))OR(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((vt0.lid)AND(rt1.c0)))AND(rt1.c2))) BETWEEN (((rt1.c4)AND(rt1.c0))) AND ((- (rt1.c2))))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)AND(rt1.c0)))AND(rt1.c2))) BETWEEN (((rt1.c4)AND(rt1.c0))) AND ((- (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2 DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((vt0.lid)AND(rt1.c0)))AND(rt1.c2))) BETWEEN (((rt1.c4)AND(rt1.c0))) AND ((- (rt1.c2))))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)AND(rt1.c0)))AND(rt1.c2))) BETWEEN (((rt1.c4)AND(rt1.c0))) AND ((- (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2 DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((vt0.lid)AND(rt1.c0)))AND(rt1.c2))) BETWEEN (((rt1.c4)AND(rt1.c0))) AND ((- (rt1.c2))))) ORDER BY rt1.c2 DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE (+ (rt1.c0))  WHEN CAST(x'' AS INTEGER) THEN CAST(rt1.c3 AS INTEGER) ELSE json_type(vt0.lid) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt1.c0))  WHEN CAST(x'' AS INTEGER) THEN CAST(rt1.c3 AS INTEGER) ELSE json_type(vt0.lid) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE (+ (rt1.c0))  WHEN CAST(x'' AS INTEGER) THEN CAST(rt1.c3 AS INTEGER) ELSE json_type(vt0.lid) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt1.c0))  WHEN CAST(x'' AS INTEGER) THEN CAST(rt1.c3 AS INTEGER) ELSE json_type(vt0.lid) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE (+ (rt1.c0))  WHEN CAST(x'' AS INTEGER) THEN CAST(rt1.c3 AS INTEGER) ELSE json_type(vt0.lid) END);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c2 ASC, (NOT (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC, (NOT (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c2 ASC, (NOT (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC, (NOT (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c2 ASC, (NOT (CAST(rt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM vt0 WHERE ((((((('-323852790')AND(vt0.lid)))AND(vt0.lid))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((('-323852790')AND(vt0.lid)))AND(vt0.lid))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((('-323852790')AND(vt0.lid)))AND(vt0.lid))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((('-323852790')AND(vt0.lid)))AND(vt0.lid))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((('-323852790')AND(vt0.lid)))AND(vt0.lid))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN (((rt1.c1 IN (0.2132771208211599, rt1.c3)))) AND (((((rt1.c4))>((rt1.c2))))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((rt1.c1 IN (0.2132771208211599, rt1.c3)))) AND (((((rt1.c4))>((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN (((rt1.c1 IN (0.2132771208211599, rt1.c3)))) AND (((((rt1.c4))>((rt1.c2))))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((rt1.c1 IN (0.2132771208211599, rt1.c3)))) AND (((((rt1.c4))>((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN (((rt1.c1 IN (0.2132771208211599, rt1.c3)))) AND (((((rt1.c4))>((rt1.c2))))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '1064057418' THEN TRIM(DISTINCT vt0.c0) ELSE CASE WHEN rt1.c4 THEN vt0.lid END END WHERE ((((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '1064057418' THEN TRIM(DISTINCT vt0.c0) ELSE CASE WHEN rt1.c4 THEN vt0.lid END END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '1064057418' THEN TRIM(DISTINCT vt0.c0) ELSE CASE WHEN rt1.c4 THEN vt0.lid END END WHERE ((((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '1064057418' THEN TRIM(DISTINCT vt0.c0) ELSE CASE WHEN rt1.c4 THEN vt0.lid END END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '1064057418' THEN TRIM(DISTINCT vt0.c0) ELSE CASE WHEN rt1.c4 THEN vt0.lid END END WHERE ((((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c3)) IN ()));
SELECT ALL * FROM rt1, vt0 WHERE (((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)))AND(((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))))OR(vt0.lid))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC, '-1182169889' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)))AND(((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))))OR(vt0.lid))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC, '-1182169889' ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)))AND(((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))))OR(vt0.lid))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC, '-1182169889' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)))AND(((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))))OR(vt0.lid))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0 IN ()) IN ()) DESC, '-1182169889' ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)))AND(((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)))))OR(vt0.lid))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC, '-1182169889' ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CAST(0xffffffffb856b291 AS NUMERIC))IS(((vt0.c0)||(vt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(0Xffffffffb856b291 AS NUMERIC))IS(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(0xffffffffb856b291 AS NUMERIC))IS(((vt0.c0)||(vt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(0Xffffffffb856b291 AS NUMERIC))IS(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(0xffffffffb856b291 AS NUMERIC))IS(((vt0.c0)||(vt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE ((~ (LIKELIHOOD(DISTINCT rt1.c4, 0.7207985703226834)))) ORDER BY NULL COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(DISTINCT rt1.c4, 0.7207985703226834)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL COLLATE RTRIM DESC);
SELECT * FROM vt0, rt1 WHERE ((~ (LIKELIHOOD(DISTINCT rt1.c4, 0.7207985703226834)))) ORDER BY NULL COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(DISTINCT rt1.c4, 0.7207985703226834)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL COLLATE RTRIM DESC);
SELECT * FROM vt0, rt1 WHERE ((~ (LIKELIHOOD(DISTINCT rt1.c4, 0.7207985703226834)))) ORDER BY NULL COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((NULL)-(((vt0.lid)-(rt1.c1)))) WHERE (((((CHANGES())AND(x'' COLLATE RTRIM)))OR((NOT (vt0.lid))))) ORDER BY CAST(0.17084297911308555 COLLATE BINARY AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CHANGES())AND(x'' COLLATE RTRIM)))OR((NOT (vt0.lid))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((NULL)-(((vt0.lid)-(rt1.c1)))) ORDER BY CAST(0.17084297911308555 COLLATE BINARY AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((NULL)-(((vt0.lid)-(rt1.c1)))) WHERE (((((CHANGES())AND(x'' COLLATE RTRIM)))OR((NOT (vt0.lid))))) ORDER BY CAST(0.17084297911308555 COLLATE BINARY AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CHANGES())AND(x'' COLLATE RTRIM)))OR((NOT (vt0.lid))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((NULL)-(((vt0.lid)-(rt1.c1)))) ORDER BY CAST(0.17084297911308555 COLLATE BINARY AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((NULL)-(((vt0.lid)-(rt1.c1)))) WHERE (((((CHANGES())AND(x'' COLLATE RTRIM)))OR((NOT (vt0.lid))))) ORDER BY CAST(0.17084297911308555 COLLATE BINARY AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.lid)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.lid IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0, vt0.lid)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.lid IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.lid)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.lid IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0, vt0.lid)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.lid IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0, vt0.lid)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.lid IN ()))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((LOWER(vt0.c0))LIKE(((vt0.lid)LIKE(vt0.lid))))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))LIKE(((vt0.lid)LIKE(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((LOWER(vt0.c0))LIKE(((vt0.lid)LIKE(vt0.lid))))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))LIKE(((vt0.lid)LIKE(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((LOWER(vt0.c0))LIKE(((vt0.lid)LIKE(vt0.lid))))) ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN (rt1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt1.c4))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN (rt1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt1.c4))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN (rt1.c4))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))>(vt0.lid COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))>(vt0.lid COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))>(vt0.lid COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))>(vt0.lid COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))>(vt0.lid COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c1)IS NOT(rt1.c2)) THEN (((rt1.c1))==((rt1.c2))) WHEN rt1.c3 THEN NULL WHEN ((rt1.c2)!=(rt1.c4)) THEN (((('1822590639')OR(rt1.c3)))AND(rt1.c1)) WHEN SQLITE_VERSION() THEN '蠜0c' WHEN ((vt0.c0)<=(rt1.c1)) THEN UNLIKELY(rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)IS NOT(rt1.c2)) THEN (((rt1.c1))=((rt1.c2))) WHEN rt1.c3 THEN NULL WHEN ((rt1.c2)<>(rt1.c4)) THEN (((('1822590639')OR(rt1.c3)))AND(rt1.c1)) WHEN SQLITE_VERSION() THEN '蠜0c' WHEN ((vt0.c0)<=(rt1.c1)) THEN UNLIKELY(rt1.c2) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c1)IS NOT(rt1.c2)) THEN (((rt1.c1))==((rt1.c2))) WHEN rt1.c3 THEN NULL WHEN ((rt1.c2)!=(rt1.c4)) THEN (((('1822590639')OR(rt1.c3)))AND(rt1.c1)) WHEN SQLITE_VERSION() THEN '蠜0c' WHEN ((vt0.c0)<=(rt1.c1)) THEN UNLIKELY(rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)IS NOT(rt1.c2)) THEN (((rt1.c1))=((rt1.c2))) WHEN rt1.c3 THEN NULL WHEN ((rt1.c2)<>(rt1.c4)) THEN (((('1822590639')OR(rt1.c3)))AND(rt1.c1)) WHEN SQLITE_VERSION() THEN '蠜0c' WHEN ((vt0.c0)<=(rt1.c1)) THEN UNLIKELY(rt1.c2) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c1)IS NOT(rt1.c2)) THEN (((rt1.c1))==((rt1.c2))) WHEN rt1.c3 THEN NULL WHEN ((rt1.c2)!=(rt1.c4)) THEN (((('1822590639')OR(rt1.c3)))AND(rt1.c1)) WHEN SQLITE_VERSION() THEN '蠜0c' WHEN ((vt0.c0)<=(rt1.c1)) THEN UNLIKELY(rt1.c2) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1)>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1)>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1)>(rt1.c1)))));
SELECT ALL * FROM vt0, rt1 WHERE ((- (0xffffffffe6b2ae80))) ORDER BY (((rt1.c3)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN vt0.lid END)) AND ((NULL)))  NULLS LAST, (((rt1.c2 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((- (0xffffffffe6b2ae80))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c3)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN vt0.lid END)) AND ((NULL)))  NULLS LAST, (((rt1.c2 IN ())) ISNULL) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((- (0xffffffffe6b2ae80))) ORDER BY (((rt1.c3)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN vt0.lid END)) AND ((NULL)))  NULLS LAST, (((rt1.c2 IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((- (0xffffffffe6b2ae80))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c3)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN vt0.lid END)) AND ((NULL)))  NULLS LAST, (((rt1.c2 IN ())) ISNULL) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((- (0xffffffffe6b2ae80))) ORDER BY (((rt1.c3)) BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN vt0.lid END)) AND ((NULL)))  NULLS LAST, (((rt1.c2 IN ())) ISNULL) DESC;
SELECT ALL * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE, json_array(rt1.c2, rt1.c0), ((NULL) NOTNULL))) AND ((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE, json_array(rt1.c2, rt1.c0), ((NULL) NOTNULL))) AND ((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE, json_array(rt1.c2, rt1.c0), ((NULL) NOTNULL))) AND ((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE, json_array(rt1.c2, rt1.c0), ((NULL) NOTNULL))) AND ((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN ((rt1.c4 COLLATE NOCASE, json_array(rt1.c2, rt1.c0), ((NULL) NOTNULL))) AND ((rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS INTEGER), ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))OR('-1686618767')) THEN ((((vt0.lid)OR(vt0.c0)))OR('1329544755')) END) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((- (rt1.c4)))))OR(((((((((rt1.c4)OR(vt0.c0)))AND(rt1.c1)))AND(vt0.lid)))OR(rt1.c4)))) DESC  NULLS FIRST, ((((((((ABS(DISTINCT vt0.lid))AND(CASE vt0.lid  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)))AND(CAST(vt0.lid AS BLOB))))AND(((((x'')OR(vt0.lid)))AND(rt1.c2)))))OR(((((((((rt1.c4)OR(rt1.c4)))OR(vt0.lid)))OR(rt1.c2)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))OR('-1686618767')) THEN ((((vt0.lid)OR(vt0.c0)))OR('1329544755')) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((- (rt1.c4)))))OR(((((((((rt1.c4)OR(vt0.c0)))AND(rt1.c1)))AND(vt0.lid)))OR(rt1.c4)))) DESC  NULLS FIRST, ((((((((ABS(DISTINCT vt0.lid))AND(CASE vt0.lid  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)))AND(CAST(vt0.lid AS BLOB))))AND(((((x'')OR(vt0.lid)))AND(rt1.c2)))))OR(((((((((rt1.c4)OR(rt1.c4)))OR(vt0.lid)))OR(rt1.c2)))OR(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))OR('-1686618767')) THEN ((((vt0.lid)OR(vt0.c0)))OR('1329544755')) END) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((- (rt1.c4)))))OR(((((((((rt1.c4)OR(vt0.c0)))AND(rt1.c1)))AND(vt0.lid)))OR(rt1.c4)))) DESC  NULLS FIRST, ((((((((ABS(DISTINCT vt0.lid))AND(CASE vt0.lid  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)))AND(CAST(vt0.lid AS BLOB))))AND(((((x'')OR(vt0.lid)))AND(rt1.c2)))))OR(((((((((rt1.c4)OR(rt1.c4)))OR(vt0.lid)))OR(rt1.c2)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))OR('-1686618767')) THEN ((((vt0.lid)OR(vt0.c0)))OR('1329544755')) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((- (rt1.c4)))))OR(((((((((rt1.c4)OR(vt0.c0)))AND(rt1.c1)))AND(vt0.lid)))OR(rt1.c4)))) DESC  NULLS FIRST, ((((((((ABS(DISTINCT vt0.lid))AND(CASE vt0.lid  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)))AND(CAST(vt0.lid AS BLOB))))AND(((((x'')OR(vt0.lid)))AND(rt1.c2)))))OR(((((((((rt1.c4)OR(rt1.c4)))OR(vt0.lid)))OR(rt1.c2)))OR(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))  WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(NULL)))AND(rt1.c2)))OR('-1686618767')) THEN ((((vt0.lid)OR(vt0.c0)))OR('1329544755')) END) ORDER BY ((((rt1.c2 COLLATE RTRIM)AND((- (rt1.c4)))))OR(((((((((rt1.c4)OR(vt0.c0)))AND(rt1.c1)))AND(vt0.lid)))OR(rt1.c4)))) DESC  NULLS FIRST, ((((((((ABS(DISTINCT vt0.lid))AND(CASE vt0.lid  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END)))AND(CAST(vt0.lid AS BLOB))))AND(((((x'')OR(vt0.lid)))AND(rt1.c2)))))OR(((((((((rt1.c4)OR(rt1.c4)))OR(vt0.lid)))OR(rt1.c2)))OR(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.lid)IS(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.lid)IS(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.lid)IS(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT * FROM rt1, vt0 NOT INDEXED WHERE (LENGTH(((((rt1.c2)OR(rt1.c1)))AND(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((((rt1.c2)OR(rt1.c1)))AND(rt1.c3)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 NOT INDEXED WHERE (LENGTH(((((rt1.c2)OR(rt1.c1)))AND(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((((rt1.c2)OR(rt1.c1)))AND(rt1.c3)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 NOT INDEXED WHERE (LENGTH(((((rt1.c2)OR(rt1.c1)))AND(rt1.c3))));
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))LIKE(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))LIKE(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))LIKE(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))LIKE(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))LIKE(((vt0.c0)<<(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)OR('')))AND(rt1.c0)))>>(((vt0.c0) NOTNULL)))) ORDER BY ((((CASE '-759664512'  WHEN rt1.c2 THEN 0.6396891442419256 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c4 END)AND(((vt0.lid)IS NOT(rt1.c1)))))OR(((vt0.lid)IS NOT(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR('')))AND(rt1.c0)))>>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((CASE '-759664512'  WHEN rt1.c2 THEN 0.6396891442419256 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c4 END)AND(((vt0.lid)IS NOT(rt1.c1)))))OR(((vt0.lid)IS NOT(rt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)OR('')))AND(rt1.c0)))>>(((vt0.c0) NOTNULL)))) ORDER BY ((((CASE '-759664512'  WHEN rt1.c2 THEN 0.6396891442419256 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c4 END)AND(((vt0.lid)IS NOT(rt1.c1)))))OR(((vt0.lid)IS NOT(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR('')))AND(rt1.c0)))>>(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((CASE '-759664512'  WHEN rt1.c2 THEN 0.6396891442419256 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c4 END)AND(((vt0.lid)IS NOT(rt1.c1)))))OR(((vt0.lid)IS NOT(rt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)OR('')))AND(rt1.c0)))>>(((vt0.c0) NOTNULL)))) ORDER BY ((((CASE '-759664512'  WHEN rt1.c2 THEN 0.6396891442419256 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c4 END)AND(((vt0.lid)IS NOT(rt1.c1)))))OR(((vt0.lid)IS NOT(rt1.c0)))) DESC;
SELECT * FROM vt0 WHERE (((vt0.c0)+(((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(((((vt0.lid)AND(vt0.c0)))OR(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)+(((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(((((vt0.lid)AND(vt0.c0)))OR(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)+(((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)))));
SELECT ALL * FROM vt0 WHERE (((('852697926'))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)))))) ORDER BY CASE NULL  WHEN ((vt0.c0)AND(vt0.lid)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((('852697926'))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL  WHEN ((vt0.c0)AND(vt0.lid)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((('852697926'))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)))))) ORDER BY CASE NULL  WHEN ((vt0.c0)AND(vt0.lid)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((('852697926'))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE NULL  WHEN ((vt0.c0)AND(vt0.lid)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((('852697926'))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.lid)))))) ORDER BY CASE NULL  WHEN ((vt0.c0)AND(vt0.lid)) THEN ((((x'')OR(vt0.c0)))AND(vt0.c0)) END;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json(CASE WHEN rt1.c2 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL ((json(CASE WHEN rt1.c2 THEN x'' END)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json(CASE WHEN rt1.c2 THEN x'' END));
SELECT SUM(count) FROM (SELECT ALL ((json(CASE WHEN rt1.c2 THEN x'' END)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((0.46770896629922665) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) WHERE (CAST(vt0.lid AS INTEGER) COLLATE BINARY) ORDER BY (((((vt0.lid, rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, vt0.lid)) AND ((x'', NULL, rt1.c4))))<>((vt0.lid IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.lid AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((0.46770896629922665) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) ORDER BY (((((vt0.lid, rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, vt0.lid)) AND ((x'', NULL, rt1.c4))))<>((vt0.lid IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((0.46770896629922665) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) WHERE (CAST(vt0.lid AS INTEGER) COLLATE BINARY) ORDER BY (((((vt0.lid, rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, vt0.lid)) AND ((x'', NULL, rt1.c4))))<>((vt0.lid IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.lid AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((0.46770896629922665) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) ORDER BY (((((vt0.lid, rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, vt0.lid)) AND ((x'', NULL, rt1.c4))))<>((vt0.lid IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((0.46770896629922665) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt1.c3) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) WHERE (CAST(vt0.lid AS INTEGER) COLLATE BINARY) ORDER BY (((((vt0.lid, rt1.c2, rt1.c2)) BETWEEN ((rt1.c3, rt1.c1, vt0.lid)) AND ((x'', NULL, rt1.c4))))<>((vt0.lid IN ())));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(rt1.c1)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS NOT(rt1.c1)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(rt1.c1)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS NOT(rt1.c1)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)IS NOT(rt1.c1)) THEN rt1.c1 END);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN (- (rt1.c0)) ELSE ((((((((x'')AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c3)) END) ORDER BY ((rt1.c1)OR(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE RTRIM THEN (- (rt1.c0)) ELSE ((((((((x'')AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c3)) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)OR(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN (- (rt1.c0)) ELSE ((((((((x'')AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c3)) END) ORDER BY ((rt1.c1)OR(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE RTRIM THEN (- (rt1.c0)) ELSE ((((((((x'')AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c3)) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)OR(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN (- (rt1.c0)) ELSE ((((((((x'')AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c1)))OR(rt1.c3)) END) ORDER BY ((rt1.c1)OR(((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.lid)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.lid)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.lid)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.lid)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.lid)<=(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END AS INTEGER)) ORDER BY (((((NULL))<=((''))))!=(((vt0.c0) NOT BETWEEN ('-610409334') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((((NULL))<=((''))))!=(((vt0.c0) NOT BETWEEN ('-610409334') AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END AS INTEGER)) ORDER BY (((((NULL))<=((''))))!=(((vt0.c0) NOT BETWEEN ('-610409334') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((((NULL))<=((''))))!=(((vt0.c0) NOT BETWEEN ('-610409334') AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END AS INTEGER)) ORDER BY (((((NULL))<=((''))))!=(((vt0.c0) NOT BETWEEN ('-610409334') AND (vt0.c0))));
SELECT * FROM vt0 WHERE (CASE ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))  WHEN ((0Xffffffffa8b0a728)IS(vt0.lid)) THEN ((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END) ORDER BY ((((vt0.lid)GLOB(vt0.lid))) IS TRUE), TIME(vt0.lid, vt0.lid, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))  WHEN ((0Xffffffffa8b0a728)IS(vt0.lid)) THEN ((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid)GLOB(vt0.lid))) IS TRUE), TIME(vt0.lid, vt0.lid, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE (CASE ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))  WHEN ((0Xffffffffa8b0a728)IS(vt0.lid)) THEN ((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END) ORDER BY ((((vt0.lid)GLOB(vt0.lid))) IS TRUE), TIME(vt0.lid, vt0.lid, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))  WHEN ((0Xffffffffa8b0a728)IS(vt0.lid)) THEN ((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid)GLOB(vt0.lid))) IS TRUE), TIME(vt0.lid, vt0.lid, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE (CASE ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0))  WHEN ((0Xffffffffa8b0a728)IS(vt0.lid)) THEN ((((((((vt0.lid)OR(vt0.lid)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 END) ORDER BY ((((vt0.lid)GLOB(vt0.lid))) IS TRUE), TIME(vt0.lid, vt0.lid, vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c4);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN '0.0322232732769242' ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN '0.0322232732769242' ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN '0.0322232732769242' ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN '0.0322232732769242' ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN '0.0322232732769242' ELSE vt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))<>(((vt0.lid) IS FALSE))) WHERE (LIKELY(DISTINCT ((rt1.c3)!=(vt0.c0)))) ORDER BY rt1.c0 DESC  NULLS LAST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt1.c3)!=(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))<>(((vt0.lid) IS FALSE))) ORDER BY rt1.c0 DESC  NULLS LAST, ''  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))<>(((vt0.lid) IS FALSE))) WHERE (LIKELY(DISTINCT ((rt1.c3)!=(vt0.c0)))) ORDER BY rt1.c0 DESC  NULLS LAST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt1.c3)!=(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))<>(((vt0.lid) IS FALSE))) ORDER BY rt1.c0 DESC  NULLS LAST, ''  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS INTEGER))<>(((vt0.lid) IS FALSE))) WHERE (LIKELY(DISTINCT ((rt1.c3)!=(vt0.c0)))) ORDER BY rt1.c0 DESC  NULLS LAST, ''  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE ((((vt0.lid, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.lid AS NUMERIC), (vt0.lid IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) AND ((TRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN ('-1566586715') AND ('-533700717')), ((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))*(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.lid AS NUMERIC), (vt0.lid IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) AND ((TRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN ('-1566586715') AND ('-533700717')), ((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))*(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.lid, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.lid AS NUMERIC), (vt0.lid IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) AND ((TRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN ('-1566586715') AND ('-533700717')), ((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))*(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.lid AS NUMERIC), (vt0.lid IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) AND ((TRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN ('-1566586715') AND ('-533700717')), ((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))*(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.lid, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.lid AS NUMERIC), (vt0.lid IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) AND ((TRIM(vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN ('-1566586715') AND ('-533700717')), ((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))*(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c3) BETWEEN (rt1.c1) AND ('MqW')))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3) BETWEEN (rt1.c1) AND ('MqW'))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c3) BETWEEN (rt1.c1) AND ('MqW')))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3) BETWEEN (rt1.c1) AND ('MqW'))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c3) BETWEEN (rt1.c1) AND ('MqW')))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((((rt1.c2)OR(rt1.c0)))OR(rt1.c3))) NOT BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND ((+ (vt0.lid)))) WHERE ((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c2)>(rt1.c3)), ((rt1.c3) NOTNULL))) AND ((TYPEOF(rt1.c3), 0.9790091363629791, (((rt1.c4, vt0.lid, rt1.c3)) NOT BETWEEN ((0x6e51bf82, rt1.c3, rt1.c0)) AND ((vt0.lid, rt1.c0, rt1.c1))))))) ORDER BY MIN(CAST(x'' AS TEXT), rt1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c2)>(rt1.c3)), ((rt1.c3) NOTNULL))) AND ((TYPEOF(rt1.c3), 0.9790091363629791, (((rt1.c4, vt0.lid, rt1.c3)) NOT BETWEEN ((0x6e51bf82, rt1.c3, rt1.c0)) AND ((vt0.lid, rt1.c0, rt1.c1))))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((((rt1.c2)OR(rt1.c0)))OR(rt1.c3))) NOT BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND ((+ (vt0.lid)))) ORDER BY MIN(CAST(x'' AS TEXT), rt1.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((((rt1.c2)OR(rt1.c0)))OR(rt1.c3))) NOT BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND ((+ (vt0.lid)))) WHERE ((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c2)>(rt1.c3)), ((rt1.c3) NOTNULL))) AND ((TYPEOF(rt1.c3), 0.9790091363629791, (((rt1.c4, vt0.lid, rt1.c3)) NOT BETWEEN ((0x6e51bf82, rt1.c3, rt1.c0)) AND ((vt0.lid, rt1.c0, rt1.c1))))))) ORDER BY MIN(CAST(x'' AS TEXT), rt1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c2)>(rt1.c3)), ((rt1.c3) NOTNULL))) AND ((TYPEOF(rt1.c3), 0.9790091363629791, (((rt1.c4, vt0.lid, rt1.c3)) NOT BETWEEN ((0x6e51bf82, rt1.c3, rt1.c0)) AND ((vt0.lid, rt1.c0, rt1.c1))))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((((rt1.c2)OR(rt1.c0)))OR(rt1.c3))) NOT BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND ((+ (vt0.lid)))) ORDER BY MIN(CAST(x'' AS TEXT), rt1.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((((rt1.c2)OR(rt1.c0)))OR(rt1.c3))) NOT BETWEEN (((rt1.c1)LIKE(rt1.c2))) AND ((+ (vt0.lid)))) WHERE ((((vt0.c0, rt1.c2, rt1.c3)) BETWEEN ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c2)>(rt1.c3)), ((rt1.c3) NOTNULL))) AND ((TYPEOF(rt1.c3), 0.9790091363629791, (((rt1.c4, vt0.lid, rt1.c3)) NOT BETWEEN ((0x6e51bf82, rt1.c3, rt1.c0)) AND ((vt0.lid, rt1.c0, rt1.c1))))))) ORDER BY MIN(CAST(x'' AS TEXT), rt1.c2 COLLATE NOCASE);
SELECT * FROM rt1 WHERE ((((rt1.c3))==((rt1.c4))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))=((rt1.c4))) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c3))==((rt1.c4))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))=((rt1.c4))) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c3))==((rt1.c4))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.lid AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.lid AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.lid AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.lid AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.lid AS BLOB) AS TEXT));
SELECT * FROM vt0 WHERE (CAST(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE vt0.lid  WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CASE rt1.c3  WHEN '1295557362' THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((NOT (rt1.c3))) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN '1295557362' THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((NOT (rt1.c3))) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CASE rt1.c3  WHEN '1295557362' THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((NOT (rt1.c3))) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN '1295557362' THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((NOT (rt1.c3))) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((CASE rt1.c3  WHEN '1295557362' THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN ((NOT (rt1.c3))) AND (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT * FROM vt0 WHERE ((NOT (((vt0.lid) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.lid) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.lid) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.lid) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (((vt0.lid) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.lid))<>((vt0.lid, vt0.lid, vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((0X2c9ed77)) AND ((((vt0.c0)%(vt0.lid)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.lid))<>((vt0.lid, vt0.lid, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((0X2c9ed77)) AND ((((vt0.c0)%(vt0.lid)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.lid))<>((vt0.lid, vt0.lid, vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((0X2c9ed77)) AND ((((vt0.c0)%(vt0.lid)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.lid))<>((vt0.lid, vt0.lid, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((0X2c9ed77)) AND ((((vt0.c0)%(vt0.lid)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.lid))<>((vt0.lid, vt0.lid, vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((0X2c9ed77)) AND ((((vt0.c0)%(vt0.lid)))))  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c0)&(vt0.c0))))<((((x'') NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)&(vt0.c0))))<((((x'') NOT NULL))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c0)&(vt0.c0))))<((((x'') NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)&(vt0.c0))))<((((x'') NOT NULL))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c0)&(vt0.c0))))<((((x'') NOT NULL)))));
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (UPPER(((((vt0.c0)AND(rt1.c4)))OR(vt0.lid))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((vt0.c0)AND(rt1.c4)))OR(vt0.lid)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (UPPER(((((vt0.c0)AND(rt1.c4)))OR(vt0.lid))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((vt0.c0)AND(rt1.c4)))OR(vt0.lid)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (UPPER(((((vt0.c0)AND(rt1.c4)))OR(vt0.lid))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4))==((rt1.c0))) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4))==((rt1.c0))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4))==((rt1.c0))) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4))==((rt1.c0))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4))==((rt1.c0))) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL COLLATE RTRIM COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))<<(((vt0.c0)-(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<<(((vt0.c0)-(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL COLLATE RTRIM COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))<<(((vt0.c0)-(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<<(((vt0.c0)-(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL COLLATE RTRIM COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))<<(((vt0.c0)-(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (-812749772) ORDER BY ((((rt1.c2)>>(rt1.c2)))%(0Xd9ffdd7))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-812749772) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)>>(rt1.c2)))%(0xd9ffdd7))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (-812749772) ORDER BY ((((rt1.c2)>>(rt1.c2)))%(0Xd9ffdd7))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-812749772) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)>>(rt1.c2)))%(0xd9ffdd7))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (-812749772) ORDER BY ((((rt1.c2)>>(rt1.c2)))%(0Xd9ffdd7))  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((~ (rt1.c4)) IN ()) WHERE (CASE WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 WHEN vt0.lid THEN rt1.c3 WHEN vt0.lid THEN rt1.c1 END THEN CASE WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN 0.4217113742728257 WHEN rt1.c0 THEN rt1.c4 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 WHEN vt0.lid THEN rt1.c3 WHEN vt0.lid THEN rt1.c1 END THEN CASE WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN 0.4217113742728257 WHEN rt1.c0 THEN rt1.c4 END END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((~ (rt1.c4)) IN ()));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((~ (rt1.c4)) IN ()) WHERE (CASE WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 WHEN vt0.lid THEN rt1.c3 WHEN vt0.lid THEN rt1.c1 END THEN CASE WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN 0.4217113742728257 WHEN rt1.c0 THEN rt1.c4 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 WHEN vt0.lid THEN rt1.c3 WHEN vt0.lid THEN rt1.c1 END THEN CASE WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN 0.4217113742728257 WHEN rt1.c0 THEN rt1.c4 END END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((~ (rt1.c4)) IN ()));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((~ (rt1.c4)) IN ()) WHERE (CASE WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 WHEN vt0.lid THEN rt1.c3 WHEN vt0.lid THEN rt1.c1 END THEN CASE WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN 0.4217113742728257 WHEN rt1.c0 THEN rt1.c4 END END);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY 0.664716055236542 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.664716055236542 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY 0.664716055236542 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.664716055236542 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY 0.664716055236542 ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((- (CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((CAST(rt1.c3 AS INTEGER))IS NOT(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS INTEGER))IS NOT(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE ((- (CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((CAST(rt1.c3 AS INTEGER))IS NOT(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS INTEGER))IS NOT(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE ((- (CAST(rt1.c2 AS NUMERIC)))) ORDER BY ((CAST(rt1.c3 AS INTEGER))IS NOT(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)) ASC  NULLS LAST;
SELECT * FROM vt0, rt1 NOT INDEXED WHERE ((+ (((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 NOT INDEXED WHERE ((+ (((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 NOT INDEXED WHERE ((+ (((rt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.lid)%(vt0.c0))) BETWEEN (((vt0.lid) NOT NULL)) AND (vt0.c0))) ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid)%(vt0.c0))) BETWEEN (((vt0.lid) NOT NULL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(vt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.lid)%(vt0.c0))) BETWEEN (((vt0.lid) NOT NULL)) AND (vt0.c0))) ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid)%(vt0.c0))) BETWEEN (((vt0.lid) NOT NULL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(vt0.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.lid)%(vt0.c0))) BETWEEN (((vt0.lid) NOT NULL)) AND (vt0.c0))) ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<<(vt0.c0 COLLATE NOCASE)) DESC;
SELECT * FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c1);
SELECT * FROM vt0, rt1 WHERE (RTRIM(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c4))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c4)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (RTRIM(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c4))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c4)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (RTRIM(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c4))));
SELECT ALL * FROM rt1, vt0 NOT INDEXED WHERE (((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))OR(NULL)))OR(((rt1.c1) NOT BETWEEN (rt1.c4) AND (vt0.c0))))) ORDER BY (((rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.lid)) BETWEEN ((((rt1.c3) NOT NULL), (rt1.c0 IN ()), (rt1.c0 IN ()), (- (vt0.lid)), UPPER(DISTINCT vt0.lid))) AND ((rt1.c3 COLLATE BINARY, (rt1.c3 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c3)<=(rt1.c1)), NULLIF(DISTINCT vt0.lid, NULL))))  NULLS LAST, '#Fr필4⋓' DESC  NULLS LAST, ((rt1.c2) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))OR(NULL)))OR(((rt1.c1) NOT BETWEEN (rt1.c4) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.lid)) BETWEEN ((((rt1.c3) NOT NULL), (rt1.c0 IN ()), (rt1.c0 IN ()), (- (vt0.lid)), UPPER(DISTINCT vt0.lid))) AND ((rt1.c3 COLLATE BINARY, (rt1.c3 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c3)<=(rt1.c1)), NULLIF(DISTINCT vt0.lid, NULL))))  NULLS LAST, '#Fr필4⋓' DESC  NULLS LAST, ((rt1.c2) IS TRUE) ASC);
SELECT ALL * FROM rt1, vt0 NOT INDEXED WHERE (((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))OR(NULL)))OR(((rt1.c1) NOT BETWEEN (rt1.c4) AND (vt0.c0))))) ORDER BY (((rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.lid)) BETWEEN ((((rt1.c3) NOT NULL), (rt1.c0 IN ()), (rt1.c0 IN ()), (- (vt0.lid)), UPPER(DISTINCT vt0.lid))) AND ((rt1.c3 COLLATE BINARY, (rt1.c3 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c3)<=(rt1.c1)), NULLIF(DISTINCT vt0.lid, NULL))))  NULLS LAST, '#Fr필4⋓' DESC  NULLS LAST, ((rt1.c2) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))OR(NULL)))OR(((rt1.c1) NOT BETWEEN (rt1.c4) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.lid)) BETWEEN ((((rt1.c3) NOT NULL), (rt1.c0 IN ()), (rt1.c0 IN ()), (- (vt0.lid)), UPPER(DISTINCT vt0.lid))) AND ((rt1.c3 COLLATE BINARY, (rt1.c3 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c3)<=(rt1.c1)), NULLIF(DISTINCT vt0.lid, NULL))))  NULLS LAST, '#Fr필4⋓' DESC  NULLS LAST, ((rt1.c2) IS TRUE) ASC);
SELECT ALL * FROM rt1, vt0 NOT INDEXED WHERE (((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c0)))OR(NULL)))OR(((rt1.c1) NOT BETWEEN (rt1.c4) AND (vt0.c0))))) ORDER BY (((rt1.c2, rt1.c0, rt1.c4, rt1.c3, vt0.lid)) BETWEEN ((((rt1.c3) NOT NULL), (rt1.c0 IN ()), (rt1.c0 IN ()), (- (vt0.lid)), UPPER(DISTINCT vt0.lid))) AND ((rt1.c3 COLLATE BINARY, (rt1.c3 IN ()), rt1.c0 COLLATE RTRIM, ((rt1.c3)<=(rt1.c1)), NULLIF(DISTINCT vt0.lid, NULL))))  NULLS LAST, '#Fr필4⋓' DESC  NULLS LAST, ((rt1.c2) IS TRUE) ASC;
SELECT ALL * FROM vt0, rt1 WHERE (CASE CAST(vt0.lid AS NUMERIC)  WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c1)OR(vt0.lid)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.lid AS NUMERIC)  WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c1)OR(vt0.lid)))OR(rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE CAST(vt0.lid AS NUMERIC)  WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c1)OR(vt0.lid)))OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.lid AS NUMERIC)  WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c1)OR(vt0.lid)))OR(rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE CAST(vt0.lid AS NUMERIC)  WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c1)OR(vt0.lid)))OR(rt1.c1)) END);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN vt0.lid ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((x'')+(((vt0.c0) NOT NULL)))  NULLS FIRST, CAST((rt1.c1 IN (vt0.lid)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN vt0.lid ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((x'')+(((vt0.c0) NOT NULL)))  NULLS FIRST, CAST((rt1.c1 IN (vt0.lid)) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN vt0.lid ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((x'')+(((vt0.c0) NOT NULL)))  NULLS FIRST, CAST((rt1.c1 IN (vt0.lid)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN vt0.lid ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((x'')+(((vt0.c0) NOT NULL)))  NULLS FIRST, CAST((rt1.c1 IN (vt0.lid)) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN vt0.lid WHEN rt1.c1 THEN vt0.lid ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((x'')+(((vt0.c0) NOT NULL)))  NULLS FIRST, CAST((rt1.c1 IN (vt0.lid)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULLIF(DISTINCT rt1.c2, ((rt1.c4)/(rt1.c0)))) ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(NULL)))AND((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((0x6683b140, ',l', vt0.c0))))))AND((vt0.c0 IN ()))))AND(NULL)))OR('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt1.c2, ((rt1.c4)/(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(NULL)))AND((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((0x6683b140, ',l', vt0.c0))))))AND((vt0.c0 IN ()))))AND(NULL)))OR('')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULLIF(DISTINCT rt1.c2, ((rt1.c4)/(rt1.c0)))) ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(NULL)))AND((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((0x6683b140, ',l', vt0.c0))))))AND((vt0.c0 IN ()))))AND(NULL)))OR('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt1.c2, ((rt1.c4)/(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(NULL)))AND((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((0x6683b140, ',l', vt0.c0))))))AND((vt0.c0 IN ()))))AND(NULL)))OR('')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULLIF(DISTINCT rt1.c2, ((rt1.c4)/(rt1.c0)))) ORDER BY ((((((((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c1)))AND(NULL)))AND((((rt1.c3, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c3)) AND ((0x6683b140, ',l', vt0.c0))))))AND((vt0.c0 IN ()))))AND(NULL)))OR('')) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (STRFTIME(((x'') NOT BETWEEN (rt1.c1) AND (vt0.lid)), rt1.c2 COLLATE RTRIM, (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((x'') NOT BETWEEN (rt1.c1) AND (vt0.lid)), rt1.c2 COLLATE RTRIM, (vt0.c0 IN ()))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (STRFTIME(((x'') NOT BETWEEN (rt1.c1) AND (vt0.lid)), rt1.c2 COLLATE RTRIM, (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((x'') NOT BETWEEN (rt1.c1) AND (vt0.lid)), rt1.c2 COLLATE RTRIM, (vt0.c0 IN ()))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (STRFTIME(((x'') NOT BETWEEN (rt1.c1) AND (vt0.lid)), rt1.c2 COLLATE RTRIM, (vt0.c0 IN ())));
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c4) ORDER BY ((((rt1.c1)LIKE(rt1.c2)))%(0Xffffffffdb9de48a));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1)LIKE(rt1.c2)))%(0Xffffffffdb9de48a)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c4) ORDER BY ((((rt1.c1)LIKE(rt1.c2)))%(0Xffffffffdb9de48a));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1)LIKE(rt1.c2)))%(0Xffffffffdb9de48a)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c4) ORDER BY ((((rt1.c1)LIKE(rt1.c2)))%(0Xffffffffdb9de48a));
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS INTEGER))*(CASE rt1.c4  WHEN vt0.c0 THEN rt1.c2 END))) ORDER BY IFNULL(((rt1.c4)||(rt1.c1)), (rt1.c1 IN ())), CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c0)) AS BLOB), ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(rt1.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))*(CASE rt1.c4  WHEN vt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY IFNULL(((rt1.c4)||(rt1.c1)), (rt1.c1 IN ())), CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c0)) AS BLOB), ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(rt1.c1 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS INTEGER))*(CASE rt1.c4  WHEN vt0.c0 THEN rt1.c2 END))) ORDER BY IFNULL(((rt1.c4)||(rt1.c1)), (rt1.c1 IN ())), CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c0)) AS BLOB), ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(rt1.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))*(CASE rt1.c4  WHEN vt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY IFNULL(((rt1.c4)||(rt1.c1)), (rt1.c1 IN ())), CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c0)) AS BLOB), ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(rt1.c1 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS INTEGER))*(CASE rt1.c4  WHEN vt0.c0 THEN rt1.c2 END))) ORDER BY IFNULL(((rt1.c4)||(rt1.c1)), (rt1.c1 IN ())), CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c0)) AS BLOB), ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(rt1.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) AS BLOB));
SELECT ALL * FROM vt0 WHERE (0.7794893223886568);
SELECT SUM(count) FROM (SELECT ((0.7794893223886568) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.7794893223886568);
SELECT SUM(count) FROM (SELECT ((0.7794893223886568) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.7794893223886568);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE BINARY) NOT NULL)) ORDER BY CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE BINARY) NOT NULL)) ORDER BY CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 COLLATE BINARY) NOT NULL)) ORDER BY CAST((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) AS REAL) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((1197045286)OR(rt1.c2)))AND(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((1197045286)OR(rt1.c2)))AND(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((1197045286)OR(rt1.c2)))AND(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((1197045286)OR(rt1.c2)))AND(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((1197045286)OR(rt1.c2)))AND(rt1.c3)) IN ()));
SELECT ALL * FROM rt1, vt0 WHERE (((((-1566586715) ISNULL))==('0.03999202820230163' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((-1566586715) ISNULL))==('0.03999202820230163' COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((-1566586715) ISNULL))==('0.03999202820230163' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((-1566586715) ISNULL))==('0.03999202820230163' COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((-1566586715) ISNULL))==('0.03999202820230163' COLLATE BINARY)));
SELECT ALL * FROM rt1, vt0 WHERE (COALESCE((- (vt0.lid)), CAST(rt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE((- (vt0.lid)), CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (COALESCE((- (vt0.lid)), CAST(rt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE((- (vt0.lid)), CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (COALESCE((- (vt0.lid)), CAST(rt1.c2 AS REAL)));
SELECT * FROM rt1, vt0 WHERE ((- ((rt1.c1 IN (0.08694478876396117)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c1 IN (0.08694478876396117))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((- ((rt1.c1 IN (0.08694478876396117)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c1 IN (0.08694478876396117))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((- ((rt1.c1 IN (0.08694478876396117)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (vt0.lid)))>(((rt1.c4) BETWEEN (vt0.c0) AND (vt0.lid)))) WHERE ('0.9079335286232174') ORDER BY (+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 END)), 0X4e859a19, CAST(CAST(rt1.c1 AS NUMERIC) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.9079335286232174') IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (vt0.lid)))>(((rt1.c4) BETWEEN (vt0.c0) AND (vt0.lid)))) ORDER BY (+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 END)), 0x4e859a19, CAST(CAST(rt1.c1 AS NUMERIC) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (vt0.lid)))>(((rt1.c4) BETWEEN (vt0.c0) AND (vt0.lid)))) WHERE ('0.9079335286232174') ORDER BY (+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 END)), 0X4e859a19, CAST(CAST(rt1.c1 AS NUMERIC) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.9079335286232174') IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0) BETWEEN (rt1.c2) AND (vt0.lid)))>(((rt1.c4) BETWEEN (vt0.c0) AND (vt0.lid)))) ORDER BY (+ (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt0.c0 END)), 0x4e859a19, CAST(CAST(rt1.c1 AS NUMERIC) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0)AND(rt1.c3))) AND (((rt1.c2) IS FALSE)))) ORDER BY rt1.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0)AND(rt1.c3))) AND (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0)AND(rt1.c3))) AND (((rt1.c2) IS FALSE)))) ORDER BY rt1.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0)AND(rt1.c3))) AND (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((vt0.lid IN ())) NOT BETWEEN (((vt0.c0)AND(rt1.c3))) AND (((rt1.c2) IS FALSE)))) ORDER BY rt1.c3  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((0.22839771082134952)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0.22839771082134952)OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.22839771082134952)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0.22839771082134952)OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0.22839771082134952)OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>=(vt0.c0)), 0.46224265341310244)) ORDER BY (+ ((vt0.lid IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)>=(vt0.c0)), 0.46224265341310244)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.lid IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>=(vt0.c0)), 0.46224265341310244)) ORDER BY (+ ((vt0.lid IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)>=(vt0.c0)), 0.46224265341310244)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.lid IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>=(vt0.c0)), 0.46224265341310244)) ORDER BY (+ ((vt0.lid IN ())));
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))%(((rt1.c3) ISNULL)))) ORDER BY ((rt1.c2)=(((vt0.c0)AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))%(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2)==(((vt0.c0)AND(rt1.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))%(((rt1.c3) ISNULL)))) ORDER BY ((rt1.c2)=(((vt0.c0)AND(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))%(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2)==(((vt0.c0)AND(rt1.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)))%(((rt1.c3) ISNULL)))) ORDER BY ((rt1.c2)=(((vt0.c0)AND(rt1.c0))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN CAST(rt1.c4 AS TEXT) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END) ORDER BY (((vt0.c0 IN (rt1.c1)))-(rt1.c3 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c4 AS TEXT) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN (rt1.c1)))-(rt1.c3 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN CAST(rt1.c4 AS TEXT) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END) ORDER BY (((vt0.c0 IN (rt1.c1)))-(rt1.c3 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c4 AS TEXT) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN (rt1.c1)))-(rt1.c3 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN CAST(rt1.c4 AS TEXT) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END END) ORDER BY (((vt0.c0 IN (rt1.c1)))-(rt1.c3 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid))) BETWEEN (CASE WHEN vt0.lid THEN vt0.c0 END) AND (LAST_INSERT_ROWID()))) ORDER BY (((((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.lid, vt0.lid)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid))) BETWEEN (CASE WHEN vt0.lid THEN vt0.c0 END) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.lid, vt0.lid)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid))) BETWEEN (CASE WHEN vt0.lid THEN vt0.c0 END) AND (LAST_INSERT_ROWID()))) ORDER BY (((((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.lid, vt0.lid)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid))) BETWEEN (CASE WHEN vt0.lid THEN vt0.c0 END) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.lid, vt0.lid)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.lid)))OR(vt0.lid))) BETWEEN (CASE WHEN vt0.lid THEN vt0.c0 END) AND (LAST_INSERT_ROWID()))) ORDER BY (((((vt0.lid, vt0.lid, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.lid, vt0.lid)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CASE vt0.c0  WHEN vt0.lid THEN vt0.lid END));
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c4) ORDER BY ((((((((((((vt0.c0)OR('')))AND(rt1.c2)))OR(rt1.c3)))OR(vt0.lid)))OR(CAST(vt0.c0 AS BLOB))))AND(CASE vt0.lid  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN vt0.lid THEN rt1.c3 ELSE rt1.c1 END)) DESC  NULLS LAST, ((((rt1.c2) ISNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((vt0.c0)OR('')))AND(rt1.c2)))OR(rt1.c3)))OR(vt0.lid)))OR(CAST(vt0.c0 AS BLOB))))AND(CASE vt0.lid  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN vt0.lid THEN rt1.c3 ELSE rt1.c1 END)) DESC  NULLS LAST, ((((rt1.c2) ISNULL)) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c4) ORDER BY ((((((((((((vt0.c0)OR('')))AND(rt1.c2)))OR(rt1.c3)))OR(vt0.lid)))OR(CAST(vt0.c0 AS BLOB))))AND(CASE vt0.lid  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN vt0.lid THEN rt1.c3 ELSE rt1.c1 END)) DESC  NULLS LAST, ((((rt1.c2) ISNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((vt0.c0)OR('')))AND(rt1.c2)))OR(rt1.c3)))OR(vt0.lid)))OR(CAST(vt0.c0 AS BLOB))))AND(CASE vt0.lid  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN vt0.lid THEN rt1.c3 ELSE rt1.c1 END)) DESC  NULLS LAST, ((((rt1.c2) ISNULL)) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c4) ORDER BY ((((((((((((vt0.c0)OR('')))AND(rt1.c2)))OR(rt1.c3)))OR(vt0.lid)))OR(CAST(vt0.c0 AS BLOB))))AND(CASE vt0.lid  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 WHEN vt0.lid THEN rt1.c3 ELSE rt1.c1 END)) DESC  NULLS LAST, ((((rt1.c2) ISNULL)) IS TRUE) DESC;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c4) AND (-4.41789925E8))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c4) AND (-4.41789925E8))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c4) AND (-4.41789925E8))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c4) AND (-4.41789925E8))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c4) AND (-4.41789925E8))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((rt1.c4) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (x''))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (x''))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (x''))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ('1485366247') ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c0)))))OR(((vt0.lid) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1485366247') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c0)))))OR(((vt0.lid) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('1485366247') ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c0)))))OR(((vt0.lid) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1485366247') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c0)))))OR(((vt0.lid) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('1485366247') ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((vt0.lid) BETWEEN (vt0.lid) AND (rt1.c0)))))OR(((vt0.lid) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 CROSS JOIN rt1 ON rt1.c4 WHERE (CASE rt1.c4  WHEN rt1.c0 COLLATE NOCASE THEN rt1.c0 END) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt1.c4 COLLATE BINARY ELSE (rt1.c4 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c4  WHEN rt1.c0 COLLATE NOCASE THEN rt1.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c4 ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt1.c4 COLLATE BINARY ELSE (rt1.c4 IN ()) END);
SELECT * FROM vt0 CROSS JOIN rt1 ON rt1.c4 WHERE (CASE rt1.c4  WHEN rt1.c0 COLLATE NOCASE THEN rt1.c0 END) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt1.c4 COLLATE BINARY ELSE (rt1.c4 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c4  WHEN rt1.c0 COLLATE NOCASE THEN rt1.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c4 ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt1.c4 COLLATE BINARY ELSE (rt1.c4 IN ()) END);
SELECT * FROM vt0 CROSS JOIN rt1 ON rt1.c4 WHERE (CASE rt1.c4  WHEN rt1.c0 COLLATE NOCASE THEN rt1.c0 END) ORDER BY CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN rt1.c4 COLLATE BINARY ELSE (rt1.c4 IN ()) END;
SELECT ALL * FROM vt0, rt1 WHERE ((((((NOT (vt0.c0)))AND(LOWER(rt1.c3))))AND(CAST(vt0.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))AND(LOWER(rt1.c3))))AND(CAST(vt0.lid AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((NOT (vt0.c0)))AND(LOWER(rt1.c3))))AND(CAST(vt0.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))AND(LOWER(rt1.c3))))AND(CAST(vt0.lid AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((NOT (vt0.c0)))AND(LOWER(rt1.c3))))AND(CAST(vt0.lid AS INTEGER))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.lid  WHEN rt1.c3 THEN 'lz' ELSE rt1.c2 END)OR((rt1.c2 IN ()))))OR(((rt1.c1)<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.lid  WHEN rt1.c3 THEN 'lz' ELSE rt1.c2 END)OR((rt1.c2 IN ()))))OR(((rt1.c1)<(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.lid  WHEN rt1.c3 THEN 'lz' ELSE rt1.c2 END)OR((rt1.c2 IN ()))))OR(((rt1.c1)<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.lid  WHEN rt1.c3 THEN 'lz' ELSE rt1.c2 END)OR((rt1.c2 IN ()))))OR(((rt1.c1)<(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.lid  WHEN rt1.c3 THEN 'lz' ELSE rt1.c2 END)OR((rt1.c2 IN ()))))OR(((rt1.c1)<(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c4)))OR((((vt0.c0))>((rt1.c0)))))) ORDER BY HEX(DISTINCT (+ (vt0.c0))), CASE ((rt1.c4)!=(vt0.lid))  WHEN ((0Xffffffffb44a2ea2) IS TRUE) THEN ((rt1.c2)GLOB(rt1.c3)) END;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c4)))OR((((vt0.c0))>((rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY HEX(DISTINCT (+ (vt0.c0))), CASE ((rt1.c4)<>(vt0.lid))  WHEN ((0Xffffffffb44a2ea2) IS TRUE) THEN ((rt1.c2)GLOB(rt1.c3)) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c4)))OR((((vt0.c0))>((rt1.c0)))))) ORDER BY HEX(DISTINCT (+ (vt0.c0))), CASE ((rt1.c4)!=(vt0.lid))  WHEN ((0Xffffffffb44a2ea2) IS TRUE) THEN ((rt1.c2)GLOB(rt1.c3)) END;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c4)))OR((((vt0.c0))>((rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY HEX(DISTINCT (+ (vt0.c0))), CASE ((rt1.c4)<>(vt0.lid))  WHEN ((0Xffffffffb44a2ea2) IS TRUE) THEN ((rt1.c2)GLOB(rt1.c3)) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c4)))OR((((vt0.c0))>((rt1.c0)))))) ORDER BY HEX(DISTINCT (+ (vt0.c0))), CASE ((rt1.c4)!=(vt0.lid))  WHEN ((0Xffffffffb44a2ea2) IS TRUE) THEN ((rt1.c2)GLOB(rt1.c3)) END;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((vt0.lid COLLATE RTRIM)|((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY (((rt1.c2)GLOB(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE RTRIM)|((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2)GLOB(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((vt0.lid COLLATE RTRIM)|((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY (((rt1.c2)GLOB(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE RTRIM)|((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2)GLOB(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((vt0.lid COLLATE RTRIM)|((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) ORDER BY (((rt1.c2)GLOB(vt0.c0)) IN ());
SELECT * FROM rt1, vt0 WHERE (((-692998759)LIKE(rt1.c3 COLLATE BINARY))) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(((rt1.c3)GLOB(rt1.c4)))))OR(LOWER(DISTINCT rt1.c1))))OR((((vt0.c0, rt1.c1, rt1.c3))>((x'3919', vt0.c0, rt1.c0))))))OR(UNLIKELY(rt1.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-692998759)LIKE(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(((rt1.c3)GLOB(rt1.c4)))))OR(LOWER(DISTINCT rt1.c1))))OR((((vt0.c0, rt1.c1, rt1.c3))>((x'3919', vt0.c0, rt1.c0))))))OR(UNLIKELY(rt1.c4))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((-692998759)LIKE(rt1.c3 COLLATE BINARY))) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(((rt1.c3)GLOB(rt1.c4)))))OR(LOWER(DISTINCT rt1.c1))))OR((((vt0.c0, rt1.c1, rt1.c3))>((x'3919', vt0.c0, rt1.c0))))))OR(UNLIKELY(rt1.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-692998759)LIKE(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(((rt1.c3)GLOB(rt1.c4)))))OR(LOWER(DISTINCT rt1.c1))))OR((((vt0.c0, rt1.c1, rt1.c3))>((x'3919', vt0.c0, rt1.c0))))))OR(UNLIKELY(rt1.c4))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((-692998759)LIKE(rt1.c3 COLLATE BINARY))) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(((rt1.c3)GLOB(rt1.c4)))))OR(LOWER(DISTINCT rt1.c1))))OR((((vt0.c0, rt1.c1, rt1.c3))>((x'3919', vt0.c0, rt1.c0))))))OR(UNLIKELY(rt1.c4))) ASC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((NULLIF(x'', vt0.lid))IS(((rt1.c2) IS FALSE)))) ORDER BY (((- (rt1.c2))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((NULLIF(x'', vt0.lid))IS(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (rt1.c2))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt1.c0 COLLATE RTRIM)));
SELECT * FROM vt0, rt1 WHERE (((NULLIF(x'', vt0.lid))IS(((rt1.c2) IS FALSE)))) ORDER BY (((- (rt1.c2))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((NULLIF(x'', vt0.lid))IS(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (rt1.c2))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt1.c0 COLLATE RTRIM)));
SELECT * FROM vt0, rt1 WHERE (((NULLIF(x'', vt0.lid))IS(((rt1.c2) IS FALSE)))) ORDER BY (((- (rt1.c2))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt1.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(rtreenode(rt1.c2, rt1.c2) AS REAL)) ORDER BY ((((vt0.c0)<<(rt1.c3)))<>(rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(rt1.c2, rt1.c2) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0)<<(rt1.c3)))!=(rt1.c4 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(rtreenode(rt1.c2, rt1.c2) AS REAL)) ORDER BY ((((vt0.c0)<<(rt1.c3)))<>(rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(rt1.c2, rt1.c2) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0)<<(rt1.c3)))!=(rt1.c4 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(rtreenode(rt1.c2, rt1.c2) AS REAL)) ORDER BY ((((vt0.c0)<<(rt1.c3)))<>(rt1.c4 COLLATE BINARY));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2) ORDER BY ((((rt1.c1)*(vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1)*(vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(rt1.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2) ORDER BY ((((rt1.c1)*(vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1)*(vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(rt1.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2) ORDER BY ((((rt1.c1)*(vt0.lid))) BETWEEN (vt0.c0 COLLATE BINARY) AND (UNLIKELY(rt1.c1)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c3) NOTNULL))<(HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOTNULL))<(HEX(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c3) NOTNULL))<(HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOTNULL))<(HEX(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c3) NOTNULL))<(HEX(vt0.c0))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.lid) ORDER BY CAST(NULL COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(NULL COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.lid) ORDER BY CAST(NULL COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(NULL COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.lid) ORDER BY CAST(NULL COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)OR(CAST(rt1.c4 AS REAL))))AND((- (rt1.c4))))) ORDER BY ABS(CASE vt0.c0  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) ASC, (NOT (((rt1.c2) ISNULL))), (NOT (rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(CAST(rt1.c4 AS REAL))))AND((- (rt1.c4))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ABS(CASE vt0.c0  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) ASC, (NOT (((rt1.c2) ISNULL))), (NOT (rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)OR(CAST(rt1.c4 AS REAL))))AND((- (rt1.c4))))) ORDER BY ABS(CASE vt0.c0  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) ASC, (NOT (((rt1.c2) ISNULL))), (NOT (rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(CAST(rt1.c4 AS REAL))))AND((- (rt1.c4))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ABS(CASE vt0.c0  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) ASC, (NOT (((rt1.c2) ISNULL))), (NOT (rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)OR(CAST(rt1.c4 AS REAL))))AND((- (rt1.c4))))) ORDER BY ABS(CASE vt0.c0  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) ASC, (NOT (((rt1.c2) ISNULL))), (NOT (rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT * FROM rt1 CROSS JOIN vt0 ON (- (((rt1.c0)=(rt1.c0)))) WHERE (((((((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0)))AND('-635966785')))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0)))AND('-635966785')))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE vt0.lid END))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (- (((rt1.c0)==(rt1.c0)))));
SELECT * FROM rt1 CROSS JOIN vt0 ON (- (((rt1.c0)=(rt1.c0)))) WHERE (((((((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0)))AND('-635966785')))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0)))AND('-635966785')))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE vt0.lid END))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (- (((rt1.c0)==(rt1.c0)))));
SELECT * FROM rt1 CROSS JOIN vt0 ON (- (((rt1.c0)=(rt1.c0)))) WHERE (((((((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0)))AND('-635966785')))OR(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c4 ELSE vt0.lid END)));
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c4)IS NOT('pEJN%')))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)IS NOT('pEJN%'))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c4)IS NOT('pEJN%')))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)IS NOT('pEJN%'))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c4)IS NOT('pEJN%')))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((x'')IS(rt1.c1))) ISNULL)) ORDER BY (((((~ (vt0.lid)))OR(x'e80e')))AND(-1027334564)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')IS(rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((~ (vt0.lid)))OR(x'e80e')))AND(-1027334564)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((x'')IS(rt1.c1))) ISNULL)) ORDER BY (((((~ (vt0.lid)))OR(x'e80e')))AND(-1027334564)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')IS(rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((~ (vt0.lid)))OR(x'e80e')))AND(-1027334564)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((x'')IS(rt1.c1))) ISNULL)) ORDER BY (((((~ (vt0.lid)))OR(x'e80e')))AND(-1027334564)) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (json_valid((+ (rt1.c2)))) ORDER BY ((NULL) BETWEEN (((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c3 END)), (((rt1.c2)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((rt1.c1)OR(vt0.lid)))AND(rt1.c0))))) ASC  NULLS LAST, '0.11323401743805317' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid((+ (rt1.c2)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) BETWEEN (((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c3 END)), (((rt1.c2)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((rt1.c1)OR(vt0.lid)))AND(rt1.c0))))) ASC  NULLS LAST, '0.11323401743805317' DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (json_valid((+ (rt1.c2)))) ORDER BY ((NULL) BETWEEN (((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c3 END)), (((rt1.c2)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((rt1.c1)OR(vt0.lid)))AND(rt1.c0))))) ASC  NULLS LAST, '0.11323401743805317' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid((+ (rt1.c2)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((NULL) BETWEEN (((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c3 END)), (((rt1.c2)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((rt1.c1)OR(vt0.lid)))AND(rt1.c0))))) ASC  NULLS LAST, '0.11323401743805317' DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (json_valid((+ (rt1.c2)))) ORDER BY ((NULL) BETWEEN (((rt1.c1) BETWEEN (vt0.lid) AND (vt0.c0))) AND (CASE WHEN rt1.c3 THEN rt1.c3 END)), (((rt1.c2)) NOT BETWEEN (((vt0.lid IN ()))) AND ((((((rt1.c1)OR(vt0.lid)))AND(rt1.c0))))) ASC  NULLS LAST, '0.11323401743805317' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid COLLATE NOCASE)AND((531358994 IN ()))))OR(UPPER('蠜0c'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid COLLATE NOCASE)AND((531358994 IN ()))))OR(UPPER('蠜0c')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid COLLATE NOCASE)AND((531358994 IN ()))))OR(UPPER('蠜0c'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid COLLATE NOCASE)AND((531358994 IN ()))))OR(UPPER('蠜0c')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid COLLATE NOCASE)AND((531358994 IN ()))))OR(UPPER('蠜0c'))));
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((vt0.lid)AND(vt0.lid)))AND(((rt1.c4)OR(rt1.c1)))))AND(((vt0.lid)<(rt1.c2)))))OR((((vt0.lid))<>((vt0.lid))))))OR(((rt1.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.lid)AND(vt0.lid)))AND(((rt1.c4)OR(rt1.c1)))))AND(((vt0.lid)<(rt1.c2)))))OR((((vt0.lid))!=((vt0.lid))))))OR(((rt1.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((vt0.lid)AND(vt0.lid)))AND(((rt1.c4)OR(rt1.c1)))))AND(((vt0.lid)<(rt1.c2)))))OR((((vt0.lid))<>((vt0.lid))))))OR(((rt1.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.lid)AND(vt0.lid)))AND(((rt1.c4)OR(rt1.c1)))))AND(((vt0.lid)<(rt1.c2)))))OR((((vt0.lid))!=((vt0.lid))))))OR(((rt1.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((vt0.lid)AND(vt0.lid)))AND(((rt1.c4)OR(rt1.c1)))))AND(((vt0.lid)<(rt1.c2)))))OR((((vt0.lid))<>((vt0.lid))))))OR(((rt1.c1)IS NOT(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0x6e733a2c COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0x6e733a2c COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0x6e733a2c COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0x6e733a2c COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0x6e733a2c COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE (rt1.c3 IN (rt1.c3))  WHEN '' THEN ((rt1.c3)IS(vt0.c0)) ELSE ((rt1.c3) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN (rt1.c3))  WHEN '' THEN ((rt1.c3)IS(vt0.c0)) ELSE ((rt1.c3) NOT NULL) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE (rt1.c3 IN (rt1.c3))  WHEN '' THEN ((rt1.c3)IS(vt0.c0)) ELSE ((rt1.c3) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN (rt1.c3))  WHEN '' THEN ((rt1.c3)IS(vt0.c0)) ELSE ((rt1.c3) NOT NULL) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE (rt1.c3 IN (rt1.c3))  WHEN '' THEN ((rt1.c3)IS(vt0.c0)) ELSE ((rt1.c3) NOT NULL) END);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2 IN ('-249745959')))OR(rt1.c2 COLLATE BINARY)) WHERE (CASE WHEN vt0.c0 THEN (rt1.c3 IN (vt0.lid, rt1.c2)) END) ORDER BY (((rt1.c2, 403734132, NULL)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)), (- ('-1631005782')), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c4) NOT NULL), rt1.c2, ((rt1.c4) NOT BETWEEN (0.4491716095403131) AND (rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (rt1.c3 IN (vt0.lid, rt1.c2)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2 IN ('-249745959')))OR(rt1.c2 COLLATE BINARY)) ORDER BY (((rt1.c2, 403734132, NULL)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)), (- ('-1631005782')), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c4) NOT NULL), rt1.c2, ((rt1.c4) NOT BETWEEN (0.4491716095403131) AND (rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2 IN ('-249745959')))OR(rt1.c2 COLLATE BINARY)) WHERE (CASE WHEN vt0.c0 THEN (rt1.c3 IN (vt0.lid, rt1.c2)) END) ORDER BY (((rt1.c2, 403734132, NULL)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)), (- ('-1631005782')), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c4) NOT NULL), rt1.c2, ((rt1.c4) NOT BETWEEN (0.4491716095403131) AND (rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (rt1.c3 IN (vt0.lid, rt1.c2)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2 IN ('-249745959')))OR(rt1.c2 COLLATE BINARY)) ORDER BY (((rt1.c2, 403734132, NULL)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)), (- ('-1631005782')), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c4) NOT NULL), rt1.c2, ((rt1.c4) NOT BETWEEN (0.4491716095403131) AND (rt1.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2 IN ('-249745959')))OR(rt1.c2 COLLATE BINARY)) WHERE (CASE WHEN vt0.c0 THEN (rt1.c3 IN (vt0.lid, rt1.c2)) END) ORDER BY (((rt1.c2, 403734132, NULL)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)), (- ('-1631005782')), CAST(rt1.c0 AS TEXT))) AND ((((rt1.c4) NOT NULL), rt1.c2, ((rt1.c4) NOT BETWEEN (0.4491716095403131) AND (rt1.c4)))))  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (((((rt1.c3)>>(rt1.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>>(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c3)>>(rt1.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>>(rt1.c3))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c3)>>(rt1.c3))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN (((vt0.lid)/(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN (((vt0.lid)/(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN (((vt0.lid)/(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN (((vt0.lid)/(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))) NOT BETWEEN (((vt0.lid)/(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))+(rt1.c4 COLLATE NOCASE))) ORDER BY rt1.c4;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1)))+(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4);
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))+(rt1.c4 COLLATE NOCASE))) ORDER BY rt1.c4;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1)))+(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4);
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))+(rt1.c4 COLLATE NOCASE))) ORDER BY rt1.c4;
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.lid, NULL, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, '')) AND ((vt0.lid, vt0.c0, vt0.lid)))))) ORDER BY ((((((vt0.lid)!=(vt0.lid)))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(((vt0.c0)<<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.lid, NULL, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, '')) AND ((vt0.lid, vt0.c0, vt0.lid)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((((vt0.lid)!=(vt0.lid)))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(((vt0.c0)<<(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.lid, NULL, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, '')) AND ((vt0.lid, vt0.c0, vt0.lid)))))) ORDER BY ((((((vt0.lid)!=(vt0.lid)))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(((vt0.c0)<<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.lid, NULL, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, '')) AND ((vt0.lid, vt0.c0, vt0.lid)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((((vt0.lid)!=(vt0.lid)))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(((vt0.c0)<<(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.lid, NULL, vt0.lid)) NOT BETWEEN ((vt0.lid, vt0.lid, '')) AND ((vt0.lid, vt0.c0, vt0.lid)))))) ORDER BY ((((((vt0.lid)!=(vt0.lid)))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt0.lid)))))OR(((vt0.c0)<<(vt0.c0)))) ASC;
SELECT ALL * FROM rt1 WHERE (((((CASE WHEN NULL THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 END)OR(((rt1.c2)AND(rt1.c2)))))OR('-635966785'))) ORDER BY CAST(TOTAL_CHANGES() AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 END)OR(((rt1.c2)AND(rt1.c2)))))OR('-635966785'))) IS TRUE)  as count FROM rt1 ORDER BY CAST(TOTAL_CHANGES() AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((((CASE WHEN NULL THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 END)OR(((rt1.c2)AND(rt1.c2)))))OR('-635966785'))) ORDER BY CAST(TOTAL_CHANGES() AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 END)OR(((rt1.c2)AND(rt1.c2)))))OR('-635966785'))) IS TRUE)  as count FROM rt1 ORDER BY CAST(TOTAL_CHANGES() AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((((CASE WHEN NULL THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 END)OR(((rt1.c2)AND(rt1.c2)))))OR('-635966785'))) ORDER BY CAST(TOTAL_CHANGES() AS INTEGER);
SELECT * FROM rt1 WHERE (((PRINTF(rt1.c1))GLOB(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt1.c1))GLOB(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((PRINTF(rt1.c1))GLOB(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt1.c1))GLOB(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((PRINTF(rt1.c1))GLOB(rt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)/(rt1.c1)) THEN CAST(vt0.c0 AS INTEGER) WHEN rt1.c0 THEN ((rt1.c4) IS TRUE) WHEN 0.6410080535694895 THEN '-866547194' ELSE ((rt1.c2) NOT BETWEEN (rt1.c4) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)/(rt1.c1)) THEN CAST(vt0.c0 AS INTEGER) WHEN rt1.c0 THEN ((rt1.c4) IS TRUE) WHEN 0.6410080535694895 THEN '-866547194' ELSE ((rt1.c2) NOT BETWEEN (rt1.c4) AND (vt0.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)/(rt1.c1)) THEN CAST(vt0.c0 AS INTEGER) WHEN rt1.c0 THEN ((rt1.c4) IS TRUE) WHEN 0.6410080535694895 THEN '-866547194' ELSE ((rt1.c2) NOT BETWEEN (rt1.c4) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)/(rt1.c1)) THEN CAST(vt0.c0 AS INTEGER) WHEN rt1.c0 THEN ((rt1.c4) IS TRUE) WHEN 0.6410080535694895 THEN '-866547194' ELSE ((rt1.c2) NOT BETWEEN (rt1.c4) AND (vt0.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((vt0.c0)/(rt1.c1)) THEN CAST(vt0.c0 AS INTEGER) WHEN rt1.c0 THEN ((rt1.c4) IS TRUE) WHEN 0.6410080535694895 THEN '-866547194' ELSE ((rt1.c2) NOT BETWEEN (rt1.c4) AND (vt0.c0)) END);
SELECT * FROM vt0, rt1 WHERE (((rt1.c4) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((rt1.c4) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((rt1.c4) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c3 THEN CAST(rt1.c3 AS BLOB) ELSE rt1.c3 END) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c3))>=((rt1.c1))) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((rt1.c4)<>(rt1.c2)) WHEN x'' THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 THEN CAST(rt1.c1 AS BLOB) WHEN NULL THEN CAST(rt1.c4 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 THEN CAST(rt1.c3 AS BLOB) ELSE rt1.c3 END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c3))>=((rt1.c1))) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((rt1.c4)<>(rt1.c2)) WHEN x'' THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 THEN CAST(rt1.c1 AS BLOB) WHEN NULL THEN CAST(rt1.c4 AS REAL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c3 THEN CAST(rt1.c3 AS BLOB) ELSE rt1.c3 END) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c3))>=((rt1.c1))) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((rt1.c4)<>(rt1.c2)) WHEN x'' THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 THEN CAST(rt1.c1 AS BLOB) WHEN NULL THEN CAST(rt1.c4 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 THEN CAST(rt1.c3 AS BLOB) ELSE rt1.c3 END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c3))>=((rt1.c1))) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((rt1.c4)<>(rt1.c2)) WHEN x'' THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 THEN CAST(rt1.c1 AS BLOB) WHEN NULL THEN CAST(rt1.c4 AS REAL) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c3 THEN CAST(rt1.c3 AS BLOB) ELSE rt1.c3 END) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN (((rt1.c3))>=((rt1.c1))) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((rt1.c4)<>(rt1.c2)) WHEN x'' THEN rt1.c2 COLLATE RTRIM WHEN rt1.c1 THEN CAST(rt1.c1 AS BLOB) WHEN NULL THEN CAST(rt1.c4 AS REAL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (TRIM(DISTINCT (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))) ORDER BY CAST(x'' AS TEXT) COLLATE BINARY, json_patch(CAST(rt1.c1 AS REAL), x'')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(x'' AS TEXT) COLLATE BINARY, json_patch(CAST(rt1.c1 AS REAL), x'')  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (TRIM(DISTINCT (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))) ORDER BY CAST(x'' AS TEXT) COLLATE BINARY, json_patch(CAST(rt1.c1 AS REAL), x'')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c4))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(x'' AS TEXT) COLLATE BINARY, json_patch(CAST(rt1.c1 AS REAL), x'')  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)IS('')), ((vt0.c0)<<(vt0.lid)))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)IS('')), ((vt0.c0)<<(vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)IS('')), ((vt0.c0)<<(vt0.lid)))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)IS('')), ((vt0.c0)<<(vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)IS('')), ((vt0.c0)<<(vt0.lid)))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS INTEGER) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid IN ())))>=((((vt0.lid)||(vt0.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid IN ())))>=((((vt0.lid)||(vt0.lid)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid IN ())))>=((((vt0.lid)||(vt0.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid IN ())))>=((((vt0.lid)||(vt0.lid)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid IN ())))>=((((vt0.lid)||(vt0.lid))))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid, vt0.lid, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE)) ORDER BY ((((((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))))AND((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.lid, vt0.lid, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))))AND((vt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid, vt0.lid, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE)) ORDER BY ((((((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))))AND((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.lid, vt0.lid, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.lid, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)))))AND(vt0.c0)))OR(((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))))AND((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3) ORDER BY CAST(rt1.c0 AS REAL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0))<((vt0.c0))) IN (((vt0.c0)=(vt0.c0))))) ORDER BY CAST(((((vt0.lid)AND(NULL)))OR(vt0.lid)) AS INTEGER) DESC  NULLS LAST, (((vt0.lid)) BETWEEN (((((vt0.c0))>=((vt0.lid))))) AND ((CAST(vt0.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<((vt0.c0))) IN (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.lid)AND(NULL)))OR(vt0.lid)) AS INTEGER) DESC  NULLS LAST, (((vt0.lid)) BETWEEN (((((vt0.c0))>=((vt0.lid))))) AND ((CAST(vt0.lid AS INTEGER)))));
SELECT * FROM vt0 WHERE (((((vt0.c0))<((vt0.c0))) IN (((vt0.c0)=(vt0.c0))))) ORDER BY CAST(((((vt0.lid)AND(NULL)))OR(vt0.lid)) AS INTEGER) DESC  NULLS LAST, (((vt0.lid)) BETWEEN (((((vt0.c0))>=((vt0.lid))))) AND ((CAST(vt0.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<((vt0.c0))) IN (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.lid)AND(NULL)))OR(vt0.lid)) AS INTEGER) DESC  NULLS LAST, (((vt0.lid)) BETWEEN (((((vt0.c0))>=((vt0.lid))))) AND ((CAST(vt0.lid AS INTEGER)))));
SELECT * FROM vt0 WHERE (((((vt0.c0))<((vt0.c0))) IN (((vt0.c0)=(vt0.c0))))) ORDER BY CAST(((((vt0.lid)AND(NULL)))OR(vt0.lid)) AS INTEGER) DESC  NULLS LAST, (((vt0.lid)) BETWEEN (((((vt0.c0))>=((vt0.lid))))) AND ((CAST(vt0.lid AS INTEGER))));
SELECT ALL * FROM vt0 WHERE ((- (vt0.lid)));
SELECT SUM(count) FROM (SELECT (((- (vt0.lid))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.lid)));
SELECT SUM(count) FROM (SELECT (((- (vt0.lid))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (vt0.lid)));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.lid)) COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.lid, vt0.lid))))+(vt0.lid)) DESC, (NOT (((vt0.c0)/(0.6129660827933185))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.lid, vt0.lid))))+(vt0.lid)) DESC, (NOT (((vt0.c0)/(0.6129660827933185))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.lid)) COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.lid, vt0.lid))))+(vt0.lid)) DESC, (NOT (((vt0.c0)/(0.6129660827933185))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.lid, vt0.lid))))+(vt0.lid)) DESC, (NOT (((vt0.c0)/(0.6129660827933185))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.lid)) COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.lid, vt0.lid))))+(vt0.lid)) DESC, (NOT (((vt0.c0)/(0.6129660827933185))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY (NOT (((rt1.c2)==(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c2)==(rt1.c1)))) DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY (NOT (((rt1.c2)==(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c2)==(rt1.c1)))) DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY (NOT (((rt1.c2)==(rt1.c1)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid))>=((((vt0.c0)%(vt0.lid)))))) ORDER BY (((- (vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.lid))>=((((vt0.c0)%(vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid))>=((((vt0.c0)%(vt0.lid)))))) ORDER BY (((- (vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.lid))>=((((vt0.c0)%(vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid))>=((((vt0.c0)%(vt0.lid)))))) ORDER BY (((- (vt0.c0)))%(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT * FROM vt0, rt1 WHERE (((SQLITE_SOURCE_ID())|(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())|(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((SQLITE_SOURCE_ID())|(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())|(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((SQLITE_SOURCE_ID())|(rt1.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt1 WHERE (TYPEOF(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (TYPEOF(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (TYPEOF(DISTINCT NULL));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid END) IS FALSE));
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0, rt1 WHERE (load_extension(((((vt0.c0)OR(rt1.c2)))AND(x'')), ((rt1.c3) BETWEEN (vt0.lid) AND (rt1.c4)))) ORDER BY (((((0x585536f5)>(rt1.c0))))>((CASE WHEN rt1.c2 THEN rt1.c2 END)))  NULLS LAST, ((((vt0.lid)*(rt1.c1)))>(((((((((rt1.c3)OR(x'705e')))AND(vt0.lid)))AND(rt1.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((vt0.c0)OR(rt1.c2)))AND(x'')), ((rt1.c3) BETWEEN (vt0.lid) AND (rt1.c4)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((0x585536f5)>(rt1.c0))))>((CASE WHEN rt1.c2 THEN rt1.c2 END)))  NULLS LAST, ((((vt0.lid)*(rt1.c1)))>(((((((((rt1.c3)OR(x'705e')))AND(vt0.lid)))AND(rt1.c2)))OR(rt1.c2)))));
SELECT ALL * FROM vt0, rt1 WHERE (load_extension(((((vt0.c0)OR(rt1.c2)))AND(x'')), ((rt1.c3) BETWEEN (vt0.lid) AND (rt1.c4)))) ORDER BY (((((0x585536f5)>(rt1.c0))))>((CASE WHEN rt1.c2 THEN rt1.c2 END)))  NULLS LAST, ((((vt0.lid)*(rt1.c1)))>(((((((((rt1.c3)OR(x'705e')))AND(vt0.lid)))AND(rt1.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((vt0.c0)OR(rt1.c2)))AND(x'')), ((rt1.c3) BETWEEN (vt0.lid) AND (rt1.c4)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((0x585536f5)>(rt1.c0))))>((CASE WHEN rt1.c2 THEN rt1.c2 END)))  NULLS LAST, ((((vt0.lid)*(rt1.c1)))>(((((((((rt1.c3)OR(x'705e')))AND(vt0.lid)))AND(rt1.c2)))OR(rt1.c2)))));
SELECT * FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4))==((x''))))<(rt1.c4 COLLATE RTRIM)) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4))=((x''))))<(rt1.c4 COLLATE RTRIM)));
SELECT * FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4))==((x''))))<(rt1.c4 COLLATE RTRIM)) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4))=((x''))))<(rt1.c4 COLLATE RTRIM)));
SELECT * FROM vt0 CROSS JOIN rt1 ON (((((rt1.c4))==((x''))))<(rt1.c4 COLLATE RTRIM)) WHERE (rt1.c2);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)IS NOT(rt1.c3)) IN ())) ORDER BY CAST(0.7570465986373794 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)IS NOT(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.7570465986373794 AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)IS NOT(rt1.c3)) IN ())) ORDER BY CAST(0.7570465986373794 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)IS NOT(rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.7570465986373794 AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)IS NOT(rt1.c3)) IN ())) ORDER BY CAST(0.7570465986373794 AS NUMERIC) ASC;
SELECT * FROM rt1 WHERE ((((rt1.c4)OR(rt1.c1)) IN ())) ORDER BY LIKELY(DISTINCT ((rt1.c0)<(rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY LIKELY(DISTINCT ((rt1.c0)<(rt1.c3))) DESC);
SELECT * FROM rt1 WHERE ((((rt1.c4)OR(rt1.c1)) IN ())) ORDER BY LIKELY(DISTINCT ((rt1.c0)<(rt1.c3))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY LIKELY(DISTINCT ((rt1.c0)<(rt1.c3))) DESC);
SELECT * FROM rt1 WHERE ((((rt1.c4)OR(rt1.c1)) IN ())) ORDER BY LIKELY(DISTINCT ((rt1.c0)<(rt1.c3))) DESC;
SELECT ALL * FROM vt0, rt1 WHERE (((LOWER(rt1.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c2)) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((LOWER(rt1.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt1.c2)) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((LOWER(rt1.c2)) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE BINARY WHERE (((vt0.c0)!=(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE BINARY WHERE (((vt0.c0)!=(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)) COLLATE BINARY WHERE (((vt0.c0)!=(x'')) COLLATE BINARY);
SELECT * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)%(((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)%(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)%(((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)%(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)%(((rt1.c0) NOT NULL))));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c0 AS REAL)) NOT NULL));
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c0 COLLATE NOCASE)AND(((rt1.c4)||(rt1.c0)))))OR(JULIANDAY(rt1.c4, rt1.c4, rt1.c4, rt1.c2, rt1.c2))))AND(TRIM(rt1.c1, rt1.c0))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0 COLLATE NOCASE)AND(((rt1.c4)||(rt1.c0)))))OR(JULIANDAY(rt1.c4, rt1.c4, rt1.c4, rt1.c2, rt1.c2))))AND(TRIM(rt1.c1, rt1.c0))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c0 COLLATE NOCASE)AND(((rt1.c4)||(rt1.c0)))))OR(JULIANDAY(rt1.c4, rt1.c4, rt1.c4, rt1.c2, rt1.c2))))AND(TRIM(rt1.c1, rt1.c0))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0 COLLATE NOCASE)AND(((rt1.c4)||(rt1.c0)))))OR(JULIANDAY(rt1.c4, rt1.c4, rt1.c4, rt1.c2, rt1.c2))))AND(TRIM(rt1.c1, rt1.c0))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c0 COLLATE NOCASE)AND(((rt1.c4)||(rt1.c0)))))OR(JULIANDAY(rt1.c4, rt1.c4, rt1.c4, rt1.c2, rt1.c2))))AND(TRIM(rt1.c1, rt1.c0))))AND(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)&(vt0.c0)) COLLATE BINARY WHERE (((vt0.lid IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.lid IN ()) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)&(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)&(vt0.c0)) COLLATE BINARY WHERE (((vt0.lid IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.lid IN ()) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)&(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c2)&(vt0.c0)) COLLATE BINARY WHERE (((vt0.lid IN ()) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))IS(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))IS(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))IS(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))IS(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))IS(rt1.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (((vt0.lid)=((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.lid))<=((vt0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.lid)==((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid))<=((vt0.c0))) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((vt0.lid)=((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.lid))<=((vt0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.lid)==((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.lid))<=((vt0.c0))) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((vt0.lid)=((vt0.c0 IN (vt0.c0))))) ORDER BY (((vt0.lid))<=((vt0.c0))) COLLATE NOCASE;
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((546208879 IN ()));
SELECT SUM(count) FROM (SELECT (((546208879 IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((546208879 IN ()));
SELECT SUM(count) FROM (SELECT (((546208879 IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((546208879 IN ()));
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))))OR((('3') NOT NULL))) ASC  NULLS LAST, (((CASE WHEN rt1.c3 THEN rt1.c3 END))>=((((rt1.c4)<(rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))))OR((('3') NOT NULL))) ASC  NULLS LAST, (((CASE WHEN rt1.c3 THEN rt1.c3 END))>=((((rt1.c4)<(rt1.c0))))) DESC);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))))OR((('3') NOT NULL))) ASC  NULLS LAST, (((CASE WHEN rt1.c3 THEN rt1.c3 END))>=((((rt1.c4)<(rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))))OR((('3') NOT NULL))) ASC  NULLS LAST, (((CASE WHEN rt1.c3 THEN rt1.c3 END))>=((((rt1.c4)<(rt1.c0))))) DESC);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))))OR((('3') NOT NULL))) ASC  NULLS LAST, (((CASE WHEN rt1.c3 THEN rt1.c3 END))>=((((rt1.c4)<(rt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6556189855910657) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.6556189855910657) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6556189855910657) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.6556189855910657) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.6556189855910657) NOT NULL));
SELECT * FROM rt1, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(rt1.c4) IN ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((1486339198))))));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(rt1.c4) IN ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((1486339198)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(rt1.c4) IN ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((1486339198))))));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(rt1.c4) IN ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((1486339198)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((SQLITE_COMPILEOPTION_GET(rt1.c4) IN ((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((1486339198))))));
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c4)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((~ (rt1.c4))))) ORDER BY ((CAST(rt1.c2 AS REAL))&(vt0.lid COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c4)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((~ (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c2 AS REAL))&(vt0.lid COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c4)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((~ (rt1.c4))))) ORDER BY ((CAST(rt1.c2 AS REAL))&(vt0.lid COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c4)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((~ (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c2 AS REAL))&(vt0.lid COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c4)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR((~ (rt1.c4))))) ORDER BY ((CAST(rt1.c2 AS REAL))&(vt0.lid COLLATE BINARY)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((('')*(vt0.lid))) ISNULL)) ORDER BY ((((vt0.lid)OR(vt0.c0))) BETWEEN (938263579) AND ('1912718735' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((('')*(vt0.lid))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid)OR(vt0.c0))) BETWEEN (938263579) AND ('1912718735' COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE ((((('')*(vt0.lid))) ISNULL)) ORDER BY ((((vt0.lid)OR(vt0.c0))) BETWEEN (938263579) AND ('1912718735' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((('')*(vt0.lid))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid)OR(vt0.c0))) BETWEEN (938263579) AND ('1912718735' COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE ((((('')*(vt0.lid))) ISNULL)) ORDER BY ((((vt0.lid)OR(vt0.c0))) BETWEEN (938263579) AND ('1912718735' COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c0)GLOB(rt1.c2)) IN (vt0.lid COLLATE BINARY, ((((vt0.c0)AND(vt0.lid)))AND(0.402831345745544)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c0)GLOB(rt1.c2)) IN (vt0.lid COLLATE BINARY, ((((vt0.c0)AND(vt0.lid)))AND(0.402831345745544)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c0)GLOB(rt1.c2)) IN (vt0.lid COLLATE BINARY, ((((vt0.c0)AND(vt0.lid)))AND(0.402831345745544)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c0)GLOB(rt1.c2)) IN (vt0.lid COLLATE BINARY, ((((vt0.c0)AND(vt0.lid)))AND(0.402831345745544)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c0)GLOB(rt1.c2)) IN (vt0.lid COLLATE BINARY, ((((vt0.c0)AND(vt0.lid)))AND(0.402831345745544)))) WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c0)&(vt0.lid)), NULL)) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((vt0.c0)&(vt0.lid)), NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c0)&(vt0.lid)), NULL)) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((vt0.c0)&(vt0.lid)), NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c0)&(vt0.lid)), NULL)) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.lid)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((CASE vt0.lid  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c4 END))>=((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.lid  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c4 END))>=((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((CASE vt0.lid  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c4 END))>=((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.lid  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c4 END))>=((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((CASE vt0.lid  WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c4 END))>=((((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3) IS TRUE)) NOT BETWEEN (((rt1.c2)||(vt0.lid))) AND (x''))) ORDER BY ((rt1.c4)&((((((((('1080644141')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE)) NOT BETWEEN (((rt1.c2)||(vt0.lid))) AND (x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c4)&((((((((('1080644141')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3) IS TRUE)) NOT BETWEEN (((rt1.c2)||(vt0.lid))) AND (x''))) ORDER BY ((rt1.c4)&((((((((('1080644141')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE)) NOT BETWEEN (((rt1.c2)||(vt0.lid))) AND (x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c4)&((((((((('1080644141')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3) IS TRUE)) NOT BETWEEN (((rt1.c2)||(vt0.lid))) AND (x''))) ORDER BY ((rt1.c4)&((((((((('1080644141')AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(NULL))) BETWEEN (SQLITE_SOURCE_ID()) AND (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(NULL))) BETWEEN (SQLITE_SOURCE_ID()) AND (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(NULL))) BETWEEN (SQLITE_SOURCE_ID()) AND (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(NULL))) BETWEEN (SQLITE_SOURCE_ID()) AND (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(NULL))) BETWEEN (SQLITE_SOURCE_ID()) AND (((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c4 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c4 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c4 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c4 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((IFNULL(vt0.c0, rt1.c2))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((IFNULL(vt0.c0, rt1.c2))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((IFNULL(vt0.c0, rt1.c2))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((IFNULL(vt0.c0, rt1.c2))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((IFNULL(vt0.c0, rt1.c2))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY (LOWER(rt1.c0) IN ()) DESC  NULLS FIRST, ((((~ (vt0.c0)), ((0.20153831535865185) NOT BETWEEN (vt0.c0) AND (rt1.c4)), vt0.c0 COLLATE RTRIM))<=(((+ (rt1.c3)), (vt0.c0 IN ()), (rt1.c1 IN (vt0.lid)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY (LOWER(rt1.c0) IN ()) DESC  NULLS FIRST, ((((~ (vt0.c0)), ((0.20153831535865185) NOT BETWEEN (vt0.c0) AND (rt1.c4)), vt0.c0 COLLATE RTRIM))<=(((+ (rt1.c3)), (vt0.c0 IN ()), (rt1.c1 IN (vt0.lid)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY (LOWER(rt1.c0) IN ()) DESC  NULLS FIRST, ((((~ (vt0.c0)), ((0.20153831535865185) NOT BETWEEN (vt0.c0) AND (rt1.c4)), vt0.c0 COLLATE RTRIM))<=(((+ (rt1.c3)), (vt0.c0 IN ()), (rt1.c1 IN (vt0.lid)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY (LOWER(rt1.c0) IN ()) DESC  NULLS FIRST, ((((~ (vt0.c0)), ((0.20153831535865185) NOT BETWEEN (vt0.c0) AND (rt1.c4)), vt0.c0 COLLATE RTRIM))<=(((+ (rt1.c3)), (vt0.c0 IN ()), (rt1.c1 IN (vt0.lid)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c3 IN ()) IN ())) ORDER BY (LOWER(rt1.c0) IN ()) DESC  NULLS FIRST, ((((~ (vt0.c0)), ((0.20153831535865185) NOT BETWEEN (vt0.c0) AND (rt1.c4)), vt0.c0 COLLATE RTRIM))<=(((+ (rt1.c3)), (vt0.c0 IN ()), (rt1.c1 IN (vt0.lid)))))  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (+ (((rt1.c3)IS NOT(rt1.c3)))) WHERE (NULL) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.0322232732769242))  WHEN rt1.c2 THEN (~ (rt1.c0)) ELSE (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ (((rt1.c3)IS NOT(rt1.c3)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.0322232732769242))  WHEN rt1.c2 THEN (~ (rt1.c0)) ELSE (vt0.c0 IN ()) END ASC);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (+ (((rt1.c3)IS NOT(rt1.c3)))) WHERE (NULL) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.0322232732769242))  WHEN rt1.c2 THEN (~ (rt1.c0)) ELSE (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (+ (((rt1.c3)IS NOT(rt1.c3)))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.0322232732769242))  WHEN rt1.c2 THEN (~ (rt1.c0)) ELSE (vt0.c0 IN ()) END ASC);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON (+ (((rt1.c3)IS NOT(rt1.c3)))) WHERE (NULL) ORDER BY CASE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.0322232732769242))  WHEN rt1.c2 THEN (~ (rt1.c0)) ELSE (vt0.c0 IN ()) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.lid, vt0.c0))) AND ((LOWER(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.lid, vt0.c0))) AND ((LOWER(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.lid, vt0.c0))) AND ((LOWER(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.lid, vt0.c0))) AND ((LOWER(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.lid, vt0.c0))) AND ((LOWER(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))%(vt0.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))%(vt0.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))%(vt0.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))%(vt0.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.lid)AND(vt0.c0)))AND(vt0.c0)))%(vt0.lid COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY load_extension(0.2762177143709993, IFNULL(DISTINCT vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY load_extension(0.2762177143709993, IFNULL(DISTINCT vt0.c0, vt0.c0)));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY load_extension(0.2762177143709993, IFNULL(DISTINCT vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY load_extension(0.2762177143709993, IFNULL(DISTINCT vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c1)>(rt1.c0))))) ORDER BY TRIM(rt1.c4) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1)>(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(rt1.c4) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c1)>(rt1.c0))))) ORDER BY TRIM(rt1.c4) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c1)>(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(rt1.c4) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((- (((rt1.c1)>(rt1.c0))))) ORDER BY TRIM(rt1.c4) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS TEXT)) ORDER BY ((COALESCE(DISTINCT rt1.c1, rt1.c1, rt1.c4, rt1.c2))<=(((rt1.c4)-(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((COALESCE(DISTINCT rt1.c1, rt1.c1, rt1.c4, rt1.c2))<=(((rt1.c4)-(rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS TEXT)) ORDER BY ((COALESCE(DISTINCT rt1.c1, rt1.c1, rt1.c4, rt1.c2))<=(((rt1.c4)-(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((COALESCE(DISTINCT rt1.c1, rt1.c1, rt1.c4, rt1.c2))<=(((rt1.c4)-(rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS TEXT)) ORDER BY ((COALESCE(DISTINCT rt1.c1, rt1.c1, rt1.c4, rt1.c2))<=(((rt1.c4)-(rt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((- (rt1.c3)))));
SELECT ALL * FROM rt1 WHERE (CASE ((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))  WHEN (~ (rt1.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) WHEN ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3)) THEN CASE rt1.c3  WHEN x'95e6' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c4 ELSE rt1.c1 END WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c2)) ELSE ((rt1.c4)IS(rt1.c4)) END) ORDER BY x'886c' DESC  NULLS FIRST, CASE rt1.c1  WHEN -1768957791 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))  WHEN (~ (rt1.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) WHEN ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3)) THEN CASE rt1.c3  WHEN x'95e6' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c4 ELSE rt1.c1 END WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c2)) ELSE ((rt1.c4)IS(rt1.c4)) END) IS TRUE)  as count FROM rt1 ORDER BY x'886c' DESC  NULLS FIRST, CASE rt1.c1  WHEN -1768957791 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE ((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))  WHEN (~ (rt1.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) WHEN ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3)) THEN CASE rt1.c3  WHEN x'95e6' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c4 ELSE rt1.c1 END WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c2)) ELSE ((rt1.c4)IS(rt1.c4)) END) ORDER BY x'886c' DESC  NULLS FIRST, CASE rt1.c1  WHEN -1768957791 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))  WHEN (~ (rt1.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) WHEN ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3)) THEN CASE rt1.c3  WHEN x'95e6' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c4 ELSE rt1.c1 END WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c2)) ELSE ((rt1.c4)IS(rt1.c4)) END) IS TRUE)  as count FROM rt1 ORDER BY x'886c' DESC  NULLS FIRST, CASE rt1.c1  WHEN -1768957791 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CASE ((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))  WHEN (~ (rt1.c1)) THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)) WHEN ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c3)) THEN CASE rt1.c3  WHEN x'95e6' THEN rt1.c2 WHEN rt1.c4 THEN rt1.c0 WHEN x'' THEN rt1.c4 ELSE rt1.c1 END WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c1)OR(rt1.c3)))AND(rt1.c2)) ELSE ((rt1.c4)IS(rt1.c4)) END) ORDER BY x'886c' DESC  NULLS FIRST, CASE rt1.c1  WHEN -1768957791 THEN rt1.c4 WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 END COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.lid) ISNULL) COLLATE RTRIM) ORDER BY vt0.c0  NULLS LAST, (((((NOT (vt0.lid)))OR(((vt0.c0) NOT NULL))))AND(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))AND(vt0.lid)))AND(vt0.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (((((NOT (vt0.lid)))OR(((vt0.c0) NOT NULL))))AND(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))AND(vt0.lid)))AND(vt0.lid))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.lid) ISNULL) COLLATE RTRIM) ORDER BY vt0.c0  NULLS LAST, (((((NOT (vt0.lid)))OR(((vt0.c0) NOT NULL))))AND(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))AND(vt0.lid)))AND(vt0.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (((((NOT (vt0.lid)))OR(((vt0.c0) NOT NULL))))AND(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))AND(vt0.lid)))AND(vt0.lid))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.lid) ISNULL) COLLATE RTRIM) ORDER BY vt0.c0  NULLS LAST, (((((NOT (vt0.lid)))OR(((vt0.c0) NOT NULL))))AND(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))AND(vt0.lid)))AND(vt0.lid))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR('{^ux~4')))AND(((vt0.c0)-(vt0.lid))))) ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND ((- (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR('{^ux~4')))AND(((vt0.c0)-(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND ((- (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR('{^ux~4')))AND(((vt0.c0)-(vt0.lid))))) ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND ((- (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR('{^ux~4')))AND(((vt0.c0)-(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND ((- (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR('{^ux~4')))AND(((vt0.c0)-(vt0.lid))))) ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.lid AS INTEGER)) AND ((- (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.lid)))) WHERE (((((rt1.c3)AND(((((rt1.c4)OR(vt0.c0)))OR(rt1.c4)))))OR(rt1.c2))) ORDER BY CASE WHEN ((rt1.c4)<(rt1.c4)) THEN ((vt0.lid)==(rt1.c1)) ELSE (+ (rt1.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)AND(((((rt1.c4)OR(vt0.c0)))OR(rt1.c4)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.lid)))) ORDER BY CASE WHEN ((rt1.c4)<(rt1.c4)) THEN ((vt0.lid)==(rt1.c1)) ELSE (+ (rt1.c2)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.lid)))) WHERE (((((rt1.c3)AND(((((rt1.c4)OR(vt0.c0)))OR(rt1.c4)))))OR(rt1.c2))) ORDER BY CASE WHEN ((rt1.c4)<(rt1.c4)) THEN ((vt0.lid)==(rt1.c1)) ELSE (+ (rt1.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)AND(((((rt1.c4)OR(vt0.c0)))OR(rt1.c4)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.lid)))) ORDER BY CASE WHEN ((rt1.c4)<(rt1.c4)) THEN ((vt0.lid)==(rt1.c1)) ELSE (+ (rt1.c2)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (- ((NOT (vt0.lid)))) WHERE (((((rt1.c3)AND(((((rt1.c4)OR(vt0.c0)))OR(rt1.c4)))))OR(rt1.c2))) ORDER BY CASE WHEN ((rt1.c4)<(rt1.c4)) THEN ((vt0.lid)==(rt1.c1)) ELSE (+ (rt1.c2)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c3) ORDER BY (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))&((vt0.lid IN (-384190633, rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))&((vt0.lid IN (-384190633, rt1.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c3) ORDER BY (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))&((vt0.lid IN (-384190633, rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))&((vt0.lid IN (-384190633, rt1.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c3) ORDER BY (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))&((vt0.lid IN (-384190633, rt1.c4))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)+(0.46770896629922665)) COLLATE BINARY) ORDER BY ((((vt0.c0)LIKE(vt0.lid)))-(CAST(vt0.lid AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(0.46770896629922665)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.lid)))-(CAST(vt0.lid AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)+(0.46770896629922665)) COLLATE BINARY) ORDER BY ((((vt0.c0)LIKE(vt0.lid)))-(CAST(vt0.lid AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(0.46770896629922665)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.lid)))-(CAST(vt0.lid AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)+(0.46770896629922665)) COLLATE BINARY) ORDER BY ((((vt0.c0)LIKE(vt0.lid)))-(CAST(vt0.lid AS TEXT)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c3)AND(vt0.lid)))AND(rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(vt0.lid)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c3)AND(vt0.lid)))AND(rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)AND(vt0.lid)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c3)AND(vt0.lid)))AND(rt1.c1))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid, x'f4c8', vt0.lid)) BETWEEN ((-5.68910426E8, vt0.lid, x'fbdc')) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY (- (((vt0.c0)<<('\n}K7zO/')))) DESC  NULLS LAST, 1329544755 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.lid, x'f4c8', vt0.lid)) BETWEEN ((-5.68910426E8, vt0.lid, x'fbdc')) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)<<('\n}K7zO/')))) DESC  NULLS LAST, 1329544755 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid, x'f4c8', vt0.lid)) BETWEEN ((-5.68910426E8, vt0.lid, x'fbdc')) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY (- (((vt0.c0)<<('\n}K7zO/')))) DESC  NULLS LAST, 1329544755 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.lid, x'f4c8', vt0.lid)) BETWEEN ((-5.68910426E8, vt0.lid, x'fbdc')) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)<<('\n}K7zO/')))) DESC  NULLS LAST, 1329544755 ASC);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0)>(vt0.lid))))>((rt1.c4))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)>(vt0.lid))))>((rt1.c4)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0)>(vt0.lid))))>((rt1.c4))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)>(vt0.lid))))>((rt1.c4)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0)>(vt0.lid))))>((rt1.c4))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c4)GLOB(rt1.c3)), rt1.c1)) AND (((+ (x'3894')), rt1.c4 COLLATE NOCASE, CASE WHEN rt1.c4 THEN rt1.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c4)GLOB(rt1.c3)), rt1.c1)) AND (((+ (x'3894')), rt1.c4 COLLATE NOCASE, CASE WHEN rt1.c4 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c4)GLOB(rt1.c3)), rt1.c1)) AND (((+ (x'3894')), rt1.c4 COLLATE NOCASE, CASE WHEN rt1.c4 THEN rt1.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c4)GLOB(rt1.c3)), rt1.c1)) AND (((+ (x'3894')), rt1.c4 COLLATE NOCASE, CASE WHEN rt1.c4 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4, rt1.c2, rt1.c4)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE, ((rt1.c4)GLOB(rt1.c3)), rt1.c1)) AND (((+ (x'3894')), rt1.c4 COLLATE NOCASE, CASE WHEN rt1.c4 THEN rt1.c3 END))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE rt1.c1  WHEN x'' THEN rt1.c4 END) NOT NULL)) ORDER BY (((rt1.c2)+(rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN x'' THEN rt1.c4 END) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)+(rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((CASE rt1.c1  WHEN x'' THEN rt1.c4 END) NOT NULL)) ORDER BY (((rt1.c2)+(rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN x'' THEN rt1.c4 END) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)+(rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((CASE rt1.c1  WHEN x'' THEN rt1.c4 END) NOT NULL)) ORDER BY (((rt1.c2)+(rt1.c1)) IN ());
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CAST(rt1.c2 AS NUMERIC)))>=((rt1.c4))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c2 AS NUMERIC)))>=((rt1.c4)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CAST(rt1.c2 AS NUMERIC)))>=((rt1.c4))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c2 AS NUMERIC)))>=((rt1.c4)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CAST(rt1.c2 AS NUMERIC)))>=((rt1.c4))));
SELECT * FROM vt0 WHERE (((((LOWER(vt0.lid))OR(((vt0.lid)GLOB(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (603655737)))));
SELECT SUM(count) FROM (SELECT ((((((LOWER(vt0.lid))OR(((vt0.lid)GLOB(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (603655737))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((LOWER(vt0.lid))OR(((vt0.lid)GLOB(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (603655737)))));
SELECT SUM(count) FROM (SELECT ((((((LOWER(vt0.lid))OR(((vt0.lid)GLOB(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (603655737))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((LOWER(vt0.lid))OR(((vt0.lid)GLOB(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.lid) AND (603655737)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.294455291064594) ORDER BY 1.350667853E9, ((vt0.c0)>>(vt0.lid)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.294455291064594) IS TRUE)  as count FROM vt0 ORDER BY 1.350667853E9, ((vt0.c0)>>(vt0.lid)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.294455291064594) ORDER BY 1.350667853E9, ((vt0.c0)>>(vt0.lid)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.294455291064594) IS TRUE)  as count FROM vt0 ORDER BY 1.350667853E9, ((vt0.c0)>>(vt0.lid)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.294455291064594) ORDER BY 1.350667853E9, ((vt0.c0)>>(vt0.lid)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (vt0.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (vt0.lid))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (vt0.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (vt0.lid))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (vt0.lid)));
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c4)OR(rt1.c3))  WHEN ((0.21532168967240173)-(rt1.c3)) THEN ((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4)OR(rt1.c3))  WHEN ((0.21532168967240173)-(rt1.c3)) THEN ((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c4)OR(rt1.c3))  WHEN ((0.21532168967240173)-(rt1.c3)) THEN ((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4)OR(rt1.c3))  WHEN ((0.21532168967240173)-(rt1.c3)) THEN ((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c4)OR(rt1.c3))  WHEN ((0.21532168967240173)-(rt1.c3)) THEN ((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c3)) END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST('-759664512' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST('-759664512' AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST('-759664512' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST('-759664512' AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST('-759664512' AS TEXT);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.lid);
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))) AND (((((x'', rt1.c1, rt1.c1, rt1.c4, rt1.c1))<>((rt1.c0, x'', rt1.c1, rt1.c2, rt1.c3))))))) ORDER BY (~ (rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))) AND (((((x'', rt1.c1, rt1.c1, rt1.c4, rt1.c1))<>((rt1.c0, x'', rt1.c1, rt1.c2, rt1.c3))))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c1)) DESC);
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))) AND (((((x'', rt1.c1, rt1.c1, rt1.c4, rt1.c1))<>((rt1.c0, x'', rt1.c1, rt1.c2, rt1.c3))))))) ORDER BY (~ (rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))) AND (((((x'', rt1.c1, rt1.c1, rt1.c4, rt1.c1))<>((rt1.c0, x'', rt1.c1, rt1.c2, rt1.c3))))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c1)) DESC);
SELECT * FROM rt1 WHERE ((((rt1.c3)) BETWEEN ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)))) AND (((((x'', rt1.c1, rt1.c1, rt1.c4, rt1.c1))<>((rt1.c0, x'', rt1.c1, rt1.c2, rt1.c3))))))) ORDER BY (~ (rt1.c1)) DESC;
SELECT ALL * FROM vt0 WHERE ((((NULL)) BETWEEN (('131191354')) AND ((((((vt0.c0)AND(vt0.lid)))OR(vt0.lid)))))) ORDER BY CASE 0.9536000896488472  WHEN (NOT (vt0.lid)) THEN vt0.lid END ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (('131191354')) AND ((((((vt0.c0)AND(vt0.lid)))OR(vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.9536000896488472  WHEN (NOT (vt0.lid)) THEN vt0.lid END ASC);
SELECT ALL * FROM vt0 WHERE ((((NULL)) BETWEEN (('131191354')) AND ((((((vt0.c0)AND(vt0.lid)))OR(vt0.lid)))))) ORDER BY CASE 0.9536000896488472  WHEN (NOT (vt0.lid)) THEN vt0.lid END ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (('131191354')) AND ((((((vt0.c0)AND(vt0.lid)))OR(vt0.lid)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.9536000896488472  WHEN (NOT (vt0.lid)) THEN vt0.lid END ASC);
SELECT ALL * FROM vt0 WHERE ((((NULL)) BETWEEN (('131191354')) AND ((((((vt0.c0)AND(vt0.lid)))OR(vt0.lid)))))) ORDER BY CASE 0.9536000896488472  WHEN (NOT (vt0.lid)) THEN vt0.lid END ASC;
SELECT * FROM vt0 WHERE ((+ (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (UPPER(vt0.c0))));
SELECT * FROM vt0, rt1 WHERE ((((vt0.lid) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((vt0.lid) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((vt0.lid) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)<=(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)<=(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)<=(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((vt0.lid IN (rt1.c2, vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.lid IN (rt1.c2, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((vt0.lid IN (rt1.c2, vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.lid IN (rt1.c2, vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((vt0.lid IN (rt1.c2, vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY (((rt1.c4, rt1.c4, rt1.c3, x'', vt0.c0)) NOT BETWEEN (((vt0.c0 IN (rt1.c0)), CASE WHEN rt1.c3 THEN x'' ELSE rt1.c0 END, CASE WHEN rt1.c2 THEN rt1.c0 END, (NULL IN ()), ((vt0.c0)|(rt1.c3)))) AND (((('1411301862')<('1780733252')), (- (rt1.c3)), '', rt1.c1 COLLATE NOCASE, ((rt1.c4)<<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c4, rt1.c4, rt1.c3, x'', vt0.c0)) NOT BETWEEN (((vt0.c0 IN (rt1.c0)), CASE WHEN rt1.c3 THEN x'' ELSE rt1.c0 END, CASE WHEN rt1.c2 THEN rt1.c0 END, (NULL IN ()), ((vt0.c0)|(rt1.c3)))) AND (((('1411301862')<('1780733252')), (- (rt1.c3)), '', rt1.c1 COLLATE NOCASE, ((rt1.c4)<<(rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY (((rt1.c4, rt1.c4, rt1.c3, x'', vt0.c0)) NOT BETWEEN (((vt0.c0 IN (rt1.c0)), CASE WHEN rt1.c3 THEN x'' ELSE rt1.c0 END, CASE WHEN rt1.c2 THEN rt1.c0 END, (NULL IN ()), ((vt0.c0)|(rt1.c3)))) AND (((('1411301862')<('1780733252')), (- (rt1.c3)), '', rt1.c1 COLLATE NOCASE, ((rt1.c4)<<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c4, rt1.c4, rt1.c3, x'', vt0.c0)) NOT BETWEEN (((vt0.c0 IN (rt1.c0)), CASE WHEN rt1.c3 THEN x'' ELSE rt1.c0 END, CASE WHEN rt1.c2 THEN rt1.c0 END, (NULL IN ()), ((vt0.c0)|(rt1.c3)))) AND (((('1411301862')<('1780733252')), (- (rt1.c3)), '', rt1.c1 COLLATE NOCASE, ((rt1.c4)<<(rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY (((rt1.c4, rt1.c4, rt1.c3, x'', vt0.c0)) NOT BETWEEN (((vt0.c0 IN (rt1.c0)), CASE WHEN rt1.c3 THEN x'' ELSE rt1.c0 END, CASE WHEN rt1.c2 THEN rt1.c0 END, (NULL IN ()), ((vt0.c0)|(rt1.c3)))) AND (((('1411301862')<('1780733252')), (- (rt1.c3)), '', rt1.c1 COLLATE NOCASE, ((rt1.c4)<<(rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON rt1.c1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 WHEN vt0.lid THEN rt1.c2 WHEN vt0.lid THEN NULL END)<(((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 WHEN vt0.lid THEN rt1.c2 WHEN vt0.lid THEN NULL END)<(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON rt1.c1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 WHEN vt0.lid THEN rt1.c2 WHEN vt0.lid THEN NULL END)<(((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 WHEN vt0.lid THEN rt1.c2 WHEN vt0.lid THEN NULL END)<(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON rt1.c1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 WHEN vt0.lid THEN rt1.c2 WHEN vt0.lid THEN NULL END)<(((rt1.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON 1.870983103E9 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY load_extension(rt1.c4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON 1.870983103E9 ORDER BY load_extension(rt1.c4 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON 1.870983103E9 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY load_extension(rt1.c4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON 1.870983103E9 ORDER BY load_extension(rt1.c4 COLLATE NOCASE));
SELECT ALL * FROM rt1 WHERE (((0.1561655997021002) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS REAL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((0.1561655997021002) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS REAL)) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (((0.1561655997021002) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS REAL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((0.1561655997021002) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS REAL)) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (((0.1561655997021002) IS TRUE)) ORDER BY ((CAST(rt1.c2 AS REAL)) IS TRUE) DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) WHERE (rt1.c4) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END COLLATE RTRIM, CAST(NULL AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END COLLATE RTRIM, CAST(NULL AS INTEGER));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) WHERE (rt1.c4) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END COLLATE RTRIM, CAST(NULL AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END COLLATE RTRIM, CAST(NULL AS INTEGER));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) ISNULL) WHERE (rt1.c4) ORDER BY CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END COLLATE RTRIM, CAST(NULL AS INTEGER);
SELECT ALL * FROM vt0, rt1 WHERE ((((~ ('938263579')))AND(((((rt1.c4)AND(rt1.c2)))AND(vt0.lid))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('938263579')))AND(((((rt1.c4)AND(rt1.c2)))AND(vt0.lid))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((((~ ('938263579')))AND(((((rt1.c4)AND(rt1.c2)))AND(vt0.lid))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('938263579')))AND(((((rt1.c4)AND(rt1.c2)))AND(vt0.lid))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((((~ ('938263579')))AND(((((rt1.c4)AND(rt1.c2)))AND(vt0.lid))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS NOT(vt0.lid)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS NOT(vt0.lid)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS NOT(vt0.lid)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS NOT(vt0.lid)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c1)IS NOT(vt0.lid)) END);
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(DISTINCT rt1.c0, rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c0, rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(DISTINCT rt1.c0, rt1.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c0, rt1.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(DISTINCT rt1.c0, rt1.c3 COLLATE BINARY));
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS BLOB) COLLATE BINARY) ORDER BY IFNULL(DISTINCT rt1.c2, json_valid(rt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(DISTINCT rt1.c2, json_valid(rt1.c1)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS BLOB) COLLATE BINARY) ORDER BY IFNULL(DISTINCT rt1.c2, json_valid(rt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(DISTINCT rt1.c2, json_valid(rt1.c1)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(rt1.c0 AS BLOB) COLLATE BINARY) ORDER BY IFNULL(DISTINCT rt1.c2, json_valid(rt1.c1)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.lid, 0.504980022084846)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.lid, 0.504980022084846)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.lid, 0.504980022084846)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.lid, 0.504980022084846)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.lid, 0.504980022084846)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.lid, vt0.lid, vt0.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (vt0.c0) ORDER BY CAST(rt1.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY CAST(rt1.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (vt0.c0) ORDER BY CAST(rt1.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY CAST(rt1.c0 AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (vt0.c0) ORDER BY CAST(rt1.c0 AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ABS('') WHERE (((((rt1.c1)/(rt1.c3)))>=(CASE WHEN rt1.c4 THEN vt0.c0 END))) ORDER BY (CAST(rt1.c0 AS BLOB) IN ((rt1.c1 IN (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)/(rt1.c3)))>=(CASE WHEN rt1.c4 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ABS('') ORDER BY (CAST(rt1.c0 AS BLOB) IN ((rt1.c1 IN (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ABS('') WHERE (((((rt1.c1)/(rt1.c3)))>=(CASE WHEN rt1.c4 THEN vt0.c0 END))) ORDER BY (CAST(rt1.c0 AS BLOB) IN ((rt1.c1 IN (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)/(rt1.c3)))>=(CASE WHEN rt1.c4 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ABS('') ORDER BY (CAST(rt1.c0 AS BLOB) IN ((rt1.c1 IN (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ABS('') WHERE (((((rt1.c1)/(rt1.c3)))>=(CASE WHEN rt1.c4 THEN vt0.c0 END))) ORDER BY (CAST(rt1.c0 AS BLOB) IN ((rt1.c1 IN (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CAST(((((rt1.c1)OR(rt1.c4)))OR(rt1.c4)) AS NUMERIC) WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))LIKE(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (- ((rt1.c0 IN (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))LIKE(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CAST(((((rt1.c1)OR(rt1.c4)))OR(rt1.c4)) AS NUMERIC) ORDER BY (- ((rt1.c0 IN (rt1.c2)))) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CAST(((((rt1.c1)OR(rt1.c4)))OR(rt1.c4)) AS NUMERIC) WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))LIKE(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (- ((rt1.c0 IN (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))LIKE(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CAST(((((rt1.c1)OR(rt1.c4)))OR(rt1.c4)) AS NUMERIC) ORDER BY (- ((rt1.c0 IN (rt1.c2)))) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CAST(((((rt1.c1)OR(rt1.c4)))OR(rt1.c4)) AS NUMERIC) WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))LIKE(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (- ((rt1.c0 IN (rt1.c2)))) DESC;
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c4  WHEN (- (rt1.c0)) THEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c4  WHEN (- (rt1.c0)) THEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 END END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c4  WHEN (- (rt1.c0)) THEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c4  WHEN (- (rt1.c0)) THEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 END END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c4  WHEN (- (rt1.c0)) THEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 END END);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT CAST(rt1.c2 AS NUMERIC), ((rt1.c2)<<(rt1.c1)))) ORDER BY (- (json_array_length(rt1.c3, 0.4217113742728257))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt1.c2 AS NUMERIC), ((rt1.c2)<<(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY (- (json_array_length(rt1.c3, 0.4217113742728257))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT CAST(rt1.c2 AS NUMERIC), ((rt1.c2)<<(rt1.c1)))) ORDER BY (- (json_array_length(rt1.c3, 0.4217113742728257))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt1.c2 AS NUMERIC), ((rt1.c2)<<(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY (- (json_array_length(rt1.c3, 0.4217113742728257))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOTNULL));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN 0X56e43b19 THEN TRIM(vt0.lid) WHEN CAST(vt0.lid AS BLOB) THEN (NOT (vt0.lid)) WHEN TRIM(vt0.lid, vt0.lid) THEN vt0.lid COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0X56e43b19 THEN TRIM(vt0.lid) WHEN CAST(vt0.lid AS BLOB) THEN (NOT (vt0.lid)) WHEN TRIM(vt0.lid, vt0.lid) THEN vt0.lid COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN 0X56e43b19 THEN TRIM(vt0.lid) WHEN CAST(vt0.lid AS BLOB) THEN (NOT (vt0.lid)) WHEN TRIM(vt0.lid, vt0.lid) THEN vt0.lid COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0X56e43b19 THEN TRIM(vt0.lid) WHEN CAST(vt0.lid AS BLOB) THEN (NOT (vt0.lid)) WHEN TRIM(vt0.lid, vt0.lid) THEN vt0.lid COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN 0X56e43b19 THEN TRIM(vt0.lid) WHEN CAST(vt0.lid AS BLOB) THEN (NOT (vt0.lid)) WHEN TRIM(vt0.lid, vt0.lid) THEN vt0.lid COLLATE NOCASE END DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT ((rt1.c1) IS FALSE))) ORDER BY (- (rt1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt1.c1) IS FALSE))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (rt1.c2))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT ((rt1.c1) IS FALSE))) ORDER BY (- (rt1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt1.c1) IS FALSE))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (rt1.c2))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT ((rt1.c1) IS FALSE))) ORDER BY (- (rt1.c2))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c4)IS NOT(rt1.c1)))))AND(rt1.c1 COLLATE RTRIM))) ORDER BY CAST(rt1.c2 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c4)IS NOT(rt1.c1)))))AND(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c4)IS NOT(rt1.c1)))))AND(rt1.c1 COLLATE RTRIM))) ORDER BY CAST(rt1.c2 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c4)IS NOT(rt1.c1)))))AND(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c4)IS NOT(rt1.c1)))))AND(rt1.c1 COLLATE RTRIM))) ORDER BY CAST(rt1.c2 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((rt1.c1) NOT NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((rt1.c1) NOT NULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((rt1.c1) NOT NULL) AS INTEGER));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS TEXT) WHERE (load_extension((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS TEXT));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS TEXT) WHERE (load_extension((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS TEXT));
SELECT ALL * FROM vt0, rt1 WHERE ((- (HEX(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (HEX(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (HEX(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (HEX(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (HEX(rt1.c1))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN (vt0.lid, rt1.c2)))<<((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.lid, rt1.c2)))<<((- (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN (vt0.lid, rt1.c2)))<<((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.lid, rt1.c2)))<<((- (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN (vt0.lid, rt1.c2)))<<((- (rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY json_quote((((rt1.c3))!=((rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY json_quote((((rt1.c3))<>((rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY json_quote((((rt1.c3))!=((rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY json_quote((((rt1.c3))<>((rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY json_quote((((rt1.c3))!=((rt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL)) ORDER BY rt1.c0, ((rt1.c4) BETWEEN (UNLIKELY(rt1.c0)) AND (((vt0.c0)+(0.664716055236542))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0, ((rt1.c4) BETWEEN (UNLIKELY(rt1.c0)) AND (((vt0.c0)+(0.664716055236542))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL)) ORDER BY rt1.c0, ((rt1.c4) BETWEEN (UNLIKELY(rt1.c0)) AND (((vt0.c0)+(0.664716055236542))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0, ((rt1.c4) BETWEEN (UNLIKELY(rt1.c0)) AND (((vt0.c0)+(0.664716055236542))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS BLOB)) ISNULL)) ORDER BY rt1.c0, ((rt1.c4) BETWEEN (UNLIKELY(rt1.c0)) AND (((vt0.c0)+(0.664716055236542))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3)OR(rt1.c1)))OR(rt1.c4)) IN ())) ORDER BY 0.40066340723474403 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c4)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY 0.40066340723474403 ASC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3)OR(rt1.c1)))OR(rt1.c4)) IN ())) ORDER BY 0.40066340723474403 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c4)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY 0.40066340723474403 ASC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3)OR(rt1.c1)))OR(rt1.c4)) IN ())) ORDER BY 0.40066340723474403 ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c4))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c4))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c4))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c4))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4))) NOT BETWEEN (((rt1.c0)IS NOT(rt1.c4))) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM rt1, vt0 WHERE (((((((((CASE ''  WHEN rt1.c3 THEN rt1.c0 ELSE vt0.lid END)AND(((rt1.c1)>(rt1.c4)))))OR(((NULL)>=(vt0.lid)))))OR(((rt1.c3)|(rt1.c3)))))AND(((rt1.c4)>>(vt0.lid))))) ORDER BY ((IFNULL(rt1.c0, rt1.c1)) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE ''  WHEN rt1.c3 THEN rt1.c0 ELSE vt0.lid END)AND(((rt1.c1)>(rt1.c4)))))OR(((NULL)>=(vt0.lid)))))OR(((rt1.c3)|(rt1.c3)))))AND(((rt1.c4)>>(vt0.lid))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((IFNULL(rt1.c0, rt1.c1)) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((((((((CASE ''  WHEN rt1.c3 THEN rt1.c0 ELSE vt0.lid END)AND(((rt1.c1)>(rt1.c4)))))OR(((NULL)>=(vt0.lid)))))OR(((rt1.c3)|(rt1.c3)))))AND(((rt1.c4)>>(vt0.lid))))) ORDER BY ((IFNULL(rt1.c0, rt1.c1)) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE ''  WHEN rt1.c3 THEN rt1.c0 ELSE vt0.lid END)AND(((rt1.c1)>(rt1.c4)))))OR(((NULL)>=(vt0.lid)))))OR(((rt1.c3)|(rt1.c3)))))AND(((rt1.c4)>>(vt0.lid))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((IFNULL(rt1.c0, rt1.c1)) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((((((((CASE ''  WHEN rt1.c3 THEN rt1.c0 ELSE vt0.lid END)AND(((rt1.c1)>(rt1.c4)))))OR(((NULL)>=(vt0.lid)))))OR(((rt1.c3)|(rt1.c3)))))AND(((rt1.c4)>>(vt0.lid))))) ORDER BY ((IFNULL(rt1.c0, rt1.c1)) NOT BETWEEN (vt0.lid COLLATE BINARY) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((-106773629 COLLATE BINARY)AND(((vt0.c0)GLOB(vt0.lid)))))AND(((vt0.c0) ISNULL))))AND((+ (vt0.lid)))))OR(((vt0.lid)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((-106773629 COLLATE BINARY)AND(((vt0.c0)GLOB(vt0.lid)))))AND(((vt0.c0) ISNULL))))AND((+ (vt0.lid)))))OR(((vt0.lid)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((-106773629 COLLATE BINARY)AND(((vt0.c0)GLOB(vt0.lid)))))AND(((vt0.c0) ISNULL))))AND((+ (vt0.lid)))))OR(((vt0.lid)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((-106773629 COLLATE BINARY)AND(((vt0.c0)GLOB(vt0.lid)))))AND(((vt0.c0) ISNULL))))AND((+ (vt0.lid)))))OR(((vt0.lid)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((-106773629 COLLATE BINARY)AND(((vt0.c0)GLOB(vt0.lid)))))AND(((vt0.c0) ISNULL))))AND((+ (vt0.lid)))))OR(((vt0.lid)AND(vt0.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE ('1742044244') ORDER BY '619547080' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1742044244') IS TRUE)  as count FROM vt0, rt1 ORDER BY '619547080' DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ('1742044244') ORDER BY '619547080' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1742044244') IS TRUE)  as count FROM vt0, rt1 ORDER BY '619547080' DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ('1742044244') ORDER BY '619547080' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1)))) ISNULL)  NULLS FIRST;
SELECT * FROM rt1 WHERE (((rt1.c1)GLOB(((rt1.c4)GLOB(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)GLOB(((rt1.c4)GLOB(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1)GLOB(((rt1.c4)GLOB(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)GLOB(((rt1.c4)GLOB(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1)GLOB(((rt1.c4)GLOB(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS INTEGER) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY ((json_patch(vt0.c0, 1.850851202E9)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_patch(vt0.c0, 1.850851202E9)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) ORDER BY ((json_patch(vt0.c0, 1.850851202E9)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_patch(vt0.c0, 1.850851202E9)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ('530316597'))) ORDER BY (~ ((('X^c/\n㵱*r鮐')<(rt1.c0)))) ASC, ((rt1.c4)OR(rt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ ('530316597'))) IS TRUE)  as count FROM rt1 ORDER BY (~ ((('X^c/\n㵱*r鮐')<(rt1.c0)))) ASC, ((rt1.c4)OR(rt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ('530316597'))) ORDER BY (~ ((('X^c/\n㵱*r鮐')<(rt1.c0)))) ASC, ((rt1.c4)OR(rt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ ('530316597'))) IS TRUE)  as count FROM rt1 ORDER BY (~ ((('X^c/\n㵱*r鮐')<(rt1.c0)))) ASC, ((rt1.c4)OR(rt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ('530316597'))) ORDER BY (~ ((('X^c/\n㵱*r鮐')<(rt1.c0)))) ASC, ((rt1.c4)OR(rt1.c0)) COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE ((0.566092577763998 IN (((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE '-1021512127' END))) ORDER BY ((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.lid))) IN (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.566092577763998 IN (((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE '-1021512127' END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.lid))) IN (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((0.566092577763998 IN (((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE '-1021512127' END))) ORDER BY ((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.lid))) IN (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.566092577763998 IN (((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE '-1021512127' END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.lid))) IN (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((0.566092577763998 IN (((vt0.c0) IS FALSE), CASE vt0.c0  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE '-1021512127' END))) ORDER BY ((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt0.lid, vt0.lid, vt0.lid)) AND ((vt0.c0, vt0.lid, vt0.lid))) IN (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ('9|') ORDER BY (((rt1.c3)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c4 END)) AND ((CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (('9|') IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c3)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c4 END)) AND ((CAST(rt1.c0 AS NUMERIC)))));
SELECT * FROM rt1, vt0 WHERE ('9|') ORDER BY (((rt1.c3)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c4 END)) AND ((CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (('9|') IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c3)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c4 END)) AND ((CAST(rt1.c0 AS NUMERIC)))));
SELECT * FROM rt1, vt0 WHERE ('9|') ORDER BY (((rt1.c3)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c4 END)) AND ((CAST(rt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((rt1.c3, x'5a98', rt1.c4)) NOT BETWEEN ((((vt0.lid)LIKE(vt0.lid)), (rt1.c4 IN (vt0.c0, rt1.c3)), ((rt1.c4)LIKE(rt1.c2)))) AND ((((((rt1.c2)AND(x'')))OR(rt1.c4)), (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c0))), LIKELIHOOD(rt1.c2, 0.08116880612017763)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3, x'5a98', rt1.c4)) NOT BETWEEN ((((vt0.lid)LIKE(vt0.lid)), (rt1.c4 IN (vt0.c0, rt1.c3)), ((rt1.c4)LIKE(rt1.c2)))) AND ((((((rt1.c2)AND(x'')))OR(rt1.c4)), (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c0))), LIKELIHOOD(rt1.c2, 0.08116880612017763))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON NULL);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((rt1.c3, x'5a98', rt1.c4)) NOT BETWEEN ((((vt0.lid)LIKE(vt0.lid)), (rt1.c4 IN (vt0.c0, rt1.c3)), ((rt1.c4)LIKE(rt1.c2)))) AND ((((((rt1.c2)AND(x'')))OR(rt1.c4)), (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c0))), LIKELIHOOD(rt1.c2, 0.08116880612017763)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3, x'5a98', rt1.c4)) NOT BETWEEN ((((vt0.lid)LIKE(vt0.lid)), (rt1.c4 IN (vt0.c0, rt1.c3)), ((rt1.c4)LIKE(rt1.c2)))) AND ((((((rt1.c2)AND(x'')))OR(rt1.c4)), (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c0))), LIKELIHOOD(rt1.c2, 0.08116880612017763))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON NULL);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((rt1.c3, x'5a98', rt1.c4)) NOT BETWEEN ((((vt0.lid)LIKE(vt0.lid)), (rt1.c4 IN (vt0.c0, rt1.c3)), ((rt1.c4)LIKE(rt1.c2)))) AND ((((((rt1.c2)AND(x'')))OR(rt1.c4)), (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c0))), LIKELIHOOD(rt1.c2, 0.08116880612017763)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((CAST(vt0.c0 AS INTEGER), rt1.c0 COLLATE RTRIM, ((rt1.c0)LIKE(rt1.c1))))<=((((((rt1.c4)AND(rt1.c3)))AND(rt1.c1)), ((((vt0.lid)OR(rt1.c2)))OR(' C')), ((vt0.lid) IS TRUE))))) ORDER BY rt1.c2 ASC  NULLS LAST, '-1021512127' ASC, ((((x'')OR(TOTAL_CHANGES())))OR('-1e500')) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER), rt1.c0 COLLATE RTRIM, ((rt1.c0)LIKE(rt1.c1))))<=((((((rt1.c4)AND(rt1.c3)))AND(rt1.c1)), ((((vt0.lid)OR(rt1.c2)))OR(' C')), ((vt0.lid) IS TRUE))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 ASC  NULLS LAST, '-1021512127' ASC, ((((x'')OR(TOTAL_CHANGES())))OR('-1e500')) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((((CAST(vt0.c0 AS INTEGER), rt1.c0 COLLATE RTRIM, ((rt1.c0)LIKE(rt1.c1))))<=((((((rt1.c4)AND(rt1.c3)))AND(rt1.c1)), ((((vt0.lid)OR(rt1.c2)))OR(' C')), ((vt0.lid) IS TRUE))))) ORDER BY rt1.c2 ASC  NULLS LAST, '-1021512127' ASC, ((((x'')OR(TOTAL_CHANGES())))OR('-1e500')) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER), rt1.c0 COLLATE RTRIM, ((rt1.c0)LIKE(rt1.c1))))<=((((((rt1.c4)AND(rt1.c3)))AND(rt1.c1)), ((((vt0.lid)OR(rt1.c2)))OR(' C')), ((vt0.lid) IS TRUE))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 ASC  NULLS LAST, '-1021512127' ASC, ((((x'')OR(TOTAL_CHANGES())))OR('-1e500')) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((((CAST(vt0.c0 AS INTEGER), rt1.c0 COLLATE RTRIM, ((rt1.c0)LIKE(rt1.c1))))<=((((((rt1.c4)AND(rt1.c3)))AND(rt1.c1)), ((((vt0.lid)OR(rt1.c2)))OR(' C')), ((vt0.lid) IS TRUE))))) ORDER BY rt1.c2 ASC  NULLS LAST, '-1021512127' ASC, ((((x'')OR(TOTAL_CHANGES())))OR('-1e500')) DESC;
SELECT * FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 IN (rt1.c4)) IN ()) WHERE ((CASE WHEN vt0.lid THEN rt1.c2 END IN ())) ORDER BY ((UPPER(DISTINCT rt1.c3)) BETWEEN (LIKELY(rt1.c0)) AND (((vt0.lid)IS(vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.lid THEN rt1.c2 END IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 IN (rt1.c4)) IN ()) ORDER BY ((UPPER(DISTINCT rt1.c3)) BETWEEN (LIKELY(rt1.c0)) AND (((vt0.lid)IS(vt0.lid)))) ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 IN (rt1.c4)) IN ()) WHERE ((CASE WHEN vt0.lid THEN rt1.c2 END IN ())) ORDER BY ((UPPER(DISTINCT rt1.c3)) BETWEEN (LIKELY(rt1.c0)) AND (((vt0.lid)IS(vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.lid THEN rt1.c2 END IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 IN (rt1.c4)) IN ()) ORDER BY ((UPPER(DISTINCT rt1.c3)) BETWEEN (LIKELY(rt1.c0)) AND (((vt0.lid)IS(vt0.lid)))) ASC);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 IN (rt1.c4)) IN ()) WHERE ((CASE WHEN vt0.lid THEN rt1.c2 END IN ())) ORDER BY ((UPPER(DISTINCT rt1.c3)) BETWEEN (LIKELY(rt1.c0)) AND (((vt0.lid)IS(vt0.lid)))) ASC;
SELECT ALL * FROM vt0 NOT INDEXED INNER JOIN rt1 ON (((rt1.c4) BETWEEN (rt1.c3) AND (vt0.lid)) IN ()) WHERE (((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0)))>>((('-818807786')<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0)))>>((('-818807786')<(rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c4) BETWEEN (rt1.c3) AND (vt0.lid)) IN ()));
SELECT ALL * FROM vt0 NOT INDEXED INNER JOIN rt1 ON (((rt1.c4) BETWEEN (rt1.c3) AND (vt0.lid)) IN ()) WHERE (((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0)))>>((('-818807786')<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0)))>>((('-818807786')<(rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c4) BETWEEN (rt1.c3) AND (vt0.lid)) IN ()));
SELECT ALL * FROM vt0 NOT INDEXED INNER JOIN rt1 ON (((rt1.c4) BETWEEN (rt1.c3) AND (vt0.lid)) IN ()) WHERE (((((((rt1.c2)OR(rt1.c1)))AND(vt0.c0)))>>((('-818807786')<(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)AND(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)AND(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)AND(rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)AND(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE)AND(rt1.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((PRINTF(vt0.c0))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((NULL) ISNULL), (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.lid)))  NULLS FIRST, ((UNLIKELY(vt0.lid)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.lid)AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.lid)) BETWEEN ((PRINTF(vt0.c0))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) ISNULL), (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.lid)))  NULLS FIRST, ((UNLIKELY(vt0.lid)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.lid)AND(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((PRINTF(vt0.c0))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((NULL) ISNULL), (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.lid)))  NULLS FIRST, ((UNLIKELY(vt0.lid)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.lid)AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.lid)) BETWEEN ((PRINTF(vt0.c0))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) ISNULL), (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.lid)))  NULLS FIRST, ((UNLIKELY(vt0.lid)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.lid)AND(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.lid)) BETWEEN ((PRINTF(vt0.c0))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((NULL) ISNULL), (((((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0))))>=((vt0.lid)))  NULLS FIRST, ((UNLIKELY(vt0.lid)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.lid)AND(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (json_object(rt1.c4, (rt1.c3 IN ()))) ORDER BY CASE WHEN ((rt1.c1)/(rt1.c0)) THEN CAST(0.5195374662888675 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((json_object(rt1.c4, (rt1.c3 IN ()))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c1)/(rt1.c0)) THEN CAST(0.5195374662888675 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (json_object(rt1.c4, (rt1.c3 IN ()))) ORDER BY CASE WHEN ((rt1.c1)/(rt1.c0)) THEN CAST(0.5195374662888675 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((json_object(rt1.c4, (rt1.c3 IN ()))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c1)/(rt1.c0)) THEN CAST(0.5195374662888675 AS NUMERIC) END);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((NOT (rt1.c4))) NOT NULL)) ORDER BY (~ (((x'')&(rt1.c3))))  NULLS FIRST, (((vt0.c0 IN (rt1.c3)))OR(((rt1.c0)<=(0.3626861121938949))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c4))) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (~ (((x'')&(rt1.c3))))  NULLS FIRST, (((vt0.c0 IN (rt1.c3)))OR(((rt1.c0)<=(0.3626861121938949))))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((NOT (rt1.c4))) NOT NULL)) ORDER BY (~ (((x'')&(rt1.c3))))  NULLS FIRST, (((vt0.c0 IN (rt1.c3)))OR(((rt1.c0)<=(0.3626861121938949))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c4))) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (~ (((x'')&(rt1.c3))))  NULLS FIRST, (((vt0.c0 IN (rt1.c3)))OR(((rt1.c0)<=(0.3626861121938949))))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((NOT (rt1.c4))) NOT NULL)) ORDER BY (~ (((x'')&(rt1.c3))))  NULLS FIRST, (((vt0.c0 IN (rt1.c3)))OR(((rt1.c0)<=(0.3626861121938949))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN TYPEOF(DISTINCT rt1.c4) WHEN (((rt1.c1, 0.6951337871901337, rt1.c4))>=((0.5713583376258703, x'', rt1.c4))) THEN (NOT (rt1.c4)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN CAST(rt1.c2 AS NUMERIC) ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN TYPEOF(DISTINCT rt1.c4) WHEN (((rt1.c1, 0.6951337871901337, rt1.c4))>=((0.5713583376258703, x'', rt1.c4))) THEN (NOT (rt1.c4)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN CAST(rt1.c2 AS NUMERIC) ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN TYPEOF(DISTINCT rt1.c4) WHEN (((rt1.c1, 0.6951337871901337, rt1.c4))>=((0.5713583376258703, x'', rt1.c4))) THEN (NOT (rt1.c4)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN CAST(rt1.c2 AS NUMERIC) ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN TYPEOF(DISTINCT rt1.c4) WHEN (((rt1.c1, 0.6951337871901337, rt1.c4))>=((0.5713583376258703, x'', rt1.c4))) THEN (NOT (rt1.c4)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN CAST(rt1.c2 AS NUMERIC) ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)) END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN TYPEOF(DISTINCT rt1.c4) WHEN (((rt1.c1, 0.6951337871901337, rt1.c4))>=((0.5713583376258703, x'', rt1.c4))) THEN (NOT (rt1.c4)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN CAST(rt1.c2 AS NUMERIC) ELSE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3)) END);
SELECT * FROM vt0 WHERE (CASE ((((vt0.lid)OR(vt0.lid)))AND(vt0.c0))  WHEN ((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) THEN vt0.lid WHEN 'ww' THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0))>=((vt0.lid))) THEN (vt0.lid IN (vt0.lid)) END) ORDER BY NULL, ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.lid)OR(vt0.lid)))AND(vt0.c0))  WHEN ((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) THEN vt0.lid WHEN 'ww' THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0))>=((vt0.lid))) THEN (vt0.lid IN (vt0.lid)) END) IS TRUE)  as count FROM vt0 ORDER BY NULL, ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE (CASE ((((vt0.lid)OR(vt0.lid)))AND(vt0.c0))  WHEN ((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) THEN vt0.lid WHEN 'ww' THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0))>=((vt0.lid))) THEN (vt0.lid IN (vt0.lid)) END) ORDER BY NULL, ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.lid)OR(vt0.lid)))AND(vt0.c0))  WHEN ((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) THEN vt0.lid WHEN 'ww' THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0))>=((vt0.lid))) THEN (vt0.lid IN (vt0.lid)) END) IS TRUE)  as count FROM vt0 ORDER BY NULL, ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE (CASE ((((vt0.lid)OR(vt0.lid)))AND(vt0.c0))  WHEN ((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) THEN vt0.lid WHEN 'ww' THEN ((vt0.c0)>=(vt0.c0)) WHEN (((vt0.c0))>=((vt0.lid))) THEN (vt0.lid IN (vt0.lid)) END) ORDER BY NULL, ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))OR((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY)IS NOT((NOT (rt1.c0)))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY)IS NOT((NOT (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY)IS NOT((NOT (rt1.c0)))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY)IS NOT((NOT (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c1 COLLATE BINARY)IS NOT((NOT (rt1.c0)))) WHERE (rt1.c2);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOTNULL))>(rt1.c3))) ORDER BY CAST((+ (rt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))>(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY CAST((+ (rt1.c1)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOTNULL))>(rt1.c3))) ORDER BY CAST((+ (rt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))>(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY CAST((+ (rt1.c1)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOTNULL))>(rt1.c3))) ORDER BY CAST((+ (rt1.c1)) AS INTEGER);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3))) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c2, 2012975142))=((rt1.c1, rt1.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3))) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c2, 2012975142))==((rt1.c1, rt1.c3, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3))) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c2, 2012975142))=((rt1.c1, rt1.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3))) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c2, 2012975142))==((rt1.c1, rt1.c3, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c3))) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c2, 2012975142))=((rt1.c1, rt1.c3, vt0.c0))))));
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) IS FALSE)) ORDER BY (((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))<(((rt1.c4)||(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))<(((rt1.c4)||(rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) IS FALSE)) ORDER BY (((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))<(((rt1.c4)||(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))<(((rt1.c4)||(rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) IS FALSE)) ORDER BY (((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))<(((rt1.c4)||(rt1.c4))));
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY HEX(CASE WHEN vt0.c0 THEN vt0.lid END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY HEX(CASE WHEN vt0.c0 THEN vt0.lid END) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY HEX(CASE WHEN vt0.c0 THEN vt0.lid END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY HEX(CASE WHEN vt0.c0 THEN vt0.lid END) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY HEX(CASE WHEN vt0.c0 THEN vt0.lid END) ASC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (CASE ((((((((vt0.lid)AND(rt1.c2)))OR(rt1.c3)))AND(vt0.lid)))OR(vt0.lid))  WHEN ((rt1.c3)<(rt1.c1)) THEN vt0.lid WHEN CAST(rt1.c2 AS TEXT) THEN (('-1711705390')<<(vt0.c0)) WHEN (~ (vt0.lid)) THEN ((vt0.lid)IS NOT(rt1.c4)) END) ORDER BY CASE WHEN ((rt1.c0)<=(0.6856686246216738)) THEN (vt0.lid IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.lid)AND(rt1.c2)))OR(rt1.c3)))AND(vt0.lid)))OR(vt0.lid))  WHEN ((rt1.c3)<(rt1.c1)) THEN vt0.lid WHEN CAST(rt1.c2 AS TEXT) THEN (('-1711705390')<<(vt0.c0)) WHEN (~ (vt0.lid)) THEN ((vt0.lid)IS NOT(rt1.c4)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c0)<=(0.6856686246216738)) THEN (vt0.lid IN ()) END  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE ((((((((vt0.lid)AND(rt1.c2)))OR(rt1.c3)))AND(vt0.lid)))OR(vt0.lid))  WHEN ((rt1.c3)<(rt1.c1)) THEN vt0.lid WHEN CAST(rt1.c2 AS TEXT) THEN (('-1711705390')<<(vt0.c0)) WHEN (~ (vt0.lid)) THEN ((vt0.lid)IS NOT(rt1.c4)) END) ORDER BY CASE WHEN ((rt1.c0)<=(0.6856686246216738)) THEN (vt0.lid IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.lid)AND(rt1.c2)))OR(rt1.c3)))AND(vt0.lid)))OR(vt0.lid))  WHEN ((rt1.c3)<(rt1.c1)) THEN vt0.lid WHEN CAST(rt1.c2 AS TEXT) THEN (('-1711705390')<<(vt0.c0)) WHEN (~ (vt0.lid)) THEN ((vt0.lid)IS NOT(rt1.c4)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c0)<=(0.6856686246216738)) THEN (vt0.lid IN ()) END  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE ((((((((vt0.lid)AND(rt1.c2)))OR(rt1.c3)))AND(vt0.lid)))OR(vt0.lid))  WHEN ((rt1.c3)<(rt1.c1)) THEN vt0.lid WHEN CAST(rt1.c2 AS TEXT) THEN (('-1711705390')<<(vt0.c0)) WHEN (~ (vt0.lid)) THEN ((vt0.lid)IS NOT(rt1.c4)) END) ORDER BY CASE WHEN ((rt1.c0)<=(0.6856686246216738)) THEN (vt0.lid IN ()) END  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((vt0.lid COLLATE NOCASE)>=(((rt1.c3) IS TRUE)))) ORDER BY ((rt1.c1 COLLATE BINARY)&((rt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.lid COLLATE NOCASE)>=(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1 COLLATE BINARY)&((rt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((vt0.lid COLLATE NOCASE)>=(((rt1.c3) IS TRUE)))) ORDER BY ((rt1.c1 COLLATE BINARY)&((rt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.lid COLLATE NOCASE)>=(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1 COLLATE BINARY)&((rt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((vt0.lid COLLATE NOCASE)>=(((rt1.c3) IS TRUE)))) ORDER BY ((rt1.c1 COLLATE BINARY)&((rt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))&(x'6cba')) WHERE (CASE WHEN '0.5646541765107338' THEN ((rt1.c4)<(vt0.lid)) WHEN (((vt0.lid)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (- (vt0.c0)) WHEN ((vt0.lid) ISNULL) THEN -2.38643952E8 END) ORDER BY 'J?\rY n'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.5646541765107338' THEN ((rt1.c4)<(vt0.lid)) WHEN (((vt0.lid)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (- (vt0.c0)) WHEN ((vt0.lid) ISNULL) THEN -2.38643952E8 END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))&(x'6cba')) ORDER BY 'J?\rY n'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))&(x'6cba')) WHERE (CASE WHEN '0.5646541765107338' THEN ((rt1.c4)<(vt0.lid)) WHEN (((vt0.lid)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (- (vt0.c0)) WHEN ((vt0.lid) ISNULL) THEN -2.38643952E8 END) ORDER BY 'J?\rY n'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.5646541765107338' THEN ((rt1.c4)<(vt0.lid)) WHEN (((vt0.lid)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (- (vt0.c0)) WHEN ((vt0.lid) ISNULL) THEN -2.38643952E8 END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))&(x'6cba')) ORDER BY 'J?\rY n'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON (((((vt0.lid)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))&(x'6cba')) WHERE (CASE WHEN '0.5646541765107338' THEN ((rt1.c4)<(vt0.lid)) WHEN (((vt0.lid)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) THEN (- (vt0.c0)) WHEN ((vt0.lid) ISNULL) THEN -2.38643952E8 END) ORDER BY 'J?\rY n'  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))<=((((vt0.c0)=(0.7928882071852893)))))) ORDER BY vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL)))<=((((vt0.c0)==(0.7928882071852893)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))<=((((vt0.c0)=(0.7928882071852893)))))) ORDER BY vt0.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL)))<=((((vt0.c0)==(0.7928882071852893)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.lid  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))<=((((vt0.c0)=(0.7928882071852893)))))) ORDER BY vt0.lid  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (CAST(((vt0.lid) NOT BETWEEN (rt1.c2) AND (rt1.c4)) AS REAL)) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND ('털?C')))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(vt0.lid COLLATE BINARY)))AND(((rt1.c0)|(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.lid) NOT BETWEEN (rt1.c2) AND (rt1.c4)) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND ('털?C')))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(vt0.lid COLLATE BINARY)))AND(((rt1.c0)|(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))));
SELECT * FROM vt0, rt1 WHERE (CAST(((vt0.lid) NOT BETWEEN (rt1.c2) AND (rt1.c4)) AS REAL)) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND ('털?C')))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(vt0.lid COLLATE BINARY)))AND(((rt1.c0)|(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.lid) NOT BETWEEN (rt1.c2) AND (rt1.c4)) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND ('털?C')))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(vt0.lid COLLATE BINARY)))AND(((rt1.c0)|(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))));
SELECT * FROM vt0, rt1 WHERE (CAST(((vt0.lid) NOT BETWEEN (rt1.c2) AND (rt1.c4)) AS REAL)) ORDER BY ((((((((((rt1.c3) NOT BETWEEN (rt1.c1) AND ('털?C')))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))OR(vt0.lid COLLATE BINARY)))AND(((rt1.c0)|(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (rt1.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt1.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (rt1.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt1.c1)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((- (rt1.c1)) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (0.5675427437256739) ORDER BY (((((vt0.lid, vt0.c0, 0.7531188075977352, vt0.lid, vt0.lid))<>((vt0.c0, vt0.c0, vt0.lid, vt0.c0, vt0.lid)))) BETWEEN (0xffffffff9b783d71) AND (vt0.lid COLLATE NOCASE))  NULLS LAST, CAST(((('0.6648746270141074')) BETWEEN ((vt0.lid)) AND ((vt0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((0.5675427437256739) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid, vt0.c0, 0.7531188075977352, vt0.lid, vt0.lid))<>((vt0.c0, vt0.c0, vt0.lid, vt0.c0, vt0.lid)))) BETWEEN (0Xffffffff9b783d71) AND (vt0.lid COLLATE NOCASE))  NULLS LAST, CAST(((('0.6648746270141074')) BETWEEN ((vt0.lid)) AND ((vt0.c0))) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (0.5675427437256739) ORDER BY (((((vt0.lid, vt0.c0, 0.7531188075977352, vt0.lid, vt0.lid))<>((vt0.c0, vt0.c0, vt0.lid, vt0.c0, vt0.lid)))) BETWEEN (0xffffffff9b783d71) AND (vt0.lid COLLATE NOCASE))  NULLS LAST, CAST(((('0.6648746270141074')) BETWEEN ((vt0.lid)) AND ((vt0.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((0.5675427437256739) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid, vt0.c0, 0.7531188075977352, vt0.lid, vt0.lid))<>((vt0.c0, vt0.c0, vt0.lid, vt0.c0, vt0.lid)))) BETWEEN (0Xffffffff9b783d71) AND (vt0.lid COLLATE NOCASE))  NULLS LAST, CAST(((('0.6648746270141074')) BETWEEN ((vt0.lid)) AND ((vt0.c0))) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (0.5675427437256739) ORDER BY (((((vt0.lid, vt0.c0, 0.7531188075977352, vt0.lid, vt0.lid))<>((vt0.c0, vt0.c0, vt0.lid, vt0.c0, vt0.lid)))) BETWEEN (0xffffffff9b783d71) AND (vt0.lid COLLATE NOCASE))  NULLS LAST, CAST(((('0.6648746270141074')) BETWEEN ((vt0.lid)) AND ((vt0.c0))) AS INTEGER);
SELECT * FROM vt0 WHERE (((vt0.c0)>=(vt0.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)>=(vt0.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)>=(vt0.lid COLLATE NOCASE)));
SELECT * FROM rt1 WHERE (((0.3604260355682045) IS FALSE)) ORDER BY (((((((((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))AND(rt1.c3 COLLATE RTRIM)))OR(((rt1.c1)<=(rt1.c2)))))OR(((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))))OR(((rt1.c4) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3604260355682045) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))AND(rt1.c3 COLLATE RTRIM)))OR(((rt1.c1)<=(rt1.c2)))))OR(((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))))OR(((rt1.c4) IS TRUE)))  NULLS LAST);
SELECT * FROM rt1 WHERE (((0.3604260355682045) IS FALSE)) ORDER BY (((((((((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))AND(rt1.c3 COLLATE RTRIM)))OR(((rt1.c1)<=(rt1.c2)))))OR(((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))))OR(((rt1.c4) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3604260355682045) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))AND(rt1.c3 COLLATE RTRIM)))OR(((rt1.c1)<=(rt1.c2)))))OR(((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))))OR(((rt1.c4) IS TRUE)))  NULLS LAST);
SELECT * FROM rt1 WHERE (((0.3604260355682045) IS FALSE)) ORDER BY (((((((((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))AND(rt1.c3 COLLATE RTRIM)))OR(((rt1.c1)<=(rt1.c2)))))OR(((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))))OR(((rt1.c4) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)%(vt0.lid)))<<(((vt0.lid)OR(rt1.c3)))) WHERE ((((((NOT (rt1.c2)))OR(UPPER(0.9790091363629791))))OR(((((vt0.lid)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY ((x'8e7fc81c')LIKE(vt0.c0 COLLATE RTRIM)), ((((rt1.c3) BETWEEN (rt1.c4) AND (vt0.c0)))<(((rt1.c3) IS FALSE))), (((LIKELY(DISTINCT rt1.c2)))>=((vt0.lid COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))OR(UPPER(0.9790091363629791))))OR(((((vt0.lid)AND(rt1.c2)))OR(rt1.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((((vt0.c0)%(vt0.lid)))<<(((vt0.lid)OR(rt1.c3)))) ORDER BY ((x'8e7fc81c')LIKE(vt0.c0 COLLATE RTRIM)), ((((rt1.c3) BETWEEN (rt1.c4) AND (vt0.c0)))<(((rt1.c3) IS FALSE))), (((LIKELY(DISTINCT rt1.c2)))>=((vt0.lid COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)%(vt0.lid)))<<(((vt0.lid)OR(rt1.c3)))) WHERE ((((((NOT (rt1.c2)))OR(UPPER(0.9790091363629791))))OR(((((vt0.lid)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY ((x'8e7fc81c')LIKE(vt0.c0 COLLATE RTRIM)), ((((rt1.c3) BETWEEN (rt1.c4) AND (vt0.c0)))<(((rt1.c3) IS FALSE))), (((LIKELY(DISTINCT rt1.c2)))>=((vt0.lid COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))OR(UPPER(0.9790091363629791))))OR(((((vt0.lid)AND(rt1.c2)))OR(rt1.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((((vt0.c0)%(vt0.lid)))<<(((vt0.lid)OR(rt1.c3)))) ORDER BY ((x'8e7fc81c')LIKE(vt0.c0 COLLATE RTRIM)), ((((rt1.c3) BETWEEN (rt1.c4) AND (vt0.c0)))<(((rt1.c3) IS FALSE))), (((LIKELY(DISTINCT rt1.c2)))>=((vt0.lid COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((((vt0.c0)%(vt0.lid)))<<(((vt0.lid)OR(rt1.c3)))) WHERE ((((((NOT (rt1.c2)))OR(UPPER(0.9790091363629791))))OR(((((vt0.lid)AND(rt1.c2)))OR(rt1.c2))))) ORDER BY ((x'8e7fc81c')LIKE(vt0.c0 COLLATE RTRIM)), ((((rt1.c3) BETWEEN (rt1.c4) AND (vt0.c0)))<(((rt1.c3) IS FALSE))), (((LIKELY(DISTINCT rt1.c2)))>=((vt0.lid COLLATE BINARY))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=((((vt0.lid))>((rt1.c3))))) WHERE (CASE WHEN x'' THEN vt0.lid WHEN rt1.c2 THEN rt1.c2 WHEN 1.31191354E8 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt0.lid WHEN rt1.c2 THEN rt1.c2 WHEN 1.31191354E8 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=((((vt0.lid))>((rt1.c3))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=((((vt0.lid))>((rt1.c3))))) WHERE (CASE WHEN x'' THEN vt0.lid WHEN rt1.c2 THEN rt1.c2 WHEN 1.31191354E8 THEN rt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt0.lid WHEN rt1.c2 THEN rt1.c2 WHEN 1.31191354E8 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=((((vt0.lid))>((rt1.c3))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))>=((((vt0.lid))>((rt1.c3))))) WHERE (CASE WHEN x'' THEN vt0.lid WHEN rt1.c2 THEN rt1.c2 WHEN 1.31191354E8 THEN rt1.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('')) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL))))) ORDER BY CASE vt0.c0  WHEN ((vt0.lid) NOT BETWEEN (0.1051687846017324) AND (vt0.lid)) THEN ((vt0.lid)<=(vt0.lid)) ELSE 0.6951337871901337 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.lid) NOT BETWEEN (0.1051687846017324) AND (vt0.lid)) THEN ((vt0.lid)<=(vt0.lid)) ELSE 0.6951337871901337 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('')) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL))))) ORDER BY CASE vt0.c0  WHEN ((vt0.lid) NOT BETWEEN (0.1051687846017324) AND (vt0.lid)) THEN ((vt0.lid)<=(vt0.lid)) ELSE 0.6951337871901337 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.lid) NOT BETWEEN (0.1051687846017324) AND (vt0.lid)) THEN ((vt0.lid)<=(vt0.lid)) ELSE 0.6951337871901337 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('')) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) NOTNULL))))) ORDER BY CASE vt0.c0  WHEN ((vt0.lid) NOT BETWEEN (0.1051687846017324) AND (vt0.lid)) THEN ((vt0.lid)<=(vt0.lid)) ELSE 0.6951337871901337 END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.lid)))>>(vt0.lid))) ORDER BY (~ ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid)))>>(vt0.lid))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.lid)))>>(vt0.lid))) ORDER BY (~ ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.lid)))>>(vt0.lid))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((+ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.lid)))>>(vt0.lid))) ORDER BY (~ ((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY ((((vt0.c0) NOT BETWEEN ('570584352') AND (vt0.c0))) NOT BETWEEN (((vt0.lid)GLOB(vt0.lid))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN ('570584352') AND (vt0.c0))) NOT BETWEEN (((vt0.lid)GLOB(vt0.lid))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY ((((vt0.c0) NOT BETWEEN ('570584352') AND (vt0.c0))) NOT BETWEEN (((vt0.lid)GLOB(vt0.lid))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN ('570584352') AND (vt0.c0))) NOT BETWEEN (((vt0.lid)GLOB(vt0.lid))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.lid) ORDER BY ((((vt0.c0) NOT BETWEEN ('570584352') AND (vt0.c0))) NOT BETWEEN (((vt0.lid)GLOB(vt0.lid))) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) ORDER BY (('-2021652706') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('-2021652706') IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) ORDER BY (('-2021652706') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('-2021652706') IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS NUMERIC)) ORDER BY (('-2021652706') IS TRUE)  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((vt0.lid IN (vt0.c0)) AS TEXT)) ORDER BY ((((vt0.lid) NOT NULL)) ISNULL), '1762263421' DESC, (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.lid IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid) NOT NULL)) ISNULL), '1762263421' DESC, (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((vt0.lid IN (vt0.c0)) AS TEXT)) ORDER BY ((((vt0.lid) NOT NULL)) ISNULL), '1762263421' DESC, (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.lid IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid) NOT NULL)) ISNULL), '1762263421' DESC, (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((vt0.lid IN (vt0.c0)) AS TEXT)) ORDER BY ((((vt0.lid) NOT NULL)) ISNULL), '1762263421' DESC, (+ (vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((rt1.c2)>=(0Xffffffffcc598a06))) ORDER BY (((- (x'f772')))<=(((rt1.c4)*(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(0Xffffffffcc598a06))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (x'f772')))<=(((rt1.c4)*(rt1.c4)))));
SELECT * FROM vt0, rt1 WHERE (((rt1.c2)>=(0Xffffffffcc598a06))) ORDER BY (((- (x'f772')))<=(((rt1.c4)*(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(0Xffffffffcc598a06))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (x'f772')))<=(((rt1.c4)*(rt1.c4)))));
SELECT * FROM vt0, rt1 WHERE (((rt1.c2)>=(0Xffffffffcc598a06))) ORDER BY (((- (x'f772')))<=(((rt1.c4)*(rt1.c4))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)))))OR(((rt1.c0)%(rt1.c2))))) ORDER BY UPPER(((((rt1.c0)OR(rt1.c3)))AND(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c3)*(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)))))OR(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(((((rt1.c0)OR(rt1.c3)))AND(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c3)*(rt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)))))OR(((rt1.c0)%(rt1.c2))))) ORDER BY UPPER(((((rt1.c0)OR(rt1.c3)))AND(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c3)*(rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)))))OR(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(((((rt1.c0)OR(rt1.c3)))AND(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c3)*(rt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3)OR(((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)))))OR(((rt1.c0)%(rt1.c2))))) ORDER BY UPPER(((((rt1.c0)OR(rt1.c3)))AND(rt1.c0))) DESC  NULLS FIRST, (((rt1.c0)) BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((rt1.c3)*(rt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((LIKELIHOOD(DISTINCT rt1.c3, 0.9761615026522875) IN ())) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT rt1.c3, 0.9761615026522875) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((LIKELIHOOD(DISTINCT rt1.c3, 0.9761615026522875) IN ())) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT rt1.c3, 0.9761615026522875) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((LIKELIHOOD(DISTINCT rt1.c3, 0.9761615026522875) IN ())) ORDER BY rt1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (ABS(DISTINCT ((rt1.c4) NOT BETWEEN (vt0.c0) AND (vt0.lid)))) ORDER BY ((((rt1.c1)<(rt1.c3)))OR(((x'ecfe6a1f')%(rt1.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt1.c4) NOT BETWEEN (vt0.c0) AND (vt0.lid)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1)<(rt1.c3)))OR(((x'ecfe6a1f')%(rt1.c4)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (ABS(DISTINCT ((rt1.c4) NOT BETWEEN (vt0.c0) AND (vt0.lid)))) ORDER BY ((((rt1.c1)<(rt1.c3)))OR(((x'ecfe6a1f')%(rt1.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt1.c4) NOT BETWEEN (vt0.c0) AND (vt0.lid)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1)<(rt1.c3)))OR(((x'ecfe6a1f')%(rt1.c4)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (ABS(DISTINCT ((rt1.c4) NOT BETWEEN (vt0.c0) AND (vt0.lid)))) ORDER BY ((((rt1.c1)<(rt1.c3)))OR(((x'ecfe6a1f')%(rt1.c4)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)AND(((rt1.c1)>=(rt1.c4)))))OR(((rt1.c0)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)AND(((rt1.c1)>=(rt1.c4)))))OR(((rt1.c0)==(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)AND(((rt1.c1)>=(rt1.c4)))))OR(((rt1.c0)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)AND(((rt1.c1)>=(rt1.c4)))))OR(((rt1.c0)==(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)AND(((rt1.c1)>=(rt1.c4)))))OR(((rt1.c0)==(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)>=(rt1.c0))) BETWEEN ((NOT (rt1.c1))) AND (HEX(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>=(rt1.c0))) BETWEEN ((NOT (rt1.c1))) AND (HEX(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)>=(rt1.c0))) BETWEEN ((NOT (rt1.c1))) AND (HEX(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>=(rt1.c0))) BETWEEN ((NOT (rt1.c1))) AND (HEX(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)>=(rt1.c0))) BETWEEN ((NOT (rt1.c1))) AND (HEX(DISTINCT rt1.c2))));
