-- Time: 2024/06/09 14:43:26
-- Database: database62
-- Database version: 3.40.0
-- seed value: 869354462
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL , c1 BLOB , c2 REAL ); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR REPLACE INTO t1(c2, c1, c0) VALUES ('-1723853675', '126--5232664915760471379--267821272118868185-7272243673606858515-1108T', ''); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c0, c2) VALUES (NULL, NULL, NULL); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (-1.723853675E9, '', '4'); -- 0ms;
UPDATE t1 SET (c2)=(NULL); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.8809987624552845, 0.8948034671987073, 796465597); -- 0ms;
INSERT OR IGNORE INTO t1(c2, c0) VALUES (NULL, '-240870520'); -- 1ms;
REINDEX  t0; -- 0ms;
PRAGMA mmap_size = -7474674415769314393; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL), ('(%2.G櫼'), (x''); -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
ANALYZE; -- 10ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
PRAGMA journal_size_limit = 0; -- 0ms;
END; -- 0ms;
ALTER TABLE t0 RENAME TO t2; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE main; -- 0ms;
DELETE FROM t2; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t2 SET c0='' WHERE ((((((t2.c0) IS FALSE))AND(((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(0.5742938548698712)))OR(t2.c0)))))OR((('-1723853675')||(t2.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT OR IGNORE INTO t2 VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t2 VALUES ('-240870520'); -- 0ms;
INSERT OR IGNORE INTO t2 VALUES ('-240870520'); -- 0ms;
INSERT OR REPLACE INTO t2 VALUES (NULL), (0.8809987624552845), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO t2(c0) VALUES ('0.5742938548698712'), ('L_R]'), (x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t2', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('796465597'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12198'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT OR IGNORE INTO t2 VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('796465597'); -- 1ms;
CREATE INDEX i2 ON t2((- (c0 COLLATE NOCASE))) WHERE 0.3609758548811103; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=7.96465597E8 WHERE ((vt0.c0) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
ALTER TABLE t2 RENAME TO t0; -- 1ms;
PRAGMA main.incremental_vacuum; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
UPDATE vt0 SET (c0, c0)=(NULL, '0.8948034671987073'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0Xffffffffb1aa6afc), (x''), (x''); -- 1ms;
REINDEX i2; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22814'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
CREATE UNIQUE INDEX i81 ON t0(((((c0)||(c0)))>>(((c0)<>(x'e631')))) DESC); -- 0ms;
CREATE UNIQUE INDEX i35 ON t0(((((((c0) NOTNULL))OR(CAST(NULL AS NUMERIC))))AND(CASE WHEN c0 THEN c0 ELSE c0 END)) COLLATE RTRIM DESC) WHERE (NOT ((+ (c0)))); -- 0ms;
CREATE INDEX i85 ON t0((((((c0)) NOT BETWEEN ((c0)) AND ((c0))))<>(CASE c0  WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN NULL END))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX i2; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'9bb8'), (NULL), ('-1163913116'), ('-1004730620'), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), (0x52c4a24b), (-1.314231556E9), ('1750227598'), (NULL); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.3065436127169562), (x''), (0.7569019855790797); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
ANALYZE i2; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('1606315091'); -- 0ms;
ANALYZE i85; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'204f'), (x''), ('K䂢'), (NULL), (0.3443728199459878); -- 0ms;
UPDATE OR IGNORE t0 SET c0='❧E#.UO' WHERE (((((((((((t0.c0, t0.c0, t0.c0))>((t0.c0, '|kF', t0.c0))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0)/(t0.c0)))))OR(((t0.c0) NOTNULL))))AND(((t0.c0)<=(t0.c0)))); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c2 BLOB; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
CREATE INDEX i35 ON t0(ROUND(((c2)&(c2)), ((c0)<(c0))) COLLATE BINARY,LENGTH(CASE WHEN c0 THEN c2 WHEN c0 THEN c2 WHEN c2 THEN c2 ELSE c2 END)) WHERE ((((c0)IS(c2)))&(((c0) BETWEEN (c2) AND (c2)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c68; -- 4ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
VACUUM temp; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 BEGIN INSERT OR IGNORE INTO vt0(c0) VALUES ('/R');END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c68) AND (0.003882137270360686))) ISNULL)) ORDER BY (((vt0.c0 IN (0X21dc1492)))&((((t0.c2))>=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (t0.c68) AND (0.003882137270360686))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN (0X21dc1492)))&((((t0.c2))>=((vt0.c0)))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c68) AND (0.003882137270360686))) ISNULL)) ORDER BY (((vt0.c0 IN (0X21dc1492)))&((((t0.c2))>=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (t0.c68) AND (0.003882137270360686))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN (0X21dc1492)))&((((t0.c2))>=((vt0.c0)))))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (t0.c68) AND (0.003882137270360686))) ISNULL)) ORDER BY (((vt0.c0 IN (0X21dc1492)))&((((t0.c2))>=((vt0.c0)))))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN x'' END)) AND ((vt0.c0, (((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))) ASC, ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))&((~ ('Q-TStAOd'))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN x'' END)) AND ((vt0.c0, (((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))) ASC, ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))&((~ ('Q-TStAOd')))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN x'' END)) AND ((vt0.c0, (((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))) ASC, ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))&((~ ('Q-TStAOd'))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN x'' END)) AND ((vt0.c0, (((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))) ASC, ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))&((~ ('Q-TStAOd')))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN x'' END)) AND ((vt0.c0, (((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0))), vt0.c0))) ASC, ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))&((~ ('Q-TStAOd'))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68) ORDER BY CAST(t0.c68 COLLATE NOCASE AS INTEGER), (((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) IN ()), (- (t0.c68)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c68 COLLATE NOCASE AS INTEGER), (((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) IN ()), (- (t0.c68)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68) ORDER BY CAST(t0.c68 COLLATE NOCASE AS INTEGER), (((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) IN ()), (- (t0.c68)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c68 COLLATE NOCASE AS INTEGER), (((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) IN ()), (- (t0.c68)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68) ORDER BY CAST(t0.c68 COLLATE NOCASE AS INTEGER), (((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) IN ()), (- (t0.c68)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c2)==(x''))) BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)=(x''))) BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)==(x''))) BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)=(x''))) BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)==(x''))) BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((TYPEOF(t0.c2))-(((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c2))-(((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TYPEOF(t0.c2))-(((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c2))-(((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TYPEOF(t0.c2))-(((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))));
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM t0, vt0 WHERE (((((x'')AND(t0.c2)))/((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(t0.c2)))/((t0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((x'')AND(t0.c2)))/((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(t0.c2)))/((t0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((x'')AND(t0.c2)))/((t0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)IS(t0.c2)))IS(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)IS(t0.c2)))IS(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)IS(t0.c2)))IS(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)IS(t0.c2)))IS(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)IS(t0.c2)))IS(t0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))||(((t0.c68)/(-1723853675)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))||(((t0.c68)/(-1723853675))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))||(((t0.c68)/(-1723853675)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))||(((t0.c68)/(-1723853675))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ()))||(((t0.c68)/(-1723853675)))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END AS REAL)) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '-2114946151' END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '-2114946151' END COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END AS REAL)) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '-2114946151' END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '-2114946151' END COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CASE t0.c68  WHEN t0.c68 THEN t0.c68 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END AS REAL)) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE '-2114946151' END COLLATE RTRIM ASC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))|(HEX(DISTINCT 'Z ')))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))<(((t0.c2)<=(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))|(HEX(DISTINCT 'Z ')))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))<(((t0.c2)<=(t0.c68))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))|(HEX(DISTINCT 'Z ')))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))<(((t0.c2)<=(t0.c68))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))|(HEX(DISTINCT 'Z ')))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))<(((t0.c2)<=(t0.c68))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ()))|(HEX(DISTINCT 'Z ')))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)))<(((t0.c2)<=(t0.c68))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE NOCASE) ORDER BY HEX(DISTINCT ((t0.c68)IS(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(DISTINCT ((t0.c68)IS(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE NOCASE) ORDER BY HEX(DISTINCT ((t0.c68)IS(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(DISTINCT ((t0.c68)IS(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (t0.c68) AND (vt0.c0)) COLLATE NOCASE) ORDER BY HEX(DISTINCT ((t0.c68)IS(vt0.c0))) DESC;
SELECT * FROM vt0, t0 WHERE ((- (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2))))) ORDER BY DATETIME(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END, t0.c2 COLLATE BINARY, ((((t0.c68)OR(t0.c2)))OR(t0.c68))), ((((t0.c68)&(t0.c68)))<=((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY DATETIME(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END, t0.c2 COLLATE BINARY, ((((t0.c68)OR(t0.c2)))OR(t0.c68))), ((((t0.c68)&(t0.c68)))<=((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((- (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2))))) ORDER BY DATETIME(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END, t0.c2 COLLATE BINARY, ((((t0.c68)OR(t0.c2)))OR(t0.c68))), ((((t0.c68)&(t0.c68)))<=((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY DATETIME(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END, t0.c2 COLLATE BINARY, ((((t0.c68)OR(t0.c2)))OR(t0.c68))), ((((t0.c68)&(t0.c68)))<=((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((- (((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2))))) ORDER BY DATETIME(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END, t0.c2 COLLATE BINARY, ((((t0.c68)OR(t0.c2)))OR(t0.c68))), ((((t0.c68)&(t0.c68)))<=((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END))) ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c68))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c68))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END))) ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c68))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c68))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END))) ORDER BY (((t0.c2 IN ())) BETWEEN (CAST(t0.c2 AS BLOB)) AND (t0.c68))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (UNLIKELY((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (UNLIKELY((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (UNLIKELY((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c68 IN ())) AND (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c68 IN ())) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c68 IN ())) AND (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c68 IN ())) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY (((~ (t0.c2))) BETWEEN ((t0.c68 IN ())) AND (vt0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((t0.c68 IN ())))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c2 AS NUMERIC) END);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((t0.c68 IN ())))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c2 AS NUMERIC) END);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((t0.c68 IN ())))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c2 AS NUMERIC) END;
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOTNULL))<=(t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOTNULL))<=(t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOTNULL))<=(t0.c68 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOTNULL))<=(t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOTNULL))<=(t0.c68 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 INDEXED BY i35 WHERE (UNLIKELY(((t0.c68)<<(t0.c2)))) ORDER BY (((((t0.c68)-(t0.c68))))<(((+ (t0.c2))))) DESC  NULLS LAST, (((t0.c68) NOT NULL) IN ((((t0.c2)) BETWEEN (('')) AND ((t0.c68))), ((t0.c2)>=(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c68)<<(t0.c2)))) IS TRUE)  as count FROM t0 INDEXED BY i35 ORDER BY (((((t0.c68)-(t0.c68))))<(((+ (t0.c2))))) DESC  NULLS LAST, (((t0.c68) NOT NULL) IN ((((t0.c2)) BETWEEN (('')) AND ((t0.c68))), ((t0.c2)>=(t0.c68)))) ASC);
SELECT COUNT(*) FROM t0 INDEXED BY i35 WHERE (UNLIKELY(((t0.c68)<<(t0.c2)))) ORDER BY (((((t0.c68)-(t0.c68))))<(((+ (t0.c2))))) DESC  NULLS LAST, (((t0.c68) NOT NULL) IN ((((t0.c2)) BETWEEN (('')) AND ((t0.c68))), ((t0.c2)>=(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c68)<<(t0.c2)))) IS TRUE)  as count FROM t0 INDEXED BY i35 ORDER BY (((((t0.c68)-(t0.c68))))<(((+ (t0.c2))))) DESC  NULLS LAST, (((t0.c68) NOT NULL) IN ((((t0.c2)) BETWEEN (('')) AND ((t0.c68))), ((t0.c2)>=(t0.c68)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ('ixx	O6H');
SELECT SUM(count) FROM (SELECT (('ixx	O6H') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('ixx	O6H');
SELECT SUM(count) FROM (SELECT (('ixx	O6H') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('ixx	O6H');
SELECT * FROM vt0 WHERE (((((('}E뾞U')) NOT BETWEEN ((0.36233801550646194)) AND ((vt0.c0))))|(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((('}E뾞U')) NOT BETWEEN ((0.36233801550646194)) AND ((vt0.c0))))|(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('}E뾞U')) NOT BETWEEN ((0.36233801550646194)) AND ((vt0.c0))))|(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((('}E뾞U')) NOT BETWEEN ((0.36233801550646194)) AND ((vt0.c0))))|(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('}E뾞U')) NOT BETWEEN ((0.36233801550646194)) AND ((vt0.c0))))|(NULL COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((('b\' COLLATE NOCASE))<=((((735563276) ISNULL)))) WHERE ((((vt0.c0)AND(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)AND(t0.c2)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((('b\' COLLATE NOCASE))<=((((735563276) ISNULL)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((('b\' COLLATE NOCASE))<=((((735563276) ISNULL)))) WHERE ((((vt0.c0)AND(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)AND(t0.c2)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((('b\' COLLATE NOCASE))<=((((735563276) ISNULL)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((('b\' COLLATE NOCASE))<=((((735563276) ISNULL)))) WHERE ((((vt0.c0)AND(t0.c2)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.26219427740983625, vt0.c0)) AND ((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))))) ORDER BY CASE 0.10797182871296995 COLLATE NOCASE  WHEN (((vt0.c0))<((x'ad09'))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.26219427740983625, vt0.c0)) AND ((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.10797182871296995 COLLATE NOCASE  WHEN (((vt0.c0))<((x'ad09'))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.26219427740983625, vt0.c0)) AND ((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))))) ORDER BY CASE 0.10797182871296995 COLLATE NOCASE  WHEN (((vt0.c0))<((x'ad09'))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.26219427740983625, vt0.c0)) AND ((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.10797182871296995 COLLATE NOCASE  WHEN (((vt0.c0))<((x'ad09'))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0.26219427740983625, vt0.c0)) AND ((vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS TEXT))))) ORDER BY CASE 0.10797182871296995 COLLATE NOCASE  WHEN (((vt0.c0))<((x'ad09'))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (TRIM((- (vt0.c0)), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((TRIM((- (vt0.c0)), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM((- (vt0.c0)), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((TRIM((- (vt0.c0)), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM((- (vt0.c0)), CAST(vt0.c0 AS TEXT)));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END);
SELECT * FROM t0 WHERE (((((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))AND((((t0.c68))<((t0.c2))))))AND(CAST(t0.c68 AS REAL))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))AND((((t0.c68))<((t0.c2))))))AND(CAST(t0.c68 AS REAL))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))AND((((t0.c68))<((t0.c2))))))AND(CAST(t0.c68 AS REAL))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))AND((((t0.c68))<((t0.c2))))))AND(CAST(t0.c68 AS REAL))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))AND(((((t0.c68)AND(t0.c68)))OR(t0.c68)))))AND((((t0.c68))<((t0.c2))))))AND(CAST(t0.c68 AS REAL))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))));
SELECT * FROM t0, vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt0.c0)<<(t0.c68)) THEN t0.c68 COLLATE RTRIM END, (((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))))<((((x'7306')AND(t0.c68))))) DESC;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c0)<<(t0.c68)) THEN t0.c68 COLLATE RTRIM END, (((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))))<((((x'7306')AND(t0.c68))))) DESC);
SELECT * FROM t0, vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt0.c0)<<(t0.c68)) THEN t0.c68 COLLATE RTRIM END, (((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))))<((((x'7306')AND(t0.c68))))) DESC;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c0)<<(t0.c68)) THEN t0.c68 COLLATE RTRIM END, (((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))))<((((x'7306')AND(t0.c68))))) DESC);
SELECT * FROM t0, vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY CASE WHEN ((vt0.c0)<<(t0.c68)) THEN t0.c68 COLLATE RTRIM END, (((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))))<((((x'7306')AND(t0.c68))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((json_array(vt0.c0, vt0.c0)) BETWEEN (json_array(vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((CAST(vt0.c0 AS BLOB))|((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, x'7ba1'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array(vt0.c0, vt0.c0)) BETWEEN (json_array(vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))|((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, x'7ba1'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((json_array(vt0.c0, vt0.c0)) BETWEEN (json_array(vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY))) ORDER BY ((CAST(vt0.c0 AS BLOB))|((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, x'7ba1'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array(vt0.c0, vt0.c0)) BETWEEN (json_array(vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))|((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, x'7ba1'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND('-1647243860')))AND(vt0.c0)))OR(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.4494448201182879))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND('-1647243860')))AND(vt0.c0)))OR(vt0.c0)))!=((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.4494448201182879))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND('-1647243860')))AND(vt0.c0)))OR(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.4494448201182879))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND('-1647243860')))AND(vt0.c0)))OR(vt0.c0)))!=((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.4494448201182879))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND('-1647243860')))AND(vt0.c0)))OR(vt0.c0)))<>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.4494448201182879))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)/(vt0.c0)) IN (((t0.c68)<>(t0.c68)), ((((t0.c2)OR(t0.c2)))AND(t0.c68))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN (((t0.c68)!=(t0.c68)), ((((t0.c2)OR(t0.c2)))AND(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '' DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)/(vt0.c0)) IN (((t0.c68)<>(t0.c68)), ((((t0.c2)OR(t0.c2)))AND(t0.c68))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN (((t0.c68)!=(t0.c68)), ((((t0.c2)OR(t0.c2)))AND(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY '' DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)/(vt0.c0)) IN (((t0.c68)<>(t0.c68)), ((((t0.c2)OR(t0.c2)))AND(t0.c68))))) ORDER BY '' DESC;
SELECT * FROM vt0, t0 WHERE (((t0.c2)/(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c68))))) ORDER BY CAST(((t0.c2) NOT BETWEEN (t0.c68) AND (vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)/(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c2) NOT BETWEEN (t0.c68) AND (vt0.c0)) AS INTEGER) DESC);
SELECT * FROM vt0, t0 WHERE (((t0.c2)/(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c68))))) ORDER BY CAST(((t0.c2) NOT BETWEEN (t0.c68) AND (vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)/(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c2) NOT BETWEEN (t0.c68) AND (vt0.c0)) AS INTEGER) DESC);
SELECT * FROM vt0, t0 WHERE (((t0.c2)/(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c68))))) ORDER BY CAST(((t0.c2) NOT BETWEEN (t0.c68) AND (vt0.c0)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (((((((t0.c68)OR(t0.c2)))OR(t0.c2)), CAST(t0.c2 AS NUMERIC), (- (t0.c68))))==((NULL, (((t0.c2))==((t0.c68))), CAST(t0.c68 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c68)OR(t0.c2)))OR(t0.c2)), CAST(t0.c2 AS NUMERIC), (- (t0.c68))))==((NULL, (((t0.c2))=((t0.c68))), CAST(t0.c68 AS BLOB)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (((((((t0.c68)OR(t0.c2)))OR(t0.c2)), CAST(t0.c2 AS NUMERIC), (- (t0.c68))))==((NULL, (((t0.c2))==((t0.c68))), CAST(t0.c68 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c68)OR(t0.c2)))OR(t0.c2)), CAST(t0.c2 AS NUMERIC), (- (t0.c68))))==((NULL, (((t0.c2))=((t0.c68))), CAST(t0.c68 AS BLOB)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (((((((t0.c68)OR(t0.c2)))OR(t0.c2)), CAST(t0.c2 AS NUMERIC), (- (t0.c68))))==((NULL, (((t0.c2))==((t0.c68))), CAST(t0.c68 AS BLOB))));
SELECT COUNT(*) FROM vt0 WHERE (((((TRIM(DISTINCT 0.1817479153701116))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.44651988077389415 END)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT 0.1817479153701116))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.44651988077389415 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((TRIM(DISTINCT 0.1817479153701116))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.44651988077389415 END)));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT 0.1817479153701116))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.44651988077389415 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((TRIM(DISTINCT 0.1817479153701116))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.44651988077389415 END)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c2 COLLATE NOCASE)/(CASE WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) WHERE (LIKELY(t0.c2 COLLATE BINARY)) ORDER BY LIKELY(CAST(t0.c2 AS REAL)), ((((((((((t0.c2)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c68))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c2 COLLATE NOCASE)/(CASE WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) ORDER BY LIKELY(CAST(t0.c2 AS REAL)), ((((((((((t0.c2)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c68))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c2 COLLATE NOCASE)/(CASE WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) WHERE (LIKELY(t0.c2 COLLATE BINARY)) ORDER BY LIKELY(CAST(t0.c2 AS REAL)), ((((((((((t0.c2)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c68))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c2 COLLATE NOCASE)/(CASE WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) ORDER BY LIKELY(CAST(t0.c2 AS REAL)), ((((((((((t0.c2)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c68))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c2 COLLATE NOCASE)/(CASE WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) WHERE (LIKELY(t0.c2 COLLATE BINARY)) ORDER BY LIKELY(CAST(t0.c2 AS REAL)), ((((((((((t0.c2)AND(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(t0.c68))) ISNULL)  NULLS FIRST;
SELECT * FROM t0 WHERE (CAST(((t0.c68) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68) IS TRUE) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c68) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68) IS TRUE) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c68) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT * FROM t0 WHERE (((NULL)==(COALESCE(t0.c68, t0.c2)))) ORDER BY (NOT (((t0.c2)>>(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)=(COALESCE(t0.c68, t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c2)>>(NULL)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((NULL)==(COALESCE(t0.c68, t0.c2)))) ORDER BY (NOT (((t0.c2)>>(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)=(COALESCE(t0.c68, t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c2)>>(NULL)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((NULL)==(COALESCE(t0.c68, t0.c2)))) ORDER BY (NOT (((t0.c2)>>(NULL)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(t0.c2 COLLATE RTRIM)))OR(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(t0.c2 COLLATE RTRIM)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(t0.c2 COLLATE RTRIM)))OR(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(t0.c2 COLLATE RTRIM)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) IS FALSE) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))AND(t0.c2 COLLATE RTRIM)))OR(((vt0.c0) IS TRUE))));
SELECT * FROM vt0, t0 WHERE (TIME(((vt0.c0) NOTNULL), CASE t0.c2  WHEN t0.c2 THEN '' END, (t0.c2 IN ()))) ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))AND(((vt0.c0)!=(NULL)))))AND(((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)))))AND((~ (vt0.c0)))))AND((-1.64724386E9 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (t0.c2) AND (-2.114946151E9)))%(SUBSTR(vt0.c0, t0.c68)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(((vt0.c0) NOTNULL), CASE t0.c2  WHEN t0.c2 THEN '' END, (t0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))AND(((vt0.c0)!=(NULL)))))AND(((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)))))AND((~ (vt0.c0)))))AND((-1.64724386E9 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (t0.c2) AND (-2.114946151E9)))%(SUBSTR(vt0.c0, t0.c68)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (TIME(((vt0.c0) NOTNULL), CASE t0.c2  WHEN t0.c2 THEN '' END, (t0.c2 IN ()))) ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))AND(((vt0.c0)!=(NULL)))))AND(((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)))))AND((~ (vt0.c0)))))AND((-1.64724386E9 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (t0.c2) AND (-2.114946151E9)))%(SUBSTR(vt0.c0, t0.c68)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TIME(((vt0.c0) NOTNULL), CASE t0.c2  WHEN t0.c2 THEN '' END, (t0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))AND(((vt0.c0)!=(NULL)))))AND(((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)))))AND((~ (vt0.c0)))))AND((-1.64724386E9 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (t0.c2) AND (-2.114946151E9)))%(SUBSTR(vt0.c0, t0.c68)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (TIME(((vt0.c0) NOTNULL), CASE t0.c2  WHEN t0.c2 THEN '' END, (t0.c2 IN ()))) ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))AND(((vt0.c0)!=(NULL)))))AND(((t0.c68) BETWEEN (vt0.c0) AND (t0.c68)))))AND((~ (vt0.c0)))))AND((-1.64724386E9 IN (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (t0.c2) AND (-2.114946151E9)))%(SUBSTR(vt0.c0, t0.c68)))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((t0.c68 COLLATE BINARY IN ())) ORDER BY (((+ (vt0.c0))) NOTNULL) DESC  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((+ (vt0.c0))) NOTNULL) DESC  NULLS FIRST, t0.c2);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c68 COLLATE BINARY IN ())) ORDER BY (((+ (vt0.c0))) NOTNULL) DESC  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((+ (vt0.c0))) NOTNULL) DESC  NULLS FIRST, t0.c2);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c68 COLLATE BINARY IN ())) ORDER BY (((+ (vt0.c0))) NOTNULL) DESC  NULLS FIRST, t0.c2;
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)=(t0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN NULLIF(t0.c2, '1961180152') THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE CAST(vt0.c0 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN NULLIF(t0.c2, '1961180152') THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE CAST(vt0.c0 AS TEXT) END DESC);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)=(t0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN NULLIF(t0.c2, '1961180152') THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE CAST(vt0.c0 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)==(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN NULLIF(t0.c2, '1961180152') THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE CAST(vt0.c0 AS TEXT) END DESC);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)=(t0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN NULLIF(t0.c2, '1961180152') THEN CASE WHEN t0.c68 THEN t0.c68 END ELSE CAST(vt0.c0 AS TEXT) END DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN 7.96465597E8 THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 7.96465597E8 THEN NULL END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN 7.96465597E8 THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 7.96465597E8 THEN NULL END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN 7.96465597E8 THEN NULL END);
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((((('')AND(t0.c68)))AND(vt0.c0)))AND(CAST(t0.c68 AS REAL))))AND(((t0.c68) IS TRUE))))OR(((vt0.c0)%(t0.c2)))))AND(((vt0.c0) NOT NULL))) WHERE ((- (CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((((('')AND(t0.c68)))AND(vt0.c0)))AND(CAST(t0.c68 AS REAL))))AND(((t0.c68) IS TRUE))))OR(((vt0.c0)%(t0.c2)))))AND(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((((('')AND(t0.c68)))AND(vt0.c0)))AND(CAST(t0.c68 AS REAL))))AND(((t0.c68) IS TRUE))))OR(((vt0.c0)%(t0.c2)))))AND(((vt0.c0) NOT NULL))) WHERE ((- (CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((((('')AND(t0.c68)))AND(vt0.c0)))AND(CAST(t0.c68 AS REAL))))AND(((t0.c68) IS TRUE))))OR(((vt0.c0)%(t0.c2)))))AND(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((((((((('')AND(t0.c68)))AND(vt0.c0)))AND(CAST(t0.c68 AS REAL))))AND(((t0.c68) IS TRUE))))OR(((vt0.c0)%(t0.c2)))))AND(((vt0.c0) NOT NULL))) WHERE ((- (CAST(t0.c2 AS INTEGER))));
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c68)+(t0.c2)) AS TEXT)) ORDER BY (((((t0.c68))<>((x''))))AND(t0.c68 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)+(t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c68))!=((x''))))AND(t0.c68 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c68)+(t0.c2)) AS TEXT)) ORDER BY (((((t0.c68))<>((x''))))AND(t0.c68 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c68)+(t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c68))!=((x''))))AND(t0.c68 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c68)+(t0.c2)) AS TEXT)) ORDER BY (((((t0.c68))<>((x''))))AND(t0.c68 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c68 IN ()))AND(t0.c2)))OR((vt0.c0 IN (0xffffffffc75a9660))))) ORDER BY (+ (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN ()))AND(t0.c2)))OR((vt0.c0 IN (0xffffffffc75a9660))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c68 IN ()))AND(t0.c2)))OR((vt0.c0 IN (0xffffffffc75a9660))))) ORDER BY (+ (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68 IN ()))AND(t0.c2)))OR((vt0.c0 IN (0xffffffffc75a9660))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c68 IN ()))AND(t0.c2)))OR((vt0.c0 IN (0xffffffffc75a9660))))) ORDER BY (+ (t0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((NOT (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c68))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c68))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (t0.c68)));
SELECT * FROM vt0 INNER JOIN t0 ON (~ (((('-1647243860')) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) WHERE (CASE WHEN (- (vt0.c0)) THEN (t0.c2 IN ()) ELSE ((t0.c68)<(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt0.c0)) THEN (t0.c2 IN ()) ELSE ((t0.c68)<(t0.c2)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (~ (((('-1647243860')) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))));
SELECT * FROM vt0 INNER JOIN t0 ON (~ (((('-1647243860')) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) WHERE (CASE WHEN (- (vt0.c0)) THEN (t0.c2 IN ()) ELSE ((t0.c68)<(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt0.c0)) THEN (t0.c2 IN ()) ELSE ((t0.c68)<(t0.c2)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (~ (((('-1647243860')) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))));
SELECT * FROM vt0 INNER JOIN t0 ON (~ (((('-1647243860')) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) WHERE (CASE WHEN (- (vt0.c0)) THEN (t0.c2 IN ()) ELSE ((t0.c68)<(t0.c2)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c2)LIKE(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)LIKE(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c2)LIKE(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)LIKE(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c2)LIKE(((t0.c68) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 END COLLATE NOCASE) ORDER BY ((0xffffffffc41d0704)*(x'513d')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((0xffffffffc41d0704)*(x'513d')) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 END COLLATE NOCASE) ORDER BY ((0xffffffffc41d0704)*(x'513d')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((0xffffffffc41d0704)*(x'513d')) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 END COLLATE NOCASE) ORDER BY ((0xffffffffc41d0704)*(x'513d')) ASC;
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE BINARY))!=(((t0.c68 IN ()))))) ORDER BY ((CAST(vt0.c0 AS BLOB))OR(((t0.c68)IS(t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<>(((t0.c68 IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.c0 AS BLOB))OR(((t0.c68)IS(t0.c68)))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE BINARY))!=(((t0.c68 IN ()))))) ORDER BY ((CAST(vt0.c0 AS BLOB))OR(((t0.c68)IS(t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<>(((t0.c68 IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(vt0.c0 AS BLOB))OR(((t0.c68)IS(t0.c68)))) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 COLLATE BINARY))!=(((t0.c68 IN ()))))) ORDER BY ((CAST(vt0.c0 AS BLOB))OR(((t0.c68)IS(t0.c68)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CHAR(TRIM(DISTINCT t0.c2, t0.c2), CASE WHEN t0.c68 THEN t0.c2 END, (((('-1845812991')OR(t0.c2)))OR(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(TRIM(DISTINCT t0.c2, t0.c2), CASE WHEN t0.c68 THEN t0.c2 END, (((('-1845812991')OR(t0.c2)))OR(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CHAR(TRIM(DISTINCT t0.c2, t0.c2), CASE WHEN t0.c68 THEN t0.c2 END, (((('-1845812991')OR(t0.c2)))OR(t0.c68))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(TRIM(DISTINCT t0.c2, t0.c2), CASE WHEN t0.c68 THEN t0.c2 END, (((('-1845812991')OR(t0.c2)))OR(t0.c68)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CHAR(TRIM(DISTINCT t0.c2, t0.c2), CASE WHEN t0.c68 THEN t0.c2 END, (((('-1845812991')OR(t0.c2)))OR(t0.c68))));
SELECT * FROM vt0, t0 WHERE ((- (t0.c68)) COLLATE NOCASE) ORDER BY CASE (NOT (vt0.c0))  WHEN ((t0.c2)/(t0.c68)) THEN ((vt0.c0)/(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (NOT (vt0.c0))  WHEN ((t0.c2)/(t0.c68)) THEN ((vt0.c0)/(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((- (t0.c68)) COLLATE NOCASE) ORDER BY CASE (NOT (vt0.c0))  WHEN ((t0.c2)/(t0.c68)) THEN ((vt0.c0)/(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (NOT (vt0.c0))  WHEN ((t0.c2)/(t0.c68)) THEN ((vt0.c0)/(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((- (t0.c68)) COLLATE NOCASE) ORDER BY CASE (NOT (vt0.c0))  WHEN ((t0.c2)/(t0.c68)) THEN ((vt0.c0)/(vt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c2)AND(t0.c68))))) ORDER BY t0.c68 DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)AND(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY t0.c68 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c2)AND(t0.c68))))) ORDER BY t0.c68 DESC;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)AND(t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY t0.c68 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c2)AND(t0.c68))))) ORDER BY t0.c68 DESC;
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY (((~ (t0.c2))) NOTNULL) ASC, (+ ((+ (t0.c68)))) ASC  NULLS FIRST, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)%(((('568071314')) NOT BETWEEN ((t0.c68)) AND ((0xffffffff91fb2101))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c2))) NOTNULL) ASC, (+ ((+ (t0.c68)))) ASC  NULLS FIRST, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)%(((('568071314')) NOT BETWEEN ((t0.c68)) AND ((0Xffffffff91fb2101))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY (((~ (t0.c2))) NOTNULL) ASC, (+ ((+ (t0.c68)))) ASC  NULLS FIRST, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)%(((('568071314')) NOT BETWEEN ((t0.c68)) AND ((0xffffffff91fb2101))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c2))) NOTNULL) ASC, (+ ((+ (t0.c68)))) ASC  NULLS FIRST, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)%(((('568071314')) NOT BETWEEN ((t0.c68)) AND ((0Xffffffff91fb2101))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY (((~ (t0.c2))) NOTNULL) ASC, (+ ((+ (t0.c68)))) ASC  NULLS FIRST, ((CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)%(((('568071314')) NOT BETWEEN ((t0.c68)) AND ((0xffffffff91fb2101))))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2 IN ())))>=((('1388618315' IN ())))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>=((('1388618315' IN ()))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2 IN ())))>=((('1388618315' IN ())))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))>=((('1388618315' IN ()))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2 IN ())))>=((('1388618315' IN ())))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)|(t0.c68)) THEN ((t0.c2) BETWEEN (NULL) AND (t0.c2)) END) ORDER BY ((((t0.c68 IN ())))>=(((((t0.c68))<((t0.c68))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)|(t0.c68)) THEN ((t0.c2) BETWEEN (NULL) AND (t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68 IN ())))>=(((((t0.c68))<((t0.c68))))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)|(t0.c68)) THEN ((t0.c2) BETWEEN (NULL) AND (t0.c2)) END) ORDER BY ((((t0.c68 IN ())))>=(((((t0.c68))<((t0.c68))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)|(t0.c68)) THEN ((t0.c2) BETWEEN (NULL) AND (t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68 IN ())))>=(((((t0.c68))<((t0.c68))))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)|(t0.c68)) THEN ((t0.c2) BETWEEN (NULL) AND (t0.c2)) END) ORDER BY ((((t0.c68 IN ())))>=(((((t0.c68))<((t0.c68))))))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CHAR(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ((CHAR(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CHAR(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ((CHAR(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CHAR(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c2))));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'0bbbd0a1')))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) END) ORDER BY ((UNLIKELY(DISTINCT vt0.c0))IS NOT(((((x'')OR(vt0.c0)))AND(vt0.c0)))) ASC, ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.08297657021054294)))AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))==((vt0.c0))) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST('0.1817479153701116' AS NUMERIC) ELSE ((vt0.c0)<<(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'0bbbd0a1')))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0))IS NOT(((((x'')OR(vt0.c0)))AND(vt0.c0)))) ASC, ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.08297657021054294)))AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))=((vt0.c0))) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST('0.1817479153701116' AS NUMERIC) ELSE ((vt0.c0)<<(vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'0bbbd0a1')))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) END) ORDER BY ((UNLIKELY(DISTINCT vt0.c0))IS NOT(((((x'')OR(vt0.c0)))AND(vt0.c0)))) ASC, ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.08297657021054294)))AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))==((vt0.c0))) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST('0.1817479153701116' AS NUMERIC) ELSE ((vt0.c0)<<(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'0bbbd0a1')))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0))IS NOT(((((x'')OR(vt0.c0)))AND(vt0.c0)))) ASC, ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.08297657021054294)))AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN load_extension(vt0.c0, vt0.c0) THEN (((vt0.c0))=((vt0.c0))) WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST('0.1817479153701116' AS NUMERIC) ELSE ((vt0.c0)<<(vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68)/(t0.c68)) IN ())) ORDER BY ((((((vt0.c0)OR(0xffffffff84feebc9)))OR(0.49004756126787197)))IS NOT(vt0.c0 COLLATE BINARY))  NULLS FIRST, SQLITE_VERSION(), (('Op(') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c68)/(t0.c68)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY ((((((vt0.c0)OR(0xffffffff84feebc9)))OR(0.49004756126787197)))IS NOT(vt0.c0 COLLATE BINARY))  NULLS FIRST, SQLITE_VERSION(), (('Op(') IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68)/(t0.c68)) IN ())) ORDER BY ((((((vt0.c0)OR(0xffffffff84feebc9)))OR(0.49004756126787197)))IS NOT(vt0.c0 COLLATE BINARY))  NULLS FIRST, SQLITE_VERSION(), (('Op(') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c68)/(t0.c68)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY ((((((vt0.c0)OR(0xffffffff84feebc9)))OR(0.49004756126787197)))IS NOT(vt0.c0 COLLATE BINARY))  NULLS FIRST, SQLITE_VERSION(), (('Op(') IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68)/(t0.c68)) IN ())) ORDER BY ((((((vt0.c0)OR(0xffffffff84feebc9)))OR(0.49004756126787197)))IS NOT(vt0.c0 COLLATE BINARY))  NULLS FIRST, SQLITE_VERSION(), (('Op(') IS TRUE) DESC;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c2)) AS REAL) WHERE ((((((t0.c68 IN ()))OR(CAST(t0.c68 AS INTEGER))))OR(((t0.c2) BETWEEN (vt0.c0) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68 IN ()))OR(CAST(t0.c68 AS INTEGER))))OR(((t0.c2) BETWEEN (vt0.c0) AND (t0.c68))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c2)) AS REAL));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c2)) AS REAL) WHERE ((((((t0.c68 IN ()))OR(CAST(t0.c68 AS INTEGER))))OR(((t0.c2) BETWEEN (vt0.c0) AND (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68 IN ()))OR(CAST(t0.c68 AS INTEGER))))OR(((t0.c2) BETWEEN (vt0.c0) AND (t0.c68))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c2)) AS REAL));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON CAST((+ (t0.c2)) AS REAL) WHERE ((((((t0.c68 IN ()))OR(CAST(t0.c68 AS INTEGER))))OR(((t0.c2) BETWEEN (vt0.c0) AND (t0.c68)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c68)) BETWEEN ((t0.c68)) AND ((t0.c68))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ((vt0.c0 IN ())))) ORDER BY (((vt0.c0) NOT BETWEEN ('❧E#.UO') AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffbc3059a0)) IN (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN ('❧E#.UO') AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffffbc3059a0)) IN (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ((vt0.c0 IN ())))) ORDER BY (((vt0.c0) NOT BETWEEN ('❧E#.UO') AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffbc3059a0)) IN (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN ('❧E#.UO') AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffffbc3059a0)) IN (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ((vt0.c0 IN ())))) ORDER BY (((vt0.c0) NOT BETWEEN ('❧E#.UO') AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffbc3059a0)) IN (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)%((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)%((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)%((vt0.c0 IN ()))));
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c2) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c2) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST(((t0.c2) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0, vt0 WHERE (LIKELY(((t0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c2) NOTNULL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LIKELY(((t0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c2) NOTNULL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LIKELY(((t0.c2) NOTNULL)));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN CAST(t0.c2 AS TEXT) THEN ((vt0.c0) IS TRUE) ELSE ((t0.c2)==(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN CAST(t0.c2 AS TEXT) THEN ((vt0.c0) IS TRUE) ELSE ((t0.c2)==(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN CAST(t0.c2 AS TEXT) THEN ((vt0.c0) IS TRUE) ELSE ((t0.c2)==(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN CAST(t0.c2 AS TEXT) THEN ((vt0.c0) IS TRUE) ELSE ((t0.c2)==(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY CASE CAST(t0.c2 AS INTEGER)  WHEN CAST(t0.c2 AS TEXT) THEN ((vt0.c0) IS TRUE) ELSE ((t0.c2)==(vt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>>(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))>>(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>>(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))>>(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>>(TYPEOF(vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((CAST(t0.c68 AS TEXT)))<((((NULL) BETWEEN (t0.c68) AND (vt0.c0)))))) ORDER BY vt0.c0 ASC, (((~ (vt0.c0)))LIKE(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS TEXT)))<((((NULL) BETWEEN (t0.c68) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC, (((~ (vt0.c0)))LIKE(((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((CAST(t0.c68 AS TEXT)))<((((NULL) BETWEEN (t0.c68) AND (vt0.c0)))))) ORDER BY vt0.c0 ASC, (((~ (vt0.c0)))LIKE(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c68 AS TEXT)))<((((NULL) BETWEEN (t0.c68) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC, (((~ (vt0.c0)))LIKE(((vt0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((CAST(t0.c68 AS TEXT)))<((((NULL) BETWEEN (t0.c68) AND (vt0.c0)))))) ORDER BY vt0.c0 ASC, (((~ (vt0.c0)))LIKE(((vt0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((t0.c2, t0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, '1388618315', vt0.c0)) AND ((t0.c2, vt0.c0, vt0.c0))) COLLATE BINARY) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, '1388618315', vt0.c0)) AND ((t0.c2, vt0.c0, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2) IS TRUE) IN ()) ASC);
SELECT * FROM vt0, t0 WHERE ((((t0.c2, t0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, '1388618315', vt0.c0)) AND ((t0.c2, vt0.c0, vt0.c0))) COLLATE BINARY) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, '1388618315', vt0.c0)) AND ((t0.c2, vt0.c0, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2) IS TRUE) IN ()) ASC);
SELECT * FROM vt0, t0 WHERE ((((t0.c2, t0.c2, vt0.c0)) NOT BETWEEN ((t0.c68, '1388618315', vt0.c0)) AND ((t0.c2, vt0.c0, vt0.c0))) COLLATE BINARY) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) ISNULL)) NOT NULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c68 END COLLATE RTRIM) ORDER BY DATETIME(((t0.c2)GLOB(vt0.c0)), vt0.c0, ((t0.c68)IS NOT(t0.c68)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c68 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY DATETIME(((t0.c2)GLOB(vt0.c0)), vt0.c0, ((t0.c68)IS NOT(t0.c68))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c68 END COLLATE RTRIM) ORDER BY DATETIME(((t0.c2)GLOB(vt0.c0)), vt0.c0, ((t0.c68)IS NOT(t0.c68)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c68 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY DATETIME(((t0.c2)GLOB(vt0.c0)), vt0.c0, ((t0.c68)IS NOT(t0.c68))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c68 END COLLATE RTRIM) ORDER BY DATETIME(((t0.c2)GLOB(vt0.c0)), vt0.c0, ((t0.c68)IS NOT(t0.c68)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c68) ISNULL)) AND (CASE WHEN 0.1384490882040318 THEN vt0.c0 END)) WHERE (((TRIM(DISTINCT t0.c2)) NOT NULL)) ORDER BY (((+ (t0.c2)))==((~ (t0.c68))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c2)) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c68) ISNULL)) AND (CASE WHEN 0.1384490882040318 THEN vt0.c0 END)) ORDER BY (((+ (t0.c2)))==((~ (t0.c68)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c68) ISNULL)) AND (CASE WHEN 0.1384490882040318 THEN vt0.c0 END)) WHERE (((TRIM(DISTINCT t0.c2)) NOT NULL)) ORDER BY (((+ (t0.c2)))==((~ (t0.c68))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c2)) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c68) ISNULL)) AND (CASE WHEN 0.1384490882040318 THEN vt0.c0 END)) ORDER BY (((+ (t0.c2)))==((~ (t0.c68)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c68) ISNULL)) AND (CASE WHEN 0.1384490882040318 THEN vt0.c0 END)) WHERE (((TRIM(DISTINCT t0.c2)) NOT NULL)) ORDER BY (((+ (t0.c2)))==((~ (t0.c68))));
SELECT * FROM t0, vt0 WHERE (((t0.c2 COLLATE RTRIM)<=(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) ORDER BY ((((vt0.c0 IN (t0.c2, t0.c2)), (((t0.c68, t0.c2, t0.c2))!=((t0.c68, t0.c2, vt0.c0))), '0.7569019855790797'))<>((t0.c68 COLLATE RTRIM, (~ (t0.c68)), ((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM)<=(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0 IN (t0.c2, t0.c2)), (((t0.c68, t0.c2, t0.c2))<>((t0.c68, t0.c2, vt0.c0))), '0.7569019855790797'))!=((t0.c68 COLLATE RTRIM, (~ (t0.c68)), ((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM t0, vt0 WHERE (((t0.c2 COLLATE RTRIM)<=(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) ORDER BY ((((vt0.c0 IN (t0.c2, t0.c2)), (((t0.c68, t0.c2, t0.c2))!=((t0.c68, t0.c2, vt0.c0))), '0.7569019855790797'))<>((t0.c68 COLLATE RTRIM, (~ (t0.c68)), ((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM)<=(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0 IN (t0.c2, t0.c2)), (((t0.c68, t0.c2, t0.c2))<>((t0.c68, t0.c2, vt0.c0))), '0.7569019855790797'))!=((t0.c68 COLLATE RTRIM, (~ (t0.c68)), ((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM t0, vt0 WHERE (((t0.c2 COLLATE RTRIM)<=(CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) ORDER BY ((((vt0.c0 IN (t0.c2, t0.c2)), (((t0.c68, t0.c2, t0.c2))!=((t0.c68, t0.c2, vt0.c0))), '0.7569019855790797'))<>((t0.c68 COLLATE RTRIM, (~ (t0.c68)), ((t0.c68) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT ALL * FROM t0, vt0 WHERE (LOWER(((((vt0.c0)OR(vt0.c0)))OR(t0.c68))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((vt0.c0)OR(vt0.c0)))OR(t0.c68)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LOWER(((((vt0.c0)OR(vt0.c0)))OR(t0.c68))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((vt0.c0)OR(vt0.c0)))OR(t0.c68)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LOWER(((((vt0.c0)OR(vt0.c0)))OR(t0.c68))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB((((vt0.c0))<=((vt0.c0))))));
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT), (+ (CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT), (+ (CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT), (+ (CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT), (+ (CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT), (+ (CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY PRINTF((((0.18252163226868634))<>((NULL)))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY PRINTF((((0.18252163226868634))<>((NULL)))), vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY PRINTF((((0.18252163226868634))<>((NULL)))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY PRINTF((((0.18252163226868634))<>((NULL)))), vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY PRINTF((((0.18252163226868634))<>((NULL)))), vt0.c0  NULLS LAST;
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c68 WHERE (0.5742938548698712);
SELECT SUM(count) FROM (SELECT ALL ((0.5742938548698712) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c68);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c68 WHERE (0.5742938548698712);
SELECT SUM(count) FROM (SELECT ALL ((0.5742938548698712) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c68);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c68 WHERE (0.5742938548698712);
SELECT ALL * FROM t0 WHERE (((x'e5ba1322')<=(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'e5ba1322')<=(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'e5ba1322')<=(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'e5ba1322')<=(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'e5ba1322')<=(t0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC  NULLS LAST, (((((vt0.c0)%(vt0.c0))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-1009467753'))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC  NULLS LAST, (((((vt0.c0)%(vt0.c0))))<>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-1009467753'))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC  NULLS LAST, (((((vt0.c0)%(vt0.c0))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-1009467753'))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC  NULLS LAST, (((((vt0.c0)%(vt0.c0))))<>((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-1009467753'))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC  NULLS LAST, (((((vt0.c0)%(vt0.c0))))!=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND('-1009467753'))))) DESC;
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c68)>>(t0.c2)))OR(0.003882137270360686)))AND(((((t0.c68)OR(t0.c2)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)>>(t0.c2)))OR(0.003882137270360686)))AND(((((t0.c68)OR(t0.c2)))AND(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c68)>>(t0.c2)))OR(0.003882137270360686)))AND(((((t0.c68)OR(t0.c2)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)>>(t0.c2)))OR(0.003882137270360686)))AND(((((t0.c68)OR(t0.c2)))AND(x''))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c68)>>(t0.c2)))OR(0.003882137270360686)))AND(((((t0.c68)OR(t0.c2)))AND(x'')))));
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT * FROM t0, vt0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE NOCASE) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE NOCASE) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c68 COLLATE NOCASE) NOT BETWEEN (((t0.c68) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((t0.c68 IN ()))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)+(NULL)))>>((((vt0.c0))=((t0.c2)))))) ORDER BY ((((((((((t0.c68)OR('#')))OR(t0.c68)))OR(0.25468293329015246)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((t0.c68)LIKE(CAST(vt0.c0 AS INTEGER))) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)+(NULL)))>>((((vt0.c0))=((t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c68)OR('#')))OR(t0.c68)))OR(0.25468293329015246)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((t0.c68)LIKE(CAST(vt0.c0 AS INTEGER))) DESC, NULL ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)+(NULL)))>>((((vt0.c0))=((t0.c2)))))) ORDER BY ((((((((((t0.c68)OR('#')))OR(t0.c68)))OR(0.25468293329015246)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((t0.c68)LIKE(CAST(vt0.c0 AS INTEGER))) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)+(NULL)))>>((((vt0.c0))=((t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((t0.c68)OR('#')))OR(t0.c68)))OR(0.25468293329015246)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((t0.c68)LIKE(CAST(vt0.c0 AS INTEGER))) DESC, NULL ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)+(NULL)))>>((((vt0.c0))=((t0.c2)))))) ORDER BY ((((((((((t0.c68)OR('#')))OR(t0.c68)))OR(0.25468293329015246)))OR(t0.c2))) BETWEEN ((+ (t0.c2))) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((t0.c68)LIKE(CAST(vt0.c0 AS INTEGER))) DESC, NULL ASC;
SELECT COUNT(*) FROM t0 WHERE (((((0.10343022197297869 IN ())))>((CASE WHEN t0.c68 THEN 0.26131995219004056 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)))) ORDER BY 0.7845874959476675 ASC, (~ (NULL)) COLLATE RTRIM  NULLS FIRST, ((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.10343022197297869 IN ())))>((CASE WHEN t0.c68 THEN 0.26131995219004056 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)))) IS TRUE)  as count FROM t0 ORDER BY 0.7845874959476675 ASC, (~ (NULL)) COLLATE RTRIM  NULLS FIRST, ((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((0.10343022197297869 IN ())))>((CASE WHEN t0.c68 THEN 0.26131995219004056 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)))) ORDER BY 0.7845874959476675 ASC, (~ (NULL)) COLLATE RTRIM  NULLS FIRST, ((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.10343022197297869 IN ())))>((CASE WHEN t0.c68 THEN 0.26131995219004056 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)))) IS TRUE)  as count FROM t0 ORDER BY 0.7845874959476675 ASC, (~ (NULL)) COLLATE RTRIM  NULLS FIRST, ((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((0.10343022197297869 IN ())))>((CASE WHEN t0.c68 THEN 0.26131995219004056 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)))) ORDER BY 0.7845874959476675 ASC, (~ (NULL)) COLLATE RTRIM  NULLS FIRST, ((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c2)*(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2)*(t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c2)*(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c2)*(t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((~ (((t0.c2)*(t0.c68)))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOTNULL)) IS FALSE) WHERE (CASE CASE t0.c68  WHEN t0.c68 THEN t0.c2 END  WHEN t0.c2 THEN ((t0.c68)LIKE(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c68  WHEN t0.c68 THEN t0.c2 END  WHEN t0.c2 THEN ((t0.c68)LIKE(t0.c68)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOTNULL)) IS FALSE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOTNULL)) IS FALSE) WHERE (CASE CASE t0.c68  WHEN t0.c68 THEN t0.c2 END  WHEN t0.c2 THEN ((t0.c68)LIKE(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c68  WHEN t0.c68 THEN t0.c2 END  WHEN t0.c2 THEN ((t0.c68)LIKE(t0.c68)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOTNULL)) IS FALSE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68) NOTNULL)) IS FALSE) WHERE (CASE CASE t0.c68  WHEN t0.c68 THEN t0.c2 END  WHEN t0.c2 THEN ((t0.c68)LIKE(t0.c68)) END);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c0)AND(1.606315091E9)))OR(vt0.c0))) BETWEEN (t0.c2) AND ((~ (t0.c2)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((vt0.c0)AND(1.606315091E9)))OR(vt0.c0))) BETWEEN (t0.c2) AND ((~ (t0.c2)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c0)AND(1.606315091E9)))OR(vt0.c0))) BETWEEN (t0.c2) AND ((~ (t0.c2)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((vt0.c0)AND(1.606315091E9)))OR(vt0.c0))) BETWEEN (t0.c2) AND ((~ (t0.c2)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON ((((((vt0.c0)AND(1.606315091E9)))OR(vt0.c0))) BETWEEN (t0.c2) AND ((~ (t0.c2)))) WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON -1.64724386E9 COLLATE RTRIM WHERE (vt0.c0) ORDER BY ((((CASE t0.c2  WHEN 0.5208072953023694 THEN t0.c68 WHEN t0.c68 THEN -1605164963 WHEN vt0.c0 THEN 0.8869894017063945 END)OR(CAST(x'' AS TEXT))))OR(((NULL) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (t0.c2) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON -1.64724386E9 COLLATE RTRIM ORDER BY ((((CASE t0.c2  WHEN 0.5208072953023694 THEN t0.c68 WHEN t0.c68 THEN -1605164963 WHEN vt0.c0 THEN 0.8869894017063945 END)OR(CAST(x'' AS TEXT))))OR(((NULL) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (t0.c2) AND (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON -1.64724386E9 COLLATE RTRIM WHERE (vt0.c0) ORDER BY ((((CASE t0.c2  WHEN 0.5208072953023694 THEN t0.c68 WHEN t0.c68 THEN -1605164963 WHEN vt0.c0 THEN 0.8869894017063945 END)OR(CAST(x'' AS TEXT))))OR(((NULL) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (t0.c2) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON -1.64724386E9 COLLATE RTRIM ORDER BY ((((CASE t0.c2  WHEN 0.5208072953023694 THEN t0.c68 WHEN t0.c68 THEN -1605164963 WHEN vt0.c0 THEN 0.8869894017063945 END)OR(CAST(x'' AS TEXT))))OR(((NULL) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (t0.c2) AND (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON -1.64724386E9 COLLATE RTRIM WHERE (vt0.c0) ORDER BY ((((CASE t0.c2  WHEN 0.5208072953023694 THEN t0.c68 WHEN t0.c68 THEN -1605164963 WHEN vt0.c0 THEN 0.8869894017063945 END)OR(CAST(x'' AS TEXT))))OR(((NULL) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0) ISNULL)) NOT BETWEEN (t0.c2) AND (NULL))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) ISNULL) IN (((t0.c68) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c2) ISNULL) IN (((t0.c68) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) ISNULL) IN (((t0.c68) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c2) ISNULL) IN (((t0.c68) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) ISNULL) IN (((t0.c68) ISNULL))));
SELECT * FROM t0 CROSS JOIN vt0 ON 0.7569019855790797 WHERE ((((((t0.c2)|(vt0.c0))))<((t0.c2)))) ORDER BY ((((vt0.c0)<(-1281874073)))>(vt0.c0 COLLATE BINARY))  NULLS FIRST, (((((((((t0.c2 IN ()))OR((vt0.c0 IN ()))))OR(t0.c68)))OR(NULL)))AND(((t0.c68)LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(vt0.c0))))<((t0.c2)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.7569019855790797 ORDER BY ((((vt0.c0)<(-1281874073)))>(vt0.c0 COLLATE BINARY))  NULLS FIRST, (((((((((t0.c2 IN ()))OR((vt0.c0 IN ()))))OR(t0.c68)))OR(NULL)))AND(((t0.c68)LIKE(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON 0.7569019855790797 WHERE ((((((t0.c2)|(vt0.c0))))<((t0.c2)))) ORDER BY ((((vt0.c0)<(-1281874073)))>(vt0.c0 COLLATE BINARY))  NULLS FIRST, (((((((((t0.c2 IN ()))OR((vt0.c0 IN ()))))OR(t0.c68)))OR(NULL)))AND(((t0.c68)LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(vt0.c0))))<((t0.c2)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.7569019855790797 ORDER BY ((((vt0.c0)<(-1281874073)))>(vt0.c0 COLLATE BINARY))  NULLS FIRST, (((((((((t0.c2 IN ()))OR((vt0.c0 IN ()))))OR(t0.c68)))OR(NULL)))AND(((t0.c68)LIKE(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON 0.7569019855790797 WHERE ((((((t0.c2)|(vt0.c0))))<((t0.c2)))) ORDER BY ((((vt0.c0)<(-1281874073)))>(vt0.c0 COLLATE BINARY))  NULLS FIRST, (((((((((t0.c2 IN ()))OR((vt0.c0 IN ()))))OR(t0.c68)))OR(NULL)))AND(((t0.c68)LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((t0.c68 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c68 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c68 COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR('1606315091', CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((INSTR('1606315091', CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR('1606315091', CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((INSTR('1606315091', CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR('1606315091', CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT COUNT(*) FROM t0 INDEXED BY i2, vt0 WHERE ((((t0.c68, t0.c2, t0.c2)) BETWEEN ((NULL, (- (t0.c2)), t0.c68)) AND (((t0.c2 IN ()), ((t0.c68) NOTNULL), CASE t0.c68  WHEN t0.c2 THEN t0.c68 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c2, t0.c2)) BETWEEN ((NULL, (- (t0.c2)), t0.c68)) AND (((t0.c2 IN ()), ((t0.c68) NOTNULL), CASE t0.c68  WHEN t0.c2 THEN t0.c68 END)))) IS TRUE)  as count FROM t0 INDEXED BY i2, vt0);
SELECT COUNT(*) FROM t0 INDEXED BY i2, vt0 WHERE ((((t0.c68, t0.c2, t0.c2)) BETWEEN ((NULL, (- (t0.c2)), t0.c68)) AND (((t0.c2 IN ()), ((t0.c68) NOTNULL), CASE t0.c68  WHEN t0.c2 THEN t0.c68 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c2, t0.c2)) BETWEEN ((NULL, (- (t0.c2)), t0.c68)) AND (((t0.c2 IN ()), ((t0.c68) NOTNULL), CASE t0.c68  WHEN t0.c2 THEN t0.c68 END)))) IS TRUE)  as count FROM t0 INDEXED BY i2, vt0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE ((t0.c68) NOT BETWEEN (-1) AND (vt0.c0))  WHEN NULL THEN ((vt0.c0) NOTNULL) END) ORDER BY (- (CASE WHEN t0.c68 THEN t0.c68 END)), ((t0.c68 COLLATE RTRIM)AND(((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)))), (((0.09629302658979122)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN (t0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) NOT BETWEEN (-1) AND (vt0.c0))  WHEN NULL THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (- (CASE WHEN t0.c68 THEN t0.c68 END)), ((t0.c68 COLLATE RTRIM)AND(((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)))), (((0.09629302658979122)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN (t0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE ((t0.c68) NOT BETWEEN (-1) AND (vt0.c0))  WHEN NULL THEN ((vt0.c0) NOTNULL) END) ORDER BY (- (CASE WHEN t0.c68 THEN t0.c68 END)), ((t0.c68 COLLATE RTRIM)AND(((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)))), (((0.09629302658979122)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN (t0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) NOT BETWEEN (-1) AND (vt0.c0))  WHEN NULL THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY (- (CASE WHEN t0.c68 THEN t0.c68 END)), ((t0.c68 COLLATE RTRIM)AND(((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)))), (((0.09629302658979122)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN (t0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE ((t0.c68) NOT BETWEEN (-1) AND (vt0.c0))  WHEN NULL THEN ((vt0.c0) NOTNULL) END) ORDER BY (- (CASE WHEN t0.c68 THEN t0.c68 END)), ((t0.c68 COLLATE RTRIM)AND(((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)))), (((0.09629302658979122)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)))) AND (((t0.c68 IN (t0.c2))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY CAST(ABS(vt0.c0) AS INTEGER) ASC  NULLS FIRST, json_array(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0) DESC  NULLS LAST, ((+ (vt0.c0)) IN ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(ABS(vt0.c0) AS INTEGER) ASC  NULLS FIRST, json_array(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0) DESC  NULLS LAST, ((+ (vt0.c0)) IN ((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY CAST(ABS(vt0.c0) AS INTEGER) ASC  NULLS FIRST, json_array(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0) DESC  NULLS LAST, ((+ (vt0.c0)) IN ((NOT (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(ABS(vt0.c0) AS INTEGER) ASC  NULLS FIRST, json_array(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0) DESC  NULLS LAST, ((+ (vt0.c0)) IN ((NOT (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c68 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c68 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c68 IN ())) ISNULL));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(IFNULL(t0.c2, t0.c68) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(t0.c2, t0.c68) AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(IFNULL(t0.c2, t0.c68) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(t0.c2, t0.c68) AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CAST(IFNULL(t0.c2, t0.c68) AS REAL));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), LOWER(vt0.c0), (NOT (vt0.c0)))))) ORDER BY ((((vt0.c0)!=(x''))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), LOWER(vt0.c0), (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(x''))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), LOWER(vt0.c0), (NOT (vt0.c0)))))) ORDER BY ((((vt0.c0)!=(x''))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), LOWER(vt0.c0), (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(x''))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0), ((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), LOWER(vt0.c0), (NOT (vt0.c0)))))) ORDER BY ((((vt0.c0)!=(x''))) NOT NULL)  NULLS LAST;
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c68)))<>(t0.c2))) ORDER BY (((((('g׼܄g')) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))<>((CASE t0.c2  WHEN t0.c68 THEN 'cuI' END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c68)))!=(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY (((((('g׼܄g')) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))!=((CASE t0.c2  WHEN t0.c68 THEN 'cuI' END))));
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c68)))<>(t0.c2))) ORDER BY (((((('g׼܄g')) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))<>((CASE t0.c2  WHEN t0.c68 THEN 'cuI' END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c68)))!=(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY (((((('g׼܄g')) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))!=((CASE t0.c2  WHEN t0.c68 THEN 'cuI' END))));
SELECT COUNT(*) FROM t0 WHERE ((((- (t0.c68)))<>(t0.c2))) ORDER BY (((((('g׼܄g')) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))<>((CASE t0.c2  WHEN t0.c68 THEN 'cuI' END)));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'22ac7cdd')))<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'22ac7cdd')))<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'22ac7cdd')))<(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'22ac7cdd')))<(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'22ac7cdd')))<(((vt0.c0) IS TRUE))));
SELECT ALL * FROM t0, vt0 WHERE (0.883759994215135);
SELECT SUM(count) FROM (SELECT ((0.883759994215135) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.883759994215135);
SELECT SUM(count) FROM (SELECT ((0.883759994215135) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (0.883759994215135);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST((vt0.c0 IN (t0.c68, t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (t0.c68, t0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST((vt0.c0 IN (t0.c68, t0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (t0.c68, t0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (CAST((vt0.c0 IN (t0.c68, t0.c2)) AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE ((t0.c68 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c68 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c68 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (t0.c68);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT * FROM vt0 INNER JOIN t0 ON t0.c2 WHERE ((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (vt0.c0) AND (CAST(t0.c2 AS BLOB)))) ORDER BY ((((t0.c2)!=(vt0.c0))) BETWEEN (vt0.c0) AND (t0.c68)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (vt0.c0) AND (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON t0.c2 ORDER BY ((((t0.c2)<>(vt0.c0))) BETWEEN (vt0.c0) AND (t0.c68)) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON t0.c2 WHERE ((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (vt0.c0) AND (CAST(t0.c2 AS BLOB)))) ORDER BY ((((t0.c2)!=(vt0.c0))) BETWEEN (vt0.c0) AND (t0.c68)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (vt0.c0) AND (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON t0.c2 ORDER BY ((((t0.c2)<>(vt0.c0))) BETWEEN (vt0.c0) AND (t0.c68)) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON t0.c2 WHERE ((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (vt0.c0) AND (CAST(t0.c2 AS BLOB)))) ORDER BY ((((t0.c2)!=(vt0.c0))) BETWEEN (vt0.c0) AND (t0.c68)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (t0.c2)))IS NOT(t0.c68 COLLATE BINARY))) ORDER BY ((((((t0.c2))=((t0.c2)))))<>((((t0.c2)-(t0.c2))))) DESC  NULLS LAST, ((((NOT (t0.c2))))<(((((t0.c68))>=((t0.c68)))))), (NOT (((t0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))IS NOT(t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY ((((((t0.c2))==((t0.c2)))))<>((((t0.c2)-(t0.c2))))) DESC  NULLS LAST, ((((NOT (t0.c2))))<(((((t0.c68))>=((t0.c68)))))), (NOT (((t0.c2) NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (t0.c2)))IS NOT(t0.c68 COLLATE BINARY))) ORDER BY ((((((t0.c2))=((t0.c2)))))<>((((t0.c2)-(t0.c2))))) DESC  NULLS LAST, ((((NOT (t0.c2))))<(((((t0.c68))>=((t0.c68)))))), (NOT (((t0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))IS NOT(t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY ((((((t0.c2))==((t0.c2)))))<>((((t0.c2)-(t0.c2))))) DESC  NULLS LAST, ((((NOT (t0.c2))))<(((((t0.c68))>=((t0.c68)))))), (NOT (((t0.c2) NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (t0.c2)))IS NOT(t0.c68 COLLATE BINARY))) ORDER BY ((((((t0.c2))=((t0.c2)))))<>((((t0.c2)-(t0.c2))))) DESC  NULLS LAST, ((((NOT (t0.c2))))<(((((t0.c68))>=((t0.c68)))))), (NOT (((t0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((t0.c2, t0.c68, vt0.c0))<((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((NOT (t0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c68, vt0.c0))<((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY ((NOT (t0.c2)) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((t0.c2, t0.c68, vt0.c0))<((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((NOT (t0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c68, vt0.c0))<((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY ((NOT (t0.c2)) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((t0.c2, t0.c68, vt0.c0))<((vt0.c0, t0.c2, t0.c2))) COLLATE NOCASE COLLATE BINARY) ORDER BY ((NOT (t0.c2)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR((vt0.c0 IN ()), ((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((vt0.c0 IN ()), ((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR((vt0.c0 IN ()), ((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((vt0.c0 IN ()), ((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR((vt0.c0 IN ()), ((vt0.c0)>=(vt0.c0))));
SELECT * FROM t0 WHERE ((((t0.c68) NOT BETWEEN (t0.c68) AND ('CG')) IN (CASE WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) NOT BETWEEN (t0.c68) AND ('CG')) IN (CASE WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c68) NOT BETWEEN (t0.c68) AND ('CG')) IN (CASE WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) NOT BETWEEN (t0.c68) AND ('CG')) IN (CASE WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c68) NOT BETWEEN (t0.c68) AND ('CG')) IN (CASE WHEN t0.c68 THEN t0.c68 WHEN x'' THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (t0.c68) AND (t0.c2))))<((CASE vt0.c0  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0) BETWEEN (t0.c68) AND (t0.c2))))<((CASE vt0.c0  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (t0.c68) AND (t0.c2))))<((CASE vt0.c0  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0) BETWEEN (t0.c68) AND (t0.c2))))<((CASE vt0.c0  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (t0.c68) AND (t0.c2))))<((CASE vt0.c0  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((x'') NOT BETWEEN (CAST(t0.c68 AS INTEGER)) AND (((vt0.c0)GLOB(t0.c2)))) WHERE ((CASE t0.c68  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN NULL END IN (CASE WHEN vt0.c0 THEN t0.c2 END))) ORDER BY CASE WHEN (NOT (t0.c2)) THEN ((((vt0.c0)OR(t0.c68)))AND('?')) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c68  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN NULL END IN (CASE WHEN vt0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((x'') NOT BETWEEN (CAST(t0.c68 AS INTEGER)) AND (((vt0.c0)GLOB(t0.c2)))) ORDER BY CASE WHEN (NOT (t0.c2)) THEN ((((vt0.c0)OR(t0.c68)))AND('?')) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((x'') NOT BETWEEN (CAST(t0.c68 AS INTEGER)) AND (((vt0.c0)GLOB(t0.c2)))) WHERE ((CASE t0.c68  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN NULL END IN (CASE WHEN vt0.c0 THEN t0.c2 END))) ORDER BY CASE WHEN (NOT (t0.c2)) THEN ((((vt0.c0)OR(t0.c68)))AND('?')) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c68  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN NULL END IN (CASE WHEN vt0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((x'') NOT BETWEEN (CAST(t0.c68 AS INTEGER)) AND (((vt0.c0)GLOB(t0.c2)))) ORDER BY CASE WHEN (NOT (t0.c2)) THEN ((((vt0.c0)OR(t0.c68)))AND('?')) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON ((x'') NOT BETWEEN (CAST(t0.c68 AS INTEGER)) AND (((vt0.c0)GLOB(t0.c2)))) WHERE ((CASE t0.c68  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN x'' THEN NULL END IN (CASE WHEN vt0.c0 THEN t0.c2 END))) ORDER BY CASE WHEN (NOT (t0.c2)) THEN ((((vt0.c0)OR(t0.c68)))AND('?')) END ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c68 WHERE (UNICODE(LOWER(t0.c68))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c68)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(LOWER(t0.c68))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c68 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c68)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c68 WHERE (UNICODE(LOWER(t0.c68))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c68)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(LOWER(t0.c68))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c68 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c68)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c68 WHERE (UNICODE(LOWER(t0.c68))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c68)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((NULL)AND(t0.c68)))AND(t0.c2))) AND (((0X3fea061b)IS NOT(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((((NULL)AND(t0.c68)))AND(t0.c2))) AND (((0x3fea061b)IS NOT(t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((NULL)AND(t0.c68)))AND(t0.c2))) AND (((0X3fea061b)IS NOT(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((((NULL)AND(t0.c68)))AND(t0.c2))) AND (((0x3fea061b)IS NOT(t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((NULL)AND(t0.c68)))AND(t0.c2))) AND (((0X3fea061b)IS NOT(t0.c68)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)>(NULL)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (0.6199598128264644)) END) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) ASC, (((((vt0.c0)>(vt0.c0)), 0.8994584052643019, SQLITE_COMPILEOPTION_GET(vt0.c0), ((vt0.c0) ISNULL), HEX(vt0.c0)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'0bb4' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), (((('-1182422323')OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (0.6199598128264644)) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) ASC, (((((vt0.c0)>(vt0.c0)), 0.8994584052643019, SQLITE_COMPILEOPTION_GET(vt0.c0), ((vt0.c0) ISNULL), HEX(vt0.c0)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'0bb4' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), (((('-1182422323')OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (0.6199598128264644)) END) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) ASC, (((((vt0.c0)>(vt0.c0)), 0.8994584052643019, SQLITE_COMPILEOPTION_GET(vt0.c0), ((vt0.c0) ISNULL), HEX(vt0.c0)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'0bb4' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), (((('-1182422323')OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (0.6199598128264644)) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) ASC, (((((vt0.c0)>(vt0.c0)), 0.8994584052643019, SQLITE_COMPILEOPTION_GET(vt0.c0), ((vt0.c0) ISNULL), HEX(vt0.c0)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'0bb4' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), (((('-1182422323')OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (0.6199598128264644)) END) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) ASC, (((((vt0.c0)>(vt0.c0)), 0.8994584052643019, SQLITE_COMPILEOPTION_GET(vt0.c0), ((vt0.c0) ISNULL), HEX(vt0.c0)))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'0bb4' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), (((('-1182422323')OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) ORDER BY HEX((vt0.c0 IN ())), (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY HEX((vt0.c0 IN ())), (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) ORDER BY HEX((vt0.c0 IN ())), (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY HEX((vt0.c0 IN ())), (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE NOCASE))) ORDER BY HEX((vt0.c0 IN ())), (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0))) ORDER BY (((t0.c68 IN ()))LIKE(t0.c2 COLLATE BINARY)) ASC, 'IZ';
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c68 IN ()))LIKE(t0.c2 COLLATE BINARY)) ASC, 'IZ');
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0))) ORDER BY (((t0.c68 IN ()))LIKE(t0.c2 COLLATE BINARY)) ASC, 'IZ';
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c68 IN ()))LIKE(t0.c2 COLLATE BINARY)) ASC, 'IZ');
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0))) ORDER BY (((t0.c68 IN ()))LIKE(t0.c2 COLLATE BINARY)) ASC, 'IZ';
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (t0.c2) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c68) BETWEEN (t0.c2) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c68 IN ()) AS TEXT)) ORDER BY (((((((((~ (t0.c2)))OR(CAST(t0.c68 AS BLOB))))OR(t0.c68)))OR(((t0.c68)<(t0.c2)))))AND(t0.c68)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c68 IN ()) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((((((((~ (t0.c2)))OR(CAST(t0.c68 AS BLOB))))OR(t0.c68)))OR(((t0.c68)<(t0.c2)))))AND(t0.c68)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c68 IN ()) AS TEXT)) ORDER BY (((((((((~ (t0.c2)))OR(CAST(t0.c68 AS BLOB))))OR(t0.c68)))OR(((t0.c68)<(t0.c2)))))AND(t0.c68)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c68 IN ()) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((((((((~ (t0.c2)))OR(CAST(t0.c68 AS BLOB))))OR(t0.c68)))OR(((t0.c68)<(t0.c2)))))AND(t0.c68)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c68 IN ()) AS TEXT)) ORDER BY (((((((((~ (t0.c2)))OR(CAST(t0.c68 AS BLOB))))OR(t0.c68)))OR(((t0.c68)<(t0.c2)))))AND(t0.c68)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((- (json(t0.c2))));
SELECT SUM(count) FROM (SELECT (((- (json(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- (json(t0.c2))));
SELECT SUM(count) FROM (SELECT (((- (json(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- (json(t0.c2))));
SELECT ALL * FROM t0 WHERE ((((t0.c68 IN (t0.c2)))<<(NULLIF(t0.c68, t0.c68))));
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN (t0.c2)))<<(NULLIF(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c68 IN (t0.c2)))<<(NULLIF(t0.c68, t0.c68))));
SELECT SUM(count) FROM (SELECT (((((t0.c68 IN (t0.c2)))<<(NULLIF(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c68 IN (t0.c2)))<<(NULLIF(t0.c68, t0.c68))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN ('B鐭') AND ('now'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN ('B鐭') AND ('now'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN ('B鐭') AND ('now'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN ('B鐭') AND ('now'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN ('B鐭') AND ('now'))))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((t0.c68))) THEN 0.08297657021054294 WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN json_quote(vt0.c0) THEN HEX(vt0.c0) END) ORDER BY CAST((((vt0.c0, vt0.c0, t0.c68))>=((x'7d8a', t0.c2, t0.c2))) AS TEXT) DESC  NULLS LAST, UNLIKELY(vt0.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((t0.c68))) THEN 0.08297657021054294 WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN json_quote(vt0.c0) THEN HEX(vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((vt0.c0, vt0.c0, t0.c68))>=((x'7d8a', t0.c2, t0.c2))) AS TEXT) DESC  NULLS LAST, UNLIKELY(vt0.c0) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((t0.c68))) THEN 0.08297657021054294 WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN json_quote(vt0.c0) THEN HEX(vt0.c0) END) ORDER BY CAST((((vt0.c0, vt0.c0, t0.c68))>=((x'7d8a', t0.c2, t0.c2))) AS TEXT) DESC  NULLS LAST, UNLIKELY(vt0.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((t0.c68))) THEN 0.08297657021054294 WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN json_quote(vt0.c0) THEN HEX(vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((vt0.c0, vt0.c0, t0.c68))>=((x'7d8a', t0.c2, t0.c2))) AS TEXT) DESC  NULLS LAST, UNLIKELY(vt0.c0) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY (CASE vt0.c0  WHEN 0.2840283056386994 THEN x'' END IN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN 0.2840283056386994 THEN x'' END IN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY (CASE vt0.c0  WHEN 0.2840283056386994 THEN x'' END IN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN 0.2840283056386994 THEN x'' END IN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS REAL))) ORDER BY (CASE vt0.c0  WHEN 0.2840283056386994 THEN x'' END IN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (json_type(t0.c2)))) ORDER BY ((((((vt0.c0))<=((t0.c2))), ((2114775206)%(t0.c68)), vt0.c0))<((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(t0.c68 AS NUMERIC), CASE t0.c68  WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN '2' ELSE t0.c68 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_type(t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0))<=((t0.c2))), ((2114775206)%(t0.c68)), vt0.c0))<((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(t0.c68 AS NUMERIC), CASE t0.c68  WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN '2' ELSE t0.c68 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (json_type(t0.c2)))) ORDER BY ((((((vt0.c0))<=((t0.c2))), ((2114775206)%(t0.c68)), vt0.c0))<((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(t0.c68 AS NUMERIC), CASE t0.c68  WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN '2' ELSE t0.c68 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_type(t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0))<=((t0.c2))), ((2114775206)%(t0.c68)), vt0.c0))<((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(t0.c68 AS NUMERIC), CASE t0.c68  WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN '2' ELSE t0.c68 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (json_type(t0.c2)))) ORDER BY ((((((vt0.c0))<=((t0.c2))), ((2114775206)%(t0.c68)), vt0.c0))<((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(t0.c68 AS NUMERIC), CASE t0.c68  WHEN t0.c68 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN '2' ELSE t0.c68 END))) DESC  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 599060655 WHERE ((~ (((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY ((LIKELY(DISTINCT t0.c68)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 599060655 ORDER BY ((LIKELY(DISTINCT t0.c68)) NOTNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 599060655 WHERE ((~ (((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY ((LIKELY(DISTINCT t0.c68)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 599060655 ORDER BY ((LIKELY(DISTINCT t0.c68)) NOTNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 599060655 WHERE ((~ (((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0))))) ORDER BY ((LIKELY(DISTINCT t0.c68)) NOTNULL);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END COLLATE NOCASE) ORDER BY (((((t0.c2, t0.c2, t0.c68)) BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((NULL, t0.c2, t0.c2))))&(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2, t0.c2, t0.c68)) BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((NULL, t0.c2, t0.c2))))&(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END COLLATE NOCASE) ORDER BY (((((t0.c2, t0.c2, t0.c68)) BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((NULL, t0.c2, t0.c2))))&(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2, t0.c2, t0.c68)) BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((NULL, t0.c2, t0.c2))))&(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 END COLLATE NOCASE) ORDER BY (((((t0.c2, t0.c2, t0.c68)) BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((NULL, t0.c2, t0.c2))))&(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c68) NOTNULL)  WHEN CAST(t0.c68 AS BLOB) THEN TRIM(DISTINCT t0.c2, vt0.c0) END) ORDER BY ((((t0.c2)LIKE(vt0.c0))) NOTNULL)  NULLS LAST, json_array_length(LIKELY(vt0.c0), UPPER(DISTINCT t0.c68)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) NOTNULL)  WHEN CAST(t0.c68 AS BLOB) THEN TRIM(DISTINCT t0.c2, vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2)LIKE(vt0.c0))) NOTNULL)  NULLS LAST, json_array_length(LIKELY(vt0.c0), UPPER(DISTINCT t0.c68)) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c68) NOTNULL)  WHEN CAST(t0.c68 AS BLOB) THEN TRIM(DISTINCT t0.c2, vt0.c0) END) ORDER BY ((((t0.c2)LIKE(vt0.c0))) NOTNULL)  NULLS LAST, json_array_length(LIKELY(vt0.c0), UPPER(DISTINCT t0.c68)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) NOTNULL)  WHEN CAST(t0.c68 AS BLOB) THEN TRIM(DISTINCT t0.c2, vt0.c0) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2)LIKE(vt0.c0))) NOTNULL)  NULLS LAST, json_array_length(LIKELY(vt0.c0), UPPER(DISTINCT t0.c68)) ASC);
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((vt0.c0)<('2114775206')))+((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<('2114775206')))+((- (vt0.c0)))));
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((vt0.c0)<('2114775206')))+((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)<('2114775206')))+((- (vt0.c0)))));
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((vt0.c0)<('2114775206')))+((- (vt0.c0))));
SELECT * FROM t0 WHERE (((((t0.c2)LIKE(t0.c68))) NOT BETWEEN (UNLIKELY(NULL)) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE NULL END))) ORDER BY CASE WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c68)) THEN (~ (t0.c68)) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)LIKE(t0.c68))) NOT BETWEEN (UNLIKELY(NULL)) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE NULL END))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c68)) THEN (~ (t0.c68)) END);
SELECT * FROM t0 WHERE (((((t0.c2)LIKE(t0.c68))) NOT BETWEEN (UNLIKELY(NULL)) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE NULL END))) ORDER BY CASE WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c68)) THEN (~ (t0.c68)) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)LIKE(t0.c68))) NOT BETWEEN (UNLIKELY(NULL)) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE NULL END))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c68)) THEN (~ (t0.c68)) END);
SELECT * FROM t0 WHERE (((((t0.c2)LIKE(t0.c68))) NOT BETWEEN (UNLIKELY(NULL)) AND (CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE NULL END))) ORDER BY CASE WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c68)) THEN (~ (t0.c68)) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ())) ORDER BY (((CAST(vt0.c0 AS REAL)))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, vt0.c0  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, vt0.c0  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ())) ORDER BY (((CAST(vt0.c0 AS REAL)))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, vt0.c0  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, vt0.c0  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) IS FALSE) IN ())) ORDER BY (((CAST(vt0.c0 AS REAL)))<((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))  NULLS LAST, vt0.c0  NULLS FIRST, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY LIKELIHOOD(DISTINCT PRINTF(t0.c2), 0.6328898989296233)  NULLS FIRST, CAST(HEX(DISTINCT vt0.c0) AS REAL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN x'' THEN t0.c68 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY LIKELIHOOD(DISTINCT PRINTF(t0.c2), 0.6328898989296233)  NULLS FIRST, CAST(HEX(DISTINCT vt0.c0) AS REAL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN x'' THEN t0.c68 END COLLATE BINARY DESC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY LIKELIHOOD(DISTINCT PRINTF(t0.c2), 0.6328898989296233)  NULLS FIRST, CAST(HEX(DISTINCT vt0.c0) AS REAL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN x'' THEN t0.c68 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY LIKELIHOOD(DISTINCT PRINTF(t0.c2), 0.6328898989296233)  NULLS FIRST, CAST(HEX(DISTINCT vt0.c0) AS REAL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN x'' THEN t0.c68 END COLLATE BINARY DESC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (NULL) ORDER BY LIKELIHOOD(DISTINCT PRINTF(t0.c2), 0.6328898989296233)  NULLS FIRST, CAST(HEX(DISTINCT vt0.c0) AS REAL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN x'' THEN t0.c68 END COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE LIKELIHOOD('-1717368059', 0.9093335190727353)  WHEN (((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN ((vt0.c0)OR(t0.c2)) WHEN ((t0.c2)AND(t0.c68)) THEN (((vt0.c0, x'095f', t0.c2))>=((t0.c68, vt0.c0, t0.c2))) WHEN ((t0.c68)<(vt0.c0)) THEN '-1182422323' ELSE t0.c2 COLLATE NOCASE END) ORDER BY ((((t0.c2)<<(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD('-1717368059', 0.9093335190727353)  WHEN (((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN ((vt0.c0)OR(t0.c2)) WHEN ((t0.c2)AND(t0.c68)) THEN (((vt0.c0, x'095f', t0.c2))>=((t0.c68, vt0.c0, t0.c2))) WHEN ((t0.c68)<(vt0.c0)) THEN '-1182422323' ELSE t0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2)<<(vt0.c0))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE LIKELIHOOD('-1717368059', 0.9093335190727353)  WHEN (((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN ((vt0.c0)OR(t0.c2)) WHEN ((t0.c2)AND(t0.c68)) THEN (((vt0.c0, x'095f', t0.c2))>=((t0.c68, vt0.c0, t0.c2))) WHEN ((t0.c68)<(vt0.c0)) THEN '-1182422323' ELSE t0.c2 COLLATE NOCASE END) ORDER BY ((((t0.c2)<<(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD('-1717368059', 0.9093335190727353)  WHEN (((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN ((vt0.c0)OR(t0.c2)) WHEN ((t0.c2)AND(t0.c68)) THEN (((vt0.c0, x'095f', t0.c2))>=((t0.c68, vt0.c0, t0.c2))) WHEN ((t0.c68)<(vt0.c0)) THEN '-1182422323' ELSE t0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2)<<(vt0.c0))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE LIKELIHOOD('-1717368059', 0.9093335190727353)  WHEN (((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((vt0.c0))) THEN ((vt0.c0)OR(t0.c2)) WHEN ((t0.c2)AND(t0.c68)) THEN (((vt0.c0, x'095f', t0.c2))>=((t0.c68, vt0.c0, t0.c2))) WHEN ((t0.c68)<(vt0.c0)) THEN '-1182422323' ELSE t0.c2 COLLATE NOCASE END) ORDER BY ((((t0.c2)<<(vt0.c0))) NOT NULL) ASC;
SELECT COUNT(*) FROM t0 WHERE (CASE (((x'a4cae919')) BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN CASE WHEN -1663317863 THEN t0.c68 ELSE t0.c68 END THEN ((t0.c68)|(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((x'a4cae919')) BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN CASE WHEN -1663317863 THEN t0.c68 ELSE t0.c68 END THEN ((t0.c68)|(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((x'a4cae919')) BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN CASE WHEN -1663317863 THEN t0.c68 ELSE t0.c68 END THEN ((t0.c68)|(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((x'a4cae919')) BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN CASE WHEN -1663317863 THEN t0.c68 ELSE t0.c68 END THEN ((t0.c68)|(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((x'a4cae919')) BETWEEN ((t0.c2)) AND ((t0.c2)))  WHEN CASE WHEN -1663317863 THEN t0.c68 ELSE t0.c68 END THEN ((t0.c68)|(t0.c2)) END);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)OR(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((LIKE(t0.c2, t0.c68, '-'))OR((NOT (t0.c68)))))OR(((-1163913116) NOT BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((((((t0.c2) NOTNULL))OR(vt0.c0)))OR(0.09629302658979122))  NULLS FIRST, CASE 0.47293973595998773  WHEN CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) BETWEEN (t0.c68) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) THEN (+ (vt0.c0)) WHEN '-1139696313' THEN t0.c68 ELSE (vt0.c0 IN ()) END DESC, (- ((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKE(t0.c2, t0.c68, '-'))OR((NOT (t0.c68)))))OR(((-1163913116) NOT BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c2) NOTNULL))OR(vt0.c0)))OR(0.09629302658979122))  NULLS FIRST, CASE 0.47293973595998773  WHEN CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) BETWEEN (t0.c68) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) THEN (+ (vt0.c0)) WHEN '-1139696313' THEN t0.c68 ELSE (vt0.c0 IN ()) END DESC, (- ((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((LIKE(t0.c2, t0.c68, '-'))OR((NOT (t0.c68)))))OR(((-1163913116) NOT BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((((((t0.c2) NOTNULL))OR(vt0.c0)))OR(0.09629302658979122))  NULLS FIRST, CASE 0.47293973595998773  WHEN CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) BETWEEN (t0.c68) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) THEN (+ (vt0.c0)) WHEN '-1139696313' THEN t0.c68 ELSE (vt0.c0 IN ()) END DESC, (- ((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKE(t0.c2, t0.c68, '-'))OR((NOT (t0.c68)))))OR(((-1163913116) NOT BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c2) NOTNULL))OR(vt0.c0)))OR(0.09629302658979122))  NULLS FIRST, CASE 0.47293973595998773  WHEN CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) BETWEEN (t0.c68) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) THEN (+ (vt0.c0)) WHEN '-1139696313' THEN t0.c68 ELSE (vt0.c0 IN ()) END DESC, (- ((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((LIKE(t0.c2, t0.c68, '-'))OR((NOT (t0.c68)))))OR(((-1163913116) NOT BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY ((((((t0.c2) NOTNULL))OR(vt0.c0)))OR(0.09629302658979122))  NULLS FIRST, CASE 0.47293973595998773  WHEN CASE WHEN vt0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2) BETWEEN (t0.c68) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c2)) THEN (+ (vt0.c0)) WHEN '-1139696313' THEN t0.c68 ELSE (vt0.c0 IN ()) END DESC, (- ((((t0.c68)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0)))) ORDER BY CASE WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS INTEGER) THEN TRIM(vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN '' ELSE ((vt0.c0)IS(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS INTEGER) THEN TRIM(vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN '' ELSE ((vt0.c0)IS(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0)))) ORDER BY CASE WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS INTEGER) THEN TRIM(vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN '' ELSE ((vt0.c0)IS(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS INTEGER) THEN TRIM(vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN '' ELSE ((vt0.c0)IS(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0)))) ORDER BY CASE WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS INTEGER) THEN TRIM(vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS INTEGER) THEN '' ELSE ((vt0.c0)IS(vt0.c0)) END;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((t0.c68)|(t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c68)|(t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((t0.c68)|(t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c68)|(t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((t0.c68)|(t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(t0.c2)) ORDER BY (- (((((t0.c2)OR(t0.c2)))OR(t0.c68)))), t0.c68  NULLS LAST, t0.c68 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c2)) IS TRUE)  as count FROM t0 ORDER BY (- (((((t0.c2)OR(t0.c2)))OR(t0.c68)))), t0.c68  NULLS LAST, t0.c68 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(t0.c2)) ORDER BY (- (((((t0.c2)OR(t0.c2)))OR(t0.c68)))), t0.c68  NULLS LAST, t0.c68 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(t0.c2)) IS TRUE)  as count FROM t0 ORDER BY (- (((((t0.c2)OR(t0.c2)))OR(t0.c68)))), t0.c68  NULLS LAST, t0.c68 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELY(t0.c2)) ORDER BY (- (((((t0.c2)OR(t0.c2)))OR(t0.c68)))), t0.c68  NULLS LAST, t0.c68 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (COALESCE(vt0.c0, t0.c2)))) ORDER BY (((LIKELY(DISTINCT t0.c2)))<>((((t0.c2)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (COALESCE(vt0.c0, t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((LIKELY(DISTINCT t0.c2)))!=((((t0.c2)IS NOT(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (COALESCE(vt0.c0, t0.c2)))) ORDER BY (((LIKELY(DISTINCT t0.c2)))<>((((t0.c2)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (COALESCE(vt0.c0, t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((LIKELY(DISTINCT t0.c2)))!=((((t0.c2)IS NOT(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (COALESCE(vt0.c0, t0.c2)))) ORDER BY (((LIKELY(DISTINCT t0.c2)))<>((((t0.c2)IS NOT(vt0.c0)))));
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))&(((t0.c68)==(0.45225866806448856))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))&(((t0.c68)==(0.45225866806448856))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))&(((t0.c68)==(0.45225866806448856))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))&(((t0.c68)==(0.45225866806448856))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))&(((t0.c68)==(0.45225866806448856))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c68)AND(t0.c68)))AND(t0.c2))))<(((~ (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c68)AND(t0.c68)))AND(t0.c2))))<(((~ (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c68)AND(t0.c68)))AND(t0.c2))))<(((~ (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c68)AND(t0.c68)))AND(t0.c2))))<(((~ (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c68)AND(t0.c68)))AND(t0.c2))))<(((~ (t0.c2))))));
SELECT * FROM t0, vt0 WHERE (CAST((((t0.c2))!=((t0.c2))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c2))!=((t0.c2))) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((((t0.c2))!=((t0.c2))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c2))!=((t0.c2))) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CAST((((t0.c2))!=((t0.c2))) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68) NOT NULL)  WHEN NULL THEN '2042824188' ELSE (((t0.c2, 0.4180434557820686, t0.c2, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c2, t0.c2, t0.c2))) END) ORDER BY (~ ((+ (t0.c68)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) NOT NULL)  WHEN NULL THEN '2042824188' ELSE (((t0.c2, 0.4180434557820686, t0.c2, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c2, t0.c2, t0.c2))) END) IS TRUE)  as count FROM t0 ORDER BY (~ ((+ (t0.c68)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68) NOT NULL)  WHEN NULL THEN '2042824188' ELSE (((t0.c2, 0.4180434557820686, t0.c2, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c2, t0.c2, t0.c2))) END) ORDER BY (~ ((+ (t0.c68)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68) NOT NULL)  WHEN NULL THEN '2042824188' ELSE (((t0.c2, 0.4180434557820686, t0.c2, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c2, t0.c2, t0.c2))) END) IS TRUE)  as count FROM t0 ORDER BY (~ ((+ (t0.c68)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68) NOT NULL)  WHEN NULL THEN '2042824188' ELSE (((t0.c2, 0.4180434557820686, t0.c2, t0.c68, t0.c68))=((t0.c68, t0.c68, t0.c2, t0.c2, t0.c2))) END) ORDER BY (~ ((+ (t0.c68)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((('400691927')+(0x37857564))) NOT BETWEEN ((vt0.c0 IN ())) AND ('')));
SELECT SUM(count) FROM (SELECT (((((('400691927')+(0x37857564))) NOT BETWEEN ((vt0.c0 IN ())) AND (''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('400691927')+(0x37857564))) NOT BETWEEN ((vt0.c0 IN ())) AND ('')));
SELECT SUM(count) FROM (SELECT (((((('400691927')+(0x37857564))) NOT BETWEEN ((vt0.c0 IN ())) AND (''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('400691927')+(0x37857564))) NOT BETWEEN ((vt0.c0 IN ())) AND ('')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY (((vt0.c0)) BETWEEN ((((((0Xffffffff9a28f4e6)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((0Xffffffff9a28f4e6)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY (((vt0.c0)) BETWEEN ((((((0Xffffffff9a28f4e6)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((((0Xffffffff9a28f4e6)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS TEXT)) ORDER BY (((vt0.c0)) BETWEEN ((((((0Xffffffff9a28f4e6)AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(t0.c2 COLLATE BINARY, 0.33679977536150174)) ORDER BY ((t0.c68) NOT BETWEEN ((((t0.c68))>((t0.c2)))) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c2 COLLATE BINARY, 0.33679977536150174)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) NOT BETWEEN ((((t0.c68))>((t0.c2)))) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(t0.c2 COLLATE BINARY, 0.33679977536150174)) ORDER BY ((t0.c68) NOT BETWEEN ((((t0.c68))>((t0.c2)))) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t0.c2 COLLATE BINARY, 0.33679977536150174)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68) NOT BETWEEN ((((t0.c68))>((t0.c2)))) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(t0.c2 COLLATE BINARY, 0.33679977536150174)) ORDER BY ((t0.c68) NOT BETWEEN ((((t0.c68))>((t0.c2)))) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c2, t0.c68, t0.c68, t0.c68))==((t0.c2, t0.c68, t0.c68, NULL, t0.c2))) COLLATE BINARY) ORDER BY ((((((('')) BETWEEN ((t0.c2)) AND ((t0.c2))))AND(TRIM(DISTINCT t0.c2, t0.c2))))OR((((t0.c68))>((t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, t0.c68, t0.c68, t0.c68))=((t0.c2, t0.c68, t0.c68, NULL, t0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((('')) BETWEEN ((t0.c2)) AND ((t0.c2))))AND(TRIM(DISTINCT t0.c2, t0.c2))))OR((((t0.c68))>((t0.c68)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c2, t0.c68, t0.c68, t0.c68))==((t0.c2, t0.c68, t0.c68, NULL, t0.c2))) COLLATE BINARY) ORDER BY ((((((('')) BETWEEN ((t0.c2)) AND ((t0.c2))))AND(TRIM(DISTINCT t0.c2, t0.c2))))OR((((t0.c68))>((t0.c68)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, t0.c68, t0.c68, t0.c68))=((t0.c2, t0.c68, t0.c68, NULL, t0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((('')) BETWEEN ((t0.c2)) AND ((t0.c2))))AND(TRIM(DISTINCT t0.c2, t0.c2))))OR((((t0.c68))>((t0.c68)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c2, t0.c68, t0.c68, t0.c68))==((t0.c2, t0.c68, t0.c68, NULL, t0.c2))) COLLATE BINARY) ORDER BY ((((((('')) BETWEEN ((t0.c2)) AND ((t0.c2))))AND(TRIM(DISTINCT t0.c2, t0.c2))))OR((((t0.c68))>((t0.c68)))))  NULLS LAST;
SELECT * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN (((t0.c2)%(t0.c2)), '1606315091' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS BLOB) IN (((t0.c2)%(t0.c2)), '1606315091' COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN (((t0.c2)%(t0.c2)), '1606315091' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS BLOB) IN (((t0.c2)%(t0.c2)), '1606315091' COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CAST(t0.c2 AS BLOB) IN (((t0.c2)%(t0.c2)), '1606315091' COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(t0.c2)))<<(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(vt0.c0)))OR(t0.c2)))<<(t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(t0.c2)))<<(t0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(vt0.c0)))OR(t0.c2)))<<(t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(t0.c2)))<<(t0.c2)));
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c68 COLLATE BINARY))) ORDER BY x'93dc', LIKELY(((t0.c2)<(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY x'93dc', LIKELY(((t0.c2)<(t0.c2))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c68 COLLATE BINARY))) ORDER BY x'93dc', LIKELY(((t0.c2)<(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (t0.c68 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY x'93dc', LIKELY(((t0.c2)<(t0.c2))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c68 COLLATE BINARY))) ORDER BY x'93dc', LIKELY(((t0.c2)<(t0.c2))) DESC;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)AND(json_array_length(vt0.c0))))AND((NOT (vt0.c0))))) ORDER BY (HEX(DISTINCT vt0.c0) IN ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)AND(json_array_length(vt0.c0))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (HEX(DISTINCT vt0.c0) IN ((- (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)AND(json_array_length(vt0.c0))))AND((NOT (vt0.c0))))) ORDER BY (HEX(DISTINCT vt0.c0) IN ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)AND(json_array_length(vt0.c0))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (HEX(DISTINCT vt0.c0) IN ((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c68)))OR(t0.c68)))||((((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c68)))OR(t0.c68)))||((((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c68)))OR(t0.c68)))||((((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c68)))OR(t0.c68)))||((((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c68)))OR(t0.c68)))||((((t0.c2)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), (- (t0.c2)), INSTR('', t0.c2)))<((((NULL)+('')), t0.c2 COLLATE NOCASE, (t0.c2 IN (t0.c2)))))) ORDER BY ((CASE WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), (- (t0.c2)), INSTR('', t0.c2)))<((((NULL)+('')), t0.c2 COLLATE NOCASE, (t0.c2 IN (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), (- (t0.c2)), INSTR('', t0.c2)))<((((NULL)+('')), t0.c2 COLLATE NOCASE, (t0.c2 IN (t0.c2)))))) ORDER BY ((CASE WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), (- (t0.c2)), INSTR('', t0.c2)))<((((NULL)+('')), t0.c2 COLLATE NOCASE, (t0.c2 IN (t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), (- (t0.c2)), INSTR('', t0.c2)))<((((NULL)+('')), t0.c2 COLLATE NOCASE, (t0.c2 IN (t0.c2)))))) ORDER BY ((CASE WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((NOT (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((NOT (t0.c68)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ ((NOT (t0.c68)))));
SELECT * FROM t0, vt0 WHERE (((0.6555626581988913) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.6555626581988913) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((0.6555626581988913) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.6555626581988913) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((0.6555626581988913) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('-888644932') ORDER BY CAST(t0.c2 AS REAL) COLLATE NOCASE, (+ (CASE WHEN x'337a70bf' THEN t0.c68 END)) ASC  NULLS FIRST, ((t0.c68 COLLATE NOCASE)<>((t0.c68 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-888644932') IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c2 AS REAL) COLLATE NOCASE, (+ (CASE WHEN x'337a70bf' THEN t0.c68 END)) ASC  NULLS FIRST, ((t0.c68 COLLATE NOCASE)<>((t0.c68 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('-888644932') ORDER BY CAST(t0.c2 AS REAL) COLLATE NOCASE, (+ (CASE WHEN x'337a70bf' THEN t0.c68 END)) ASC  NULLS FIRST, ((t0.c68 COLLATE NOCASE)<>((t0.c68 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-888644932') IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c2 AS REAL) COLLATE NOCASE, (+ (CASE WHEN x'337a70bf' THEN t0.c68 END)) ASC  NULLS FIRST, ((t0.c68 COLLATE NOCASE)<>((t0.c68 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('-888644932') ORDER BY CAST(t0.c2 AS REAL) COLLATE NOCASE, (+ (CASE WHEN x'337a70bf' THEN t0.c68 END)) ASC  NULLS FIRST, ((t0.c68 COLLATE NOCASE)<>((t0.c68 IN ()))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0))) COLLATE RTRIM) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC, LIKELIHOOD(DISTINCT ((-1696102845) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7784598806509102);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC, LIKELIHOOD(DISTINCT ((-1696102845) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7784598806509102));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0))) COLLATE RTRIM) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC, LIKELIHOOD(DISTINCT ((-1696102845) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7784598806509102);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC, LIKELIHOOD(DISTINCT ((-1696102845) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7784598806509102));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0))) COLLATE RTRIM) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) DESC, LIKELIHOOD(DISTINCT ((-1696102845) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.7784598806509102);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY QUOTE(vt0.c0) DESC, (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)%(x'')))))AND('1353512980'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY QUOTE(vt0.c0) DESC, (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)%(x'')))))AND('1353512980'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY QUOTE(vt0.c0) DESC, (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)%(x'')))))AND('1353512980'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY QUOTE(vt0.c0) DESC, (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)%(x'')))))AND('1353512980'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY QUOTE(vt0.c0) DESC, (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)%(x'')))))AND('1353512980'))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c68) IS FALSE)) AND (LIKELIHOOD(t0.c2, 0.023592400732522667)))  NULLS LAST, CAST(NULL AS NUMERIC), (((((t0.c68 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c68 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c68) IS FALSE)) AND (LIKELIHOOD(t0.c2, 0.023592400732522667)))  NULLS LAST, CAST(NULL AS NUMERIC), (((((t0.c68 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c68 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c68) IS FALSE)) AND (LIKELIHOOD(t0.c2, 0.023592400732522667)))  NULLS LAST, CAST(NULL AS NUMERIC), (((((t0.c68 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c68 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c68) IS FALSE)) AND (LIKELIHOOD(t0.c2, 0.023592400732522667)))  NULLS LAST, CAST(NULL AS NUMERIC), (((((t0.c68 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c68 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (((t0.c68) IS FALSE)) AND (LIKELIHOOD(t0.c2, 0.023592400732522667)))  NULLS LAST, CAST(NULL AS NUMERIC), (((((t0.c68 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c68 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c2))))  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)&(t0.c2)))*(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) WHERE (TRIM((((t0.c2))>(('1606315091')))));
SELECT SUM(count) FROM (SELECT ((TRIM((((t0.c2))>(('1606315091'))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)&(t0.c2)))*(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)));
SELECT * FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)&(t0.c2)))*(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) WHERE (TRIM((((t0.c2))>(('1606315091')))));
SELECT SUM(count) FROM (SELECT ((TRIM((((t0.c2))>(('1606315091'))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)&(t0.c2)))*(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)));
SELECT * FROM vt0 CROSS JOIN t0 ON ((((vt0.c0)&(t0.c2)))*(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) WHERE (TRIM((((t0.c2))>(('1606315091')))));
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (NOT (CASE t0.c68  WHEN t0.c68 THEN vt0.c0 ELSE t0.c68 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (CASE t0.c68  WHEN t0.c68 THEN vt0.c0 ELSE t0.c68 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (NOT (CASE t0.c68  WHEN t0.c68 THEN vt0.c0 ELSE t0.c68 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (CASE t0.c68  WHEN t0.c68 THEN vt0.c0 ELSE t0.c68 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(t0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (NOT (CASE t0.c68  WHEN t0.c68 THEN vt0.c0 ELSE t0.c68 END));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULLIF(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((NULL) ISNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0)+(vt0.c0)) END DESC, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((NULLIF(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((NULL) ISNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0)+(vt0.c0)) END DESC, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULLIF(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((NULL) ISNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0)+(vt0.c0)) END DESC, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((NULLIF(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((NULL) ISNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0)+(vt0.c0)) END DESC, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((NULLIF(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((NULL) ISNULL) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 COLLATE NOCASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0)+(vt0.c0)) END DESC, (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c2)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c2)))AND(((((t0.c2)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c2)))AND(((((t0.c2)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c2)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c2)))AND(((((t0.c2)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c2)))AND(((((t0.c2)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c2)OR(t0.c68)))AND(t0.c68)))AND(t0.c68)))AND(t0.c2)))AND(((((t0.c2)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)<<(x''))))) ORDER BY ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)<<(x''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)<<(x''))))) ORDER BY ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)<<(x''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)<<(x''))))) ORDER BY ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT * FROM vt0 WHERE (((0.3534180334391437) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(vt0.c0)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3534180334391437) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0 WHERE (((0.3534180334391437) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(vt0.c0)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3534180334391437) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0 WHERE (((0.3534180334391437) BETWEEN (((vt0.c0) ISNULL)) AND (TRIM(vt0.c0)))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE)))) ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((0x49e1e12e, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((0x49e1e12e, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE)))) ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((0x49e1e12e, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((0x49e1e12e, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE)))) ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((0x49e1e12e, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST, CAST((vt0.c0 IN ()) AS BLOB) ASC;
SELECT ALL * FROM t0, vt0 WHERE (((x'1a554446')<(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'1a554446')<(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((x'1a554446')<(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'1a554446')<(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((x'1a554446')<(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY json_remove(x'd2bb', t0.c2) DESC, (~ ((- (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY json_remove(x'd2bb', t0.c2) DESC, (~ ((- (t0.c2))))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY json_remove(x'd2bb', t0.c2) DESC, (~ ((- (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY json_remove(x'd2bb', t0.c2) DESC, (~ ((- (t0.c2))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(vt0.c0)))AND(vt0.c0))))>=((CAST(vt0.c0 AS REAL)))));
SELECT COUNT(*) FROM t0 WHERE ((NOT (CASE NULL  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE NULL  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (CASE NULL  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE NULL  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (CASE NULL  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)));
SELECT * FROM t0 WHERE (((0.15879244727744823 COLLATE NOCASE) NOT BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END) AND ((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((0.15879244727744823 COLLATE NOCASE) NOT BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END) AND ((+ (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((0.15879244727744823 COLLATE NOCASE) NOT BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END) AND ((+ (t0.c68)))));
SELECT SUM(count) FROM (SELECT ((((0.15879244727744823 COLLATE NOCASE) NOT BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END) AND ((+ (t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((0.15879244727744823 COLLATE NOCASE) NOT BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c68 END) AND ((+ (t0.c68)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68 COLLATE NOCASE)OR((- (t0.c68)))))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68 COLLATE NOCASE)OR((- (t0.c68)))))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68 COLLATE NOCASE)OR((- (t0.c68)))))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68 COLLATE NOCASE)OR((- (t0.c68)))))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68 COLLATE NOCASE)OR((- (t0.c68)))))OR((((t0.c68)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((((t0.c68)AND(NULL)))OR(t0.c68)))AND(((vt0.c0) IS FALSE))))OR(((t0.c68) ISNULL))) WHERE (((CAST(t0.c2 AS INTEGER))>(CASE NULL  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER))>(CASE NULL  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((((((t0.c68)AND(NULL)))OR(t0.c68)))AND(((vt0.c0) IS FALSE))))OR(((t0.c68) ISNULL))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((((t0.c68)AND(NULL)))OR(t0.c68)))AND(((vt0.c0) IS FALSE))))OR(((t0.c68) ISNULL))) WHERE (((CAST(t0.c2 AS INTEGER))>(CASE NULL  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS INTEGER))>(CASE NULL  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((((((t0.c68)AND(NULL)))OR(t0.c68)))AND(((vt0.c0) IS FALSE))))OR(((t0.c68) ISNULL))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((((t0.c68)AND(NULL)))OR(t0.c68)))AND(((vt0.c0) IS FALSE))))OR(((t0.c68) ISNULL))) WHERE (((CAST(t0.c2 AS INTEGER))>(CASE NULL  WHEN vt0.c0 THEN t0.c2 ELSE t0.c2 END)));
SELECT * FROM t0, vt0 WHERE ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ())) ORDER BY ((CAST(x'72b7' AS NUMERIC))&(((vt0.c0)+(vt0.c0)))), ((((vt0.c0 IN ()), t0.c68 COLLATE BINARY, (((vt0.c0, t0.c68, t0.c2)) BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((t0.c68, t0.c68, t0.c68)))))!=((((t0.c2)IS NOT(t0.c2)), ((t0.c68)>>(vt0.c0)), CAST(t0.c68 AS INTEGER)))) ASC  NULLS LAST, (- ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(x'72b7' AS NUMERIC))&(((vt0.c0)+(vt0.c0)))), ((((vt0.c0 IN ()), t0.c68 COLLATE BINARY, (((vt0.c0, t0.c68, t0.c2)) BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((t0.c68, t0.c68, t0.c68)))))!=((((t0.c2)IS NOT(t0.c2)), ((t0.c68)>>(vt0.c0)), CAST(t0.c68 AS INTEGER)))) ASC  NULLS LAST, (- ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ())) ORDER BY ((CAST(x'72b7' AS NUMERIC))&(((vt0.c0)+(vt0.c0)))), ((((vt0.c0 IN ()), t0.c68 COLLATE BINARY, (((vt0.c0, t0.c68, t0.c2)) BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((t0.c68, t0.c68, t0.c68)))))!=((((t0.c2)IS NOT(t0.c2)), ((t0.c68)>>(vt0.c0)), CAST(t0.c68 AS INTEGER)))) ASC  NULLS LAST, (- ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(x'72b7' AS NUMERIC))&(((vt0.c0)+(vt0.c0)))), ((((vt0.c0 IN ()), t0.c68 COLLATE BINARY, (((vt0.c0, t0.c68, t0.c2)) BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((t0.c68, t0.c68, t0.c68)))))!=((((t0.c2)IS NOT(t0.c2)), ((t0.c68)>>(vt0.c0)), CAST(t0.c68 AS INTEGER)))) ASC  NULLS LAST, (- ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) IN ())) ORDER BY ((CAST(x'72b7' AS NUMERIC))&(((vt0.c0)+(vt0.c0)))), ((((vt0.c0 IN ()), t0.c68 COLLATE BINARY, (((vt0.c0, t0.c68, t0.c2)) BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((t0.c68, t0.c68, t0.c68)))))!=((((t0.c2)IS NOT(t0.c2)), ((t0.c68)>>(vt0.c0)), CAST(t0.c68 AS INTEGER)))) ASC  NULLS LAST, (- ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2) NOTNULL))OR((+ (t0.c2)))))AND(((vt0.c0)>>(t0.c2))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c68 THEN vt0.c0 END)) AND ((LENGTH(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOTNULL))OR((+ (t0.c2)))))AND(((vt0.c0)>>(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c68 THEN vt0.c0 END)) AND ((LENGTH(t0.c68)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2) NOTNULL))OR((+ (t0.c2)))))AND(((vt0.c0)>>(t0.c2))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c68 THEN vt0.c0 END)) AND ((LENGTH(t0.c68)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOTNULL))OR((+ (t0.c2)))))AND(((vt0.c0)>>(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c68 THEN vt0.c0 END)) AND ((LENGTH(t0.c68)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2) NOTNULL))OR((+ (t0.c2)))))AND(((vt0.c0)>>(t0.c2))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c68 THEN vt0.c0 END)) AND ((LENGTH(t0.c68)))) ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c68)) AS INTEGER) WHERE (((LOWER(t0.c2)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c2))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(t0.c2)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c2))>((vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c68)) AS INTEGER));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c68)) AS INTEGER) WHERE (((LOWER(t0.c2)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c2))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(t0.c2)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c2))>((vt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c68)) AS INTEGER));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST((~ (t0.c68)) AS INTEGER) WHERE (((LOWER(t0.c2)) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c2))>((vt0.c0))))));
SELECT ALL * FROM t0 WHERE ((('miiOgp^g')>(t0.c2)) COLLATE BINARY) ORDER BY ((((t0.c68) ISNULL))%(json_array_length(t0.c2, t0.c2)))  NULLS FIRST, CAST((NOT (t0.c2)) AS BLOB), ((((t0.c68) BETWEEN (t0.c68) AND (t0.c2)))<<((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('miiOgp^g')>(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) ISNULL))%(json_array_length(t0.c2, t0.c2)))  NULLS FIRST, CAST((NOT (t0.c2)) AS BLOB), ((((t0.c68) BETWEEN (t0.c68) AND (t0.c2)))<<((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT ALL * FROM t0 WHERE ((('miiOgp^g')>(t0.c2)) COLLATE BINARY) ORDER BY ((((t0.c68) ISNULL))%(json_array_length(t0.c2, t0.c2)))  NULLS FIRST, CAST((NOT (t0.c2)) AS BLOB), ((((t0.c68) BETWEEN (t0.c68) AND (t0.c2)))<<((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('miiOgp^g')>(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68) ISNULL))%(json_array_length(t0.c2, t0.c2)))  NULLS FIRST, CAST((NOT (t0.c2)) AS BLOB), ((((t0.c68) BETWEEN (t0.c68) AND (t0.c2)))<<((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))));
SELECT ALL * FROM t0 WHERE ((('miiOgp^g')>(t0.c2)) COLLATE BINARY) ORDER BY ((((t0.c68) ISNULL))%(json_array_length(t0.c2, t0.c2)))  NULLS FIRST, CAST((NOT (t0.c2)) AS BLOB), ((((t0.c68) BETWEEN (t0.c68) AND (t0.c2)))<<((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN (- (t0.c2)) THEN ((t0.c68)<>(t0.c2)) ELSE (t0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c2)) THEN ((t0.c68)<>(t0.c2)) ELSE (t0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN (- (t0.c2)) THEN ((t0.c68)<>(t0.c2)) ELSE (t0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c2)) THEN ((t0.c68)<>(t0.c2)) ELSE (t0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN (- (t0.c2)) THEN ((t0.c68)<>(t0.c2)) ELSE (t0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2) ISNULL) AS INTEGER)) ORDER BY ((t0.c2)AND(LTRIM(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)AND(LTRIM(t0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2) ISNULL) AS INTEGER)) ORDER BY ((t0.c2)AND(LTRIM(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) ISNULL) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)AND(LTRIM(t0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c2) ISNULL) AS INTEGER)) ORDER BY ((t0.c2)AND(LTRIM(t0.c2)));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ());
SELECT * FROM vt0 INDEXED BY i85 WHERE (ABS(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY (('1612244080') NOT BETWEEN ((((0.6607466033778063)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((NULL) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 INDEXED BY i85 ORDER BY (('1612244080') NOT BETWEEN ((((0.6607466033778063)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((NULL) ISNULL)))  NULLS LAST);
SELECT * FROM vt0 INDEXED BY i85 WHERE (ABS(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY (('1612244080') NOT BETWEEN ((((0.6607466033778063)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((NULL) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 INDEXED BY i85 ORDER BY (('1612244080') NOT BETWEEN ((((0.6607466033778063)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((NULL) ISNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (0.21656924865917015) ORDER BY CAST((+ (t0.c68)) AS INTEGER) DESC, ((t0.c2)IS(t0.c2)) COLLATE NOCASE  NULLS LAST, ((t0.c2) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.21656924865917015) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c68)) AS INTEGER) DESC, ((t0.c2)IS(t0.c2)) COLLATE NOCASE  NULLS LAST, ((t0.c2) NOTNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (0.21656924865917015) ORDER BY CAST((+ (t0.c68)) AS INTEGER) DESC, ((t0.c2)IS(t0.c2)) COLLATE NOCASE  NULLS LAST, ((t0.c2) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.21656924865917015) IS TRUE)  as count FROM t0 ORDER BY CAST((+ (t0.c68)) AS INTEGER) DESC, ((t0.c2)IS(t0.c2)) COLLATE NOCASE  NULLS LAST, ((t0.c2) NOTNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (0.21656924865917015) ORDER BY CAST((+ (t0.c68)) AS INTEGER) DESC, ((t0.c2)IS(t0.c2)) COLLATE NOCASE  NULLS LAST, ((t0.c2) NOTNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY UNLIKELY(DISTINCT NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (t0.c68 IN (t0.c2))  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN CASE vt0.c0  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE '' END WHEN (((vt0.c0))>=((t0.c68))) THEN (- (t0.c68)) ELSE (((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY ((('') BETWEEN (1523114895) AND (t0.c68)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c68 IN (t0.c2))  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN CASE vt0.c0  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE '' END WHEN (((vt0.c0))>=((t0.c68))) THEN (- (t0.c68)) ELSE (((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('') BETWEEN (1523114895) AND (t0.c68)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (t0.c68 IN (t0.c2))  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN CASE vt0.c0  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE '' END WHEN (((vt0.c0))>=((t0.c68))) THEN (- (t0.c68)) ELSE (((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY ((('') BETWEEN (1523114895) AND (t0.c68)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c68 IN (t0.c2))  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN CASE vt0.c0  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE '' END WHEN (((vt0.c0))>=((t0.c68))) THEN (- (t0.c68)) ELSE (((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('') BETWEEN (1523114895) AND (t0.c68)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (t0.c68 IN (t0.c2))  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)) THEN CAST(t0.c2 AS NUMERIC) WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN CASE vt0.c0  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE '' END WHEN (((vt0.c0))>=((t0.c68))) THEN (- (t0.c68)) ELSE (((t0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY ((('') BETWEEN (1523114895) AND (t0.c68)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.8811051916009346) THEN '1961180152' WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(vt0.c0, 0.8811051916009346) THEN '1961180152' WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.8811051916009346) THEN '1961180152' WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELIHOOD(vt0.c0, 0.8811051916009346) THEN '1961180152' WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.8811051916009346) THEN '1961180152' WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) ELSE NULL END);
SELECT * FROM t0 WHERE ((((((t0.c2))<((t0.c2))))IS NOT(((t0.c68)AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))<((t0.c2))))IS NOT(((t0.c68)AND(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c2))<((t0.c2))))IS NOT(((t0.c68)AND(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))<((t0.c2))))IS NOT(((t0.c68)AND(t0.c68))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c2))<((t0.c2))))IS NOT(((t0.c68)AND(t0.c68)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((NULL)) AND ((t0.c68))) COLLATE BINARY WHERE ((((t0.c68)) BETWEEN ((COALESCE(DISTINCT t0.c68, vt0.c0))) AND (((~ (''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((COALESCE(DISTINCT t0.c68, vt0.c0))) AND (((~ ('')))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((NULL)) AND ((t0.c68))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((NULL)) AND ((t0.c68))) COLLATE BINARY WHERE ((((t0.c68)) BETWEEN ((COALESCE(DISTINCT t0.c68, vt0.c0))) AND (((~ (''))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN ((COALESCE(DISTINCT t0.c68, vt0.c0))) AND (((~ ('')))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((NULL)) AND ((t0.c68))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0)) BETWEEN ((NULL)) AND ((t0.c68))) COLLATE BINARY WHERE ((((t0.c68)) BETWEEN ((COALESCE(DISTINCT t0.c68, vt0.c0))) AND (((~ (''))))));
SELECT ALL * FROM vt0, t0 WHERE (((t0.c68) IS FALSE) COLLATE BINARY) ORDER BY (INSTR(t0.c2, t0.c68) IN ()), ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(x'' AS NUMERIC)) AND (t0.c68 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c68) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (INSTR(t0.c2, t0.c68) IN ()), ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(x'' AS NUMERIC)) AND (t0.c68 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c68) IS FALSE) COLLATE BINARY) ORDER BY (INSTR(t0.c2, t0.c68) IN ()), ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(x'' AS NUMERIC)) AND (t0.c68 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c68) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (INSTR(t0.c2, t0.c68) IN ()), ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(x'' AS NUMERIC)) AND (t0.c68 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c68) IS FALSE) COLLATE BINARY) ORDER BY (INSTR(t0.c2, t0.c68) IN ()), ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(x'' AS NUMERIC)) AND (t0.c68 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (ABS(DISTINCT LIKELY(t0.c2)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT LIKELY(t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (ABS(DISTINCT LIKELY(t0.c2)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT LIKELY(t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (ABS(DISTINCT LIKELY(t0.c2)));
SELECT ALL * FROM t0 WHERE ((- ((((t0.c68))!=((t0.c2)))))) ORDER BY t0.c68  NULLS LAST, CAST(0.5742938548698712 AS BLOB), ((('y*u' IN (t0.c2, t0.c68)))-(-680316601)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c68))<>((t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c68  NULLS LAST, CAST(0.5742938548698712 AS BLOB), ((('y*u' IN (t0.c2, t0.c68)))-(-680316601)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- ((((t0.c68))!=((t0.c2)))))) ORDER BY t0.c68  NULLS LAST, CAST(0.5742938548698712 AS BLOB), ((('y*u' IN (t0.c2, t0.c68)))-(-680316601)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c68))<>((t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c68  NULLS LAST, CAST(0.5742938548698712 AS BLOB), ((('y*u' IN (t0.c2, t0.c68)))-(-680316601)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- ((((t0.c68))!=((t0.c2)))))) ORDER BY t0.c68  NULLS LAST, CAST(0.5742938548698712 AS BLOB), ((('y*u' IN (t0.c2, t0.c68)))-(-680316601)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2 IN (t0.c2)))OR((((('654958602')AND(t0.c2)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c2)))OR((((('654958602')AND(t0.c2)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2 IN (t0.c2)))OR((((('654958602')AND(t0.c2)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c2)))OR((((('654958602')AND(t0.c2)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2 IN (t0.c2)))OR((((('654958602')AND(t0.c2)))AND(t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c2)))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN 'EQR<' THEN t0.c68 WHEN 0.6675182253852097 THEN t0.c2 END)))OR(((0.04364289334988325)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c2)))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN 'EQR<' THEN t0.c68 WHEN 0.6675182253852097 THEN t0.c2 END)))OR(((0.04364289334988325)<=(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c2)))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN 'EQR<' THEN t0.c68 WHEN 0.6675182253852097 THEN t0.c2 END)))OR(((0.04364289334988325)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(t0.c2)))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN 'EQR<' THEN t0.c68 WHEN 0.6675182253852097 THEN t0.c2 END)))OR(((0.04364289334988325)<=(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c2)))AND(CASE WHEN t0.c68 THEN t0.c68 WHEN 'EQR<' THEN t0.c68 WHEN 0.6675182253852097 THEN t0.c2 END)))OR(((0.04364289334988325)<=(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE ('靉g%ퟚ뗫G\ᢔ');
SELECT SUM(count) FROM (SELECT (('靉g%ퟚ뗫G\ᢔ') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('靉g%ퟚ뗫G\ᢔ');
SELECT SUM(count) FROM (SELECT (('靉g%ퟚ뗫G\ᢔ') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('靉g%ퟚ뗫G\ᢔ');
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c2)<(NULL))  WHEN t0.c68 THEN CAST(t0.c2 AS TEXT) WHEN t0.c68 COLLATE BINARY THEN (t0.c68 IN ()) WHEN t0.c68 COLLATE RTRIM THEN t0.c2 ELSE ((((t0.c2)AND(t0.c68)))OR(t0.c2)) END) ORDER BY (((t0.c68, t0.c2, t0.c2)) BETWEEN ((((t0.c2)!=(t0.c2)), ((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c2)))AND(t0.c2)), t0.c68 COLLATE RTRIM)) AND ((((t0.c68)/(t0.c68)), ((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c2, t0.c2, 0.7637070867890812)) BETWEEN ((t0.c68, t0.c68, NULL)) AND ((t0.c2, t0.c68, t0.c68)))))) DESC  NULLS FIRST, '282477882';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)<(NULL))  WHEN t0.c68 THEN CAST(t0.c2 AS TEXT) WHEN t0.c68 COLLATE BINARY THEN (t0.c68 IN ()) WHEN t0.c68 COLLATE RTRIM THEN t0.c2 ELSE ((((t0.c2)AND(t0.c68)))OR(t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68, t0.c2, t0.c2)) BETWEEN ((((t0.c2)<>(t0.c2)), ((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c2)))AND(t0.c2)), t0.c68 COLLATE RTRIM)) AND ((((t0.c68)/(t0.c68)), ((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c2, t0.c2, 0.7637070867890812)) BETWEEN ((t0.c68, t0.c68, NULL)) AND ((t0.c2, t0.c68, t0.c68)))))) DESC  NULLS FIRST, '282477882');
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c2)<(NULL))  WHEN t0.c68 THEN CAST(t0.c2 AS TEXT) WHEN t0.c68 COLLATE BINARY THEN (t0.c68 IN ()) WHEN t0.c68 COLLATE RTRIM THEN t0.c2 ELSE ((((t0.c2)AND(t0.c68)))OR(t0.c2)) END) ORDER BY (((t0.c68, t0.c2, t0.c2)) BETWEEN ((((t0.c2)!=(t0.c2)), ((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c2)))AND(t0.c2)), t0.c68 COLLATE RTRIM)) AND ((((t0.c68)/(t0.c68)), ((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c2, t0.c2, 0.7637070867890812)) BETWEEN ((t0.c68, t0.c68, NULL)) AND ((t0.c2, t0.c68, t0.c68)))))) DESC  NULLS FIRST, '282477882';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)<(NULL))  WHEN t0.c68 THEN CAST(t0.c2 AS TEXT) WHEN t0.c68 COLLATE BINARY THEN (t0.c68 IN ()) WHEN t0.c68 COLLATE RTRIM THEN t0.c2 ELSE ((((t0.c2)AND(t0.c68)))OR(t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68, t0.c2, t0.c2)) BETWEEN ((((t0.c2)<>(t0.c2)), ((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c2)))AND(t0.c2)), t0.c68 COLLATE RTRIM)) AND ((((t0.c68)/(t0.c68)), ((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c2, t0.c2, 0.7637070867890812)) BETWEEN ((t0.c68, t0.c68, NULL)) AND ((t0.c2, t0.c68, t0.c68)))))) DESC  NULLS FIRST, '282477882');
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c2)<(NULL))  WHEN t0.c68 THEN CAST(t0.c2 AS TEXT) WHEN t0.c68 COLLATE BINARY THEN (t0.c68 IN ()) WHEN t0.c68 COLLATE RTRIM THEN t0.c2 ELSE ((((t0.c2)AND(t0.c68)))OR(t0.c2)) END) ORDER BY (((t0.c68, t0.c2, t0.c2)) BETWEEN ((((t0.c2)!=(t0.c2)), ((((((((t0.c68)OR(t0.c68)))OR(t0.c68)))AND(t0.c2)))AND(t0.c2)), t0.c68 COLLATE RTRIM)) AND ((((t0.c68)/(t0.c68)), ((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c68)), (((t0.c2, t0.c2, 0.7637070867890812)) BETWEEN ((t0.c68, t0.c68, NULL)) AND ((t0.c2, t0.c68, t0.c68)))))) DESC  NULLS FIRST, '282477882';
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (IFNULL(((t0.c68) ISNULL), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c68) ISNULL), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (IFNULL(((t0.c68) ISNULL), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((IFNULL(((t0.c68) ISNULL), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (IFNULL(((t0.c68) ISNULL), CAST(vt0.c0 AS TEXT)));
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))OR(HEX(DISTINCT vt0.c0))))AND(vt0.c0)))AND('f0'))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN '654958602' COLLATE RTRIM THEN (+ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN NULLIF(DISTINCT -2.4087052E8, vt0.c0) THEN (+ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN '' ELSE ((vt0.c0) IS FALSE) END ASC  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN JULIANDAY('0.21656924865917015', vt0.c0, x'') WHEN x'' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))OR(HEX(DISTINCT vt0.c0))))AND(vt0.c0)))AND('f0'))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN '654958602' COLLATE RTRIM THEN (+ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN NULLIF(DISTINCT -2.4087052E8, vt0.c0) THEN (+ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN '' ELSE ((vt0.c0) IS FALSE) END ASC  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN JULIANDAY('0.21656924865917015', vt0.c0, x'') WHEN x'' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 END DESC);
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))OR(HEX(DISTINCT vt0.c0))))AND(vt0.c0)))AND('f0'))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN '654958602' COLLATE RTRIM THEN (+ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN NULLIF(DISTINCT -2.4087052E8, vt0.c0) THEN (+ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN '' ELSE ((vt0.c0) IS FALSE) END ASC  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN JULIANDAY('0.21656924865917015', vt0.c0, x'') WHEN x'' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))OR(HEX(DISTINCT vt0.c0))))AND(vt0.c0)))AND('f0'))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN '654958602' COLLATE RTRIM THEN (+ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN NULLIF(DISTINCT -2.4087052E8, vt0.c0) THEN (+ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN '' ELSE ((vt0.c0) IS FALSE) END ASC  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN JULIANDAY('0.21656924865917015', vt0.c0, x'') WHEN x'' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 END DESC);
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0) NOT NULL))))OR(HEX(DISTINCT vt0.c0))))AND(vt0.c0)))AND('f0'))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN '654958602' COLLATE RTRIM THEN (+ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN NULLIF(DISTINCT -2.4087052E8, vt0.c0) THEN (+ (vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN '' ELSE ((vt0.c0) IS FALSE) END ASC  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN JULIANDAY('0.21656924865917015', vt0.c0, x'') WHEN x'' THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN vt0.c0 END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c68 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c68 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c68 COLLATE RTRIM AS REAL));
SELECT * FROM vt0, t0 WHERE (((CASE x'ebe6'  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((t0.c2)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x'ebe6'  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((t0.c2)%(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE x'ebe6'  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((t0.c2)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x'ebe6'  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((t0.c2)%(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE x'ebe6'  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (((t0.c2)%(t0.c2)))));
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c2)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2)==(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c2)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c2)==(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c2)==(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 IN ())))<=((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))))) ORDER BY ((PRINTF(vt0.c0)) BETWEEN (((t0.c2) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC, (((t0.c68) BETWEEN (vt0.c0) AND (x'')) IN ())  NULLS FIRST, MIN(NULL COLLATE RTRIM, ((vt0.c0)<<('')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))<=((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((PRINTF(vt0.c0)) BETWEEN (((t0.c2) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC, (((t0.c68) BETWEEN (vt0.c0) AND (x'')) IN ())  NULLS FIRST, MIN(NULL COLLATE RTRIM, ((vt0.c0)<<('')))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 IN ())))<=((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))))) ORDER BY ((PRINTF(vt0.c0)) BETWEEN (((t0.c2) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC, (((t0.c68) BETWEEN (vt0.c0) AND (x'')) IN ())  NULLS FIRST, MIN(NULL COLLATE RTRIM, ((vt0.c0)<<('')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))<=((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((PRINTF(vt0.c0)) BETWEEN (((t0.c2) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC, (((t0.c68) BETWEEN (vt0.c0) AND (x'')) IN ())  NULLS FIRST, MIN(NULL COLLATE RTRIM, ((vt0.c0)<<('')))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 IN ())))<=((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))))) ORDER BY ((PRINTF(vt0.c0)) BETWEEN (((t0.c2) IS TRUE)) AND (CAST(vt0.c0 AS INTEGER))) DESC, (((t0.c68) BETWEEN (vt0.c0) AND (x'')) IN ())  NULLS FIRST, MIN(NULL COLLATE RTRIM, ((vt0.c0)<<('')))  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ (json_array_length(vt0.c0)))) ORDER BY CASE STRFTIME(vt0.c0, vt0.c0, '㞩')  WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (NULL)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array_length(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE STRFTIME(vt0.c0, vt0.c0, '㞩')  WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (NULL)) END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (json_array_length(vt0.c0)))) ORDER BY CASE STRFTIME(vt0.c0, vt0.c0, '㞩')  WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (NULL)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array_length(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE STRFTIME(vt0.c0, vt0.c0, '㞩')  WHEN ((vt0.c0)IS(vt0.c0)) THEN (~ (NULL)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON -430280973 WHERE ((((- (t0.c2))) IS TRUE)) ORDER BY CAST(CASE t0.c68  WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'CH' THEN t0.c68 ELSE t0.c68 END AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON -430280973 ORDER BY CAST(CASE t0.c68  WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'CH' THEN t0.c68 ELSE t0.c68 END AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON -430280973 WHERE ((((- (t0.c2))) IS TRUE)) ORDER BY CAST(CASE t0.c68  WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'CH' THEN t0.c68 ELSE t0.c68 END AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON -430280973 ORDER BY CAST(CASE t0.c68  WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'CH' THEN t0.c68 ELSE t0.c68 END AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON -430280973 WHERE ((((- (t0.c2))) IS TRUE)) ORDER BY CAST(CASE t0.c68  WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'CH' THEN t0.c68 ELSE t0.c68 END AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68) BETWEEN (((t0.c2)<>(t0.c68))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) BETWEEN (((t0.c2)!=(t0.c68))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68) BETWEEN (((t0.c2)<>(t0.c68))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) BETWEEN (((t0.c2)!=(t0.c68))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68) BETWEEN (((t0.c2)<>(t0.c68))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END)));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE))&(0.8702036930601873)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))&(0.8702036930601873))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE))&(0.8702036930601873)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))&(0.8702036930601873))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE))&(0.8702036930601873)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2) IS FALSE))OR(((vt0.c0)||(t0.c68)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2) IS FALSE))OR(((vt0.c0)||(t0.c68)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2) IS FALSE))OR(((vt0.c0)||(t0.c68)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2) IS FALSE))OR(((vt0.c0)||(t0.c68)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2) IS FALSE))OR(((vt0.c0)||(t0.c68)))))AND((vt0.c0 IN ()))));
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (CAST(CAST(t0.c68 AS NUMERIC) AS REAL)) ORDER BY ((((vt0.c0)==(vt0.c0)))GLOB(((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) DESC  NULLS FIRST, CAST('1523114895' AS BLOB) DESC  NULLS LAST, LIKELIHOOD('0', 0.5398686221676712);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c68 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)==(vt0.c0)))GLOB(((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) DESC  NULLS FIRST, CAST('1523114895' AS BLOB) DESC  NULLS LAST, LIKELIHOOD('0', 0.5398686221676712));
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (CAST(CAST(t0.c68 AS NUMERIC) AS REAL)) ORDER BY ((((vt0.c0)==(vt0.c0)))GLOB(((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) DESC  NULLS FIRST, CAST('1523114895' AS BLOB) DESC  NULLS LAST, LIKELIHOOD('0', 0.5398686221676712);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c68 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)==(vt0.c0)))GLOB(((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) DESC  NULLS FIRST, CAST('1523114895' AS BLOB) DESC  NULLS LAST, LIKELIHOOD('0', 0.5398686221676712));
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (CAST(CAST(t0.c68 AS NUMERIC) AS REAL)) ORDER BY ((((vt0.c0)==(vt0.c0)))GLOB(((t0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) DESC  NULLS FIRST, CAST('1523114895' AS BLOB) DESC  NULLS LAST, LIKELIHOOD('0', 0.5398686221676712);
SELECT COUNT(*) FROM t0 WHERE (CAST(CHANGES() AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHANGES() AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CHANGES() AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHANGES() AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CHANGES() AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c2)AND(COALESCE(t0.c2, t0.c68, t0.c2, t0.c68, t0.c68, t0.c2))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR(CASE t0.c68  WHEN t0.c2 THEN t0.c68 END)))AND((t0.c2 IN (t0.c2))))) ORDER BY ((t0.c68 COLLATE NOCASE)<(t0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)AND(COALESCE(t0.c2, t0.c68, t0.c2, t0.c68, t0.c68, t0.c2))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR(CASE t0.c68  WHEN t0.c2 THEN t0.c68 END)))AND((t0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE NOCASE)<(t0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c2)AND(COALESCE(t0.c2, t0.c68, t0.c2, t0.c68, t0.c68, t0.c2))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR(CASE t0.c68  WHEN t0.c2 THEN t0.c68 END)))AND((t0.c2 IN (t0.c2))))) ORDER BY ((t0.c68 COLLATE NOCASE)<(t0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)AND(COALESCE(t0.c2, t0.c68, t0.c2, t0.c68, t0.c68, t0.c2))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR(CASE t0.c68  WHEN t0.c2 THEN t0.c68 END)))AND((t0.c2 IN (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c68 COLLATE NOCASE)<(t0.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c2)AND(COALESCE(t0.c2, t0.c68, t0.c2, t0.c68, t0.c68, t0.c2))))AND(CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR(CASE t0.c68  WHEN t0.c2 THEN t0.c68 END)))AND((t0.c2 IN (t0.c2))))) ORDER BY ((t0.c68 COLLATE NOCASE)<(t0.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(ABS(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(ABS(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR(ABS(vt0.c0)));
SELECT * FROM vt0 WHERE (((((NULL)!=(vt0.c0))) NOT NULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)!=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT * FROM vt0 WHERE (((((NULL)!=(vt0.c0))) NOT NULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)!=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT * FROM vt0 WHERE (((((NULL)!=(vt0.c0))) NOT NULL)) ORDER BY NULL ASC;
SELECT COUNT(*) FROM t0 WHERE ((((('0.44651988077389415') BETWEEN (x'0b98') AND (t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('0.44651988077389415') BETWEEN (x'0b98') AND (t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((('0.44651988077389415') BETWEEN (x'0b98') AND (t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('0.44651988077389415') BETWEEN (x'0b98') AND (t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((('0.44651988077389415') BETWEEN (x'0b98') AND (t0.c2))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END)AND(TYPEOF(t0.c68))))OR(t0.c2))) ORDER BY (((t0.c68, vt0.c0, '-731549357')) NOT BETWEEN ((x'2391', ((t0.c68)=(x'')), ((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))AND(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c68)))AND(t0.c68)), (t0.c2 IN ()), (((t0.c68))<=((t0.c68))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END)AND(TYPEOF(t0.c68))))OR(t0.c2))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c68, vt0.c0, '-731549357')) NOT BETWEEN ((x'2391', ((t0.c68)=(x'')), ((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))AND(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c68)))AND(t0.c68)), (t0.c2 IN ()), (((t0.c68))<=((t0.c68))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END)AND(TYPEOF(t0.c68))))OR(t0.c2))) ORDER BY (((t0.c68, vt0.c0, '-731549357')) NOT BETWEEN ((x'2391', ((t0.c68)=(x'')), ((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))AND(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c68)))AND(t0.c68)), (t0.c2 IN ()), (((t0.c68))<=((t0.c68))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END)AND(TYPEOF(t0.c68))))OR(t0.c2))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c68, vt0.c0, '-731549357')) NOT BETWEEN ((x'2391', ((t0.c68)=(x'')), ((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))AND(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c68)))AND(t0.c68)), (t0.c2 IN ()), (((t0.c68))<=((t0.c68))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END)AND(TYPEOF(t0.c68))))OR(t0.c2))) ORDER BY (((t0.c68, vt0.c0, '-731549357')) NOT BETWEEN ((x'2391', ((t0.c68)=(x'')), ((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))AND(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c68)))AND(t0.c68)), (t0.c2 IN ()), (((t0.c68))<=((t0.c68))))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((UNLIKELY(DISTINCT t0.c2))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 ELSE '4u1^' END)))OR(((((vt0.c0)OR(t0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT t0.c2))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 ELSE '4u1^' END)))OR(((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((UNLIKELY(DISTINCT t0.c2))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 ELSE '4u1^' END)))OR(((((vt0.c0)OR(t0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT t0.c2))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 ELSE '4u1^' END)))OR(((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((UNLIKELY(DISTINCT t0.c2))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 ELSE '4u1^' END)))OR(((((vt0.c0)OR(t0.c2)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (((((t0.c68)OR(vt0.c0)))AND(t0.c68))))) ORDER BY ((t0.c2 COLLATE BINARY)=(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t0.c68)OR(vt0.c0)))AND(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2 COLLATE BINARY)=(t0.c2)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (((((t0.c68)OR(vt0.c0)))AND(t0.c68))))) ORDER BY ((t0.c2 COLLATE BINARY)=(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((t0.c68)OR(vt0.c0)))AND(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2 COLLATE BINARY)=(t0.c2)) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (((((t0.c68)OR(vt0.c0)))AND(t0.c68))))) ORDER BY ((t0.c2 COLLATE BINARY)=(t0.c2)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)AND(vt0.c0)))))AND(TOTAL_CHANGES())))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)AND(vt0.c0)))))AND(TOTAL_CHANGES())))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)AND(vt0.c0)))))AND(TOTAL_CHANGES())))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)AND(vt0.c0)))))AND(TOTAL_CHANGES())))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)AND(vt0.c0)))))AND(TOTAL_CHANGES())))OR(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c2)AND(vt0.c0)))AND(t0.c2)) IN ()) WHERE ('') ORDER BY ((((t0.c68) BETWEEN (0xffffffff97c9c097) AND (x'')))|(CASE t0.c68  WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)) DESC  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0)))  WHEN ((t0.c68)<=(t0.c2)) THEN 0.7569019855790797 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c2)AND(vt0.c0)))AND(t0.c2)) IN ()) ORDER BY ((((t0.c68) BETWEEN (0Xffffffff97c9c097) AND (x'')))|(CASE t0.c68  WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)) DESC  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0)))  WHEN ((t0.c68)<=(t0.c2)) THEN 0.7569019855790797 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c2)AND(vt0.c0)))AND(t0.c2)) IN ()) WHERE ('') ORDER BY ((((t0.c68) BETWEEN (0xffffffff97c9c097) AND (x'')))|(CASE t0.c68  WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)) DESC  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0)))  WHEN ((t0.c68)<=(t0.c2)) THEN 0.7569019855790797 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c2)AND(vt0.c0)))AND(t0.c2)) IN ()) ORDER BY ((((t0.c68) BETWEEN (0Xffffffff97c9c097) AND (x'')))|(CASE t0.c68  WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)) DESC  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0)))  WHEN ((t0.c68)<=(t0.c2)) THEN 0.7569019855790797 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c2)AND(vt0.c0)))AND(t0.c2)) IN ()) WHERE ('') ORDER BY ((((t0.c68) BETWEEN (0xffffffff97c9c097) AND (x'')))|(CASE t0.c68  WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)) DESC  NULLS FIRST, CASE (((vt0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0)))  WHEN ((t0.c68)<=(t0.c2)) THEN 0.7569019855790797 COLLATE RTRIM END  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE ((t0.c2) NOT BETWEEN (t0.c68) AND ('-1616394521'))  WHEN t0.c68 THEN ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) END WHERE (((CASE WHEN NULL THEN t0.c68 ELSE vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(t0.c2 AS TEXT)))) ORDER BY ((t0.c2) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t0.c68 ELSE vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE ((t0.c2) NOT BETWEEN (t0.c68) AND ('-1616394521'))  WHEN t0.c68 THEN ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) END ORDER BY ((t0.c2) ISNULL) DESC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE ((t0.c2) NOT BETWEEN (t0.c68) AND ('-1616394521'))  WHEN t0.c68 THEN ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) END WHERE (((CASE WHEN NULL THEN t0.c68 ELSE vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(t0.c2 AS TEXT)))) ORDER BY ((t0.c2) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t0.c68 ELSE vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE ((t0.c2) NOT BETWEEN (t0.c68) AND ('-1616394521'))  WHEN t0.c68 THEN ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) END ORDER BY ((t0.c2) ISNULL) DESC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE ((t0.c2) NOT BETWEEN (t0.c68) AND ('-1616394521'))  WHEN t0.c68 THEN ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) END WHERE (((CASE WHEN NULL THEN t0.c68 ELSE vt0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(t0.c2 AS TEXT)))) ORDER BY ((t0.c2) ISNULL) DESC;
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))&((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(0.4311707095568268)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))&((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(0.4311707095568268)))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))&((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(0.4311707095568268)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))&((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(0.4311707095568268)))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))&((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(0.4311707095568268)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c68 COLLATE BINARY) BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE BINARY) BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c68 COLLATE BINARY) BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((t0.c68 COLLATE BINARY) BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c68 COLLATE BINARY) BETWEEN (CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END) AND (CAST(t0.c2 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE ((NOT ('')) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN 0.18309247631659253 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('')) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN 0.18309247631659253 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))), vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NOT ('')) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN 0.18309247631659253 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('')) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN 0.18309247631659253 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))), vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NOT ('')) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN 0.18309247631659253 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS LAST, (((CAST(vt0.c0 AS TEXT)))>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))), vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i85 RIGHT OUTER JOIN vt0 ON ((((t0.c68) ISNULL))IS NOT(((t0.c68)>=(NULL)))) WHERE ((((+ (t0.c68)))*(((((t0.c2)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68)))*(((((t0.c2)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i85 RIGHT OUTER JOIN vt0 ON ((((t0.c68) ISNULL))IS NOT(((t0.c68)>=(NULL)))));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i85 RIGHT OUTER JOIN vt0 ON ((((t0.c68) ISNULL))IS NOT(((t0.c68)>=(NULL)))) WHERE ((((+ (t0.c68)))*(((((t0.c2)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c68)))*(((((t0.c2)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i85 RIGHT OUTER JOIN vt0 ON ((((t0.c68) ISNULL))IS NOT(((t0.c68)>=(NULL)))));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i85 RIGHT OUTER JOIN vt0 ON ((((t0.c68) ISNULL))IS NOT(((t0.c68)>=(NULL)))) WHERE ((((+ (t0.c68)))*(((((t0.c2)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON NULL WHERE ((('147162450') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('147162450') IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON NULL WHERE ((('147162450') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('147162450') IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON NULL WHERE ((('147162450') IS FALSE));
SELECT ALL * FROM t0 WHERE ((((t0.c2)) BETWEEN ((t0.c2)) AND ((CAST(x'' AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((t0.c2)) AND ((CAST(x'' AS REAL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)) BETWEEN ((t0.c2)) AND ((CAST(x'' AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((t0.c2)) AND ((CAST(x'' AS REAL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c2)) BETWEEN ((t0.c2)) AND ((CAST(x'' AS REAL)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN x'' ELSE t0.c68 END)IS NOT(((t0.c2)>(vt0.c0))))) ORDER BY t0.c2 DESC  NULLS LAST, '-980452921'  NULLS LAST, ((((-8.88644932E8)%(t0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c68) AND (t0.c68))) AND ((+ (-787668123)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN x'' ELSE t0.c68 END)IS NOT(((t0.c2)>(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY t0.c2 DESC  NULLS LAST, '-980452921'  NULLS LAST, ((((-8.88644932E8)%(t0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c68) AND (t0.c68))) AND ((+ (-787668123)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN x'' ELSE t0.c68 END)IS NOT(((t0.c2)>(vt0.c0))))) ORDER BY t0.c2 DESC  NULLS LAST, '-980452921'  NULLS LAST, ((((-8.88644932E8)%(t0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c68) AND (t0.c68))) AND ((+ (-787668123)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN x'' ELSE t0.c68 END)IS NOT(((t0.c2)>(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY t0.c2 DESC  NULLS LAST, '-980452921'  NULLS LAST, ((((-8.88644932E8)%(t0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c68) AND (t0.c68))) AND ((+ (-787668123)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN x'' ELSE t0.c68 END)IS NOT(((t0.c2)>(vt0.c0))))) ORDER BY t0.c2 DESC  NULLS LAST, '-980452921'  NULLS LAST, ((((-8.88644932E8)%(t0.c2))) BETWEEN (((vt0.c0) BETWEEN (t0.c68) AND (t0.c68))) AND ((+ (-787668123)))) ASC;
SELECT * FROM vt0 WHERE (((json_array_length('280081899', vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length('280081899', vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((json_array_length('280081899', vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length('280081899', vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (t0.c68) AND (t0.c2))) IS FALSE));
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)LIKE(t0.c2)))LIKE((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(t0.c2)))LIKE((- (t0.c68))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)LIKE(t0.c2)))LIKE((- (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(t0.c2)))LIKE((- (t0.c68))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)LIKE(t0.c2)))LIKE((- (t0.c68)))));
SELECT ALL * FROM vt0 WHERE ((((CASE 'hDxj?^0%'  WHEN vt0.c0 THEN vt0.c0 END))>(('0.44651988077389415'))));
SELECT SUM(count) FROM (SELECT (((((CASE 'hDxj?^0%'  WHEN vt0.c0 THEN vt0.c0 END))>(('0.44651988077389415')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE 'hDxj?^0%'  WHEN vt0.c0 THEN vt0.c0 END))>(('0.44651988077389415'))));
SELECT SUM(count) FROM (SELECT (((((CASE 'hDxj?^0%'  WHEN vt0.c0 THEN vt0.c0 END))>(('0.44651988077389415')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE 'hDxj?^0%'  WHEN vt0.c0 THEN vt0.c0 END))>(('0.44651988077389415'))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT))<(((t0.c68)<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT))<(((t0.c68)<(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT))<(((t0.c68)<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT))<(((t0.c68)<(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT))<(((t0.c68)<(t0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((x'9cba', vt0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c68, vt0.c0, 0.0010954960339224495)))) AND ((((x''))>((t0.c2)))))) ORDER BY t0.c68  NULLS LAST, (((NOT (vt0.c0)))<<((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((((x'9cba', vt0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c68, vt0.c0, 0.0010954960339224495)))) AND ((((x''))>((t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c68  NULLS LAST, (((NOT (vt0.c0)))<<((+ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((x'9cba', vt0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c68, vt0.c0, 0.0010954960339224495)))) AND ((((x''))>((t0.c2)))))) ORDER BY t0.c68  NULLS LAST, (((NOT (vt0.c0)))<<((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((((x'9cba', vt0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c68, vt0.c0, 0.0010954960339224495)))) AND ((((x''))>((t0.c2)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c68  NULLS LAST, (((NOT (vt0.c0)))<<((+ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((x'9cba', vt0.c0, t0.c68)) BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c68, vt0.c0, 0.0010954960339224495)))) AND ((((x''))>((t0.c2)))))) ORDER BY t0.c68  NULLS LAST, (((NOT (vt0.c0)))<<((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c68 COLLATE BINARY, (t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c68 COLLATE BINARY, (t0.c2 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c68 COLLATE BINARY, (t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c68 COLLATE BINARY, (t0.c2 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM(DISTINCT t0.c68 COLLATE BINARY, (t0.c2 IN ())));
SELECT * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT ((((((((t0.c68)OR(t0.c2)))AND(t0.c68)))AND(vt0.c0)))AND(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((((((t0.c68)OR(t0.c2)))AND(t0.c68)))AND(vt0.c0)))AND(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT ((((((((t0.c68)OR(t0.c2)))AND(t0.c68)))AND(vt0.c0)))AND(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((((((((t0.c68)OR(t0.c2)))AND(t0.c68)))AND(vt0.c0)))AND(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT ((((((((t0.c68)OR(t0.c2)))AND(t0.c68)))AND(vt0.c0)))AND(t0.c2))));
SELECT ALL * FROM t0, vt0 WHERE (load_extension('l')) ORDER BY CASE WHEN ((t0.c68)LIKE(t0.c68)) THEN ((((t0.c68)OR(t0.c2)))AND(vt0.c0)) ELSE (((vt0.c0))=((t0.c68))) END;
SELECT SUM(count) FROM (SELECT ((load_extension('l')) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((t0.c68)LIKE(t0.c68)) THEN ((((t0.c68)OR(t0.c2)))AND(vt0.c0)) ELSE (((vt0.c0))=((t0.c68))) END);
SELECT ALL * FROM t0, vt0 WHERE (load_extension('l')) ORDER BY CASE WHEN ((t0.c68)LIKE(t0.c68)) THEN ((((t0.c68)OR(t0.c2)))AND(vt0.c0)) ELSE (((vt0.c0))=((t0.c68))) END;
SELECT SUM(count) FROM (SELECT ((load_extension('l')) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((t0.c68)LIKE(t0.c68)) THEN ((((t0.c68)OR(t0.c2)))AND(vt0.c0)) ELSE (((vt0.c0))=((t0.c68))) END);
SELECT COUNT(*) FROM t0 WHERE (((json_type(t0.c68)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_type(t0.c68)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((json_type(t0.c68)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_type(t0.c68)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON MIN(TRIM(t0.c68, vt0.c0), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON MIN(TRIM(t0.c68, vt0.c0), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON MIN(TRIM(t0.c68, vt0.c0), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON MIN(TRIM(t0.c68, vt0.c0), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON MIN(TRIM(t0.c68, vt0.c0), ((vt0.c0) BETWEEN (t0.c68) AND (vt0.c0))) WHERE ('');
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'8bf8')) AND ((TYPEOF(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'8bf8')) AND ((TYPEOF(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'8bf8')) AND ((TYPEOF(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((x'8bf8')) AND ((TYPEOF(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((x'8bf8')) AND ((TYPEOF(DISTINCT vt0.c0)))));
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN CASE WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.030784828780107132 ELSE ((t0.c68) ISNULL) END) ORDER BY ((CAST(t0.c2 AS NUMERIC))<(((((t0.c68)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN CASE WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.030784828780107132 ELSE ((t0.c68) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS NUMERIC))<(((((t0.c68)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN CASE WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.030784828780107132 ELSE ((t0.c68) ISNULL) END) ORDER BY ((CAST(t0.c2 AS NUMERIC))<(((((t0.c68)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN CASE WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.030784828780107132 ELSE ((t0.c68) ISNULL) END) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS NUMERIC))<(((((t0.c68)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN CASE WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.030784828780107132 ELSE ((t0.c68) ISNULL) END) ORDER BY ((CAST(t0.c2 AS NUMERIC))<(((((t0.c68)OR(t0.c2)))AND(t0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c2) IS FALSE), DATETIME(t0.c68, t0.c68, t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c2) IS FALSE), DATETIME(t0.c68, t0.c68, t0.c68))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c2) IS FALSE), DATETIME(t0.c68, t0.c68, t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c2) IS FALSE), DATETIME(t0.c68, t0.c68, t0.c68))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c2) IS FALSE), DATETIME(t0.c68, t0.c68, t0.c68)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t0.c68 END)>>(CASE vt0.c0  WHEN t0.c2 THEN t0.c68 END)) WHERE ((+ (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t0.c68 END)>>(CASE vt0.c0  WHEN t0.c2 THEN t0.c68 END)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t0.c68 END)>>(CASE vt0.c0  WHEN t0.c2 THEN t0.c68 END)) WHERE ((+ (t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t0.c68 END)>>(CASE vt0.c0  WHEN t0.c2 THEN t0.c68 END)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t0.c68 END)>>(CASE vt0.c0  WHEN t0.c2 THEN t0.c68 END)) WHERE ((+ (t0.c68)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68) NOTNULL)  WHEN t0.c68 THEN COALESCE(DISTINCT x'', t0.c68, t0.c68, t0.c2) ELSE t0.c68 END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68) NOTNULL)  WHEN t0.c68 THEN COALESCE(DISTINCT x'', t0.c68, t0.c68, t0.c2) ELSE t0.c68 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68) NOTNULL)  WHEN t0.c68 THEN COALESCE(DISTINCT x'', t0.c68, t0.c68, t0.c2) ELSE t0.c68 END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c68) NOTNULL)  WHEN t0.c68 THEN COALESCE(DISTINCT x'', t0.c68, t0.c68, t0.c2) ELSE t0.c68 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68) NOTNULL)  WHEN t0.c68 THEN COALESCE(DISTINCT x'', t0.c68, t0.c68, t0.c2) ELSE t0.c68 END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)<<(vt0.c0)))GLOB((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)<<(vt0.c0)))GLOB((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)<<(vt0.c0)))GLOB((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)<<(vt0.c0)))GLOB((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c68)<<(vt0.c0)))GLOB((t0.c2 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((796465597)OR(t0.c2)) THEN t0.c68 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((796465597)OR(t0.c2)) THEN t0.c68 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((796465597)OR(t0.c2)) THEN t0.c68 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((796465597)OR(t0.c2)) THEN t0.c68 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((796465597)OR(t0.c2)) THEN t0.c68 COLLATE BINARY END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))==(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))==(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))==(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))==(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))==(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE ((((((((t0.c68))>((t0.c68))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c2)))))AND(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c68))>((t0.c68))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c2)))))AND(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((t0.c68))>((t0.c68))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c2)))))AND(((t0.c68) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c68))>((t0.c68))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c2)))))AND(((t0.c68) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((t0.c68))>((t0.c68))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c2)))))AND(((t0.c68) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NULLIF(DISTINCT t0.c68, t0.c2) IN (((t0.c68)>=(t0.c68)), CASE t0.c2  WHEN vt0.c0 THEN t0.c68 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT t0.c68, t0.c2) IN (((t0.c68)>=(t0.c68)), CASE t0.c2  WHEN vt0.c0 THEN t0.c68 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NULLIF(DISTINCT t0.c68, t0.c2) IN (((t0.c68)>=(t0.c68)), CASE t0.c2  WHEN vt0.c0 THEN t0.c68 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT t0.c68, t0.c2) IN (((t0.c68)>=(t0.c68)), CASE t0.c2  WHEN vt0.c0 THEN t0.c68 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NULLIF(DISTINCT t0.c68, t0.c2) IN (((t0.c68)>=(t0.c68)), CASE t0.c2  WHEN vt0.c0 THEN t0.c68 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, t0 WHERE ((~ ((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ ((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ ((~ (t0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68)>(t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c68)>(t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68)>(t0.c68)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c68)>(t0.c68)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c68)>(t0.c68)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)||(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)||(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)||(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)||(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)||(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM t0 WHERE ((((((x'')OR(t0.c2)))OR(t0.c68)) IN (CAST(t0.c68 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'')OR(t0.c2)))OR(t0.c68)) IN (CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((x'')OR(t0.c2)))OR(t0.c68)) IN (CAST(t0.c68 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'')OR(t0.c2)))OR(t0.c68)) IN (CAST(t0.c68 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((x'')OR(t0.c2)))OR(t0.c68)) IN (CAST(t0.c68 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>(t0.c2))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((('	L욥3wz')>=(t0.c68))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)>(t0.c2))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((('	L욥3wz')>=(t0.c68)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>(t0.c2))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((('	L욥3wz')>=(t0.c68))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)>(t0.c2))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((('	L욥3wz')>=(t0.c68)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>(t0.c2))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((('	L욥3wz')>=(t0.c68))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL))))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL))))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL))))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) ORDER BY LIKELIHOOD((vt0.c0 IN ()), 0.8680715511239065);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD((vt0.c0 IN ()), 0.8680715511239065));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) ORDER BY LIKELIHOOD((vt0.c0 IN ()), 0.8680715511239065);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD((vt0.c0 IN ()), 0.8680715511239065));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (((((vt0.c0)OR(t0.c2)))OR(vt0.c0))))) ORDER BY LIKELIHOOD((vt0.c0 IN ()), 0.8680715511239065);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END)OR((- (t0.c68)))))OR((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, '509170852', t0.c2)) AND ((vt0.c0, t0.c2, t0.c2))))))AND((+ (t0.c68)))))AND((NOT (t0.c68)))) WHERE (NULL) ORDER BY ((((t0.c2)<(NULL)))AND((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c68))))), LOWER(DISTINCT t0.c68) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END)OR((- (t0.c68)))))OR((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, '509170852', t0.c2)) AND ((vt0.c0, t0.c2, t0.c2))))))AND((+ (t0.c68)))))AND((NOT (t0.c68)))) ORDER BY ((((t0.c2)<(NULL)))AND((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c68))))), LOWER(DISTINCT t0.c68) ASC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END)OR((- (t0.c68)))))OR((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, '509170852', t0.c2)) AND ((vt0.c0, t0.c2, t0.c2))))))AND((+ (t0.c68)))))AND((NOT (t0.c68)))) WHERE (NULL) ORDER BY ((((t0.c2)<(NULL)))AND((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c68))))), LOWER(DISTINCT t0.c68) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END)OR((- (t0.c68)))))OR((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, '509170852', t0.c2)) AND ((vt0.c0, t0.c2, t0.c2))))))AND((+ (t0.c68)))))AND((NOT (t0.c68)))) ORDER BY ((((t0.c2)<(NULL)))AND((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c68))))), LOWER(DISTINCT t0.c68) ASC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END)OR((- (t0.c68)))))OR((((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c2, '509170852', t0.c2)) AND ((vt0.c0, t0.c2, t0.c2))))))AND((+ (t0.c68)))))AND((NOT (t0.c68)))) WHERE (NULL) ORDER BY ((((t0.c2)<(NULL)))AND((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c68))))), LOWER(DISTINCT t0.c68) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ('-1762772899') ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1762772899') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('-1762772899') ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1762772899') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('-1762772899') ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((LIKE(vt0.c0, x'6860296b')) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt0.c0, x'6860296b')) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKE(vt0.c0, x'6860296b')) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt0.c0, x'6860296b')) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKE(vt0.c0, x'6860296b')) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(t0.c2 AS BLOB)) WHERE (((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(t0.c2 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(t0.c2 AS BLOB)) WHERE (((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(t0.c2 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(t0.c2 AS BLOB)) WHERE (((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2))) NOT NULL));
SELECT ALL * FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((t0.c68)+(vt0.c0)) IN ()) WHERE (((((((((((((-1.605164963E9)OR(((vt0.c0)<(t0.c68)))))AND(((t0.c68)IS NOT(t0.c68)))))OR((+ (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR((+ (t0.c2)))))AND((t0.c2 IN ())))) ORDER BY CASE WHEN ((((t0.c68)OR(t0.c2)))OR(t0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (~ (t0.c68)) THEN ((t0.c2)OR(vt0.c0)) WHEN vt0.c0 THEN ((t0.c2)*(t0.c2)) END DESC  NULLS FIRST, ((json_array(t0.c2, t0.c68)) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c68)AND(vt0.c0)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((-1.605164963E9)OR(((vt0.c0)<(t0.c68)))))AND(((t0.c68)IS NOT(t0.c68)))))OR((+ (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR((+ (t0.c2)))))AND((t0.c2 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c68)+(vt0.c0)) IN ()) ORDER BY CASE WHEN ((((t0.c68)OR(t0.c2)))OR(t0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (~ (t0.c68)) THEN ((t0.c2)OR(vt0.c0)) WHEN vt0.c0 THEN ((t0.c2)*(t0.c2)) END DESC  NULLS FIRST, ((json_array(t0.c2, t0.c68)) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c68)AND(vt0.c0)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((t0.c68)+(vt0.c0)) IN ()) WHERE (((((((((((((-1.605164963E9)OR(((vt0.c0)<(t0.c68)))))AND(((t0.c68)IS NOT(t0.c68)))))OR((+ (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR((+ (t0.c2)))))AND((t0.c2 IN ())))) ORDER BY CASE WHEN ((((t0.c68)OR(t0.c2)))OR(t0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (~ (t0.c68)) THEN ((t0.c2)OR(vt0.c0)) WHEN vt0.c0 THEN ((t0.c2)*(t0.c2)) END DESC  NULLS FIRST, ((json_array(t0.c2, t0.c68)) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c68)AND(vt0.c0)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((-1.605164963E9)OR(((vt0.c0)<(t0.c68)))))AND(((t0.c68)IS NOT(t0.c68)))))OR((+ (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR((+ (t0.c2)))))AND((t0.c2 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c68)+(vt0.c0)) IN ()) ORDER BY CASE WHEN ((((t0.c68)OR(t0.c2)))OR(t0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (~ (t0.c68)) THEN ((t0.c2)OR(vt0.c0)) WHEN vt0.c0 THEN ((t0.c2)*(t0.c2)) END DESC  NULLS FIRST, ((json_array(t0.c2, t0.c68)) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c68)AND(vt0.c0)))OR(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((t0.c68)+(vt0.c0)) IN ()) WHERE (((((((((((((-1.605164963E9)OR(((vt0.c0)<(t0.c68)))))AND(((t0.c68)IS NOT(t0.c68)))))OR((+ (t0.c2)))))OR(CASE WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END)))OR((+ (t0.c2)))))AND((t0.c2 IN ())))) ORDER BY CASE WHEN ((((t0.c68)OR(t0.c2)))OR(t0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (~ (t0.c68)) THEN ((t0.c2)OR(vt0.c0)) WHEN vt0.c0 THEN ((t0.c2)*(t0.c2)) END DESC  NULLS FIRST, ((json_array(t0.c2, t0.c68)) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c68)AND(vt0.c0)))OR(t0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE '0.47293973595998773'  WHEN 0xffffffffb7d66b8a THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.41717553617595804 WHEN t0.c68 COLLATE BINARY THEN LOWER(t0.c2) WHEN ((t0.c2)||(t0.c68)) THEN t0.c68 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE '0.47293973595998773'  WHEN 0Xffffffffb7d66b8a THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.41717553617595804 WHEN t0.c68 COLLATE BINARY THEN LOWER(t0.c2) WHEN ((t0.c2)||(t0.c68)) THEN t0.c68 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE '0.47293973595998773'  WHEN 0xffffffffb7d66b8a THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.41717553617595804 WHEN t0.c68 COLLATE BINARY THEN LOWER(t0.c2) WHEN ((t0.c2)||(t0.c68)) THEN t0.c68 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE '0.47293973595998773'  WHEN 0Xffffffffb7d66b8a THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.41717553617595804 WHEN t0.c68 COLLATE BINARY THEN LOWER(t0.c2) WHEN ((t0.c2)||(t0.c68)) THEN t0.c68 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE '0.47293973595998773'  WHEN 0xffffffffb7d66b8a THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 ELSE t0.c2 END THEN 0.41717553617595804 WHEN t0.c68 COLLATE BINARY THEN LOWER(t0.c2) WHEN ((t0.c2)||(t0.c68)) THEN t0.c68 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((NULL)GLOB(t0.c2)))OR('<7J 6T')))AND(x''))) ORDER BY ((((t0.c68)AND(t0.c2)))IS(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)GLOB(t0.c2)))OR('<7J 6T')))AND(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c68)AND(t0.c2)))IS(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((NULL)GLOB(t0.c2)))OR('<7J 6T')))AND(x''))) ORDER BY ((((t0.c68)AND(t0.c2)))IS(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)GLOB(t0.c2)))OR('<7J 6T')))AND(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c68)AND(t0.c2)))IS(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((NULL)GLOB(t0.c2)))OR('<7J 6T')))AND(x''))) ORDER BY ((((t0.c68)AND(t0.c2)))IS(CASE WHEN vt0.c0 THEN t0.c68 ELSE t0.c68 END));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0 WHERE ((('vSD')*(t0.c2))) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c68)))) AND ((t0.c2 IN (t0.c68, t0.c2, t0.c68)))) DESC, (+ ((((t0.c2))>((t0.c68)))));
SELECT SUM(count) FROM (SELECT (((('vSD')*(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c68)))) AND ((t0.c2 IN (t0.c68, t0.c2, t0.c68)))) DESC, (+ ((((t0.c2))>((t0.c68))))));
SELECT COUNT(*) FROM t0 WHERE ((('vSD')*(t0.c2))) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c68)))) AND ((t0.c2 IN (t0.c68, t0.c2, t0.c68)))) DESC, (+ ((((t0.c2))>((t0.c68)))));
SELECT SUM(count) FROM (SELECT (((('vSD')*(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c68)))) AND ((t0.c2 IN (t0.c68, t0.c2, t0.c68)))) DESC, (+ ((((t0.c2))>((t0.c68))))));
SELECT COUNT(*) FROM t0 WHERE ((('vSD')*(t0.c2))) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c68)))) AND ((t0.c2 IN (t0.c68, t0.c2, t0.c68)))) DESC, (+ ((((t0.c2))>((t0.c68)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)+(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((CAST(x'' AS INTEGER), -514586671, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((CAST(x'' AS INTEGER), -514586671, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)+(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((CAST(x'' AS INTEGER), -514586671, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((CAST(x'' AS INTEGER), -514586671, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)+(vt0.c0)) IN ())) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), vt0.c0)) AND ((CAST(x'' AS INTEGER), -514586671, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (COALESCE(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), NULLIF(DISTINCT t0.c2, t0.c2)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), NULLIF(DISTINCT t0.c2, t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (COALESCE(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), NULLIF(DISTINCT t0.c2, t0.c2)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), NULLIF(DISTINCT t0.c2, t0.c2))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (COALESCE(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)), NULLIF(DISTINCT t0.c2, t0.c2)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c2)==(vt0.c0)))OR(((x'')GLOB(t0.c2)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)==(vt0.c0)))OR(((x'')GLOB(t0.c2)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c2)==(vt0.c0)))OR(((x'')GLOB(t0.c2)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)==(vt0.c0)))OR(((x'')GLOB(t0.c2)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c2)==(vt0.c0)))OR(((x'')GLOB(t0.c2)))))OR(CASE t0.c68  WHEN t0.c68 THEN t0.c68 END)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (((vt0.c0)GLOB(t0.c2))) AND (CAST(t0.c2 AS REAL)))) ORDER BY (UNLIKELY(DISTINCT t0.c2) IN ()) DESC, ((((t0.c68 COLLATE NOCASE)AND((t0.c68 IN (t0.c68)))))AND(('-888644932' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN (((vt0.c0)GLOB(t0.c2))) AND (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (UNLIKELY(DISTINCT t0.c2) IN ()) DESC, ((((t0.c68 COLLATE NOCASE)AND((t0.c68 IN (t0.c68)))))AND(('-888644932' IN ()))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (((vt0.c0)GLOB(t0.c2))) AND (CAST(t0.c2 AS REAL)))) ORDER BY (UNLIKELY(DISTINCT t0.c2) IN ()) DESC, ((((t0.c68 COLLATE NOCASE)AND((t0.c68 IN (t0.c68)))))AND(('-888644932' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN (((vt0.c0)GLOB(t0.c2))) AND (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (UNLIKELY(DISTINCT t0.c2) IN ()) DESC, ((((t0.c68 COLLATE NOCASE)AND((t0.c68 IN (t0.c68)))))AND(('-888644932' IN ()))) DESC);
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c68 END AS BLOB)) ORDER BY 0.18285656183224208 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c68 END AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY 0.18285656183224208 ASC);
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c68 END AS BLOB)) ORDER BY 0.18285656183224208 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c68 END AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY 0.18285656183224208 ASC);
SELECT * FROM t0 WHERE (CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c68 END AS BLOB)) ORDER BY 0.18285656183224208 ASC;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN (('k')) AND ((CAST(t0.c2 AS REAL))))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))=((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(CASE t0.c68  WHEN t0.c68 THEN '䖴' END AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN (('k')) AND ((CAST(t0.c2 AS REAL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))==((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(CASE t0.c68  WHEN t0.c68 THEN '䖴' END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN (('k')) AND ((CAST(t0.c2 AS REAL))))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))=((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(CASE t0.c68  WHEN t0.c68 THEN '䖴' END AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN (('k')) AND ((CAST(t0.c2 AS REAL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))==((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(CASE t0.c68  WHEN t0.c68 THEN '䖴' END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN (('k')) AND ((CAST(t0.c2 AS REAL))))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))=((vt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, (NOT (vt0.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(CASE t0.c68  WHEN t0.c68 THEN '䖴' END AS INTEGER);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>=(t0.c2))) NOT BETWEEN (x'') AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c2))) NOT BETWEEN (x'') AND (NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>=(t0.c2))) NOT BETWEEN (x'') AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c2))) NOT BETWEEN (x'') AND (NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>=(t0.c2))) NOT BETWEEN (x'') AND (NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c68);
SELECT * FROM t0, vt0 WHERE (((t0.c2)||(t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2)||(t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c2)||(t0.c68)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2)||(t0.c68)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c2)||(t0.c68)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN 0x6df437a9 END) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN 0x6df437a9 END) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN 0x6df437a9 END) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN 0x6df437a9 END) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN 0x6df437a9 END) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM t0, vt0 WHERE (CASE ((((vt0.c0)AND(t0.c2)))AND(t0.c68))  WHEN (+ (vt0.c0)) THEN ((t0.c2)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(t0.c2)))AND(t0.c68))  WHEN (+ (vt0.c0)) THEN ((t0.c2)>(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((((vt0.c0)AND(t0.c2)))AND(t0.c68))  WHEN (+ (vt0.c0)) THEN ((t0.c2)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)AND(t0.c2)))AND(t0.c68))  WHEN (+ (vt0.c0)) THEN ((t0.c2)>(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE ((((vt0.c0)AND(t0.c2)))AND(t0.c68))  WHEN (+ (vt0.c0)) THEN ((t0.c2)>(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 'D_3*cy욥0', '747903986')))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 'D_3*cy욥0', '747903986')))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 'D_3*cy욥0', '747903986')))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 'D_3*cy욥0', '747903986')))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 'D_3*cy욥0', '747903986')))) NOTNULL));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((CAST(vt0.c0 AS BLOB))!=(''))  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))<>(''))  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((CAST(vt0.c0 AS BLOB))!=(''))  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))<>(''))  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0) IS TRUE)))) ORDER BY ((CAST(vt0.c0 AS BLOB))!=(''))  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((t0.c2 IN (t0.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (t0.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((t0.c2 IN (t0.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (t0.c2)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((t0.c2 IN (t0.c2)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c68) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c68) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c68) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(((((((((0.33612380342967985)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(((((((((0.33612380342967985)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(((((((((0.33612380342967985)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(((((((((0.33612380342967985)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))IS NOT(((((((((0.33612380342967985)OR(t0.c68)))AND(t0.c68)))OR(t0.c68)))AND(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN '-1708591898' END) AND (t0.c68))) ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c68 ELSE '-2045838207' END) IS TRUE) ASC  NULLS FIRST, t0.c2 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN '-1708591898' END) AND (t0.c68))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c68 ELSE '-2045838207' END) IS TRUE) ASC  NULLS FIRST, t0.c2 COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN '-1708591898' END) AND (t0.c68))) ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c68 ELSE '-2045838207' END) IS TRUE) ASC  NULLS FIRST, t0.c2 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN '-1708591898' END) AND (t0.c68))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c68 ELSE '-2045838207' END) IS TRUE) ASC  NULLS FIRST, t0.c2 COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN '-1708591898' END) AND (t0.c68))) ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c68 ELSE '-2045838207' END) IS TRUE) ASC  NULLS FIRST, t0.c2 COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE(TIME(vt0.c0, '-1617049947', vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(TIME(vt0.c0, '-1617049947', vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE(TIME(vt0.c0, '-1617049947', vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(TIME(vt0.c0, '-1617049947', vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)LIKE(TIME(vt0.c0, '-1617049947', vt0.c0))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE NOCASE WHERE ((NOT (-2019126227))) ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (-2019126227))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE NOCASE ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE NOCASE WHERE ((NOT (-2019126227))) ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (-2019126227))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE NOCASE ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c2))) COLLATE NOCASE WHERE ((NOT (-2019126227))) ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 WHEN x'b7667418' THEN t0.c2 ELSE t0.c2 END)IS NOT('0.04364289334988325' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 WHEN x'b7667418' THEN t0.c2 ELSE t0.c2 END)IS NOT('0.04364289334988325' COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 WHEN x'b7667418' THEN t0.c2 ELSE t0.c2 END)IS NOT('0.04364289334988325' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 WHEN x'b7667418' THEN t0.c2 ELSE t0.c2 END)IS NOT('0.04364289334988325' COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((CASE vt0.c0  WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 WHEN x'b7667418' THEN t0.c2 ELSE t0.c2 END)IS NOT('0.04364289334988325' COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((((((0.021034429005555966)OR('-1845812991')))AND(t0.c2))) NOT BETWEEN (t0.c2) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c68)))))) ORDER BY ((((t0.c68, x'', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.021034429005555966)OR('-1845812991')))AND(t0.c2))) NOT BETWEEN (t0.c2) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68, x'', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((0.021034429005555966)OR('-1845812991')))AND(t0.c2))) NOT BETWEEN (t0.c2) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c68)))))) ORDER BY ((((t0.c68, x'', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.021034429005555966)OR('-1845812991')))AND(t0.c2))) NOT BETWEEN (t0.c2) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c68)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68, x'', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((0.021034429005555966)OR('-1845812991')))AND(t0.c2))) NOT BETWEEN (t0.c2) AND ((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c68)))))) ORDER BY ((((t0.c68, x'', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ('341554546');
SELECT SUM(count) FROM (SELECT (('341554546') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('341554546');
SELECT SUM(count) FROM (SELECT (('341554546') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('341554546');
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS REAL))==(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE x'a145' END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL))=(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE x'a145' END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS REAL))==(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE x'a145' END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL))=(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE x'a145' END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS REAL))==(CASE t0.c2  WHEN t0.c2 THEN t0.c68 ELSE x'a145' END)));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT COUNT(*) FROM t0 WHERE (HEX(LIKELY(t0.c68))) ORDER BY ((0.507738853609996) IS TRUE), LIKELY((t0.c2 IN (t0.c68))), CASE WHEN '' THEN ((t0.c68)>>(t0.c2)) WHEN ((t0.c2)LIKE(t0.c2)) THEN x'' WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c68)) THEN ((t0.c68)>(t0.c68)) ELSE ((t0.c2)<<(t0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(LIKELY(t0.c68))) IS TRUE)  as count FROM t0 ORDER BY ((0.507738853609996) IS TRUE), LIKELY((t0.c2 IN (t0.c68))), CASE WHEN '' THEN ((t0.c68)>>(t0.c2)) WHEN ((t0.c2)LIKE(t0.c2)) THEN x'' WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c68)) THEN ((t0.c68)>(t0.c68)) ELSE ((t0.c2)<<(t0.c2)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (HEX(LIKELY(t0.c68))) ORDER BY ((0.507738853609996) IS TRUE), LIKELY((t0.c2 IN (t0.c68))), CASE WHEN '' THEN ((t0.c68)>>(t0.c2)) WHEN ((t0.c2)LIKE(t0.c2)) THEN x'' WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c68)) THEN ((t0.c68)>(t0.c68)) ELSE ((t0.c2)<<(t0.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(LIKELY(t0.c68))) IS TRUE)  as count FROM t0 ORDER BY ((0.507738853609996) IS TRUE), LIKELY((t0.c2 IN (t0.c68))), CASE WHEN '' THEN ((t0.c68)>>(t0.c2)) WHEN ((t0.c2)LIKE(t0.c2)) THEN x'' WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c68)) THEN ((t0.c68)>(t0.c68)) ELSE ((t0.c2)<<(t0.c2)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (HEX(LIKELY(t0.c68))) ORDER BY ((0.507738853609996) IS TRUE), LIKELY((t0.c2 IN (t0.c68))), CASE WHEN '' THEN ((t0.c68)>>(t0.c2)) WHEN ((t0.c2)LIKE(t0.c2)) THEN x'' WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c68)) THEN ((t0.c68)>(t0.c68)) ELSE ((t0.c2)<<(t0.c2)) END ASC  NULLS LAST;
SELECT * FROM t0 WHERE (json_extract(((t0.c68)/('1866096190')), CASE WHEN x'' THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)) ORDER BY ((((t0.c2)GLOB(t0.c68)))<<(json_extract(t0.c2, t0.c68))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_extract(((t0.c68)/('1866096190')), CASE WHEN x'' THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)GLOB(t0.c68)))<<(json_extract(t0.c2, t0.c68))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (json_extract(((t0.c68)/('1866096190')), CASE WHEN x'' THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)) ORDER BY ((((t0.c2)GLOB(t0.c68)))<<(json_extract(t0.c2, t0.c68))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_extract(((t0.c68)/('1866096190')), CASE WHEN x'' THEN t0.c68 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)GLOB(t0.c68)))<<(json_extract(t0.c2, t0.c68))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c68)AND(t0.c2)))OR(t0.c2)))OR(((x'')<(t0.c2)))))OR(TRIM(DISTINCT t0.c2)))) ORDER BY (((t0.c68, '䳨Dp', t0.c68)) BETWEEN ((-1717368059, (t0.c68 IN ()), t0.c2 COLLATE NOCASE)) AND (('1734574157' COLLATE RTRIM, (- (t0.c68)), ((t0.c2)LIKE(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c68)AND(t0.c2)))OR(t0.c2)))OR(((x'')<(t0.c2)))))OR(TRIM(DISTINCT t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68, '䳨Dp', t0.c68)) BETWEEN ((-1717368059, (t0.c68 IN ()), t0.c2 COLLATE NOCASE)) AND (('1734574157' COLLATE RTRIM, (- (t0.c68)), ((t0.c2)LIKE(t0.c2))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c68)AND(t0.c2)))OR(t0.c2)))OR(((x'')<(t0.c2)))))OR(TRIM(DISTINCT t0.c2)))) ORDER BY (((t0.c68, '䳨Dp', t0.c68)) BETWEEN ((-1717368059, (t0.c68 IN ()), t0.c2 COLLATE NOCASE)) AND (('1734574157' COLLATE RTRIM, (- (t0.c68)), ((t0.c2)LIKE(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c68)AND(t0.c2)))OR(t0.c2)))OR(((x'')<(t0.c2)))))OR(TRIM(DISTINCT t0.c2)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68, '䳨Dp', t0.c68)) BETWEEN ((-1717368059, (t0.c68 IN ()), t0.c2 COLLATE NOCASE)) AND (('1734574157' COLLATE RTRIM, (- (t0.c68)), ((t0.c2)LIKE(t0.c2))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c68)AND(t0.c2)))OR(t0.c2)))OR(((x'')<(t0.c2)))))OR(TRIM(DISTINCT t0.c2)))) ORDER BY (((t0.c68, '䳨Dp', t0.c68)) BETWEEN ((-1717368059, (t0.c68 IN ()), t0.c2 COLLATE NOCASE)) AND (('1734574157' COLLATE RTRIM, (- (t0.c68)), ((t0.c2)LIKE(t0.c2)))));
SELECT * FROM t0 INDEXED BY i2 WHERE ((((~ (t0.c2)))==(t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))==(t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM t0 INDEXED BY i2);
SELECT * FROM t0 INDEXED BY i2 WHERE ((((~ (t0.c2)))==(t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))==(t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM t0 INDEXED BY i2);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.24049323317810223 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.24049323317810223 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.24049323317810223 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.24049323317810223 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.24049323317810223 ELSE vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) ISNULL));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0X363e1610 WHEN t0.c68 THEN t0.c68 END) NOT NULL)) ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c2)>=(t0.c68)))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0x363e1610 WHEN t0.c68 THEN t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c2)>=(t0.c68)))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0X363e1610 WHEN t0.c68 THEN t0.c68 END) NOT NULL)) ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c2)>=(t0.c68)))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0x363e1610 WHEN t0.c68 THEN t0.c68 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c2)>=(t0.c68)))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN 0X363e1610 WHEN t0.c68 THEN t0.c68 END) NOT NULL)) ORDER BY (((t0.c68)) NOT BETWEEN ((((t0.c2)>=(t0.c68)))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END)))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c68);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR(((((t0.c68)OR(t0.c2)))AND(t0.c2)))))AND((+ (t0.c68)))))AND(((t0.c68)<(t0.c68)))))OR(CAST(t0.c2 AS TEXT)))) ORDER BY CAST(((t0.c2)AND(t0.c68)) AS INTEGER)  NULLS LAST, ((((t0.c2, t0.c68, '')) BETWEEN ((t0.c68, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN (((t0.c2) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2 COLLATE NOCASE)OR(((((t0.c68)OR(t0.c2)))AND(t0.c2)))))AND((+ (t0.c68)))))AND(((t0.c68)<(t0.c68)))))OR(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2)AND(t0.c68)) AS INTEGER)  NULLS LAST, ((((t0.c2, t0.c68, '')) BETWEEN ((t0.c68, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN (((t0.c2) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR(((((t0.c68)OR(t0.c2)))AND(t0.c2)))))AND((+ (t0.c68)))))AND(((t0.c68)<(t0.c68)))))OR(CAST(t0.c2 AS TEXT)))) ORDER BY CAST(((t0.c2)AND(t0.c68)) AS INTEGER)  NULLS LAST, ((((t0.c2, t0.c68, '')) BETWEEN ((t0.c68, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN (((t0.c2) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2 COLLATE NOCASE)OR(((((t0.c68)OR(t0.c2)))AND(t0.c2)))))AND((+ (t0.c68)))))AND(((t0.c68)<(t0.c68)))))OR(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2)AND(t0.c68)) AS INTEGER)  NULLS LAST, ((((t0.c2, t0.c68, '')) BETWEEN ((t0.c68, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN (((t0.c2) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c2 COLLATE NOCASE)OR(((((t0.c68)OR(t0.c2)))AND(t0.c2)))))AND((+ (t0.c68)))))AND(((t0.c68)<(t0.c68)))))OR(CAST(t0.c2 AS TEXT)))) ORDER BY CAST(((t0.c2)AND(t0.c68)) AS INTEGER)  NULLS LAST, ((((t0.c2, t0.c68, '')) BETWEEN ((t0.c68, t0.c2, t0.c2)) AND ((t0.c68, t0.c2, t0.c2))) IN (((t0.c2) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c2 COLLATE RTRIM IN ())) ORDER BY ((((-8.88644932E8 IN ()), ((((vt0.c0)AND(t0.c2)))OR(t0.c68)), vt0.c0))>=(((((0.5652633707595954, t0.c68, vt0.c0)) BETWEEN ((t0.c2, t0.c68, t0.c68)) AND ((t0.c68, t0.c2, t0.c2))), CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END, (~ (t0.c2))))), (((vt0.c0 IN ()))<((((t0.c2, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, vt0.c0)) AND ((vt0.c0, x'', t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((-8.88644932E8 IN ()), ((((vt0.c0)AND(t0.c2)))OR(t0.c68)), vt0.c0))>=(((((0.5652633707595954, t0.c68, vt0.c0)) BETWEEN ((t0.c2, t0.c68, t0.c68)) AND ((t0.c68, t0.c2, t0.c2))), CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END, (~ (t0.c2))))), (((vt0.c0 IN ()))<((((t0.c2, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, vt0.c0)) AND ((vt0.c0, x'', t0.c2))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c2 COLLATE RTRIM IN ())) ORDER BY ((((-8.88644932E8 IN ()), ((((vt0.c0)AND(t0.c2)))OR(t0.c68)), vt0.c0))>=(((((0.5652633707595954, t0.c68, vt0.c0)) BETWEEN ((t0.c2, t0.c68, t0.c68)) AND ((t0.c68, t0.c2, t0.c2))), CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END, (~ (t0.c2))))), (((vt0.c0 IN ()))<((((t0.c2, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, vt0.c0)) AND ((vt0.c0, x'', t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((-8.88644932E8 IN ()), ((((vt0.c0)AND(t0.c2)))OR(t0.c68)), vt0.c0))>=(((((0.5652633707595954, t0.c68, vt0.c0)) BETWEEN ((t0.c2, t0.c68, t0.c68)) AND ((t0.c68, t0.c2, t0.c2))), CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END, (~ (t0.c2))))), (((vt0.c0 IN ()))<((((t0.c2, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, vt0.c0)) AND ((vt0.c0, x'', t0.c2))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c2 COLLATE RTRIM IN ())) ORDER BY ((((-8.88644932E8 IN ()), ((((vt0.c0)AND(t0.c2)))OR(t0.c68)), vt0.c0))>=(((((0.5652633707595954, t0.c68, vt0.c0)) BETWEEN ((t0.c2, t0.c68, t0.c68)) AND ((t0.c68, t0.c2, t0.c2))), CASE WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END, (~ (t0.c2))))), (((vt0.c0 IN ()))<((((t0.c2, t0.c68, t0.c68)) NOT BETWEEN ((t0.c68, t0.c68, vt0.c0)) AND ((vt0.c0, x'', t0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE (HEX(t0.c2)) ORDER BY LOWER(DISTINCT CASE WHEN '.Q갊Q' THEN t0.c2 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c2)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY LOWER(DISTINCT CASE WHEN '.Q갊Q' THEN t0.c2 END) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (HEX(t0.c2)) ORDER BY LOWER(DISTINCT CASE WHEN '.Q갊Q' THEN t0.c2 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c2)) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY LOWER(DISTINCT CASE WHEN '.Q갊Q' THEN t0.c2 END) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (HEX(t0.c2)) ORDER BY LOWER(DISTINCT CASE WHEN '.Q갊Q' THEN t0.c2 END) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY (~ (vt0.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL)) ORDER BY ((((((((((((vt0.c0)AND((+ (vt0.c0)))))OR((0.6555626581988913 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(COALESCE(DISTINCT 0.7776238856204516, vt0.c0, 0.553888883161703, vt0.c0))))OR(CASE 'B'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND((+ (vt0.c0)))))OR((0.6555626581988913 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(COALESCE(DISTINCT 0.7776238856204516, vt0.c0, 0.553888883161703, vt0.c0))))OR(CASE 'B'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL)) ORDER BY ((((((((((((vt0.c0)AND((+ (vt0.c0)))))OR((0.6555626581988913 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(COALESCE(DISTINCT 0.7776238856204516, vt0.c0, 0.553888883161703, vt0.c0))))OR(CASE 'B'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND((+ (vt0.c0)))))OR((0.6555626581988913 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(COALESCE(DISTINCT 0.7776238856204516, vt0.c0, 0.553888883161703, vt0.c0))))OR(CASE 'B'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL)) ORDER BY ((((((((((((vt0.c0)AND((+ (vt0.c0)))))OR((0.6555626581988913 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(COALESCE(DISTINCT 0.7776238856204516, vt0.c0, 0.553888883161703, vt0.c0))))OR(CASE 'B'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c2)||(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c2)||(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c2)||(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c2)||(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) BETWEEN (vt0.c0) AND (t0.c2))) BETWEEN (((t0.c2)||(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))IS NOT((NOT (vt0.c0))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))IS NOT((NOT (vt0.c0))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))IS NOT((NOT (vt0.c0))))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE NOCASE));
SELECT * FROM t0, vt0 WHERE (((x'02041075') ISNULL)) ORDER BY TIME(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 ELSE NULL END, NULL, CASE NULL  WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'02041075') ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY TIME(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 ELSE NULL END, NULL, CASE NULL  WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END) ASC);
SELECT * FROM t0, vt0 WHERE (((x'02041075') ISNULL)) ORDER BY TIME(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 ELSE NULL END, NULL, CASE NULL  WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'02041075') ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY TIME(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 ELSE NULL END, NULL, CASE NULL  WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END) ASC);
SELECT * FROM t0, vt0 WHERE (((x'02041075') ISNULL)) ORDER BY TIME(CASE t0.c2  WHEN vt0.c0 THEN t0.c2 ELSE NULL END, NULL, CASE NULL  WHEN vt0.c0 THEN t0.c68 ELSE vt0.c0 END) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((x'') NOTNULL))>(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOTNULL))>(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'') NOTNULL))>(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOTNULL))>(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'') NOTNULL))>(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (-1.617049947E9) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<>(((+ (0x6df437a9)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN (-1.617049947E9) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=(((+ (0X6df437a9)))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (-1.617049947E9) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<>(((+ (0x6df437a9)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN (-1.617049947E9) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=(((+ (0X6df437a9)))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (-1.617049947E9) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<>(((+ (0x6df437a9)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE NULL  WHEN t0.c68 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)) ORDER BY CAST(((t0.c68)IS(t0.c2)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN t0.c68 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c68)IS(t0.c2)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE NULL  WHEN t0.c68 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)) ORDER BY CAST(((t0.c68)IS(t0.c2)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN t0.c68 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c68)IS(t0.c2)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE NULL  WHEN t0.c68 THEN vt0.c0 ELSE t0.c2 END) NOT NULL)) ORDER BY CAST(((t0.c68)IS(t0.c2)) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((('-1708591898')||(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((('-1708591898')||(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('-1708591898')||(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((('-1708591898')||(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('-1708591898')||(((vt0.c0) NOT NULL))));
SELECT * FROM t0, vt0 WHERE ((NOT (t0.c2)) COLLATE RTRIM) ORDER BY ((MIN(t0.c2, t0.c2, t0.c2, vt0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT (((NOT (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((MIN(t0.c2, t0.c2, t0.c2, vt0.c0)) ISNULL));
SELECT * FROM t0, vt0 WHERE ((NOT (t0.c2)) COLLATE RTRIM) ORDER BY ((MIN(t0.c2, t0.c2, t0.c2, vt0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT (((NOT (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY ((MIN(t0.c2, t0.c2, t0.c2, vt0.c0)) ISNULL));
SELECT * FROM t0, vt0 WHERE ((NOT (t0.c2)) COLLATE RTRIM) ORDER BY ((MIN(t0.c2, t0.c2, t0.c2, vt0.c0)) ISNULL);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) THEN (NOT (t0.c2)) END) ORDER BY ((CASE WHEN vt0.c0 THEN 7.35563276E8 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) THEN (NOT (t0.c2)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN 7.35563276E8 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) THEN (NOT (t0.c2)) END) ORDER BY ((CASE WHEN vt0.c0 THEN 7.35563276E8 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) THEN (NOT (t0.c2)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN 7.35563276E8 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN ((t0.c68) NOT BETWEEN (t0.c68) AND (vt0.c0)) THEN (NOT (t0.c2)) END) ORDER BY ((CASE WHEN vt0.c0 THEN 7.35563276E8 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c68)*(t0.c68))  WHEN json_valid(t0.c2) THEN NULL WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)>(t0.c68)) END) ORDER BY ((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) IN (NULL)), TYPEOF(NULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68)*(t0.c68))  WHEN json_valid(t0.c2) THEN NULL WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)>(t0.c68)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) IN (NULL)), TYPEOF(NULL) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c68)*(t0.c68))  WHEN json_valid(t0.c2) THEN NULL WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)>(t0.c68)) END) ORDER BY ((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) IN (NULL)), TYPEOF(NULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68)*(t0.c68))  WHEN json_valid(t0.c2) THEN NULL WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)>(t0.c68)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) IN (NULL)), TYPEOF(NULL) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((t0.c68)*(t0.c68))  WHEN json_valid(t0.c2) THEN NULL WHEN CASE WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)>(t0.c68)) END) ORDER BY ((((t0.c68)) BETWEEN ((t0.c68)) AND ((vt0.c0))) IN (NULL)), TYPEOF(NULL) COLLATE BINARY DESC;
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (CASE CHAR(t0.c2)  WHEN t0.c68 THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN CASE 1342226093  WHEN vt0.c0 THEN t0.c2 END THEN CAST(t0.c2 AS REAL) WHEN ((t0.c68) IS FALSE) THEN '0.36233801550646194' ELSE ((vt0.c0)<<(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CHAR(t0.c2)  WHEN t0.c68 THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN CASE 1342226093  WHEN vt0.c0 THEN t0.c2 END THEN CAST(t0.c2 AS REAL) WHEN ((t0.c68) IS FALSE) THEN '0.36233801550646194' ELSE ((vt0.c0)<<(t0.c68)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (CASE CHAR(t0.c2)  WHEN t0.c68 THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN CASE 1342226093  WHEN vt0.c0 THEN t0.c2 END THEN CAST(t0.c2 AS REAL) WHEN ((t0.c68) IS FALSE) THEN '0.36233801550646194' ELSE ((vt0.c0)<<(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CHAR(t0.c2)  WHEN t0.c68 THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN CASE 1342226093  WHEN vt0.c0 THEN t0.c2 END THEN CAST(t0.c2 AS REAL) WHEN ((t0.c68) IS FALSE) THEN '0.36233801550646194' ELSE ((vt0.c0)<<(t0.c68)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 NOT INDEXED WHERE (CASE CHAR(t0.c2)  WHEN t0.c68 THEN ((t0.c68) BETWEEN (t0.c68) AND (t0.c68)) WHEN CASE 1342226093  WHEN vt0.c0 THEN t0.c2 END THEN CAST(t0.c2 AS REAL) WHEN ((t0.c68) IS FALSE) THEN '0.36233801550646194' ELSE ((vt0.c0)<<(t0.c68)) END);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT * FROM vt0, t0 WHERE ((((NULL IN (t0.c2, vt0.c0))) BETWEEN (CAST(t0.c2 AS TEXT)) AND (t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (t0.c2, vt0.c0))) BETWEEN (CAST(t0.c2 AS TEXT)) AND (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((NULL IN (t0.c2, vt0.c0))) BETWEEN (CAST(t0.c2 AS TEXT)) AND (t0.c68 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (t0.c2, vt0.c0))) BETWEEN (CAST(t0.c2 AS TEXT)) AND (t0.c68 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((NULL IN (t0.c2, vt0.c0))) BETWEEN (CAST(t0.c2 AS TEXT)) AND (t0.c68 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (+ (t0.c68))  WHEN CAST('' AS NUMERIC) THEN HEX(t0.c68) END) ORDER BY ((x'')/(t0.c68 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c68))  WHEN CAST('' AS NUMERIC) THEN HEX(t0.c68) END) IS TRUE)  as count FROM t0 ORDER BY ((x'')/(t0.c68 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (+ (t0.c68))  WHEN CAST('' AS NUMERIC) THEN HEX(t0.c68) END) ORDER BY ((x'')/(t0.c68 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c68))  WHEN CAST('' AS NUMERIC) THEN HEX(t0.c68) END) IS TRUE)  as count FROM t0 ORDER BY ((x'')/(t0.c68 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (+ (t0.c68))  WHEN CAST('' AS NUMERIC) THEN HEX(t0.c68) END) ORDER BY ((x'')/(t0.c68 COLLATE BINARY)) ASC;
SELECT * FROM t0 WHERE ((((t0.c68)) BETWEEN ((0.904839036055066)) AND ((NULL)))) ORDER BY t0.c2 COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) BETWEEN ((0.904839036055066)) AND ((NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c68)) BETWEEN ((0.904839036055066)) AND ((NULL)))) ORDER BY t0.c2 COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68)) BETWEEN ((0.904839036055066)) AND ((NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c68)) BETWEEN ((0.904839036055066)) AND ((NULL)))) ORDER BY t0.c2 COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CASE CAST(t0.c68 AS NUMERIC)  WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 END THEN (t0.c68 IN ()) ELSE 0.507738853609996 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c68 AS NUMERIC)  WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 END THEN (t0.c68 IN ()) ELSE 0.507738853609996 END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE CAST(t0.c68 AS NUMERIC)  WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 END THEN (t0.c68 IN ()) ELSE 0.507738853609996 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c68 AS NUMERIC)  WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 END THEN (t0.c68 IN ()) ELSE 0.507738853609996 END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE CAST(t0.c68 AS NUMERIC)  WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 END THEN (t0.c68 IN ()) ELSE 0.507738853609996 END);
SELECT * FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>=(t0.c2)))!=(json_extract(t0.c68, t0.c68)))) ORDER BY UNICODE('ll_[') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)>=(t0.c2)))!=(json_extract(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY UNICODE('ll_[') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>=(t0.c2)))!=(json_extract(t0.c68, t0.c68)))) ORDER BY UNICODE('ll_[') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)>=(t0.c2)))!=(json_extract(t0.c68, t0.c68)))) IS TRUE)  as count FROM t0 ORDER BY UNICODE('ll_[') ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) ASC, (('-650976012') NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((~ (vt0.c0)))) DESC, ((((((((((((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)AND(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR('-1182422323')))OR(((vt0.c0)OR(t0.c2)))))AND(((('0.26131995219004056'))>((t0.c68))))))AND(CAST(t0.c2 AS TEXT))))AND(((((vt0.c0)OR(x'')))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) ASC, (('-650976012') NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((~ (vt0.c0)))) DESC, ((((((((((((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)AND(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR('-1182422323')))OR(((vt0.c0)OR(t0.c2)))))AND(((('0.26131995219004056'))>((t0.c68))))))AND(CAST(t0.c2 AS TEXT))))AND(((((vt0.c0)OR(x'')))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) ASC, (('-650976012') NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((~ (vt0.c0)))) DESC, ((((((((((((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)AND(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR('-1182422323')))OR(((vt0.c0)OR(t0.c2)))))AND(((('0.26131995219004056'))>((t0.c68))))))AND(CAST(t0.c2 AS TEXT))))AND(((((vt0.c0)OR(x'')))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) ASC, (('-650976012') NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((~ (vt0.c0)))) DESC, ((((((((((((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)AND(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR('-1182422323')))OR(((vt0.c0)OR(t0.c2)))))AND(((('0.26131995219004056'))>((t0.c68))))))AND(CAST(t0.c2 AS TEXT))))AND(((((vt0.c0)OR(x'')))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)) AS REAL) ASC, (('-650976012') NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((~ (vt0.c0)))) DESC, ((((((((((((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END)AND(((((vt0.c0)AND(t0.c2)))AND(t0.c2)))))OR('-1182422323')))OR(((vt0.c0)OR(t0.c2)))))AND(((('0.26131995219004056'))>((t0.c68))))))AND(CAST(t0.c2 AS TEXT))))AND(((((vt0.c0)OR(x'')))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY json_valid(CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN x'' ELSE t0.c68 END) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY json_valid(CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN x'' ELSE t0.c68 END) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY json_valid(CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN x'' ELSE t0.c68 END) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY json_valid(CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN x'' ELSE t0.c68 END) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY json_valid(CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN x'' ELSE t0.c68 END) DESC;
SELECT * FROM t0 WHERE ((COALESCE(t0.c68, t0.c68) IN ())) ORDER BY CAST(t0.c68 COLLATE BINARY AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((COALESCE(t0.c68, t0.c68) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 COLLATE BINARY AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE ((COALESCE(t0.c68, t0.c68) IN ())) ORDER BY CAST(t0.c68 COLLATE BINARY AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((COALESCE(t0.c68, t0.c68) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c68 COLLATE BINARY AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE ((COALESCE(t0.c68, t0.c68) IN ())) ORDER BY CAST(t0.c68 COLLATE BINARY AS BLOB)  NULLS LAST;
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 IN (((t0.c68)<<(t0.c2))))) ORDER BY ((((((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2)))))AND(((t0.c2)OR(t0.c68)))))OR((+ (t0.c2)))))AND((+ (t0.c2)))) ASC  NULLS LAST, (CAST(t0.c2 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN (((t0.c68)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2)))))AND(((t0.c2)OR(t0.c68)))))OR((+ (t0.c2)))))AND((+ (t0.c2)))) ASC  NULLS LAST, (CAST(t0.c2 AS NUMERIC) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 IN (((t0.c68)<<(t0.c2))))) ORDER BY ((((((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2)))))AND(((t0.c2)OR(t0.c68)))))OR((+ (t0.c2)))))AND((+ (t0.c2)))) ASC  NULLS LAST, (CAST(t0.c2 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 IN (((t0.c68)<<(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2)))))AND(((t0.c2)OR(t0.c68)))))OR((+ (t0.c2)))))AND((+ (t0.c2)))) ASC  NULLS LAST, (CAST(t0.c2 AS NUMERIC) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 IN (((t0.c68)<<(t0.c2))))) ORDER BY ((((((((((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c2)))))AND(((t0.c2)OR(t0.c68)))))OR((+ (t0.c2)))))AND((+ (t0.c2)))) ASC  NULLS LAST, (CAST(t0.c2 AS NUMERIC) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|((((vt0.c0))<=((vt0.c0))))));
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE RTRIM)IS(((t0.c2)+(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE RTRIM)IS(((t0.c2)+(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE RTRIM)IS(((t0.c2)+(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c68 COLLATE RTRIM)IS(((t0.c2)+(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c68 COLLATE RTRIM)IS(((t0.c2)+(t0.c2)))));
SELECT ALL * FROM vt0, t0 WHERE (t0.c68) ORDER BY -635660030;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0 ORDER BY -635660030);
SELECT ALL * FROM vt0, t0 WHERE (t0.c68) ORDER BY -635660030;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM vt0, t0 ORDER BY -635660030);
SELECT * FROM vt0, t0 WHERE (CASE WHEN (((vt0.c0, t0.c68, vt0.c0)) BETWEEN ((vt0.c0, t0.c68, t0.c68)) AND (('X~oF', vt0.c0, t0.c68))) THEN COALESCE(DISTINCT t0.c2, x'') WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c2 WHEN TOTAL_CHANGES() THEN t0.c68 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN HEX(t0.c68) WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END) ORDER BY ((((((t0.c68)AND(t0.c68)))OR(t0.c68)))/(((t0.c2)%(t0.c2)))) DESC, ((((((((((((((t0.c2)AND(x'')))AND(t0.c2)))AND(t0.c68)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(0.5336182765053967))  NULLS LAST, 2.042824188E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, t0.c68, vt0.c0)) BETWEEN ((vt0.c0, t0.c68, t0.c68)) AND (('X~oF', vt0.c0, t0.c68))) THEN COALESCE(DISTINCT t0.c2, x'') WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c2 WHEN TOTAL_CHANGES() THEN t0.c68 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN HEX(t0.c68) WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c68)AND(t0.c68)))OR(t0.c68)))/(((t0.c2)%(t0.c2)))) DESC, ((((((((((((((t0.c2)AND(x'')))AND(t0.c2)))AND(t0.c68)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(0.5336182765053967))  NULLS LAST, 2.042824188E9 DESC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN (((vt0.c0, t0.c68, vt0.c0)) BETWEEN ((vt0.c0, t0.c68, t0.c68)) AND (('X~oF', vt0.c0, t0.c68))) THEN COALESCE(DISTINCT t0.c2, x'') WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c2 WHEN TOTAL_CHANGES() THEN t0.c68 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN HEX(t0.c68) WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END) ORDER BY ((((((t0.c68)AND(t0.c68)))OR(t0.c68)))/(((t0.c2)%(t0.c2)))) DESC, ((((((((((((((t0.c2)AND(x'')))AND(t0.c2)))AND(t0.c68)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(0.5336182765053967))  NULLS LAST, 2.042824188E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, t0.c68, vt0.c0)) BETWEEN ((vt0.c0, t0.c68, t0.c68)) AND (('X~oF', vt0.c0, t0.c68))) THEN COALESCE(DISTINCT t0.c2, x'') WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c2 WHEN TOTAL_CHANGES() THEN t0.c68 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN HEX(t0.c68) WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c68)AND(t0.c68)))OR(t0.c68)))/(((t0.c2)%(t0.c2)))) DESC, ((((((((((((((t0.c2)AND(x'')))AND(t0.c2)))AND(t0.c68)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(0.5336182765053967))  NULLS LAST, 2.042824188E9 DESC);
SELECT * FROM vt0, t0 WHERE (CASE WHEN (((vt0.c0, t0.c68, vt0.c0)) BETWEEN ((vt0.c0, t0.c68, t0.c68)) AND (('X~oF', vt0.c0, t0.c68))) THEN COALESCE(DISTINCT t0.c2, x'') WHEN ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) THEN t0.c2 WHEN TOTAL_CHANGES() THEN t0.c68 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c68)) THEN HEX(t0.c68) WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) ELSE (+ (vt0.c0)) END) ORDER BY ((((((t0.c68)AND(t0.c68)))OR(t0.c68)))/(((t0.c2)%(t0.c2)))) DESC, ((((((((((((((t0.c2)AND(x'')))AND(t0.c2)))AND(t0.c68)))OR(t0.c68)))OR(vt0.c0)))AND(vt0.c0)))AND(0.5336182765053967))  NULLS LAST, 2.042824188E9 DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0, vt0.c0)) BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0, vt0.c0)) BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) BETWEEN (vt0.c0) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))=((vt0.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))==((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))=((vt0.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))==((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))=((vt0.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) IS FALSE);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((((vt0.c0)OR(t0.c2)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(t0.c68 COLLATE BINARY AS NUMERIC) WHERE (0.15570530302126095) ORDER BY (((+ (t0.c68)))IS NOT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)|(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.15570530302126095) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(t0.c68 COLLATE BINARY AS NUMERIC) ORDER BY (((+ (t0.c68)))IS NOT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)|(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(t0.c68 COLLATE BINARY AS NUMERIC) WHERE (0.15570530302126095) ORDER BY (((+ (t0.c68)))IS NOT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)|(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.15570530302126095) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(t0.c68 COLLATE BINARY AS NUMERIC) ORDER BY (((+ (t0.c68)))IS NOT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)|(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(t0.c68 COLLATE BINARY AS NUMERIC) WHERE (0.15570530302126095) ORDER BY (((+ (t0.c68)))IS NOT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)|(vt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ORDER BY ((NULLIF(vt0.c0, vt0.c0)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(vt0.c0, vt0.c0)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ORDER BY ((NULLIF(vt0.c0, vt0.c0)) NOTNULL);
SELECT SUM(count) FROM (SELECT (((~ (DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(vt0.c0, vt0.c0)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ORDER BY ((NULLIF(vt0.c0, vt0.c0)) NOTNULL);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY TRIM(DISTINCT vt0.c0) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT vt0.c0) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY TRIM(DISTINCT vt0.c0) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT vt0.c0) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY TRIM(DISTINCT vt0.c0) COLLATE BINARY ASC;
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON JULIANDAY(t0.c2, LIKELY(DISTINCT t0.c68), ((((t0.c2)OR(t0.c2)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), (NOT (t0.c68)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END, (~ (vt0.c0))) WHERE (CASE CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END  WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END  WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c2)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON JULIANDAY(t0.c2, LIKELY(DISTINCT t0.c68), ((((t0.c2)OR(t0.c2)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), (NOT (t0.c68)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END, (~ (vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON JULIANDAY(t0.c2, LIKELY(DISTINCT t0.c68), ((((t0.c2)OR(t0.c2)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), (NOT (t0.c68)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END, (~ (vt0.c0))) WHERE (CASE CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END  WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END  WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c2)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON JULIANDAY(t0.c2, LIKELY(DISTINCT t0.c68), ((((t0.c2)OR(t0.c2)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), (NOT (t0.c68)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END, (~ (vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON JULIANDAY(t0.c2, LIKELY(DISTINCT t0.c68), ((((t0.c2)OR(t0.c2)))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), (NOT (t0.c68)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c68 END, (~ (vt0.c0))) WHERE (CASE CASE t0.c68  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN vt0.c0 ELSE vt0.c0 END  WHEN CASE t0.c68  WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END THEN ((((t0.c2)AND(vt0.c0)))AND(t0.c2)) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((LOWER(DISTINCT vt0.c0)) NOT BETWEEN ((t0.c2 IN ())) AND ((NOT (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt0.c0)) NOT BETWEEN ((t0.c2 IN ())) AND ((NOT (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((LOWER(DISTINCT vt0.c0)) NOT BETWEEN ((t0.c2 IN ())) AND ((NOT (t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt0.c0)) NOT BETWEEN ((t0.c2 IN ())) AND ((NOT (t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((LOWER(DISTINCT vt0.c0)) NOT BETWEEN ((t0.c2 IN ())) AND ((NOT (t0.c68)))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON t0.c2 WHERE ((~ (((t0.c68) NOT BETWEEN ('567585803') AND (t0.c2))))) ORDER BY ((((vt0.c0)&(t0.c2))) NOT BETWEEN (((t0.c2)+(vt0.c0))) AND (HEX(DISTINCT t0.c68))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c68))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c68) NOT BETWEEN ('567585803') AND (t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c2 ORDER BY ((((vt0.c0)&(t0.c2))) NOT BETWEEN (((t0.c2)+(vt0.c0))) AND (HEX(DISTINCT t0.c68))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c68))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON t0.c2 WHERE ((~ (((t0.c68) NOT BETWEEN ('567585803') AND (t0.c2))))) ORDER BY ((((vt0.c0)&(t0.c2))) NOT BETWEEN (((t0.c2)+(vt0.c0))) AND (HEX(DISTINCT t0.c68))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c68))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c68) NOT BETWEEN ('567585803') AND (t0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c2 ORDER BY ((((vt0.c0)&(t0.c2))) NOT BETWEEN (((t0.c2)+(vt0.c0))) AND (HEX(DISTINCT t0.c68))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c68))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON t0.c2 WHERE ((~ (((t0.c68) NOT BETWEEN ('567585803') AND (t0.c2))))) ORDER BY ((((vt0.c0)&(t0.c2))) NOT BETWEEN (((t0.c2)+(vt0.c0))) AND (HEX(DISTINCT t0.c68))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c68))) IS FALSE) ASC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((t0.c68)OR(vt0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)OR(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((t0.c68)OR(vt0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)OR(vt0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((((((t0.c68)OR(vt0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((CASE t0.c68  WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (NULL) AND (CASE x'3c89'  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (NULL) AND (CASE x'3c89'  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (NULL) AND (CASE x'3c89'  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (NULL) AND (CASE x'3c89'  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (NULL) AND (CASE x'3c89'  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68)<(t0.c68)))-((t0.c68 IN (''))))) ORDER BY (((((t0.c68))=((t0.c68))))IS(json_remove(t0.c68, t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<(t0.c68)))-((t0.c68 IN (''))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c68))=((t0.c68))))IS(json_remove(t0.c68, t0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68)<(t0.c68)))-((t0.c68 IN (''))))) ORDER BY (((((t0.c68))=((t0.c68))))IS(json_remove(t0.c68, t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c68)<(t0.c68)))-((t0.c68 IN (''))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c68))=((t0.c68))))IS(json_remove(t0.c68, t0.c2))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (x'')))*(((((((((vt0.c0)AND('530337000')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (x'')))*(((((((((vt0.c0)AND('530337000')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (x'')))*(((((((((vt0.c0)AND('530337000')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (x'')))*(((((((((vt0.c0)AND('530337000')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (x'')))*(((((((((vt0.c0)AND('530337000')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN (vt0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) ORDER BY CAST(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END AS TEXT));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) ORDER BY CAST(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END AS TEXT));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE vt0.c0  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END))) ORDER BY CAST(CASE vt0.c0  WHEN t0.c68 THEN t0.c68 END AS TEXT);
SELECT ALL * FROM vt0, t0 WHERE (((t0.c2)<<(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c68))) NOT BETWEEN (((t0.c2)|(t0.c2))) AND (((t0.c68)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)<<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c68))) NOT BETWEEN (((t0.c2)|(t0.c2))) AND (((t0.c68)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((t0.c2)<<(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c68))) NOT BETWEEN (((t0.c2)|(t0.c2))) AND (((t0.c68)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)<<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c68))) NOT BETWEEN (((t0.c2)|(t0.c2))) AND (((t0.c68)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((t0.c2)<<(vt0.c0)) COLLATE BINARY) ORDER BY ((((((((((vt0.c0)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))OR(t0.c68))) NOT BETWEEN (((t0.c2)|(t0.c2))) AND (((t0.c68)LIKE(vt0.c0))));
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END)<<(((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))OR(t0.c2)))AND(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END)<<(((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))OR(t0.c2)))AND(t0.c68))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END)<<(((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))OR(t0.c2)))AND(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END)<<(((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))OR(t0.c2)))AND(t0.c68))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c68) ORDER BY ((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c2 END)<<(((((((((t0.c68)AND(t0.c2)))AND(t0.c68)))OR(t0.c2)))AND(t0.c68))))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ((((0xffffffffb1518ba8)AND(t0.c2)))+(((vt0.c0)/(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0xffffffffb1518ba8)AND(t0.c2)))+(((vt0.c0)/(t0.c68)))) DESC);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ((((0xffffffffb1518ba8)AND(t0.c2)))+(((vt0.c0)/(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((0xffffffffb1518ba8)AND(t0.c2)))+(((vt0.c0)/(t0.c68)))) DESC);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ((((0xffffffffb1518ba8)AND(t0.c2)))+(((vt0.c0)/(t0.c68)))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)LIKE(t0.c2)), ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)), (((x''))>=((vt0.c0))))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c68 END, UNLIKELY(DISTINCT vt0.c0), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)LIKE(t0.c2)), ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)), (((x''))>=((vt0.c0))))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c68 END, UNLIKELY(DISTINCT vt0.c0), vt0.c0)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)LIKE(t0.c2)), ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)), (((x''))>=((vt0.c0))))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c68 END, UNLIKELY(DISTINCT vt0.c0), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)LIKE(t0.c2)), ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)), (((x''))>=((vt0.c0))))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c68 END, UNLIKELY(DISTINCT vt0.c0), vt0.c0)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)LIKE(t0.c2)), ((t0.c68) BETWEEN (t0.c68) AND (vt0.c0)), (((x''))>=((vt0.c0))))) AND ((CASE t0.c2  WHEN t0.c2 THEN t0.c68 END, UNLIKELY(DISTINCT vt0.c0), vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (((t0.c2)IS(t0.c68))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)IS(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (((t0.c2)IS(t0.c68))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)IS(t0.c68))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((- (((t0.c2)IS(t0.c68))))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN ()) COLLATE NOCASE) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN ()) COLLATE NOCASE) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c2 IN ()) COLLATE NOCASE) ORDER BY vt0.c0 ASC;
SELECT * FROM vt0, t0 WHERE (UPPER(DISTINCT t0.c68) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t0.c68) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (UPPER(DISTINCT t0.c68) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t0.c68) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (UPPER(DISTINCT t0.c68) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY CASE (((t0.c68))<((t0.c2)))  WHEN (((t0.c2))<=(('IZ'))) THEN t0.c68 ELSE ((vt0.c0) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY CASE (((t0.c68))<((t0.c2)))  WHEN (((t0.c2))<=(('IZ'))) THEN t0.c68 ELSE ((vt0.c0) IS TRUE) END ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY CASE (((t0.c68))<((t0.c2)))  WHEN (((t0.c2))<=(('IZ'))) THEN t0.c68 ELSE ((vt0.c0) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY CASE (((t0.c68))<((t0.c2)))  WHEN (((t0.c2))<=(('IZ'))) THEN t0.c68 ELSE ((vt0.c0) IS TRUE) END ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0) ORDER BY CASE (((t0.c68))<((t0.c2)))  WHEN (((t0.c2))<=(('IZ'))) THEN t0.c68 ELSE ((vt0.c0) IS TRUE) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68, t0.c2, t0.c2)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c68, t0.c68)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68, t0.c2, t0.c2)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c68, t0.c68)))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68, t0.c2, t0.c2)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c68, t0.c68)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68, t0.c2, t0.c2)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c68, t0.c68)))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c68, t0.c2, t0.c2)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c68, t0.c68)))) NOT NULL));
SELECT * FROM t0 WHERE ((((((t0.c68)AND(t0.c2)))OR(t0.c68)) IN ())) ORDER BY (((((t0.c68)) BETWEEN (('i.㉪[_*,')) AND ((t0.c68)))) NOT BETWEEN ((t0.c2 IN ())) AND (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(t0.c2)))OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c68)) BETWEEN (('i.㉪[_*,')) AND ((t0.c68)))) NOT BETWEEN ((t0.c2 IN ())) AND (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c68)AND(t0.c2)))OR(t0.c68)) IN ())) ORDER BY (((((t0.c68)) BETWEEN (('i.㉪[_*,')) AND ((t0.c68)))) NOT BETWEEN ((t0.c2 IN ())) AND (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)AND(t0.c2)))OR(t0.c68)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c68)) BETWEEN (('i.㉪[_*,')) AND ((t0.c68)))) NOT BETWEEN ((t0.c2 IN ())) AND (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c68)AND(t0.c2)))OR(t0.c68)) IN ())) ORDER BY (((((t0.c68)) BETWEEN (('i.㉪[_*,')) AND ((t0.c68)))) NOT BETWEEN ((t0.c2 IN ())) AND (CASE WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c2 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (x'23f0');
SELECT SUM(count) FROM (SELECT ((x'23f0') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'23f0');
SELECT SUM(count) FROM (SELECT ((x'23f0') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'23f0');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON NULL WHERE (t0.c68) ORDER BY (((~ (t0.c68))) BETWEEN (((0.0010954960339224495)&(vt0.c0))) AND (t0.c68)) DESC  NULLS FIRST, ((((((t0.c2)<=(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)<<(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON NULL ORDER BY (((~ (t0.c68))) BETWEEN (((0.0010954960339224495)&(vt0.c0))) AND (t0.c68)) DESC  NULLS FIRST, ((((((t0.c2)<=(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)<<(t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON NULL WHERE (t0.c68) ORDER BY (((~ (t0.c68))) BETWEEN (((0.0010954960339224495)&(vt0.c0))) AND (t0.c68)) DESC  NULLS FIRST, ((((((t0.c2)<=(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)<<(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c68) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON NULL ORDER BY (((~ (t0.c68))) BETWEEN (((0.0010954960339224495)&(vt0.c0))) AND (t0.c68)) DESC  NULLS FIRST, ((((((t0.c2)<=(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)<<(t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON NULL WHERE (t0.c68) ORDER BY (((~ (t0.c68))) BETWEEN (((0.0010954960339224495)&(vt0.c0))) AND (t0.c68)) DESC  NULLS FIRST, ((((((t0.c2)<=(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)<<(t0.c2)))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68)<(t0.c2))  WHEN (('-440297005') ISNULL) THEN (((t0.c68))<((t0.c68))) ELSE x'' END) ORDER BY (- (STRFTIME(t0.c2, t0.c2, t0.c68))) DESC  NULLS FIRST, LIKELY(DISTINCT COALESCE(t0.c68, t0.c2)) ASC, ((((t0.c68)<=(t0.c2))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68)<(t0.c2))  WHEN (('-440297005') ISNULL) THEN (((t0.c68))<((t0.c68))) ELSE x'' END) IS TRUE)  as count FROM t0 ORDER BY (- (STRFTIME(t0.c2, t0.c2, t0.c68))) DESC  NULLS FIRST, LIKELY(DISTINCT COALESCE(t0.c68, t0.c2)) ASC, ((((t0.c68)<=(t0.c2))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68)<(t0.c2))  WHEN (('-440297005') ISNULL) THEN (((t0.c68))<((t0.c68))) ELSE x'' END) ORDER BY (- (STRFTIME(t0.c2, t0.c2, t0.c68))) DESC  NULLS FIRST, LIKELY(DISTINCT COALESCE(t0.c68, t0.c2)) ASC, ((((t0.c68)<=(t0.c2))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c68)<(t0.c2))  WHEN (('-440297005') ISNULL) THEN (((t0.c68))<((t0.c68))) ELSE x'' END) IS TRUE)  as count FROM t0 ORDER BY (- (STRFTIME(t0.c2, t0.c2, t0.c68))) DESC  NULLS FIRST, LIKELY(DISTINCT COALESCE(t0.c68, t0.c2)) ASC, ((((t0.c68)<=(t0.c2))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c68)<(t0.c2))  WHEN (('-440297005') ISNULL) THEN (((t0.c68))<((t0.c68))) ELSE x'' END) ORDER BY (- (STRFTIME(t0.c2, t0.c2, t0.c68))) DESC  NULLS FIRST, LIKELY(DISTINCT COALESCE(t0.c68, t0.c2)) ASC, ((((t0.c68)<=(t0.c2))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>>(t0.c68)))IS NOT(((t0.c68)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)>>(t0.c68)))IS NOT(((t0.c68)%(t0.c2))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>>(t0.c68)))IS NOT(((t0.c68)%(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c68)>>(t0.c68)))IS NOT(((t0.c68)%(t0.c2))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c68)>>(t0.c68)))IS NOT(((t0.c68)%(t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)==(t0.c68))) NOT NULL)) ORDER BY CASE WHEN ((((t0.c68)AND(t0.c2)))OR(t0.c2)) THEN (t0.c2 IN ()) ELSE '1652071874' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)==(t0.c68))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c68)AND(t0.c2)))OR(t0.c2)) THEN (t0.c2 IN ()) ELSE '1652071874' END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)==(t0.c68))) NOT NULL)) ORDER BY CASE WHEN ((((t0.c68)AND(t0.c2)))OR(t0.c2)) THEN (t0.c2 IN ()) ELSE '1652071874' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)==(t0.c68))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c68)AND(t0.c2)))OR(t0.c2)) THEN (t0.c2 IN ()) ELSE '1652071874' END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)==(t0.c68))) NOT NULL)) ORDER BY CASE WHEN ((((t0.c68)AND(t0.c2)))OR(t0.c2)) THEN (t0.c2 IN ()) ELSE '1652071874' END ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0)AND(t0.c2)))AND(t0.c68)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0)AND(t0.c2)))AND(t0.c68)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0)AND(t0.c2)))AND(t0.c68)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0)AND(t0.c2)))AND(t0.c68)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE RTRIM))) ORDER BY (((((vt0.c0)AND(t0.c2)))AND(t0.c68)) IN ()) ASC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(vt0.c0)))AND(t0.c68)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(vt0.c0)))AND(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(vt0.c0)))AND(t0.c68)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(vt0.c0)))AND(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((t0.c68)AND(t0.c68)))AND(t0.c68)))OR(vt0.c0)))AND(t0.c68)) COLLATE RTRIM);
SELECT * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) AND ((((t0.c68) NOT NULL))))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) AND ((((t0.c68) NOT NULL))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) AND ((((t0.c68) NOT NULL))))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c68)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) AND ((((t0.c68) NOT NULL))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT * FROM t0 WHERE ((((t0.c68)) NOT BETWEEN ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c68)))) AND ((((t0.c68) NOT NULL))))) ORDER BY t0.c2 ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) IS FALSE))<(((((vt0.c0)AND(vt0.c0)))OR(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS FALSE))<(((((vt0.c0)AND(vt0.c0)))OR(t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) IS FALSE))<(((((vt0.c0)AND(vt0.c0)))OR(t0.c68)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) IS FALSE))<(((((vt0.c0)AND(vt0.c0)))OR(t0.c68))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) IS FALSE))<(((((vt0.c0)AND(vt0.c0)))OR(t0.c68)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND ((((t0.c68)<>('280081899'))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND ((((t0.c68)!=('280081899')))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND ((((t0.c68)<>('280081899'))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND ((((t0.c68)!=('280081899')))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)) BETWEEN ((CAST(t0.c2 AS NUMERIC))) AND ((((t0.c68)<>('280081899'))))));
SELECT * FROM t0, vt0 WHERE ((((NOT (t0.c68))) BETWEEN (CASE WHEN t0.c68 THEN t0.c68 ELSE vt0.c0 END) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c68))) BETWEEN (CASE WHEN t0.c68 THEN t0.c68 ELSE vt0.c0 END) AND (x''))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((NOT (t0.c68))) BETWEEN (CASE WHEN t0.c68 THEN t0.c68 ELSE vt0.c0 END) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c68))) BETWEEN (CASE WHEN t0.c68 THEN t0.c68 ELSE vt0.c0 END) AND (x''))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((NOT (t0.c68))) BETWEEN (CASE WHEN t0.c68 THEN t0.c68 ELSE vt0.c0 END) AND (x'')));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)) ORDER BY IFNULL(DISTINCT t0.c2, t0.c68) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT t0.c2, t0.c68) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)) ORDER BY IFNULL(DISTINCT t0.c2, t0.c68) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT t0.c2, t0.c68) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c2 THEN t0.c2 END) NOTNULL)) ORDER BY IFNULL(DISTINCT t0.c2, t0.c68) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN NULL THEN t0.c2 END) AND ('')) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN NULL THEN t0.c2 END) AND ('')) ASC);
SELECT * FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN NULL THEN t0.c2 END) AND ('')) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN NULL THEN t0.c2 END) AND ('')) ASC);
SELECT * FROM t0 WHERE (t0.c68) ORDER BY ((((t0.c2) BETWEEN (t0.c68) AND (t0.c2))) NOT BETWEEN (CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN t0.c68 THEN t0.c2 WHEN NULL THEN t0.c2 END) AND ('')) ASC;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) ORDER BY TYPEOF((((vt0.c0))!=((vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((((vt0.c0))!=((vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) ORDER BY TYPEOF((((vt0.c0))!=((vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF((((vt0.c0))!=((vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) ORDER BY TYPEOF((((vt0.c0))!=((vt0.c0)))) DESC;
SELECT ALL * FROM t0, vt0 WHERE (1.734574157E9);
SELECT SUM(count) FROM (SELECT ALL ((1.734574157E9) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (1.734574157E9);
SELECT SUM(count) FROM (SELECT ALL ((1.734574157E9) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (1.734574157E9);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c68)AND(t0.c68)))OR(t0.c68)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c2 THEN x'63e6' END  WHEN ('' IN ()) THEN (- (t0.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c68)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c2 THEN x'63e6' END  WHEN ('' IN ()) THEN (- (t0.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c2 THEN x'63e6' END  WHEN ('' IN ()) THEN (- (t0.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c68)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c2 THEN x'63e6' END  WHEN ('' IN ()) THEN (- (t0.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c2 THEN x'63e6' END  WHEN ('' IN ()) THEN (- (t0.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c68)) END);
SELECT COUNT(*) FROM t0 WHERE (HEX(t0.c68) COLLATE BINARY) ORDER BY ((t0.c2)>>(t0.c2)) COLLATE NOCASE DESC, ((((TRIM(t0.c68, t0.c2))OR(((t0.c2)>>(x'')))))OR(t0.c2 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c68) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)>>(t0.c2)) COLLATE NOCASE DESC, ((((TRIM(t0.c68, t0.c2))OR(((t0.c2)>>(x'')))))OR(t0.c2 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (HEX(t0.c68) COLLATE BINARY) ORDER BY ((t0.c2)>>(t0.c2)) COLLATE NOCASE DESC, ((((TRIM(t0.c68, t0.c2))OR(((t0.c2)>>(x'')))))OR(t0.c2 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c68) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)>>(t0.c2)) COLLATE NOCASE DESC, ((((TRIM(t0.c68, t0.c2))OR(((t0.c2)>>(x'')))))OR(t0.c2 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (HEX(t0.c68) COLLATE BINARY) ORDER BY ((t0.c2)>>(t0.c2)) COLLATE NOCASE DESC, ((((TRIM(t0.c68, t0.c2))OR(((t0.c2)>>(x'')))))OR(t0.c2 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2, t0.c2, t0.c68))>=((t0.c2, vt0.c0, '-1448265310')))) ISNULL)) ORDER BY (~ (t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c2, t0.c68))>=((t0.c2, vt0.c0, '-1448265310')))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2, t0.c2, t0.c68))>=((t0.c2, vt0.c0, '-1448265310')))) ISNULL)) ORDER BY (~ (t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c2, t0.c68))>=((t0.c2, vt0.c0, '-1448265310')))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((t0.c2, t0.c2, t0.c68))>=((t0.c2, vt0.c0, '-1448265310')))) ISNULL)) ORDER BY (~ (t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ('280081899');
SELECT SUM(count) FROM (SELECT (('280081899') IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ('280081899');
SELECT SUM(count) FROM (SELECT (('280081899') IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ('280081899');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (t0.c68) AND ((('v]8링xmέed') BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND ((+ (vt0.c0))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN t0.c68 END IN ())  NULLS FIRST, ((((t0.c2)>=('751879675'))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (t0.c68) AND ((('v]8링xmέed') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND ((+ (vt0.c0))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN t0.c68 END IN ())  NULLS FIRST, ((((t0.c2)>=('751879675'))) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (t0.c68) AND ((('v]8링xmέed') BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND ((+ (vt0.c0))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN t0.c68 END IN ())  NULLS FIRST, ((((t0.c2)>=('751879675'))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (t0.c68) AND ((('v]8링xmέed') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND ((+ (vt0.c0))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN t0.c68 END IN ())  NULLS FIRST, ((((t0.c2)>=('751879675'))) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (t0.c68) AND ((('v]8링xmέed') BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (t0.c68 COLLATE NOCASE) AND ((+ (vt0.c0))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN t0.c68 END IN ())  NULLS FIRST, ((((t0.c2)>=('751879675'))) ISNULL);
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN t0.c2 COLLATE NOCASE THEN 0.2471220387590376 WHEN ((x'd8fa') NOT NULL) THEN ((t0.c2)-(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN t0.c2 COLLATE NOCASE THEN 0.2471220387590376 WHEN ((x'd8fa') NOT NULL) THEN ((t0.c2)-(t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN t0.c2 COLLATE NOCASE THEN 0.2471220387590376 WHEN ((x'd8fa') NOT NULL) THEN ((t0.c2)-(t0.c68)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN t0.c2 COLLATE NOCASE THEN 0.2471220387590376 WHEN ((x'd8fa') NOT NULL) THEN ((t0.c2)-(t0.c68)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2) BETWEEN (t0.c68) AND (t0.c68)) THEN ((t0.c68) NOT BETWEEN (t0.c68) AND (t0.c68)) WHEN t0.c2 COLLATE NOCASE THEN 0.2471220387590376 WHEN ((x'd8fa') NOT NULL) THEN ((t0.c2)-(t0.c68)) END);
SELECT * FROM vt0 WHERE ((((('-514586671') NOT NULL))!=(((vt0.c0)|(x''))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN (+ (x'd74b')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-514586671') NOT NULL))!=(((vt0.c0)|(x''))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN (+ (x'd74b')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) ISNULL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((('-514586671') NOT NULL))!=(((vt0.c0)|(x''))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN (+ (x'd74b')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-514586671') NOT NULL))!=(((vt0.c0)|(x''))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN (+ (x'd74b')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) ISNULL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((('-514586671') NOT NULL))!=(((vt0.c0)|(x''))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN (+ (x'd74b')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) ISNULL) END  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2 IN ()))||(((0.8809987624552845)+(vt0.c0))))) ORDER BY ((t0.c2 COLLATE NOCASE) NOT BETWEEN ('') AND (x'f805'))  NULLS LAST, t0.c2 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))||(((0.8809987624552845)+(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2 COLLATE NOCASE) NOT BETWEEN ('') AND (x'f805'))  NULLS LAST, t0.c2 COLLATE BINARY DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2 IN ()))||(((0.8809987624552845)+(vt0.c0))))) ORDER BY ((t0.c2 COLLATE NOCASE) NOT BETWEEN ('') AND (x'f805'))  NULLS LAST, t0.c2 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))||(((0.8809987624552845)+(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c2 COLLATE NOCASE) NOT BETWEEN ('') AND (x'f805'))  NULLS LAST, t0.c2 COLLATE BINARY DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c2 IN ()))||(((0.8809987624552845)+(vt0.c0))))) ORDER BY ((t0.c2 COLLATE NOCASE) NOT BETWEEN ('') AND (x'f805'))  NULLS LAST, t0.c2 COLLATE BINARY DESC;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)>=(vt0.c0)) THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<(t0.c2)) THEN (((NULL)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))) WHEN x'019f' THEN CASE WHEN t0.c68 THEN vt0.c0 END END WHERE (CAST((((vt0.c0, t0.c2, t0.c68))<=((vt0.c0, t0.c68, t0.c2))) AS BLOB)) ORDER BY (((((t0.c2, vt0.c0, t0.c68)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, NULL))))|((((t0.c2))>((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, t0.c2, t0.c68))<=((vt0.c0, t0.c68, t0.c2))) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)>=(vt0.c0)) THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<(t0.c2)) THEN (((NULL)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))) WHEN x'019f' THEN CASE WHEN t0.c68 THEN vt0.c0 END END ORDER BY (((((t0.c2, vt0.c0, t0.c68)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, NULL))))|((((t0.c2))>((t0.c2))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)>=(vt0.c0)) THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<(t0.c2)) THEN (((NULL)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))) WHEN x'019f' THEN CASE WHEN t0.c68 THEN vt0.c0 END END WHERE (CAST((((vt0.c0, t0.c2, t0.c68))<=((vt0.c0, t0.c68, t0.c2))) AS BLOB)) ORDER BY (((((t0.c2, vt0.c0, t0.c68)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, NULL))))|((((t0.c2))>((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, t0.c2, t0.c68))<=((vt0.c0, t0.c68, t0.c2))) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)>=(vt0.c0)) THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<(t0.c2)) THEN (((NULL)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))) WHEN x'019f' THEN CASE WHEN t0.c68 THEN vt0.c0 END END ORDER BY (((((t0.c2, vt0.c0, t0.c68)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, NULL))))|((((t0.c2))>((t0.c2))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)>=(vt0.c0)) THEN CAST(t0.c68 AS REAL) WHEN ((t0.c68)<(t0.c2)) THEN (((NULL)) NOT BETWEEN ((t0.c68)) AND ((t0.c2))) WHEN x'019f' THEN CASE WHEN t0.c68 THEN vt0.c0 END END WHERE (CAST((((vt0.c0, t0.c2, t0.c68))<=((vt0.c0, t0.c68, t0.c2))) AS BLOB)) ORDER BY (((((t0.c2, vt0.c0, t0.c68)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, vt0.c0, NULL))))|((((t0.c2))>((t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB))||(x'bafe')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))||(x'bafe'))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB))||(x'bafe')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))||(x'bafe'))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB))||(x'bafe')));
SELECT COUNT(*) FROM vt0, t0 WHERE (LTRIM(LIKE(t0.c68, t0.c68), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(LIKE(t0.c68, t0.c68), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LTRIM(LIKE(t0.c68, t0.c68), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(LIKE(t0.c68, t0.c68), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LTRIM(LIKE(t0.c68, t0.c68), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((((vt0.c0, t0.c68, t0.c2))<((0.2419189087063468, -269790363, vt0.c0))))AND((((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c68)))))OR(((vt0.c0) ISNULL))))AND(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, t0.c68, t0.c2))<((0.2419189087063468, -269790363, vt0.c0))))AND((((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c68)))))OR(((vt0.c0) ISNULL))))AND(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((((vt0.c0, t0.c68, t0.c2))<((0.2419189087063468, -269790363, vt0.c0))))AND((((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c68)))))OR(((vt0.c0) ISNULL))))AND(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, t0.c68, t0.c2))<((0.2419189087063468, -269790363, vt0.c0))))AND((((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c68)))))OR(((vt0.c0) ISNULL))))AND(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((((((vt0.c0, t0.c68, t0.c2))<((0.2419189087063468, -269790363, vt0.c0))))AND((((t0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))))AND(((((t0.c68)AND(t0.c2)))AND(t0.c68)))))OR(((vt0.c0) ISNULL))))AND(((t0.c2) ISNULL))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY ((t0.c68) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY ((t0.c68) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c68) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY ((t0.c68) NOTNULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)!=(vt0.c0)) IN (vt0.c0, LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(vt0.c0)) IN (vt0.c0, LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)!=(vt0.c0)) IN (vt0.c0, LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(vt0.c0)) IN (vt0.c0, LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)!=(vt0.c0)) IN (vt0.c0, LIKELY(vt0.c0))));
SELECT * FROM vt0 INNER JOIN t0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)==(vt0.c0)) ELSE ((vt0.c0)OR(t0.c2)) END WHERE (CASE ((vt0.c0) ISNULL)  WHEN (((t0.c2))>=((t0.c2))) THEN CAST(t0.c2 AS INTEGER) WHEN ((t0.c68) NOT BETWEEN ('') AND (vt0.c0)) THEN (NOT (x'4dae')) WHEN (((vt0.c0, t0.c68, NULL)) NOT BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((vt0.c0, t0.c68, t0.c2))) THEN (vt0.c0 IN (t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) ISNULL)  WHEN (((t0.c2))>=((t0.c2))) THEN CAST(t0.c2 AS INTEGER) WHEN ((t0.c68) NOT BETWEEN ('') AND (vt0.c0)) THEN (NOT (x'4dae')) WHEN (((vt0.c0, t0.c68, NULL)) NOT BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((vt0.c0, t0.c68, t0.c2))) THEN (vt0.c0 IN (t0.c68)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)=(vt0.c0)) ELSE ((vt0.c0)OR(t0.c2)) END);
SELECT * FROM vt0 INNER JOIN t0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)==(vt0.c0)) ELSE ((vt0.c0)OR(t0.c2)) END WHERE (CASE ((vt0.c0) ISNULL)  WHEN (((t0.c2))>=((t0.c2))) THEN CAST(t0.c2 AS INTEGER) WHEN ((t0.c68) NOT BETWEEN ('') AND (vt0.c0)) THEN (NOT (x'4dae')) WHEN (((vt0.c0, t0.c68, NULL)) NOT BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((vt0.c0, t0.c68, t0.c2))) THEN (vt0.c0 IN (t0.c68)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) ISNULL)  WHEN (((t0.c2))>=((t0.c2))) THEN CAST(t0.c2 AS INTEGER) WHEN ((t0.c68) NOT BETWEEN ('') AND (vt0.c0)) THEN (NOT (x'4dae')) WHEN (((vt0.c0, t0.c68, NULL)) NOT BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((vt0.c0, t0.c68, t0.c2))) THEN (vt0.c0 IN (t0.c68)) END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)=(vt0.c0)) ELSE ((vt0.c0)OR(t0.c2)) END);
SELECT * FROM vt0 INNER JOIN t0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)==(vt0.c0)) ELSE ((vt0.c0)OR(t0.c2)) END WHERE (CASE ((vt0.c0) ISNULL)  WHEN (((t0.c2))>=((t0.c2))) THEN CAST(t0.c2 AS INTEGER) WHEN ((t0.c68) NOT BETWEEN ('') AND (vt0.c0)) THEN (NOT (x'4dae')) WHEN (((vt0.c0, t0.c68, NULL)) NOT BETWEEN ((t0.c2, t0.c68, t0.c2)) AND ((vt0.c0, t0.c68, t0.c2))) THEN (vt0.c0 IN (t0.c68)) END);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.34825590198222856))) ORDER BY ROUND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.34825590198222856))) IS TRUE)  as count FROM vt0 ORDER BY ROUND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.34825590198222856))) ORDER BY ROUND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.34825590198222856))) IS TRUE)  as count FROM vt0 ORDER BY ROUND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.34825590198222856))) ORDER BY ROUND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ('801213822');
SELECT SUM(count) FROM (SELECT ALL (('801213822') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('801213822');
SELECT SUM(count) FROM (SELECT ALL (('801213822') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('801213822');
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2, '', t0.c68)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c2, t0.c2))))|(((((t0.c68)OR(t0.c68)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, '', t0.c68)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c2, t0.c2))))|(((((t0.c68)OR(t0.c68)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2, '', t0.c68)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c2, t0.c2))))|(((((t0.c68)OR(t0.c68)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, '', t0.c68)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c2, t0.c2))))|(((((t0.c68)OR(t0.c68)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2, '', t0.c68)) NOT BETWEEN ((t0.c68, t0.c2, t0.c68)) AND ((t0.c2, t0.c2, t0.c2))))|(((((t0.c68)OR(t0.c68)))AND(t0.c2)))));
SELECT * FROM t0 WHERE (0.10343022197297869);
SELECT SUM(count) FROM (SELECT ALL ((0.10343022197297869) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.10343022197297869);
SELECT SUM(count) FROM (SELECT ALL ((0.10343022197297869) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.10343022197297869);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) IS TRUE))))) ORDER BY ((((((((((((vt0.c0)OR((0.5882447875986978 IN (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'')))))OR(((vt0.c0)<(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0)%(NULL)))))OR(HEX(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR((0.5882447875986978 IN (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'')))))OR(((vt0.c0)<(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0)%(NULL)))))OR(HEX(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) IS TRUE))))) ORDER BY ((((((((((((vt0.c0)OR((0.5882447875986978 IN (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'')))))OR(((vt0.c0)<(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0)%(NULL)))))OR(HEX(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR((0.5882447875986978 IN (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'')))))OR(((vt0.c0)<(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0)%(NULL)))))OR(HEX(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) IS TRUE))))) ORDER BY ((((((((((((vt0.c0)OR((0.5882447875986978 IN (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'')))))OR(((vt0.c0)<(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0)%(NULL)))))OR(HEX(vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c68, '#', t0.c2, t0.c68, vt0.c0)) NOT BETWEEN ((t0.c68 COLLATE BINARY, ((t0.c2) NOTNULL), (NOT (t0.c68)), (NOT (t0.c2)), (- (t0.c2)))) AND ((((t0.c2) BETWEEN (t0.c2) AND (t0.c68)), (((t0.c2)) BETWEEN ((0.4652769910280369)) AND ((t0.c68))), t0.c68, '-1314231556', t0.c2)))) ORDER BY ((NULLIF(t0.c2, t0.c68)) NOT NULL), CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN -1182422323 THEN t0.c68 END THEN ((t0.c2)*(t0.c68)) ELSE (((x'', t0.c68, t0.c68)) NOT BETWEEN ((0.644569886662128, t0.c68, vt0.c0)) AND ((t0.c68, vt0.c0, t0.c68))) END DESC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)=(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((t0.c68, '#', t0.c2, t0.c68, vt0.c0)) NOT BETWEEN ((t0.c68 COLLATE BINARY, ((t0.c2) NOTNULL), (NOT (t0.c68)), (NOT (t0.c2)), (- (t0.c2)))) AND ((((t0.c2) BETWEEN (t0.c2) AND (t0.c68)), (((t0.c2)) BETWEEN ((0.4652769910280369)) AND ((t0.c68))), t0.c68, '-1314231556', t0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULLIF(t0.c2, t0.c68)) NOT NULL), CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN -1182422323 THEN t0.c68 END THEN ((t0.c2)*(t0.c68)) ELSE (((x'', t0.c68, t0.c68)) NOT BETWEEN ((0.644569886662128, t0.c68, vt0.c0)) AND ((t0.c68, vt0.c0, t0.c68))) END DESC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)==(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c68, '#', t0.c2, t0.c68, vt0.c0)) NOT BETWEEN ((t0.c68 COLLATE BINARY, ((t0.c2) NOTNULL), (NOT (t0.c68)), (NOT (t0.c2)), (- (t0.c2)))) AND ((((t0.c2) BETWEEN (t0.c2) AND (t0.c68)), (((t0.c2)) BETWEEN ((0.4652769910280369)) AND ((t0.c68))), t0.c68, '-1314231556', t0.c2)))) ORDER BY ((NULLIF(t0.c2, t0.c68)) NOT NULL), CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN -1182422323 THEN t0.c68 END THEN ((t0.c2)*(t0.c68)) ELSE (((x'', t0.c68, t0.c68)) NOT BETWEEN ((0.644569886662128, t0.c68, vt0.c0)) AND ((t0.c68, vt0.c0, t0.c68))) END DESC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)=(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((t0.c68, '#', t0.c2, t0.c68, vt0.c0)) NOT BETWEEN ((t0.c68 COLLATE BINARY, ((t0.c2) NOTNULL), (NOT (t0.c68)), (NOT (t0.c2)), (- (t0.c2)))) AND ((((t0.c2) BETWEEN (t0.c2) AND (t0.c68)), (((t0.c2)) BETWEEN ((0.4652769910280369)) AND ((t0.c68))), t0.c68, '-1314231556', t0.c2)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((NULLIF(t0.c2, t0.c68)) NOT NULL), CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN -1182422323 THEN t0.c68 END THEN ((t0.c2)*(t0.c68)) ELSE (((x'', t0.c68, t0.c68)) NOT BETWEEN ((0.644569886662128, t0.c68, vt0.c0)) AND ((t0.c68, vt0.c0, t0.c68))) END DESC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)==(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c68, '#', t0.c2, t0.c68, vt0.c0)) NOT BETWEEN ((t0.c68 COLLATE BINARY, ((t0.c2) NOTNULL), (NOT (t0.c68)), (NOT (t0.c2)), (- (t0.c2)))) AND ((((t0.c2) BETWEEN (t0.c2) AND (t0.c68)), (((t0.c2)) BETWEEN ((0.4652769910280369)) AND ((t0.c68))), t0.c68, '-1314231556', t0.c2)))) ORDER BY ((NULLIF(t0.c2, t0.c68)) NOT NULL), CASE vt0.c0  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN -1182422323 THEN t0.c68 END THEN ((t0.c2)*(t0.c68)) ELSE (((x'', t0.c68, t0.c68)) NOT BETWEEN ((0.644569886662128, t0.c68, vt0.c0)) AND ((t0.c68, vt0.c0, t0.c68))) END DESC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE t0.c68 END)=(CAST(vt0.c0 AS REAL)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c68)+(t0.c2)) COLLATE BINARY WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c68)+(t0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c68)+(t0.c2)) COLLATE BINARY WHERE (t0.c68);
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c68)+(t0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((t0.c68)+(t0.c2)) COLLATE BINARY WHERE (t0.c68);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((+ (NULL))) NOT BETWEEN (t0.c2) AND (TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) NOT BETWEEN (t0.c2) AND (TYPEOF(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((+ (NULL))) NOT BETWEEN (t0.c2) AND (TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (NULL))) NOT BETWEEN (t0.c2) AND (TYPEOF(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((+ (NULL))) NOT BETWEEN (t0.c2) AND (TYPEOF(vt0.c0))));
SELECT * FROM t0, vt0 WHERE ('624872476');
SELECT SUM(count) FROM (SELECT (('624872476') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('624872476');
SELECT SUM(count) FROM (SELECT (('624872476') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('624872476');
SELECT * FROM vt0 WHERE ('599060655') ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(0.5022648250833371)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN 'I7AI' WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT (('599060655') IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(0.5022648250833371)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN 'I7AI' WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END);
SELECT * FROM vt0 WHERE ('599060655') ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(0.5022648250833371)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN 'I7AI' WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT (('599060655') IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(0.5022648250833371)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN 'I7AI' WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END);
SELECT * FROM vt0 WHERE ('599060655') ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(0.5022648250833371)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)>(vt0.c0)))))AND(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, CASE (+ (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (- (vt0.c0)) THEN 'I7AI' WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) END;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68, t0.c68, t0.c2)) BETWEEN ((t0.c68, t0.c2, '1321500574')) AND ((t0.c68, t0.c68, t0.c68))) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((x'cba4') NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(-1.210684534E9)))AND(vt0.c0)))AND(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c2)) BETWEEN ((t0.c68, t0.c2, '1321500574')) AND ((t0.c68, t0.c68, t0.c68))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'cba4') NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(-1.210684534E9)))AND(vt0.c0)))AND(t0.c68))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68, t0.c68, t0.c2)) BETWEEN ((t0.c68, t0.c2, '1321500574')) AND ((t0.c68, t0.c68, t0.c68))) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((x'cba4') NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(-1.210684534E9)))AND(vt0.c0)))AND(t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68, t0.c68, t0.c2)) BETWEEN ((t0.c68, t0.c2, '1321500574')) AND ((t0.c68, t0.c68, t0.c68))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'cba4') NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(-1.210684534E9)))AND(vt0.c0)))AND(t0.c68))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68, t0.c68, t0.c2)) BETWEEN ((t0.c68, t0.c2, '1321500574')) AND ((t0.c68, t0.c68, t0.c68))) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((x'cba4') NOT BETWEEN ((t0.c68 IN (t0.c68))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(-1.210684534E9)))AND(vt0.c0)))AND(t0.c68))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((x'') BETWEEN (t0.c68) AND (t0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (t0.c68) AND (t0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((x'') BETWEEN (t0.c68) AND (t0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (t0.c68) AND (t0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((x'') BETWEEN (t0.c68) AND (t0.c2))) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN (((+ (t0.c68)))) AND (((+ (0Xffffffffa2a2096f)))))) ORDER BY ((((CASE t0.c68  WHEN t0.c2 THEN 0.12457351165315556 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)AND(t0.c68)))OR(t0.c68))  NULLS FIRST, (((t0.c2)/(NULL)) IN ());
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN (((+ (t0.c68)))) AND (((+ (0Xffffffffa2a2096f)))))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c68  WHEN t0.c2 THEN 0.12457351165315556 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)AND(t0.c68)))OR(t0.c68))  NULLS FIRST, (((t0.c2)/(NULL)) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN (((+ (t0.c68)))) AND (((+ (0Xffffffffa2a2096f)))))) ORDER BY ((((CASE t0.c68  WHEN t0.c2 THEN 0.12457351165315556 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)AND(t0.c68)))OR(t0.c68))  NULLS FIRST, (((t0.c2)/(NULL)) IN ());
SELECT SUM(count) FROM (SELECT (((((t0.c68)) BETWEEN (((+ (t0.c68)))) AND (((+ (0Xffffffffa2a2096f)))))) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c68  WHEN t0.c2 THEN 0.12457351165315556 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)AND(t0.c68)))OR(t0.c68))  NULLS FIRST, (((t0.c2)/(NULL)) IN ()));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68)) BETWEEN (((+ (t0.c68)))) AND (((+ (0Xffffffffa2a2096f)))))) ORDER BY ((((CASE t0.c68  WHEN t0.c2 THEN 0.12457351165315556 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c68 ELSE t0.c68 END)AND(t0.c68)))OR(t0.c68))  NULLS FIRST, (((t0.c2)/(NULL)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER(DISTINCT ((t0.c2)LIKE(t0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c2)LIKE(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER(DISTINCT ((t0.c2)LIKE(t0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c2)LIKE(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER(DISTINCT ((t0.c2)LIKE(t0.c2))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE WHEN NULL COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE WHEN NULL COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY CASE WHEN NULL COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0))>=((vt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)AND(((t0.c68)<<(t0.c2)))))AND(((((t0.c68)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(((t0.c68)<<(t0.c2)))))AND(((((t0.c68)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)AND(((t0.c68)<<(t0.c2)))))AND(((((t0.c68)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(((t0.c68)<<(t0.c2)))))AND(((((t0.c68)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)AND(((t0.c68)<<(t0.c2)))))AND(((((t0.c68)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c68)AND(t0.c68)))OR(vt0.c0)))GLOB(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)AND(t0.c68)))OR(vt0.c0)))GLOB(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c68)AND(t0.c68)))OR(vt0.c0)))GLOB(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c68)AND(t0.c68)))OR(vt0.c0)))GLOB(((t0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c68)AND(t0.c68)))OR(vt0.c0)))GLOB(((t0.c2) ISNULL))));
SELECT ALL * FROM t0 WHERE (CAST((((t0.c2, t0.c68, t0.c2, t0.c2, t0.c2))<((t0.c2, t0.c68, t0.c68, t0.c68, 0Xffffffffc41d0704))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c2, t0.c68, t0.c2, t0.c2, t0.c2))<((t0.c2, t0.c68, t0.c68, t0.c68, 0Xffffffffc41d0704))) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c2, t0.c68, t0.c2, t0.c2, t0.c2))<((t0.c2, t0.c68, t0.c68, t0.c68, 0Xffffffffc41d0704))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c2, t0.c68, t0.c2, t0.c2, t0.c2))<((t0.c2, t0.c68, t0.c68, t0.c68, 0Xffffffffc41d0704))) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((((t0.c2, t0.c68, t0.c2, t0.c2, t0.c2))<((t0.c2, t0.c68, t0.c68, t0.c68, 0Xffffffffc41d0704))) AS REAL));
SELECT COUNT(*) FROM vt0, t0 WHERE (0.10234734966583625) ORDER BY ((((((((x'b412')OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))OR(t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.10234734966583625) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((x'b412')OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))OR(t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.10234734966583625) ORDER BY ((((((((x'b412')OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))OR(t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.10234734966583625) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((x'b412')OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))OR(t0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0.10234734966583625) ORDER BY ((((((((x'b412')OR(t0.c68)))OR(vt0.c0)))AND(t0.c68)))OR(t0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((CASE t0.c2  WHEN vt0.c0 THEN x'eeb8' END IN (((t0.c68) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c2  WHEN vt0.c0 THEN x'eeb8' END IN (((t0.c68) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((CASE t0.c2  WHEN vt0.c0 THEN x'eeb8' END IN (((t0.c68) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c2  WHEN vt0.c0 THEN x'eeb8' END IN (((t0.c68) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((CASE t0.c2  WHEN vt0.c0 THEN x'eeb8' END IN (((t0.c68) NOTNULL))));
SELECT * FROM vt0 WHERE ((('-1182422323')<<((((vt0.c0))=((vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-1182422323')<<((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((('-1182422323')<<((((vt0.c0))=((vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-1182422323')<<((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((('-1182422323')<<((((vt0.c0))=((vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)AND(((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c2)) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE x'a825' END WHERE (((((t0.c68) NOTNULL))>>(((((vt0.c0)AND(t0.c2)))AND(vt0.c0))))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOTNULL))>>(((((vt0.c0)AND(t0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c2)) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE x'a825' END ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(NULL)) IN ()));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c2)) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE x'a825' END WHERE (((((t0.c68) NOTNULL))>>(((((vt0.c0)AND(t0.c2)))AND(vt0.c0))))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) NOTNULL))>>(((((vt0.c0)AND(t0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c2)) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE x'a825' END ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(NULL)) IN ()));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (NOT (t0.c2)) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE x'a825' END WHERE (((((t0.c68) NOTNULL))>>(((((vt0.c0)AND(t0.c2)))AND(vt0.c0))))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(NULL)) IN ());
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((TRIM(t0.c68)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)AND(t0.c2))))) ORDER BY CAST(((t0.c68)>(vt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c68)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)AND(t0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST(((t0.c68)>(vt0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((TRIM(t0.c68)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)AND(t0.c2))))) ORDER BY CAST(((t0.c68)>(vt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c68)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)AND(t0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST(((t0.c68)>(vt0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((TRIM(t0.c68)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)AND(t0.c2))))) ORDER BY CAST(((t0.c68)>(vt0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (t0.c68)))+((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) BETWEEN (t0.c2) AND (t0.c68)))+((NOT (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (t0.c68)))+((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c68) BETWEEN (t0.c2) AND (t0.c68)))+((NOT (t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c68) BETWEEN (t0.c2) AND (t0.c68)))+((NOT (t0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((0.2235495817663503 COLLATE RTRIM))<=((((t0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2235495817663503 COLLATE RTRIM))<=((((t0.c2) NOTNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((0.2235495817663503 COLLATE RTRIM))<=((((t0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2235495817663503 COLLATE RTRIM))<=((((t0.c2) NOTNULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((0.2235495817663503 COLLATE RTRIM))<=((((t0.c2) NOTNULL)))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (('hdxj?^0%' IN (t0.c2)) COLLATE BINARY) ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END) NOT BETWEEN ((NOT (vt0.c0))) AND ((t0.c68 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((('hdxj?^0%' IN (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END) NOT BETWEEN ((NOT (vt0.c0))) AND ((t0.c68 IN ()))) ASC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (('hdxj?^0%' IN (t0.c2)) COLLATE BINARY) ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END) NOT BETWEEN ((NOT (vt0.c0))) AND ((t0.c68 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((('hdxj?^0%' IN (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END) NOT BETWEEN ((NOT (vt0.c0))) AND ((t0.c68 IN ()))) ASC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (('hdxj?^0%' IN (t0.c2)) COLLATE BINARY) ORDER BY ((CASE t0.c2  WHEN t0.c68 THEN t0.c2 WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c2 END) NOT BETWEEN ((NOT (vt0.c0))) AND ((t0.c68 IN ()))) ASC;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((t0.c2) NOTNULL)) ORDER BY TRIM(DISTINCT t0.c68) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY TRIM(DISTINCT t0.c68) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((t0.c2) NOTNULL)) ORDER BY TRIM(DISTINCT t0.c68) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY TRIM(DISTINCT t0.c68) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((t0.c2) NOTNULL)) ORDER BY TRIM(DISTINCT t0.c68) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1207868937' END IN ())) ORDER BY ((vt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1207868937' END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1207868937' END IN ())) ORDER BY ((vt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1207868937' END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1207868937' END IN ())) ORDER BY ((vt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM t0 WHERE (((t0.c68) IS FALSE) COLLATE NOCASE) ORDER BY ((RTRIM(t0.c68))=(((t0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c68) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((RTRIM(t0.c68))==(((t0.c2) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c68) IS FALSE) COLLATE NOCASE) ORDER BY ((RTRIM(t0.c68))=(((t0.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c68) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((RTRIM(t0.c68))==(((t0.c2) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c68) IS FALSE) COLLATE NOCASE) ORDER BY ((RTRIM(t0.c68))=(((t0.c2) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY json_extract((+ (vt0.c0)), UNLIKELY(vt0.c0), 0X37b1af2b, vt0.c0);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json_extract((+ (vt0.c0)), UNLIKELY(vt0.c0), 0x37b1af2b, vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY json_extract((+ (vt0.c0)), UNLIKELY(vt0.c0), 0X37b1af2b, vt0.c0);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY json_extract((+ (vt0.c0)), UNLIKELY(vt0.c0), 0x37b1af2b, vt0.c0));
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt0.c0))>((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt0.c0))>((vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt0.c0))>((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt0.c0))>((vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt0.c0))>((vt0.c0))))) ASC;
SELECT ALL * FROM t0, vt0 WHERE ((+ ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ ((t0.c68 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((t0.c68 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ ((t0.c68 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c68) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0  NULLS FIRST, ((SQLITE_VERSION())<=(((NULL) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, ((SQLITE_VERSION())<=(((NULL) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0  NULLS FIRST, ((SQLITE_VERSION())<=(((NULL) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, ((SQLITE_VERSION())<=(((NULL) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0  NULLS FIRST, ((SQLITE_VERSION())<=(((NULL) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ROUND(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((0.7450900190987398)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ROUND(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((0.7450900190987398)) AND ((vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ROUND(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((0.7450900190987398)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ROUND(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((0.7450900190987398)) AND ((vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ROUND(vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((0.7450900190987398)) AND ((vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68)OR(CAST('2004278065' AS REAL))))OR(x'02e1' COLLATE NOCASE)) WHERE ((((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(x'4a9c7a26')));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(x'4a9c7a26'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68)OR(CAST('2004278065' AS REAL))))OR(x'02e1' COLLATE NOCASE)));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68)OR(CAST('2004278065' AS REAL))))OR(x'02e1' COLLATE NOCASE)) WHERE ((((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(x'4a9c7a26')));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(x'4a9c7a26'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68)OR(CAST('2004278065' AS REAL))))OR(x'02e1' COLLATE NOCASE)));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c68)OR(CAST('2004278065' AS REAL))))OR(x'02e1' COLLATE NOCASE)) WHERE ((((((t0.c68)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(x'4a9c7a26')));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (t0.c2))) NOT NULL)) ORDER BY (LOWER(DISTINCT t0.c2) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (LOWER(DISTINCT t0.c2) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (t0.c2))) NOT NULL)) ORDER BY (LOWER(DISTINCT t0.c2) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (LOWER(DISTINCT t0.c2) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((~ (t0.c2))) NOT NULL)) ORDER BY (LOWER(DISTINCT t0.c2) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)IS(t0.c68)) IN ((- (t0.c68))))) ORDER BY 'c6xI' DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2)IS(t0.c68)) IN ((- (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY 'c6xI' DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)IS(t0.c68)) IN ((- (t0.c68))))) ORDER BY 'c6xI' DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2)IS(t0.c68)) IN ((- (t0.c68))))) IS TRUE)  as count FROM t0 ORDER BY 'c6xI' DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)IS(t0.c68)) IN ((- (t0.c68))))) ORDER BY 'c6xI' DESC;
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END IN ())) ORDER BY ((t0.c68 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c68 IN ()) IN ()) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END IN ())) ORDER BY ((t0.c68 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c68 IN ()) IN ()) ASC);
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c68 END IN ())) ORDER BY ((t0.c68 IN ()) IN ()) ASC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c2)OR(x'')))OR(0.2840283056386994)))<=(LIKELIHOOD(t0.c68, 0.23945581666015814))) WHERE (CASE t0.c2 COLLATE RTRIM  WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)<(t0.c2)) WHEN ((((t0.c2)AND(t0.c68)))AND(t0.c2)) THEN ((0.3933413920328016)OR(t0.c2)) END) ORDER BY load_extension(SUBSTR(vt0.c0, NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2 COLLATE RTRIM  WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)<(t0.c2)) WHEN ((((t0.c2)AND(t0.c68)))AND(t0.c2)) THEN ((0.3933413920328016)OR(t0.c2)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c2)OR(x'')))OR(0.2840283056386994)))<=(LIKELIHOOD(t0.c68, 0.23945581666015814))) ORDER BY load_extension(SUBSTR(vt0.c0, NULL)) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c2)OR(x'')))OR(0.2840283056386994)))<=(LIKELIHOOD(t0.c68, 0.23945581666015814))) WHERE (CASE t0.c2 COLLATE RTRIM  WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)<(t0.c2)) WHEN ((((t0.c2)AND(t0.c68)))AND(t0.c2)) THEN ((0.3933413920328016)OR(t0.c2)) END) ORDER BY load_extension(SUBSTR(vt0.c0, NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2 COLLATE RTRIM  WHEN vt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((t0.c68) BETWEEN (t0.c2) AND (t0.c2)) THEN ((vt0.c0)<(t0.c2)) WHEN ((((t0.c2)AND(t0.c68)))AND(t0.c2)) THEN ((0.3933413920328016)OR(t0.c2)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((t0.c2)OR(x'')))OR(0.2840283056386994)))<=(LIKELIHOOD(t0.c68, 0.23945581666015814))) ORDER BY load_extension(SUBSTR(vt0.c0, NULL)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((CAST(vt0.c0 AS REAL))AND(NULLIF(t0.c68, vt0.c0))))OR((- (t0.c2)))))AND(CASE WHEN t0.c68 THEN t0.c2 END)))AND(''))) ORDER BY (((vt0.c0)) BETWEEN (((((('	᷋-1')OR(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))AND(NULLIF(t0.c68, vt0.c0))))OR((- (t0.c2)))))AND(CASE WHEN t0.c68 THEN t0.c2 END)))AND(''))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((((('	᷋-1')OR(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((CAST(vt0.c0 AS REAL))AND(NULLIF(t0.c68, vt0.c0))))OR((- (t0.c2)))))AND(CASE WHEN t0.c68 THEN t0.c2 END)))AND(''))) ORDER BY (((vt0.c0)) BETWEEN (((((('	᷋-1')OR(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))AND(NULLIF(t0.c68, vt0.c0))))OR((- (t0.c2)))))AND(CASE WHEN t0.c68 THEN t0.c2 END)))AND(''))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((((('	᷋-1')OR(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((CAST(vt0.c0 AS REAL))AND(NULLIF(t0.c68, vt0.c0))))OR((- (t0.c2)))))AND(CASE WHEN t0.c68 THEN t0.c2 END)))AND(''))) ORDER BY (((vt0.c0)) BETWEEN (((((('	᷋-1')OR(t0.c2)))OR(t0.c68)))) AND ((((((t0.c2)OR(t0.c2)))AND(vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((+ (vt0.c0)))<('-845478995')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((+ (vt0.c0)))<('-845478995')));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((+ (vt0.c0)))<('-845478995')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((+ (vt0.c0)))<('-845478995')));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((+ (vt0.c0)))<('-845478995')) WHERE (vt0.c0);
SELECT ALL * FROM t0 WHERE (TRIM(json_valid(t0.c68))) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2))>=((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(json_valid(t0.c68))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2))>=((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (TRIM(json_valid(t0.c68))) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2))>=((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(json_valid(t0.c68))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2))>=((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (TRIM(json_valid(t0.c68))) ORDER BY ((t0.c2 COLLATE BINARY) BETWEEN ((((t0.c2))>=((t0.c68)))) AND (((t0.c68) BETWEEN (t0.c68) AND (t0.c68)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC, CAST(TYPEOF(vt0.c0) AS NUMERIC) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC, CAST(TYPEOF(vt0.c0) AS NUMERIC) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC, CAST(TYPEOF(vt0.c0) AS NUMERIC) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC, CAST(TYPEOF(vt0.c0) AS NUMERIC) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC, CAST(TYPEOF(vt0.c0) AS NUMERIC) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (json_type(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_type(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (json_type(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_type(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c2 THEN vt0.c0 WHEN t0.c68 THEN t0.c2 ELSE t0.c68 END)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c68 IN ()))AND(t0.c68)))AND(CAST(t0.c2 AS NUMERIC))))AND(x'beb4aea9')))OR((((t0.c2, t0.c68, t0.c2))>=((t0.c2, NULL, x''))))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c68 IN ()))AND(t0.c68)))AND(CAST(t0.c2 AS NUMERIC))))AND(x'beb4aea9')))OR((((t0.c2, t0.c68, t0.c2))>=((t0.c2, NULL, x'')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c68 IN ()))AND(t0.c68)))AND(CAST(t0.c2 AS NUMERIC))))AND(x'beb4aea9')))OR((((t0.c2, t0.c68, t0.c2))>=((t0.c2, NULL, x''))))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c68 IN ()))AND(t0.c68)))AND(CAST(t0.c2 AS NUMERIC))))AND(x'beb4aea9')))OR((((t0.c2, t0.c68, t0.c2))>=((t0.c2, NULL, x'')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((((t0.c68 IN ()))AND(t0.c68)))AND(CAST(t0.c2 AS NUMERIC))))AND(x'beb4aea9')))OR((((t0.c2, t0.c68, t0.c2))>=((t0.c2, NULL, x''))))));
SELECT * FROM vt0, t0 WHERE (LENGTH((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE RTRIM DESC, CAST(CAST(t0.c2 AS BLOB) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0))=((vt0.c0))) COLLATE RTRIM DESC, CAST(CAST(t0.c2 AS BLOB) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (LENGTH((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE RTRIM DESC, CAST(CAST(t0.c2 AS BLOB) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LENGTH((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0))=((vt0.c0))) COLLATE RTRIM DESC, CAST(CAST(t0.c2 AS BLOB) AS TEXT)  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (LENGTH((((t0.c68)) BETWEEN ((vt0.c0)) AND ((t0.c2))))) ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE RTRIM DESC, CAST(CAST(t0.c2 AS BLOB) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))))OR((+ (vt0.c0)))))OR(vt0.c0)) ASC, (x'c2a0' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))))OR((+ (vt0.c0)))))OR(vt0.c0)) ASC, (x'c2a0' IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))))OR((+ (vt0.c0)))))OR(vt0.c0)) ASC, (x'c2a0' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))))OR((+ (vt0.c0)))))OR(vt0.c0)) ASC, (x'c2a0' IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((((vt0.c0)LIKE(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))))OR((+ (vt0.c0)))))OR(vt0.c0)) ASC, (x'c2a0' IN ()) DESC;
SELECT ALL * FROM t0 WHERE ((t0.c68 IN ()) COLLATE NOCASE) ORDER BY ((LOWER(t0.c2)) BETWEEN ((((t0.c68))<((t0.c68)))) AND (t0.c2)) ASC, (NULLIF(DISTINCT t0.c2, t0.c68) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), ABS(t0.c68), ((t0.c68) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(t0.c2)) BETWEEN ((((t0.c68))<((t0.c68)))) AND (t0.c2)) ASC, (NULLIF(DISTINCT t0.c2, t0.c68) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), ABS(t0.c68), ((t0.c68) NOT NULL))));
SELECT ALL * FROM t0 WHERE ((t0.c68 IN ()) COLLATE NOCASE) ORDER BY ((LOWER(t0.c2)) BETWEEN ((((t0.c68))<((t0.c68)))) AND (t0.c2)) ASC, (NULLIF(DISTINCT t0.c2, t0.c68) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), ABS(t0.c68), ((t0.c68) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c68 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(t0.c2)) BETWEEN ((((t0.c68))<((t0.c68)))) AND (t0.c2)) ASC, (NULLIF(DISTINCT t0.c2, t0.c68) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), ABS(t0.c68), ((t0.c68) NOT NULL))));
SELECT ALL * FROM t0 WHERE ((t0.c68 IN ()) COLLATE NOCASE) ORDER BY ((LOWER(t0.c2)) BETWEEN ((((t0.c68))<((t0.c68)))) AND (t0.c2)) ASC, (NULLIF(DISTINCT t0.c2, t0.c68) IN (((((t0.c68)OR(t0.c68)))AND(t0.c68)), ABS(t0.c68), ((t0.c68) NOT NULL)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68) NOTNULL) IN ())) ORDER BY ((((t0.c68)IS(t0.c68)))||(((t0.c2) NOT NULL))) DESC, (t0.c2 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) NOTNULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)IS(t0.c68)))||(((t0.c2) NOT NULL))) DESC, (t0.c2 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68) NOTNULL) IN ())) ORDER BY ((((t0.c68)IS(t0.c68)))||(((t0.c2) NOT NULL))) DESC, (t0.c2 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c68) NOTNULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)IS(t0.c68)))||(((t0.c2) NOT NULL))) DESC, (t0.c2 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c68) NOTNULL) IN ())) ORDER BY ((((t0.c68)IS(t0.c68)))||(((t0.c2) NOT NULL))) DESC, (t0.c2 IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)*(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)*(vt0.c0)))<<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)*(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)*(vt0.c0)))<<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2)*(vt0.c0)))<<(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(0.2454109347370459 AS NUMERIC) WHERE (LIKELY(((((((((((((vt0.c0)AND(NULL)))OR(t0.c2)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((((((vt0.c0)AND(NULL)))OR(t0.c2)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(vt0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(0.2454109347370459 AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(0.2454109347370459 AS NUMERIC) WHERE (LIKELY(((((((((((((vt0.c0)AND(NULL)))OR(t0.c2)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((((((vt0.c0)AND(NULL)))OR(t0.c2)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(vt0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(0.2454109347370459 AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(0.2454109347370459 AS NUMERIC) WHERE (LIKELY(((((((((((((vt0.c0)AND(NULL)))OR(t0.c2)))OR(t0.c68)))OR(t0.c68)))OR(t0.c68)))OR(vt0.c0))));
SELECT COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(DISTINCT ((((t0.c68)OR(t0.c68)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((t0.c68)OR(t0.c68)))OR(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(DISTINCT ((((t0.c68)OR(t0.c68)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((((t0.c68)OR(t0.c68)))OR(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(DISTINCT ((((t0.c68)OR(t0.c68)))OR(t0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (CASE t0.c2  WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c2  WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (CASE t0.c2  WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c2  WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (CASE t0.c2  WHEN '' THEN t0.c2 WHEN t0.c2 THEN t0.c68 WHEN t0.c68 THEN t0.c68 ELSE t0.c68 END)));
SELECT COUNT(*) FROM t0 WHERE ((x'' IN ())) ORDER BY ((((((((((t0.c68)==(t0.c2)))OR(((t0.c2)<>(t0.c2)))))OR(t0.c2)))OR(TYPEOF(DISTINCT ' ZR'))))OR(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))) ASC, ((((t0.c2)/(t0.c68)))<(((t0.c68)<>(t0.c2)))) ASC, ((UPPER(DISTINCT t0.c2)) BETWEEN ((+ (x''))) AND ((NOT (t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c68)=(t0.c2)))OR(((t0.c2)<>(t0.c2)))))OR(t0.c2)))OR(TYPEOF(DISTINCT ' ZR'))))OR(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))) ASC, ((((t0.c2)/(t0.c68)))<(((t0.c68)<>(t0.c2)))) ASC, ((UPPER(DISTINCT t0.c2)) BETWEEN ((+ (x''))) AND ((NOT (t0.c68))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((x'' IN ())) ORDER BY ((((((((((t0.c68)==(t0.c2)))OR(((t0.c2)<>(t0.c2)))))OR(t0.c2)))OR(TYPEOF(DISTINCT ' ZR'))))OR(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))) ASC, ((((t0.c2)/(t0.c68)))<(((t0.c68)<>(t0.c2)))) ASC, ((UPPER(DISTINCT t0.c2)) BETWEEN ((+ (x''))) AND ((NOT (t0.c68))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c68)=(t0.c2)))OR(((t0.c2)<>(t0.c2)))))OR(t0.c2)))OR(TYPEOF(DISTINCT ' ZR'))))OR(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))) ASC, ((((t0.c2)/(t0.c68)))<(((t0.c68)<>(t0.c2)))) ASC, ((UPPER(DISTINCT t0.c2)) BETWEEN ((+ (x''))) AND ((NOT (t0.c68))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((x'' IN ())) ORDER BY ((((((((((t0.c68)==(t0.c2)))OR(((t0.c2)<>(t0.c2)))))OR(t0.c2)))OR(TYPEOF(DISTINCT ' ZR'))))OR(((t0.c68) NOT BETWEEN (t0.c2) AND (t0.c2)))) ASC, ((((t0.c2)/(t0.c68)))<(((t0.c68)<>(t0.c2)))) ASC, ((UPPER(DISTINCT t0.c2)) BETWEEN ((+ (x''))) AND ((NOT (t0.c68))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2))>((t0.c68))) COLLATE BINARY WHERE (CASE CAST(t0.c68 AS NUMERIC)  WHEN ((t0.c68) ISNULL) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE ((((((((t0.c68)OR(t0.c2)))AND(1560211396)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((t0.c68 IN ()) IN ()) ASC  NULLS LAST, '658126562' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c68 AS NUMERIC)  WHEN ((t0.c68) ISNULL) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE ((((((((t0.c68)OR(t0.c2)))AND(1560211396)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2))>((t0.c68))) COLLATE BINARY ORDER BY ((t0.c68 IN ()) IN ()) ASC  NULLS LAST, '658126562' DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2))>((t0.c68))) COLLATE BINARY WHERE (CASE CAST(t0.c68 AS NUMERIC)  WHEN ((t0.c68) ISNULL) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE ((((((((t0.c68)OR(t0.c2)))AND(1560211396)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((t0.c68 IN ()) IN ()) ASC  NULLS LAST, '658126562' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c68 AS NUMERIC)  WHEN ((t0.c68) ISNULL) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE ((((((((t0.c68)OR(t0.c2)))AND(1560211396)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2))>((t0.c68))) COLLATE BINARY ORDER BY ((t0.c68 IN ()) IN ()) ASC  NULLS LAST, '658126562' DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((t0.c2))>((t0.c68))) COLLATE BINARY WHERE (CASE CAST(t0.c68 AS NUMERIC)  WHEN ((t0.c68) ISNULL) THEN ((((t0.c2)AND(vt0.c0)))OR(vt0.c0)) ELSE ((((((((t0.c68)OR(t0.c2)))AND(1560211396)))OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((t0.c68 IN ()) IN ()) ASC  NULLS LAST, '658126562' DESC;
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN NULLIF(DISTINCT vt0.c0, '-980452921') END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, 'yu Y	', vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0, 0.33038994946798717, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -0.0 THEN 'Mp(|' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, (NOT (vt0.c0)), ((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN NULLIF(DISTINCT vt0.c0, '-980452921') END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, 'yu Y	', vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0, 0.33038994946798717, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -0.0 THEN 'Mp(|' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, (NOT (vt0.c0)), ((vt0.c0)=(vt0.c0))))));
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN NULLIF(DISTINCT vt0.c0, '-980452921') END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, 'yu Y	', vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0, 0.33038994946798717, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -0.0 THEN 'Mp(|' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, (NOT (vt0.c0)), ((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN NULLIF(DISTINCT vt0.c0, '-980452921') END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, 'yu Y	', vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0, 0.33038994946798717, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -0.0 THEN 'Mp(|' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, (NOT (vt0.c0)), ((vt0.c0)=(vt0.c0))))));
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN NULLIF(DISTINCT vt0.c0, '-980452921') END) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, 'yu Y	', vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)), ((vt0.c0)&(vt0.c0)), vt0.c0, 0.33038994946798717, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -0.0 THEN 'Mp(|' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, (NOT (vt0.c0)), ((vt0.c0)==(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0Xffffffffd7733147)+(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffd7733147)+(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0Xffffffffd7733147)+(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffd7733147)+(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0Xffffffffd7733147)+(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (+ (t0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (+ (t0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (+ (t0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY ((vt0.c0 IN ()) IN ());
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c68))>((0.5022648250833371)))) ISNULL) WHERE ((- (t0.c2))) ORDER BY ((((x'')<=(x'')))|(((((vt0.c0)AND(t0.c68)))AND(t0.c2)))) ASC, (((t0.c68 IN (vt0.c0, t0.c68))) NOT BETWEEN (t0.c68 COLLATE BINARY) AND (((vt0.c0)GLOB(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c2))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c68))>((0.5022648250833371)))) ISNULL) ORDER BY ((((x'')<=(x'')))|(((((vt0.c0)AND(t0.c68)))AND(t0.c2)))) ASC, (((t0.c68 IN (vt0.c0, t0.c68))) NOT BETWEEN (t0.c68 COLLATE BINARY) AND (((vt0.c0)GLOB(t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c68))>((0.5022648250833371)))) ISNULL) WHERE ((- (t0.c2))) ORDER BY ((((x'')<=(x'')))|(((((vt0.c0)AND(t0.c68)))AND(t0.c2)))) ASC, (((t0.c68 IN (vt0.c0, t0.c68))) NOT BETWEEN (t0.c68 COLLATE BINARY) AND (((vt0.c0)GLOB(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c2))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c68))>((0.5022648250833371)))) ISNULL) ORDER BY ((((x'')<=(x'')))|(((((vt0.c0)AND(t0.c68)))AND(t0.c2)))) ASC, (((t0.c68 IN (vt0.c0, t0.c68))) NOT BETWEEN (t0.c68 COLLATE BINARY) AND (((vt0.c0)GLOB(t0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((t0.c68))>((0.5022648250833371)))) ISNULL) WHERE ((- (t0.c2))) ORDER BY ((((x'')<=(x'')))|(((((vt0.c0)AND(t0.c68)))AND(t0.c2)))) ASC, (((t0.c68 IN (vt0.c0, t0.c68))) NOT BETWEEN (t0.c68 COLLATE BINARY) AND (((vt0.c0)GLOB(t0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((('Y#K')<(((t0.c2)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((('Y#K')<(((t0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((('Y#K')<(((t0.c2)<=(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((('Y#K')<(((t0.c2)<=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((('Y#K')<(((t0.c2)<=(t0.c2)))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)IS NOT(t0.c68)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)IS NOT(t0.c68)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)IS NOT(t0.c68)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)IS NOT(t0.c68)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)IS NOT(t0.c68)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY COALESCE(CAST(t0.c68 AS INTEGER), t0.c2), (((CASE t0.c2  WHEN 0.1570081795253443 THEN t0.c2 END))<>((NULL))), ((0.3443728199459878) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY COALESCE(CAST(t0.c68 AS INTEGER), t0.c2), (((CASE t0.c2  WHEN 0.1570081795253443 THEN t0.c2 END))!=((NULL))), ((0.3443728199459878) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY COALESCE(CAST(t0.c68 AS INTEGER), t0.c2), (((CASE t0.c2  WHEN 0.1570081795253443 THEN t0.c2 END))<>((NULL))), ((0.3443728199459878) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c68) IS TRUE)  as count FROM t0 ORDER BY COALESCE(CAST(t0.c68 AS INTEGER), t0.c2), (((CASE t0.c2  WHEN 0.1570081795253443 THEN t0.c2 END))!=((NULL))), ((0.3443728199459878) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c68) ORDER BY COALESCE(CAST(t0.c68 AS INTEGER), t0.c2), (((CASE t0.c2  WHEN 0.1570081795253443 THEN t0.c2 END))<>((NULL))), ((0.3443728199459878) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((LIKE(t0.c68, t0.c68))LIKE(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((LIKE(t0.c68, t0.c68))LIKE(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((LIKE(t0.c68, t0.c68))LIKE(t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((LIKE(t0.c68, t0.c68))LIKE(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((LIKE(t0.c68, t0.c68))LIKE(t0.c2 COLLATE BINARY)));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)&(t0.c2)) IN (CAST(t0.c68 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(t0.c2)) IN (CAST(t0.c68 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)&(t0.c2)) IN (CAST(t0.c68 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)&(t0.c2)) IN (CAST(t0.c68 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)&(t0.c2)) IN (CAST(t0.c68 AS NUMERIC))));
SELECT * FROM vt0, t0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2)>(t0.c2))) AND (((t0.c2) IS FALSE)))) ORDER BY TRIM((~ (t0.c68))) DESC  NULLS FIRST, UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2)>(t0.c2))) AND (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY TRIM((~ (t0.c68))) DESC  NULLS FIRST, UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68))));
SELECT * FROM vt0, t0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2)>(t0.c2))) AND (((t0.c2) IS FALSE)))) ORDER BY TRIM((~ (t0.c68))) DESC  NULLS FIRST, UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2)>(t0.c2))) AND (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY TRIM((~ (t0.c68))) DESC  NULLS FIRST, UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68))));
SELECT * FROM vt0, t0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c2)>(t0.c2))) AND (((t0.c2) IS FALSE)))) ORDER BY TRIM((~ (t0.c68))) DESC  NULLS FIRST, UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c68)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN 0.4877148930188644 THEN t0.c68 WHEN t0.c2 THEN t0.c2 END  WHEN t0.c2 THEN (((t0.c2))<=((t0.c68))) END) ORDER BY CAST(((t0.c68) NOTNULL) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN 0.4877148930188644 THEN t0.c68 WHEN t0.c2 THEN t0.c2 END  WHEN t0.c2 THEN (((t0.c2))<=((t0.c68))) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c68) NOTNULL) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN 0.4877148930188644 THEN t0.c68 WHEN t0.c2 THEN t0.c2 END  WHEN t0.c2 THEN (((t0.c2))<=((t0.c68))) END) ORDER BY CAST(((t0.c68) NOTNULL) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN 0.4877148930188644 THEN t0.c68 WHEN t0.c2 THEN t0.c2 END  WHEN t0.c2 THEN (((t0.c2))<=((t0.c68))) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c68) NOTNULL) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c68  WHEN t0.c2 THEN t0.c2 WHEN 0.4877148930188644 THEN t0.c68 WHEN t0.c2 THEN t0.c2 END  WHEN t0.c2 THEN (((t0.c2))<=((t0.c68))) END) ORDER BY CAST(((t0.c68) NOTNULL) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c0)AND(((t0.c68)OR(vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR((- (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((t0.c68)OR(vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR((- (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c0)AND(((t0.c68)OR(vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR((- (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((t0.c68)OR(vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR((- (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((((vt0.c0)AND(((t0.c68)OR(vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR((- (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0))))));
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN '-430280973' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN '-430280973' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN '-430280973' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN '-430280973' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN '-430280973' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD((- (t0.c68)), 0.2532237222221714)) ORDER BY ((((t0.c68)IS(t0.c68)))>(CAST(t0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((- (t0.c68)), 0.2532237222221714)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)IS(t0.c68)))>(CAST(t0.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD((- (t0.c68)), 0.2532237222221714)) ORDER BY ((((t0.c68)IS(t0.c68)))>(CAST(t0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((- (t0.c68)), 0.2532237222221714)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c68)IS(t0.c68)))>(CAST(t0.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (LIKELIHOOD((- (t0.c68)), 0.2532237222221714)) ORDER BY ((((t0.c68)IS(t0.c68)))>(CAST(t0.c2 AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON '' WHERE ((CAST(t0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '');
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON '' WHERE ((CAST(t0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS REAL) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON '');
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON '' WHERE ((CAST(t0.c2 AS REAL) IN ()));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c2)*(t0.c2))  WHEN (0.924271112972355 IN ()) THEN t0.c68 END) ORDER BY ABS(((((0.8752152445619448)AND(t0.c68)))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)*(t0.c2))  WHEN (0.924271112972355 IN ()) THEN t0.c68 END) IS TRUE)  as count FROM t0 ORDER BY ABS(((((0.8752152445619448)AND(t0.c68)))OR(t0.c2))));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c2)*(t0.c2))  WHEN (0.924271112972355 IN ()) THEN t0.c68 END) ORDER BY ABS(((((0.8752152445619448)AND(t0.c68)))OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)*(t0.c2))  WHEN (0.924271112972355 IN ()) THEN t0.c68 END) IS TRUE)  as count FROM t0 ORDER BY ABS(((((0.8752152445619448)AND(t0.c68)))OR(t0.c2))));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c2)*(t0.c2))  WHEN (0.924271112972355 IN ()) THEN t0.c68 END) ORDER BY ABS(((((0.8752152445619448)AND(t0.c68)))OR(t0.c2)));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((t0.c68) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((t0.c68) IS FALSE) END ASC);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((t0.c68) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((t0.c68) IS FALSE) END ASC);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) ORDER BY CASE WHEN (t0.c2 IN ()) THEN ((t0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((t0.c68) IS FALSE) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((('(/')GLOB(CAST(t0.c2 AS INTEGER)))) ORDER BY 0Xffffffffe1ca163b DESC;
SELECT SUM(count) FROM (SELECT (((('(/')GLOB(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffe1ca163b DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((('(/')GLOB(CAST(t0.c2 AS INTEGER)))) ORDER BY 0Xffffffffe1ca163b DESC;
SELECT SUM(count) FROM (SELECT (((('(/')GLOB(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffe1ca163b DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((('(/')GLOB(CAST(t0.c2 AS INTEGER)))) ORDER BY 0Xffffffffe1ca163b DESC;
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c0, t0.c68, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '530337000' ELSE 0.9964936619769837 END, CASE t0.c68  WHEN t0.c2 THEN t0.c68 END, ((vt0.c0)&(vt0.c0)))) AND (((~ ('Gb<XnxSjv')), rtreenode(t0.c2, t0.c68), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t0.c68, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '530337000' ELSE 0.9964936619769837 END, CASE t0.c68  WHEN t0.c2 THEN t0.c68 END, ((vt0.c0)&(vt0.c0)))) AND (((~ ('Gb<XnxSjv')), rtreenode(t0.c2, t0.c68), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c0, t0.c68, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '530337000' ELSE 0.9964936619769837 END, CASE t0.c68  WHEN t0.c2 THEN t0.c68 END, ((vt0.c0)&(vt0.c0)))) AND (((~ ('Gb<XnxSjv')), rtreenode(t0.c2, t0.c68), CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t0.c68, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '530337000' ELSE 0.9964936619769837 END, CASE t0.c68  WHEN t0.c2 THEN t0.c68 END, ((vt0.c0)&(vt0.c0)))) AND (((~ ('Gb<XnxSjv')), rtreenode(t0.c2, t0.c68), CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE ((((vt0.c0, t0.c68, vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c68 THEN t0.c68 WHEN t0.c68 THEN '530337000' ELSE 0.9964936619769837 END, CASE t0.c68  WHEN t0.c2 THEN t0.c68 END, ((vt0.c0)&(vt0.c0)))) AND (((~ ('Gb<XnxSjv')), rtreenode(t0.c2, t0.c68), CAST(vt0.c0 AS NUMERIC)))));
SELECT ALL * FROM t0, vt0 WHERE ((('-737794648')GLOB(t0.c68)));
SELECT SUM(count) FROM (SELECT (((('-737794648')GLOB(t0.c68))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((('-737794648')GLOB(t0.c68)));
SELECT SUM(count) FROM (SELECT (((('-737794648')GLOB(t0.c68))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((('-737794648')GLOB(t0.c68)));
SELECT ALL COUNT(*) FROM t0 WHERE (0.37901833072203217);
SELECT SUM(count) FROM (SELECT ((0.37901833072203217) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.37901833072203217);
SELECT SUM(count) FROM (SELECT ((0.37901833072203217) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.37901833072203217);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY 578017242;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY 578017242);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY 578017242;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY 578017242);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.26038771451741394 ELSE x'' END)LIKE(LIKELIHOOD(vt0.c0, 0.9908837845209734)))) ORDER BY (- (((vt0.c0)>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0.26038771451741394 ELSE x'' END)LIKE(LIKELIHOOD(vt0.c0, 0.9908837845209734)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)>(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.26038771451741394 ELSE x'' END)LIKE(LIKELIHOOD(vt0.c0, 0.9908837845209734)))) ORDER BY (- (((vt0.c0)>(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0.26038771451741394 ELSE x'' END)LIKE(LIKELIHOOD(vt0.c0, 0.9908837845209734)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)>(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.26038771451741394 ELSE x'' END)LIKE(LIKELIHOOD(vt0.c0, 0.9908837845209734)))) ORDER BY (- (((vt0.c0)>(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (0.4144920480300375) AND (vt0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (0.4144920480300375) AND (vt0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (0.4144920480300375) AND (vt0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (0.4144920480300375) AND (vt0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (0.4144920480300375) AND (vt0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELY(CAST(vt0.c0 AS REAL))) ORDER BY ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2)))OR(vt0.c0)))AND(((vt0.c0)GLOB(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2)))OR(vt0.c0)))AND(((vt0.c0)GLOB(t0.c68)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELY(CAST(vt0.c0 AS REAL))) ORDER BY ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2)))OR(vt0.c0)))AND(((vt0.c0)GLOB(t0.c68)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2)))OR(vt0.c0)))AND(((vt0.c0)GLOB(t0.c68)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELY(CAST(vt0.c0 AS REAL))) ORDER BY ((((((vt0.c0) NOT BETWEEN (t0.c68) AND (t0.c2)))OR(vt0.c0)))AND(((vt0.c0)GLOB(t0.c68)))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68, t0.c2, t0.c68, t0.c68, t0.c2)) NOT BETWEEN (((~ (t0.c68)), ((((0.2454109347370459)OR(vt0.c0)))AND(t0.c2)), vt0.c0, ((vt0.c0) ISNULL), ((((((((x'')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((t0.c68 COLLATE NOCASE, x'', (((t0.c68))==((t0.c68))), ((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c2)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)), ((5.09170852E8) BETWEEN (vt0.c0) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68, t0.c2, t0.c68, t0.c68, t0.c2)) NOT BETWEEN (((~ (t0.c68)), ((((0.2454109347370459)OR(vt0.c0)))AND(t0.c2)), vt0.c0, ((vt0.c0) ISNULL), ((((((((x'')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((t0.c68 COLLATE NOCASE, x'', (((t0.c68))==((t0.c68))), ((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c2)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)), ((5.09170852E8) BETWEEN (vt0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68, t0.c2, t0.c68, t0.c68, t0.c2)) NOT BETWEEN (((~ (t0.c68)), ((((0.2454109347370459)OR(vt0.c0)))AND(t0.c2)), vt0.c0, ((vt0.c0) ISNULL), ((((((((x'')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((t0.c68 COLLATE NOCASE, x'', (((t0.c68))==((t0.c68))), ((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c2)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)), ((5.09170852E8) BETWEEN (vt0.c0) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c68, t0.c2, t0.c68, t0.c68, t0.c2)) NOT BETWEEN (((~ (t0.c68)), ((((0.2454109347370459)OR(vt0.c0)))AND(t0.c2)), vt0.c0, ((vt0.c0) ISNULL), ((((((((x'')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((t0.c68 COLLATE NOCASE, x'', (((t0.c68))==((t0.c68))), ((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c2)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)), ((5.09170852E8) BETWEEN (vt0.c0) AND (t0.c2)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c68, t0.c2, t0.c68, t0.c68, t0.c2)) NOT BETWEEN (((~ (t0.c68)), ((((0.2454109347370459)OR(vt0.c0)))AND(t0.c2)), vt0.c0, ((vt0.c0) ISNULL), ((((((((x'')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((t0.c68 COLLATE NOCASE, x'', (((t0.c68))==((t0.c68))), ((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c2)))OR(t0.c68)))OR(vt0.c0)))AND(t0.c2)))AND(t0.c2)), ((5.09170852E8) BETWEEN (vt0.c0) AND (t0.c2))))));
