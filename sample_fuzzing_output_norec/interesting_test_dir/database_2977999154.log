-- Time: 2024/06/09 07:15:16
-- Database: database54
-- Database version: 3.40.0
-- seed value: 2977999154
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT DISTINCT ('' IN (COUNT(vt0.c0))), CAST(vt0.c0 AS REAL), (NOT ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0.6272289757359512, vt0.c0))))) FROM vt0; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1981043829'), (x'b2c5f5c8'), (-1.981043829E9); -- 0ms;
REINDEX; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-1981043829'); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED, languageid="lid"); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('') WHERE ((TYPEOF(vt0.c0))<=((- (vt0.c0)))); -- 0ms;
REINDEX  vt1; -- 0ms;
ANALYZE; -- 0ms;
DROP VIEW v0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.cache_size = 1101826885337888457; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'c770'); -- 0ms;
PRAGMA main.default_cache_size = -1807182851; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1945875151); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
UPDATE OR IGNORE vt1 SET lid=1581258058 WHERE ((((vt1.c1)<<('98b76N6h')))<(TRIM(DISTINCT vt1.lid, vt1.c1))); -- 0ms;
INSERT OR ABORT INTO vt1(lid, c1) VALUES ('1602881944', 0.1492607316101351); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53874'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1872090181); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.5445965142997301), (x''), (0.0912647060525007); -- 0ms;
ANALYZE main; -- 2ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1830838617); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES ('崖~L', 'sHZv'), ('J]', 0.49079419094406584), (x'', -1632678346); -- 1ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1908157211 noskipscan'); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ((NULL) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (-635086433)); -- 1ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
PRAGMA soft_heap_limit = 5627788711322621456; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), ('崖~l'), (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 924322157); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=391122414,13');\n; -- 0ms;
PRAGMA main.soft_heap_limit = 5627788711322621456; -- 0ms;
INSERT OR FAIL INTO vt1(lid, c0) VALUES (x'', 0.49079419094406584); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1546122067); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('#eS4嬨') ISNULL)))>((x'2f9d'))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2000639456,4');\n; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 7315108836685463332);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (x''); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0='' WHERE (((0.2599698360747372)) BETWEEN ((((vt1.c1) NOTNULL))) AND ((((((vt1.c1)AND(vt1.c0)))AND(vt1.lid))))); -- 1ms;
UPDATE vt0 SET c0=NULL; -- 1ms;
UPDATE OR FAIL vt0 SET (c0, c0)=('1945875151', 0.9083693258603925) WHERE vt0.c0; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1 WHERE (x'') ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND ((('s(嗠C	r') BETWEEN (vt1.lid) AND (vt1.c0)))), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND ((('s(嗠C	r') BETWEEN (vt1.lid) AND (vt1.c0)))), NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (x'') ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND ((('s(嗠C	r') BETWEEN (vt1.lid) AND (vt1.c0)))), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND ((('s(嗠C	r') BETWEEN (vt1.lid) AND (vt1.c0)))), NULL  NULLS LAST);
SELECT * FROM vt1 WHERE (x'') ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND ((('s(嗠C	r') BETWEEN (vt1.lid) AND (vt1.c0)))), NULL  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0)))) BETWEEN (((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) AND ((((vt1.lid, vt1.c1, vt0.c0))>((vt1.c0, vt1.c1, vt1.c1)))))) ORDER BY CAST(((vt0.c0)*(vt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0)))) BETWEEN (((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) AND ((((vt1.lid, vt1.c1, vt0.c0))>((vt1.c0, vt1.c1, vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0)*(vt1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0)))) BETWEEN (((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) AND ((((vt1.lid, vt1.c1, vt0.c0))>((vt1.c0, vt1.c1, vt1.c1)))))) ORDER BY CAST(((vt0.c0)*(vt1.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0)))) BETWEEN (((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) AND ((((vt1.lid, vt1.c1, vt0.c0))>((vt1.c0, vt1.c1, vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0)*(vt1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt0.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0)))) BETWEEN (((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) AND ((((vt1.lid, vt1.c1, vt0.c0))>((vt1.c0, vt1.c1, vt1.c1)))))) ORDER BY CAST(((vt0.c0)*(vt1.c1)) AS NUMERIC);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.lid)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.lid)||(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.lid)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.lid)||(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.lid)||(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (vt1.lid)) COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (('1339217177') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.lid END) ORDER BY (CAST(vt1.lid AS TEXT) IN (CASE vt1.lid  WHEN vt1.c1 THEN NULL END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('1339217177') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.lid END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.lid AS TEXT) IN (CASE vt1.lid  WHEN vt1.c1 THEN NULL END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.lid))))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (('1339217177') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.lid END) ORDER BY (CAST(vt1.lid AS TEXT) IN (CASE vt1.lid  WHEN vt1.c1 THEN NULL END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('1339217177') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.lid END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.lid AS TEXT) IN (CASE vt1.lid  WHEN vt1.c1 THEN NULL END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.lid))))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (('1339217177') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.lid END) ORDER BY (CAST(vt1.lid AS TEXT) IN (CASE vt1.lid  WHEN vt1.c1 THEN NULL END, ((((vt0.c0)AND(vt1.c0)))OR(vt1.lid))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(0.0912647060525007 AS INTEGER))<>((vt0.c0 IN (NULL))))) ORDER BY ((((vt0.c0)>>(vt1.c1))) NOTNULL), (((vt1.c0) IS TRUE) IN (NULL)) DESC  NULLS FIRST, CAST(((vt0.c0)||(vt1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(0.0912647060525007 AS INTEGER))<>((vt0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)>>(vt1.c1))) NOTNULL), (((vt1.c0) IS TRUE) IN (NULL)) DESC  NULLS FIRST, CAST(((vt0.c0)||(vt1.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(0.0912647060525007 AS INTEGER))<>((vt0.c0 IN (NULL))))) ORDER BY ((((vt0.c0)>>(vt1.c1))) NOTNULL), (((vt1.c0) IS TRUE) IN (NULL)) DESC  NULLS FIRST, CAST(((vt0.c0)||(vt1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(0.0912647060525007 AS INTEGER))<>((vt0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)>>(vt1.c1))) NOTNULL), (((vt1.c0) IS TRUE) IN (NULL)) DESC  NULLS FIRST, CAST(((vt0.c0)||(vt1.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(0.0912647060525007 AS INTEGER))<>((vt0.c0 IN (NULL))))) ORDER BY ((((vt0.c0)>>(vt1.c1))) NOTNULL), (((vt1.c0) IS TRUE) IN (NULL)) DESC  NULLS FIRST, CAST(((vt0.c0)||(vt1.c0)) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)) IN ()));
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY 0.7735144711052039  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY 0.7735144711052039  NULLS FIRST);
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY 0.7735144711052039  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY 0.7735144711052039  NULLS FIRST);
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY 0.7735144711052039  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.lid)/(vt1.c0)))LIKE(CASE WHEN vt1.lid THEN vt1.c0 END))) ORDER BY ((((((vt1.c0)>=(vt1.lid)))OR(((vt1.lid)LIKE(vt1.c1)))))AND((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) DESC, ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((((vt0.c0))<((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)/(vt1.c0)))LIKE(CASE WHEN vt1.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)>=(vt1.lid)))OR(((vt1.lid)LIKE(vt1.c1)))))AND((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) DESC, ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((((vt0.c0))<((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.lid)/(vt1.c0)))LIKE(CASE WHEN vt1.lid THEN vt1.c0 END))) ORDER BY ((((((vt1.c0)>=(vt1.lid)))OR(((vt1.lid)LIKE(vt1.c1)))))AND((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) DESC, ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((((vt0.c0))<((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)/(vt1.c0)))LIKE(CASE WHEN vt1.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)>=(vt1.lid)))OR(((vt1.lid)LIKE(vt1.c1)))))AND((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) DESC, ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((((vt0.c0))<((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.lid)/(vt1.c0)))LIKE(CASE WHEN vt1.lid THEN vt1.c0 END))) ORDER BY ((((((vt1.c0)>=(vt1.lid)))OR(((vt1.lid)LIKE(vt1.c1)))))AND((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) DESC, ((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((((vt0.c0))<((vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (((0X4154c5e2)<(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (+ ((vt1.c1 IN ('7315108836685463332'))));
SELECT SUM(count) FROM (SELECT ALL ((((0x4154c5e2)<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((vt1.c1 IN ('7315108836685463332')))));
SELECT * FROM vt1, vt0 WHERE (((0X4154c5e2)<(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (+ ((vt1.c1 IN ('7315108836685463332'))));
SELECT SUM(count) FROM (SELECT ALL ((((0x4154c5e2)<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((vt1.c1 IN ('7315108836685463332')))));
SELECT * FROM vt1, vt0 WHERE (((0X4154c5e2)<(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (+ ((vt1.c1 IN ('7315108836685463332'))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (- (vt1.c0))  WHEN (((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((x'', vt1.lid, vt1.lid))) THEN ((vt0.c0)*(vt1.c1)) WHEN TRIM('7315108836685463332') THEN ((vt1.lid) NOTNULL) WHEN (NOT (vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END ELSE CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c0))  WHEN (((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((x'', vt1.lid, vt1.lid))) THEN ((vt0.c0)*(vt1.c1)) WHEN TRIM('7315108836685463332') THEN ((vt1.lid) NOTNULL) WHEN (NOT (vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END ELSE CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (- (vt1.c0))  WHEN (((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((x'', vt1.lid, vt1.lid))) THEN ((vt0.c0)*(vt1.c1)) WHEN TRIM('7315108836685463332') THEN ((vt1.lid) NOTNULL) WHEN (NOT (vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END ELSE CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt1.c0))  WHEN (((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((x'', vt1.lid, vt1.lid))) THEN ((vt0.c0)*(vt1.c1)) WHEN TRIM('7315108836685463332') THEN ((vt1.lid) NOTNULL) WHEN (NOT (vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END ELSE CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE (- (vt1.c0))  WHEN (((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((x'', vt1.lid, vt1.lid))) THEN ((vt0.c0)*(vt1.c1)) WHEN TRIM('7315108836685463332') THEN ((vt1.lid) NOTNULL) WHEN (NOT (vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END ELSE CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 END END);
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY ((vt0.c0 IN ()) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.34747728868958827)))AND(vt0.c0)) THEN 0.34365182585032916 WHEN vt0.c0 THEN CAST('鏽&2\)J' AS REAL) WHEN vt0.c0 COLLATE BINARY THEN ((-1.807182851E9)<=(vt0.c0)) WHEN '188970767' THEN ((vt0.c0)|(NULL)) END, (((vt0.c0, vt0.c0 COLLATE BINARY, LENGTH(vt0.c0)))<=((vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt0.c0)), TRIM(-1573987424))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.34747728868958827)))AND(vt0.c0)) THEN 0.34365182585032916 WHEN vt0.c0 THEN CAST('鏽&2\)J' AS REAL) WHEN vt0.c0 COLLATE BINARY THEN ((-1.807182851E9)<=(vt0.c0)) WHEN '188970767' THEN ((vt0.c0)|(NULL)) END, (((vt0.c0, vt0.c0 COLLATE BINARY, LENGTH(vt0.c0)))<=((vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt0.c0)), TRIM(-1573987424)))));
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY ((vt0.c0 IN ()) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.34747728868958827)))AND(vt0.c0)) THEN 0.34365182585032916 WHEN vt0.c0 THEN CAST('鏽&2\)J' AS REAL) WHEN vt0.c0 COLLATE BINARY THEN ((-1.807182851E9)<=(vt0.c0)) WHEN '188970767' THEN ((vt0.c0)|(NULL)) END, (((vt0.c0, vt0.c0 COLLATE BINARY, LENGTH(vt0.c0)))<=((vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt0.c0)), TRIM(-1573987424))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.34747728868958827)))AND(vt0.c0)) THEN 0.34365182585032916 WHEN vt0.c0 THEN CAST('鏽&2\)J' AS REAL) WHEN vt0.c0 COLLATE BINARY THEN ((-1.807182851E9)<=(vt0.c0)) WHEN '188970767' THEN ((vt0.c0)|(NULL)) END, (((vt0.c0, vt0.c0 COLLATE BINARY, LENGTH(vt0.c0)))<=((vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt0.c0)), TRIM(-1573987424)))));
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY ((vt0.c0 IN ()) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)>=(vt0.c0)) WHEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.34747728868958827)))AND(vt0.c0)) THEN 0.34365182585032916 WHEN vt0.c0 THEN CAST('鏽&2\)J' AS REAL) WHEN vt0.c0 COLLATE BINARY THEN ((-1.807182851E9)<=(vt0.c0)) WHEN '188970767' THEN ((vt0.c0)|(NULL)) END, (((vt0.c0, vt0.c0 COLLATE BINARY, LENGTH(vt0.c0)))<=((vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt0.c0)), TRIM(-1573987424))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) COLLATE BINARY WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)|(vt1.c1)))))AND(((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND('-587986998')))OR(vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)|(vt1.c1)))))AND(((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) COLLATE BINARY ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND('-587986998')))OR(vt1.c1)) IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) COLLATE BINARY WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)|(vt1.c1)))))AND(((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND('-587986998')))OR(vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)|(vt1.c1)))))AND(((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) COLLATE BINARY ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND('-587986998')))OR(vt1.c1)) IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) COLLATE BINARY WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)|(vt1.c1)))))AND(((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) ORDER BY (((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND('-587986998')))OR(vt1.c1)) IN ());
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c1)LIKE(vt1.c1)))AND(vt1.lid COLLATE NOCASE)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)LIKE(vt1.c1)))AND(vt1.lid COLLATE NOCASE)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c1)LIKE(vt1.c1)))AND(vt1.lid COLLATE NOCASE)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)LIKE(vt1.c1)))AND(vt1.lid COLLATE NOCASE)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c1)LIKE(vt1.c1)))AND(vt1.lid COLLATE NOCASE)))OR((- (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1))>((vt1.c1)))) NOT NULL)) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))>((vt1.c1)))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NULL IN ()) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1))>((vt1.c1)))) NOT NULL)) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))>((vt1.c1)))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NULL IN ()) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1))>((vt1.c1)))) NOT NULL)) ORDER BY (NULL IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)<(vt0.c0)))))OR(UPPER(vt0.c0))))OR((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)<(vt0.c0)))))OR(UPPER(vt0.c0))))OR((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)<(vt0.c0)))))OR(UPPER(vt0.c0))))OR((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)<(vt0.c0)))))OR(UPPER(vt0.c0))))OR((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)<(vt0.c0)))))OR(UPPER(vt0.c0))))OR((((vt0.c0))<>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, -1981043829)) AND ((vt1.lid, vt1.c1, vt0.c0)))) NOT BETWEEN (((NULL)IS(vt1.lid))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, -1981043829)) AND ((vt1.lid, vt1.c1, vt0.c0)))) NOT BETWEEN (((NULL)IS(vt1.lid))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, -1981043829)) AND ((vt1.lid, vt1.c1, vt0.c0)))) NOT BETWEEN (((NULL)IS(vt1.lid))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, -1981043829)) AND ((vt1.lid, vt1.c1, vt0.c0)))) NOT BETWEEN (((NULL)IS(vt1.lid))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, -1981043829)) AND ((vt1.lid, vt1.c1, vt0.c0)))) NOT BETWEEN (((NULL)IS(vt1.lid))) AND ((+ (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c1)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(vt1.c1)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c1)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(vt1.c1)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c1)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY;
SELECT * FROM vt0, vt1 WHERE (((vt1.lid IN (vt1.lid)) IN ())) ORDER BY ((- (vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt1.lid IN (vt1.lid)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((- (vt1.c1)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((vt1.lid IN (vt1.lid)) IN ())) ORDER BY ((- (vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt1.lid IN (vt1.lid)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((- (vt1.c1)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((vt1.lid IN (vt1.lid)) IN ())) ORDER BY ((- (vt1.c1)) IN ());
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ ((((497012077, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((497012077, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ ((((497012077, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((497012077, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ ((((497012077, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt1.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT))LIKE(((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT))LIKE(((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT))LIKE(((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT))LIKE(((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS TEXT))LIKE(((vt1.lid) NOTNULL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ('-592137186' IN ()) WHERE ((((vt1.lid IN (vt0.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND (vt1.c1 COLLATE BINARY))) ORDER BY ((-5.92137186E8)&(vt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN (vt0.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ('-592137186' IN ()) ORDER BY ((-5.92137186E8)&(vt1.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ('-592137186' IN ()) WHERE ((((vt1.lid IN (vt0.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND (vt1.c1 COLLATE BINARY))) ORDER BY ((-5.92137186E8)&(vt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN (vt0.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ('-592137186' IN ()) ORDER BY ((-5.92137186E8)&(vt1.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ('-592137186' IN ()) WHERE ((((vt1.lid IN (vt0.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND (vt1.c1 COLLATE BINARY))) ORDER BY ((-5.92137186E8)&(vt1.c1 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN CASE 'NL'  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END END) ORDER BY vt1.c0 DESC  NULLS LAST, vt1.c0 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN CASE 'NL'  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 DESC  NULLS LAST, vt1.c0 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN CASE 'NL'  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END END) ORDER BY vt1.c0 DESC  NULLS LAST, vt1.c0 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN CASE 'NL'  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 DESC  NULLS LAST, vt1.c0 COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN CASE 'NL'  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END END) ORDER BY vt1.c0 DESC  NULLS LAST, vt1.c0 COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE NULL  WHEN ((vt1.c1)>(vt1.lid)) THEN (((vt1.lid)) BETWEEN ((0.26914364077782793)) AND ((vt1.c0))) ELSE ((vt1.lid)-(7.315108836685464E18)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((vt1.c1)>(vt1.lid)) THEN (((vt1.lid)) BETWEEN ((0.26914364077782793)) AND ((vt1.c0))) ELSE ((vt1.lid)-(7.315108836685464E18)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE NULL  WHEN ((vt1.c1)>(vt1.lid)) THEN (((vt1.lid)) BETWEEN ((0.26914364077782793)) AND ((vt1.c0))) ELSE ((vt1.lid)-(7.315108836685464E18)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((vt1.c1)>(vt1.lid)) THEN (((vt1.lid)) BETWEEN ((0.26914364077782793)) AND ((vt1.c0))) ELSE ((vt1.lid)-(7.315108836685464E18)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE NULL  WHEN ((vt1.c1)>(vt1.lid)) THEN (((vt1.lid)) BETWEEN ((0.26914364077782793)) AND ((vt1.c0))) ELSE ((vt1.lid)-(7.315108836685464E18)) END);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM))!=((((vt0.c0) IS TRUE))))) ORDER BY (((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))+(vt0.c0 COLLATE RTRIM)), GLOB(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM))!=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY (((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))+(vt0.c0 COLLATE RTRIM)), GLOB(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM))!=((((vt0.c0) IS TRUE))))) ORDER BY (((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))+(vt0.c0 COLLATE RTRIM)), GLOB(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM))!=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY (((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))+(vt0.c0 COLLATE RTRIM)), GLOB(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM))!=((((vt0.c0) IS TRUE))))) ORDER BY (((((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))+(vt0.c0 COLLATE RTRIM)), GLOB(vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0)GLOB(vt0.c0)))LIKE(0.4941091852026568))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)GLOB(vt0.c0)))LIKE(0.4941091852026568))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0)GLOB(vt0.c0)))LIKE(0.4941091852026568))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)GLOB(vt0.c0)))LIKE(0.4941091852026568))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) ORDER BY ((((vt1.c0)GLOB(vt0.c0)))LIKE(0.4941091852026568))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid))) NOT BETWEEN (vt0.c0) AND (((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'22db')))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid))) NOT BETWEEN (vt0.c0) AND (((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'22db'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid))) NOT BETWEEN (vt0.c0) AND (((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'22db')))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid))) NOT BETWEEN (vt0.c0) AND (((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'22db'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid))) NOT BETWEEN (vt0.c0) AND (((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'22db')))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN CAST(vt1.lid AS INTEGER) WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) THEN (NOT (vt1.lid)) WHEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) THEN ((vt1.c0) IS TRUE) ELSE ((0.23755128057580432)!=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) ISNULL) THEN CAST(vt1.lid AS INTEGER) WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) THEN (NOT (vt1.lid)) WHEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) THEN ((vt1.c0) IS TRUE) ELSE ((0.23755128057580432)!=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN CAST(vt1.lid AS INTEGER) WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) THEN (NOT (vt1.lid)) WHEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) THEN ((vt1.c0) IS TRUE) ELSE ((0.23755128057580432)!=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) ISNULL) THEN CAST(vt1.lid AS INTEGER) WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) THEN (NOT (vt1.lid)) WHEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) THEN ((vt1.c0) IS TRUE) ELSE ((0.23755128057580432)!=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN CAST(vt1.lid AS INTEGER) WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) THEN (NOT (vt1.lid)) WHEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) THEN ((vt1.c0) IS TRUE) ELSE ((0.23755128057580432)!=(vt1.c0)) END);
SELECT * FROM vt0 WHERE (IFNULL((vt0.c0 IN ()), NULL));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt0.c0 IN ()), NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL((vt0.c0 IN ()), NULL));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt0.c0 IN ()), NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL((vt0.c0 IN ()), NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN x'' THEN vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0))))) ORDER BY ((vt0.c0)IS(((vt0.c0)+(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN x'' THEN vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(((vt0.c0)+(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN x'' THEN vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0))))) ORDER BY ((vt0.c0)IS(((vt0.c0)+(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN x'' THEN vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(((vt0.c0)+(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN x'' THEN vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)<(vt0.c0))))) ORDER BY ((vt0.c0)IS(((vt0.c0)+(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) ORDER BY ((1773669452)IS(vt1.lid)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((1773669452)IS(vt1.lid)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) ORDER BY ((1773669452)IS(vt1.lid)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((1773669452)IS(vt1.lid)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) NOT NULL)) ORDER BY ((1773669452)IS(vt1.lid)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN NULL THEN ((x'd561') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((((1.9739071E8)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((x'd561') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((((1.9739071E8)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN NULL THEN ((x'd561') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((((1.9739071E8)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((x'd561') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((((1.9739071E8)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN NULL THEN ((x'd561') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((((1.9739071E8)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(HEX(vt0.c0)))) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('2058797721'))))))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN '' THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((0.038602052119715013) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('2058797721'))))))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN '' THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((0.038602052119715013) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(HEX(vt0.c0)))) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('2058797721'))))))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN '' THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((0.038602052119715013) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('2058797721'))))))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN '' THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((0.038602052119715013) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT(HEX(vt0.c0)))) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('2058797721'))))))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN '' THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((0.038602052119715013) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt1.c0)>>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt1.c0)>>(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt1.c0)>>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt1.c0)>>(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)|(vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt1.c0)>>(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.lid))) IS TRUE)) ORDER BY (((vt1.c1)-(vt1.c1)) IN (((vt1.c1)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.lid))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1)-(vt1.c1)) IN (((vt1.c1)+(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.lid))) IS TRUE)) ORDER BY (((vt1.c1)-(vt1.c1)) IN (((vt1.c1)+(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.lid))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1)-(vt1.c1)) IN (((vt1.c1)+(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.lid))) IS TRUE)) ORDER BY (((vt1.c1)-(vt1.c1)) IN (((vt1.c1)+(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.lid))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0, vt1.lid))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.lid))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0, vt1.lid))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.lid))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE 'wJ'  WHEN SQLITE_COMPILEOPTION_GET(vt1.lid) THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))<=((NULLIF(DISTINCT vt1.c1, vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((CASE 'wJ'  WHEN SQLITE_COMPILEOPTION_GET(vt1.lid) THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))<=((NULLIF(DISTINCT vt1.c1, vt1.lid)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE 'wJ'  WHEN SQLITE_COMPILEOPTION_GET(vt1.lid) THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))<=((NULLIF(DISTINCT vt1.c1, vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((CASE 'wJ'  WHEN SQLITE_COMPILEOPTION_GET(vt1.lid) THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))<=((NULLIF(DISTINCT vt1.c1, vt1.lid)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE 'wJ'  WHEN SQLITE_COMPILEOPTION_GET(vt1.lid) THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))<=((NULLIF(DISTINCT vt1.c1, vt1.lid))));
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN ((((vt1.c1)AND(vt1.c0)))AND(vt1.lid)) THEN LOWER('0.4941091852026568') END) ORDER BY ((((vt1.lid)=(vt1.lid)))<=((- (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN ((((vt1.c1)AND(vt1.c0)))AND(vt1.lid)) THEN LOWER('0.4941091852026568') END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)==(vt1.lid)))<=((- (vt1.c1)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN ((((vt1.c1)AND(vt1.c0)))AND(vt1.lid)) THEN LOWER('0.4941091852026568') END) ORDER BY ((((vt1.lid)=(vt1.lid)))<=((- (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN ((((vt1.c1)AND(vt1.c0)))AND(vt1.lid)) THEN LOWER('0.4941091852026568') END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)==(vt1.lid)))<=((- (vt1.c1)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c1  WHEN ((((vt1.c1)AND(vt1.c0)))AND(vt1.lid)) THEN LOWER('0.4941091852026568') END) ORDER BY ((((vt1.lid)=(vt1.lid)))<=((- (vt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.lid COLLATE BINARY  WHEN ((((vt0.c0)AND(x'e2cd')))AND(vt1.c1)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN NULL WHEN NULL THEN (NOT (vt1.c1)) ELSE ((vt1.lid)LIKE(vt1.c1)) END) ORDER BY ((((((vt1.lid)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (((vt1.lid) ISNULL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.lid COLLATE BINARY  WHEN ((((vt0.c0)AND(x'e2cd')))AND(vt1.c1)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN NULL WHEN NULL THEN (NOT (vt1.c1)) ELSE ((vt1.lid)LIKE(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (((vt1.lid) ISNULL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.lid COLLATE BINARY  WHEN ((((vt0.c0)AND(x'e2cd')))AND(vt1.c1)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN NULL WHEN NULL THEN (NOT (vt1.c1)) ELSE ((vt1.lid)LIKE(vt1.c1)) END) ORDER BY ((((((vt1.lid)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (((vt1.lid) ISNULL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.lid COLLATE BINARY  WHEN ((((vt0.c0)AND(x'e2cd')))AND(vt1.c1)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN NULL WHEN NULL THEN (NOT (vt1.c1)) ELSE ((vt1.lid)LIKE(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (((vt1.lid) ISNULL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.lid COLLATE BINARY  WHEN ((((vt0.c0)AND(x'e2cd')))AND(vt1.c1)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN NULL WHEN NULL THEN (NOT (vt1.c1)) ELSE ((vt1.lid)LIKE(vt1.c1)) END) ORDER BY ((((((vt1.lid)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (((vt1.lid) ISNULL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((('[3D(')<(((((x'')OR(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((('[3D(')<(((((x'')OR(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('[3D(')<(((((x'')OR(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((('[3D(')<(((((x'')OR(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('[3D(')<(((((x'')OR(vt1.c0)))AND(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS TEXT)) ORDER BY (+ (((vt0.c0) IS FALSE))) DESC, ((((('ᕊZ'))!=((NULL)))) BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)), ROUND((+ (vt0.c0)), x'');
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) IS FALSE))) DESC, ((((('ᕊZ'))<>((NULL)))) BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)), ROUND((+ (vt0.c0)), x''));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS TEXT)) ORDER BY (+ (((vt0.c0) IS FALSE))) DESC, ((((('ᕊZ'))!=((NULL)))) BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)), ROUND((+ (vt0.c0)), x'');
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) IS FALSE))) DESC, ((((('ᕊZ'))<>((NULL)))) BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)), ROUND((+ (vt0.c0)), x''));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS TEXT)) ORDER BY (+ (((vt0.c0) IS FALSE))) DESC, ((((('ᕊZ'))!=((NULL)))) BETWEEN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0)), ROUND((+ (vt0.c0)), x'');
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))&(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))&(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))&(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))&(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))&(vt1.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (((('w-DY	''4&6' IN ()))*(((vt1.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((('w-DY	''4&6' IN ()))*(((vt1.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((('w-DY	''4&6' IN ()))*(((vt1.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((('w-DY	''4&6' IN ()))*(((vt1.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((('w-DY	''4&6' IN ()))*(((vt1.c0)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((- (vt1.c1))))) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)>>(vt1.c1))) AND ((NOT (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)>>(vt1.c1))) AND ((NOT (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((- (vt1.c1))))) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)>>(vt1.c1))) AND ((NOT (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)>>(vt1.c1))) AND ((NOT (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((- (vt1.c1))))) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)>>(vt1.c1))) AND ((NOT (vt1.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.c0, 0.2599698360747372)) AND ((vt1.c0, vt1.c1, vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.c0, 0.2599698360747372)) AND ((vt1.c0, vt1.c1, vt0.c0)))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.c0, 0.2599698360747372)) AND ((vt1.c0, vt1.c1, vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.c0, 0.2599698360747372)) AND ((vt1.c0, vt1.c1, vt0.c0)))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.c0, 0.2599698360747372)) AND ((vt1.c0, vt1.c1, vt0.c0)))) AND (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c1  WHEN '592047917' THEN vt1.lid END COLLATE RTRIM WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c1  WHEN '592047917' THEN vt1.lid END COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c1  WHEN '592047917' THEN vt1.lid END COLLATE RTRIM WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c1  WHEN '592047917' THEN vt1.lid END COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE vt1.c1  WHEN '592047917' THEN vt1.lid END COLLATE RTRIM WHERE (vt1.c1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE))=((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))))) ORDER BY ((COALESCE(DISTINCT -1e500, vt1.c0))AND(CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))==((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((COALESCE(DISTINCT -1e500, vt1.c0))AND(CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE))=((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))))) ORDER BY ((COALESCE(DISTINCT -1e500, vt1.c0))AND(CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))==((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((COALESCE(DISTINCT -1e500, vt1.c0))AND(CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS FALSE))=((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))))) ORDER BY ((COALESCE(DISTINCT -1e500, vt1.c0))AND(CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UPPER(DISTINCT vt1.c1)) ORDER BY (((((((((~ (vt1.c0)))AND(vt1.lid)))OR(((vt1.c1)LIKE(0.36017397206739044)))))AND(vt1.lid)))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt1.c1)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((~ (vt1.c0)))AND(vt1.lid)))OR(((vt1.c1)LIKE(0.36017397206739044)))))AND(vt1.lid)))OR(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UPPER(DISTINCT vt1.c1)) ORDER BY (((((((((~ (vt1.c0)))AND(vt1.lid)))OR(((vt1.c1)LIKE(0.36017397206739044)))))AND(vt1.lid)))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt1.c1)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((~ (vt1.c0)))AND(vt1.lid)))OR(((vt1.c1)LIKE(0.36017397206739044)))))AND(vt1.lid)))OR(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UPPER(DISTINCT vt1.c1)) ORDER BY (((((((((~ (vt1.c0)))AND(vt1.lid)))OR(((vt1.c1)LIKE(0.36017397206739044)))))AND(vt1.lid)))OR(NULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0) ORDER BY NULLIF(TIME(vt1.lid, vt0.c0, vt1.lid), (((vt0.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt1.c1, vt0.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY NULLIF(TIME(vt1.lid, vt0.c0, vt1.lid), (((vt0.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt1.c1, vt0.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0) ORDER BY NULLIF(TIME(vt1.lid, vt0.c0, vt1.lid), (((vt0.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt1.c1, vt0.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY NULLIF(TIME(vt1.lid, vt0.c0, vt1.lid), (((vt0.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt1.c1, vt0.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt1.c0) ORDER BY NULLIF(TIME(vt1.lid, vt0.c0, vt1.lid), (((vt0.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt1.c1, vt0.c0, vt1.c0)) AND ((vt1.c1, vt0.c0, vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 COLLATE BINARY))<(((((vt1.c1))>((vt1.c1))))))) ORDER BY (- (((((vt1.c1)AND(vt1.lid)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))<(((((vt1.c1))>((vt1.c1))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((((vt1.c1)AND(vt1.lid)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 COLLATE BINARY))<(((((vt1.c1))>((vt1.c1))))))) ORDER BY (- (((((vt1.c1)AND(vt1.lid)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))<(((((vt1.c1))>((vt1.c1))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((((vt1.c1)AND(vt1.lid)))OR(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 COLLATE BINARY))<(((((vt1.c1))>((vt1.c1))))))) ORDER BY (- (((((vt1.c1)AND(vt1.lid)))OR(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN '-635086433' ELSE vt0.c0 END)AND(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))OR(TRIM(vt0.c0))))OR('q'))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c0 THEN '-635086433' ELSE vt0.c0 END)AND(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))OR(TRIM(vt0.c0))))OR('q'))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN '-635086433' ELSE vt0.c0 END)AND(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))OR(TRIM(vt0.c0))))OR('q'))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c0 THEN '-635086433' ELSE vt0.c0 END)AND(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))OR(TRIM(vt0.c0))))OR('q'))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN '-635086433' ELSE vt0.c0 END)AND(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))OR(TRIM(vt0.c0))))OR('q'))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.27084225635630155 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.0550628696643678 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST, CASE WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.27084225635630155 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.0550628696643678 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST, CASE WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.27084225635630155 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.0550628696643678 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST, CASE WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.27084225635630155 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.0550628696643678 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST, CASE WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+(vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.27084225635630155 ELSE vt0.c0 END WHEN UNLIKELY(vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.0550628696643678 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END  NULLS FIRST, CASE WHEN vt0.c0 THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 END DESC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))LIKE(vt1.c0 COLLATE RTRIM))) ORDER BY (((((((((((vt1.c1))>=((x''))))AND((vt1.lid IN (vt1.lid, 0.09275861738308366)))))AND(x'')))AND((0.7415876632633516 IN ()))))AND(((vt1.c1)GLOB(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))LIKE(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1))>=((x''))))AND((vt1.lid IN (vt1.lid, 0.09275861738308366)))))AND(x'')))AND((0.7415876632633516 IN ()))))AND(((vt1.c1)GLOB(vt1.c1)))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))LIKE(vt1.c0 COLLATE RTRIM))) ORDER BY (((((((((((vt1.c1))>=((x''))))AND((vt1.lid IN (vt1.lid, 0.09275861738308366)))))AND(x'')))AND((0.7415876632633516 IN ()))))AND(((vt1.c1)GLOB(vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))LIKE(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1))>=((x''))))AND((vt1.lid IN (vt1.lid, 0.09275861738308366)))))AND(x'')))AND((0.7415876632633516 IN ()))))AND(((vt1.c1)GLOB(vt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)LIKE(vt1.lid)) IN ())) ORDER BY (vt1.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)LIKE(vt1.lid)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)LIKE(vt1.lid)) IN ())) ORDER BY (vt1.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)LIKE(vt1.lid)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)LIKE(vt1.lid)) IN ())) ORDER BY (vt1.c0 IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(2058797721 AS INTEGER)) ORDER BY CASE vt0.c0  WHEN ((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)) THEN ((vt1.lid)<<(vt1.lid)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(2058797721 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt0.c0  WHEN ((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)) THEN ((vt1.lid)<<(vt1.lid)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(2058797721 AS INTEGER)) ORDER BY CASE vt0.c0  WHEN ((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)) THEN ((vt1.lid)<<(vt1.lid)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(2058797721 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt0.c0  WHEN ((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)) THEN ((vt1.lid)<<(vt1.lid)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(2058797721 AS INTEGER)) ORDER BY CASE vt0.c0  WHEN ((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)) THEN ((vt1.lid)<<(vt1.lid)) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', ((vt0.c0)<>(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (0X6842f5a)))))) ORDER BY UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC, (((vt0.c0)<<(vt0.c0)) IN ()) ASC, (((0.03619124295034104)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', ((vt0.c0)<>(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (0X6842f5a)))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC, (((vt0.c0)<<(vt0.c0)) IN ()) ASC, (((0.03619124295034104)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', ((vt0.c0)<>(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (0X6842f5a)))))) ORDER BY UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC, (((vt0.c0)<<(vt0.c0)) IN ()) ASC, (((0.03619124295034104)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', ((vt0.c0)<>(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (0X6842f5a)))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC, (((vt0.c0)<<(vt0.c0)) IN ()) ASC, (((0.03619124295034104)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', ((vt0.c0)<>(vt0.c0)), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0)||(vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (0X6842f5a)))))) ORDER BY UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC, (((vt0.c0)<<(vt0.c0)) IN ()) ASC, (((0.03619124295034104)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT * FROM vt1, vt0 WHERE ((((LIKELY(vt1.c0)))<=((CAST(vt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(vt1.c0)))<=((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((LIKELY(vt1.c0)))<=((CAST(vt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(vt1.c0)))<=((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((LIKELY(vt1.c0)))<=((CAST(vt1.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))) COLLATE BINARY) ORDER BY CASE WHEN ((vt1.lid)<(vt1.lid)) THEN ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.lid)<(vt1.lid)) THEN ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))) COLLATE BINARY) ORDER BY CASE WHEN ((vt1.lid)<(vt1.lid)) THEN ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.lid)<(vt1.lid)) THEN ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))) COLLATE BINARY) ORDER BY CASE WHEN ((vt1.lid)<(vt1.lid)) THEN ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)) END;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid) BETWEEN (CASE WHEN vt1.c1 THEN vt0.c0 END) AND (((vt1.c0) IS FALSE)))) ORDER BY CAST((vt1.lid IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid) BETWEEN (CASE WHEN vt1.c1 THEN vt0.c0 END) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.lid IN ()) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid) BETWEEN (CASE WHEN vt1.c1 THEN vt0.c0 END) AND (((vt1.c0) IS FALSE)))) ORDER BY CAST((vt1.lid IN ()) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid) BETWEEN (CASE WHEN vt1.c1 THEN vt0.c0 END) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.lid IN ()) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid) BETWEEN (CASE WHEN vt1.c1 THEN vt0.c0 END) AND (((vt1.c0) IS FALSE)))) ORDER BY CAST((vt1.lid IN ()) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END AS INTEGER)) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END AS INTEGER)) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END AS INTEGER)) ORDER BY (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)GLOB(vt1.c1)) ELSE (NOT (vt1.c1)) END WHERE (((x'' COLLATE NOCASE)>>((- (vt0.c0))))) ORDER BY (((vt1.lid IN ('0.2599698360747372')))*(vt1.lid)) DESC, vt1.lid DESC, (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE)>>((- (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)GLOB(vt1.c1)) ELSE (NOT (vt1.c1)) END ORDER BY (((vt1.lid IN ('0.2599698360747372')))*(vt1.lid)) DESC, vt1.lid DESC, (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)GLOB(vt1.c1)) ELSE (NOT (vt1.c1)) END WHERE (((x'' COLLATE NOCASE)>>((- (vt0.c0))))) ORDER BY (((vt1.lid IN ('0.2599698360747372')))*(vt1.lid)) DESC, vt1.lid DESC, (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE)>>((- (vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)GLOB(vt1.c1)) ELSE (NOT (vt1.c1)) END ORDER BY (((vt1.lid IN ('0.2599698360747372')))*(vt1.lid)) DESC, vt1.lid DESC, (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)GLOB(vt1.c1)) ELSE (NOT (vt1.c1)) END WHERE (((x'' COLLATE NOCASE)>>((- (vt0.c0))))) ORDER BY (((vt1.lid IN ('0.2599698360747372')))*(vt1.lid)) DESC, vt1.lid DESC, (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((x'b8cd') IS FALSE)) AND ((('-1632678346')IS(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) BETWEEN (((x'b8cd') IS FALSE)) AND ((('-1632678346')IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((x'b8cd') IS FALSE)) AND ((('-1632678346')IS(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) BETWEEN (((x'b8cd') IS FALSE)) AND ((('-1632678346')IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((x'b8cd') IS FALSE)) AND ((('-1632678346')IS(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1) ISNULL) IN ()));
SELECT ALL * FROM vt0 WHERE (load_extension(json_array_length(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (('-1573987424')!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC, '-661334536' ASC, (((((''))>=((vt0.c0))))+(((vt0.c0)+(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(json_array_length(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (('-1573987424')<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC, '-661334536' ASC, (((((''))>=((vt0.c0))))+(((vt0.c0)+(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (load_extension(json_array_length(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (('-1573987424')!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC, '-661334536' ASC, (((((''))>=((vt0.c0))))+(((vt0.c0)+(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(json_array_length(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (('-1573987424')<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC, '-661334536' ASC, (((((''))>=((vt0.c0))))+(((vt0.c0)+(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY UNLIKELY(vt0.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(vt0.c0 COLLATE RTRIM)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY UNLIKELY(vt0.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(vt0.c0 COLLATE RTRIM)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY UNLIKELY(vt0.c0 COLLATE RTRIM)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((+ ((((vt1.c1))<>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c1))!=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ ((((vt1.c1))<>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c1))!=((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ ((((vt1.c1))<>((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt1.lid, vt1.c1))<>((vt1.lid, '0.0550628696643678', vt1.lid))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.lid, vt1.c1))<>((vt1.lid, '0.0550628696643678', vt1.lid))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt1.lid, vt1.c1))<>((vt1.lid, '0.0550628696643678', vt1.lid))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.lid, vt1.c1))<>((vt1.lid, '0.0550628696643678', vt1.lid))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt1.lid, vt1.c1))<>((vt1.lid, '0.0550628696643678', vt1.lid))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(vt0.c0));
SELECT * FROM vt0, vt1 WHERE (CAST((~ (vt1.c0)) AS BLOB)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT * FROM vt0, vt1 WHERE (CAST((~ (vt1.c0)) AS BLOB)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT * FROM vt0, vt1 WHERE (CAST((~ (vt1.c0)) AS BLOB)) ORDER BY vt1.c0;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c1 COLLATE BINARY IN ()) WHERE (CAST(((vt1.c0) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c1 COLLATE BINARY IN ()));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c1 COLLATE BINARY IN ()) WHERE (CAST(((vt1.c0) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c1 COLLATE BINARY IN ()));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (vt1.c1 COLLATE BINARY IN ()) WHERE (CAST(((vt1.c0) IS TRUE) AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((rtreenode(vt1.lid, vt0.c0))>>(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))), CAST(((vt0.c0)|(vt1.c0)) AS REAL) ASC  NULLS FIRST, 'iW';
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((rtreenode(vt1.lid, vt0.c0))>>(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))), CAST(((vt0.c0)|(vt1.c0)) AS REAL) ASC  NULLS FIRST, 'iW');
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((rtreenode(vt1.lid, vt0.c0))>>(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))), CAST(((vt0.c0)|(vt1.c0)) AS REAL) ASC  NULLS FIRST, 'iW';
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((rtreenode(vt1.lid, vt0.c0))>>(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))), CAST(((vt0.c0)|(vt1.c0)) AS REAL) ASC  NULLS FIRST, 'iW');
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((rtreenode(vt1.lid, vt0.c0))>>(((vt0.c0) BETWEEN (vt1.c0) AND (NULL)))), CAST(((vt0.c0)|(vt1.c0)) AS REAL) ASC  NULLS FIRST, 'iW';
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid IN ()))AND((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))))OR((+ (x'9875')))) WHERE ((CASE WHEN vt1.c1 THEN vt1.c1 END IN ())) ORDER BY (((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (LIKELIHOOD(vt1.c0, 0.10526844655087997)) AND (((((((((vt1.c1)AND(vt0.c0)))AND(vt1.lid)))OR(NULL)))AND(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c1 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid IN ()))AND((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))))OR((+ (x'9875')))) ORDER BY (((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (LIKELIHOOD(vt1.c0, 0.10526844655087997)) AND (((((((((vt1.c1)AND(vt0.c0)))AND(vt1.lid)))OR(NULL)))AND(x'')))) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid IN ()))AND((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))))OR((+ (x'9875')))) WHERE ((CASE WHEN vt1.c1 THEN vt1.c1 END IN ())) ORDER BY (((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (LIKELIHOOD(vt1.c0, 0.10526844655087997)) AND (((((((((vt1.c1)AND(vt0.c0)))AND(vt1.lid)))OR(NULL)))AND(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c1 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid IN ()))AND((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))))OR((+ (x'9875')))) ORDER BY (((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (LIKELIHOOD(vt1.c0, 0.10526844655087997)) AND (((((((((vt1.c1)AND(vt0.c0)))AND(vt1.lid)))OR(NULL)))AND(x'')))) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid IN ()))AND((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))))))OR((+ (x'9875')))) WHERE ((CASE WHEN vt1.c1 THEN vt1.c1 END IN ())) ORDER BY (((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (LIKELIHOOD(vt1.c0, 0.10526844655087997)) AND (((((((((vt1.c1)AND(vt0.c0)))AND(vt1.lid)))OR(NULL)))AND(x'')))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN (vt1.lid IN ()) WHEN ((((((((vt1.lid)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN ((vt1.lid)%(vt0.c0)) THEN CASE vt1.c1  WHEN NULL THEN vt1.lid ELSE vt1.c1 END WHEN vt1.c1 THEN (((vt0.c0))<((0))) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid END) ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)/(vt1.lid)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN (vt1.lid IN ()) WHEN ((((((((vt1.lid)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN ((vt1.lid)%(vt0.c0)) THEN CASE vt1.c1  WHEN NULL THEN vt1.lid ELSE vt1.c1 END WHEN vt1.c1 THEN (((vt0.c0))<((0))) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)/(vt1.lid)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN (vt1.lid IN ()) WHEN ((((((((vt1.lid)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN ((vt1.lid)%(vt0.c0)) THEN CASE vt1.c1  WHEN NULL THEN vt1.lid ELSE vt1.c1 END WHEN vt1.c1 THEN (((vt0.c0))<((0))) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid END) ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)/(vt1.lid)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN (vt1.lid IN ()) WHEN ((((((((vt1.lid)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN ((vt1.lid)%(vt0.c0)) THEN CASE vt1.c1  WHEN NULL THEN vt1.lid ELSE vt1.c1 END WHEN vt1.c1 THEN (((vt0.c0))<((0))) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)/(vt1.lid)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (vt1.c0 IN ()) THEN (vt1.lid IN ()) WHEN ((((((((vt1.lid)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN ((vt1.lid)%(vt0.c0)) THEN CASE vt1.c1  WHEN NULL THEN vt1.lid ELSE vt1.c1 END WHEN vt1.c1 THEN (((vt0.c0))<((0))) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid END) ORDER BY CASE WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)/(vt1.lid)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) END ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST((~ (vt1.lid)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((~ (vt1.lid)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((~ (vt1.lid)) AS REAL));
SELECT * FROM vt0, vt1 WHERE (((CAST('{q/\u	o' AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST('{q/\u	o' AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CAST('{q/\u	o' AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST('{q/\u	o' AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CAST('{q/\u	o' AS BLOB)) NOTNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON 'nl' WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON 'nl' ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON 'nl' WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON 'nl' ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON 'nl' WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.lid, vt1.lid)) BETWEEN (INSTR(vt1.c1, vt1.c0)) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.lid, vt1.lid)) BETWEEN (INSTR(vt1.c1, vt1.c0)) AND (''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.lid, vt1.lid)) BETWEEN (INSTR(vt1.c1, vt1.c0)) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.lid, vt1.lid)) BETWEEN (INSTR(vt1.c1, vt1.c0)) AND (''))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.lid, vt1.lid)) BETWEEN (INSTR(vt1.c1, vt1.c0)) AND ('')));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE BINARY)) WHERE (((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE BINARY)) WHERE (((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE BINARY)) WHERE (((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c1) NOTNULL) AS NUMERIC)) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c1) NOTNULL) AS NUMERIC)) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c1) NOTNULL) AS NUMERIC)) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((vt1.lid)=(x'd7e0')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)=(x'd7e0')) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.lid)=(x'd7e0')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)=(x'd7e0')) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.lid)=(x'd7e0')) COLLATE RTRIM);
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (((vt0.c0) NOT NULL))));
SELECT * FROM vt1, vt0 WHERE (LIKELIHOOD(vt1.c1, 0.35116363402436657) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt1.c1, 0.35116363402436657) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (LIKELIHOOD(vt1.c1, 0.35116363402436657) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt1.c1, 0.35116363402436657) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (LIKELIHOOD(vt1.c1, 0.35116363402436657) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.lid AS REAL)  WHEN (+ (vt1.c1)) THEN ((vt1.c0) NOTNULL) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.lid AS REAL)  WHEN (+ (vt1.c1)) THEN ((vt1.c0) NOTNULL) ELSE NULL END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.lid AS REAL)  WHEN (+ (vt1.c1)) THEN ((vt1.c0) NOTNULL) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.lid AS REAL)  WHEN (+ (vt1.c1)) THEN ((vt1.c0) NOTNULL) ELSE NULL END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.lid AS REAL)  WHEN (+ (vt1.c1)) THEN ((vt1.c0) NOTNULL) ELSE NULL END);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('p9') NOT BETWEEN (((vt1.c1) ISNULL)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((('p9') NOT BETWEEN (((vt1.c1) ISNULL)) AND (x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('p9') NOT BETWEEN (((vt1.c1) ISNULL)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((('p9') NOT BETWEEN (((vt1.c1) ISNULL)) AND (x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('p9') NOT BETWEEN (((vt1.c1) ISNULL)) AND (x'')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)/(vt1.c1)))IS NOT(LOWER(vt1.c0)))) ORDER BY STRFTIME(((((((((vt1.lid)AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.lid)), ((vt1.c1)-(vt1.c0)), (- (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.lid)), ((vt1.c0)=(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)/(vt1.c1)))IS NOT(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY STRFTIME(((((((((vt1.lid)AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.lid)), ((vt1.c1)-(vt1.c0)), (- (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.lid)), ((vt1.c0)==(vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)/(vt1.c1)))IS NOT(LOWER(vt1.c0)))) ORDER BY STRFTIME(((((((((vt1.lid)AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.lid)), ((vt1.c1)-(vt1.c0)), (- (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.lid)), ((vt1.c0)=(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)/(vt1.c1)))IS NOT(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY STRFTIME(((((((((vt1.lid)AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.lid)), ((vt1.c1)-(vt1.c0)), (- (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.lid)), ((vt1.c0)==(vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)/(vt1.c1)))IS NOT(LOWER(vt1.c0)))) ORDER BY STRFTIME(((((((((vt1.lid)AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.lid)), ((vt1.c1)-(vt1.c0)), (- (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.lid)), ((vt1.c0)=(vt1.c0))) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY TRIM(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0)));
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY TRIM(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0)));
SELECT * FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY TRIM(DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt1.c0);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON vt1.c0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.lid) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)) ELSE ((vt1.lid)*(vt1.c1)) END DESC  NULLS LAST, ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c1)))>(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt1.c1 COLLATE BINARY)AND(((vt1.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)) ELSE ((vt1.lid)*(vt1.c1)) END DESC  NULLS LAST, ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c1)))>(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt1.c1 COLLATE BINARY)AND(((vt1.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.lid) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)) ELSE ((vt1.lid)*(vt1.c1)) END DESC  NULLS LAST, ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c1)))>(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt1.c1 COLLATE BINARY)AND(((vt1.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)) ELSE ((vt1.lid)*(vt1.c1)) END DESC  NULLS LAST, ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c1)))>(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt1.c1 COLLATE BINARY)AND(((vt1.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.lid) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN ((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)) ELSE ((vt1.lid)*(vt1.c1)) END DESC  NULLS LAST, ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c1)))>(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, ((vt1.c1 COLLATE BINARY)AND(((vt1.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (NULL IN (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN (((vt0.c0)-(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (NULL IN (((vt0.c0)-(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN (((vt0.c0)-(vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (NULL IN (((vt0.c0)-(vt0.c0)))) DESC;
SELECT * FROM vt0 INNER JOIN vt1 ON ('-1082316251' IN ()) WHERE ((((((vt1.c1))<=((NULL))))<((vt1.lid IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))<=((NULL))))<((vt1.lid IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ('-1082316251' IN ()));
SELECT * FROM vt0 INNER JOIN vt1 ON ('-1082316251' IN ()) WHERE ((((((vt1.c1))<=((NULL))))<((vt1.lid IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))<=((NULL))))<((vt1.lid IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ('-1082316251' IN ()));
SELECT * FROM vt0 INNER JOIN vt1 ON ('-1082316251' IN ()) WHERE ((((((vt1.c1))<=((NULL))))<((vt1.lid IN ()))));
SELECT ALL * FROM vt1, vt0 WHERE (((0xffffffff819b8029 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff819b8029 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((0xffffffff819b8029 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff819b8029 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((0xffffffff819b8029 IN ()) IN ()));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))==((x''))))))OR(json_array_length(vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0)-(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))=((x''))))))OR(json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))==((x''))))))OR(json_array_length(vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0)-(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))=((x''))))))OR(json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))==((x''))))))OR(json_array_length(vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0)-(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN NULL THEN NULL END) AND ((~ (0x3f85ddb4))))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN NULL THEN NULL END) AND ((~ (0X3f85ddb4))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN NULL THEN NULL END) AND ((~ (0x3f85ddb4))))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN NULL THEN NULL END) AND ((~ (0X3f85ddb4))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE WHEN NULL THEN NULL END) AND ((~ (0x3f85ddb4))))) ORDER BY vt1.lid;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c1)))OR(2058797721))  WHEN '' THEN ((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR('[3D(')))AND(x'')) ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)AND(vt1.c1)))OR(2058797721))  WHEN '' THEN ((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR('[3D(')))AND(x'')) ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c1)))OR(2058797721))  WHEN '' THEN ((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR('[3D(')))AND(x'')) ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)AND(vt1.c1)))OR(2058797721))  WHEN '' THEN ((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR('[3D(')))AND(x'')) ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c1)))OR(2058797721))  WHEN '' THEN ((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR('[3D(')))AND(x'')) ELSE CASE WHEN vt1.c0 THEN vt0.c0 END END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END)) AND ((((vt1.c1) NOT NULL)))) WHERE (CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN MIN(vt0.c0, vt1.c0) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((~ (vt1.lid)))IS(((vt1.lid) BETWEEN (x'a146') AND (vt1.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN MIN(vt0.c0, vt1.c0) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END)) AND ((((vt1.c1) NOT NULL)))) ORDER BY (((~ (vt1.lid)))IS(((vt1.lid) BETWEEN (x'a146') AND (vt1.lid)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END)) AND ((((vt1.c1) NOT NULL)))) WHERE (CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN MIN(vt0.c0, vt1.c0) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((~ (vt1.lid)))IS(((vt1.lid) BETWEEN (x'a146') AND (vt1.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN MIN(vt0.c0, vt1.c0) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END)) AND ((((vt1.c1) NOT NULL)))) ORDER BY (((~ (vt1.lid)))IS(((vt1.lid) BETWEEN (x'a146') AND (vt1.lid)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 END)) AND ((((vt1.c1) NOT NULL)))) WHERE (CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN MIN(vt0.c0, vt1.c0) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((~ (vt1.lid)))IS(((vt1.lid) BETWEEN (x'a146') AND (vt1.lid)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST((~ (vt1.lid)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.lid)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST((~ (vt1.lid)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.lid)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST((~ (vt1.lid)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((~ (x'77dd')) IN (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((~ (x'77dd')) IN (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((~ (x'77dd')) IN (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((~ (x'77dd')) IN (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((~ (x'77dd')) IN (vt0.c0));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE NULL  WHEN x'66ce' THEN (NOT (vt1.c0)) ELSE (((vt1.lid, vt1.c0, 'ov', vt0.c0, vt1.c0))==((vt1.c1, x'316afdea', vt1.c1, vt1.c0, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN x'66ce' THEN (NOT (vt1.c0)) ELSE (((vt1.lid, vt1.c0, 'ov', vt0.c0, vt1.c0))=((vt1.c1, x'316afdea', vt1.c1, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE NULL  WHEN x'66ce' THEN (NOT (vt1.c0)) ELSE (((vt1.lid, vt1.c0, 'ov', vt0.c0, vt1.c0))==((vt1.c1, x'316afdea', vt1.c1, vt1.c0, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN x'66ce' THEN (NOT (vt1.c0)) ELSE (((vt1.lid, vt1.c0, 'ov', vt0.c0, vt1.c0))=((vt1.c1, x'316afdea', vt1.c1, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE NULL  WHEN x'66ce' THEN (NOT (vt1.c0)) ELSE (((vt1.lid, vt1.c0, 'ov', vt0.c0, vt1.c0))==((vt1.c1, x'316afdea', vt1.c1, vt1.c0, vt1.c0))) END);
SELECT COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c1))))>((vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c1))))>((vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c1))))>((vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c1))))>((vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c1))))>((vt1.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY x'0e06' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY x'0e06' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY x'0e06' ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY x'0e06' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY x'0e06' ASC;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) WHERE (((((vt1.c1)<<(vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND (0Xffffffff85a16a61))) ORDER BY ((((((((((((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt0.c0)))OR(NULL))) IS TRUE) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS REAL) ASC  NULLS FIRST, (((((vt0.c0))<=((vt1.c0)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<<(vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND (0Xffffffff85a16a61))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) ORDER BY ((((((((((((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt0.c0)))OR(NULL))) IS TRUE) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS REAL) ASC  NULLS FIRST, (((((vt0.c0))<=((vt1.c0)))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) WHERE (((((vt1.c1)<<(vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND (0Xffffffff85a16a61))) ORDER BY ((((((((((((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt0.c0)))OR(NULL))) IS TRUE) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS REAL) ASC  NULLS FIRST, (((((vt0.c0))<=((vt1.c0)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<<(vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND (0Xffffffff85a16a61))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) ORDER BY ((((((((((((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt0.c0)))OR(NULL))) IS TRUE) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS REAL) ASC  NULLS FIRST, (((((vt0.c0))<=((vt1.c0)))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) WHERE (((((vt1.c1)<<(vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND (0Xffffffff85a16a61))) ORDER BY ((((((((((((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt0.c0)))OR(NULL))) IS TRUE) ASC  NULLS LAST, CAST((+ (vt0.c0)) AS REAL) ASC  NULLS FIRST, (((((vt0.c0))<=((vt1.c0)))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC), ((((vt0.c0) IS TRUE))<<(vt0.c0 COLLATE BINARY)) DESC, CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC), ((((vt0.c0) IS TRUE))<<(vt0.c0 COLLATE BINARY)) DESC, CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC), ((((vt0.c0) IS TRUE))<<(vt0.c0 COLLATE BINARY)) DESC, CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC), ((((vt0.c0) IS TRUE))<<(vt0.c0 COLLATE BINARY)) DESC, CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC), ((((vt0.c0) IS TRUE))<<(vt0.c0 COLLATE BINARY)) DESC, CAST((NOT (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN (vt1.c1))) AND (((vt1.lid) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN (vt1.c1))) AND (((vt1.lid) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN (vt1.c1))) AND (((vt1.lid) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN (vt1.c1))) AND (((vt1.lid) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN (vt1.c1))) AND (((vt1.lid) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c1))>((vt1.c1)))) NOTNULL) WHERE (((NULL) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt1.c0))) AND (((vt1.c1)=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt1.c0))) AND (((vt1.c1)==(vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt1.c1))>((vt1.c1)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c1))>((vt1.c1)))) NOTNULL) WHERE (((NULL) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt1.c0))) AND (((vt1.c1)=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt1.c0))) AND (((vt1.c1)==(vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt1.c1))>((vt1.c1)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c1))>((vt1.c1)))) NOTNULL) WHERE (((NULL) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt1.c0))) AND (((vt1.c1)=(vt1.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY 0.2809192076471726 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.2809192076471726 ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY 0.2809192076471726 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.2809192076471726 ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY 0.2809192076471726 ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c1) ORDER BY vt0.c0;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT * FROM vt0, vt1 WHERE (CAST((+ (vt1.lid)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.lid)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST((+ (vt1.lid)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.lid)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST((+ (vt1.lid)) AS TEXT));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)GLOB(vt1.lid))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)GLOB(vt1.lid))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)GLOB(vt1.lid))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)GLOB(vt1.lid))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((vt1.c0)GLOB(vt1.lid))) AND (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt1 WHERE ('1339217177') ORDER BY vt1.c0 ASC, ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 WHEN '0.34747728868958827' THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 0.38693721435623485 ELSE vt1.lid END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1339217177') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 WHEN '0.34747728868958827' THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 0.38693721435623485 ELSE vt1.lid END) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ('1339217177') ORDER BY vt1.c0 ASC, ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 WHEN '0.34747728868958827' THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 0.38693721435623485 ELSE vt1.lid END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1339217177') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 WHEN '0.34747728868958827' THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 0.38693721435623485 ELSE vt1.lid END) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ('1339217177') ORDER BY vt1.c0 ASC, ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 WHEN '0.34747728868958827' THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 0.38693721435623485 ELSE vt1.lid END) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((+ (vt1.c0)))OR(((((x'')OR(vt1.c0)))AND(vt0.c0)))))AND('-635086433'))) ORDER BY (((vt1.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(((((x'')OR(vt1.c0)))AND(vt0.c0)))))AND('-635086433'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((+ (vt1.c0)))OR(((((x'')OR(vt1.c0)))AND(vt0.c0)))))AND('-635086433'))) ORDER BY (((vt1.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))OR(((((x'')OR(vt1.c0)))AND(vt0.c0)))))AND('-635086433'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((+ (vt1.c0)))OR(((((x'')OR(vt1.c0)))AND(vt0.c0)))))AND('-635086433'))) ORDER BY (((vt1.c0) NOTNULL) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND('109326170')) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND('109326170')) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND('109326170')) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND('109326170')) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND('109326170')) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN (NOT (vt0.c0)) THEN vt0.c0 COLLATE BINARY END);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOTNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((((vt1.lid)AND(vt1.c1)))OR('391122414')))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c1)))OR((+ (vt1.c1)))))AND(((vt1.c0)<(vt1.lid)))))AND(CAST(vt1.c0 AS TEXT))))OR((NOT (vt1.c1)))) WHERE (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((((vt1.lid)AND(vt1.c1)))OR('391122414')))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c1)))OR((+ (vt1.c1)))))AND(((vt1.c0)<(vt1.lid)))))AND(CAST(vt1.c0 AS TEXT))))OR((NOT (vt1.c1)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((((vt1.lid)AND(vt1.c1)))OR('391122414')))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c1)))OR((+ (vt1.c1)))))AND(((vt1.c0)<(vt1.lid)))))AND(CAST(vt1.c0 AS TEXT))))OR((NOT (vt1.c1)))) WHERE (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((((vt1.lid)AND(vt1.c1)))OR('391122414')))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c1)))OR((+ (vt1.c1)))))AND(((vt1.c0)<(vt1.lid)))))AND(CAST(vt1.c0 AS TEXT))))OR((NOT (vt1.c1)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((((((((((vt1.lid)AND(vt1.c1)))OR('391122414')))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c1)))OR((+ (vt1.c1)))))AND(((vt1.c0)<(vt1.lid)))))AND(CAST(vt1.c0 AS TEXT))))OR((NOT (vt1.c1)))) WHERE (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT * FROM vt1 WHERE (vt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0)))==(vt1.c0 COLLATE BINARY)) WHERE (x'f8f8');
SELECT SUM(count) FROM (SELECT ALL ((x'f8f8') IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0)))==(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0)))==(vt1.c0 COLLATE BINARY)) WHERE (x'f8f8');
SELECT SUM(count) FROM (SELECT ALL ((x'f8f8') IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0)))==(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0)))==(vt1.c0 COLLATE BINARY)) WHERE (x'f8f8');
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0)>>(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (STRFTIME(vt1.c1, 0.35910703045976966, vt0.c0) IN (((vt1.lid) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (STRFTIME(vt1.c1, 0.35910703045976966, vt0.c0) IN (((vt1.lid) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0)>>(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (STRFTIME(vt1.c1, 0.35910703045976966, vt0.c0) IN (((vt1.lid) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (STRFTIME(vt1.c1, 0.35910703045976966, vt0.c0) IN (((vt1.lid) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0)>>(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) ORDER BY (STRFTIME(vt1.c1, 0.35910703045976966, vt0.c0) IN (((vt1.lid) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((NULL IN ())) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT ALL * FROM vt1 WHERE ((NULL IN ())) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT ALL * FROM vt1 WHERE ((NULL IN ())) ORDER BY vt1.c1 DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (- (0.2683933302343441))  WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE vt1.lid END) ORDER BY CAST(CASE vt1.lid  WHEN x'' THEN 'ᕊZ' END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (- (0.2683933302343441))  WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.lid  WHEN x'' THEN 'ᕊZ' END AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (- (0.2683933302343441))  WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE vt1.lid END) ORDER BY CAST(CASE vt1.lid  WHEN x'' THEN 'ᕊZ' END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (- (0.2683933302343441))  WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.lid  WHEN x'' THEN 'ᕊZ' END AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (- (0.2683933302343441))  WHEN (+ (vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE vt1.lid END) ORDER BY CAST(CASE vt1.lid  WHEN x'' THEN 'ᕊZ' END AS BLOB) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.lid)*(vt1.c0))) NOT BETWEEN (CASE WHEN '1858317656' THEN vt1.c0 END) AND (((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) WHERE (vt1.c1) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.lid)*(vt1.c0))) NOT BETWEEN (CASE WHEN '1858317656' THEN vt1.c0 END) AND (((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.lid)*(vt1.c0))) NOT BETWEEN (CASE WHEN '1858317656' THEN vt1.c0 END) AND (((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) WHERE (vt1.c1) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.lid)*(vt1.c0))) NOT BETWEEN (CASE WHEN '1858317656' THEN vt1.c0 END) AND (((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.lid)*(vt1.c0))) NOT BETWEEN (CASE WHEN '1858317656' THEN vt1.c0 END) AND (((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) WHERE (vt1.c1) ORDER BY ((vt0.c0 COLLATE BINARY)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))));
SELECT * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'1299' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'1299' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'1299' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'1299' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'1299' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD(((vt1.c1) IS FALSE), 0.027422948612433884));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c1) IS FALSE), 0.027422948612433884)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD(((vt1.c1) IS FALSE), 0.027422948612433884));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c1) IS FALSE), 0.027422948612433884)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD(((vt1.c1) IS FALSE), 0.027422948612433884));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (vt1.lid) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL)) NOT BETWEEN (vt1.lid) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (vt1.lid) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL)) NOT BETWEEN (vt1.lid) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (vt1.lid) AND (((vt0.c0) IS TRUE))));
SELECT * FROM vt0, vt1 WHERE (((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)*(vt0.c0))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)*(vt0.c0))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)*(vt0.c0))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c1);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB));
SELECT * FROM vt0, vt1 WHERE (((NULL)IS NOT(CASE WHEN vt1.c1 THEN 0.6826752102690667 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(CASE WHEN vt1.c1 THEN 0.6826752102690667 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE) ASC);
SELECT * FROM vt0, vt1 WHERE (((NULL)IS NOT(CASE WHEN vt1.c1 THEN 0.6826752102690667 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(CASE WHEN vt1.c1 THEN 0.6826752102690667 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE) ASC);
SELECT * FROM vt0, vt1 WHERE (((NULL)IS NOT(CASE WHEN vt1.c1 THEN 0.6826752102690667 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (json_object(((vt1.lid)*(vt0.c0)), CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt1.lid)*(vt0.c0)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (json_object(((vt1.lid)*(vt0.c0)), CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt1.lid)*(vt0.c0)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0 WHERE (((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))*(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))*(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))*(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))*(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'') BETWEEN (vt0.c0) AND (vt0.c0)))*(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (('2058797721' IN ()));
SELECT SUM(count) FROM (SELECT ((('2058797721' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('2058797721' IN ()));
SELECT SUM(count) FROM (SELECT ((('2058797721' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('2058797721' IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END  WHEN HEX(vt1.lid) THEN CAST(vt1.c1 AS TEXT) ELSE vt1.lid END) ORDER BY ((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)>=(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST, ((load_extension(vt1.lid, vt1.c0))AND(NULL)) ASC, (((vt1.c1)) BETWEEN ((vt1.lid)) AND ((vt1.lid)));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END  WHEN HEX(vt1.lid) THEN CAST(vt1.c1 AS TEXT) ELSE vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY ((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)>=(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST, ((load_extension(vt1.lid, vt1.c0))AND(NULL)) ASC, (((vt1.c1)) BETWEEN ((vt1.lid)) AND ((vt1.lid))));
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END  WHEN HEX(vt1.lid) THEN CAST(vt1.c1 AS TEXT) ELSE vt1.lid END) ORDER BY ((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)>=(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST, ((load_extension(vt1.lid, vt1.c0))AND(NULL)) ASC, (((vt1.c1)) BETWEEN ((vt1.lid)) AND ((vt1.lid)));
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END  WHEN HEX(vt1.lid) THEN CAST(vt1.c1 AS TEXT) ELSE vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY ((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)>=(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST, ((load_extension(vt1.lid, vt1.c0))AND(NULL)) ASC, (((vt1.c1)) BETWEEN ((vt1.lid)) AND ((vt1.lid))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json(0x4e19ec0401569610));
SELECT SUM(count) FROM (SELECT ALL ((json(0X4e19ec0401569610)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json(0x4e19ec0401569610));
SELECT SUM(count) FROM (SELECT ALL ((json(0X4e19ec0401569610)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json(0x4e19ec0401569610));
SELECT COUNT(*) FROM vt0 WHERE (LOWER(UPPER(DISTINCT vt0.c0))) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(UPPER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(UPPER(DISTINCT vt0.c0))) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(UPPER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(UPPER(DISTINCT vt0.c0))) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (-1673663361);
SELECT SUM(count) FROM (SELECT ((-1673663361) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (-1673663361);
SELECT SUM(count) FROM (SELECT ((-1673663361) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (-1673663361);
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((0.1492607316101351)AND(((((((((((((vt1.c0)OR(0.3520498833422818)))OR(vt0.c0)))AND('-1598707424')))AND(0.8271785400013554)))AND(vt1.c0)))AND(NULL)))))OR((((vt0.c0))<>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY ((((0.1492607316101351)AND(((((((((((((vt1.c0)OR(0.3520498833422818)))OR(vt0.c0)))AND('-1598707424')))AND(0.8271785400013554)))AND(vt1.c0)))AND(NULL)))))OR((((vt0.c0))!=((vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((0.1492607316101351)AND(((((((((((((vt1.c0)OR(0.3520498833422818)))OR(vt0.c0)))AND('-1598707424')))AND(0.8271785400013554)))AND(vt1.c0)))AND(NULL)))))OR((((vt0.c0))<>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY ((((0.1492607316101351)AND(((((((((((((vt1.c0)OR(0.3520498833422818)))OR(vt0.c0)))AND('-1598707424')))AND(0.8271785400013554)))AND(vt1.c0)))AND(NULL)))))OR((((vt0.c0))!=((vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((((0.1492607316101351)AND(((((((((((((vt1.c0)OR(0.3520498833422818)))OR(vt0.c0)))AND('-1598707424')))AND(0.8271785400013554)))AND(vt1.c0)))AND(NULL)))))OR((((vt0.c0))<>((vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT NULL COLLATE NOCASE)) ORDER BY IFNULL(CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT NULL COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT NULL COLLATE NOCASE)) ORDER BY IFNULL(CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT NULL COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT NULL COLLATE NOCASE)) ORDER BY IFNULL(CAST(vt0.c0 AS BLOB), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)))  NULLS LAST, ((((NULL)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)))  NULLS LAST, ((((NULL)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (''))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)))  NULLS LAST, ((((NULL)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)))  NULLS LAST, ((((NULL)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (''))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(CAST(vt0.c0 AS INTEGER)))  NULLS LAST, ((((NULL)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST, UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (''))) DESC;
SELECT ALL * FROM vt0 WHERE ((('J]') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('J]') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('J]') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('J]') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('J]') ISNULL));
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((0.9176440157789895)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))) BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (((vt1.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((0.9176440157789895)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))) BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (((vt1.c1)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((0.9176440157789895)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))) BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (((vt1.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((0.9176440157789895)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))) BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (((vt1.c1)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((0.9176440157789895)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))) BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (((vt1.c1)IS(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c1)-(vt1.lid))) AND (CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0.665842812159372 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c1)-(vt1.lid))) AND (CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0.665842812159372 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c1)-(vt1.lid))) AND (CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0.665842812159372 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c1)-(vt1.lid))) AND (CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0.665842812159372 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c1)-(vt1.lid))) AND (CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0.665842812159372 END)));
SELECT ALL * FROM vt0, vt1 WHERE (-1.082316251E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.082316251E9) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (-1.082316251E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.082316251E9) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (-1.082316251E9);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.lid)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.lid) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.lid) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.lid)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.lid) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.lid) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.lid)OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.lid) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) NOT NULL))IS NOT(CAST(vt1.lid AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) NOT NULL))IS NOT(CAST(vt1.lid AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) NOT NULL))IS NOT(CAST(vt1.lid AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) NOT NULL))IS NOT(CAST(vt1.lid AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) NOT NULL))IS NOT(CAST(vt1.lid AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((NULL IN ()) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0)|(((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)|(((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)|(((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))) AND ((TRIM(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))) AND ((TRIM(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))) AND ((TRIM(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))) AND ((TRIM(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))) AND ((TRIM(vt0.c0, vt0.c0)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((((((((x'd776')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.lid)))GLOB((vt1.lid IN ()))) WHERE ((((vt1.lid IN (vt1.c0, vt0.c0)))%(((vt1.lid)<(vt1.c1))))) ORDER BY (((vt0.c0 IN ()))GLOB(CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN (vt1.c0, vt0.c0)))%(((vt1.lid)<(vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((((x'd776')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.lid)))GLOB((vt1.lid IN ()))) ORDER BY (((vt0.c0 IN ()))GLOB(CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((((((((x'd776')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.lid)))GLOB((vt1.lid IN ()))) WHERE ((((vt1.lid IN (vt1.c0, vt0.c0)))%(((vt1.lid)<(vt1.c1))))) ORDER BY (((vt0.c0 IN ()))GLOB(CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN (vt1.c0, vt0.c0)))%(((vt1.lid)<(vt1.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((((x'd776')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.lid)))GLOB((vt1.lid IN ()))) ORDER BY (((vt0.c0 IN ()))GLOB(CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((((((((x'd776')AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.lid)))GLOB((vt1.lid IN ()))) WHERE ((((vt1.lid IN (vt1.c0, vt0.c0)))%(((vt1.lid)<(vt1.c1))))) ORDER BY (((vt0.c0 IN ()))GLOB(CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)))) AND ((((vt1.c1) ISNULL))))) ORDER BY JULIANDAY(vt1.c0, CAST(vt1.lid AS BLOB), (NOT (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)))) AND ((((vt1.c1) ISNULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY JULIANDAY(vt1.c0, CAST(vt1.lid AS BLOB), (NOT (NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)))) AND ((((vt1.c1) ISNULL))))) ORDER BY JULIANDAY(vt1.c0, CAST(vt1.lid AS BLOB), (NOT (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)))) AND ((((vt1.c1) ISNULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY JULIANDAY(vt1.c0, CAST(vt1.lid AS BLOB), (NOT (NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)))) AND ((((vt1.c1) ISNULL))))) ORDER BY JULIANDAY(vt1.c0, CAST(vt1.lid AS BLOB), (NOT (NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0, vt0.c0, '-800005234'))=((vt0.c0, vt0.c0, vt0.c0)))))<=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, vt0.c0, '-800005234'))==((vt0.c0, vt0.c0, vt0.c0)))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0, vt0.c0, '-800005234'))=((vt0.c0, vt0.c0, vt0.c0)))))<=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0, vt0.c0, '-800005234'))==((vt0.c0, vt0.c0, vt0.c0)))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0, vt0.c0, '-800005234'))=((vt0.c0, vt0.c0, vt0.c0)))))<=((vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('180280529')<>(((vt1.c0)IS(vt0.c0))))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL (((('180280529')!=(((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('180280529')<>(((vt1.c0)IS(vt0.c0))))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL (((('180280529')!=(((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('180280529')<>(((vt1.c0)IS(vt0.c0))))) ORDER BY vt1.lid;
SELECT ALL COUNT(*) FROM vt0 WHERE (((1.945875151E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY (- (((vt0.c0)<=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1.945875151E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)<=(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((1.945875151E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY (- (((vt0.c0)<=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1.945875151E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)<=(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((1.945875151E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY (- (((vt0.c0)<=(vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((0.6570836637506804))!=((NULL)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))&(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.6570836637506804))!=((NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))&(vt1.c0)) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((0.6570836637506804))!=((NULL)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))&(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.6570836637506804))!=((NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))&(vt1.c0)) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((0.6570836637506804))!=((NULL)))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))&(vt1.c0)) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST('w' AS BLOB) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) ASC  NULLS FIRST, TYPEOF(((vt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST('w' AS BLOB) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) ASC  NULLS FIRST, TYPEOF(((vt0.c0) IS TRUE)) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST('w' AS BLOB) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) ASC  NULLS FIRST, TYPEOF(((vt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST('w' AS BLOB) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) ASC  NULLS FIRST, TYPEOF(((vt0.c0) IS TRUE)) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST('w' AS BLOB) DESC, (((vt0.c0)IS(vt0.c0)) IN ()) ASC  NULLS FIRST, TYPEOF(((vt0.c0) IS TRUE)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (399642667) ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((399642667) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c1 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (399642667) ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c1 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((399642667) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c1 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (399642667) ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c1 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL)) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL)) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (0.8674740625380611) ORDER BY (LIKELIHOOD(DISTINCT vt1.c1, 0.6583090070391725) IN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0.8674740625380611) IS TRUE)  as count FROM vt1 ORDER BY (LIKELIHOOD(DISTINCT vt1.c1, 0.6583090070391725) IN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (0.8674740625380611) ORDER BY (LIKELIHOOD(DISTINCT vt1.c1, 0.6583090070391725) IN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((0.8674740625380611) IS TRUE)  as count FROM vt1 ORDER BY (LIKELIHOOD(DISTINCT vt1.c1, 0.6583090070391725) IN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (0.8674740625380611) ORDER BY (LIKELIHOOD(DISTINCT vt1.c1, 0.6583090070391725) IN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND (((vt0.c0 IN ())))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((0.6272289757359512)*(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.6272289757359512)*(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)>=(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((0.6272289757359512)*(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.6272289757359512)*(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)>=(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((0.6272289757359512)*(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.lid  WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN -673978599 WHEN vt1.c1 THEN vt1.lid END COLLATE BINARY) ORDER BY ((ROUND(vt1.c1, vt1.lid))||(((vt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.lid  WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN -673978599 WHEN vt1.c1 THEN vt1.lid END COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((ROUND(vt1.c1, vt1.lid))||(((vt1.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.lid  WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN -673978599 WHEN vt1.c1 THEN vt1.lid END COLLATE BINARY) ORDER BY ((ROUND(vt1.c1, vt1.lid))||(((vt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.lid  WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN -673978599 WHEN vt1.c1 THEN vt1.lid END COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((ROUND(vt1.c1, vt1.lid))||(((vt1.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.lid  WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN -673978599 WHEN vt1.c1 THEN vt1.lid END COLLATE BINARY) ORDER BY ((ROUND(vt1.c1, vt1.lid))||(((vt1.c1) IS TRUE)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1)*(0.34365182585032916)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)*(0.34365182585032916)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1)*(0.34365182585032916)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)*(0.34365182585032916)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1)*(0.34365182585032916)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (((json_type(vt1.lid))LIKE(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY ((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c1))) IN (CASE WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.lid))LIKE(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c1))) IN (CASE WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((json_type(vt1.lid))LIKE(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY ((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c1))) IN (CASE WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.lid))LIKE(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c1))) IN (CASE WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((json_type(vt1.lid))LIKE(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY ((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c1))) IN (CASE WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) IN (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) IN (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) IN (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) IN (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')) IN (json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) ORDER BY (((('{M[')|(vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((('{M[')|(vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) ORDER BY (((('{M[')|(vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((('{M[')|(vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) ORDER BY (((('{M[')|(vt0.c0))) IS FALSE)  NULLS LAST, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))<<(json_type(vt0.c0)))) ORDER BY ((SQLITE_VERSION()) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))<<(json_type(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((SQLITE_VERSION()) ISNULL));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))<<(json_type(vt0.c0)))) ORDER BY ((SQLITE_VERSION()) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))<<(json_type(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((SQLITE_VERSION()) ISNULL));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))<<(json_type(vt0.c0)))) ORDER BY ((SQLITE_VERSION()) ISNULL);
SELECT ALL * FROM vt0 WHERE ((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY TYPEOF(TRIM(vt0.c0, vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(TRIM(vt0.c0, vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE ((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY TYPEOF(TRIM(vt0.c0, vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(TRIM(vt0.c0, vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE ((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY TYPEOF(TRIM(vt0.c0, vt0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)<<(vt1.c1)))AND((~ (vt1.c1)))))OR(load_extension(vt1.lid, vt1.lid))))OR(((vt1.c1) ISNULL))))OR(((x'f138') NOTNULL)))) ORDER BY (((((((((((vt1.lid))<>((vt1.c0))))OR(CAST(vt1.c0 AS REAL))))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))AND(((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)))))AND(((((vt1.c0)OR(vt1.lid)))AND(vt1.c0)))) ASC  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)<<(vt1.c1)))AND((~ (vt1.c1)))))OR(load_extension(vt1.lid, vt1.lid))))OR(((vt1.c1) ISNULL))))OR(((x'f138') NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.lid))!=((vt1.c0))))OR(CAST(vt1.c0 AS REAL))))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))AND(((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)))))AND(((((vt1.c0)OR(vt1.lid)))AND(vt1.c0)))) ASC  NULLS LAST, NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)<<(vt1.c1)))AND((~ (vt1.c1)))))OR(load_extension(vt1.lid, vt1.lid))))OR(((vt1.c1) ISNULL))))OR(((x'f138') NOTNULL)))) ORDER BY (((((((((((vt1.lid))<>((vt1.c0))))OR(CAST(vt1.c0 AS REAL))))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))AND(((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)))))AND(((((vt1.c0)OR(vt1.lid)))AND(vt1.c0)))) ASC  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)<<(vt1.c1)))AND((~ (vt1.c1)))))OR(load_extension(vt1.lid, vt1.lid))))OR(((vt1.c1) ISNULL))))OR(((x'f138') NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.lid))!=((vt1.c0))))OR(CAST(vt1.c0 AS REAL))))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))AND(((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)))))AND(((((vt1.c0)OR(vt1.lid)))AND(vt1.c0)))) ASC  NULLS LAST, NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1)|(vt1.lid))))) ORDER BY (((((vt1.c0))<=((vt1.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1)|(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1)|(vt1.lid))))) ORDER BY (((((vt1.c0))<=((vt1.c0)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1)|(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1)|(vt1.lid))))) ORDER BY (((((vt1.c0))<=((vt1.c0)))) ISNULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (STRFTIME(((((vt0.c0)AND(vt1.c0)))AND(NULL)), vt1.c1 COLLATE BINARY, (((0.9176440157789895)) BETWEEN (('9<')) AND ((vt1.c1))))) ORDER BY ((CAST(vt1.lid AS BLOB))||(((vt1.c0)||('-1254680135'))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((((vt0.c0)AND(vt1.c0)))AND(NULL)), vt1.c1 COLLATE BINARY, (((0.9176440157789895)) BETWEEN (('9<')) AND ((vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS BLOB))||(((vt1.c0)||('-1254680135')))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (STRFTIME(((((vt0.c0)AND(vt1.c0)))AND(NULL)), vt1.c1 COLLATE BINARY, (((0.9176440157789895)) BETWEEN (('9<')) AND ((vt1.c1))))) ORDER BY ((CAST(vt1.lid AS BLOB))||(((vt1.c0)||('-1254680135'))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((((vt0.c0)AND(vt1.c0)))AND(NULL)), vt1.c1 COLLATE BINARY, (((0.9176440157789895)) BETWEEN (('9<')) AND ((vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS BLOB))||(((vt1.c0)||('-1254680135')))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (STRFTIME(((((vt0.c0)AND(vt1.c0)))AND(NULL)), vt1.c1 COLLATE BINARY, (((0.9176440157789895)) BETWEEN (('9<')) AND ((vt1.c1))))) ORDER BY ((CAST(vt1.lid AS BLOB))||(((vt1.c0)||('-1254680135'))));
SELECT * FROM vt0, vt1 WHERE ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)) IN (vt1.c1, CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)) IN (vt1.c1, CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)) IN (vt1.c1, CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)) IN (vt1.c1, CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)) IN (vt1.c1, CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END))) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((ABS(vt1.lid))AND((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('1750266468'))))))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.lid)))))OR(x'')))OR(CASE WHEN vt0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((ABS(vt1.lid))AND((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('1750266468'))))))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.lid)))))OR(x'')))OR(CASE WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((ABS(vt1.lid))AND((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('1750266468'))))))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.lid)))))OR(x'')))OR(CASE WHEN vt0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((ABS(vt1.lid))AND((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('1750266468'))))))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.lid)))))OR(x'')))OR(CASE WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((ABS(vt1.lid))AND((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('1750266468'))))))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.lid)))))OR(x'')))OR(CASE WHEN vt0.c0 THEN vt1.c1 END)));
SELECT COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('');
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=('0.7735144711052039'))) NOT NULL)) ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=('0.7735144711052039'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=('0.7735144711052039'))) NOT NULL)) ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=('0.7735144711052039'))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=('0.7735144711052039'))) NOT NULL)) ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (LTRIM(vt1.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NULL)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (LTRIM(vt1.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NULL)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (LTRIM(vt1.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1002025864' ELSE vt0.c0 END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1002025864' ELSE vt0.c0 END AS INTEGER) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1002025864' ELSE vt0.c0 END AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1002025864' ELSE vt0.c0 END AS INTEGER) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1002025864' ELSE vt0.c0 END AS INTEGER) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), NULL, vt0.c0)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), NULL, vt0.c0)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), NULL, vt0.c0)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), NULL, vt0.c0)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), NULL, vt0.c0)) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)))) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC)  NULLS FIRST, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT * FROM vt0 WHERE (((('525679044')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((x'f84c')*(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('525679044')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((x'f84c')*(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((('525679044')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((x'f84c')*(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('525679044')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((x'f84c')*(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((('525679044')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((x'f84c')*(CAST(vt0.c0 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END) AND (((vt1.lid)>>(vt1.lid))))) ORDER BY CASE (((vt1.lid))<((vt1.c1)))  WHEN (((vt1.c1, vt1.c1, x'')) BETWEEN ((vt1.lid, vt1.c1, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) THEN ((vt1.lid) NOT BETWEEN (x'd426') AND (vt1.c0)) ELSE (+ (vt1.c0)) END DESC  NULLS LAST, CAST(CASE vt1.lid  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END AS REAL) ASC, CASE vt1.lid  WHEN vt1.lid THEN 0.8674740625380611 ELSE vt1.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END) AND (((vt1.lid)>>(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (((vt1.lid))<((vt1.c1)))  WHEN (((vt1.c1, vt1.c1, x'')) BETWEEN ((vt1.lid, vt1.c1, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) THEN ((vt1.lid) NOT BETWEEN (x'd426') AND (vt1.c0)) ELSE (+ (vt1.c0)) END DESC  NULLS LAST, CAST(CASE vt1.lid  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END AS REAL) ASC, CASE vt1.lid  WHEN vt1.lid THEN 0.8674740625380611 ELSE vt1.c1 END COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END) AND (((vt1.lid)>>(vt1.lid))))) ORDER BY CASE (((vt1.lid))<((vt1.c1)))  WHEN (((vt1.c1, vt1.c1, x'')) BETWEEN ((vt1.lid, vt1.c1, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) THEN ((vt1.lid) NOT BETWEEN (x'd426') AND (vt1.c0)) ELSE (+ (vt1.c0)) END DESC  NULLS LAST, CAST(CASE vt1.lid  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END AS REAL) ASC, CASE vt1.lid  WHEN vt1.lid THEN 0.8674740625380611 ELSE vt1.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END) AND (((vt1.lid)>>(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (((vt1.lid))<((vt1.c1)))  WHEN (((vt1.c1, vt1.c1, x'')) BETWEEN ((vt1.lid, vt1.c1, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) THEN ((vt1.lid) NOT BETWEEN (x'd426') AND (vt1.c0)) ELSE (+ (vt1.c0)) END DESC  NULLS LAST, CAST(CASE vt1.lid  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END AS REAL) ASC, CASE vt1.lid  WHEN vt1.lid THEN 0.8674740625380611 ELSE vt1.c1 END COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END) AND (((vt1.lid)>>(vt1.lid))))) ORDER BY CASE (((vt1.lid))<((vt1.c1)))  WHEN (((vt1.c1, vt1.c1, x'')) BETWEEN ((vt1.lid, vt1.c1, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) THEN ((vt1.lid) NOT BETWEEN (x'd426') AND (vt1.c0)) ELSE (+ (vt1.c0)) END DESC  NULLS LAST, CAST(CASE vt1.lid  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END AS REAL) ASC, CASE vt1.lid  WHEN vt1.lid THEN 0.8674740625380611 ELSE vt1.c1 END COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)<<(-1819401019)))), ((((vt0.c0)>=(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)<<(-1819401019)))), ((((vt0.c0)>=(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)<<(-1819401019)))), ((((vt0.c0)>=(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)<<(-1819401019)))), ((((vt0.c0)>=(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0)<<(-1819401019)))), ((((vt0.c0)>=(vt0.c0))) IS FALSE);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((x'') BETWEEN (vt1.c1) AND (vt1.lid))) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((x'') BETWEEN (vt1.c1) AND (vt1.lid))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((x'') BETWEEN (vt1.c1) AND (vt1.lid))) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((x'') BETWEEN (vt1.c1) AND (vt1.lid))) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (((x'') BETWEEN (vt1.c1) AND (vt1.lid))) AND ((- (vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.0035697883342690195))AND(((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c0, 0.0035697883342690195))AND(((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.0035697883342690195))AND(((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c0, 0.0035697883342690195))AND(((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.0035697883342690195))AND(((vt1.lid) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))|(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))|(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))|(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))|(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))|(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid COLLATE RTRIM ELSE IFNULL(DISTINCT vt1.lid, vt1.lid) END) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.lid END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid COLLATE RTRIM ELSE IFNULL(DISTINCT vt1.lid, vt1.lid) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.lid END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid COLLATE RTRIM ELSE IFNULL(DISTINCT vt1.lid, vt1.lid) END) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.lid END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid COLLATE RTRIM ELSE IFNULL(DISTINCT vt1.lid, vt1.lid) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.lid END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid COLLATE RTRIM ELSE IFNULL(DISTINCT vt1.lid, vt1.lid) END) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.lid END IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)AND(vt1.c0))  WHEN NULL THEN ((vt1.c0)IS NOT(0.03924917283935303)) ELSE DATE(vt1.c1, vt1.c1, 'L!ZI', vt1.c1, vt1.c0) END) ORDER BY (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c1 END IN (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)AND(vt1.c0))  WHEN NULL THEN ((vt1.c0)IS NOT(0.03924917283935303)) ELSE DATE(vt1.c1, vt1.c1, 'L!ZI', vt1.c1, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c1 END IN (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)AND(vt1.c0))  WHEN NULL THEN ((vt1.c0)IS NOT(0.03924917283935303)) ELSE DATE(vt1.c1, vt1.c1, 'L!ZI', vt1.c1, vt1.c0) END) ORDER BY (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c1 END IN (NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)AND(vt1.c0))  WHEN NULL THEN ((vt1.c0)IS NOT(0.03924917283935303)) ELSE DATE(vt1.c1, vt1.c1, 'L!ZI', vt1.c1, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c1 END IN (NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)AND(vt1.c0))  WHEN NULL THEN ((vt1.c0)IS NOT(0.03924917283935303)) ELSE DATE(vt1.c1, vt1.c1, 'L!ZI', vt1.c1, vt1.c0) END) ORDER BY (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c1 END IN (NULL)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ('2000639456') ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2000639456') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ('2000639456') ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2000639456') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ('2000639456') ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))>>((vt1.lid IN ())))) ORDER BY (NOT ((vt1.c1 IN (vt0.c0, vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))>>((vt1.lid IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((vt1.c1 IN (vt0.c0, vt1.lid)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))>>((vt1.lid IN ())))) ORDER BY (NOT ((vt1.c1 IN (vt0.c0, vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))>>((vt1.lid IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((vt1.c1 IN (vt0.c0, vt1.lid)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt0.c0)))>>((vt1.lid IN ())))) ORDER BY (NOT ((vt1.c1 IN (vt0.c0, vt1.lid))));
SELECT ALL * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) ORDER BY (((vt0.c0) NOTNULL) IN ((vt0.c0 IN ()), ((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ((vt0.c0 IN ()), ((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) ORDER BY (((vt0.c0) NOTNULL) IN ((vt0.c0 IN ()), ((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ((vt0.c0 IN ()), ((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) ORDER BY (((vt0.c0) NOTNULL) IN ((vt0.c0 IN ()), ((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.lid))))LIKE(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.lid))))LIKE(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.lid))))LIKE(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.lid))))LIKE(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.lid))))LIKE(((vt0.c0)>=(vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid COLLATE NOCASE) BETWEEN (((vt1.c0) NOT BETWEEN (-1807182851) AND (vt0.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE NOCASE) BETWEEN (((vt1.c0) NOT BETWEEN (-1807182851) AND (vt0.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid COLLATE NOCASE) BETWEEN (((vt1.c0) NOT BETWEEN (-1807182851) AND (vt0.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE NOCASE) BETWEEN (((vt1.c0) NOT BETWEEN (-1807182851) AND (vt0.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid COLLATE NOCASE) BETWEEN (((vt1.c0) NOT BETWEEN (-1807182851) AND (vt0.c0))) AND (vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.lid)-(vt1.c0)) AS INTEGER)) ORDER BY (~ (((vt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.lid)-(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.lid)-(vt1.c0)) AS INTEGER)) ORDER BY (~ (((vt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.lid)-(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.lid)-(vt1.c0)) AS INTEGER)) ORDER BY (~ (((vt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((((NULL))<=((vt0.c0))))>=((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NULL))<=((vt0.c0))))>=((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL))<=((vt0.c0))))>=((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NULL))<=((vt0.c0))))>=((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL))<=((vt0.c0))))>=((+ (vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY -180558139;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY -180558139);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c1 COLLATE RTRIM AS TEXT)) ORDER BY -180558139;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY -180558139);
SELECT ALL * FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (~ (vt1.c0)) THEN ((vt0.c0) ISNULL) WHEN (vt1.lid IN ()) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN ABS(vt1.lid) END) ORDER BY '-775000768' DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS REAL)  WHEN (~ (vt1.c0)) THEN ((vt0.c0) ISNULL) WHEN (vt1.lid IN ()) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN ABS(vt1.lid) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-775000768' DESC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (~ (vt1.c0)) THEN ((vt0.c0) ISNULL) WHEN (vt1.lid IN ()) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN ABS(vt1.lid) END) ORDER BY '-775000768' DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS REAL)  WHEN (~ (vt1.c0)) THEN ((vt0.c0) ISNULL) WHEN (vt1.lid IN ()) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN ABS(vt1.lid) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-775000768' DESC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (~ (vt1.c0)) THEN ((vt0.c0) ISNULL) WHEN (vt1.lid IN ()) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN ABS(vt1.lid) END) ORDER BY '-775000768' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(UNLIKELY(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(vt1.c1, vt1.c0)) ISNULL)) ORDER BY ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)<<(CASE WHEN vt0.c0 THEN vt1.lid END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)<<(CASE WHEN vt0.c0 THEN vt1.lid END)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(vt1.c1, vt1.c0)) ISNULL)) ORDER BY ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)<<(CASE WHEN vt0.c0 THEN vt1.lid END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)<<(CASE WHEN vt0.c0 THEN vt1.lid END)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(vt1.c1, vt1.c0)) ISNULL)) ORDER BY ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)<<(CASE WHEN vt0.c0 THEN vt1.lid END)) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)||(CAST(vt1.c0 AS INTEGER)))) ORDER BY LOWER((vt1.lid IN ())) DESC, ((COALESCE(vt1.c1, vt1.lid))&(((vt0.c0)<=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)||(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER((vt1.lid IN ())) DESC, ((COALESCE(vt1.c1, vt1.lid))&(((vt0.c0)<=(vt1.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)||(CAST(vt1.c0 AS INTEGER)))) ORDER BY LOWER((vt1.lid IN ())) DESC, ((COALESCE(vt1.c1, vt1.lid))&(((vt0.c0)<=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)||(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER((vt1.lid IN ())) DESC, ((COALESCE(vt1.c1, vt1.lid))&(((vt0.c0)<=(vt1.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)||(CAST(vt1.c0 AS INTEGER)))) ORDER BY LOWER((vt1.lid IN ())) DESC, ((COALESCE(vt1.c1, vt1.lid))&(((vt0.c0)<=(vt1.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((NULL) IS TRUE)) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (- (ROUND(x'', x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (- (ROUND(x'', x'')))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) IS TRUE)) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (- (ROUND(x'', x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (- (ROUND(x'', x'')))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) IS TRUE)) ORDER BY CAST(vt0.c0 AS BLOB)  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (- (ROUND(x'', x'')))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)*((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY 0x13b0dc5b DESC  NULLS LAST, (((vt1.c1)) BETWEEN (((((vt1.c0, vt1.lid, vt1.c1)) BETWEEN ((vt1.lid, vt1.c1, NULL)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c1) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0x13b0dc5b DESC  NULLS LAST, (((vt1.c1)) BETWEEN (((((vt1.c0, vt1.lid, vt1.c1)) BETWEEN ((vt1.lid, vt1.c1, NULL)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c1) NOTNULL)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)*((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY 0x13b0dc5b DESC  NULLS LAST, (((vt1.c1)) BETWEEN (((((vt1.c0, vt1.lid, vt1.c1)) BETWEEN ((vt1.lid, vt1.c1, NULL)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c1) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0x13b0dc5b DESC  NULLS LAST, (((vt1.c1)) BETWEEN (((((vt1.c0, vt1.lid, vt1.c1)) BETWEEN ((vt1.lid, vt1.c1, NULL)) AND ((vt0.c0, vt1.c0, vt1.c0))))) AND ((((vt1.c1) NOTNULL)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)+(((vt0.c0)>(vt0.c0))))) ORDER BY IFNULL(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)+(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)+(((vt0.c0)>(vt0.c0))))) ORDER BY IFNULL(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)+(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)+(((vt0.c0)>(vt0.c0))))) ORDER BY IFNULL(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ASC, x'' DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT * FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))>>((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))>>((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))>>((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))>>((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.lid)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))>>((vt1.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)==(NULL)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)=(NULL)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)==(NULL)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)=(NULL)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)==(NULL)))))AND((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt1.lid)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.lid)AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt1.lid)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.lid)AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt1.lid)AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt0.c0)))AND(JULIANDAY(vt1.c0, vt1.lid, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt0.c0)))AND(JULIANDAY(vt1.c0, vt1.lid, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt0.c0)))AND(JULIANDAY(vt1.c0, vt1.lid, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt0.c0)))AND(JULIANDAY(vt1.c0, vt1.lid, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)AND(vt0.c0)))AND(JULIANDAY(vt1.c0, vt1.lid, vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY((vt1.lid IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY((vt1.lid IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt1.lid IN ())));
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-587986998');
SELECT SUM(count) FROM (SELECT (('-587986998') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-587986998');
SELECT SUM(count) FROM (SELECT (('-587986998') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-587986998');
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, RTRIM((vt0.c0 IN (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, RTRIM((vt0.c0 IN (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)<(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, RTRIM((vt0.c0 IN (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, RTRIM((vt0.c0 IN (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)<(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, RTRIM((vt0.c0 IN (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((vt0.c0)<(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND((~ ('197390710')))))AND(vt0.c0))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((~ ('197390710')))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND((~ ('197390710')))))AND(vt0.c0))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((~ ('197390710')))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND((~ ('197390710')))))AND(vt0.c0))) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE '{M['  WHEN '1354655802' THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE '{M['  WHEN '1354655802' THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE '{M['  WHEN '1354655802' THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE '{M['  WHEN '1354655802' THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE '{M['  WHEN '1354655802' THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) END);
SELECT ALL * FROM vt0, vt1 WHERE (((((0.829627259661032) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0.829627259661032) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((0.829627259661032) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0.829627259661032) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((0.829627259661032) ISNULL)) IS FALSE));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)GLOB(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.lid END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)GLOB(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.lid END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)GLOB(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.lid END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)GLOB(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.lid END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)GLOB(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt1.lid END)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END)AND(vt1.lid COLLATE NOCASE)) WHERE (((CAST(vt1.lid AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.lid AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END)AND(vt1.lid COLLATE NOCASE)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END)AND(vt1.lid COLLATE NOCASE)) WHERE (((CAST(vt1.lid AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.lid AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END)AND(vt1.lid COLLATE NOCASE)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END)AND(vt1.lid COLLATE NOCASE)) WHERE (((CAST(vt1.lid AS BLOB)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN vt1.c1 THEN x'32de' WHEN ((vt1.c0) IS TRUE) THEN x'' ELSE ((vt1.c0)+(vt1.c1)) END) ORDER BY CAST(((vt0.c0)>=('6G''Qr')) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN vt1.c1 THEN x'32de' WHEN ((vt1.c0) IS TRUE) THEN x'' ELSE ((vt1.c0)+(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0)>=('6G''Qr')) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN vt1.c1 THEN x'32de' WHEN ((vt1.c0) IS TRUE) THEN x'' ELSE ((vt1.c0)+(vt1.c1)) END) ORDER BY CAST(((vt0.c0)>=('6G''Qr')) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN vt1.c1 THEN x'32de' WHEN ((vt1.c0) IS TRUE) THEN x'' ELSE ((vt1.c0)+(vt1.c1)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0)>=('6G''Qr')) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN vt1.c1 THEN x'32de' WHEN ((vt1.c0) IS TRUE) THEN x'' ELSE ((vt1.c0)+(vt1.c1)) END) ORDER BY CAST(((vt0.c0)>=('6G''Qr')) AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)<<(x'')) THEN 202898275 COLLATE RTRIM WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c0)) WHEN ((vt1.c1)>(0.40031884532055084)) THEN ((NULL)AND(vt0.c0)) ELSE '~X' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(x'')) THEN 202898275 COLLATE RTRIM WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c0)) WHEN ((vt1.c1)>(0.40031884532055084)) THEN ((NULL)AND(vt0.c0)) ELSE '~X' END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)<<(x'')) THEN 202898275 COLLATE RTRIM WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c0)) WHEN ((vt1.c1)>(0.40031884532055084)) THEN ((NULL)AND(vt0.c0)) ELSE '~X' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<<(x'')) THEN 202898275 COLLATE RTRIM WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c0)) WHEN ((vt1.c1)>(0.40031884532055084)) THEN ((NULL)AND(vt0.c0)) ELSE '~X' END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)<<(x'')) THEN 202898275 COLLATE RTRIM WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c0)) WHEN ((vt1.c1)>(0.40031884532055084)) THEN ((NULL)AND(vt0.c0)) ELSE '~X' END);
SELECT ALL * FROM vt1 WHERE (CAST((~ (vt1.lid)) AS TEXT)) ORDER BY (vt1.c0 IN ()) DESC, x'' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.lid)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) DESC, x'' COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST((~ (vt1.lid)) AS TEXT)) ORDER BY (vt1.c0 IN ()) DESC, x'' COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.lid)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) DESC, x'' COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST((~ (vt1.lid)) AS TEXT)) ORDER BY (vt1.c0 IN ()) DESC, x'' COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN x'a4d5' THEN vt0.c0 ELSE vt0.c0 END))<((CASE WHEN vt0.c0 THEN 0.46403581659436044 END)))) ORDER BY (x'44f0' IN ()), (((NULL IN (vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE '1581258058' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN x'a4d5' THEN vt0.c0 ELSE vt0.c0 END))<((CASE WHEN vt0.c0 THEN 0.46403581659436044 END)))) IS TRUE)  as count FROM vt0 ORDER BY (x'44f0' IN ()), (((NULL IN (vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE '1581258058' END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN x'a4d5' THEN vt0.c0 ELSE vt0.c0 END))<((CASE WHEN vt0.c0 THEN 0.46403581659436044 END)))) ORDER BY (x'44f0' IN ()), (((NULL IN (vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE '1581258058' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN x'a4d5' THEN vt0.c0 ELSE vt0.c0 END))<((CASE WHEN vt0.c0 THEN 0.46403581659436044 END)))) IS TRUE)  as count FROM vt0 ORDER BY (x'44f0' IN ()), (((NULL IN (vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE '1581258058' END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE WHEN x'a4d5' THEN vt0.c0 ELSE vt0.c0 END))<((CASE WHEN vt0.c0 THEN 0.46403581659436044 END)))) ORDER BY (x'44f0' IN ()), (((NULL IN (vt0.c0)))OR(((vt0.c0) NOTNULL)))  NULLS FIRST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE '1581258058' END  NULLS FIRST;
SELECT * FROM vt0 WHERE (COALESCE(vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (COALESCE(vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (COALESCE(vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), vt0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (vt1.lid COLLATE NOCASE IN ()) WHERE ((((vt1.lid)) BETWEEN (((vt1.lid IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))OR(vt1.lid)))AND(vt1.c0)))))) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((vt1.lid IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))OR(vt1.lid)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (vt1.lid COLLATE NOCASE IN ()) ORDER BY ((vt1.c0) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (vt1.lid COLLATE NOCASE IN ()) WHERE ((((vt1.lid)) BETWEEN (((vt1.lid IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))OR(vt1.lid)))AND(vt1.c0)))))) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((vt1.lid IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))OR(vt1.lid)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (vt1.lid COLLATE NOCASE IN ()) ORDER BY ((vt1.c0) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (vt1.lid COLLATE NOCASE IN ()) WHERE ((((vt1.lid)) BETWEEN (((vt1.lid IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))OR(vt1.lid)))AND(vt1.c0)))))) ORDER BY ((vt1.c0) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1, vt1.c1, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.c1) AND (x'706f')), CAST(NULL AS NUMERIC), ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid END, NULLIF(DISTINCT vt1.c1, vt1.c1), NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.c1) AND (x'706f')), CAST(NULL AS NUMERIC), ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid END, NULLIF(DISTINCT vt1.c1, vt1.c1), NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1, vt1.c1, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.c1) AND (x'706f')), CAST(NULL AS NUMERIC), ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid END, NULLIF(DISTINCT vt1.c1, vt1.c1), NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.c1) AND (x'706f')), CAST(NULL AS NUMERIC), ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid END, NULLIF(DISTINCT vt1.c1, vt1.c1), NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1, vt1.c1, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.c1) AND (x'706f')), CAST(NULL AS NUMERIC), ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.lid END, NULLIF(DISTINCT vt1.c1, vt1.c1), NULL))));
SELECT COUNT(*) FROM vt1 WHERE (((0.5566412894603724)%((vt1.c0 IN (vt1.lid))))) ORDER BY (- (((vt1.c0)>>(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.5566412894603724)%((vt1.c0 IN (vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)>>(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((0.5566412894603724)%((vt1.c0 IN (vt1.lid))))) ORDER BY (- (((vt1.c0)>>(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.5566412894603724)%((vt1.c0 IN (vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)>>(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((0.5566412894603724)%((vt1.c0 IN (vt1.lid))))) ORDER BY (- (((vt1.c0)>>(vt1.c1)))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))<=(((NOT (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))<=(((NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))<=(((NOT (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))<=(((NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))<=(((NOT (vt1.c1))))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.lid IN ()) THEN NULL END) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.lid IN ()) THEN NULL END) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.lid IN ()) THEN NULL END) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.lid IN ()) THEN NULL END) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (vt1.lid IN ()) THEN NULL END) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE 0.4941091852026568  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END IN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0)));
SELECT SUM(count) FROM (SELECT (((CASE 0.4941091852026568  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END IN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE 0.4941091852026568  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END IN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0)));
SELECT SUM(count) FROM (SELECT (((CASE 0.4941091852026568  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END IN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE 0.4941091852026568  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END IN (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN 0.47812540117596725 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND('_憪')))OR(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (HEX(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c0 THEN 0.47812540117596725 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND('_憪')))OR(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (HEX(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN 0.47812540117596725 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND('_憪')))OR(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (HEX(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c0 THEN 0.47812540117596725 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND('_憪')))OR(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (HEX(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN 0.47812540117596725 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(CAST(vt0.c0 AS INTEGER))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND('_憪')))OR(((vt0.c0)IS NOT(vt0.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (HEX(vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION());
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION());
SELECT COUNT(*) FROM vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY SQLITE_VERSION();
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((- (vt1.c0))))>(((+ (vt0.c0))))) WHERE (UNLIKELY(((vt1.c0)=(vt1.c1)))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))|(vt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt1.c0)=(vt1.c1)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((- (vt1.c0))))>(((+ (vt0.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))|(vt1.c1)) ASC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((- (vt1.c0))))>(((+ (vt0.c0))))) WHERE (UNLIKELY(((vt1.c0)=(vt1.c1)))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))|(vt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt1.c0)=(vt1.c1)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((- (vt1.c0))))>(((+ (vt0.c0))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))|(vt1.c1)) ASC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((- (vt1.c0))))>(((+ (vt0.c0))))) WHERE (UNLIKELY(((vt1.c0)=(vt1.c1)))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))|(vt1.c1)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(LOWER(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt1.lid)) BETWEEN ((((vt0.c0) NOTNULL), ((0.13645978186596763) BETWEEN (vt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt1.lid) IS TRUE), ((vt1.c1)<=(vt0.c0)), ((vt1.lid) NOT BETWEEN (x'') AND (NULL))))) WHERE (((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.lid)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.lid)==(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt1.lid)) BETWEEN ((((vt0.c0) NOTNULL), ((0.13645978186596763) BETWEEN (vt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt1.lid) IS TRUE), ((vt1.c1)<=(vt0.c0)), ((vt1.lid) NOT BETWEEN (x'') AND (NULL))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt1.lid)) BETWEEN ((((vt0.c0) NOTNULL), ((0.13645978186596763) BETWEEN (vt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt1.lid) IS TRUE), ((vt1.c1)<=(vt0.c0)), ((vt1.lid) NOT BETWEEN (x'') AND (NULL))))) WHERE (((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.lid)=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.lid)==(vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt1.lid)) BETWEEN ((((vt0.c0) NOTNULL), ((0.13645978186596763) BETWEEN (vt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt1.lid) IS TRUE), ((vt1.c1)<=(vt0.c0)), ((vt1.lid) NOT BETWEEN (x'') AND (NULL))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt1.lid)) BETWEEN ((((vt0.c0) NOTNULL), ((0.13645978186596763) BETWEEN (vt1.c1) AND (vt0.c0)), CAST(vt0.c0 AS BLOB))) AND ((((vt1.lid) IS TRUE), ((vt1.c1)<=(vt0.c0)), ((vt1.lid) NOT BETWEEN (x'') AND (NULL))))) WHERE (((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt1.lid)=(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((('1357310892')||(CASE vt0.c0  WHEN -1e500 THEN NULL END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((('1357310892')||(CASE vt0.c0  WHEN -1e500 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 WHERE ((('1357310892')||(CASE vt0.c0  WHEN -1e500 THEN NULL END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((('1357310892')||(CASE vt0.c0  WHEN -1e500 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 WHERE ((('1357310892')||(CASE vt0.c0  WHEN -1e500 THEN NULL END))) ORDER BY NULL;
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END COLLATE BINARY);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x'')))) AND (CASE vt0.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END)) WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((ABS(DISTINCT vt1.c0) IN ())) ORDER BY CASE (((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c1)/(vt1.c0)) THEN (vt1.c0 IN ()) ELSE TRIM('-592137186') END DESC  NULLS LAST, (((((vt1.c0))>((vt1.c0)))) IS FALSE), (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)) IN ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c1)/(vt1.c0)) THEN (vt1.c0 IN ()) ELSE TRIM('-592137186') END DESC  NULLS LAST, (((((vt1.c0))>((vt1.c0)))) IS FALSE), (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)) IN ((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((ABS(DISTINCT vt1.c0) IN ())) ORDER BY CASE (((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c1)/(vt1.c0)) THEN (vt1.c0 IN ()) ELSE TRIM('-592137186') END DESC  NULLS LAST, (((((vt1.c0))>((vt1.c0)))) IS FALSE), (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)) IN ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((ABS(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c1)/(vt1.c0)) THEN (vt1.c0 IN ()) ELSE TRIM('-592137186') END DESC  NULLS LAST, (((((vt1.c0))>((vt1.c0)))) IS FALSE), (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)) IN ((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((ABS(DISTINCT vt1.c0) IN ())) ORDER BY CASE (((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c1)/(vt1.c0)) THEN (vt1.c0 IN ()) ELSE TRIM('-592137186') END DESC  NULLS LAST, (((((vt1.c0))>((vt1.c0)))) IS FALSE), (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)) IN ((~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.lid IN ())))) ORDER BY (('Ps*#!') NOT BETWEEN (SUBSTR(vt1.lid, vt1.lid)) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT (((- ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (('Ps*#!') NOT BETWEEN (SUBSTR(vt1.lid, vt1.lid)) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS LAST, vt1.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.lid IN ())))) ORDER BY (('Ps*#!') NOT BETWEEN (SUBSTR(vt1.lid, vt1.lid)) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT (((- ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (('Ps*#!') NOT BETWEEN (SUBSTR(vt1.lid, vt1.lid)) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS LAST, vt1.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.lid IN ())))) ORDER BY (('Ps*#!') NOT BETWEEN (SUBSTR(vt1.lid, vt1.lid)) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS LAST, vt1.c1;
SELECT * FROM vt0 CROSS JOIN vt1 ON NULL WHERE ((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL);
SELECT * FROM vt0 CROSS JOIN vt1 ON NULL WHERE ((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL);
SELECT * FROM vt0 CROSS JOIN vt1 ON NULL WHERE ((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOTNULL));
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (((((vt1.c1)>>(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (((((vt1.c1)>>(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (((((vt1.c1)>>(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0))>((vt1.lid))))OR(((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>((vt1.lid))))OR(((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0))>((vt1.lid))))OR(((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>((vt1.lid))))OR(((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0))>((vt1.lid))))OR(((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))));
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE CAST(x'' AS REAL)  WHEN ((NULL)*(vt1.c1)) THEN ((vt1.c1) NOT BETWEEN (1945875151) AND (vt1.lid)) ELSE (vt1.c0 IN ()) END WHERE (((((vt0.c0)LIKE(vt1.c0)))<(''))) ORDER BY ((((vt1.c0) IS FALSE))<<((((vt1.c1))<=((vt1.lid))))) DESC  NULLS FIRST, (+ (((vt1.c1)&(vt1.c1)))) DESC, ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.lid END)OR((((vt0.c0, vt1.c1, vt1.c1, vt1.c0, vt0.c0)) NOT BETWEEN (('-331206788', vt1.lid, vt1.c1, vt1.lid, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c1, vt1.lid))))))AND(((vt0.c0)==(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt1.c0)))<(''))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE CAST(x'' AS REAL)  WHEN ((NULL)*(vt1.c1)) THEN ((vt1.c1) NOT BETWEEN (1945875151) AND (vt1.lid)) ELSE (vt1.c0 IN ()) END ORDER BY ((((vt1.c0) IS FALSE))<<((((vt1.c1))<=((vt1.lid))))) DESC  NULLS FIRST, (+ (((vt1.c1)&(vt1.c1)))) DESC, ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.lid END)OR((((vt0.c0, vt1.c1, vt1.c1, vt1.c0, vt0.c0)) NOT BETWEEN (('-331206788', vt1.lid, vt1.c1, vt1.lid, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c1, vt1.lid))))))AND(((vt0.c0)==(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE CAST(x'' AS REAL)  WHEN ((NULL)*(vt1.c1)) THEN ((vt1.c1) NOT BETWEEN (1945875151) AND (vt1.lid)) ELSE (vt1.c0 IN ()) END WHERE (((((vt0.c0)LIKE(vt1.c0)))<(''))) ORDER BY ((((vt1.c0) IS FALSE))<<((((vt1.c1))<=((vt1.lid))))) DESC  NULLS FIRST, (+ (((vt1.c1)&(vt1.c1)))) DESC, ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.lid END)OR((((vt0.c0, vt1.c1, vt1.c1, vt1.c0, vt0.c0)) NOT BETWEEN (('-331206788', vt1.lid, vt1.c1, vt1.lid, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c1, vt1.lid))))))AND(((vt0.c0)==(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt1.c0)))<(''))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE CAST(x'' AS REAL)  WHEN ((NULL)*(vt1.c1)) THEN ((vt1.c1) NOT BETWEEN (1945875151) AND (vt1.lid)) ELSE (vt1.c0 IN ()) END ORDER BY ((((vt1.c0) IS FALSE))<<((((vt1.c1))<=((vt1.lid))))) DESC  NULLS FIRST, (+ (((vt1.c1)&(vt1.c1)))) DESC, ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.lid END)OR((((vt0.c0, vt1.c1, vt1.c1, vt1.c0, vt0.c0)) NOT BETWEEN (('-331206788', vt1.lid, vt1.c1, vt1.lid, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c1, vt1.lid))))))AND(((vt0.c0)==(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE CAST(x'' AS REAL)  WHEN ((NULL)*(vt1.c1)) THEN ((vt1.c1) NOT BETWEEN (1945875151) AND (vt1.lid)) ELSE (vt1.c0 IN ()) END WHERE (((((vt0.c0)LIKE(vt1.c0)))<(''))) ORDER BY ((((vt1.c0) IS FALSE))<<((((vt1.c1))<=((vt1.lid))))) DESC  NULLS FIRST, (+ (((vt1.c1)&(vt1.c1)))) DESC, ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.lid END)OR((((vt0.c0, vt1.c1, vt1.c1, vt1.c0, vt0.c0)) NOT BETWEEN (('-331206788', vt1.lid, vt1.c1, vt1.lid, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0, vt1.c1, vt1.lid))))))AND(((vt0.c0)==(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (0X164ae937) AND (vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND (('FvO]iEW,'))))))OR((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (0x164ae937) AND (vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND (('FvO]iEW,'))))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (0X164ae937) AND (vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND (('FvO]iEW,'))))))OR((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (0x164ae937) AND (vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND (('FvO]iEW,'))))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (0X164ae937) AND (vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND (('FvO]iEW,'))))))OR((NOT (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))))AND(1607982155)))OR(0.35910703045976966)))AND((((vt0.c0, vt0.c0, 1.0932617E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.611739142623486)))))) ORDER BY (((vt0.c0 COLLATE BINARY))>=((((vt0.c0)>(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))))AND(1607982155)))OR(0.35910703045976966)))AND((((vt0.c0, vt0.c0, 1.0932617E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.611739142623486)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE BINARY))>=((((vt0.c0)>(vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))))AND(1607982155)))OR(0.35910703045976966)))AND((((vt0.c0, vt0.c0, 1.0932617E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.611739142623486)))))) ORDER BY (((vt0.c0 COLLATE BINARY))>=((((vt0.c0)>(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))))AND(1607982155)))OR(0.35910703045976966)))AND((((vt0.c0, vt0.c0, 1.0932617E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.611739142623486)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE BINARY))>=((((vt0.c0)>(vt0.c0))))) DESC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)<>(vt0.c0)))))AND(1607982155)))OR(0.35910703045976966)))AND((((vt0.c0, vt0.c0, 1.0932617E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.611739142623486)))))) ORDER BY (((vt0.c0 COLLATE BINARY))>=((((vt0.c0)>(vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(((((vt0.c0)OR(0.5618687606540942)))AND(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)<>(vt0.c0)))))AND(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(((((vt0.c0)OR(0.5618687606540942)))AND(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)!=(vt0.c0)))))AND(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(((((vt0.c0)OR(0.5618687606540942)))AND(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)<>(vt0.c0)))))AND(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(((((vt0.c0)OR(0.5618687606540942)))AND(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)!=(vt0.c0)))))AND(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)OR(((((vt0.c0)OR(0.5618687606540942)))AND(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)<>(vt0.c0)))))AND(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid) NOT BETWEEN (CASE WHEN vt1.lid THEN vt1.c0 WHEN 0Xffffffffa0b5a920 THEN vt1.c1 WHEN NULL THEN 'vqw3oP' ELSE vt1.c1 END) AND (((vt1.c0)OR(vt1.c1))))) ORDER BY ((vt1.lid) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.lid) NOT BETWEEN (CASE WHEN vt1.lid THEN vt1.c0 WHEN 0xffffffffa0b5a920 THEN vt1.c1 WHEN NULL THEN 'vqw3oP' ELSE vt1.c1 END) AND (((vt1.c0)OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid) ISNULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid) NOT BETWEEN (CASE WHEN vt1.lid THEN vt1.c0 WHEN 0Xffffffffa0b5a920 THEN vt1.c1 WHEN NULL THEN 'vqw3oP' ELSE vt1.c1 END) AND (((vt1.c0)OR(vt1.c1))))) ORDER BY ((vt1.lid) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.lid) NOT BETWEEN (CASE WHEN vt1.lid THEN vt1.c0 WHEN 0xffffffffa0b5a920 THEN vt1.c1 WHEN NULL THEN 'vqw3oP' ELSE vt1.c1 END) AND (((vt1.c0)OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid) ISNULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid) NOT BETWEEN (CASE WHEN vt1.lid THEN vt1.c0 WHEN 0Xffffffffa0b5a920 THEN vt1.c1 WHEN NULL THEN 'vqw3oP' ELSE vt1.c1 END) AND (((vt1.c0)OR(vt1.c1))))) ORDER BY ((vt1.lid) ISNULL) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE)) ORDER BY CASE ''  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)) THEN vt1.lid WHEN NULL THEN (~ (NULL)) ELSE ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END, CAST(((vt1.c1)AND(vt1.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ''  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)) THEN vt1.lid WHEN NULL THEN (~ (NULL)) ELSE ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END, CAST(((vt1.c1)AND(vt1.c0)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE)) ORDER BY CASE ''  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)) THEN vt1.lid WHEN NULL THEN (~ (NULL)) ELSE ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END, CAST(((vt1.c1)AND(vt1.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ''  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)) THEN vt1.lid WHEN NULL THEN (~ (NULL)) ELSE ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END, CAST(((vt1.c1)AND(vt1.c0)) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE)) ORDER BY CASE ''  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)) THEN vt1.lid WHEN NULL THEN (~ (NULL)) ELSE ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END, CAST(((vt1.c1)AND(vt1.c0)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) ORDER BY ((vt1.lid) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE vt1.c1 END) AND (0Xb326d8b)) DESC, '-1573987424';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE vt1.c1 END) AND (0Xb326d8b)) DESC, '-1573987424');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) ORDER BY ((vt1.lid) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE vt1.c1 END) AND (0Xb326d8b)) DESC, '-1573987424';
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE vt1.c1 END) AND (0Xb326d8b)) DESC, '-1573987424');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) ORDER BY ((vt1.lid) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt1.c1 ELSE vt1.c1 END) AND (0Xb326d8b)) DESC, '-1573987424';
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1 COLLATE RTRIM))<=((vt1.lid))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 COLLATE RTRIM))<=((vt1.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1 COLLATE RTRIM))<=((vt1.lid))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 COLLATE RTRIM))<=((vt1.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1 COLLATE RTRIM))<=((vt1.lid))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((vt1.lid) ISNULL))))AND(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(((vt1.lid) ISNULL))))AND(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((vt1.lid) ISNULL))))AND(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(((vt1.lid) ISNULL))))AND(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((vt1.lid) ISNULL))))AND(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON x'4a96' WHERE ((NOT (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'4a96');
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON x'4a96' WHERE ((NOT (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'4a96');
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON x'4a96' WHERE ((NOT (vt1.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((x'')<('AvDFR#)')))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')<('AvDFR#)')))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((x'')<('AvDFR#)')))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')<('AvDFR#)')))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((x'')<('AvDFR#)')))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (UPPER((('497012077')|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((('497012077')|(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER((('497012077')|(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((('497012077')|(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER((('497012077')|(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0) NOTNULL)) AND (LIKELIHOOD(vt1.lid, 0.45953951930472803))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (((vt1.c0) NOTNULL)) AND (LIKELIHOOD(vt1.lid, 0.45953951930472803)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0) NOTNULL)) AND (LIKELIHOOD(vt1.lid, 0.45953951930472803))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (((vt1.c0) NOTNULL)) AND (LIKELIHOOD(vt1.lid, 0.45953951930472803)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0) NOTNULL)) AND (LIKELIHOOD(vt1.lid, 0.45953951930472803))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ORDER BY ((vt1.lid) IS TRUE) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid) IS TRUE) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ORDER BY ((vt1.lid) IS TRUE) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid) IS TRUE) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ORDER BY ((vt1.lid) IS TRUE) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 WHERE ((((('')==(vt0.c0)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((('')==(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('')==(vt0.c0)))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((('')==(vt0.c0)))&(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('')==(vt0.c0)))&(vt0.c0)));
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((((((((0.0550628696643678)OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((((((((0.0550628696643678)OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((((((((0.0550628696643678)OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((((((((0.0550628696643678)OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((((((((0.0550628696643678)OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0))))));
SELECT * FROM vt1 WHERE (CAST(vt1.lid AS BLOB)) ORDER BY ((CASE vt1.lid  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.lid AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.lid  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END) IS TRUE)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(vt1.lid AS BLOB)) ORDER BY ((CASE vt1.lid  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.lid AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.lid  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END) IS TRUE)  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(vt1.lid AS BLOB)) ORDER BY ((CASE vt1.lid  WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (LIKE(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.lid END, 0.9589601816894312, '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.lid END, 0.9589601816894312, '0')) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LIKE(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.lid END, 0.9589601816894312, '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.lid END, 0.9589601816894312, '0')) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LIKE(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.lid END, 0.9589601816894312, '0'));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) AS REAL)) ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) AS REAL)) ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)) AS REAL)) ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (MIN(((((vt1.lid)AND(x'1b46')))OR(vt1.c0)), ((vt1.c1)<(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((vt1.lid)AND(x'1b46')))OR(vt1.c0)), ((vt1.c1)<(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (MIN(((((vt1.lid)AND(x'1b46')))OR(vt1.c0)), ((vt1.c1)<(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((vt1.lid)AND(x'1b46')))OR(vt1.c0)), ((vt1.c1)<(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (MIN(((((vt1.lid)AND(x'1b46')))OR(vt1.c0)), ((vt1.c1)<(vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.8353671537259535) BETWEEN (NULL) AND (vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.8353671537259535) BETWEEN (NULL) AND (vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.8353671537259535) BETWEEN (NULL) AND (vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.8353671537259535) BETWEEN (NULL) AND (vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((0.8353671537259535) BETWEEN (NULL) AND (vt1.c0))))<=((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c1))))));
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c1 WHERE (1.858317656E9);
SELECT SUM(count) FROM (SELECT ((1.858317656E9) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c1);
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c1 WHERE (1.858317656E9);
SELECT SUM(count) FROM (SELECT ((1.858317656E9) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c1);
SELECT * FROM vt1 CROSS JOIN vt0 ON vt1.c1 WHERE (1.858317656E9);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT (((vt1.lid, vt0.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c1, vt0.c0, vt1.lid)))) WHERE (highlight((vt1.c0 IN (vt1.lid)), x'6fd3', CASE vt0.c0  WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END, (vt1.lid IN ()))) ORDER BY (('_]F3^ni') NOT BETWEEN (((x'')/(vt0.c0))) AND (((vt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((vt1.c0 IN (vt1.lid)), x'6fd3', CASE vt0.c0  WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END, (vt1.lid IN ()))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT (((vt1.lid, vt0.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c1, vt0.c0, vt1.lid)))) ORDER BY (('_]F3^ni') NOT BETWEEN (((x'')/(vt0.c0))) AND (((vt1.c1) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT (((vt1.lid, vt0.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c1, vt0.c0, vt1.lid)))) WHERE (highlight((vt1.c0 IN (vt1.lid)), x'6fd3', CASE vt0.c0  WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END, (vt1.lid IN ()))) ORDER BY (('_]F3^ni') NOT BETWEEN (((x'')/(vt0.c0))) AND (((vt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((vt1.c0 IN (vt1.lid)), x'6fd3', CASE vt0.c0  WHEN vt0.c0 THEN vt1.lid ELSE vt1.lid END, (vt1.lid IN ()))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON LIKELY(DISTINCT (((vt1.lid, vt0.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c1, vt0.c0, vt1.lid)))) ORDER BY (('_]F3^ni') NOT BETWEEN (((x'')/(vt0.c0))) AND (((vt1.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)>(vt0.c0))) IS FALSE)) ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.6948151805953109))), ((vt1.lid) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND ('427129608')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.6948151805953109))), ((vt1.lid) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND ('427129608')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)>(vt0.c0))) IS FALSE)) ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.6948151805953109))), ((vt1.lid) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND ('427129608')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.6948151805953109))), ((vt1.lid) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND ('427129608')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)>(vt0.c0))) IS FALSE)) ORDER BY (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((0.6948151805953109))), ((vt1.lid) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND ('427129608')) DESC  NULLS LAST;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((vt1.c0 IN ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((vt1.c0 IN ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((vt1.c0 IN ((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c1)))>=(CAST(vt1.lid AS REAL)))) ORDER BY (((vt1.c1)OR(vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))>=(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)OR(vt1.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c1)))>=(CAST(vt1.lid AS REAL)))) ORDER BY (((vt1.c1)OR(vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))>=(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)OR(vt1.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c1)))>=(CAST(vt1.lid AS REAL)))) ORDER BY (((vt1.c1)OR(vt1.c1)) IN ()) ASC;
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c1);
SELECT * FROM vt1 WHERE (1357310892);
SELECT SUM(count) FROM (SELECT ((1357310892) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (1357310892);
SELECT SUM(count) FROM (SELECT ((1357310892) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (1357310892);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((('P9')AND(vt1.lid)))AND('')) THEN SQLITE_COMPILEOPTION_GET(vt1.lid) END) ORDER BY ((((((vt1.c0)>=(vt0.c0)))AND(((vt1.c1)*(vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((('P9')AND(vt1.lid)))AND('')) THEN SQLITE_COMPILEOPTION_GET(vt1.lid) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)>=(vt0.c0)))AND(((vt1.c1)*(vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((('P9')AND(vt1.lid)))AND('')) THEN SQLITE_COMPILEOPTION_GET(vt1.lid) END) ORDER BY ((((((vt1.c0)>=(vt0.c0)))AND(((vt1.c1)*(vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((('P9')AND(vt1.lid)))AND('')) THEN SQLITE_COMPILEOPTION_GET(vt1.lid) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)>=(vt0.c0)))AND(((vt1.c1)*(vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((('P9')AND(vt1.lid)))AND('')) THEN SQLITE_COMPILEOPTION_GET(vt1.lid) END) ORDER BY ((((((vt1.c0)>=(vt0.c0)))AND(((vt1.c1)*(vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD((vt1.lid IN (vt1.lid)), 0.1522780913348345));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt1.lid IN (vt1.lid)), 0.1522780913348345)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD((vt1.lid IN (vt1.lid)), 0.1522780913348345));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt1.lid IN (vt1.lid)), 0.1522780913348345)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD((vt1.lid IN (vt1.lid)), 0.1522780913348345));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE ((vt1.c1 COLLATE BINARY IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((vt1.lid IN ())) BETWEEN ((NOT (vt1.c0))) AND (((vt1.lid)OR(vt1.c0)))), x'1bbf', CAST((((vt1.lid))<((vt1.lid))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c1 COLLATE BINARY IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()) ORDER BY (((vt1.lid IN ())) BETWEEN ((NOT (vt1.c0))) AND (((vt1.lid)OR(vt1.c0)))), x'1bbf', CAST((((vt1.lid))<((vt1.lid))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE ((vt1.c1 COLLATE BINARY IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((vt1.lid IN ())) BETWEEN ((NOT (vt1.c0))) AND (((vt1.lid)OR(vt1.c0)))), x'1bbf', CAST((((vt1.lid))<((vt1.lid))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c1 COLLATE BINARY IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()) ORDER BY (((vt1.lid IN ())) BETWEEN ((NOT (vt1.c0))) AND (((vt1.lid)OR(vt1.c0)))), x'1bbf', CAST((((vt1.lid))<((vt1.lid))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE ((vt1.c1 COLLATE BINARY IN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((vt1.lid IN ())) BETWEEN ((NOT (vt1.c0))) AND (((vt1.lid)OR(vt1.c0)))), x'1bbf', CAST((((vt1.lid))<((vt1.lid))) AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((((COALESCE(DISTINCT -1, vt1.lid))OR(((vt1.lid)<(vt1.lid)))))OR((NOT (vt1.lid)))))AND(((vt1.c0) IS TRUE))))OR((NOT (NULL))))) ORDER BY (~ ((vt1.c1 IN (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(DISTINCT -1, vt1.lid))OR(((vt1.lid)<(vt1.lid)))))OR((NOT (vt1.lid)))))AND(((vt1.c0) IS TRUE))))OR((NOT (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c1 IN (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((((((((COALESCE(DISTINCT -1, vt1.lid))OR(((vt1.lid)<(vt1.lid)))))OR((NOT (vt1.lid)))))AND(((vt1.c0) IS TRUE))))OR((NOT (NULL))))) ORDER BY (~ ((vt1.c1 IN (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(DISTINCT -1, vt1.lid))OR(((vt1.lid)<(vt1.lid)))))OR((NOT (vt1.lid)))))AND(((vt1.c0) IS TRUE))))OR((NOT (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c1 IN (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((((((((COALESCE(DISTINCT -1, vt1.lid))OR(((vt1.lid)<(vt1.lid)))))OR((NOT (vt1.lid)))))AND(((vt1.c0) IS TRUE))))OR((NOT (NULL))))) ORDER BY (~ ((vt1.c1 IN (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=(((vt0.c0 IN ())))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.lid THEN CASE WHEN vt0.c0 THEN vt1.lid END END WHERE (((HEX(DISTINCT vt1.lid))GLOB(((vt1.lid) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt1.lid))GLOB(((vt1.lid) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.lid THEN CASE WHEN vt0.c0 THEN vt1.lid END END);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.lid THEN CASE WHEN vt0.c0 THEN vt1.lid END END WHERE (((HEX(DISTINCT vt1.lid))GLOB(((vt1.lid) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt1.lid))GLOB(((vt1.lid) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.lid THEN CASE WHEN vt0.c0 THEN vt1.lid END END);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.lid THEN CASE WHEN vt0.c0 THEN vt1.lid END END WHERE (((HEX(DISTINCT vt1.lid))GLOB(((vt1.lid) NOT NULL))));
SELECT * FROM vt0, vt1 WHERE (CASE CASE WHEN '-1981043829' THEN vt1.c0 END  WHEN (+ (vt0.c0)) THEN CAST(vt1.lid AS REAL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c1)+(''))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN '-1981043829' THEN vt1.c0 END  WHEN (+ (vt0.c0)) THEN CAST(vt1.lid AS REAL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c1)+(''))))) DESC);
SELECT * FROM vt0, vt1 WHERE (CASE CASE WHEN '-1981043829' THEN vt1.c0 END  WHEN (+ (vt0.c0)) THEN CAST(vt1.lid AS REAL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c1)+(''))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN '-1981043829' THEN vt1.c0 END  WHEN (+ (vt0.c0)) THEN CAST(vt1.lid AS REAL) ELSE ((vt1.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c1)+(''))))) DESC);
SELECT * FROM vt0, vt1 WHERE (CASE CASE WHEN '-1981043829' THEN vt1.c0 END  WHEN (+ (vt0.c0)) THEN CAST(vt1.lid AS REAL) ELSE ((vt1.c0) NOT NULL) END) ORDER BY (((vt1.c1)) NOT BETWEEN ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c1)+(''))))) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ('C9' COLLATE RTRIM) ORDER BY (vt1.c0 IN (vt1.c0, vt1.lid)) COLLATE NOCASE, ((((x'')AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('C9' COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 ORDER BY (vt1.c0 IN (vt1.c0, vt1.lid)) COLLATE NOCASE, ((((x'')AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ('C9' COLLATE RTRIM) ORDER BY (vt1.c0 IN (vt1.c0, vt1.lid)) COLLATE NOCASE, ((((x'')AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('C9' COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 ORDER BY (vt1.c0 IN (vt1.c0, vt1.lid)) COLLATE NOCASE, ((((x'')AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c0 WHERE ('C9' COLLATE RTRIM) ORDER BY (vt1.c0 IN (vt1.c0, vt1.lid)) COLLATE NOCASE, ((((x'')AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((((vt1.c0 COLLATE NOCASE)AND((((vt0.c0)) BETWEEN ((vt1.lid)) AND ((''))))))AND(CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN '' ELSE vt0.c0 END)))AND((+ (0x3455d316)))))AND((vt0.c0 IN (vt1.c0, vt1.lid))))) ORDER BY (vt1.c0 IN (vt1.lid, vt1.lid)) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE NOCASE)AND((((vt0.c0)) BETWEEN ((vt1.lid)) AND ((''))))))AND(CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN '' ELSE vt0.c0 END)))AND((+ (0X3455d316)))))AND((vt0.c0 IN (vt1.c0, vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN (vt1.lid, vt1.lid)) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((((((vt1.c0 COLLATE NOCASE)AND((((vt0.c0)) BETWEEN ((vt1.lid)) AND ((''))))))AND(CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN '' ELSE vt0.c0 END)))AND((+ (0x3455d316)))))AND((vt0.c0 IN (vt1.c0, vt1.lid))))) ORDER BY (vt1.c0 IN (vt1.lid, vt1.lid)) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0 COLLATE NOCASE)AND((((vt0.c0)) BETWEEN ((vt1.lid)) AND ((''))))))AND(CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN '' ELSE vt0.c0 END)))AND((+ (0X3455d316)))))AND((vt0.c0 IN (vt1.c0, vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN (vt1.lid, vt1.lid)) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((((((vt1.c0 COLLATE NOCASE)AND((((vt0.c0)) BETWEEN ((vt1.lid)) AND ((''))))))AND(CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN '' ELSE vt0.c0 END)))AND((+ (0x3455d316)))))AND((vt0.c0 IN (vt1.c0, vt1.lid))))) ORDER BY (vt1.c0 IN (vt1.lid, vt1.lid)) COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON '-1673663361' WHERE (CASE WHEN vt1.c1 THEN '2077389738' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '109326170' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN '2077389738' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '109326170' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON '-1673663361');
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON '-1673663361' WHERE (CASE WHEN vt1.c1 THEN '2077389738' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '109326170' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN '2077389738' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '109326170' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON '-1673663361');
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON '-1673663361' WHERE (CASE WHEN vt1.c1 THEN '2077389738' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN '109326170' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (~ ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (~ ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (~ ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (0Xffffffff8c8f4637) ORDER BY (- ((('-661334536')<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff8c8f4637) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (- ((('-661334536')<=(vt1.c0)))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (0Xffffffff8c8f4637) ORDER BY (- ((('-661334536')<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff8c8f4637) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (- ((('-661334536')<=(vt1.c0)))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (0Xffffffff8c8f4637) ORDER BY (- ((('-661334536')<=(vt1.c0))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'4ca2') IS FALSE) WHERE (((((((((((((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)))OR(vt1.lid)))OR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))))AND(NULL)))OR(vt1.c0)))OR(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)))OR(vt1.lid)))OR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))))AND(NULL)))OR(vt1.c0)))OR(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'4ca2') IS FALSE));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'4ca2') IS FALSE) WHERE (((((((((((((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)))OR(vt1.lid)))OR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))))AND(NULL)))OR(vt1.c0)))OR(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)))OR(vt1.lid)))OR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))))AND(NULL)))OR(vt1.c0)))OR(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((x'4ca2') IS FALSE));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((x'4ca2') IS FALSE) WHERE (((((((((((((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)))OR(vt1.lid)))OR(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))))AND(NULL)))OR(vt1.c0)))OR(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.lid) BETWEEN (-1394703336) AND (vt1.c0))))) ORDER BY (((vt1.c0, 0.2119427475772374, vt0.c0)) BETWEEN (((~ (vt0.c0)), x'', vt0.c0)) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)), IFNULL(vt0.c0, vt0.c0), vt1.lid))) ASC, vt1.lid DESC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid) BETWEEN (-1394703336) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, 0.2119427475772374, vt0.c0)) BETWEEN (((~ (vt0.c0)), x'', vt0.c0)) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)), IFNULL(vt0.c0, vt0.c0), vt1.lid))) ASC, vt1.lid DESC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.lid) BETWEEN (-1394703336) AND (vt1.c0))))) ORDER BY (((vt1.c0, 0.2119427475772374, vt0.c0)) BETWEEN (((~ (vt0.c0)), x'', vt0.c0)) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)), IFNULL(vt0.c0, vt0.c0), vt1.lid))) ASC, vt1.lid DESC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid) BETWEEN (-1394703336) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, 0.2119427475772374, vt0.c0)) BETWEEN (((~ (vt0.c0)), x'', vt0.c0)) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)), IFNULL(vt0.c0, vt0.c0), vt1.lid))) ASC, vt1.lid DESC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt1.lid) BETWEEN (-1394703336) AND (vt1.c0))))) ORDER BY (((vt1.c0, 0.2119427475772374, vt0.c0)) BETWEEN (((~ (vt0.c0)), x'', vt0.c0)) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)), IFNULL(vt0.c0, vt0.c0), vt1.lid))) ASC, vt1.lid DESC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOTNULL)) BETWEEN (COALESCE(vt1.lid, vt1.c1)) AND ((- (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL)) BETWEEN (COALESCE(vt1.lid, vt1.c1)) AND ((- (NULL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOTNULL)) BETWEEN (COALESCE(vt1.lid, vt1.c1)) AND ((- (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL)) BETWEEN (COALESCE(vt1.lid, vt1.c1)) AND ((- (NULL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1) NOTNULL)) BETWEEN (COALESCE(vt1.lid, vt1.c1)) AND ((- (NULL)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((UNLIKELY(vt1.lid)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt1.lid)) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((UNLIKELY(vt1.lid)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt1.lid)) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((UNLIKELY(vt1.lid)) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (0.8690440005880766);
SELECT SUM(count) FROM (SELECT ((0.8690440005880766) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.8690440005880766);
SELECT SUM(count) FROM (SELECT ((0.8690440005880766) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.8690440005880766);
SELECT ALL * FROM vt1 WHERE (((((vt1.lid COLLATE BINARY)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c0)<=(vt1.lid))))) ORDER BY json_object((NULL IN ()), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) DESC, ((((((vt1.c0)AND(vt1.lid)))OR(vt1.c1))) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (((vt1.lid)||(x'c093'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid COLLATE BINARY)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c0)<=(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY json_object((NULL IN ()), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) DESC, ((((((vt1.c0)AND(vt1.lid)))OR(vt1.c1))) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (((vt1.lid)||(x'c093'))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.lid COLLATE BINARY)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c0)<=(vt1.lid))))) ORDER BY json_object((NULL IN ()), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) DESC, ((((((vt1.c0)AND(vt1.lid)))OR(vt1.c1))) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (((vt1.lid)||(x'c093'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid COLLATE BINARY)AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt1.c0)<=(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY json_object((NULL IN ()), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) DESC, ((((((vt1.c0)AND(vt1.lid)))OR(vt1.c1))) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (((vt1.lid)||(x'c093'))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0))==((vt0.c0))) COLLATE NOCASE;
SELECT * FROM vt1 WHERE ('-2140256645') ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c1) NOTNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2140256645') IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c1) NOTNULL))  NULLS FIRST);
SELECT * FROM vt1 WHERE ('-2140256645') ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c1) NOTNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2140256645') IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c1) NOTNULL))  NULLS FIRST);
SELECT * FROM vt1 WHERE ('-2140256645') ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c1) NOTNULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((((((((vt1.c0)+(vt1.c1)))AND(COALESCE(vt1.c0, vt1.c0, vt1.lid, vt0.c0))))AND(((vt1.c0)IS(vt1.c0)))))AND(NULLIF(0.46403581659436044, NULL))))AND(((x'')<<(vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))))OR((~ (vt1.c0)))) WHERE ((((vt1.c1) NOTNULL) IN ())) ORDER BY (((-35780899)|('	|e')) IN ()) ASC  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(0.1406798798798673)))AND((- (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((((((((vt1.c0)+(vt1.c1)))AND(COALESCE(vt1.c0, vt1.c0, vt1.lid, vt0.c0))))AND(((vt1.c0)IS(vt1.c0)))))AND(NULLIF(0.46403581659436044, NULL))))AND(((x'')<<(vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))))OR((~ (vt1.c0)))) ORDER BY (((-35780899)|('	|e')) IN ()) ASC  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(0.1406798798798673)))AND((- (vt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((((((((vt1.c0)+(vt1.c1)))AND(COALESCE(vt1.c0, vt1.c0, vt1.lid, vt0.c0))))AND(((vt1.c0)IS(vt1.c0)))))AND(NULLIF(0.46403581659436044, NULL))))AND(((x'')<<(vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))))OR((~ (vt1.c0)))) WHERE ((((vt1.c1) NOTNULL) IN ())) ORDER BY (((-35780899)|('	|e')) IN ()) ASC  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(0.1406798798798673)))AND((- (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((((((((vt1.c0)+(vt1.c1)))AND(COALESCE(vt1.c0, vt1.c0, vt1.lid, vt0.c0))))AND(((vt1.c0)IS(vt1.c0)))))AND(NULLIF(0.46403581659436044, NULL))))AND(((x'')<<(vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))))OR((~ (vt1.c0)))) ORDER BY (((-35780899)|('	|e')) IN ()) ASC  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(0.1406798798798673)))AND((- (vt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((((((((vt1.c0)+(vt1.c1)))AND(COALESCE(vt1.c0, vt1.c0, vt1.lid, vt0.c0))))AND(((vt1.c0)IS(vt1.c0)))))AND(NULLIF(0.46403581659436044, NULL))))AND(((x'')<<(vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))))OR((~ (vt1.c0)))) WHERE ((((vt1.c1) NOTNULL) IN ())) ORDER BY (((-35780899)|('	|e')) IN ()) ASC  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(0.1406798798798673)))AND((- (vt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.lid)<<(vt1.c0)) IN (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)<<(vt1.c0)) IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.lid)<<(vt1.c0)) IN (((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)<<(vt1.c0)) IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.lid)<<(vt1.c0)) IN (((vt1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1))>((vt1.lid)))) IS TRUE)) ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (vt1.c0 IN ()), STRFTIME(vt1.c1, vt1.lid, vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))>((vt1.lid)))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (vt1.c0 IN ()), STRFTIME(vt1.c1, vt1.lid, vt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1))>((vt1.lid)))) IS TRUE)) ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (vt1.c0 IN ()), STRFTIME(vt1.c1, vt1.lid, vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))>((vt1.lid)))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY json_insert((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (vt1.c0 IN ()), STRFTIME(vt1.c1, vt1.lid, vt1.c1)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid IN ()))||((+ ('')))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN ()))||((+ (''))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid IN ()))||((+ ('')))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN ()))||((+ (''))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid IN ()))||((+ ('')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((json_insert(vt1.c0, vt1.c1, '2077389738', vt1.lid, vt1.lid))<=(((vt1.c0) IS TRUE)))  NULLS LAST, ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((json_insert(vt1.c0, vt1.c1, '2077389738', vt1.lid, vt1.lid))<=(((vt1.c0) IS TRUE)))  NULLS LAST, ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((json_insert(vt1.c0, vt1.c1, '2077389738', vt1.lid, vt1.lid))<=(((vt1.c0) IS TRUE)))  NULLS LAST, ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((json_insert(vt1.c0, vt1.c1, '2077389738', vt1.lid, vt1.lid))<=(((vt1.c0) IS TRUE)))  NULLS LAST, ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))+((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELY(DISTINCT vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt1.c1)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELY(DISTINCT vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt1.c1)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELY(DISTINCT vt1.c1));
SELECT * FROM vt1 WHERE (((((((vt1.c1)IS(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))AND((((0.18298058804957074, vt1.lid, vt1.c1, 0X19757b08, NULL))<=((vt1.lid, vt1.c1, 0.5749409565800977, vt1.lid, vt1.lid)))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN '5627788711322621456' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)IS(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))AND((((0.18298058804957074, vt1.lid, vt1.c1, 0X19757b08, NULL))<=((vt1.lid, vt1.c1, 0.5749409565800977, vt1.lid, vt1.lid)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN '5627788711322621456' END DESC);
SELECT * FROM vt1 WHERE (((((((vt1.c1)IS(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))AND((((0.18298058804957074, vt1.lid, vt1.c1, 0X19757b08, NULL))<=((vt1.lid, vt1.c1, 0.5749409565800977, vt1.lid, vt1.lid)))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN '5627788711322621456' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)IS(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))AND((((0.18298058804957074, vt1.lid, vt1.c1, 0X19757b08, NULL))<=((vt1.lid, vt1.c1, 0.5749409565800977, vt1.lid, vt1.lid)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN '5627788711322621456' END DESC);
SELECT * FROM vt1 WHERE (((((((vt1.c1)IS(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))AND((((0.18298058804957074, vt1.lid, vt1.c1, 0X19757b08, NULL))<=((vt1.lid, vt1.c1, 0.5749409565800977, vt1.lid, vt1.lid)))))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN '5627788711322621456' END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((+ (vt0.c0))))) ORDER BY ((((((vt0.c0) ISNULL))OR((- (vt0.c0)))))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) ISNULL))OR((- (vt0.c0)))))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((+ (vt0.c0))))) ORDER BY ((((((vt0.c0) ISNULL))OR((- (vt0.c0)))))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) ISNULL))OR((- (vt0.c0)))))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((+ (vt0.c0))))) ORDER BY ((((((vt0.c0) ISNULL))OR((- (vt0.c0)))))AND(vt0.c0));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR('1096074722')))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)<>(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)OR('1096074722')))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)<>(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR('1096074722')))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)<>(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)OR('1096074722')))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)<>(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR('1096074722')))OR(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)<>(vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.lid) AND ('ӒpM?#z'))  WHEN (vt1.lid IN ()) THEN ((vt1.c0)!=(vt1.c1)) WHEN vt1.c1 THEN vt1.lid WHEN ((vt1.lid)<<(vt1.c0)) THEN vt1.c1 ELSE vt1.lid COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) NOT BETWEEN (vt1.lid) AND ('ӒpM?#z'))  WHEN (vt1.lid IN ()) THEN ((vt1.c0)<>(vt1.c1)) WHEN vt1.c1 THEN vt1.lid WHEN ((vt1.lid)<<(vt1.c0)) THEN vt1.c1 ELSE vt1.lid COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.lid) AND ('ӒpM?#z'))  WHEN (vt1.lid IN ()) THEN ((vt1.c0)!=(vt1.c1)) WHEN vt1.c1 THEN vt1.lid WHEN ((vt1.lid)<<(vt1.c0)) THEN vt1.c1 ELSE vt1.lid COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1) NOT BETWEEN (vt1.lid) AND ('ӒpM?#z'))  WHEN (vt1.lid IN ()) THEN ((vt1.c0)<>(vt1.c1)) WHEN vt1.c1 THEN vt1.lid WHEN ((vt1.lid)<<(vt1.c0)) THEN vt1.c1 ELSE vt1.lid COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt1.lid) AND ('ӒpM?#z'))  WHEN (vt1.lid IN ()) THEN ((vt1.c0)!=(vt1.c1)) WHEN vt1.c1 THEN vt1.lid WHEN ((vt1.lid)<<(vt1.c0)) THEN vt1.c1 ELSE vt1.lid COLLATE BINARY END);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((CAST(vt1.c0 AS BLOB)))=(((vt0.c0 IN ())))) WHERE ((((((((vt1.lid))>((vt0.c0))))OR((- (vt0.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.lid))>((vt0.c0))))OR((- (vt0.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((CAST(vt1.c0 AS BLOB)))==(((vt0.c0 IN ())))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((CAST(vt1.c0 AS BLOB)))=(((vt0.c0 IN ())))) WHERE ((((((((vt1.lid))>((vt0.c0))))OR((- (vt0.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.lid))>((vt0.c0))))OR((- (vt0.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((CAST(vt1.c0 AS BLOB)))==(((vt0.c0 IN ())))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((CAST(vt1.c0 AS BLOB)))=(((vt0.c0 IN ())))) WHERE ((((((((vt1.lid))>((vt0.c0))))OR((- (vt0.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.lid)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL) IS TRUE)) ORDER BY (((((((vt0.c0))==((x''))))OR(x'')))OR(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0))==((x''))))OR(x'')))OR(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL) IS TRUE)) ORDER BY (((((((vt0.c0))==((x''))))OR(x'')))OR(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0))==((x''))))OR(x'')))OR(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL) IS TRUE)) ORDER BY (((((((vt0.c0))==((x''))))OR(x'')))OR(((vt1.c0) ISNULL)));
SELECT COUNT(*) FROM vt1 WHERE (CAST('FALSE' COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('FALSE' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST('FALSE' COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('FALSE' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST('FALSE' COLLATE NOCASE AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((0.8525477892314771)OR(vt1.c1)))AND(vt1.lid))) AND (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c1 END)) WHERE (HEX(DISTINCT x'f8a2'));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT x'f8a2')) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((0.8525477892314771)OR(vt1.c1)))AND(vt1.lid))) AND (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c1 END)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((0.8525477892314771)OR(vt1.c1)))AND(vt1.lid))) AND (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c1 END)) WHERE (HEX(DISTINCT x'f8a2'));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT x'f8a2')) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((0.8525477892314771)OR(vt1.c1)))AND(vt1.lid))) AND (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c1 END)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((0.8525477892314771)OR(vt1.c1)))AND(vt1.lid))) AND (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c1 END)) WHERE (HEX(DISTINCT x'f8a2'));
SELECT * FROM vt1 WHERE (NULLIF(0.11352058016550592, ((NULL)<<(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(0.11352058016550592, ((NULL)<<(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULLIF(0.11352058016550592, ((NULL)<<(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(0.11352058016550592, ((NULL)<<(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULLIF(0.11352058016550592, ((NULL)<<(vt1.c1))));
SELECT * FROM vt1, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, NULL))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>=(vt0.c0))) IS FALSE) WHERE (CASE ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (- (NULL)) THEN x'fa83' ELSE ((vt1.c0)>>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (- (NULL)) THEN x'fa83' ELSE ((vt1.c0)>>(vt1.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>=(vt0.c0))) IS FALSE));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>=(vt0.c0))) IS FALSE) WHERE (CASE ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (- (NULL)) THEN x'fa83' ELSE ((vt1.c0)>>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (- (NULL)) THEN x'fa83' ELSE ((vt1.c0)>>(vt1.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>=(vt0.c0))) IS FALSE));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)>=(vt0.c0))) IS FALSE) WHERE (CASE ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (- (NULL)) THEN x'fa83' ELSE ((vt1.c0)>>(vt1.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.lid))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0)-(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.lid))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0)-(NULL))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.lid))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0)-(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.lid))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0)-(NULL))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.lid))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0)-(NULL)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE MAX(vt0.c0, '46970838')  WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE vt0.c0 END) ORDER BY (((+ (497012077)))>>((NOT (vt1.lid)))) DESC  NULLS FIRST, (((((((((vt1.lid IN (vt1.c0, vt1.c0)))AND('-152806122' COLLATE RTRIM)))OR((((vt0.c0, vt1.lid, vt0.c0)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE MAX(vt0.c0, '46970838')  WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((+ (497012077)))>>((NOT (vt1.lid)))) DESC  NULLS FIRST, (((((((((vt1.lid IN (vt1.c0, vt1.c0)))AND('-152806122' COLLATE RTRIM)))OR((((vt0.c0, vt1.lid, vt0.c0)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE MAX(vt0.c0, '46970838')  WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE vt0.c0 END) ORDER BY (((+ (497012077)))>>((NOT (vt1.lid)))) DESC  NULLS FIRST, (((((((((vt1.lid IN (vt1.c0, vt1.c0)))AND('-152806122' COLLATE RTRIM)))OR((((vt0.c0, vt1.lid, vt0.c0)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE MAX(vt0.c0, '46970838')  WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((+ (497012077)))>>((NOT (vt1.lid)))) DESC  NULLS FIRST, (((((((((vt1.lid IN (vt1.c0, vt1.c0)))AND('-152806122' COLLATE RTRIM)))OR((((vt0.c0, vt1.lid, vt0.c0)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE MAX(vt0.c0, '46970838')  WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE vt0.c0 END) ORDER BY (((+ (497012077)))>>((NOT (vt1.lid)))) DESC  NULLS FIRST, (((((((((vt1.lid IN (vt1.c0, vt1.c0)))AND('-152806122' COLLATE RTRIM)))OR((((vt0.c0, vt1.lid, vt0.c0)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.c0, vt0.c0))))))AND(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c1, vt1.c1, vt1.lid))>((vt1.lid, vt1.c1, vt1.c0))))AND((- (vt1.c1)))))AND(vt1.lid)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c1, vt1.c1, vt1.lid))>((vt1.lid, vt1.c1, vt1.c0))))AND((- (vt1.c1)))))AND(vt1.lid))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c1, vt1.c1, vt1.lid))>((vt1.lid, vt1.c1, vt1.c0))))AND((- (vt1.c1)))))AND(vt1.lid)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c1, vt1.c1, vt1.lid))>((vt1.lid, vt1.c1, vt1.c0))))AND((- (vt1.c1)))))AND(vt1.lid))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c1, vt1.c1, vt1.lid))>((vt1.lid, vt1.c1, vt1.c0))))AND((- (vt1.c1)))))AND(vt1.lid)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c0 DESC, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c0 DESC, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c0 DESC, (vt0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN '()' ELSE vt1.c0 END)LIKE(((vt1.lid)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN vt1.c0 THEN '()' ELSE vt1.c0 END)LIKE(((vt1.lid)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN '()' ELSE vt1.c0 END)LIKE(((vt1.lid)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN vt1.c0 THEN '()' ELSE vt1.c0 END)LIKE(((vt1.lid)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN '()' ELSE vt1.c0 END)LIKE(((vt1.lid)IS NOT(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (x'6527') ORDER BY ((((vt0.c0)&(vt0.c0)))<(((vt0.c0)>>(x'')))) DESC  NULLS FIRST, ((0.8036596634577846)>>(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'6527') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0)))<(((vt0.c0)>>(x'')))) DESC  NULLS FIRST, ((0.8036596634577846)>>(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (x'6527') ORDER BY ((((vt0.c0)&(vt0.c0)))<(((vt0.c0)>>(x'')))) DESC  NULLS FIRST, ((0.8036596634577846)>>(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'6527') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0)))<(((vt0.c0)>>(x'')))) DESC  NULLS FIRST, ((0.8036596634577846)>>(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (x'6527') ORDER BY ((((vt0.c0)&(vt0.c0)))<(((vt0.c0)>>(x'')))) DESC  NULLS FIRST, ((0.8036596634577846)>>(vt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))OR(((((((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1 IN ()))OR(((((((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))OR(((((((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1 IN ()))OR(((((((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c1 IN ()))OR(((((((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(NULLIF(NULL, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(NULLIF(NULL, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(NULLIF(NULL, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(NULLIF(NULL, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((~ (vt0.c0)))LIKE(NULLIF(NULL, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((('izIQxVoi')AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((('izIQxVoi')AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('izIQxVoi')AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((('izIQxVoi')AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('izIQxVoi')AND(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))-((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)*(vt1.c1)))))AND(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid))))) ORDER BY ((((((((vt1.lid)OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)*(vt1.c1)))))AND(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))-((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY ((((((((vt1.lid)OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))-((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)*(vt1.c1)))))AND(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid))))) ORDER BY ((((((((vt1.lid)OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)*(vt1.c1)))))AND(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))-((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY ((((((((vt1.lid)OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))-((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)*(vt1.c1)))))AND(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid))))) ORDER BY ((((((((vt1.lid)OR(vt1.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CASE vt0.c0  WHEN '-1409874723' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))OR(CASE vt0.c0  WHEN '-1409874723' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CASE vt0.c0  WHEN '-1409874723' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))OR(CASE vt0.c0  WHEN '-1409874723' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CASE vt0.c0  WHEN '-1409874723' THEN vt0.c0 END)))OR(vt0.c0 COLLATE BINARY))) ORDER BY x'' ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('1096074722') AND (vt1.c1))) AND ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.lid THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('1096074722') AND (vt1.c1))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('1096074722') AND (vt1.c1))) AND ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.lid THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('1096074722') AND (vt1.c1))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('1096074722') AND (vt1.c1))) AND ((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CAST(x'' AS REAL))OR(vt0.c0)))AND(((vt1.c1)OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(x'' AS REAL))OR(vt0.c0)))AND(((vt1.c1)OR(NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CAST(x'' AS REAL))OR(vt0.c0)))AND(((vt1.c1)OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(x'' AS REAL))OR(vt0.c0)))AND(((vt1.c1)OR(NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((CAST(x'' AS REAL))OR(vt0.c0)))AND(((vt1.c1)OR(NULL)))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(x'')))!=(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(x'')))!=(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(x'')))!=(((vt0.c0)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(x'')))!=(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(x'')))!=(((vt0.c0)*(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((json(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((json(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((json(vt0.c0) IN ()));
SELECT * FROM vt0 WHERE ((- (ABS(DISTINCT vt0.c0)))) ORDER BY HEX(DISTINCT ((vt0.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT (((- (ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((vt0.c0) IS TRUE)) ASC);
SELECT * FROM vt0 WHERE ((- (ABS(DISTINCT vt0.c0)))) ORDER BY HEX(DISTINCT ((vt0.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT (((- (ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((vt0.c0) IS TRUE)) ASC);
SELECT * FROM vt0 WHERE ((- (ABS(DISTINCT vt0.c0)))) ORDER BY HEX(DISTINCT ((vt0.c0) IS TRUE)) ASC;
SELECT ALL * FROM vt1 WHERE (((rtreenode(NULL, vt1.lid))LIKE(((vt1.c1) NOT NULL)))) ORDER BY vt1.lid ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rtreenode(NULL, vt1.lid))LIKE(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((rtreenode(NULL, vt1.lid))LIKE(((vt1.c1) NOT NULL)))) ORDER BY vt1.lid ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rtreenode(NULL, vt1.lid))LIKE(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((rtreenode(NULL, vt1.lid))LIKE(((vt1.c1) NOT NULL)))) ORDER BY vt1.lid ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))<=((NOT ('9<')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<=((NOT ('9<'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))<=((NOT ('9<')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<=((NOT ('9<'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))<=((NOT ('9<')))));
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=((427129608)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=((427129608)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=((427129608)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=((427129608)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (((((('')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=((427129608)))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)+(vt1.lid COLLATE NOCASE))) ORDER BY (CASE vt1.c0  WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END IN (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)+(vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END IN (CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)+(vt1.lid COLLATE NOCASE))) ORDER BY (CASE vt1.c0  WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END IN (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)+(vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (CASE vt1.c0  WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END IN (CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)+(vt1.lid COLLATE NOCASE))) ORDER BY (CASE vt1.c0  WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END IN (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.lid))) BETWEEN (((x'') NOT BETWEEN (vt1.c1) AND (vt1.lid))) AND (CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END))) ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.lid))IS NOT(IFNULL(vt1.c0, vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.lid))) BETWEEN (((x'') NOT BETWEEN (vt1.c1) AND (vt1.lid))) AND (CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.lid))IS NOT(IFNULL(vt1.c0, vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.lid))) BETWEEN (((x'') NOT BETWEEN (vt1.c1) AND (vt1.lid))) AND (CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END))) ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.lid))IS NOT(IFNULL(vt1.c0, vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.lid))) BETWEEN (((x'') NOT BETWEEN (vt1.c1) AND (vt1.lid))) AND (CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.lid))IS NOT(IFNULL(vt1.c0, vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.lid))) BETWEEN (((x'') NOT BETWEEN (vt1.c1) AND (vt1.lid))) AND (CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.c1 END))) ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.lid))IS NOT(IFNULL(vt1.c0, vt1.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt1.lid)=(vt1.c1))) AND (NULL))) ORDER BY ((((((((((NULL)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))OR(vt0.c0)))==(CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN (((vt1.lid)==(vt1.c1))) AND (NULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((NULL)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))OR(vt0.c0)))==(CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt1.lid)=(vt1.c1))) AND (NULL))) ORDER BY ((((((((((NULL)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))OR(vt0.c0)))==(CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN (((vt1.lid)==(vt1.c1))) AND (NULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((NULL)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))OR(vt0.c0)))==(CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt1.lid)=(vt1.c1))) AND (NULL))) ORDER BY ((((((((((NULL)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))OR(vt0.c0)))==(CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.c1 END)) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)-(vt1.c0))) NOT BETWEEN ((NOT (vt1.c1))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt1.c0))) NOT BETWEEN ((NOT (vt1.c1))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)-(vt1.c0))) NOT BETWEEN ((NOT (vt1.c1))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt1.c0))) NOT BETWEEN ((NOT (vt1.c1))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)-(vt1.c0))) NOT BETWEEN ((NOT (vt1.c1))) AND ((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (0.8968002034379825);
SELECT SUM(count) FROM (SELECT ALL ((0.8968002034379825) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.8968002034379825);
SELECT SUM(count) FROM (SELECT ALL ((0.8968002034379825) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.8968002034379825);
SELECT ALL * FROM vt1 WHERE (NULLIF((+ (NULL)), vt1.lid COLLATE BINARY)) ORDER BY (((vt1.lid)) BETWEEN (((NOT (vt1.c1)))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))) DESC  NULLS FIRST, (((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ (vt1.lid COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (NULL)), vt1.lid COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid)) BETWEEN (((NOT (vt1.c1)))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))) DESC  NULLS FIRST, (((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ (vt1.lid COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (NULLIF((+ (NULL)), vt1.lid COLLATE BINARY)) ORDER BY (((vt1.lid)) BETWEEN (((NOT (vt1.c1)))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))) DESC  NULLS FIRST, (((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ (vt1.lid COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (NULL)), vt1.lid COLLATE BINARY)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid)) BETWEEN (((NOT (vt1.c1)))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))) DESC  NULLS FIRST, (((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ (vt1.lid COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (NULLIF((+ (NULL)), vt1.lid COLLATE BINARY)) ORDER BY (((vt1.lid)) BETWEEN (((NOT (vt1.c1)))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))) DESC  NULLS FIRST, (((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)) IN ()) ASC  NULLS LAST, (~ (vt1.lid COLLATE RTRIM)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(x'' AS BLOB) WHERE (CAST(((((vt1.lid)AND(vt1.c1)))AND(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.lid)AND(vt1.c1)))AND(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(x'' AS BLOB));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(x'' AS BLOB) WHERE (CAST(((((vt1.lid)AND(vt1.c1)))AND(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.lid)AND(vt1.c1)))AND(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(x'' AS BLOB));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(x'' AS BLOB) WHERE (CAST(((((vt1.lid)AND(vt1.c1)))AND(vt1.c1)) AS REAL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (- (vt1.c0)) THEN (vt1.c1 IN (vt1.lid)) END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) DESC  NULLS LAST, (((((vt1.lid, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c1))))%((- (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN (vt1.c1 IN (vt1.lid)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) DESC  NULLS LAST, (((((vt1.lid, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c1))))%((- (vt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (- (vt1.c0)) THEN (vt1.c1 IN (vt1.lid)) END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) DESC  NULLS LAST, (((((vt1.lid, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c1))))%((- (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.c0)) THEN (vt1.c1 IN (vt1.lid)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) DESC  NULLS LAST, (((((vt1.lid, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c1))))%((- (vt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (- (vt1.c0)) THEN (vt1.c1 IN (vt1.lid)) END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) DESC  NULLS LAST, (((((vt1.lid, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c1))))%((- (vt1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.lid)AND(vt1.c1)))OR(NULL))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (x'369c')));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)AND(vt1.c1)))OR(NULL))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (x'369c'))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.lid)AND(vt1.c1)))OR(NULL))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (x'369c')));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)AND(vt1.c1)))OR(NULL))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (x'369c'))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.lid)AND(vt1.c1)))OR(NULL))) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c0))) AND (x'369c')));
SELECT COUNT(*) FROM vt0 WHERE (json_array((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)AND(vt0.c0)))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ('330357851' COLLATE BINARY) AND (0.5828573034974728))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ('330357851' COLLATE BINARY) AND (0.5828573034974728))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (json_array((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)AND(vt0.c0)))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ('330357851' COLLATE BINARY) AND (0.5828573034974728))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ('330357851' COLLATE BINARY) AND (0.5828573034974728))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (json_array((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)AND(vt0.c0)))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN ('330357851' COLLATE BINARY) AND (0.5828573034974728))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1 IN ()))AND(CAST('e+' AS BLOB))))OR(vt1.lid COLLATE RTRIM))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c1))))>=((CAST(vt1.c0 AS BLOB)))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN ()))AND(CAST('e+' AS BLOB))))OR(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c1))))>=((CAST(vt1.c0 AS BLOB)))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1 IN ()))AND(CAST('e+' AS BLOB))))OR(vt1.lid COLLATE RTRIM))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c1))))>=((CAST(vt1.c0 AS BLOB)))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN ()))AND(CAST('e+' AS BLOB))))OR(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c1))))>=((CAST(vt1.c0 AS BLOB)))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c1 IN ()))AND(CAST('e+' AS BLOB))))OR(vt1.lid COLLATE RTRIM))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c1))))>=((CAST(vt1.c0 AS BLOB)))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt1.lid)))IS(0.0550628696643678)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.lid)))IS(0.0550628696643678))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt1.lid)))IS(0.0550628696643678)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.lid)))IS(0.0550628696643678))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt1.lid)))IS(0.0550628696643678)));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((((vt0.c0, vt1.c0, vt0.c0))<=((vt1.lid, vt1.lid, NULL))), ((vt1.c1) IS TRUE), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)), (((vt1.lid))<=((vt0.c0))), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((((vt0.c0, vt1.c0, vt0.c0))<=((vt1.lid, vt1.lid, NULL))), ((vt1.c1) IS TRUE), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)), (((vt1.lid))<=((vt0.c0))), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((((vt0.c0, vt1.c0, vt0.c0))<=((vt1.lid, vt1.lid, NULL))), ((vt1.c1) IS TRUE), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)), (((vt1.lid))<=((vt0.c0))), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((((vt0.c0, vt1.c0, vt0.c0))<=((vt1.lid, vt1.lid, NULL))), ((vt1.c1) IS TRUE), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)), (((vt1.lid))<=((vt0.c0))), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((((vt0.c0, vt1.c0, vt0.c0))<=((vt1.lid, vt1.lid, NULL))), ((vt1.c1) IS TRUE), ((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)), (((vt1.lid))<=((vt0.c0))), vt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) ORDER BY HEX(vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY HEX(vt0.c0) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) ORDER BY HEX(vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY HEX(vt0.c0) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 END) ORDER BY HEX(vt0.c0) COLLATE BINARY;
SELECT * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ())) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST, IFNULL(DISTINCT vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST, IFNULL(DISTINCT vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ())) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST, IFNULL(DISTINCT vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST, IFNULL(DISTINCT vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ())) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST, IFNULL(DISTINCT vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((vt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((ABS(vt1.c0))<=(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt1.c1) BETWEEN (vt0.c0) AND (x'7a33')) ELSE ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(vt1.c0))<=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt1.c1) BETWEEN (vt0.c0) AND (x'7a33')) ELSE ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((ABS(vt1.c0))<=(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt1.c1) BETWEEN (vt0.c0) AND (x'7a33')) ELSE ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(vt1.c0))<=(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt1.c1) BETWEEN (vt0.c0) AND (x'7a33')) ELSE ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((ABS(vt1.c0))<=(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt1.c1) BETWEEN (vt0.c0) AND (x'7a33')) ELSE ((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)) END ASC;
SELECT * FROM vt1 WHERE ((((((vt1.c1 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c1 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c1 IN ()))AND(LIKELY(DISTINCT vt1.c1))))AND(vt1.c1)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c1)||(x''))  WHEN ((vt1.lid)OR(vt1.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN NULLIF(vt1.lid, vt1.c1) THEN CAST(vt1.lid AS BLOB) WHEN vt1.lid COLLATE NOCASE THEN vt1.c1 COLLATE RTRIM END) ORDER BY ((((vt1.c1)%(vt1.lid))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)||(x''))  WHEN ((vt1.lid)OR(vt1.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN NULLIF(vt1.lid, vt1.c1) THEN CAST(vt1.lid AS BLOB) WHEN vt1.lid COLLATE NOCASE THEN vt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)%(vt1.lid))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c1)||(x''))  WHEN ((vt1.lid)OR(vt1.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN NULLIF(vt1.lid, vt1.c1) THEN CAST(vt1.lid AS BLOB) WHEN vt1.lid COLLATE NOCASE THEN vt1.c1 COLLATE RTRIM END) ORDER BY ((((vt1.c1)%(vt1.lid))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)||(x''))  WHEN ((vt1.lid)OR(vt1.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN NULLIF(vt1.lid, vt1.c1) THEN CAST(vt1.lid AS BLOB) WHEN vt1.lid COLLATE NOCASE THEN vt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)%(vt1.lid))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt1.c1)||(x''))  WHEN ((vt1.lid)OR(vt1.c0)) THEN ((vt0.c0)|(vt0.c0)) WHEN NULLIF(vt1.lid, vt1.c1) THEN CAST(vt1.lid AS BLOB) WHEN vt1.lid COLLATE NOCASE THEN vt1.c1 COLLATE RTRIM END) ORDER BY ((((vt1.c1)%(vt1.lid))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c1))));
SELECT ALL * FROM vt0, vt1 WHERE (((((((((vt1.c1)OR(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)))))OR('')))AND((((vt0.c0))=((vt0.c0))))))OR((~ (vt1.lid))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((~ (vt1.lid)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)))))OR('')))AND((((vt0.c0))=((vt0.c0))))))OR((~ (vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((~ (vt1.lid)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS INTEGER) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((vt1.c1)OR(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)))))OR('')))AND((((vt0.c0))=((vt0.c0))))))OR((~ (vt1.lid))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((~ (vt1.lid)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)))))OR('')))AND((((vt0.c0))=((vt0.c0))))))OR((~ (vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((~ (vt1.lid)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS INTEGER) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((vt1.c1)OR(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)))))OR('')))AND((((vt0.c0))=((vt0.c0))))))OR((~ (vt1.lid))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((~ (vt1.lid)))))  NULLS LAST, CAST((vt0.c0 IN ()) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('188970767') ORDER BY ((NULL) BETWEEN ((+ (vt1.c1))) AND (vt1.c1)) ASC  NULLS FIRST, ((NULL) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (('188970767') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) BETWEEN ((+ (vt1.c1))) AND (vt1.c1)) ASC  NULLS FIRST, ((NULL) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('188970767') ORDER BY ((NULL) BETWEEN ((+ (vt1.c1))) AND (vt1.c1)) ASC  NULLS FIRST, ((NULL) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (('188970767') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL) BETWEEN ((+ (vt1.c1))) AND (vt1.c1)) ASC  NULLS FIRST, ((NULL) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('188970767') ORDER BY ((NULL) BETWEEN ((+ (vt1.c1))) AND (vt1.c1)) ASC  NULLS FIRST, ((NULL) IS TRUE) ASC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.c0)))*(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) ORDER BY ((PRINTF(vt0.c0))/(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.c0)))*(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((PRINTF(vt0.c0))/(NULL))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.c0)))*(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) ORDER BY ((PRINTF(vt0.c0))/(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.c0)))*(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((PRINTF(vt0.c0))/(NULL))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.c0)))*(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.lid))))) ORDER BY ((PRINTF(vt0.c0))/(NULL))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM vt1 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))>=((((vt1.c1)AND('浀')))))) ORDER BY ((((vt1.c0)LIKE(vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))>=((((vt1.c1)AND('浀')))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)LIKE(vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))>=((((vt1.c1)AND('浀')))))) ORDER BY ((((vt1.c0)LIKE(vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))>=((((vt1.c1)AND('浀')))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)LIKE(vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))>=((((vt1.c1)AND('浀')))))) ORDER BY ((((vt1.c0)LIKE(vt1.c1))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1) IS TRUE) AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt1 WHERE (LIKELY(((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LIKELY(((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LIKELY(((vt1.c0) IS FALSE)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (x'a341')))<>(((vt1.lid)OR(vt1.c0))))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.lid) AND (x'a341')))<>(((vt1.lid)OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (x'a341')))<>(((vt1.lid)OR(vt1.c0))))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.lid) AND (x'a341')))<>(((vt1.lid)OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (x'a341')))<>(((vt1.lid)OR(vt1.c0))))) ORDER BY vt1.lid;
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END) ISNULL)) ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END) ISNULL)) ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END) ISNULL)) ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN '0.5749409565800977' END) ORDER BY (((vt1.c1)) BETWEEN ((vt1.lid)) AND (((((vt1.lid))>=((vt1.c0))))))  NULLS LAST, (((vt1.lid)) BETWEEN ((0xffffffffe49e3ec7)) AND ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN '0.5749409565800977' END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((vt1.lid)) AND (((((vt1.lid))>=((vt1.c0))))))  NULLS LAST, (((vt1.lid)) BETWEEN ((0Xffffffffe49e3ec7)) AND ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN '0.5749409565800977' END) ORDER BY (((vt1.c1)) BETWEEN ((vt1.lid)) AND (((((vt1.lid))>=((vt1.c0))))))  NULLS LAST, (((vt1.lid)) BETWEEN ((0xffffffffe49e3ec7)) AND ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN '0.5749409565800977' END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((vt1.lid)) AND (((((vt1.lid))>=((vt1.c0))))))  NULLS LAST, (((vt1.lid)) BETWEEN ((0Xffffffffe49e3ec7)) AND ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c1, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN '0.5749409565800977' END) ORDER BY (((vt1.c1)) BETWEEN ((vt1.lid)) AND (((((vt1.lid))>=((vt1.c0))))))  NULLS LAST, (((vt1.lid)) BETWEEN ((0xffffffffe49e3ec7)) AND ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT * FROM vt1 WHERE ((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((x'')AND(vt1.lid))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((x'')AND(vt1.lid)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((x'')AND(vt1.lid))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((x'')AND(vt1.lid)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.lid)) BETWEEN (((- (vt1.c1)))) AND ((((x'')AND(vt1.lid))))));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)||(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON (~ (ABS(NULL))) WHERE ((((vt1.lid, vt0.c0, CASE -1819401019  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 ELSE vt1.lid END))>=((CAST(vt1.c1 AS INTEGER), CAST(x'' AS TEXT), vt1.lid))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid, vt0.c0, CASE -1819401019  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 ELSE vt1.lid END))>=((CAST(vt1.c1 AS INTEGER), CAST(x'' AS TEXT), vt1.lid)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ (ABS(NULL))));
SELECT * FROM vt1 INNER JOIN vt0 ON (~ (ABS(NULL))) WHERE ((((vt1.lid, vt0.c0, CASE -1819401019  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 ELSE vt1.lid END))>=((CAST(vt1.c1 AS INTEGER), CAST(x'' AS TEXT), vt1.lid))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid, vt0.c0, CASE -1819401019  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 ELSE vt1.lid END))>=((CAST(vt1.c1 AS INTEGER), CAST(x'' AS TEXT), vt1.lid)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ (ABS(NULL))));
SELECT * FROM vt1 INNER JOIN vt0 ON (~ (ABS(NULL))) WHERE ((((vt1.lid, vt0.c0, CASE -1819401019  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 ELSE vt1.lid END))>=((CAST(vt1.c1 AS INTEGER), CAST(x'' AS TEXT), vt1.lid))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0x2e0dda75) ORDER BY ((vt1.lid)<>(((((vt1.lid)AND(vt0.c0)))AND(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x2e0dda75) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid)!=(((((vt1.lid)AND(vt0.c0)))AND(vt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0x2e0dda75) ORDER BY ((vt1.lid)<>(((((vt1.lid)AND(vt0.c0)))AND(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x2e0dda75) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid)!=(((((vt1.lid)AND(vt0.c0)))AND(vt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0x2e0dda75) ORDER BY ((vt1.lid)<>(((((vt1.lid)AND(vt0.c0)))AND(vt1.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(CAST('' AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST('' AS INTEGER))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(CAST('' AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST('' AS INTEGER))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(CAST('' AS INTEGER)));
SELECT * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((~ (399642667)) IN ())) ORDER BY LOWER(DISTINCT (((vt1.lid))<=((vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (399642667)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER(DISTINCT (((vt1.lid))<=((vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((~ (399642667)) IN ())) ORDER BY LOWER(DISTINCT (((vt1.lid))<=((vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (399642667)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER(DISTINCT (((vt1.lid))<=((vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((~ (399642667)) IN ())) ORDER BY LOWER(DISTINCT (((vt1.lid))<=((vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY COALESCE(CAST(vt0.c0 AS REAL), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL), json_array_length(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(CAST(vt0.c0 AS REAL), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL), json_array_length(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY COALESCE(CAST(vt0.c0 AS REAL), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL), json_array_length(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(CAST(vt0.c0 AS REAL), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL), json_array_length(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY COALESCE(CAST(vt0.c0 AS REAL), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL), json_array_length(vt0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((0.5566412894603724)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.5566412894603724)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((0.5566412894603724)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.5566412894603724)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((0.5566412894603724)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 END);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1))>((vt1.lid)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))>((vt1.lid)))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1))>((vt1.lid)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))>((vt1.lid)))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1))>((vt1.lid)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('1119117738') IS FALSE), vt0.c0 COLLATE BINARY))<=((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), LIKE(vt0.c0, vt0.c0, 's'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('1119117738') IS FALSE), vt0.c0 COLLATE BINARY))<=((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), LIKE(vt0.c0, vt0.c0, 's'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('1119117738') IS FALSE), vt0.c0 COLLATE BINARY))<=((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), LIKE(vt0.c0, vt0.c0, 's'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('1119117738') IS FALSE), vt0.c0 COLLATE BINARY))<=((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), LIKE(vt0.c0, vt0.c0, 's'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (('1119117738') IS FALSE), vt0.c0 COLLATE BINARY))<=((CASE WHEN vt0.c0 THEN vt0.c0 END, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), LIKE(vt0.c0, vt0.c0, 's'), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (NOT (vt0.c0))))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1))>((vt1.c0)))) ISNULL)) ORDER BY UNLIKELY(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ASC, ((CASE WHEN '-1597921331' THEN vt1.c0 END) NOTNULL) DESC, vt1.lid ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))>((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ASC, ((CASE WHEN '-1597921331' THEN vt1.c0 END) NOTNULL) DESC, vt1.lid ASC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1))>((vt1.c0)))) ISNULL)) ORDER BY UNLIKELY(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ASC, ((CASE WHEN '-1597921331' THEN vt1.c0 END) NOTNULL) DESC, vt1.lid ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))>((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ASC, ((CASE WHEN '-1597921331' THEN vt1.c0 END) NOTNULL) DESC, vt1.lid ASC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1))>((vt1.c0)))) ISNULL)) ORDER BY UNLIKELY(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ASC, ((CASE WHEN '-1597921331' THEN vt1.c0 END) NOTNULL) DESC, vt1.lid ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid))) ISNULL)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)OR((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR((vt1.c0 IN (vt1.lid, vt1.c1)))) ASC, ((vt1.c0 COLLATE BINARY)!=(((vt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)OR((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR((vt1.c0 IN (vt1.lid, vt1.c1)))) ASC, ((vt1.c0 COLLATE BINARY)<>(((vt1.c1) IS TRUE))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid))) ISNULL)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)OR((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR((vt1.c0 IN (vt1.lid, vt1.c1)))) ASC, ((vt1.c0 COLLATE BINARY)!=(((vt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)OR((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR((vt1.c0 IN (vt1.lid, vt1.c1)))) ASC, ((vt1.c0 COLLATE BINARY)<>(((vt1.c1) IS TRUE))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid))) ISNULL)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)OR((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR((vt1.c0 IN (vt1.lid, vt1.c1)))) ASC, ((vt1.c0 COLLATE BINARY)!=(((vt1.c1) IS TRUE)));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN x'17a0' ELSE vt1.lid END)==(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN x'17a0' ELSE vt1.lid END)=(vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN x'17a0' ELSE vt1.lid END)==(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN x'17a0' ELSE vt1.lid END)=(vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.lid THEN x'17a0' ELSE vt1.lid END)==(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))IS(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))IS(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))IS(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))IS(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0 IN ()))IS(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0))>=((vt0.c0))) IN (((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))>=((vt0.c0))) IN (((vt0.c0)<(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0))>=((vt0.c0))) IN (((vt0.c0)<(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))>=((vt0.c0))) IN (((vt0.c0)<(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0))>=((vt0.c0))) IN (((vt0.c0)<(vt0.c0)))) DESC;
SELECT ALL * FROM vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_VERSION());
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) THEN json_array_length('''	') ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-775000768'))) END DESC  NULLS LAST, (-635086433 IN (vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN json_array_length('''	') ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-775000768'))) END DESC  NULLS LAST, (-635086433 IN (vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) THEN json_array_length('''	') ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-775000768'))) END DESC  NULLS LAST, (-635086433 IN (vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN json_array_length('''	') ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-775000768'))) END DESC  NULLS LAST, (-635086433 IN (vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) THEN json_array_length('''	') ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-775000768'))) END DESC  NULLS LAST, (-635086433 IN (vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (ABS(((vt1.c1)LIKE(vt1.lid))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c1)LIKE(vt1.lid)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (ABS(((vt1.c1)LIKE(vt1.lid))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c1)LIKE(vt1.lid)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (ABS(((vt1.c1)LIKE(vt1.lid))));
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) ORDER BY (((- (vt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0))))=((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0))))=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0))))=((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0))))=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0))))=((vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR('1160117638')))AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR('1160117638')))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR('1160117638')))AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR('1160117638')))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR('1160117638')))AND(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((((((((vt1.c1)OR(0X362168ff)))OR(vt1.lid)))AND(vt1.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt1.c1)OR(0X362168ff)))OR(vt1.lid)))AND(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((((((((vt1.c1)OR(0X362168ff)))OR(vt1.lid)))AND(vt1.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt1.c1)OR(0X362168ff)))OR(vt1.lid)))AND(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((((((((vt1.c1)OR(0X362168ff)))OR(vt1.lid)))AND(vt1.c1)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (ABS(CAST(vt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(CAST(vt1.c1 AS BLOB))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (ABS(CAST(vt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(CAST(vt1.c1 AS BLOB))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (ABS(CAST(vt1.c1 AS BLOB)));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC, CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)  NULLS LAST, UPPER(DISTINCT ((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC, CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)  NULLS LAST, UPPER(DISTINCT ((vt0.c0) IS TRUE)));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC, CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)  NULLS LAST, UPPER(DISTINCT ((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC, CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)  NULLS LAST, UPPER(DISTINCT ((vt0.c0) IS TRUE)));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC, CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)  NULLS LAST, UPPER(DISTINCT ((vt0.c0) IS TRUE));
SELECT * FROM vt1 WHERE (CASE ''  WHEN ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) THEN (vt1.lid IN ()) ELSE vt1.lid END) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) THEN (vt1.lid IN ()) ELSE vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid);
SELECT * FROM vt1 WHERE (CASE ''  WHEN ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) THEN (vt1.lid IN ()) ELSE vt1.lid END) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) THEN (vt1.lid IN ()) ELSE vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid);
SELECT * FROM vt1 WHERE (CASE ''  WHEN ((((vt1.c1)AND(vt1.lid)))AND(vt1.c0)) THEN (vt1.lid IN ()) ELSE vt1.lid END) ORDER BY vt1.lid;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) ORDER BY (- (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((vt0.c0) IS TRUE))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) ORDER BY (- (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((vt0.c0) IS TRUE))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) ORDER BY (- (((vt0.c0) IS TRUE))) ASC;
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))>(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)>>(((vt0.c0)>(9.08159231E8)))) WHERE (vt1.lid) ORDER BY (load_extension(vt1.lid) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)>>(((vt0.c0)>(9.08159231E8)))) ORDER BY (load_extension(vt1.lid) IN ()) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)>>(((vt0.c0)>(9.08159231E8)))) WHERE (vt1.lid) ORDER BY (load_extension(vt1.lid) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)>>(((vt0.c0)>(9.08159231E8)))) ORDER BY (load_extension(vt1.lid) IN ()) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)>>(((vt0.c0)>(9.08159231E8)))) WHERE (vt1.lid) ORDER BY (load_extension(vt1.lid) IN ()) DESC;
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (UPPER(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (UPPER(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE (UPPER(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((CAST(vt0.c0 AS REAL))))) ORDER BY ((vt0.c0) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) DESC, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) DESC, vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((CAST(vt0.c0 AS REAL))))) ORDER BY ((vt0.c0) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) DESC, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) DESC, vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0))>((CAST(vt0.c0 AS REAL))))) ORDER BY ((vt0.c0) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) DESC, vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)AND('al&^')))OR(vt1.lid))) BETWEEN (((vt1.c1)<=(vt1.lid))) AND (((vt1.c1)LIKE(vt1.lid)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)AND('al&^')))OR(vt1.lid))) BETWEEN (((vt1.c1)<=(vt1.lid))) AND (((vt1.c1)LIKE(vt1.lid)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)AND('al&^')))OR(vt1.lid))) BETWEEN (((vt1.c1)<=(vt1.lid))) AND (((vt1.c1)LIKE(vt1.lid)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)AND('al&^')))OR(vt1.lid))) BETWEEN (((vt1.c1)<=(vt1.lid))) AND (((vt1.c1)LIKE(vt1.lid)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((((vt1.c0)AND('al&^')))OR(vt1.lid))) BETWEEN (((vt1.c1)<=(vt1.lid))) AND (((vt1.c1)LIKE(vt1.lid)))) WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)LIKE(vt1.c0)), ((vt1.c1)LIKE(vt1.lid)), CAST(vt1.c0 AS REAL)))==((x'', vt1.lid, CASE WHEN 0.611739142623486 THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND('0.8674740625380611')))AND(vt1.c1))) BETWEEN (vt1.lid) AND (CASE vt1.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)LIKE(vt1.c0)), ((vt1.c1)LIKE(vt1.lid)), CAST(vt1.c0 AS REAL)))=((x'', vt1.lid, CASE WHEN 0.611739142623486 THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND('0.8674740625380611')))AND(vt1.c1))) BETWEEN (vt1.lid) AND (CASE vt1.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)LIKE(vt1.c0)), ((vt1.c1)LIKE(vt1.lid)), CAST(vt1.c0 AS REAL)))==((x'', vt1.lid, CASE WHEN 0.611739142623486 THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND('0.8674740625380611')))AND(vt1.c1))) BETWEEN (vt1.lid) AND (CASE vt1.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)LIKE(vt1.c0)), ((vt1.c1)LIKE(vt1.lid)), CAST(vt1.c0 AS REAL)))=((x'', vt1.lid, CASE WHEN 0.611739142623486 THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND('0.8674740625380611')))AND(vt1.c1))) BETWEEN (vt1.lid) AND (CASE vt1.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)LIKE(vt1.c0)), ((vt1.c1)LIKE(vt1.lid)), CAST(vt1.c0 AS REAL)))==((x'', vt1.lid, CASE WHEN 0.611739142623486 THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))AND('0.8674740625380611')))AND(vt1.c1))) BETWEEN (vt1.lid) AND (CASE vt1.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN (vt1.lid, vt1.c0)) COLLATE NOCASE) ORDER BY (+ (CAST(vt1.lid AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt1.lid, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (CAST(vt1.lid AS BLOB))));
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN (vt1.lid, vt1.c0)) COLLATE NOCASE) ORDER BY (+ (CAST(vt1.lid AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt1.lid, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (CAST(vt1.lid AS BLOB))));
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN (vt1.lid, vt1.c0)) COLLATE NOCASE) ORDER BY (+ (CAST(vt1.lid AS BLOB)));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)<(vt1.lid))) NOT NULL)) ORDER BY (~ (((vt1.lid) IS FALSE))), json_array_length(vt1.c1) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<(vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((vt1.lid) IS FALSE))), json_array_length(vt1.c1) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)<(vt1.lid))) NOT NULL)) ORDER BY (~ (((vt1.lid) IS FALSE))), json_array_length(vt1.c1) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<(vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((vt1.lid) IS FALSE))), json_array_length(vt1.c1) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE NOCASE)+((((('u ')AND(vt1.c0)))OR(vt1.lid))))) ORDER BY UNLIKELY(DISTINCT x'6150') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.lid COLLATE NOCASE)+((((('u ')AND(vt1.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT x'6150') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE NOCASE)+((((('u ')AND(vt1.c0)))OR(vt1.lid))))) ORDER BY UNLIKELY(DISTINCT x'6150') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.lid COLLATE NOCASE)+((((('u ')AND(vt1.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT x'6150') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE NOCASE)+((((('u ')AND(vt1.c0)))OR(vt1.lid))))) ORDER BY UNLIKELY(DISTINCT x'6150') DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE BINARY) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE BINARY) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE BINARY) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE BINARY) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY vt0.c0 ASC, ((vt0.c0 COLLATE BINARY) ISNULL) DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT * FROM vt1 WHERE ((((vt1.c0)+(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)+(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)+(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)+(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)+(vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))<((vt0.c0, CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))<((vt0.c0, CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))<((vt0.c0, CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))<((vt0.c0, CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))<((vt0.c0, CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((((vt0.c0))<((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((((vt0.c0))<((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((((vt0.c0))<((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((((vt0.c0))<((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((((vt0.c0))<((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(CAST(vt1.lid AS TEXT)) WHERE ((NOT ((- (vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt1.lid))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM(CAST(vt1.lid AS TEXT)));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(CAST(vt1.lid AS TEXT)) WHERE ((NOT ((- (vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt1.lid))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM(CAST(vt1.lid AS TEXT)));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(CAST(vt1.lid AS TEXT)) WHERE ((NOT ((- (vt1.lid)))));
SELECT * FROM vt1, vt0 WHERE ((((~ (vt0.c0)))&((((vt1.c1))>((vt1.c0)))))) ORDER BY ((((vt0.c0)<(vt0.c0)))<<((((vt0.c0, vt1.c1, 'wj')) BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.lid, vt1.lid))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))&((((vt1.c1))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)<(vt0.c0)))<<((((vt0.c0, vt1.c1, 'wj')) BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.lid, vt1.lid))))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt0.c0)))&((((vt1.c1))>((vt1.c0)))))) ORDER BY ((((vt0.c0)<(vt0.c0)))<<((((vt0.c0, vt1.c1, 'wj')) BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.lid, vt1.lid))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))&((((vt1.c1))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)<(vt0.c0)))<<((((vt0.c0, vt1.c1, 'wj')) BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.lid, vt1.lid))))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt0.c0)))&((((vt1.c1))>((vt1.c0)))))) ORDER BY ((((vt0.c0)<(vt0.c0)))<<((((vt0.c0, vt1.c1, 'wj')) BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.lid, vt1.lid))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((json(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((json(vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json(vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((json(vt1.c0) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c1)))%(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c1)))%(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c1)))%(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c1)))%(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (vt1.c1)))%(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT * FROM vt0, vt1 WHERE ((+ ((~ (265295666)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (265295666))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ ((~ (265295666)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (265295666))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ ((~ (265295666)))));
SELECT * FROM vt0 WHERE ((('''	')<<(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('''	')<<(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((('''	')<<(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('''	')<<(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((('''	')<<(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END AS REAL)) ORDER BY COALESCE(DISTINCT COALESCE(vt1.lid, -555445162), ((vt1.c0)>=(vt1.lid))) DESC, (~ (((vt1.c1)LIKE(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT COALESCE(vt1.lid, -555445162), ((vt1.c0)>=(vt1.lid))) DESC, (~ (((vt1.c1)LIKE(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END AS REAL)) ORDER BY COALESCE(DISTINCT COALESCE(vt1.lid, -555445162), ((vt1.c0)>=(vt1.lid))) DESC, (~ (((vt1.c1)LIKE(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT COALESCE(vt1.lid, -555445162), ((vt1.c0)>=(vt1.lid))) DESC, (~ (((vt1.c1)LIKE(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END AS REAL)) ORDER BY COALESCE(DISTINCT COALESCE(vt1.lid, -555445162), ((vt1.c0)>=(vt1.lid))) DESC, (~ (((vt1.c1)LIKE(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ABS(vt1.lid) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ABS(vt1.lid));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ABS(vt1.lid) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ABS(vt1.lid));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ABS(vt1.lid) WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))>((('391122414') BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt1.c0))>((('391122414') BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))>((('391122414') BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt1.c0))>((('391122414') BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))>((('391122414') BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)AND('Ra')))AND(vt0.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, load_extension(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)AND('Ra')))AND(vt0.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, load_extension(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)AND('Ra')))AND(vt0.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, load_extension(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, ((((vt0.c0)AND('Ra')))AND(vt0.c0)) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, load_extension(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ('') ORDER BY NULL  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('') ORDER BY NULL  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('') ORDER BY NULL  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid ELSE ((((vt1.lid)AND(vt0.c0)))AND(vt1.lid)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid ELSE ((((vt1.lid)AND(vt0.c0)))AND(vt1.lid)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid ELSE ((((vt1.lid)AND(vt0.c0)))AND(vt1.lid)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid ELSE ((((vt1.lid)AND(vt0.c0)))AND(vt1.lid)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN (+ (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) THEN vt1.lid ELSE ((((vt1.lid)AND(vt0.c0)))AND(vt1.lid)) END);
SELECT * FROM vt1 WHERE ((((vt1.lid, vt1.lid, vt1.c0)) NOT BETWEEN ((0.7181957724047104, (+ (vt1.c0)), ((((vt1.lid)OR(NULL)))AND(vt1.c1)))) AND ((((vt1.c0)<(vt1.c1)), COALESCE(DISTINCT vt1.c1, vt1.lid), vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid, vt1.lid, vt1.c0)) NOT BETWEEN ((0.7181957724047104, (+ (vt1.c0)), ((((vt1.lid)OR(NULL)))AND(vt1.c1)))) AND ((((vt1.c0)<(vt1.c1)), COALESCE(DISTINCT vt1.c1, vt1.lid), vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.lid, vt1.lid, vt1.c0)) NOT BETWEEN ((0.7181957724047104, (+ (vt1.c0)), ((((vt1.lid)OR(NULL)))AND(vt1.c1)))) AND ((((vt1.c0)<(vt1.c1)), COALESCE(DISTINCT vt1.c1, vt1.lid), vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid, vt1.lid, vt1.c0)) NOT BETWEEN ((0.7181957724047104, (+ (vt1.c0)), ((((vt1.lid)OR(NULL)))AND(vt1.c1)))) AND ((((vt1.c0)<(vt1.c1)), COALESCE(DISTINCT vt1.c1, vt1.lid), vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.lid, vt1.lid, vt1.c0)) NOT BETWEEN ((0.7181957724047104, (+ (vt1.c0)), ((((vt1.lid)OR(NULL)))AND(vt1.c1)))) AND ((((vt1.c0)<(vt1.c1)), COALESCE(DISTINCT vt1.c1, vt1.lid), vt1.c1))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((1.858317656E9) NOT BETWEEN (vt0.c0) AND (vt1.lid))) AND (TYPEOF(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((1.858317656E9) NOT BETWEEN (vt0.c0) AND (vt1.lid))) AND (TYPEOF(DISTINCT vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((1.858317656E9) NOT BETWEEN (vt0.c0) AND (vt1.lid))) AND (TYPEOF(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((1.858317656E9) NOT BETWEEN (vt0.c0) AND (vt1.lid))) AND (TYPEOF(DISTINCT vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((1.858317656E9) NOT BETWEEN (vt0.c0) AND (vt1.lid))) AND (TYPEOF(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0) ISNULL) IN ()) ASC);
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0) ISNULL) IN ()) ASC);
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN ()) ASC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((0.7697972539518431)AND(((0.662970834370838) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))) DESC  NULLS FIRST, ((((((((((x'') NOT NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'ea27')))))AND((~ (vt0.c0)))))AND((((vt0.c0))=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.7697972539518431)AND(((0.662970834370838) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))) DESC  NULLS FIRST, ((((((((((x'') NOT NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'ea27')))))AND((~ (vt0.c0)))))AND((((vt0.c0))==((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((0.7697972539518431)AND(((0.662970834370838) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))) DESC  NULLS FIRST, ((((((((((x'') NOT NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'ea27')))))AND((~ (vt0.c0)))))AND((((vt0.c0))=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.7697972539518431)AND(((0.662970834370838) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))) DESC  NULLS FIRST, ((((((((((x'') NOT NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'ea27')))))AND((~ (vt0.c0)))))AND((((vt0.c0))==((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((0.7697972539518431)AND(((0.662970834370838) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)=(vt0.c0)))) DESC  NULLS FIRST, ((((((((((x'') NOT NULL))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))OR(x'ea27')))))AND((~ (vt0.c0)))))AND((((vt0.c0))=((vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN x'' ELSE 0.2944511186252212 END)) AND ((IFNULL(DISTINCT vt1.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN x'' ELSE 0.2944511186252212 END)) AND ((IFNULL(DISTINCT vt1.c1, vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN x'' ELSE 0.2944511186252212 END)) AND ((IFNULL(DISTINCT vt1.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN x'' ELSE 0.2944511186252212 END)) AND ((IFNULL(DISTINCT vt1.c1, vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c1 THEN x'' ELSE 0.2944511186252212 END)) AND ((IFNULL(DISTINCT vt1.c1, vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)||(vt1.lid)))AND((+ (vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)||(vt1.lid)))AND((+ (vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)||(vt1.lid)))AND((+ (vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)||(vt1.lid)))AND((+ (vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)||(vt1.lid)))AND((+ (vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 END)));
SELECT * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c1) WHERE (UPPER(CAST(vt1.c1 AS TEXT))) ORDER BY 0.5428811395339429;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt1.c1 AS TEXT))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c1) ORDER BY 0.5428811395339429);
SELECT * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c1) WHERE (UPPER(CAST(vt1.c1 AS TEXT))) ORDER BY 0.5428811395339429;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt1.c1 AS TEXT))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c1) ORDER BY 0.5428811395339429);
SELECT * FROM vt1 INNER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c1) WHERE (UPPER(CAST(vt1.c1 AS TEXT))) ORDER BY 0.5428811395339429;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)/(vt1.c0)) IN ())) ORDER BY CAST(((vt1.c0)AND(vt1.c1)) AS BLOB)  NULLS FIRST, ((CAST(vt1.lid AS BLOB))+(UNLIKELY(vt0.c0))) DESC  NULLS FIRST, json_array_length((vt1.lid IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY CAST(((vt1.c0)AND(vt1.c1)) AS BLOB)  NULLS FIRST, ((CAST(vt1.lid AS BLOB))+(UNLIKELY(vt0.c0))) DESC  NULLS FIRST, json_array_length((vt1.lid IN ())) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)/(vt1.c0)) IN ())) ORDER BY CAST(((vt1.c0)AND(vt1.c1)) AS BLOB)  NULLS FIRST, ((CAST(vt1.lid AS BLOB))+(UNLIKELY(vt0.c0))) DESC  NULLS FIRST, json_array_length((vt1.lid IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY CAST(((vt1.c0)AND(vt1.c1)) AS BLOB)  NULLS FIRST, ((CAST(vt1.lid AS BLOB))+(UNLIKELY(vt0.c0))) DESC  NULLS FIRST, json_array_length((vt1.lid IN ())) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)/(vt1.c0)) IN ())) ORDER BY CAST(((vt1.c0)AND(vt1.c1)) AS BLOB)  NULLS FIRST, ((CAST(vt1.lid AS BLOB))+(UNLIKELY(vt0.c0))) DESC  NULLS FIRST, json_array_length((vt1.lid IN ())) DESC;
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LTRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(vt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)&(x'')) THEN vt1.lid COLLATE BINARY WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) THEN (((1980278806, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) WHEN 46970838 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LOWER(vt1.c1) END) ORDER BY ((((vt1.lid)==(vt1.c0)))%((((vt1.c0, vt1.c1, vt1.lid)) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt1.c1, vt1.c0, vt1.lid))))) ASC  NULLS LAST, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)&(x'')) THEN vt1.lid COLLATE BINARY WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) THEN (((1980278806, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) WHEN 46970838 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LOWER(vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)==(vt1.c0)))%((((vt1.c0, vt1.c1, vt1.lid)) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt1.c1, vt1.c0, vt1.lid))))) ASC  NULLS LAST, x'' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)&(x'')) THEN vt1.lid COLLATE BINARY WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) THEN (((1980278806, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) WHEN 46970838 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LOWER(vt1.c1) END) ORDER BY ((((vt1.lid)==(vt1.c0)))%((((vt1.c0, vt1.c1, vt1.lid)) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt1.c1, vt1.c0, vt1.lid))))) ASC  NULLS LAST, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)&(x'')) THEN vt1.lid COLLATE BINARY WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) THEN (((1980278806, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) WHEN 46970838 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LOWER(vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)==(vt1.c0)))%((((vt1.c0, vt1.c1, vt1.lid)) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt1.c1, vt1.c0, vt1.lid))))) ASC  NULLS LAST, x'' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)&(x'')) THEN vt1.lid COLLATE BINARY WHEN ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) THEN (((1980278806, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.c0, vt1.c1))) WHEN 46970838 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LOWER(vt1.c1) END) ORDER BY ((((vt1.lid)==(vt1.c0)))%((((vt1.c0, vt1.c1, vt1.lid)) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt1.c1, vt1.c0, vt1.lid))))) ASC  NULLS LAST, x'' DESC;
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (0.9176440157789895 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN (0.9176440157789895 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (0.9176440157789895 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN (0.9176440157789895 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (0.9176440157789895 COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (~ (((vt0.c0)IS(vt1.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((vt0.c0)IS(vt1.lid)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (~ (((vt0.c0)IS(vt1.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((vt0.c0)IS(vt1.lid)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (~ (((vt0.c0)IS(vt1.lid)))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END) NOTNULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) AS INTEGER) WHERE ((((((vt1.c0 IN ()))OR(((vt0.c0)>('JUO')))))OR(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)OR(vt0.c0)))AND(vt1.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(((vt0.c0)>('JUO')))))OR(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) AS INTEGER) ORDER BY (((((vt1.c0)OR(vt0.c0)))AND(vt1.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) AS INTEGER) WHERE ((((((vt1.c0 IN ()))OR(((vt0.c0)>('JUO')))))OR(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)OR(vt0.c0)))AND(vt1.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(((vt0.c0)>('JUO')))))OR(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) AS INTEGER) ORDER BY (((((vt1.c0)OR(vt0.c0)))AND(vt1.c1)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)) AS INTEGER) WHERE ((((((vt1.c0 IN ()))OR(((vt0.c0)>('JUO')))))OR(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0)OR(vt0.c0)))AND(vt1.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)) COLLATE BINARY) ORDER BY NULLIF((((vt0.c0))=((vt0.c0))), vt0.c0) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((((vt0.c0))=((vt0.c0))), vt0.c0) DESC, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)) COLLATE BINARY) ORDER BY NULLIF((((vt0.c0))=((vt0.c0))), vt0.c0) DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((((vt0.c0))=((vt0.c0))), vt0.c0) DESC, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)) COLLATE BINARY) ORDER BY NULLIF((((vt0.c0))=((vt0.c0))), vt0.c0) DESC, vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))) DESC, CASE WHEN (NOT (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 WHEN '-592137186' THEN CAST('sr曽gm' AS TEXT) END, (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))) DESC, CASE WHEN (NOT (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 WHEN '-592137186' THEN CAST('sr曽gm' AS TEXT) END, (vt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))) DESC, CASE WHEN (NOT (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 WHEN '-592137186' THEN CAST('sr曽gm' AS TEXT) END, (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))) DESC, CASE WHEN (NOT (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 WHEN '-592137186' THEN CAST('sr曽gm' AS TEXT) END, (vt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))) DESC, CASE WHEN (NOT (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((vt0.c0)IS(vt0.c0)) THEN vt0.c0 WHEN '-592137186' THEN CAST('sr曽gm' AS TEXT) END, (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT * FROM vt1, vt0 WHERE (QUOTE(((((vt1.c0)OR(vt1.lid)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((vt1.c0)OR(vt1.lid)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (QUOTE(((((vt1.c0)OR(vt1.lid)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((vt1.c0)OR(vt1.lid)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (QUOTE(((((vt1.c0)OR(vt1.lid)))OR(vt1.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (CAST(vt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ('i') ORDER BY ((((((vt1.c1)OR(vt1.lid)))OR(NULL))) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('') AND (vt1.c1))) AND (((vt1.c1)==(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('i') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c1)OR(vt1.lid)))OR(NULL))) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('') AND (vt1.c1))) AND (((vt1.c1)==(vt1.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('i') ORDER BY ((((((vt1.c1)OR(vt1.lid)))OR(NULL))) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('') AND (vt1.c1))) AND (((vt1.c1)==(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('i') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c1)OR(vt1.lid)))OR(NULL))) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('') AND (vt1.c1))) AND (((vt1.c1)==(vt1.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('i') ORDER BY ((((((vt1.c1)OR(vt1.lid)))OR(NULL))) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('') AND (vt1.c1))) AND (((vt1.c1)==(vt1.lid))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 COLLATE RTRIM, ((vt0.c0) IS TRUE), (vt1.c0 IN ())))==(((x'' IN ()), ((vt1.lid)<(vt1.c0)), (+ (vt1.lid))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE RTRIM, ((vt0.c0) IS TRUE), (vt1.c0 IN ())))=(((x'' IN ()), ((vt1.lid)<(vt1.c0)), (+ (vt1.lid)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 COLLATE RTRIM, ((vt0.c0) IS TRUE), (vt1.c0 IN ())))==(((x'' IN ()), ((vt1.lid)<(vt1.c0)), (+ (vt1.lid))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE RTRIM, ((vt0.c0) IS TRUE), (vt1.c0 IN ())))=(((x'' IN ()), ((vt1.lid)<(vt1.c0)), (+ (vt1.lid)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 COLLATE RTRIM, ((vt0.c0) IS TRUE), (vt1.c0 IN ())))==(((x'' IN ()), ((vt1.lid)<(vt1.c0)), (+ (vt1.lid))))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) BETWEEN (MIN(vt1.lid, vt1.c1)) AND ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) BETWEEN (MIN(vt1.lid, vt1.c1)) AND ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) BETWEEN (MIN(vt1.lid, vt1.c1)) AND ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) BETWEEN (MIN(vt1.lid, vt1.c1)) AND ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) BETWEEN (MIN(vt1.lid, vt1.c1)) AND ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.lid))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt0.c0)))OR(NULL))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC, ((((vt0.c0)/(vt1.c1))) BETWEEN ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.lid)GLOB(vt1.c1))))  NULLS LAST, ((x'')>=(((vt1.c0)<>(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))OR(NULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC, ((((vt0.c0)/(vt1.c1))) BETWEEN ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.lid)GLOB(vt1.c1))))  NULLS LAST, ((x'')>=(((vt1.c0)<>(vt1.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt0.c0)))OR(NULL))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC, ((((vt0.c0)/(vt1.c1))) BETWEEN ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.lid)GLOB(vt1.c1))))  NULLS LAST, ((x'')>=(((vt1.c0)<>(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))OR(NULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC, ((((vt0.c0)/(vt1.c1))) BETWEEN ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.lid)GLOB(vt1.c1))))  NULLS LAST, ((x'')>=(((vt1.c0)<>(vt1.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt0.c0)))OR(NULL))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS TEXT) ASC, ((((vt0.c0)/(vt1.c1))) BETWEEN ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.lid)GLOB(vt1.c1))))  NULLS LAST, ((x'')>=(((vt1.c0)<>(vt1.lid))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(NULL)) ORDER BY vt1.lid COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(NULL)) ORDER BY vt1.lid COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(NULL)) ORDER BY vt1.lid COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((LIKELY(vt0.c0))%(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))%(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((LIKELY(vt0.c0))%(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))%(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY ((LIKELY(vt0.c0))%(((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((CASE '仿v4'  WHEN x'b43d' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.lid ELSE vt1.c1 END)) AND (((+ (vt1.lid)))))) ORDER BY ((((vt1.c1)|(vt0.c0)))OR(((vt0.c0)<=(vt1.c0))))  NULLS FIRST, CAST(TRIM(vt1.c0, x'') AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((CASE '仿v4'  WHEN x'b43d' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.lid ELSE vt1.c1 END)) AND (((+ (vt1.lid)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1)|(vt0.c0)))OR(((vt0.c0)<=(vt1.c0))))  NULLS FIRST, CAST(TRIM(vt1.c0, x'') AS TEXT));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((CASE '仿v4'  WHEN x'b43d' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.lid ELSE vt1.c1 END)) AND (((+ (vt1.lid)))))) ORDER BY ((((vt1.c1)|(vt0.c0)))OR(((vt0.c0)<=(vt1.c0))))  NULLS FIRST, CAST(TRIM(vt1.c0, x'') AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((CASE '仿v4'  WHEN x'b43d' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.lid ELSE vt1.c1 END)) AND (((+ (vt1.lid)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1)|(vt0.c0)))OR(((vt0.c0)<=(vt1.c0))))  NULLS FIRST, CAST(TRIM(vt1.c0, x'') AS TEXT));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((CASE '仿v4'  WHEN x'b43d' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.lid ELSE vt1.c1 END)) AND (((+ (vt1.lid)))))) ORDER BY ((((vt1.c1)|(vt0.c0)))OR(((vt0.c0)<=(vt1.c0))))  NULLS FIRST, CAST(TRIM(vt1.c0, x'') AS TEXT);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOTNULL)))>=(((- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOTNULL)))>=(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOTNULL)))>=(((- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) NOTNULL)))>=(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOTNULL)))>=(((- (vt1.c0))))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))&(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))) WHERE ((+ (x'34f5')));
SELECT SUM(count) FROM (SELECT (((+ (x'34f5'))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))&(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))&(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))) WHERE ((+ (x'34f5')));
SELECT SUM(count) FROM (SELECT (((+ (x'34f5'))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))&(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((UPPER(vt0.c0))&(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))) WHERE ((+ (x'34f5')));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST, CAST(((vt0.c0)!=(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST, CAST(((vt0.c0)<>(vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST, CAST(((vt0.c0)!=(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST, CAST(((vt0.c0)<>(vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE RTRIM  NULLS FIRST, CAST(((vt0.c0)!=(vt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)) BETWEEN (((- (9.08159231E8)))) AND ((((vt1.c1)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((- (9.08159231E8)))) AND ((((vt1.c1)<=(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)) BETWEEN (((- (9.08159231E8)))) AND ((((vt1.c1)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((- (9.08159231E8)))) AND ((((vt1.c1)<=(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid)) BETWEEN (((- (9.08159231E8)))) AND ((((vt1.c1)<=(vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((~ (vt1.c1)) IN (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c1)) IN (x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((~ (vt1.c1)) IN (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c1)) IN (x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((~ (vt1.c1)) IN (x'')));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((x'')OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.lid))))) WHERE (((((((vt0.c0))<=(('2077389738')))))!=((((vt1.c1)IS(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=(('2077389738')))))!=((((vt1.c1)IS(vt1.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((x'')OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.lid))))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((x'')OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.lid))))) WHERE (((((((vt0.c0))<=(('2077389738')))))!=((((vt1.c1)IS(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=(('2077389738')))))!=((((vt1.c1)IS(vt1.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((x'')OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.lid))))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((x'')OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.lid))))) WHERE (((((((vt0.c0))<=(('2077389738')))))!=((((vt1.c1)IS(vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid COLLATE BINARY);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((0X7cb8d5e5 COLLATE BINARY) NOT BETWEEN ((+ (vt1.lid))) AND (((vt1.c1) ISNULL))) WHERE (vt1.c0) ORDER BY ((vt0.c0)LIKE(UPPER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((0x7cb8d5e5 COLLATE BINARY) NOT BETWEEN ((+ (vt1.lid))) AND (((vt1.c1) ISNULL))) ORDER BY ((vt0.c0)LIKE(UPPER(vt0.c0))) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((0X7cb8d5e5 COLLATE BINARY) NOT BETWEEN ((+ (vt1.lid))) AND (((vt1.c1) ISNULL))) WHERE (vt1.c0) ORDER BY ((vt0.c0)LIKE(UPPER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((0x7cb8d5e5 COLLATE BINARY) NOT BETWEEN ((+ (vt1.lid))) AND (((vt1.c1) ISNULL))) ORDER BY ((vt0.c0)LIKE(UPPER(vt0.c0))) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((0X7cb8d5e5 COLLATE BINARY) NOT BETWEEN ((+ (vt1.lid))) AND (((vt1.c1) ISNULL))) WHERE (vt1.c0) ORDER BY ((vt0.c0)LIKE(UPPER(vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 THEN '-180558139' ELSE (- (vt1.c1)) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN '-180558139' ELSE (- (vt1.c1)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 THEN '-180558139' ELSE (- (vt1.c1)) END) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN '-180558139' ELSE (- (vt1.c1)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 THEN '-180558139' ELSE (- (vt1.c1)) END) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON HEX(CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid ELSE NULL END) WHERE ((((((vt1.lid))=((vt1.c1))))&((+ (vt1.c1))))) ORDER BY ((CAST(vt1.c0 AS BLOB))LIKE(((((((((1.096074722E9)OR(vt1.c0)))AND(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.lid))=((vt1.c1))))&((+ (vt1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON HEX(CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid ELSE NULL END) ORDER BY ((CAST(vt1.c0 AS BLOB))LIKE(((((((((1.096074722E9)OR(vt1.c0)))AND(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON HEX(CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid ELSE NULL END) WHERE ((((((vt1.lid))=((vt1.c1))))&((+ (vt1.c1))))) ORDER BY ((CAST(vt1.c0 AS BLOB))LIKE(((((((((1.096074722E9)OR(vt1.c0)))AND(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.lid))=((vt1.c1))))&((+ (vt1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON HEX(CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid ELSE NULL END) ORDER BY ((CAST(vt1.c0 AS BLOB))LIKE(((((((((1.096074722E9)OR(vt1.c0)))AND(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON HEX(CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid ELSE NULL END) WHERE ((((((vt1.lid))=((vt1.c1))))&((+ (vt1.c1))))) ORDER BY ((CAST(vt1.c0 AS BLOB))LIKE(((((((((1.096074722E9)OR(vt1.c0)))AND(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt0.c0)))GLOB(vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt0.c0)))GLOB(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt0.c0)))GLOB(vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt0.c0)))GLOB(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt0.c0)))GLOB(vt1.lid COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE ((CAST(NULL AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(NULL AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(NULL AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(NULL AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(NULL AS NUMERIC) IN ()));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY TYPEOF('0.7697972539518431') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF('0.7697972539518431') DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY TYPEOF('0.7697972539518431') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF('0.7697972539518431') DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY TYPEOF('0.7697972539518431') DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM) NOT BETWEEN (((vt1.c1)/(vt1.c0))) AND (((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) ORDER BY (+ ((((vt1.lid)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), LTRIM(((vt1.c1)GLOB(vt1.c1)), CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE RTRIM) NOT BETWEEN (((vt1.c1)/(vt1.c0))) AND (((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((((vt1.lid)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), LTRIM(((vt1.c1)GLOB(vt1.c1)), CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM) NOT BETWEEN (((vt1.c1)/(vt1.c0))) AND (((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) ORDER BY (+ ((((vt1.lid)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), LTRIM(((vt1.c1)GLOB(vt1.c1)), CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE RTRIM) NOT BETWEEN (((vt1.c1)/(vt1.c0))) AND (((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (+ ((((vt1.lid)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), LTRIM(((vt1.c1)GLOB(vt1.c1)), CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM) NOT BETWEEN (((vt1.c1)/(vt1.c0))) AND (((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) ORDER BY (+ ((((vt1.lid)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), LTRIM(((vt1.c1)GLOB(vt1.c1)), CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (IFNULL(vt1.c0 COLLATE RTRIM, ((((vt1.lid)OR('-661334536')))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt1.c0 COLLATE RTRIM, ((((vt1.lid)OR('-661334536')))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (IFNULL(vt1.c0 COLLATE RTRIM, ((((vt1.lid)OR('-661334536')))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt1.c0 COLLATE RTRIM, ((((vt1.lid)OR('-661334536')))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (IFNULL(vt1.c0 COLLATE RTRIM, ((((vt1.lid)OR('-661334536')))AND(vt1.c0))));
SELECT * FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.2065727224748326) THEN vt0.c0 ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.2065727224748326) THEN vt0.c0 ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.2065727224748326) THEN vt0.c0 ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.2065727224748326) THEN vt0.c0 ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (vt0.c0))) ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.2065727224748326) THEN vt0.c0 ELSE ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((x'' IN ()))>>(('' IN ())))) ORDER BY (- (vt1.lid COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))>>(('' IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.lid COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE ((((x'' IN ()))>>(('' IN ())))) ORDER BY (- (vt1.lid COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))>>(('' IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.lid COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE ((((x'' IN ()))>>(('' IN ())))) ORDER BY (- (vt1.lid COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) AND (((((((((vt1.lid)OR(vt1.c1)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c1))))) ORDER BY (- (((vt1.lid) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) AND (((((((((vt1.lid)OR(vt1.c1)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.lid) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) AND (((((((((vt1.lid)OR(vt1.c1)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c1))))) ORDER BY (- (((vt1.lid) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) AND (((((((((vt1.lid)OR(vt1.c1)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.lid) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) AND (((((((((vt1.lid)OR(vt1.c1)))OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c1))))) ORDER BY (- (((vt1.lid) NOT NULL))) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((0.3081463771966604 IN ())) BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END) AND (((((0Xffffffffc0ebb0b8)OR(x'd61fd3bf')))OR(NULL)))));
SELECT SUM(count) FROM (SELECT (((((0.3081463771966604 IN ())) BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END) AND (((((0xffffffffc0ebb0b8)OR(x'd61fd3bf')))OR(NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((0.3081463771966604 IN ())) BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END) AND (((((0Xffffffffc0ebb0b8)OR(x'd61fd3bf')))OR(NULL)))));
SELECT SUM(count) FROM (SELECT (((((0.3081463771966604 IN ())) BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END) AND (((((0xffffffffc0ebb0b8)OR(x'd61fd3bf')))OR(NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((0.3081463771966604 IN ())) BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END) AND (((((0Xffffffffc0ebb0b8)OR(x'd61fd3bf')))OR(NULL)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((LOWER(DISTINCT vt1.lid))OR((vt1.c1 IN ()))))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(DISTINCT vt1.lid))OR((vt1.c1 IN ()))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((LOWER(DISTINCT vt1.lid))OR((vt1.c1 IN ()))))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(DISTINCT vt1.lid))OR((vt1.c1 IN ()))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((LOWER(DISTINCT vt1.lid))OR((vt1.c1 IN ()))))OR((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)==(vt1.c1))  WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((((((((vt1.c1)AND(vt1.c0)))AND(',ENC}]')))OR(vt1.c1)))AND('')) END WHERE (CAST(((((((((vt1.c1)OR(vt0.c0)))OR('+,_n|킹')))OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) ORDER BY ((('-738161605' IN ()))|(vt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt1.c1)OR(vt0.c0)))OR('+,_n|킹')))OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)=(vt1.c1))  WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((((((((vt1.c1)AND(vt1.c0)))AND(',ENC}]')))OR(vt1.c1)))AND('')) END ORDER BY ((('-738161605' IN ()))|(vt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)==(vt1.c1))  WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((((((((vt1.c1)AND(vt1.c0)))AND(',ENC}]')))OR(vt1.c1)))AND('')) END WHERE (CAST(((((((((vt1.c1)OR(vt0.c0)))OR('+,_n|킹')))OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) ORDER BY ((('-738161605' IN ()))|(vt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt1.c1)OR(vt0.c0)))OR('+,_n|킹')))OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)=(vt1.c1))  WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((((((((vt1.c1)AND(vt1.c0)))AND(',ENC}]')))OR(vt1.c1)))AND('')) END ORDER BY ((('-738161605' IN ()))|(vt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt1.c0)==(vt1.c1))  WHEN vt1.c0 THEN (+ (vt1.c0)) ELSE ((((((((vt1.c1)AND(vt1.c0)))AND(',ENC}]')))OR(vt1.c1)))AND('')) END WHERE (CAST(((((((((vt1.c1)OR(vt0.c0)))OR('+,_n|킹')))OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) ORDER BY ((('-738161605' IN ()))|(vt1.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))/((NULL IN ())))) ORDER BY (((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)))=((((((((((vt0.c0)AND(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), ((vt0.c0) IS FALSE)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))/((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)))=((((((((((vt0.c0)AND(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), ((vt0.c0) IS FALSE)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))/((NULL IN ())))) ORDER BY (((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)))=((((((((((vt0.c0)AND(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), ((vt0.c0) IS FALSE)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))/((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)))=((((((((((vt0.c0)AND(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), ((vt0.c0) IS FALSE)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))/((NULL IN ())))) ORDER BY (((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC)))=((((((((((vt0.c0)AND(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))>((vt0.c0))), ((vt0.c0) IS FALSE)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 END);
SELECT ALL * FROM vt1 WHERE (MIN(vt1.c0, vt1.c1) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt1.c0, vt1.c1) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (MIN(vt1.c0, vt1.c1) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((MIN(vt1.c0, vt1.c1) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (MIN(vt1.c0, vt1.c1) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE (((vt1.lid)=(((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))))) ORDER BY (((('** Fu')AND(((vt0.c0)AND(NULL)))))OR(('-738161605' IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)=(((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('** Fu')AND(((vt0.c0)AND(NULL)))))OR(('-738161605' IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((vt1.lid)=(((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))))) ORDER BY (((('** Fu')AND(((vt0.c0)AND(NULL)))))OR(('-738161605' IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)=(((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('** Fu')AND(((vt0.c0)AND(NULL)))))OR(('-738161605' IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((vt1.lid)=(((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))))) ORDER BY (((('** Fu')AND(((vt0.c0)AND(NULL)))))OR(('-738161605' IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c1) ORDER BY ((CAST(vt1.lid AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS TEXT)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c1) ORDER BY ((CAST(vt1.lid AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS TEXT)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c1) ORDER BY ((CAST(vt1.lid AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (CAST(((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (CAST(((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (CAST(((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('427129608')OR(((x'8669')IS(vt1.lid)))))AND((((vt0.c0))>=((vt1.c1)))))) ORDER BY ((((~ (vt1.c1))))<((((vt1.c0) NOT BETWEEN (vt1.lid) AND ('-565745863'))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('427129608')OR(((x'8669')IS(vt1.lid)))))AND((((vt0.c0))>=((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((~ (vt1.c1))))<((((vt1.c0) NOT BETWEEN (vt1.lid) AND ('-565745863'))))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('427129608')OR(((x'8669')IS(vt1.lid)))))AND((((vt0.c0))>=((vt1.c1)))))) ORDER BY ((((~ (vt1.c1))))<((((vt1.c0) NOT BETWEEN (vt1.lid) AND ('-565745863'))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('427129608')OR(((x'8669')IS(vt1.lid)))))AND((((vt0.c0))>=((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((~ (vt1.c1))))<((((vt1.c0) NOT BETWEEN (vt1.lid) AND ('-565745863'))))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('427129608')OR(((x'8669')IS(vt1.lid)))))AND((((vt0.c0))>=((vt1.c1)))))) ORDER BY ((((~ (vt1.c1))))<((((vt1.c0) NOT BETWEEN (vt1.lid) AND ('-565745863'))))) DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)) COLLATE RTRIM WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY ((UPPER(DISTINCT vt1.lid))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)) COLLATE RTRIM ORDER BY ((UPPER(DISTINCT vt1.lid))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)) COLLATE RTRIM WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY ((UPPER(DISTINCT vt1.lid))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)) COLLATE RTRIM ORDER BY ((UPPER(DISTINCT vt1.lid))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)) COLLATE RTRIM WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY ((UPPER(DISTINCT vt1.lid))AND(vt0.c0));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<=((((vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, vt1.lid))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<=((((vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, vt1.lid)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<=((((vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, vt1.lid))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<=((((vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, vt1.lid)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<=((((vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, vt1.lid))))));
