-- Time: 2024/06/09 00:52:58
-- Database: database60
-- Database version: 3.40.0
-- seed value: 1477238260
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL ); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET c2=0.2823445213782123 WHERE ((CAST('1986860851' AS BLOB)) ISNULL); -- 0ms;
UPDATE rt0 SET c3='-1747565807'; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c2, c0) VALUES ('1986860851', -514541499, 0xffffffffb9a9a7b4, 0.10444798189875315); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
PRAGMA main.soft_heap_limit = 5360513610920242883; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c3, c2, c1) VALUES ('-1180063820', '\', 'rbI', x''); -- 0ms;
UPDATE rt0 SET (c3)=(0.2440691093539784) WHERE CAST(rt0.c0 AS TEXT); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1, c0)=(x'', NULL, '-1747565807'); -- 0ms;
ANALYZE temp; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt0 SET (c0, c1)=('1866273017', '-1180063820'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='' WHERE CASE WHEN ((rt0.c1) NOT BETWEEN ('-837071511') AND (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0)) ELSE rt0.c3 COLLATE RTRIM END; -- 0ms;
UPDATE rt0 SET c0=-2045078300 WHERE NULL; -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c0, c2)=('-1202266345', NULL, 'rbI'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES (0X4ef3a208, '-285650935'), (NULL, NULL), ('0.2440691093539784', 0.3532809613787504); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3) VALUES (x'', 0.6888206461169539, x''); -- 0ms;
UPDATE OR ABORT rt0 SET (c2)=(NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (''), ('o쏥Y'), ('*'); -- 0ms;
REINDEX  rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.24673766560672172); -- 0ms;
UPDATE OR ABORT rt0 SET c2='-204804493'; -- 1ms;
REINDEX  rt0; -- 0ms;
UPDATE OR ABORT rt0 SET c3=NULL, c2='-204804493', c3='1866273017'; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=0.3028157051385931, c3=0.786534420961636, c1=0.22503920888692108; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'', 1762782312, NULL, 0.3908504113851272); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0Xfffffffffd9821d6, c3=x'', c1='	_^'; -- 0ms;
END TRANSACTION; -- 1ms;
UPDATE OR REPLACE rt0 SET c2=0xffffffffa29dcf84; -- 0ms;
UPDATE OR REPLACE rt0 SET (c1, c3, c1)=(x'12f9', -189302326, '&솵') WHERE ((((rt0.c0 IN ())))!=((((rt0.c3)OR(rt0.c3))))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET c3='*', c1='-514541499', c2=NULL WHERE ((rt0.c3) NOTNULL); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2, c3)=('1906322284', NULL) WHERE CASE NULL  WHEN ((rt0.c0)-(rt0.c3)) THEN NULL ELSE CAST(rt0.c1 AS TEXT) END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(x'') WHERE CASE WHEN ((rt0.c1)>(x'2911')) THEN HEX(NULL) END; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-2.04804493E8, c3='Hby\r>'; -- 0ms;
PRAGMA soft_heap_limit = 753452005; -- 0ms;
PRAGMA main.soft_heap_limit = 0; -- 0ms;
UPDATE rt0 SET (c1, c3)=('', 'o쏥y') WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN '0.22503920888692108' THEN rt0.c3 WHEN x'' THEN rt0.c0 ELSE rt0.c0 END) ISNULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0, c1)=(x'', NULL, '-285650935'); -- 1ms;
PRAGMA incremental_vacuum; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3='486663713', c2=NULL; -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=('-1062384806'); -- 0ms;
UPDATE OR FAIL rt0 SET c1=0.9509153731191063; -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=('1612715343'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.008782963456419934, c0='1017289030'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ((9223372036854775807)-(((vt0.c0)/(vt0.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(117498124) WHERE (rt0.c2 COLLATE RTRIM IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -509788012);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM rt0 WHERE CAST(')ቔ' COLLATE RTRIM AS BLOB); -- 0ms;
PRAGMA cache_size; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((0.8079682596173771, rt0.c3, rt0.c3)) AND ((4.86663713E8, rt0.c1, rt0.c3))))GLOB(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(0.8454735307417638)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((0.8079682596173771, rt0.c3, rt0.c3)) AND ((4.86663713E8, rt0.c1, rt0.c3))))GLOB(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(0.8454735307417638)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((0.8079682596173771, rt0.c3, rt0.c3)) AND ((4.86663713E8, rt0.c1, rt0.c3))))GLOB(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(0.8454735307417638)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((0.8079682596173771, rt0.c3, rt0.c3)) AND ((4.86663713E8, rt0.c1, rt0.c3))))GLOB(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(0.8454735307417638)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((0.8079682596173771, rt0.c3, rt0.c3)) AND ((4.86663713E8, rt0.c1, rt0.c3))))GLOB(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)))OR(0.8454735307417638)))OR(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY (((+ ('751086961')))||(((vt0.c0) ISNULL)))  NULLS FIRST, (((((vt0.c0) NOTNULL), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('751086961')))||(((vt0.c0) ISNULL)))  NULLS FIRST, (((((vt0.c0) NOTNULL), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY (((+ ('751086961')))||(((vt0.c0) ISNULL)))  NULLS FIRST, (((((vt0.c0) NOTNULL), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('751086961')))||(((vt0.c0) ISNULL)))  NULLS FIRST, (((((vt0.c0) NOTNULL), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE NOCASE) ORDER BY (((+ ('751086961')))||(((vt0.c0) ISNULL)))  NULLS FIRST, (((((vt0.c0) NOTNULL), ((vt0.c0) ISNULL), (((vt0.c0))<=((vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (GLOB(vt0.c0, ((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(vt0.c0, ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (GLOB(vt0.c0, ((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(vt0.c0, ((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (GLOB(vt0.c0, ((vt0.c0)IS(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.48010814279243585)|(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c2, x'', vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL), rt0.c0 COLLATE BINARY, rt0.c3, ((-2045078300)<>(rt0.c2)), rt0.c2 COLLATE RTRIM)) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, rt0.c3, ((rt0.c1)<(rt0.c2)), (((rt0.c0, rt0.c0, rt0.c3))>((rt0.c0, rt0.c2, rt0.c3)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.48010814279243585)|(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, x'', vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL), rt0.c0 COLLATE BINARY, rt0.c3, ((-2045078300)!=(rt0.c2)), rt0.c2 COLLATE RTRIM)) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, rt0.c3, ((rt0.c1)<(rt0.c2)), (((rt0.c0, rt0.c0, rt0.c3))>((rt0.c0, rt0.c2, rt0.c3)))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.48010814279243585)|(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c2, x'', vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL), rt0.c0 COLLATE BINARY, rt0.c3, ((-2045078300)<>(rt0.c2)), rt0.c2 COLLATE RTRIM)) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, rt0.c3, ((rt0.c1)<(rt0.c2)), (((rt0.c0, rt0.c0, rt0.c3))>((rt0.c0, rt0.c2, rt0.c3)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.48010814279243585)|(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, x'', vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL), rt0.c0 COLLATE BINARY, rt0.c3, ((-2045078300)!=(rt0.c2)), rt0.c2 COLLATE RTRIM)) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, rt0.c3, ((rt0.c1)<(rt0.c2)), (((rt0.c0, rt0.c0, rt0.c3))>((rt0.c0, rt0.c2, rt0.c3)))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.48010814279243585)|(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c2, x'', vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL), rt0.c0 COLLATE BINARY, rt0.c3, ((-2045078300)<>(rt0.c2)), rt0.c2 COLLATE RTRIM)) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, rt0.c3, ((rt0.c1)<(rt0.c2)), (((rt0.c0, rt0.c0, rt0.c3))>((rt0.c0, rt0.c2, rt0.c3)))))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY LOWER('\nn4d' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY LOWER('\nn4d' COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY LOWER('\nn4d' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY LOWER('\nn4d' COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY LOWER('\nn4d' COLLATE NOCASE);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON rt0.c2 WHERE (CASE WHEN ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) END);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)/((NULL IN (vt0.c0, 0Xffffffff9863dcba))))) ORDER BY -1730822287 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/((NULL IN (vt0.c0, 0Xffffffff9863dcba))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY -1730822287 COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)/((NULL IN (vt0.c0, 0Xffffffff9863dcba))))) ORDER BY -1730822287 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/((NULL IN (vt0.c0, 0Xffffffff9863dcba))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY -1730822287 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END THEN (((rt0.c1))!=((rt0.c3))) WHEN (~ (rt0.c3)) THEN LIKELIHOOD(x'', 0.6465027838335586) END) ORDER BY '0.22503920888692108' COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END THEN (((rt0.c1))<>((rt0.c3))) WHEN (~ (rt0.c3)) THEN LIKELIHOOD(x'', 0.6465027838335586) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY '0.22503920888692108' COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END THEN (((rt0.c1))!=((rt0.c3))) WHEN (~ (rt0.c3)) THEN LIKELIHOOD(x'', 0.6465027838335586) END) ORDER BY '0.22503920888692108' COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END THEN (((rt0.c1))<>((rt0.c3))) WHEN (~ (rt0.c3)) THEN LIKELIHOOD(x'', 0.6465027838335586) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY '0.22503920888692108' COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END THEN (((rt0.c1))!=((rt0.c3))) WHEN (~ (rt0.c3)) THEN LIKELIHOOD(x'', 0.6465027838335586) END) ORDER BY '0.22503920888692108' COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) IN (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) IN (NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) IN (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) IN (NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) IN (NULL)) ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON x'f7bde58f' WHERE (((((((((vt0.c0)OR(rt0.c3)))OR(x'')))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN (rt0.c0, vt0.c0))))) ORDER BY CAST(((rt0.c0) NOTNULL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt0.c3)))OR(x'')))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN (rt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON x'f7bde58f' ORDER BY CAST(((rt0.c0) NOTNULL) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON x'f7bde58f' WHERE (((((((((vt0.c0)OR(rt0.c3)))OR(x'')))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN (rt0.c0, vt0.c0))))) ORDER BY CAST(((rt0.c0) NOTNULL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt0.c3)))OR(x'')))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN (rt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON x'f7bde58f' ORDER BY CAST(((rt0.c0) NOTNULL) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON x'f7bde58f' WHERE (((((((((vt0.c0)OR(rt0.c3)))OR(x'')))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))AND((rt0.c0 IN (rt0.c0, vt0.c0))))) ORDER BY CAST(((rt0.c0) NOTNULL) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM((rt0.c2 IN ()))) ORDER BY ((((x'')AND(LENGTH(x''))))OR(UNLIKELY(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((x'')AND(LENGTH(x''))))OR(UNLIKELY(rt0.c2))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM((rt0.c2 IN ()))) ORDER BY ((((x'')AND(LENGTH(x''))))OR(UNLIKELY(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((x'')AND(LENGTH(x''))))OR(UNLIKELY(rt0.c2))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (TRIM((rt0.c2 IN ()))) ORDER BY ((((x'')AND(LENGTH(x''))))OR(UNLIKELY(rt0.c2))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON 0.18224801154184722 WHERE (CASE (('rbI') NOTNULL)  WHEN ((rt0.c0)>>(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c2) AND (0.5664482512948504))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('rbI') NOTNULL)  WHEN ((rt0.c0)>>(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON 0.18224801154184722 ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c2) AND (0.5664482512948504))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON 0.18224801154184722 WHERE (CASE (('rbI') NOTNULL)  WHEN ((rt0.c0)>>(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c2) AND (0.5664482512948504))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('rbI') NOTNULL)  WHEN ((rt0.c0)>>(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON 0.18224801154184722 ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c2) AND (0.5664482512948504))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON 0.18224801154184722 WHERE (CASE (('rbI') NOTNULL)  WHEN ((rt0.c0)>>(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c2) AND (0.5664482512948504))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END;
SELECT * FROM vt0, rt0 WHERE (((NULL) ISNULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(-0.0 AS BLOB))) AND ((rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(-0.0 AS BLOB))) AND ((rt0.c3))) DESC);
SELECT * FROM vt0, rt0 WHERE (((NULL) ISNULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(-0.0 AS BLOB))) AND ((rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(-0.0 AS BLOB))) AND ((rt0.c3))) DESC);
SELECT * FROM vt0, rt0 WHERE (((NULL) ISNULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(-0.0 AS BLOB))) AND ((rt0.c3))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR(((rt0.c2) BETWEEN (rt0.c2) AND (0.6654184659627841)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR(((rt0.c2) BETWEEN (rt0.c2) AND (0.6654184659627841)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR(((rt0.c2) BETWEEN (rt0.c2) AND (0.6654184659627841)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR(((rt0.c2) BETWEEN (rt0.c2) AND (0.6654184659627841)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)OR(((rt0.c2) BETWEEN (rt0.c2) AND (0.6654184659627841)))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))>>((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))>>((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))>>((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))>>((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))>>((+ (rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c3)))>>(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((NOT (vt0.c0)))%((('') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3)))>>(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c0)))%((('') IS FALSE))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c3)))>>(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((NOT (vt0.c0)))%((('') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3)))>>(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c0)))%((('') IS FALSE))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c3)))>>(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY (((NOT (vt0.c0)))%((('') IS FALSE))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (DATE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)<=(0.43543625305258027))));
SELECT SUM(count) FROM (SELECT ALL ((DATE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)<=(0.43543625305258027)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (DATE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)<=(0.43543625305258027))));
SELECT SUM(count) FROM (SELECT ALL ((DATE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)<=(0.43543625305258027)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (DATE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)<=(0.43543625305258027))));
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))>((rt0.c1 IN (rt0.c3))))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))>((rt0.c1 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))>((rt0.c1 IN (rt0.c3))))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))>((rt0.c1 IN (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))>((rt0.c1 IN (rt0.c3))))) ORDER BY rt0.c3 ASC;
SELECT ALL * FROM rt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) AS TEXT) ASC, ((rt0.c1 COLLATE BINARY) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) AS TEXT) ASC, ((rt0.c1 COLLATE BINARY) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) AS TEXT) ASC, ((rt0.c1 COLLATE BINARY) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) AS TEXT) ASC, ((rt0.c1 COLLATE BINARY) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)) ORDER BY CAST(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)) AS TEXT) ASC, ((rt0.c1 COLLATE BINARY) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((x'')>>(((((((((rt0.c3)OR(rt0.c0)))OR(0.20023241616390142)))AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (x'1c49' IN (rt0.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(((((((((rt0.c3)OR(rt0.c0)))OR(0.20023241616390142)))AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (x'1c49' IN (rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((x'')>>(((((((((rt0.c3)OR(rt0.c0)))OR(0.20023241616390142)))AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (x'1c49' IN (rt0.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(((((((((rt0.c3)OR(rt0.c0)))OR(0.20023241616390142)))AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (x'1c49' IN (rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((x'')>>(((((((((rt0.c3)OR(rt0.c0)))OR(0.20023241616390142)))AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (x'1c49' IN (rt0.c3)) COLLATE RTRIM;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(0.9979096662899338)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(0.9979096662899338))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(0.9979096662899338)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(0.9979096662899338))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(0.9979096662899338)));
SELECT ALL * FROM vt0, rt0 WHERE (-285650935) ORDER BY ((rt0.c1)/(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((-285650935) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)/(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (-285650935) ORDER BY ((rt0.c1)/(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((-285650935) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)/(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (-285650935) ORDER BY ((rt0.c1)/(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS TEXT)) ORDER BY (((rt0.c2 IN (rt0.c1)))GLOB(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c1)))GLOB(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS TEXT)) ORDER BY (((rt0.c2 IN (rt0.c1)))GLOB(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c1)))GLOB(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS TEXT)) ORDER BY (((rt0.c2 IN (rt0.c1)))GLOB(rt0.c2 COLLATE RTRIM));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)||(rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))) ORDER BY (((- (vt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)<>(x'')))) DESC, (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)||(rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (vt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)<>(x'')))) DESC, (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)||(rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))) ORDER BY (((- (vt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)<>(x'')))) DESC, (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)||(rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (vt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)<>(x'')))) DESC, (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)||(rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))) ORDER BY (((- (vt0.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)<>(x'')))) DESC, (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS FIRST, (rt0.c1 COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)), rt0.c2 COLLATE RTRIM));
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))AND(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))AND(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) ISNULL))))AND(NULL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((rt0.c1))), ((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN ('-1') AND (((rt0.c0)AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((rt0.c1))), ((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN ('-1') AND (((rt0.c0)AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((rt0.c1))), ((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN ('-1') AND (((rt0.c0)AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((rt0.c1))), ((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN ('-1') AND (((rt0.c0)AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((rt0.c1))), ((((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) NOT BETWEEN ('-1') AND (((rt0.c0)AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)&(rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)&(rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c3)&(rt0.c0)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0)=('0.22503920888692108')))-((x'948f' IN (vt0.c0)))) WHERE (((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))AND(json_patch(rt0.c3, rt0.c1))))AND((((rt0.c0))<((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c0) ISNULL))))OR(NULL))) ORDER BY TRIM((vt0.c0 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ASC, ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))=((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))AND(json_patch(rt0.c3, rt0.c1))))AND((((rt0.c0))<((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c0) ISNULL))))OR(NULL))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0)==('0.22503920888692108')))-((x'948f' IN (vt0.c0)))) ORDER BY TRIM((vt0.c0 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ASC, ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))==((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0)=('0.22503920888692108')))-((x'948f' IN (vt0.c0)))) WHERE (((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))AND(json_patch(rt0.c3, rt0.c1))))AND((((rt0.c0))<((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c0) ISNULL))))OR(NULL))) ORDER BY TRIM((vt0.c0 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ASC, ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))=((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))AND(json_patch(rt0.c3, rt0.c1))))AND((((rt0.c0))<((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c0) ISNULL))))OR(NULL))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0)==('0.22503920888692108')))-((x'948f' IN (vt0.c0)))) ORDER BY TRIM((vt0.c0 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ASC, ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))==((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0)=('0.22503920888692108')))-((x'948f' IN (vt0.c0)))) WHERE (((((((((((((rt0.c3)OR(CAST(rt0.c0 AS TEXT))))AND(json_patch(rt0.c3, rt0.c1))))AND((((rt0.c0))<((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c0) ISNULL))))OR(NULL))) ORDER BY TRIM((vt0.c0 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ASC, ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))=((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL, CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END))!=((CAST(rt0.c0 AS BLOB), ((rt0.c2) BETWEEN (0X397dc9e1) AND (vt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END))!=((CAST(rt0.c0 AS BLOB), ((rt0.c2) BETWEEN (0x397dc9e1) AND (vt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL, CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END))!=((CAST(rt0.c0 AS BLOB), ((rt0.c2) BETWEEN (0X397dc9e1) AND (vt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END))!=((CAST(rt0.c0 AS BLOB), ((rt0.c2) BETWEEN (0x397dc9e1) AND (vt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL, CASE WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END))!=((CAST(rt0.c0 AS BLOB), ((rt0.c2) BETWEEN (0X397dc9e1) AND (vt0.c0)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (vt0.c0))) ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0))==((vt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (vt0.c0))) ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0))==((vt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (vt0.c0))) ORDER BY CAST((((vt0.c0))=((vt0.c0))) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (json_array(x'', ((vt0.c0)>>(vt0.c0)), vt0.c0, (((vt0.c0))=((x'')))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(x'', ((vt0.c0)>>(vt0.c0)), vt0.c0, (((vt0.c0))==((x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_array(x'', ((vt0.c0)>>(vt0.c0)), vt0.c0, (((vt0.c0))=((x'')))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(x'', ((vt0.c0)>>(vt0.c0)), vt0.c0, (((vt0.c0))==((x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_array(x'', ((vt0.c0)>>(vt0.c0)), vt0.c0, (((vt0.c0))=((x'')))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0)))) ORDER BY ((x'86ed') IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'86ed') IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0)))) ORDER BY ((x'86ed') IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'86ed') IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, UPPER(vt0.c0)))) ORDER BY ((x'86ed') IS TRUE);
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY (((rt0.c0)) BETWEEN (('\rx' COLLATE RTRIM)) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END))) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) ISNULL), ((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) BETWEEN (('\rx' COLLATE RTRIM)) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END))) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) ISNULL), ((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY (((rt0.c0)) BETWEEN (('\rx' COLLATE RTRIM)) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END))) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) ISNULL), ((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) BETWEEN (('\rx' COLLATE RTRIM)) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END))) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) ISNULL), ((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ORDER BY (((rt0.c0)) BETWEEN (('\rx' COLLATE RTRIM)) AND ((CASE WHEN rt0.c2 THEN rt0.c3 END))) ASC  NULLS LAST, ((CAST(rt0.c0 AS INTEGER)) ISNULL), ((NULLIF(rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((('ኼK7', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), HEX(DISTINCT vt0.c0), ((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), (vt0.c0 IN ()), ((((vt0.c0)OR(0.021695116585307206)))AND(vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (json_object(vt0.c0, 0.7962668120197061)) AND (('.솵*7d䵩c&' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((('ኼK7', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), HEX(DISTINCT vt0.c0), ((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), (vt0.c0 IN ()), ((((vt0.c0)OR(0.021695116585307206)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (json_object(vt0.c0, 0.7962668120197061)) AND (('.솵*7d䵩c&' IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((('ኼK7', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), HEX(DISTINCT vt0.c0), ((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), (vt0.c0 IN ()), ((((vt0.c0)OR(0.021695116585307206)))AND(vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (json_object(vt0.c0, 0.7962668120197061)) AND (('.솵*7d䵩c&' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((('ኼK7', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), HEX(DISTINCT vt0.c0), ((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), (vt0.c0 IN ()), ((((vt0.c0)OR(0.021695116585307206)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (json_object(vt0.c0, 0.7962668120197061)) AND (('.솵*7d䵩c&' IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((('ኼK7', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), HEX(DISTINCT vt0.c0), ((vt0.c0)AND(vt0.c0)))) AND (((vt0.c0 IN (vt0.c0, vt0.c0)), (vt0.c0 IN ()), ((((vt0.c0)OR(0.021695116585307206)))AND(vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (json_object(vt0.c0, 0.7962668120197061)) AND (('.솵*7d䵩c&' IN ())));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((''))))<<(CAST(rt0.c3 AS REAL)))) ORDER BY 'MODu%Z[]'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<((''))))<<(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY 'MODu%Z[]'  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((''))))<<(CAST(rt0.c3 AS REAL)))) ORDER BY 'MODu%Z[]'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<((''))))<<(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY 'MODu%Z[]'  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((''))))<<(CAST(rt0.c3 AS REAL)))) ORDER BY 'MODu%Z[]'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) THEN (((rt0.c1))<=((rt0.c3))) ELSE (((rt0.c2))>=((rt0.c1))) END, (NOT ('-1566716028'));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) THEN (((rt0.c1))<=((rt0.c3))) ELSE (((rt0.c2))>=((rt0.c1))) END, (NOT ('-1566716028')));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) THEN (((rt0.c1))<=((rt0.c3))) ELSE (((rt0.c2))>=((rt0.c1))) END, (NOT ('-1566716028'));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) THEN (((rt0.c1))<=((rt0.c3))) ELSE (((rt0.c2))>=((rt0.c1))) END, (NOT ('-1566716028')));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) THEN (((rt0.c1))<=((rt0.c3))) ELSE (((rt0.c2))>=((rt0.c1))) END, (NOT ('-1566716028'));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c0 DESC;
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)&(rt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN 'ZHCl|p}se' THEN rt0.c2 ELSE NULL END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (((CASE '-509788012'  WHEN rt0.c1 THEN rt0.c3 END)<>(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-509788012'  WHEN rt0.c1 THEN rt0.c3 END)!=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)&(rt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN 'ZHCl|p}se' THEN rt0.c2 ELSE NULL END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)&(rt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN 'ZHCl|p}se' THEN rt0.c2 ELSE NULL END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (((CASE '-509788012'  WHEN rt0.c1 THEN rt0.c3 END)<>(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-509788012'  WHEN rt0.c1 THEN rt0.c3 END)!=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)&(rt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN 'ZHCl|p}se' THEN rt0.c2 ELSE NULL END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1)&(rt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN 'ZHCl|p}se' THEN rt0.c2 ELSE NULL END) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (((CASE '-509788012'  WHEN rt0.c1 THEN rt0.c3 END)<>(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('1762782312');
SELECT SUM(count) FROM (SELECT ALL (('1762782312') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('1762782312');
SELECT SUM(count) FROM (SELECT ALL (('1762782312') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('1762782312');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))), CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL)&(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))), CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL)&(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))), CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL)&(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))), CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL)&(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LIKELY(vt0.c0))), CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((NULL)&(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((-1964367569)) AND ((vt0.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.5451306205791726)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((-1964367569)) AND ((vt0.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.5451306205791726)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((-1964367569)) AND ((vt0.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.5451306205791726)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((-1964367569)) AND ((vt0.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.5451306205791726)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((-1964367569)) AND ((vt0.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c0, 0.5451306205791726)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 END)));
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(NULL))))<>((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(NULL))))<>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(NULL))))<>((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(NULL))))<>((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(NULL))))<>((vt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) ORDER BY CAST(rt0.c1 AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>>((x'' IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>>((x'' IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))>>((x'' IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c0)))<<((rt0.c1 IN ())))) ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c0)))<<((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c0)))<<((rt0.c1 IN ())))) ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c0)))<<((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c0)))<<((rt0.c1 IN ())))) ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(-1.738285894E9 AS TEXT))-((NOT (rt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN '\nn4d' THEN rt0.c1 ELSE vt0.c0 END)<=((+ (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-1.738285894E9 AS TEXT))-((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c0  WHEN '\nn4d' THEN rt0.c1 ELSE vt0.c0 END)<=((+ (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(-1.738285894E9 AS TEXT))-((NOT (rt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN '\nn4d' THEN rt0.c1 ELSE vt0.c0 END)<=((+ (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-1.738285894E9 AS TEXT))-((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE vt0.c0  WHEN '\nn4d' THEN rt0.c1 ELSE vt0.c0 END)<=((+ (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(-1.738285894E9 AS TEXT))-((NOT (rt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN '\nn4d' THEN rt0.c1 ELSE vt0.c0 END)<=((+ (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (UNLIKELY(rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(rt0.c3) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'de6c');
SELECT SUM(count) FROM (SELECT ALL ((x'de6c') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'de6c');
SELECT SUM(count) FROM (SELECT ALL ((x'de6c') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'de6c');
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (0X52f21c76) AND (rt0.c3)))IS NOT(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (0x52f21c76) AND (rt0.c3)))IS NOT(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (0X52f21c76) AND (rt0.c3)))IS NOT(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (0x52f21c76) AND (rt0.c3)))IS NOT(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (0X52f21c76) AND (rt0.c3)))IS NOT(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))LIKE(((0X6ed9a50) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))LIKE(((0X6ed9a50) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))LIKE(((0X6ed9a50) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))LIKE(((0X6ed9a50) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))LIKE(((0X6ed9a50) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (~ (rt0.c2))) WHERE (((((((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))AND((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (((rt0.c3)) BETWEEN (((('j!')<(vt0.c0)))) AND ((((rt0.c1)>(rt0.c2))))), CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c3)>(rt0.c0)) ELSE rt0.c1 END DESC  NULLS FIRST, CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))AND((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (~ (rt0.c2))) ORDER BY (((rt0.c3)) BETWEEN (((('j!')<(vt0.c0)))) AND ((((rt0.c1)>(rt0.c2))))), CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c3)>(rt0.c0)) ELSE rt0.c1 END DESC  NULLS FIRST, CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (~ (rt0.c2))) WHERE (((((((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))AND((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (((rt0.c3)) BETWEEN (((('j!')<(vt0.c0)))) AND ((((rt0.c1)>(rt0.c2))))), CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c3)>(rt0.c0)) ELSE rt0.c1 END DESC  NULLS FIRST, CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))AND((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (~ (rt0.c2))) ORDER BY (((rt0.c3)) BETWEEN (((('j!')<(vt0.c0)))) AND ((((rt0.c1)>(rt0.c2))))), CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c3)>(rt0.c0)) ELSE rt0.c1 END DESC  NULLS FIRST, CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (~ (rt0.c2))) WHERE (((((((vt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))AND((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (((rt0.c3)) BETWEEN (((('j!')<(vt0.c0)))) AND ((((rt0.c1)>(rt0.c2))))), CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c3)>(rt0.c0)) ELSE rt0.c1 END DESC  NULLS FIRST, CAST(ABS(DISTINCT vt0.c0) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) ISNULL))||(CAST(x'' AS TEXT)))) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL))||(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) ISNULL))||(CAST(x'' AS TEXT)))) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL))||(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) ISNULL))||(CAST(x'' AS TEXT)))) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)*(rt0.c3)))IS((+ (vt0.c0))))) ORDER BY x''  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))OR(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(rt0.c3)))IS((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x''  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))OR(rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)*(rt0.c3)))IS((+ (vt0.c0))))) ORDER BY x''  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))OR(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(rt0.c3)))IS((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x''  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))OR(rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)*(rt0.c3)))IS((+ (vt0.c0))))) ORDER BY x''  NULLS LAST, ((CAST(vt0.c0 AS INTEGER))OR(rt0.c2 COLLATE BINARY));
SELECT ALL * FROM rt0 WHERE (((((json_patch(rt0.c3, rt0.c3))AND(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c3 COLLATE RTRIM))) ORDER BY (((((NOT (rt0.c1)))AND(NULL)))OR(((rt0.c0)|(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((json_patch(rt0.c3, rt0.c3))AND(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c1)))AND(NULL)))OR(((rt0.c0)|(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((json_patch(rt0.c3, rt0.c3))AND(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c3 COLLATE RTRIM))) ORDER BY (((((NOT (rt0.c1)))AND(NULL)))OR(((rt0.c0)|(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((json_patch(rt0.c3, rt0.c3))AND(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c1)))AND(NULL)))OR(((rt0.c0)|(rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((json_patch(rt0.c3, rt0.c3))AND(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c3 COLLATE RTRIM))) ORDER BY (((((NOT (rt0.c1)))AND(NULL)))OR(((rt0.c0)|(rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST((((((((('-789620734')OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((((((('-789620734')OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((((((('-789620734')OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((((((('-789620734')OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((((((('-789620734')OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))==((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))==((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))==((vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2)||(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c2)||(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2)||(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c2)||(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT ((rt0.c2)||(rt0.c3))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, NULL, rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), 0.29658813466014144, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c2)*(rt0.c0)), rt0.c3, ((((rt0.c3)AND(rt0.c0)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, NULL, rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), 0.29658813466014144, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c2)*(rt0.c0)), rt0.c3, ((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, NULL, rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), 0.29658813466014144, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c2)*(rt0.c0)), rt0.c3, ((((rt0.c3)AND(rt0.c0)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, NULL, rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), 0.29658813466014144, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c2)*(rt0.c0)), rt0.c3, ((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0, NULL, rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), 0.29658813466014144, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c2)*(rt0.c0)), rt0.c3, ((((rt0.c3)AND(rt0.c0)))AND(rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c3 END AS REAL));
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))/((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))/((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))/((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))/((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))/((+ (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE NULL  WHEN rt0.c1 THEN rt0.c2 WHEN ((vt0.c0)|(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN NULLIF('', '1e500') THEN (NOT (rt0.c3)) END) ORDER BY ((((((rt0.c1)*('-2073669600')))AND(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 WHEN ((vt0.c0)|(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN NULLIF('', '1e500') THEN (NOT (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)*('-2073669600')))AND(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE NULL  WHEN rt0.c1 THEN rt0.c2 WHEN ((vt0.c0)|(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN NULLIF('', '1e500') THEN (NOT (rt0.c3)) END) ORDER BY ((((((rt0.c1)*('-2073669600')))AND(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 WHEN ((vt0.c0)|(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN NULLIF('', '1e500') THEN (NOT (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)*('-2073669600')))AND(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE NULL  WHEN rt0.c1 THEN rt0.c2 WHEN ((vt0.c0)|(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN NULLIF('', '1e500') THEN (NOT (rt0.c3)) END) ORDER BY ((((((rt0.c1)*('-2073669600')))AND(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('fo~2A*U')) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY (((x'')) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((((vt0.c0)+(vt0.c0))))) ASC, ((LOWER(DISTINCT vt0.c0)) IS TRUE) ASC, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('fo~2A*U')) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (((x'')) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((((vt0.c0)+(vt0.c0))))) ASC, ((LOWER(DISTINCT vt0.c0)) IS TRUE) ASC, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('fo~2A*U')) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY (((x'')) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((((vt0.c0)+(vt0.c0))))) ASC, ((LOWER(DISTINCT vt0.c0)) IS TRUE) ASC, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('fo~2A*U')) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (((x'')) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((((vt0.c0)+(vt0.c0))))) ASC, ((LOWER(DISTINCT vt0.c0)) IS TRUE) ASC, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('fo~2A*U')) AND ((vt0.c0 COLLATE BINARY)))) ORDER BY (((x'')) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((((vt0.c0)+(vt0.c0))))) ASC, ((LOWER(DISTINCT vt0.c0)) IS TRUE) ASC, (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)||(rt0.c1)))+(CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt0.c1)))+(CHANGES()))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)||(rt0.c1)))+(CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt0.c1)))+(CHANGES()))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)||(rt0.c1)))+(CHANGES())));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL));
SELECT * FROM vt0 WHERE (((vt0.c0)AND(UNICODE(vt0.c0)))) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(UNICODE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(UNICODE(vt0.c0)))) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(UNICODE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)AND(UNICODE(vt0.c0)))) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))/(CASE NULL  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN '-789620734' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))/(CASE NULL  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN '-789620734' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))/(CASE NULL  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN '-789620734' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))/(CASE NULL  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN '-789620734' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))/(CASE NULL  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN '-789620734' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)!=(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)!=(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)!=(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c3, rt0.c2))), (- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS INTEGER) IN ((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c3, rt0.c2))), (- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c3, rt0.c2))), (- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS INTEGER) IN ((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c3, rt0.c2))), (- (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c3, rt0.c2))), (- (rt0.c1))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.2591913261690336 THEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(NULL)))OR(rt0.c2)) END WHERE (((((((rt0.c0)>(vt0.c0)))AND(((rt0.c1)AND(rt0.c3)))))AND((((rt0.c3)) NOT BETWEEN ((x'')) AND (('')))))) ORDER BY CASE ((rt0.c1)IS(0.8003303545166927))  WHEN 'fo~2a*u' THEN 0.9381852860122583 END, CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, (0Xffffffffdde1af99 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)>(vt0.c0)))AND(((rt0.c1)AND(rt0.c3)))))AND((((rt0.c3)) NOT BETWEEN ((x'')) AND (('')))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.2591913261690336 THEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(NULL)))OR(rt0.c2)) END ORDER BY CASE ((rt0.c1)IS(0.8003303545166927))  WHEN 'fo~2a*u' THEN 0.9381852860122583 END, CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, (0Xffffffffdde1af99 IN ()) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.2591913261690336 THEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(NULL)))OR(rt0.c2)) END WHERE (((((((rt0.c0)>(vt0.c0)))AND(((rt0.c1)AND(rt0.c3)))))AND((((rt0.c3)) NOT BETWEEN ((x'')) AND (('')))))) ORDER BY CASE ((rt0.c1)IS(0.8003303545166927))  WHEN 'fo~2a*u' THEN 0.9381852860122583 END, CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, (0Xffffffffdde1af99 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)>(vt0.c0)))AND(((rt0.c1)AND(rt0.c3)))))AND((((rt0.c3)) NOT BETWEEN ((x'')) AND (('')))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.2591913261690336 THEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(NULL)))OR(rt0.c2)) END ORDER BY CASE ((rt0.c1)IS(0.8003303545166927))  WHEN 'fo~2a*u' THEN 0.9381852860122583 END, CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, (0Xffffffffdde1af99 IN ()) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.2591913261690336 THEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))AND(NULL)))OR(rt0.c2)) END WHERE (((((((rt0.c0)>(vt0.c0)))AND(((rt0.c1)AND(rt0.c3)))))AND((((rt0.c3)) NOT BETWEEN ((x'')) AND (('')))))) ORDER BY CASE ((rt0.c1)IS(0.8003303545166927))  WHEN 'fo~2a*u' THEN 0.9381852860122583 END, CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, (0Xffffffffdde1af99 IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), ((vt0.c0)&(rt0.c1))))>((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), ((vt0.c0)&(rt0.c1))))>((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), ((vt0.c0)&(rt0.c1))))>((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), ((vt0.c0)&(rt0.c1))))>((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (NULL IN ()), ((vt0.c0)&(rt0.c1))))>((vt0.c0 COLLATE BINARY, ((rt0.c2) NOT NULL), NULL))));
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c2)), ((vt0.c0)<<(vt0.c0)), rt0.c0)) AND ((1.39159871E9, ((rt0.c3) NOTNULL), IFNULL(DISTINCT rt0.c3, rt0.c1))))) ORDER BY UPPER(vt0.c0) COLLATE BINARY DESC, ((((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))) NOT BETWEEN (CASE WHEN '-1627040386' THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c2)), ((vt0.c0)<<(vt0.c0)), rt0.c0)) AND ((1.39159871E9, ((rt0.c3) NOTNULL), IFNULL(DISTINCT rt0.c3, rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(vt0.c0) COLLATE BINARY DESC, ((((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))) NOT BETWEEN (CASE WHEN '-1627040386' THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c2)), ((vt0.c0)<<(vt0.c0)), rt0.c0)) AND ((1.39159871E9, ((rt0.c3) NOTNULL), IFNULL(DISTINCT rt0.c3, rt0.c1))))) ORDER BY UPPER(vt0.c0) COLLATE BINARY DESC, ((((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))) NOT BETWEEN (CASE WHEN '-1627040386' THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c2)), ((vt0.c0)<<(vt0.c0)), rt0.c0)) AND ((1.39159871E9, ((rt0.c3) NOTNULL), IFNULL(DISTINCT rt0.c3, rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(vt0.c0) COLLATE BINARY DESC, ((((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))) NOT BETWEEN (CASE WHEN '-1627040386' THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c2)), ((vt0.c0)<<(vt0.c0)), rt0.c0)) AND ((1.39159871E9, ((rt0.c3) NOTNULL), IFNULL(DISTINCT rt0.c3, rt0.c1))))) ORDER BY UPPER(vt0.c0) COLLATE BINARY DESC, ((((((vt0.c0)AND(rt0.c3)))AND(rt0.c0))) NOT BETWEEN (CASE WHEN '-1627040386' THEN x'' WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((185284892)!=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((185284892)<>(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((185284892)!=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((185284892)<>(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((185284892)!=(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c1)>(vt0.c0)) WHEN json_patch(rt0.c0, rt0.c0) THEN CASE WHEN '-1180063820' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c3)<(rt0.c1)) THEN ((rt0.c3)>>('''*y/(f')) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.44604542650493983 THEN NULL END END) ORDER BY ((((LOWER(rt0.c2))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c1)>>(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c1)>(vt0.c0)) WHEN json_patch(rt0.c0, rt0.c0) THEN CASE WHEN '-1180063820' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c3)<(rt0.c1)) THEN ((rt0.c3)>>('''*y/(f')) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.44604542650493983 THEN NULL END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((LOWER(rt0.c2))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c1)>>(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c1)>(vt0.c0)) WHEN json_patch(rt0.c0, rt0.c0) THEN CASE WHEN '-1180063820' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c3)<(rt0.c1)) THEN ((rt0.c3)>>('''*y/(f')) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.44604542650493983 THEN NULL END END) ORDER BY ((((LOWER(rt0.c2))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c1)>>(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c1)>(vt0.c0)) WHEN json_patch(rt0.c0, rt0.c0) THEN CASE WHEN '-1180063820' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c3)<(rt0.c1)) THEN ((rt0.c3)>>('''*y/(f')) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.44604542650493983 THEN NULL END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((LOWER(rt0.c2))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c1)>>(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c1)>(vt0.c0)) WHEN json_patch(rt0.c0, rt0.c0) THEN CASE WHEN '-1180063820' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c3)<(rt0.c1)) THEN ((rt0.c3)>>('''*y/(f')) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN 0.44604542650493983 THEN NULL END END) ORDER BY ((((LOWER(rt0.c2))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c1)>>(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE ((LIKELY(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt0.c0) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((LIKELY(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt0.c0) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((LIKELY(rt0.c0) IN ()));
SELECT * FROM rt0, vt0 WHERE ('FO~2A*U');
SELECT SUM(count) FROM (SELECT (('FO~2A*U') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ('FO~2A*U');
SELECT SUM(count) FROM (SELECT (('FO~2A*U') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ('FO~2A*U');
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((TOTAL_CHANGES())) AND ((rt0.c3))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (x'e8c8' IN (rt0.c3, ((rt0.c0)IS(rt0.c0)))) WHERE ((+ (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (x'e8c8' IN (rt0.c3, ((rt0.c0)IS(rt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (x'e8c8' IN (rt0.c3, ((rt0.c0)IS(rt0.c0)))) WHERE ((+ (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (x'e8c8' IN (rt0.c3, ((rt0.c0)IS(rt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (x'e8c8' IN (rt0.c3, ((rt0.c0)IS(rt0.c0)))) WHERE ((+ (rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c3 THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN (- (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c3 THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN (- (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c3 THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN (- (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c3 THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN (- (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN rt0.c3 THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN (- (rt0.c3)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))>>((((rt0.c0))<>((rt0.c0)))))) ORDER BY 0X4a645eba588c2ec3  NULLS LAST, rt0.c3 ASC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))>>((((rt0.c0))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY 0X4a645eba588c2ec3  NULLS LAST, rt0.c3 ASC, rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))>>((((rt0.c0))<>((rt0.c0)))))) ORDER BY 0X4a645eba588c2ec3  NULLS LAST, rt0.c3 ASC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))>>((((rt0.c0))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY 0X4a645eba588c2ec3  NULLS LAST, rt0.c3 ASC, rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))>>((((rt0.c0))<>((rt0.c0)))))) ORDER BY 0X4a645eba588c2ec3  NULLS LAST, rt0.c3 ASC, rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c3)>>(rt0.c0)) ELSE (((('0.5664482512948504')OR(rt0.c2)))AND(rt0.c0)) END) ORDER BY ((((rt0.c0)+(rt0.c2)))LIKE('1866273017'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c3)>>(rt0.c0)) ELSE (((('0.5664482512948504')OR(rt0.c2)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)+(rt0.c2)))LIKE('1866273017'))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c3)>>(rt0.c0)) ELSE (((('0.5664482512948504')OR(rt0.c2)))AND(rt0.c0)) END) ORDER BY ((((rt0.c0)+(rt0.c2)))LIKE('1866273017'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c3)>>(rt0.c0)) ELSE (((('0.5664482512948504')OR(rt0.c2)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)+(rt0.c2)))LIKE('1866273017'))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c3)>>(rt0.c0)) ELSE (((('0.5664482512948504')OR(rt0.c2)))AND(rt0.c0)) END) ORDER BY ((((rt0.c0)+(rt0.c2)))LIKE('1866273017'))  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((0.45846647598928925)&(rt0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) ORDER BY (~ (IFNULL(DISTINCT rt0.c2, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.45846647598928925)&(rt0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (IFNULL(DISTINCT rt0.c2, rt0.c3))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((0.45846647598928925)&(rt0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) ORDER BY (~ (IFNULL(DISTINCT rt0.c2, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.45846647598928925)&(rt0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (IFNULL(DISTINCT rt0.c2, rt0.c3))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((0.45846647598928925)&(rt0.c0)))IS NOT(CAST(rt0.c1 AS REAL)))) ORDER BY (~ (IFNULL(DISTINCT rt0.c2, rt0.c3)));
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c1) IS TRUE)))) ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN (NOT (5.360513610920243E18)) WHEN (((rt0.c0, rt0.c1, rt0.c3))>=((rt0.c0, rt0.c3, rt0.c3))) THEN '-2003387241' WHEN rt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE vt0.c0 COLLATE BINARY END, CAST((((NULL, rt0.c1, vt0.c0))!=((rt0.c1, rt0.c1, rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN (NOT (5.360513610920243E18)) WHEN (((rt0.c0, rt0.c1, rt0.c3))>=((rt0.c0, rt0.c3, rt0.c3))) THEN '-2003387241' WHEN rt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE vt0.c0 COLLATE BINARY END, CAST((((NULL, rt0.c1, vt0.c0))!=((rt0.c1, rt0.c1, rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c1) IS TRUE)))) ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN (NOT (5.360513610920243E18)) WHEN (((rt0.c0, rt0.c1, rt0.c3))>=((rt0.c0, rt0.c3, rt0.c3))) THEN '-2003387241' WHEN rt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE vt0.c0 COLLATE BINARY END, CAST((((NULL, rt0.c1, vt0.c0))!=((rt0.c1, rt0.c1, rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN (NOT (5.360513610920243E18)) WHEN (((rt0.c0, rt0.c1, rt0.c3))>=((rt0.c0, rt0.c3, rt0.c3))) THEN '-2003387241' WHEN rt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE vt0.c0 COLLATE BINARY END, CAST((((NULL, rt0.c1, vt0.c0))!=((rt0.c1, rt0.c1, rt0.c1))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c1) IS TRUE)))) ORDER BY CASE ((NULL) IS TRUE)  WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN (NOT (5.360513610920243E18)) WHEN (((rt0.c0, rt0.c1, rt0.c3))>=((rt0.c0, rt0.c3, rt0.c3))) THEN '-2003387241' WHEN rt0.c0 THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) ELSE vt0.c0 COLLATE BINARY END, CAST((((NULL, rt0.c1, vt0.c0))!=((rt0.c1, rt0.c1, rt0.c1))) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (x''))) ORDER BY ((vt0.c0)<=(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((- (x''))) ORDER BY ((vt0.c0)<=(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((- (x''))) ORDER BY ((vt0.c0)<=(CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY CAST(CHANGES() AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CHANGES() AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY CAST(CHANGES() AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CHANGES() AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY CAST(CHANGES() AS INTEGER);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((UPPER(rt0.c3)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) WHERE (CASE WHEN ((rt0.c2)<(rt0.c1)) THEN json(rt0.c0) WHEN (NULL IN ()) THEN json_remove(rt0.c1, rt0.c0) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END ELSE (((rt0.c3, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((rt0.c2, vt0.c0, '1866273017'))) END) ORDER BY (((((((((NOT (rt0.c3)))AND((+ (rt0.c2)))))AND(((rt0.c2)AND(rt0.c1)))))AND(((((0.49087429221831425)AND(rt0.c0)))AND(rt0.c3)))))OR(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)<(rt0.c1)) THEN json(rt0.c0) WHEN (NULL IN ()) THEN json_remove(rt0.c1, rt0.c0) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END ELSE (((rt0.c3, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((rt0.c2, vt0.c0, '1866273017'))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((UPPER(rt0.c3)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) ORDER BY (((((((((NOT (rt0.c3)))AND((+ (rt0.c2)))))AND(((rt0.c2)AND(rt0.c1)))))AND(((((0.49087429221831425)AND(rt0.c0)))AND(rt0.c3)))))OR(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((UPPER(rt0.c3)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) WHERE (CASE WHEN ((rt0.c2)<(rt0.c1)) THEN json(rt0.c0) WHEN (NULL IN ()) THEN json_remove(rt0.c1, rt0.c0) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END ELSE (((rt0.c3, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((rt0.c2, vt0.c0, '1866273017'))) END) ORDER BY (((((((((NOT (rt0.c3)))AND((+ (rt0.c2)))))AND(((rt0.c2)AND(rt0.c1)))))AND(((((0.49087429221831425)AND(rt0.c0)))AND(rt0.c3)))))OR(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)<(rt0.c1)) THEN json(rt0.c0) WHEN (NULL IN ()) THEN json_remove(rt0.c1, rt0.c0) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END ELSE (((rt0.c3, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((rt0.c2, vt0.c0, '1866273017'))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((UPPER(rt0.c3)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) ORDER BY (((((((((NOT (rt0.c3)))AND((+ (rt0.c2)))))AND(((rt0.c2)AND(rt0.c1)))))AND(((((0.49087429221831425)AND(rt0.c0)))AND(rt0.c3)))))OR(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((UPPER(rt0.c3)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) WHERE (CASE WHEN ((rt0.c2)<(rt0.c1)) THEN json(rt0.c0) WHEN (NULL IN ()) THEN json_remove(rt0.c1, rt0.c0) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END ELSE (((rt0.c3, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, NULL, rt0.c0)) AND ((rt0.c2, vt0.c0, '1866273017'))) END) ORDER BY (((((((((NOT (rt0.c3)))AND((+ (rt0.c2)))))AND(((rt0.c2)AND(rt0.c1)))))AND(((((0.49087429221831425)AND(rt0.c0)))AND(rt0.c3)))))OR(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)>(load_extension(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(load_extension(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)>(load_extension(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>(load_extension(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)>(load_extension(rt0.c1))));
SELECT * FROM rt0 WHERE ((((((~ (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((~ (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((~ (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))OR(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))>=((((rt0.c2)>>(rt0.c3)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))>=((((rt0.c2)>>(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND (('')))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))>=((((rt0.c2)>>(rt0.c3)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((''))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))>=((((rt0.c2)>>(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND (('')))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))>=((((rt0.c2)>>(rt0.c3)))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((''))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((rt0.c2 IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (vt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID());
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((rt0.c2 IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (vt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID());
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((rt0.c2 IN (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOTNULL) WHERE (rt0.c0 COLLATE NOCASE) ORDER BY (+ ('1390096139'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOTNULL) ORDER BY (+ ('1390096139'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOTNULL) WHERE (rt0.c0 COLLATE NOCASE) ORDER BY (+ ('1390096139'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOTNULL) ORDER BY (+ ('1390096139'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE BINARY) NOTNULL) WHERE (rt0.c0 COLLATE NOCASE) ORDER BY (+ ('1390096139'))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((x'' IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c0))) NOTNULL)) ORDER BY (((((((((rt0.c2)OR(rt0.c1)))AND(x'')))AND(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, ((rt0.c1 COLLATE BINARY)>('-2003387241'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>>(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)OR(rt0.c1)))AND(x'')))AND(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, ((rt0.c1 COLLATE BINARY)>('-2003387241'))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c0))) NOTNULL)) ORDER BY (((((((((rt0.c2)OR(rt0.c1)))AND(x'')))AND(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, ((rt0.c1 COLLATE BINARY)>('-2003387241'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>>(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)OR(rt0.c1)))AND(x'')))AND(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, ((rt0.c1 COLLATE BINARY)>('-2003387241'))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c0))) NOTNULL)) ORDER BY (((((((((rt0.c2)OR(rt0.c1)))AND(x'')))AND(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, ((rt0.c1 COLLATE BINARY)>('-2003387241'))  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((json_array_length(NULL, vt0.c0))|(((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((json_array_length(NULL, vt0.c0))|(((vt0.c0)>>(vt0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((json_array_length(NULL, vt0.c0))|(((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((json_array_length(NULL, vt0.c0))|(((vt0.c0)>>(vt0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((json_array_length(NULL, vt0.c0))|(((vt0.c0)>>(vt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE x'' END)));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.05263911913700514) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(NULL)))AND(vt0.c0))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.05263911913700514) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(NULL)))AND(vt0.c0))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.05263911913700514) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(NULL)))AND(vt0.c0))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.05263911913700514) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(NULL)))AND(vt0.c0))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.05263911913700514) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(NULL)))AND(vt0.c0))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CHANGES()) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (json_type(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (json_type(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CHANGES()) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (json_type(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (json_type(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CHANGES()) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (json_type(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((((((((((((vt0.c0)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'48ae')))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'48ae')))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((((((((((((vt0.c0)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'48ae')))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'48ae')))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((((((((((((vt0.c0)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'48ae')))OR(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CAST(rt0.c2 AS BLOB)))>=(((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB)))>=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CAST(rt0.c2 AS BLOB)))>=(((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB)))>=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CAST(rt0.c2 AS BLOB)))>=(((rt0.c1 IN ())))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (- ((NOT (rt0.c1)))) WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ((NOT (rt0.c1)))) ORDER BY ((((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (- ((NOT (rt0.c1)))) WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- ((NOT (rt0.c1)))) ORDER BY ((((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (- ((NOT (rt0.c1)))) WHERE (((rt0.c1 COLLATE RTRIM) IS TRUE)) ORDER BY ((((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN ((~ (vt0.c0))) AND (CAST(x'ae4b' AS NUMERIC)))) ORDER BY (+ ((+ (vt0.c0)))) DESC  NULLS LAST, (((((NULL)OR(vt0.c0))))<=(((NOT (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((~ (vt0.c0))) AND (CAST(x'ae4b' AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c0)))) DESC  NULLS LAST, (((((NULL)OR(vt0.c0))))<=(((NOT (vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN ((~ (vt0.c0))) AND (CAST(x'ae4b' AS NUMERIC)))) ORDER BY (+ ((+ (vt0.c0)))) DESC  NULLS LAST, (((((NULL)OR(vt0.c0))))<=(((NOT (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((~ (vt0.c0))) AND (CAST(x'ae4b' AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c0)))) DESC  NULLS LAST, (((((NULL)OR(vt0.c0))))<=(((NOT (vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((NULL) BETWEEN ((~ (vt0.c0))) AND (CAST(x'ae4b' AS NUMERIC)))) ORDER BY (+ ((+ (vt0.c0)))) DESC  NULLS LAST, (((((NULL)OR(vt0.c0))))<=(((NOT (vt0.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (LIKE(CAST(rt0.c3 AS INTEGER), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)), 'U')) ORDER BY ((vt0.c0)>=((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(rt0.c3 AS INTEGER), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)), 'U')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)>=((NOT (rt0.c0))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (LIKE(CAST(rt0.c3 AS INTEGER), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)), 'U')) ORDER BY ((vt0.c0)>=((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(rt0.c3 AS INTEGER), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)), 'U')) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)>=((NOT (rt0.c0))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (LIKE(CAST(rt0.c3 AS INTEGER), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)), 'U')) ORDER BY ((vt0.c0)>=((NOT (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY (NOT (((rt0.c0)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c0)<<(rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY (NOT (((rt0.c0)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c0)<<(rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS TEXT)) ORDER BY (NOT (((rt0.c0)<<(rt0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(0.47483564829047187 AS REAL) COLLATE RTRIM WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(vt0.c0)), (('-1785116413') NOT NULL), (rt0.c0 IN ()))) AND ((rt0.c3 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c2 THEN 'Infinity' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, (- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(vt0.c0)), (('-1785116413') NOT NULL), (rt0.c0 IN ()))) AND ((rt0.c3 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c2 THEN 'Infinity' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, (- (rt0.c2)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(0.47483564829047187 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(0.47483564829047187 AS REAL) COLLATE RTRIM WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(vt0.c0)), (('-1785116413') NOT NULL), (rt0.c0 IN ()))) AND ((rt0.c3 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c2 THEN 'Infinity' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, (- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(vt0.c0)), (('-1785116413') NOT NULL), (rt0.c0 IN ()))) AND ((rt0.c3 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c2 THEN 'Infinity' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, (- (rt0.c2)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(0.47483564829047187 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(0.47483564829047187 AS REAL) COLLATE RTRIM WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0)<=(vt0.c0)), (('-1785116413') NOT NULL), (rt0.c0 IN ()))) AND ((rt0.c3 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c2 THEN 'Infinity' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, (- (rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((vt0.c0)%(rt0.c0))  WHEN (0.13035977780661956 IN (NULL)) THEN UNICODE(rt0.c0) ELSE ((rt0.c0) NOTNULL) END) ORDER BY ((((((rt0.c2) NOT NULL))AND((vt0.c0 IN (rt0.c1)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(rt0.c0))  WHEN (0.13035977780661956 IN (NULL)) THEN UNICODE(rt0.c0) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c2) NOT NULL))AND((vt0.c0 IN (rt0.c1)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((vt0.c0)%(rt0.c0))  WHEN (0.13035977780661956 IN (NULL)) THEN UNICODE(rt0.c0) ELSE ((rt0.c0) NOTNULL) END) ORDER BY ((((((rt0.c2) NOT NULL))AND((vt0.c0 IN (rt0.c1)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(rt0.c0))  WHEN (0.13035977780661956 IN (NULL)) THEN UNICODE(rt0.c0) ELSE ((rt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c2) NOT NULL))AND((vt0.c0 IN (rt0.c1)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE ((vt0.c0)%(rt0.c0))  WHEN (0.13035977780661956 IN (NULL)) THEN UNICODE(rt0.c0) ELSE ((rt0.c0) NOTNULL) END) ORDER BY ((((((rt0.c2) NOT NULL))AND((vt0.c0 IN (rt0.c1)))))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(DISTINCT CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, CAST(rt0.c2 AS REAL))) ORDER BY ((((rt0.c3)>(rt0.c2))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (((rt0.c3)+(rt0.c3)))) ASC, ((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)>(rt0.c2))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (((rt0.c3)+(rt0.c3)))) ASC, ((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(DISTINCT CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, CAST(rt0.c2 AS REAL))) ORDER BY ((((rt0.c3)>(rt0.c2))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (((rt0.c3)+(rt0.c3)))) ASC, ((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)>(rt0.c2))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (((rt0.c3)+(rt0.c3)))) ASC, ((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(DISTINCT CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, CAST(rt0.c2 AS REAL))) ORDER BY ((((rt0.c3)>(rt0.c2))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c1))) AND (((rt0.c3)+(rt0.c3)))) ASC, ((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))LIKE((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))LIKE((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))LIKE((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))LIKE((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))LIKE((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ('-40361514');
SELECT SUM(count) FROM (SELECT ALL (('-40361514') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('-40361514');
SELECT SUM(count) FROM (SELECT ALL (('-40361514') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('-40361514');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('-1566716028'))), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS INTEGER), LOWER(NULL), ((-1.566716028E9)OR(rt0.c2))))>(((rt0.c2 IN ()), LIKE(rt0.c0, rt0.c1), ((rt0.c1)/(rt0.c0)), '1107778925', vt0.c0 COLLATE RTRIM))) WHERE (TYPEOF((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, x'')) AND ((rt0.c3, '䌑k', rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, x'')) AND ((rt0.c3, '䌑k', rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('-1566716028'))), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS INTEGER), LOWER(NULL), ((-1.566716028E9)OR(rt0.c2))))>(((rt0.c2 IN ()), LIKE(rt0.c0, rt0.c1), ((rt0.c1)/(rt0.c0)), '1107778925', vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('-1566716028'))), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS INTEGER), LOWER(NULL), ((-1.566716028E9)OR(rt0.c2))))>(((rt0.c2 IN ()), LIKE(rt0.c0, rt0.c1), ((rt0.c1)/(rt0.c0)), '1107778925', vt0.c0 COLLATE RTRIM))) WHERE (TYPEOF((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, x'')) AND ((rt0.c3, '䌑k', rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, x'')) AND ((rt0.c3, '䌑k', rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('-1566716028'))), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS INTEGER), LOWER(NULL), ((-1.566716028E9)OR(rt0.c2))))>(((rt0.c2 IN ()), LIKE(rt0.c0, rt0.c1), ((rt0.c1)/(rt0.c0)), '1107778925', vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('-1566716028'))), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS INTEGER), LOWER(NULL), ((-1.566716028E9)OR(rt0.c2))))>(((rt0.c2 IN ()), LIKE(rt0.c0, rt0.c1), ((rt0.c1)/(rt0.c0)), '1107778925', vt0.c0 COLLATE RTRIM))) WHERE (TYPEOF((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, x'')) AND ((rt0.c3, '䌑k', rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))*(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (((rt0.c1)=(rt0.c2))))) ORDER BY CAST(((rt0.c3)AND(rt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (((rt0.c1)==(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3)AND(rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (((rt0.c1)=(rt0.c2))))) ORDER BY CAST(((rt0.c3)AND(rt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (((rt0.c1)==(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3)AND(rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (((rt0.c1)=(rt0.c2))))) ORDER BY CAST(((rt0.c3)AND(rt0.c1)) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)-(rt0.c3)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END END WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)-(rt0.c3)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)-(rt0.c3)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END END WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)-(rt0.c3)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt0.c1) ISNULL)  WHEN ((rt0.c2)-(rt0.c3)) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END END WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c1)%(rt0.c3)))) WHERE ((NOT (rt0.c2))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))GLOB(CAST(rt0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c1)%(rt0.c3)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))GLOB(CAST(rt0.c1 AS BLOB))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c1)%(rt0.c3)))) WHERE ((NOT (rt0.c2))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))GLOB(CAST(rt0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c1)%(rt0.c3)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))GLOB(CAST(rt0.c1 AS BLOB))) DESC);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (~ (((rt0.c1)%(rt0.c3)))) WHERE ((NOT (rt0.c2))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))GLOB(CAST(rt0.c1 AS BLOB))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY CAST(((NULL)IS NOT(rt0.c3)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((NULL)IS NOT(rt0.c3)) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY CAST(((NULL)IS NOT(rt0.c3)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((NULL)IS NOT(rt0.c3)) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY CAST(((NULL)IS NOT(rt0.c3)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((- (1.612715343E9))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<>(((vt0.c0)>(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (1.612715343E9))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))!=(((vt0.c0)>(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- (1.612715343E9))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<>(((vt0.c0)>(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (1.612715343E9))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))!=(((vt0.c0)>(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- (1.612715343E9))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<>(((vt0.c0)>(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((1.986860851E9)IS(vt0.c0)))OR(CASE x'224e'  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((1.986860851E9)IS(vt0.c0)))OR(CASE x'224e'  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((((((1.986860851E9)IS(vt0.c0)))OR(CASE x'224e'  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((1.986860851E9)IS(vt0.c0)))OR(CASE x'224e'  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (((((((1.986860851E9)IS(vt0.c0)))OR(CASE x'224e'  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) ORDER BY vt0.c0;
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.6584931526885489))) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.6584931526885489))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.6584931526885489))) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.6584931526885489))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0.6584931526885489))) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)|(rt0.c3)))!=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY CASE WHEN (rt0.c1 IN (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN CAST(rt0.c1 AS INTEGER) THEN ((((0.7877633478903843)OR(rt0.c3)))OR(rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END THEN CAST(rt0.c0 AS INTEGER) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c3)))<>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN CAST(rt0.c1 AS INTEGER) THEN ((((0.7877633478903843)OR(rt0.c3)))OR(rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END THEN CAST(rt0.c0 AS INTEGER) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)|(rt0.c3)))!=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY CASE WHEN (rt0.c1 IN (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN CAST(rt0.c1 AS INTEGER) THEN ((((0.7877633478903843)OR(rt0.c3)))OR(rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END THEN CAST(rt0.c0 AS INTEGER) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c3)))<>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN CAST(rt0.c1 AS INTEGER) THEN ((((0.7877633478903843)OR(rt0.c3)))OR(rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END THEN CAST(rt0.c0 AS INTEGER) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)|(rt0.c3)))!=(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY CASE WHEN (rt0.c1 IN (rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c2 END WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN CAST(rt0.c1 AS INTEGER) THEN ((((0.7877633478903843)OR(rt0.c3)))OR(rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END THEN CAST(rt0.c0 AS INTEGER) END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT NULL)) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END, (NOT ('0.9509153731191063')), rt0.c3 COLLATE RTRIM))!=((0.402741791646152, (rt0.c3 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END, (NOT ('0.9509153731191063')), rt0.c3 COLLATE RTRIM))!=((0.402741791646152, (rt0.c3 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT NULL)) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END, (NOT ('0.9509153731191063')), rt0.c3 COLLATE RTRIM))!=((0.402741791646152, (rt0.c3 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END, (NOT ('0.9509153731191063')), rt0.c3 COLLATE RTRIM))!=((0.402741791646152, (rt0.c3 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT NULL)) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END, (NOT ('0.9509153731191063')), rt0.c3 COLLATE RTRIM))!=((0.402741791646152, (rt0.c3 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)OR(rt0.c2)))<>((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c2)))!=((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)OR(rt0.c2)))<>((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c2)))!=((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)OR(rt0.c2)))<>((~ (rt0.c1)))));
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)<=(rt0.c3))) NOT BETWEEN (((rt0.c2)OR(rt0.c2))) AND (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)<=(rt0.c3))) NOT BETWEEN (((rt0.c2)OR(rt0.c2))) AND (rt0.c3))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)<=(rt0.c3))) NOT BETWEEN (((rt0.c2)OR(rt0.c2))) AND (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)<=(rt0.c3))) NOT BETWEEN (((rt0.c2)OR(rt0.c2))) AND (rt0.c3))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)<=(rt0.c3))) NOT BETWEEN (((rt0.c2)OR(rt0.c2))) AND (rt0.c3))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(NULL, (- (vt0.c0)))) ORDER BY ((('2058512561' COLLATE RTRIM))<((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(NULL, (- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((('2058512561' COLLATE RTRIM))<((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(NULL, (- (vt0.c0)))) ORDER BY ((('2058512561' COLLATE RTRIM))<((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(NULL, (- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((('2058512561' COLLATE RTRIM))<((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(NULL, (- (vt0.c0)))) ORDER BY ((('2058512561' COLLATE RTRIM))<((CAST(vt0.c0 AS NUMERIC))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9413152777937884) NOT NULL)) ORDER BY (((rt0.c1, rt0.c3, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((0X35b1f400 COLLATE NOCASE, (rt0.c1 IN (rt0.c3, rt0.c3)), (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c0))), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (0.20484792404476337)), ((rt0.c0)&(rt0.c2)), TYPEOF(rt0.c1), ABS(DISTINCT rt0.c2), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (1.17498124E8))))) DESC, (('-1180063820') IS FALSE) COLLATE BINARY, ((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9413152777937884) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((0X35b1f400 COLLATE NOCASE, (rt0.c1 IN (rt0.c3, rt0.c3)), (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c0))), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (0.20484792404476337)), ((rt0.c0)&(rt0.c2)), TYPEOF(rt0.c1), ABS(DISTINCT rt0.c2), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (1.17498124E8))))) DESC, (('-1180063820') IS FALSE) COLLATE BINARY, ((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9413152777937884) NOT NULL)) ORDER BY (((rt0.c1, rt0.c3, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((0X35b1f400 COLLATE NOCASE, (rt0.c1 IN (rt0.c3, rt0.c3)), (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c0))), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (0.20484792404476337)), ((rt0.c0)&(rt0.c2)), TYPEOF(rt0.c1), ABS(DISTINCT rt0.c2), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (1.17498124E8))))) DESC, (('-1180063820') IS FALSE) COLLATE BINARY, ((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9413152777937884) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((0X35b1f400 COLLATE NOCASE, (rt0.c1 IN (rt0.c3, rt0.c3)), (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c0))), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (0.20484792404476337)), ((rt0.c0)&(rt0.c2)), TYPEOF(rt0.c1), ABS(DISTINCT rt0.c2), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (1.17498124E8))))) DESC, (('-1180063820') IS FALSE) COLLATE BINARY, ((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9413152777937884) NOT NULL)) ORDER BY (((rt0.c1, rt0.c3, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((0X35b1f400 COLLATE NOCASE, (rt0.c1 IN (rt0.c3, rt0.c3)), (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c0))), rt0.c2 COLLATE NOCASE, rt0.c0)) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (0.20484792404476337)), ((rt0.c0)&(rt0.c2)), TYPEOF(rt0.c1), ABS(DISTINCT rt0.c2), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (1.17498124E8))))) DESC, (('-1180063820') IS FALSE) COLLATE BINARY, ((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c0))) IN ()) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c2)))>=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c1)>=(rt0.c0)) AS TEXT), ((CAST(rt0.c1 AS REAL))GLOB((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c2)))>=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)>=(rt0.c0)) AS TEXT), ((CAST(rt0.c1 AS REAL))GLOB((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c2)))>=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c1)>=(rt0.c0)) AS TEXT), ((CAST(rt0.c1 AS REAL))GLOB((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c2)))>=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)>=(rt0.c0)) AS TEXT), ((CAST(rt0.c1 AS REAL))GLOB((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c2)))>=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY CAST(((rt0.c1)>=(rt0.c0)) AS TEXT), ((CAST(rt0.c1 AS REAL))GLOB((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-2045078300') NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('-2045078300') NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-2045078300') NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('-2045078300') NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-2045078300') NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL)))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3) NOT NULL))>(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))) WHERE (((((rt0.c3) NOTNULL)) BETWEEN ('i&NT') AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) BETWEEN ('i&NT') AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3) NOT NULL))>(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3) NOT NULL))>(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))) WHERE (((((rt0.c3) NOTNULL)) BETWEEN ('i&NT') AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOTNULL)) BETWEEN ('i&NT') AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3) NOT NULL))>(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c3) NOT NULL))>(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))) WHERE (((((rt0.c3) NOTNULL)) BETWEEN ('i&NT') AND ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3))) NOT NULL)) ORDER BY CAST((((rt0.c3)) BETWEEN ((x'1fc4')) AND ((rt0.c1))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c3)) BETWEEN ((x'1fc4')) AND ((rt0.c1))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3))) NOT NULL)) ORDER BY CAST((((rt0.c3)) BETWEEN ((x'1fc4')) AND ((rt0.c1))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c3)) BETWEEN ((x'1fc4')) AND ((rt0.c1))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3))) NOT NULL)) ORDER BY CAST((((rt0.c3)) BETWEEN ((x'1fc4')) AND ((rt0.c1))) AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (- (((rt0.c2) NOTNULL))), (((rt0.c1 IN ()))IS NOT(((rt0.c1)<(rt0.c0)))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) AND (COALESCE(rt0.c2, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c2) NOTNULL))), (((rt0.c1 IN ()))IS NOT(((rt0.c1)<(rt0.c0)))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) AND (COALESCE(rt0.c2, rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (- (((rt0.c2) NOTNULL))), (((rt0.c1 IN ()))IS NOT(((rt0.c1)<(rt0.c0)))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) AND (COALESCE(rt0.c2, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c2) NOTNULL))), (((rt0.c1 IN ()))IS NOT(((rt0.c1)<(rt0.c0)))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) AND (COALESCE(rt0.c2, rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (- (((rt0.c2) NOTNULL))), (((rt0.c1 IN ()))IS NOT(((rt0.c1)<(rt0.c0)))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END) AND (COALESCE(rt0.c2, rt0.c0))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c0, rt0.c3, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c0, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c0, rt0.c3, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c0, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))AND((((rt0.c1, rt0.c2, rt0.c2))<((rt0.c0, rt0.c3, rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<>(vt0.c0))))!=((((vt0.c0) IS TRUE))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.5117953163104513)))AND(vt0.c0)))<(1764288596)) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM, ((x'')<(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN 0.008782963456419934 THEN vt0.c0 END))) DESC  NULLS FIRST, (((((vt0.c0))<((vt0.c0))))OR(((vt0.c0)IS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<>(vt0.c0))))<>((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.5117953163104513)))AND(vt0.c0)))<(1764288596)) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM, ((x'')<(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN 0.008782963456419934 THEN vt0.c0 END))) DESC  NULLS FIRST, (((((vt0.c0))<((vt0.c0))))OR(((vt0.c0)IS(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<>(vt0.c0))))!=((((vt0.c0) IS TRUE))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.5117953163104513)))AND(vt0.c0)))<(1764288596)) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM, ((x'')<(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN 0.008782963456419934 THEN vt0.c0 END))) DESC  NULLS FIRST, (((((vt0.c0))<((vt0.c0))))OR(((vt0.c0)IS(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<>(vt0.c0))))<>((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.5117953163104513)))AND(vt0.c0)))<(1764288596)) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM, ((x'')<(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN 0.008782963456419934 THEN vt0.c0 END))) DESC  NULLS FIRST, (((((vt0.c0))<((vt0.c0))))OR(((vt0.c0)IS(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<>(vt0.c0))))!=((((vt0.c0) IS TRUE))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.5117953163104513)))AND(vt0.c0)))<(1764288596)) DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM, ((x'')<(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) IS FALSE), CASE vt0.c0  WHEN 0.008782963456419934 THEN vt0.c0 END))) DESC  NULLS FIRST, (((((vt0.c0))<((vt0.c0))))OR(((vt0.c0)IS(vt0.c0)))) ASC;
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN 0.22503920888692108 WHEN NULL THEN ((rt0.c2)LIKE(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))AND(rt0.c0)) ELSE (rt0.c1 IN (rt0.c0, rt0.c0)) END) ORDER BY ((rt0.c3 IN ()) IN ()) ASC, (((NOT (rt0.c1)))-(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN 0.22503920888692108 WHEN NULL THEN ((rt0.c2)LIKE(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))AND(rt0.c0)) ELSE (rt0.c1 IN (rt0.c0, rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 IN ()) IN ()) ASC, (((NOT (rt0.c1)))-(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN 0.22503920888692108 WHEN NULL THEN ((rt0.c2)LIKE(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))AND(rt0.c0)) ELSE (rt0.c1 IN (rt0.c0, rt0.c0)) END) ORDER BY ((rt0.c3 IN ()) IN ()) ASC, (((NOT (rt0.c1)))-(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN 0.22503920888692108 WHEN NULL THEN ((rt0.c2)LIKE(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))AND(rt0.c0)) ELSE (rt0.c1 IN (rt0.c0, rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 IN ()) IN ()) ASC, (((NOT (rt0.c1)))-(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (CASE rt0.c0  WHEN rt0.c1 COLLATE RTRIM THEN 0.22503920888692108 WHEN NULL THEN ((rt0.c2)LIKE(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((((((((NULL)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))AND(rt0.c0)) ELSE (rt0.c1 IN (rt0.c0, rt0.c0)) END) ORDER BY ((rt0.c3 IN ()) IN ()) ASC, (((NOT (rt0.c1)))-(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)OR(vt0.c0)))AND(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(vt0.c0)))AND(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)OR(vt0.c0)))AND(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(vt0.c0)))AND(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)OR(vt0.c0)))AND(rt0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c3)OR('sZV}OnO')))OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE x'' END WHEN ((vt0.c0)AND(rt0.c3)) THEN rt0.c1 COLLATE RTRIM WHEN -1730822287 THEN ((0.7757755945813095) BETWEEN (vt0.c0) AND (rt0.c0)) END WHERE (CASE rt0.c2  WHEN (NOT (rt0.c3)) THEN '-1566716028' WHEN 5.360513610920243E18 THEN (~ (0X7eb3487e)) WHEN (rt0.c2 IN ()) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN (NOT (rt0.c3)) THEN '-1566716028' WHEN 5.360513610920243E18 THEN (~ (0X7eb3487e)) WHEN (rt0.c2 IN ()) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c3)OR('sZV}OnO')))OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE x'' END WHEN ((vt0.c0)AND(rt0.c3)) THEN rt0.c1 COLLATE RTRIM WHEN -1730822287 THEN ((0.7757755945813095) BETWEEN (vt0.c0) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c3)OR('sZV}OnO')))OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE x'' END WHEN ((vt0.c0)AND(rt0.c3)) THEN rt0.c1 COLLATE RTRIM WHEN -1730822287 THEN ((0.7757755945813095) BETWEEN (vt0.c0) AND (rt0.c0)) END WHERE (CASE rt0.c2  WHEN (NOT (rt0.c3)) THEN '-1566716028' WHEN 5.360513610920243E18 THEN (~ (0X7eb3487e)) WHEN (rt0.c2 IN ()) THEN (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN (NOT (rt0.c3)) THEN '-1566716028' WHEN 5.360513610920243E18 THEN (~ (0X7eb3487e)) WHEN (rt0.c2 IN ()) THEN (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c3)OR('sZV}OnO')))OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE x'' END WHEN ((vt0.c0)AND(rt0.c3)) THEN rt0.c1 COLLATE RTRIM WHEN -1730822287 THEN ((0.7757755945813095) BETWEEN (vt0.c0) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((((((((rt0.c3)OR('sZV}OnO')))OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE x'' END WHEN ((vt0.c0)AND(rt0.c3)) THEN rt0.c1 COLLATE RTRIM WHEN -1730822287 THEN ((0.7757755945813095) BETWEEN (vt0.c0) AND (rt0.c0)) END WHERE (CASE rt0.c2  WHEN (NOT (rt0.c3)) THEN '-1566716028' WHEN 5.360513610920243E18 THEN (~ (0X7eb3487e)) WHEN (rt0.c2 IN ()) THEN (+ (rt0.c2)) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS TEXT) WHERE ('-40361514');
SELECT SUM(count) FROM (SELECT ALL (('-40361514') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS TEXT));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS TEXT) WHERE ('-40361514');
SELECT SUM(count) FROM (SELECT ALL (('-40361514') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS TEXT));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS TEXT) WHERE ('-40361514');
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((((vt0.c0))=((vt0.c0))))IS NOT(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((((vt0.c0))==((vt0.c0))))IS NOT(vt0.c0)) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((((vt0.c0))=((vt0.c0))))IS NOT(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((((vt0.c0))==((vt0.c0))))IS NOT(vt0.c0)) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) ISNULL))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((((vt0.c0))=((vt0.c0))))IS NOT(vt0.c0)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))+(NULL))) ORDER BY (+ (CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))+(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))+(NULL))) ORDER BY (+ (CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))+(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))+(NULL))) ORDER BY (+ (CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c3))!=((rt0.c1))))AND(rt0.c2)))AND(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3))<>((rt0.c1))))AND(rt0.c2)))AND(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c3))!=((rt0.c1))))AND(rt0.c2)))AND(((rt0.c1)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3))<>((rt0.c1))))AND(rt0.c2)))AND(((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c3))!=((rt0.c1))))AND(rt0.c2)))AND(((rt0.c1)AND(rt0.c2)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt0.c3)))>(CAST(rt0.c0 AS BLOB))) WHERE ((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt0.c3)))>(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt0.c3)))>(CAST(rt0.c0 AS BLOB))) WHERE ((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt0.c3)))>(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) BETWEEN (NULL) AND (rt0.c3)))>(CAST(rt0.c0 AS BLOB))) WHERE ((((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))/((((rt0.c2, rt0.c3, rt0.c1))=((rt0.c1, rt0.c0, rt0.c3)))))) ORDER BY ((((~ (rt0.c1)), ((rt0.c3)%(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))<>((((rt0.c0)||(rt0.c1)), (- (rt0.c1)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))/((((rt0.c2, rt0.c3, rt0.c1))==((rt0.c1, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c1)), ((rt0.c3)%(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))!=((((rt0.c0)||(rt0.c1)), (- (rt0.c1)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))/((((rt0.c2, rt0.c3, rt0.c1))=((rt0.c1, rt0.c0, rt0.c3)))))) ORDER BY ((((~ (rt0.c1)), ((rt0.c3)%(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))<>((((rt0.c0)||(rt0.c1)), (- (rt0.c1)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))/((((rt0.c2, rt0.c3, rt0.c1))==((rt0.c1, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c1)), ((rt0.c3)%(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))!=((((rt0.c0)||(rt0.c1)), (- (rt0.c1)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))/((((rt0.c2, rt0.c3, rt0.c1))=((rt0.c1, rt0.c0, rt0.c3)))))) ORDER BY ((((~ (rt0.c1)), ((rt0.c3)%(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))<>((((rt0.c0)||(rt0.c1)), (- (rt0.c1)), CAST(rt0.c0 AS BLOB)))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(ABS(rt0.c2) AS INTEGER)) ORDER BY rt0.c3, UNLIKELY(DISTINCT ((rt0.c3)-(rt0.c3))) DESC, (IFNULL(rt0.c2, rt0.c3) IN ('\rl+n'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3, UNLIKELY(DISTINCT ((rt0.c3)-(rt0.c3))) DESC, (IFNULL(rt0.c2, rt0.c3) IN ('\rl+n'))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(ABS(rt0.c2) AS INTEGER)) ORDER BY rt0.c3, UNLIKELY(DISTINCT ((rt0.c3)-(rt0.c3))) DESC, (IFNULL(rt0.c2, rt0.c3) IN ('\rl+n'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3, UNLIKELY(DISTINCT ((rt0.c3)-(rt0.c3))) DESC, (IFNULL(rt0.c2, rt0.c3) IN ('\rl+n'))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(ABS(rt0.c2) AS INTEGER)) ORDER BY rt0.c3, UNLIKELY(DISTINCT ((rt0.c3)-(rt0.c3))) DESC, (IFNULL(rt0.c2, rt0.c3) IN ('\rl+n'))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (((((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1)))AND((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1)))AND((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (((((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1)))AND((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1)))AND((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)IS NOT((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (((((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))AND(rt0.c1)))AND((+ (rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN '2058512561' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN '2058512561' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN '2058512561' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN '2058512561' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN '2058512561' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (((DATE(0.8161603148827815, rt0.c2, rt0.c3)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(0.8161603148827815, rt0.c2, rt0.c3)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((DATE(0.8161603148827815, rt0.c2, rt0.c3)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((DATE(0.8161603148827815, rt0.c2, rt0.c3)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((DATE(0.8161603148827815, rt0.c2, rt0.c3)) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((+ (rt0.c3)))AND(((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))))AND((rt0.c0 IN (rt0.c1, rt0.c0, rt0.c0)))))AND(NULLIF(DISTINCT 0.7704954573499714, rt0.c2))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND((+ (rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))) ORDER BY (((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), rt0.c1))<>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((0.6584931526885489)/(rt0.c3)), rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((+ (rt0.c3)))AND(((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))))AND((rt0.c0 IN (rt0.c1, rt0.c0, rt0.c0)))))AND(NULLIF(DISTINCT 0.7704954573499714, rt0.c2))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND((+ (rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), rt0.c1))<>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((0.6584931526885489)/(rt0.c3)), rt0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((+ (rt0.c3)))AND(((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))))AND((rt0.c0 IN (rt0.c1, rt0.c0, rt0.c0)))))AND(NULLIF(DISTINCT 0.7704954573499714, rt0.c2))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND((+ (rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))) ORDER BY (((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), rt0.c1))<>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((0.6584931526885489)/(rt0.c3)), rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((+ (rt0.c3)))AND(((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))))AND((rt0.c0 IN (rt0.c1, rt0.c0, rt0.c0)))))AND(NULLIF(DISTINCT 0.7704954573499714, rt0.c2))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND((+ (rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), rt0.c1))<>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((0.6584931526885489)/(rt0.c3)), rt0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((((((+ (rt0.c3)))AND(((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))))AND((rt0.c0 IN (rt0.c1, rt0.c0, rt0.c0)))))AND(NULLIF(DISTINCT 0.7704954573499714, rt0.c2))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)))AND((+ (rt0.c2)))))OR(CAST(rt0.c0 AS TEXT)))) ORDER BY (((((rt0.c0) IS FALSE), CAST(rt0.c1 AS TEXT), rt0.c1))<>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)), ((0.6584931526885489)/(rt0.c3)), rt0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((- (TRIM(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'70a332d5'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'70a332d5'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (TRIM(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'70a332d5'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'70a332d5'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (TRIM(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'70a332d5'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)==(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)==(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((9.64544993E8, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.09151678648479222))))OR(json_type(vt0.c0))))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((9.64544993E8, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.09151678648479222))))OR(json_type(vt0.c0))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((9.64544993E8, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.09151678648479222))))OR(json_type(vt0.c0))))AND((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((9.64544993E8, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.09151678648479222))))OR(json_type(vt0.c0))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((9.64544993E8, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.09151678648479222))))OR(json_type(vt0.c0))))AND((~ (vt0.c0)))));
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN (rt0.c2, rt0.c2)))OR(((rt0.c0) NOT NULL))))OR('')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN (rt0.c2, rt0.c2)))OR(((rt0.c0) NOT NULL))))OR(''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN (rt0.c2, rt0.c2)))OR(((rt0.c0) NOT NULL))))OR('')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN (rt0.c2, rt0.c2)))OR(((rt0.c0) NOT NULL))))OR(''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN (rt0.c2, rt0.c2)))OR(((rt0.c0) NOT NULL))))OR('')));
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE (((((NULLIF(DISTINCT 0.28412219952193063, rt0.c1))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(DISTINCT 0.28412219952193063, rt0.c1))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((NULLIF(DISTINCT 0.28412219952193063, rt0.c1))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(DISTINCT 0.28412219952193063, rt0.c1))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((NULLIF(DISTINCT 0.28412219952193063, rt0.c1))OR(((rt0.c1)||(rt0.c1)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, 0.7671856395976698, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, 0.7671856395976698, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, 0.7671856395976698, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, 0.7671856395976698, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, 0.7671856395976698, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((((rt0.c3))==((-2007718923)))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c1)) AND (((rt0.c2)>(rt0.c0))))) ORDER BY (((('0.48010814279243585')>>(rt0.c2))) BETWEEN (x'72ae') AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))==((-2007718923)))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c1)) AND (((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((('0.48010814279243585')>>(rt0.c2))) BETWEEN (x'72ae') AND (x'')) DESC);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((((rt0.c3))==((-2007718923)))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c1)) AND (((rt0.c2)>(rt0.c0))))) ORDER BY (((('0.48010814279243585')>>(rt0.c2))) BETWEEN (x'72ae') AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))==((-2007718923)))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c1)) AND (((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((('0.48010814279243585')>>(rt0.c2))) BETWEEN (x'72ae') AND (x'')) DESC);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((((rt0.c3))==((-2007718923)))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c1)) AND (((rt0.c2)>(rt0.c0))))) ORDER BY (((('0.48010814279243585')>>(rt0.c2))) BETWEEN (x'72ae') AND (x'')) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), rt0.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) ORDER BY ((CAST(rt0.c0 AS REAL))LIKE(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS REAL))LIKE(NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) ORDER BY ((CAST(rt0.c0 AS REAL))LIKE(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c0 AS REAL))LIKE(NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)<=(rt0.c1)) IN ())) ORDER BY ((CAST(rt0.c0 AS REAL))LIKE(NULL)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(CAST(vt0.c0 AS REAL)))) ORDER BY ((((x'f0f9')OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'f0f9')OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(CAST(vt0.c0 AS REAL)))) ORDER BY ((((x'f0f9')OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'f0f9')OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(CAST(vt0.c0 AS REAL)))) ORDER BY ((((x'f0f9')OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NULL) IS FALSE);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c2))))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c2))))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c2))))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c2))))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(UNLIKELY(rt0.c2))))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0))>=((rt0.c2)))))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY x'' ASC, (- ((('?)&mRB') BETWEEN (rt0.c1) AND (rt0.c2)))), CAST(((rt0.c2) ISNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0))>=((rt0.c2)))))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC, (- ((('?)&mRB') BETWEEN (rt0.c1) AND (rt0.c2)))), CAST(((rt0.c2) ISNULL) AS BLOB) ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0))>=((rt0.c2)))))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY x'' ASC, (- ((('?)&mRB') BETWEEN (rt0.c1) AND (rt0.c2)))), CAST(((rt0.c2) ISNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0))>=((rt0.c2)))))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC, (- ((('?)&mRB') BETWEEN (rt0.c1) AND (rt0.c2)))), CAST(((rt0.c2) ISNULL) AS BLOB) ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0))>=((rt0.c2)))))<=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) ORDER BY x'' ASC, (- ((('?)&mRB') BETWEEN (rt0.c1) AND (rt0.c2)))), CAST(((rt0.c2) ISNULL) AS BLOB) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((0.8128803907223872)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))&(((0.8128803907223872)IS NOT(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((0.8128803907223872)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))&(((0.8128803907223872)IS NOT(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((0.8128803907223872)IS NOT(rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((+ (DATE(rt0.c2, 't{u牒', vt0.c0, rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (DATE(rt0.c2, 't{u牒', vt0.c0, rt0.c3, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((+ (DATE(rt0.c2, 't{u牒', vt0.c0, rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (DATE(rt0.c2, 't{u牒', vt0.c0, rt0.c3, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((+ (DATE(rt0.c2, 't{u牒', vt0.c0, rt0.c3, rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) NOTNULL)) ORDER BY 0x1f6a319 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0x1f6a319 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) NOTNULL)) ORDER BY 0x1f6a319 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0x1f6a319 ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN ())) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (x'')))) ASC;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt0.c1)))) AND ((((rt0.c0)%(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((- (rt0.c1)))) AND ((((rt0.c0)%(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt0.c1)))) AND ((((rt0.c0)%(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((- (rt0.c1)))) AND ((((rt0.c0)%(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt0.c1)))) AND ((((rt0.c0)%(rt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))>((-1966175718))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))>((-1966175718)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))>((-1966175718))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))>((-1966175718)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))>((-1966175718))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((((rt0.c1)AND(NULL)))OR(rt0.c3))))) ORDER BY ((TRIM(DISTINCT vt0.c0))>=((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)>=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)AND(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((TRIM(DISTINCT vt0.c0))>=((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)>=(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((((rt0.c1)AND(NULL)))OR(rt0.c3))))) ORDER BY ((TRIM(DISTINCT vt0.c0))>=((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)>=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)AND(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((TRIM(DISTINCT vt0.c0))>=((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)>=(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((((rt0.c1)AND(NULL)))OR(rt0.c3))))) ORDER BY ((TRIM(DISTINCT vt0.c0))>=((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)>=(vt0.c0)) ASC;
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((rt0.c0) NOT NULL) WHEN LOWER(rt0.c3) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '1682444759' ELSE rt0.c3 END THEN (- (rt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY (((((((((((((((((NOT (rt0.c1)))AND(((rt0.c1)*(0.16372075676844067)))))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)OR(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))OR(((rt0.c2) NOT NULL))))OR((((rt0.c0))=((rt0.c1))))))AND(CHAR('')));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((rt0.c0) NOT NULL) WHEN LOWER(rt0.c3) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '1682444759' ELSE rt0.c3 END THEN (- (rt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((((((NOT (rt0.c1)))AND(((rt0.c1)*(0.16372075676844067)))))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)OR(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))OR(((rt0.c2) NOT NULL))))OR((((rt0.c0))=((rt0.c1))))))AND(CHAR(''))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((rt0.c0) NOT NULL) WHEN LOWER(rt0.c3) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '1682444759' ELSE rt0.c3 END THEN (- (rt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY (((((((((((((((((NOT (rt0.c1)))AND(((rt0.c1)*(0.16372075676844067)))))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)OR(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))OR(((rt0.c2) NOT NULL))))OR((((rt0.c0))=((rt0.c1))))))AND(CHAR('')));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((rt0.c0) NOT NULL) WHEN LOWER(rt0.c3) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '1682444759' ELSE rt0.c3 END THEN (- (rt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((((((((NOT (rt0.c1)))AND(((rt0.c1)*(0.16372075676844067)))))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)OR(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))OR(((rt0.c2) NOT NULL))))OR((((rt0.c0))=((rt0.c1))))))AND(CHAR(''))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c2)LIKE(rt0.c0)) THEN ((rt0.c0) NOT NULL) WHEN LOWER(rt0.c3) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN '1682444759' ELSE rt0.c3 END THEN (- (rt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY (((((((((((((((((NOT (rt0.c1)))AND(((rt0.c1)*(0.16372075676844067)))))OR(((rt0.c0) NOTNULL))))AND(((rt0.c0)OR(rt0.c2)))))AND(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)))OR(((rt0.c2) NOT NULL))))OR((((rt0.c0))=((rt0.c1))))))AND(CHAR('')));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND('b~bV'))) BETWEEN (((rt0.c3)<=(vt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END))) ORDER BY rt0.c2 DESC, (~ (((rt0.c3) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN 0x6fea2fe9 END) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND('b~bV'))) BETWEEN (((rt0.c3)<=(vt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 DESC, (~ (((rt0.c3) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN 0X6fea2fe9 END) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND('b~bV'))) BETWEEN (((rt0.c3)<=(vt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END))) ORDER BY rt0.c2 DESC, (~ (((rt0.c3) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN 0x6fea2fe9 END) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND('b~bV'))) BETWEEN (((rt0.c3)<=(vt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 DESC, (~ (((rt0.c3) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN 0X6fea2fe9 END) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND('b~bV'))) BETWEEN (((rt0.c3)<=(vt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE vt0.c0 END))) ORDER BY rt0.c2 DESC, (~ (((rt0.c3) IS FALSE))) ASC  NULLS FIRST, ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN 0x6fea2fe9 END) AND (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) ASC;
SELECT * FROM vt0 WHERE (LIKELIHOOD((vt0.c0 IN (NULL)), 0.3145866157405065)) ORDER BY load_extension(x'', ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC, (- ('-789620734' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt0.c0 IN (NULL)), 0.3145866157405065)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(x'', ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC, (- ('-789620734' COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (LIKELIHOOD((vt0.c0 IN (NULL)), 0.3145866157405065)) ORDER BY load_extension(x'', ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC, (- ('-789620734' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt0.c0 IN (NULL)), 0.3145866157405065)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(x'', ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC, (- ('-789620734' COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (LIKELIHOOD((vt0.c0 IN (NULL)), 0.3145866157405065)) ORDER BY load_extension(x'', ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC, (- ('-789620734' COLLATE RTRIM));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((HEX(vt0.c0))) AND ((UPPER(DISTINCT rt0.c0)))) WHERE ((CAST(rt0.c2 AS NUMERIC) IN (((rt0.c3)/(vt0.c0)), ((rt0.c1) IS FALSE)))) ORDER BY IFNULL(DISTINCT (+ (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN (((rt0.c3)/(vt0.c0)), ((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((HEX(vt0.c0))) AND ((UPPER(DISTINCT rt0.c0)))) ORDER BY IFNULL(DISTINCT (+ (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(rt0.c1))) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((HEX(vt0.c0))) AND ((UPPER(DISTINCT rt0.c0)))) WHERE ((CAST(rt0.c2 AS NUMERIC) IN (((rt0.c3)/(vt0.c0)), ((rt0.c1) IS FALSE)))) ORDER BY IFNULL(DISTINCT (+ (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN (((rt0.c3)/(vt0.c0)), ((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((HEX(vt0.c0))) AND ((UPPER(DISTINCT rt0.c0)))) ORDER BY IFNULL(DISTINCT (+ (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(rt0.c1))) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((HEX(vt0.c0))) AND ((UPPER(DISTINCT rt0.c0)))) WHERE ((CAST(rt0.c2 AS NUMERIC) IN (((rt0.c3)/(vt0.c0)), ((rt0.c1) IS FALSE)))) ORDER BY IFNULL(DISTINCT (+ (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(rt0.c1))) DESC;
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (~ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (~ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (~ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c3 IN ()))IS((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1)))))) ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)  NULLS FIRST, rt0.c3 DESC, (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN x'' WHEN '䌑k' THEN vt0.c0 END))<=(((((rt0.c3))<=((rt0.c3))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))IS((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)  NULLS FIRST, rt0.c3 DESC, (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN x'' WHEN '䌑k' THEN vt0.c0 END))<=(((((rt0.c3))<=((rt0.c3))))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c3 IN ()))IS((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1)))))) ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)  NULLS FIRST, rt0.c3 DESC, (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN x'' WHEN '䌑k' THEN vt0.c0 END))<=(((((rt0.c3))<=((rt0.c3))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))IS((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)  NULLS FIRST, rt0.c3 DESC, (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN x'' WHEN '䌑k' THEN vt0.c0 END))<=(((((rt0.c3))<=((rt0.c3))))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c3 IN ()))IS((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1)))))) ORDER BY CAST((((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)  NULLS FIRST, rt0.c3 DESC, (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN x'' WHEN '䌑k' THEN vt0.c0 END))<=(((((rt0.c3))<=((rt0.c3))))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_array(((rt0.c2)>>(rt0.c2)), ((rt0.c3) NOT NULL))) ORDER BY (+ (CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, '{\n*p' DESC  NULLS LAST, SQLITE_VERSION() COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2)>>(rt0.c2)), ((rt0.c3) NOT NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, '{\n*p' DESC  NULLS LAST, SQLITE_VERSION() COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_array(((rt0.c2)>>(rt0.c2)), ((rt0.c3) NOT NULL))) ORDER BY (+ (CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, '{\n*p' DESC  NULLS LAST, SQLITE_VERSION() COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c2)>>(rt0.c2)), ((rt0.c3) NOT NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, '{\n*p' DESC  NULLS LAST, SQLITE_VERSION() COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_array(((rt0.c2)>>(rt0.c2)), ((rt0.c3) NOT NULL))) ORDER BY (+ (CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, '{\n*p' DESC  NULLS LAST, SQLITE_VERSION() COLLATE RTRIM;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) ISNULL) IN (((rt0.c1)+(rt0.c2))))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c1)IS NOT(rt0.c1)) WHEN CAST(-1292580401 AS TEXT) THEN rt0.c3 WHEN json_type(rt0.c2) THEN json_patch(rt0.c1, rt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN (((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c1)IS NOT(rt0.c1)) WHEN CAST(-1292580401 AS TEXT) THEN rt0.c3 WHEN json_type(rt0.c2) THEN json_patch(rt0.c1, rt0.c1) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) ISNULL) IN (((rt0.c1)+(rt0.c2))))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c1)IS NOT(rt0.c1)) WHEN CAST(-1292580401 AS TEXT) THEN rt0.c3 WHEN json_type(rt0.c2) THEN json_patch(rt0.c1, rt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN (((rt0.c1)+(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c1)IS NOT(rt0.c1)) WHEN CAST(-1292580401 AS TEXT) THEN rt0.c3 WHEN json_type(rt0.c2) THEN json_patch(rt0.c1, rt0.c1) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) ISNULL) IN (((rt0.c1)+(rt0.c2))))) ORDER BY CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c1)IS NOT(rt0.c1)) WHEN CAST(-1292580401 AS TEXT) THEN rt0.c3 WHEN json_type(rt0.c2) THEN json_patch(rt0.c1, rt0.c1) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((NOT (rt0.c1)))|(CASE WHEN rt0.c2 THEN rt0.c3 END)) WHERE (('-514541499' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-514541499' IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((NOT (rt0.c1)))|(CASE WHEN rt0.c2 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((NOT (rt0.c1)))|(CASE WHEN rt0.c2 THEN rt0.c3 END)) WHERE (('-514541499' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-514541499' IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((NOT (rt0.c1)))|(CASE WHEN rt0.c2 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((NOT (rt0.c1)))|(CASE WHEN rt0.c2 THEN rt0.c3 END)) WHERE (('-514541499' IN ()));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c0))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0, ((((((((((vt0.c0)|(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(x'5b7a')))))OR((vt0.c0 IN ()))))AND(((vt0.c0)>=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((((((vt0.c0)|(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(x'5b7a')))))OR((vt0.c0 IN ()))))AND(((vt0.c0)>=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c0))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0, ((((((((((vt0.c0)|(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(x'5b7a')))))OR((vt0.c0 IN ()))))AND(((vt0.c0)>=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c0))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((((((vt0.c0)|(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(x'5b7a')))))OR((vt0.c0 IN ()))))AND(((vt0.c0)>=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(vt0.c0))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0, ((((((((((vt0.c0)|(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))AND(x'5b7a')))))OR((vt0.c0 IN ()))))AND(((vt0.c0)>=(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((1.866273017E9) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((1.866273017E9) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((1.866273017E9) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((- (((1.866273017E9) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((1.866273017E9) IS TRUE))));
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.09276592421470475)) WHEN DATETIME(rt0.c1, rt0.c0, rt0.c3) THEN (rt0.c1 IN ()) WHEN '-1566716028' COLLATE BINARY THEN (~ (rt0.c0)) ELSE '1764288596' COLLATE BINARY END) ORDER BY rt0.c0 ASC  NULLS FIRST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.09276592421470475)) WHEN DATETIME(rt0.c1, rt0.c0, rt0.c3) THEN (rt0.c1 IN ()) WHEN '-1566716028' COLLATE BINARY THEN (~ (rt0.c0)) ELSE '1764288596' COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST, rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.09276592421470475)) WHEN DATETIME(rt0.c1, rt0.c0, rt0.c3) THEN (rt0.c1 IN ()) WHEN '-1566716028' COLLATE BINARY THEN (~ (rt0.c0)) ELSE '1764288596' COLLATE BINARY END) ORDER BY rt0.c0 ASC  NULLS FIRST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.09276592421470475)) WHEN DATETIME(rt0.c1, rt0.c0, rt0.c3) THEN (rt0.c1 IN ()) WHEN '-1566716028' COLLATE BINARY THEN (~ (rt0.c0)) ELSE '1764288596' COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST, rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.09276592421470475)) WHEN DATETIME(rt0.c1, rt0.c0, rt0.c3) THEN (rt0.c1 IN ()) WHEN '-1566716028' COLLATE BINARY THEN (~ (rt0.c0)) ELSE '1764288596' COLLATE BINARY END) ORDER BY rt0.c0 ASC  NULLS FIRST, rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((0.3532809613787504 IN ())) ORDER BY ((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c2) ISNULL)) AND ((~ (rt0.c2)))), (((((rt0.c2))>((rt0.c2))))&((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.3532809613787504 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c2) ISNULL)) AND ((~ (rt0.c2)))), (((((rt0.c2))>((rt0.c2))))&((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((0.3532809613787504 IN ())) ORDER BY ((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c2) ISNULL)) AND ((~ (rt0.c2)))), (((((rt0.c2))>((rt0.c2))))&((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.3532809613787504 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c2) ISNULL)) AND ((~ (rt0.c2)))), (((((rt0.c2))>((rt0.c2))))&((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((0.3532809613787504 IN ())) ORDER BY ((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c2) ISNULL)) AND ((~ (rt0.c2)))), (((((rt0.c2))>((rt0.c2))))&((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.399011360869177 COLLATE NOCASE WHERE ((((('-2003387241')AND(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)>((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2003387241')AND(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.399011360869177 COLLATE NOCASE ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)>((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.399011360869177 COLLATE NOCASE WHERE ((((('-2003387241')AND(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)>((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2003387241')AND(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.399011360869177 COLLATE NOCASE ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)>((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.399011360869177 COLLATE NOCASE WHERE ((((('-2003387241')AND(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)>((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (rt0.c2 COLLATE BINARY)) WHERE (MIN((((rt0.c3, rt0.c2, rt0.c0))!=((rt0.c3, rt0.c1, rt0.c3))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)), ((rt0.c1)GLOB(rt0.c2)), (~ (vt0.c0)))) ORDER BY ((((LTRIM(rt0.c2, rt0.c2))AND(((vt0.c0)IS NOT(rt0.c3)))))OR(((rt0.c0)!=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((MIN((((rt0.c3, rt0.c2, rt0.c0))<>((rt0.c3, rt0.c1, rt0.c3))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)), ((rt0.c1)GLOB(rt0.c2)), (~ (vt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (rt0.c2 COLLATE BINARY)) ORDER BY ((((LTRIM(rt0.c2, rt0.c2))AND(((vt0.c0)IS NOT(rt0.c3)))))OR(((rt0.c0)!=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (rt0.c2 COLLATE BINARY)) WHERE (MIN((((rt0.c3, rt0.c2, rt0.c0))!=((rt0.c3, rt0.c1, rt0.c3))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)), ((rt0.c1)GLOB(rt0.c2)), (~ (vt0.c0)))) ORDER BY ((((LTRIM(rt0.c2, rt0.c2))AND(((vt0.c0)IS NOT(rt0.c3)))))OR(((rt0.c0)!=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((MIN((((rt0.c3, rt0.c2, rt0.c0))<>((rt0.c3, rt0.c1, rt0.c3))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)), ((rt0.c1)GLOB(rt0.c2)), (~ (vt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (rt0.c2 COLLATE BINARY)) ORDER BY ((((LTRIM(rt0.c2, rt0.c2))AND(((vt0.c0)IS NOT(rt0.c3)))))OR(((rt0.c0)!=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (rt0.c2 COLLATE BINARY)) WHERE (MIN((((rt0.c3, rt0.c2, rt0.c0))!=((rt0.c3, rt0.c1, rt0.c3))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)), ((rt0.c1)GLOB(rt0.c2)), (~ (vt0.c0)))) ORDER BY ((((LTRIM(rt0.c2, rt0.c2))AND(((vt0.c0)IS NOT(rt0.c3)))))OR(((rt0.c0)!=(rt0.c2))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE (- (rt0.c2))  WHEN SQLITE_SOURCE_ID() THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE ((rt0.c3)<(rt0.c0)) END) ORDER BY (((- (rt0.c1)))<>(((rt0.c0) NOT BETWEEN (0.4188840115967303) AND (rt0.c0)))) DESC  NULLS LAST, x'' COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c2))  WHEN SQLITE_SOURCE_ID() THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE ((rt0.c3)<(rt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((- (rt0.c1)))!=(((rt0.c0) NOT BETWEEN (0.4188840115967303) AND (rt0.c0)))) DESC  NULLS LAST, x'' COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE (- (rt0.c2))  WHEN SQLITE_SOURCE_ID() THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE ((rt0.c3)<(rt0.c0)) END) ORDER BY (((- (rt0.c1)))<>(((rt0.c0) NOT BETWEEN (0.4188840115967303) AND (rt0.c0)))) DESC  NULLS LAST, x'' COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c2))  WHEN SQLITE_SOURCE_ID() THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE ((rt0.c3)<(rt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((- (rt0.c1)))!=(((rt0.c0) NOT BETWEEN (0.4188840115967303) AND (rt0.c0)))) DESC  NULLS LAST, x'' COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE (- (rt0.c2))  WHEN SQLITE_SOURCE_ID() THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) ELSE ((rt0.c3)<(rt0.c0)) END) ORDER BY (((- (rt0.c1)))<>(((rt0.c0) NOT BETWEEN (0.4188840115967303) AND (rt0.c0)))) DESC  NULLS LAST, x'' COLLATE RTRIM COLLATE NOCASE;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0))<=((NULL, vt0.c0, vt0.c0))) COLLATE NOCASE) ORDER BY CASE (+ (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))) WHEN x'199183ee' THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((vt0.c0)||(vt0.c0)))<((+ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0))<=((NULL, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))) WHEN x'199183ee' THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((vt0.c0)||(vt0.c0)))<((+ (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0))<=((NULL, vt0.c0, vt0.c0))) COLLATE NOCASE) ORDER BY CASE (+ (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))) WHEN x'199183ee' THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((vt0.c0)||(vt0.c0)))<((+ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0))<=((NULL, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))) WHEN x'199183ee' THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((vt0.c0)||(vt0.c0)))<((+ (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0))<=((NULL, vt0.c0, vt0.c0))) COLLATE NOCASE) ORDER BY CASE (+ (vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))) WHEN x'199183ee' THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((vt0.c0)||(vt0.c0)))<((+ (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(CASE WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN (- (rt0.c0)) THEN (~ (rt0.c0)) ELSE STRFTIME(rt0.c1, rt0.c1, vt0.c0) END ASC  NULLS FIRST, UNLIKELY(((rt0.c1)LIKE(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)GLOB(CASE WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN (~ (rt0.c0)) ELSE STRFTIME(rt0.c1, rt0.c1, vt0.c0) END ASC  NULLS FIRST, UNLIKELY(((rt0.c1)LIKE(rt0.c3))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(CASE WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN (- (rt0.c0)) THEN (~ (rt0.c0)) ELSE STRFTIME(rt0.c1, rt0.c1, vt0.c0) END ASC  NULLS FIRST, UNLIKELY(((rt0.c1)LIKE(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)GLOB(CASE WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN (~ (rt0.c0)) ELSE STRFTIME(rt0.c1, rt0.c1, vt0.c0) END ASC  NULLS FIRST, UNLIKELY(((rt0.c1)LIKE(rt0.c3))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY)GLOB(CASE WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN (- (rt0.c0)) THEN (~ (rt0.c0)) ELSE STRFTIME(rt0.c1, rt0.c1, vt0.c0) END ASC  NULLS FIRST, UNLIKELY(((rt0.c1)LIKE(rt0.c3)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((((rt0.c3)+(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((((rt0.c3)+(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((((rt0.c3)+(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((((rt0.c3)+(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END)) AND ((((rt0.c3)+(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TYPEOF(((rt0.c2) ISNULL))) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)) DESC, '923551689' COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)) DESC, '923551689' COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TYPEOF(((rt0.c2) ISNULL))) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)) DESC, '923551689' COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)) DESC, '923551689' COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TYPEOF(((rt0.c2) ISNULL))) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)) DESC, '923551689' COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c1)/(rt0.c3)) THEN (~ (rt0.c2)) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY ((ABS(DISTINCT rt0.c0))<(rt0.c3))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)IS NOT((NOT (rt0.c1)))) DESC  NULLS LAST, ((('', rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c2 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS TEXT), rt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c1)/(rt0.c3)) THEN (~ (rt0.c2)) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY ((ABS(DISTINCT rt0.c0))<(rt0.c3))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)IS NOT((NOT (rt0.c1)))) DESC  NULLS LAST, ((('', rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c2 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS TEXT), rt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c1)/(rt0.c3)) THEN (~ (rt0.c2)) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY ((ABS(DISTINCT rt0.c0))<(rt0.c3))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)IS NOT((NOT (rt0.c1)))) DESC  NULLS LAST, ((('', rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c2 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS TEXT), rt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c1)/(rt0.c3)) THEN (~ (rt0.c2)) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY ((ABS(DISTINCT rt0.c0))<(rt0.c3))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)IS NOT((NOT (rt0.c1)))) DESC  NULLS LAST, ((('', rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c2 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS TEXT), rt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c1)/(rt0.c3)) THEN (~ (rt0.c2)) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY ((ABS(DISTINCT rt0.c0))<(rt0.c3))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)IS NOT((NOT (rt0.c1)))) DESC  NULLS LAST, ((('', rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, '', rt0.c2 COLLATE RTRIM)) AND ((CAST(rt0.c2 AS TEXT), rt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)<(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)<(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)<(rt0.c2))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (NULLIF((((rt0.c3, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c1, NULL))), rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((rt0.c3, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c1, NULL))), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF((((rt0.c3, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c1, NULL))), rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((rt0.c3, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c1, NULL))), rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF((((rt0.c3, rt0.c1, rt0.c0))<=((rt0.c0, rt0.c1, NULL))), rt0.c0));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL))OR((vt0.c0 IN ())))) ORDER BY ((((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))OR(vt0.c0)))OR(((vt0.c0)>(''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))OR(vt0.c0)))OR(((vt0.c0)>(''))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL))OR((vt0.c0 IN ())))) ORDER BY ((((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))OR(vt0.c0)))OR(((vt0.c0)>(''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))OR(vt0.c0)))OR(((vt0.c0)>(''))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL))OR((vt0.c0 IN ())))) ORDER BY ((((((rt0.c1) BETWEEN (NULL) AND (rt0.c0)))OR(vt0.c0)))OR(((vt0.c0)>(''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.018085452946193126);
SELECT SUM(count) FROM (SELECT ((0.018085452946193126) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.018085452946193126);
SELECT SUM(count) FROM (SELECT ((0.018085452946193126) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.018085452946193126);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((vt0.c0)AND(rt0.c3)))) ORDER BY (((((- (rt0.c2)))OR((+ (vt0.c0)))))OR(((x'')/(rt0.c0)))), (NOT (rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((vt0.c0)AND(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((- (rt0.c2)))OR((+ (vt0.c0)))))OR(((x'')/(rt0.c0)))), (NOT (rt0.c1 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((vt0.c0)AND(rt0.c3)))) ORDER BY (((((- (rt0.c2)))OR((+ (vt0.c0)))))OR(((x'')/(rt0.c0)))), (NOT (rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((vt0.c0)AND(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((- (rt0.c2)))OR((+ (vt0.c0)))))OR(((x'')/(rt0.c0)))), (NOT (rt0.c1 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((vt0.c0)AND(rt0.c3)))) ORDER BY (((((- (rt0.c2)))OR((+ (vt0.c0)))))OR(((x'')/(rt0.c0)))), (NOT (rt0.c1 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (CHANGES()))) ORDER BY '1523585542'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (CHANGES()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1523585542'  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (CHANGES()))) ORDER BY '1523585542'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (CHANGES()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1523585542'  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN (HEX(rt0.c3)) AND (CHANGES()))) ORDER BY '1523585542'  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt0 ON ABS(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0))) WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY (((((rt0.c1)%(rt0.c0))))<((NULL)))  NULLS FIRST, (((rt0.c3)IS NOT(rt0.c3)) IN ((NULL IN (rt0.c2, rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ABS(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0))) ORDER BY (((((rt0.c1)%(rt0.c0))))<((NULL)))  NULLS FIRST, (((rt0.c3)IS NOT(rt0.c3)) IN ((NULL IN (rt0.c2, rt0.c3)))) DESC);
SELECT * FROM rt0 INNER JOIN vt0 ON ABS(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0))) WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY (((((rt0.c1)%(rt0.c0))))<((NULL)))  NULLS FIRST, (((rt0.c3)IS NOT(rt0.c3)) IN ((NULL IN (rt0.c2, rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ABS(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0))) ORDER BY (((((rt0.c1)%(rt0.c0))))<((NULL)))  NULLS FIRST, (((rt0.c3)IS NOT(rt0.c3)) IN ((NULL IN (rt0.c2, rt0.c3)))) DESC);
SELECT * FROM rt0 INNER JOIN vt0 ON ABS(DISTINCT ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0))) WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY (((((rt0.c1)%(rt0.c0))))<((NULL)))  NULLS FIRST, (((rt0.c3)IS NOT(rt0.c3)) IN ((NULL IN (rt0.c2, rt0.c3)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((((vt0.c0)IS(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))|((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))|((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))|((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'7825' COLLATE NOCASE) ORDER BY (- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((x'7825' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'7825' COLLATE NOCASE) ORDER BY (- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((x'7825' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'7825' COLLATE NOCASE) ORDER BY (- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))*(UPPER(DISTINCT rt0.c1)))) ORDER BY ((((rt0.c3) IS FALSE))-(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))*(UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) IS FALSE))-(NULL)) DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))*(UPPER(DISTINCT rt0.c1)))) ORDER BY ((((rt0.c3) IS FALSE))-(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))*(UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) IS FALSE))-(NULL)) DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))*(UPPER(DISTINCT rt0.c1)))) ORDER BY ((((rt0.c3) IS FALSE))-(NULL)) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)<<(x''))) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) ORDER BY LIKELY(DISTINCT (NOT (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(x''))) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT (NOT (rt0.c2))) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)<<(x''))) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) ORDER BY LIKELY(DISTINCT (NOT (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(x''))) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT (NOT (rt0.c2))) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)<<(x''))) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) ORDER BY LIKELY(DISTINCT (NOT (rt0.c2))) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOTNULL)) ORDER BY (((rt0.c1 IN (rt0.c2)))<>(((rt0.c0)GLOB(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c2)))!=(((rt0.c0)GLOB(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOTNULL)) ORDER BY (((rt0.c1 IN (rt0.c2)))<>(((rt0.c0)GLOB(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c2)))!=(((rt0.c0)GLOB(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOTNULL)) ORDER BY (((rt0.c1 IN (rt0.c2)))<>(((rt0.c0)GLOB(rt0.c2)))) ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (CAST(((NULL) NOT NULL) AS REAL)) ORDER BY (((((((rt0.c2))<=((rt0.c1))))AND(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x''))))  NULLS LAST, (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)>>(rt0.c1))) AND ((((rt0.c3, vt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0 ORDER BY (((((((rt0.c2))<=((rt0.c1))))AND(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x''))))  NULLS LAST, (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)>>(rt0.c1))) AND ((((rt0.c3, vt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (CAST(((NULL) NOT NULL) AS REAL)) ORDER BY (((((((rt0.c2))<=((rt0.c1))))AND(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x''))))  NULLS LAST, (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)>>(rt0.c1))) AND ((((rt0.c3, vt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0 ORDER BY (((((((rt0.c2))<=((rt0.c1))))AND(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x''))))  NULLS LAST, (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)>>(rt0.c1))) AND ((((rt0.c3, vt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (CAST(((NULL) NOT NULL) AS REAL)) ORDER BY (((((((rt0.c2))<=((rt0.c1))))AND(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x''))))  NULLS LAST, (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)>>(rt0.c1))) AND ((((rt0.c3, vt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rtreenode(rt0.c1, rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c1, rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rtreenode(rt0.c1, rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c1, rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rtreenode(rt0.c1, rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0)&(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)), '', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((((((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)%(rt0.c2)), ((rt0.c0) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)), '', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((((((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)%(rt0.c2)), ((rt0.c0) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)), '', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((((((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)%(rt0.c2)), ((rt0.c0) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)), '', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((((((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)%(rt0.c2)), ((rt0.c0) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)), '', ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((((((((((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)%(rt0.c2)), ((rt0.c0) IS TRUE), CASE WHEN rt0.c0 THEN rt0.c2 END))));
SELECT * FROM rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c3))))) ORDER BY CASE WHEN rt0.c0 COLLATE RTRIM THEN rt0.c3 ELSE CAST(rt0.c1 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE RTRIM THEN rt0.c3 ELSE CAST(rt0.c1 AS TEXT) END);
SELECT * FROM rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c3))))) ORDER BY CASE WHEN rt0.c0 COLLATE RTRIM THEN rt0.c3 ELSE CAST(rt0.c1 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 COLLATE RTRIM THEN rt0.c3 ELSE CAST(rt0.c1 AS TEXT) END);
SELECT * FROM rt0 WHERE ((+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c3))))) ORDER BY CASE WHEN rt0.c0 COLLATE RTRIM THEN rt0.c3 ELSE CAST(rt0.c1 AS TEXT) END;
SELECT * FROM vt0, rt0 WHERE ((- (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0 IN ()))|((NULL IN (vt0.c0, rt0.c3)))) DESC  NULLS FIRST, HEX(((rt0.c0) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0 IN ()))|((NULL IN (vt0.c0, rt0.c3)))) DESC  NULLS FIRST, HEX(((rt0.c0) NOT NULL)) ASC);
SELECT * FROM vt0, rt0 WHERE ((- (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0 IN ()))|((NULL IN (vt0.c0, rt0.c3)))) DESC  NULLS FIRST, HEX(((rt0.c0) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0 IN ()))|((NULL IN (vt0.c0, rt0.c3)))) DESC  NULLS FIRST, HEX(((rt0.c0) NOT NULL)) ASC);
SELECT * FROM vt0, rt0 WHERE ((- (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0 IN ()))|((NULL IN (vt0.c0, rt0.c3)))) DESC  NULLS FIRST, HEX(((rt0.c0) NOT NULL)) ASC;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), ((('9149147506584666979')) BETWEEN (((- (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), ((('9149147506584666979')) BETWEEN (((- (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), ((('9149147506584666979')) BETWEEN (((- (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), ((('9149147506584666979')) BETWEEN (((- (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), ((('9149147506584666979')) BETWEEN (((- (vt0.c0)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL))|(((rt0.c3)&('0.8161603148827815'))))) ORDER BY CASE ((rt0.c3)*(rt0.c3))  WHEN ((((0.27202780032738594)OR(rt0.c2)))AND(rt0.c1)) THEN (('c')>=(rt0.c2)) ELSE TOTAL_CHANGES() END DESC  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))|(((rt0.c3)&('0.8161603148827815'))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c3)*(rt0.c3))  WHEN ((((0.27202780032738594)OR(rt0.c2)))AND(rt0.c1)) THEN (('c')>=(rt0.c2)) ELSE TOTAL_CHANGES() END DESC  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE((+ (NULL)))));
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL))|(((rt0.c3)&('0.8161603148827815'))))) ORDER BY CASE ((rt0.c3)*(rt0.c3))  WHEN ((((0.27202780032738594)OR(rt0.c2)))AND(rt0.c1)) THEN (('c')>=(rt0.c2)) ELSE TOTAL_CHANGES() END DESC  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))|(((rt0.c3)&('0.8161603148827815'))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c3)*(rt0.c3))  WHEN ((((0.27202780032738594)OR(rt0.c2)))AND(rt0.c1)) THEN (('c')>=(rt0.c2)) ELSE TOTAL_CHANGES() END DESC  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE((+ (NULL)))));
SELECT * FROM rt0 WHERE (((((rt0.c3) ISNULL))|(((rt0.c3)&('0.8161603148827815'))))) ORDER BY CASE ((rt0.c3)*(rt0.c3))  WHEN ((((0.27202780032738594)OR(rt0.c2)))AND(rt0.c1)) THEN (('c')>=(rt0.c2)) ELSE TOTAL_CHANGES() END DESC  NULLS LAST, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE((+ (NULL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'1649') ORDER BY IFNULL(CAST(rt0.c3 AS NUMERIC), ROUND(rt0.c2, rt0.c2));
SELECT SUM(count) FROM (SELECT ((x'1649') IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(CAST(rt0.c3 AS NUMERIC), ROUND(rt0.c2, rt0.c2)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'1649') ORDER BY IFNULL(CAST(rt0.c3 AS NUMERIC), ROUND(rt0.c2, rt0.c2));
SELECT SUM(count) FROM (SELECT ((x'1649') IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(CAST(rt0.c3 AS NUMERIC), ROUND(rt0.c2, rt0.c2)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'1649') ORDER BY IFNULL(CAST(rt0.c3 AS NUMERIC), ROUND(rt0.c2, rt0.c2));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN 1390096139 END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN 1390096139 END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN 1390096139 END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN 1390096139 END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN 1390096139 END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((x'') IS TRUE)) AND (CASE 0.09276592421470475  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-1341163866'))))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((x'') IS TRUE)) AND (CASE 0.09276592421470475  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-1341163866'))))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((x'') IS TRUE)) AND (CASE 0.09276592421470475  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-1341163866'))))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((x'') IS TRUE)) AND (CASE 0.09276592421470475  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-1341163866'))))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((x'') IS TRUE)) AND (CASE 0.09276592421470475  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '-1341163866'))))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((x'')) NOT BETWEEN (((((vt0.c0, rt0.c1, rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c3))))) AND ((((rt0.c0)<<(rt0.c0)))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((((vt0.c0, rt0.c1, rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c3))))) AND ((((rt0.c0)<<(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT ((rt0.c0 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((x'')) NOT BETWEEN (((((vt0.c0, rt0.c1, rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c3))))) AND ((((rt0.c0)<<(rt0.c0)))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((((vt0.c0, rt0.c1, rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c3))))) AND ((((rt0.c0)<<(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT ((rt0.c0 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((x'')) NOT BETWEEN (((((vt0.c0, rt0.c1, rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c3, rt0.c0, vt0.c0, rt0.c3))))) AND ((((rt0.c0)<<(rt0.c0)))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c2))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY (((((rt0.c1 IN (rt0.c1)))OR('Infinity')))AND(((vt0.c0)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1 IN (rt0.c1)))OR('Infinity')))AND(((vt0.c0)/(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY (((((rt0.c1 IN (rt0.c1)))OR('Infinity')))AND(((vt0.c0)/(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c1 IN (rt0.c1)))OR('Infinity')))AND(((vt0.c0)/(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY (((((rt0.c1 IN (rt0.c1)))OR('Infinity')))AND(((vt0.c0)/(rt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (('-589891473' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-589891473' IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (('-589891473' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-589891473' IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (('-589891473' IN ()));
SELECT * FROM vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'') NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY (((((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)) ASC  NULLS LAST, CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)) ASC  NULLS LAST, CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY (((((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)) ASC  NULLS LAST, CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)) ASC  NULLS LAST, CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY (((((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)) ASC  NULLS LAST, CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (~ (vt0.c0)) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (ABS(rt0.c2)) ORDER BY ((CAST(rt0.c0 AS BLOB))-(((rt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c2)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS BLOB))-(((rt0.c1) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (ABS(rt0.c2)) ORDER BY ((CAST(rt0.c0 AS BLOB))-(((rt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c2)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS BLOB))-(((rt0.c1) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (ABS(rt0.c2)) ORDER BY ((CAST(rt0.c0 AS BLOB))-(((rt0.c1) NOT NULL))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0)LIKE(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0)LIKE(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0)LIKE(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0)LIKE(x'')))));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((NOT (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((NOT (rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((NOT (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((NOT (rt0.c0)))) ASC);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((NOT (rt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((((((NULL) NOT BETWEEN ('') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(((('-1202266345'))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOT BETWEEN ('') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(((('-1202266345'))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((NULL) NOT BETWEEN ('') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(((('-1202266345'))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((NULL) NOT BETWEEN ('') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(((('-1202266345'))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((NULL) NOT BETWEEN ('') AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(((('-1202266345'))<>((vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (TIME(CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TIME(CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TIME(CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TIME(CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TIME(CAST(rt0.c1 AS NUMERIC), rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) WHERE (((((rt0.c2) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) WHERE (((((rt0.c2) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()) WHERE (((((rt0.c2) IS FALSE)) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)LIKE(rt0.c2))))) ORDER BY ((((CAST(rt0.c3 AS REAL))OR(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c3) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c3 AS REAL))OR(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c3) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)LIKE(rt0.c2))))) ORDER BY ((((CAST(rt0.c3 AS REAL))OR(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c3) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c3 AS REAL))OR(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c3) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)LIKE(rt0.c2))))) ORDER BY ((((CAST(rt0.c3 AS REAL))OR(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c3) ISNULL))) ASC;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((- (rt0.c2)))) AND ((vt0.c0)))) ORDER BY ROUND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)), (rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((- (rt0.c2)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ROUND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)), (rt0.c0 IN ())));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((- (rt0.c2)))) AND ((vt0.c0)))) ORDER BY ROUND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)), (rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((- (rt0.c2)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ROUND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)), (rt0.c0 IN ())));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((- (rt0.c2)))) AND ((vt0.c0)))) ORDER BY ROUND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)), (rt0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON rt0.c0 WHERE ('S4u');
SELECT SUM(count) FROM (SELECT ALL (('S4u') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON rt0.c0 WHERE ('S4u');
SELECT SUM(count) FROM (SELECT ALL (('S4u') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON rt0.c0 WHERE ('S4u');
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY CAST(CASE vt0.c0  WHEN 0x71a02b6c THEN rt0.c3 ELSE rt0.c3 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(CASE vt0.c0  WHEN 0x71a02b6c THEN rt0.c3 ELSE rt0.c3 END AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY CAST(CASE vt0.c0  WHEN 0x71a02b6c THEN rt0.c3 ELSE rt0.c3 END AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(CASE vt0.c0  WHEN 0x71a02b6c THEN rt0.c3 ELSE rt0.c3 END AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c1) ORDER BY CAST(CASE vt0.c0  WHEN 0x71a02b6c THEN rt0.c3 ELSE rt0.c3 END AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE ((((+ (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE ((((+ (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) WHERE ((((+ (rt0.c3))) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM) ORDER BY (+ (((0.7623678634764522)+(rt0.c2)))) DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (((0.7623678634764522)+(rt0.c2)))) DESC, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM) ORDER BY (+ (((0.7623678634764522)+(rt0.c2)))) DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (((0.7623678634764522)+(rt0.c2)))) DESC, rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) COLLATE RTRIM) ORDER BY (+ (((0.7623678634764522)+(rt0.c2)))) DESC, rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((rt0.c0 IN (rt0.c1)), rt0.c1 COLLATE BINARY))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((rt0.c0 IN (rt0.c1)), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((rt0.c0 IN (rt0.c1)), rt0.c1 COLLATE BINARY))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((rt0.c0 IN (rt0.c1)), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((rt0.c0 IN (rt0.c1)), rt0.c1 COLLATE BINARY))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE (LIKELY((rt0.c2 IN (rt0.c3, rt0.c0)))) ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) ASC  NULLS FIRST, (((('-789620734') ISNULL))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((rt0.c2 IN (rt0.c3, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) ASC  NULLS FIRST, (((('-789620734') ISNULL))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0 WHERE (LIKELY((rt0.c2 IN (rt0.c3, rt0.c0)))) ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) ASC  NULLS FIRST, (((('-789620734') ISNULL))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((rt0.c2 IN (rt0.c3, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) ASC  NULLS FIRST, (((('-789620734') ISNULL))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0 WHERE (LIKELY((rt0.c2 IN (rt0.c3, rt0.c0)))) ORDER BY ((((rt0.c0)>(rt0.c1))) IS FALSE) ASC  NULLS FIRST, (((('-789620734') ISNULL))OR(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) IN ())) ORDER BY 0.9258481838365421 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9258481838365421 DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) IN ())) ORDER BY 0.9258481838365421 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9258481838365421 DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) IN ())) ORDER BY 0.9258481838365421 DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((959882508) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((959882508) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((959882508) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((959882508) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((959882508) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), (((rt0.c2))!=((vt0.c0)))) WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), (((rt0.c2))<>((vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), (((rt0.c2))!=((vt0.c0)))) WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), (((rt0.c2))<>((vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), (((rt0.c2))!=((vt0.c0)))) WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((rt0.c3)*(rt0.c3)) COLLATE NOCASE) ORDER BY (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END IN ())  NULLS FIRST, ((- (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)*(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END IN ())  NULLS FIRST, ((- (rt0.c0)) IN ()) ASC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3)*(rt0.c3)) COLLATE NOCASE) ORDER BY (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END IN ())  NULLS FIRST, ((- (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)*(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END IN ())  NULLS FIRST, ((- (rt0.c0)) IN ()) ASC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3)*(rt0.c3)) COLLATE NOCASE) ORDER BY (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END IN ())  NULLS FIRST, ((- (rt0.c0)) IN ()) ASC;
SELECT * FROM rt0 WHERE ('p') ORDER BY (~ (CAST(rt0.c3 AS TEXT))), (((rt0.c2 IN (rt0.c2)))%((- (rt0.c2)))) ASC  NULLS LAST, ((rt0.c3) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('p') IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c3 AS TEXT))), (((rt0.c2 IN (rt0.c2)))%((- (rt0.c2)))) ASC  NULLS LAST, ((rt0.c3) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c2)) DESC);
SELECT * FROM rt0 WHERE ('p') ORDER BY (~ (CAST(rt0.c3 AS TEXT))), (((rt0.c2 IN (rt0.c2)))%((- (rt0.c2)))) ASC  NULLS LAST, ((rt0.c3) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('p') IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c3 AS TEXT))), (((rt0.c2 IN (rt0.c2)))%((- (rt0.c2)))) ASC  NULLS LAST, ((rt0.c3) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c2)) DESC);
SELECT * FROM rt0 WHERE ('p') ORDER BY (~ (CAST(rt0.c3 AS TEXT))), (((rt0.c2 IN (rt0.c2)))%((- (rt0.c2)))) ASC  NULLS LAST, ((rt0.c3) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c2)) DESC;
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c1, x'', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c1, rt0.c2)) AND ((x'60f0', rt0.c1, rt0.c3, NULL, rt0.c0, rt0.c0, rt0.c3)))))) ORDER BY (~ (((rt0.c0) NOTNULL))) ASC  NULLS LAST, (((((((('-204804493' COLLATE RTRIM)OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((((rt0.c1)OR('-531845439')))OR('')))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c1, x'', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c1, rt0.c2)) AND ((x'60f0', rt0.c1, rt0.c3, NULL, rt0.c0, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0) NOTNULL))) ASC  NULLS LAST, (((((((('-204804493' COLLATE RTRIM)OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((((rt0.c1)OR('-531845439')))OR('')))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c1, x'', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c1, rt0.c2)) AND ((x'60f0', rt0.c1, rt0.c3, NULL, rt0.c0, rt0.c0, rt0.c3)))))) ORDER BY (~ (((rt0.c0) NOTNULL))) ASC  NULLS LAST, (((((((('-204804493' COLLATE RTRIM)OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((((rt0.c1)OR('-531845439')))OR('')))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c1, x'', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c1, rt0.c2)) AND ((x'60f0', rt0.c1, rt0.c3, NULL, rt0.c0, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0) NOTNULL))) ASC  NULLS LAST, (((((((('-204804493' COLLATE RTRIM)OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((((rt0.c1)OR('-531845439')))OR('')))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c1, rt0.c3, rt0.c1, x'', rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c3, rt0.c1, rt0.c2)) AND ((x'60f0', rt0.c1, rt0.c3, NULL, rt0.c0, rt0.c0, rt0.c3)))))) ORDER BY (~ (((rt0.c0) NOTNULL))) ASC  NULLS LAST, (((((((('-204804493' COLLATE RTRIM)OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((((rt0.c1)OR('-531845439')))OR('')))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL)) ORDER BY (((x'311d'))<((rt0.c3))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((x'311d'))<((rt0.c3))) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL)) ORDER BY (((x'311d'))<((rt0.c3))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((x'311d'))<((rt0.c3))) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL)) ORDER BY (((x'311d'))<((rt0.c3))) COLLATE NOCASE DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END  WHEN 0Xffffffff9c9a1bad THEN ((rt0.c3)/(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END) ORDER BY ((rt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END  WHEN 0xffffffff9c9a1bad THEN ((rt0.c3)/(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) IS FALSE));
SELECT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END  WHEN 0Xffffffff9c9a1bad THEN ((rt0.c3)/(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END) ORDER BY ((rt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END  WHEN 0xffffffff9c9a1bad THEN ((rt0.c3)/(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) IS FALSE));
SELECT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END  WHEN 0Xffffffff9c9a1bad THEN ((rt0.c3)/(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END) ORDER BY ((rt0.c0) IS FALSE);
SELECT * FROM rt0, vt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)) ORDER BY ((rt0.c1 IN (vt0.c0)) IN (((rt0.c2) IS FALSE)))  NULLS FIRST, (~ (rt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 IN (vt0.c0)) IN (((rt0.c2) IS FALSE)))  NULLS FIRST, (~ (rt0.c0)));
SELECT * FROM rt0, vt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)) ORDER BY ((rt0.c1 IN (vt0.c0)) IN (((rt0.c2) IS FALSE)))  NULLS FIRST, (~ (rt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1 IN (vt0.c0)) IN (((rt0.c2) IS FALSE)))  NULLS FIRST, (~ (rt0.c0)));
SELECT * FROM rt0, vt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS TEXT)) ORDER BY ((rt0.c1 IN (vt0.c0)) IN (((rt0.c2) IS FALSE)))  NULLS FIRST, (~ (rt0.c0));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)>>(rt0.c3)) AS TEXT) WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)>>(rt0.c3)) AS TEXT) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)>>(rt0.c3)) AS TEXT) WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)>>(rt0.c3)) AS TEXT) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((vt0.c0)>>(rt0.c3)) AS TEXT) WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) ORDER BY ((rt0.c0 COLLATE NOCASE) ISNULL);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(vt0.c0 AS NUMERIC))))AND(NULL COLLATE RTRIM)))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1)-(NULL))))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN (~ (vt0.c0)) THEN ((rt0.c1) IS FALSE) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(vt0.c0 AS NUMERIC))))AND(NULL COLLATE RTRIM)))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1)-(NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN (~ (vt0.c0)) THEN ((rt0.c1) IS FALSE) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(vt0.c0 AS NUMERIC))))AND(NULL COLLATE RTRIM)))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1)-(NULL))))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN (~ (vt0.c0)) THEN ((rt0.c1) IS FALSE) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(vt0.c0 AS NUMERIC))))AND(NULL COLLATE RTRIM)))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1)-(NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN (~ (vt0.c0)) THEN ((rt0.c1) IS FALSE) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(vt0.c0 AS NUMERIC))))AND(NULL COLLATE RTRIM)))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c1)-(NULL))))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN (~ (vt0.c0)) THEN ((rt0.c1) IS FALSE) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON 'z\n' WHERE (-1730822287) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.8128803907223872))) ISNULL);
SELECT SUM(count) FROM (SELECT ((-1730822287) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON 'z\n' ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.8128803907223872))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON 'z\n' WHERE (-1730822287) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.8128803907223872))) ISNULL);
SELECT SUM(count) FROM (SELECT ((-1730822287) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON 'z\n' ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.8128803907223872))) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON 'z\n' WHERE (-1730822287) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.8128803907223872))) ISNULL);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (0.37239071169033555) ORDER BY ABS(rt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0.37239071169033555) IS TRUE)  as count FROM rt0 ORDER BY ABS(rt0.c1) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (0.37239071169033555) ORDER BY ABS(rt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0.37239071169033555) IS TRUE)  as count FROM rt0 ORDER BY ABS(rt0.c1) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (0.37239071169033555) ORDER BY ABS(rt0.c1) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)>>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)>>(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))OR(NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)>>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)>>(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))OR(NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)>>(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))OR(NULL)) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (CAST(0.19781058602722779 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (CAST(0.19781058602722779 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (CAST(0.19781058602722779 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (CAST(0.19781058602722779 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN (((rt0.c2)GLOB(rt0.c3))) AND (CAST(0.19781058602722779 AS BLOB))));
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ()))OR(CASE rt0.c2  WHEN 2125678718 THEN rt0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(CASE rt0.c2  WHEN 2125678718 THEN rt0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ()))OR(CASE rt0.c2  WHEN 2125678718 THEN rt0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(CASE rt0.c2  WHEN 2125678718 THEN rt0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ()))OR(CASE rt0.c2  WHEN 2125678718 THEN rt0.c2 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c1)/(rt0.c1)))))) ORDER BY CAST((NOT (0.4479182271217179)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c1)/(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (0.4479182271217179)) AS REAL) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c1)/(rt0.c1)))))) ORDER BY CAST((NOT (0.4479182271217179)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c1)/(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((NOT (0.4479182271217179)) AS REAL) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((((rt0.c1)/(rt0.c1)))))) ORDER BY CAST((NOT (0.4479182271217179)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((0.18224801154184722 IN ())) IS FALSE) WHERE ((UPPER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((0.18224801154184722 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((0.18224801154184722 IN ())) IS FALSE) WHERE ((UPPER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((0.18224801154184722 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((0.18224801154184722 IN ())) IS FALSE) WHERE ((UPPER(vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))>=(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))>=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))>=(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))>=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))>=(((vt0.c0)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((PRINTF(vt0.c0))AND(rtreenode(vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((PRINTF(vt0.c0))AND(rtreenode(vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((PRINTF(vt0.c0))AND(rtreenode(vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((PRINTF(vt0.c0))AND(rtreenode(vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((PRINTF(vt0.c0))AND(rtreenode(vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))  WHEN ((rt0.c3) IS FALSE) THEN CAST(vt0.c0 AS TEXT) ELSE 4.86663713E8 END WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))  WHEN ((rt0.c3) IS FALSE) THEN CAST(vt0.c0 AS TEXT) ELSE 4.86663713E8 END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))  WHEN ((rt0.c3) IS FALSE) THEN CAST(vt0.c0 AS TEXT) ELSE 4.86663713E8 END WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))  WHEN ((rt0.c3) IS FALSE) THEN CAST(vt0.c0 AS TEXT) ELSE 4.86663713E8 END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))  WHEN ((rt0.c3) IS FALSE) THEN CAST(vt0.c0 AS TEXT) ELSE 4.86663713E8 END WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (rt0.c0))) ORDER BY ')W耇Fq5ie'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ')W耇Fq5ie'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (rt0.c0))) ORDER BY ')W耇Fq5ie'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ')W耇Fq5ie'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (rt0.c0))) ORDER BY ')W耇Fq5ie'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'051a' END) AND ((~ (vt0.c0))))) ORDER BY ((NULL) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'051a' END) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'051a' END) AND ((~ (vt0.c0))))) ORDER BY ((NULL) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'051a' END) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'051a' END) AND ((~ (vt0.c0))))) ORDER BY ((NULL) ISNULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(-221098136)))OR(x'')))OR(((NULL)==(rt0.c1)))))OR(TYPEOF(DISTINCT rt0.c1)))) ORDER BY (UNLIKELY(rt0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(-221098136)))OR(x'')))OR(((NULL)=(rt0.c1)))))OR(TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (UNLIKELY(rt0.c0) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(-221098136)))OR(x'')))OR(((NULL)==(rt0.c1)))))OR(TYPEOF(DISTINCT rt0.c1)))) ORDER BY (UNLIKELY(rt0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(-221098136)))OR(x'')))OR(((NULL)=(rt0.c1)))))OR(TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (UNLIKELY(rt0.c0) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(-221098136)))OR(x'')))OR(((NULL)==(rt0.c1)))))OR(TYPEOF(DISTINCT rt0.c1)))) ORDER BY (UNLIKELY(rt0.c0) IN ()) DESC;
SELECT * FROM vt0 WHERE (IFNULL(((vt0.c0)<>(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE ((((0xffffffffb87191a9)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)&('㡪M')) END ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)<>(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE ((((0xffffffffb87191a9)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)&('㡪M')) END ASC);
SELECT * FROM vt0 WHERE (IFNULL(((vt0.c0)<>(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE ((((0xffffffffb87191a9)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)&('㡪M')) END ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)<>(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE ((((0xffffffffb87191a9)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)&('㡪M')) END ASC);
SELECT * FROM vt0 WHERE (IFNULL(((vt0.c0)<>(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE ((((0xffffffffb87191a9)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)&('㡪M')) END ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)GLOB(vt0.c0)) IN (((rt0.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)GLOB(vt0.c0)) IN (((rt0.c2) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)GLOB(vt0.c0)) IN (((rt0.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)GLOB(vt0.c0)) IN (((rt0.c2) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)GLOB(vt0.c0)) IN (((rt0.c2) ISNULL))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c3)!=(rt0.c3))))>=((rt0.c1)))) ORDER BY x'f214' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)<>(rt0.c3))))>=((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY x'f214' ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c3)!=(rt0.c3))))>=((rt0.c1)))) ORDER BY x'f214' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)<>(rt0.c3))))>=((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY x'f214' ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c3)!=(rt0.c3))))>=((rt0.c1)))) ORDER BY x'f214' ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((((0xffffffffc83cc143)||(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0xffffffffc83cc143)||(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0xffffffffc83cc143)||(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0xffffffffc83cc143)||(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0xffffffffc83cc143)||(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('䌑k') ORDER BY ((((x'6b49') NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, vt0.c0, rt0.c1)))) AND ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS FIRST, ((x'') IS FALSE);
SELECT SUM(count) FROM (SELECT (('䌑k') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((x'6b49') NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, vt0.c0, rt0.c1)))) AND ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS FIRST, ((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('䌑k') ORDER BY ((((x'6b49') NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, vt0.c0, rt0.c1)))) AND ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS FIRST, ((x'') IS FALSE);
SELECT SUM(count) FROM (SELECT (('䌑k') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((x'6b49') NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, vt0.c0, rt0.c1)))) AND ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS FIRST, ((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('䌑k') ORDER BY ((((x'6b49') NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, vt0.c0, rt0.c1)))) AND ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))  NULLS FIRST, ((x'') IS FALSE);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1)))))) ORDER BY (((vt0.c0 IN (rt0.c0))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c0)) AND (((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN (rt0.c0))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c0)) AND (((rt0.c2)-(rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1)))))) ORDER BY (((vt0.c0 IN (rt0.c0))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c0)) AND (((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN (rt0.c0))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c0)) AND (((rt0.c2)-(rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c1)>(rt0.c1)))))) ORDER BY (((vt0.c0 IN (rt0.c0))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, rt0.c0)) AND (((rt0.c2)-(rt0.c1))));
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN json_type(vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOTNULL)) ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((0x6ce08c1e, rt0.c2, ((rt0.c0) NOT NULL))) AND (('-837071511', LIKELIHOOD(DISTINCT rt0.c1, 0.8693166683829926), (((rt0.c0)) BETWEEN ((rt0.c1)) AND (('7\n&'))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((0X6ce08c1e, rt0.c2, ((rt0.c0) NOT NULL))) AND (('-837071511', LIKELIHOOD(DISTINCT rt0.c1, 0.8693166683829926), (((rt0.c0)) BETWEEN ((rt0.c1)) AND (('7\n&')))))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOTNULL)) ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((0x6ce08c1e, rt0.c2, ((rt0.c0) NOT NULL))) AND (('-837071511', LIKELIHOOD(DISTINCT rt0.c1, 0.8693166683829926), (((rt0.c0)) BETWEEN ((rt0.c1)) AND (('7\n&'))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((0X6ce08c1e, rt0.c2, ((rt0.c0) NOT NULL))) AND (('-837071511', LIKELIHOOD(DISTINCT rt0.c1, 0.8693166683829926), (((rt0.c0)) BETWEEN ((rt0.c1)) AND (('7\n&')))))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOTNULL)) ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((0x6ce08c1e, rt0.c2, ((rt0.c0) NOT NULL))) AND (('-837071511', LIKELIHOOD(DISTINCT rt0.c1, 0.8693166683829926), (((rt0.c0)) BETWEEN ((rt0.c1)) AND (('7\n&'))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY NULL ASC  NULLS LAST, (+ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, (+ (vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY NULL ASC  NULLS LAST, (+ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, (+ (vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY NULL ASC  NULLS LAST, (+ (vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(((NULL)/(rt0.c1)))))AND((~ (vt0.c0)))))AND((rt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c1)))OR(((NULL)/(rt0.c1)))))AND((~ (vt0.c0)))))AND((rt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(((NULL)/(rt0.c1)))))AND((~ (vt0.c0)))))AND((rt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c1)))OR(((NULL)/(rt0.c1)))))AND((~ (vt0.c0)))))AND((rt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(((NULL)/(rt0.c1)))))AND((~ (vt0.c0)))))AND((rt0.c0 IN ()))))OR(CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c0)<=(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))))!=(((NOT (rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c0)<=(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))))!=(((NOT (rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c0)<=(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))))!=(((NOT (rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c0)<=(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))))!=(((NOT (rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN ((rt0.c0)<=(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))))!=(((NOT (rt0.c3))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))<>((CAST(vt0.c0 AS INTEGER))))) ORDER BY (((NULL)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((vt0.c0 COLLATE RTRIM))), vt0.c0, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))<>((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((vt0.c0 COLLATE RTRIM))), vt0.c0, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))<>((CAST(vt0.c0 AS INTEGER))))) ORDER BY (((NULL)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((vt0.c0 COLLATE RTRIM))), vt0.c0, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))<>((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((vt0.c0 COLLATE RTRIM))), vt0.c0, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))<>((CAST(vt0.c0 AS INTEGER))))) ORDER BY (((NULL)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((vt0.c0 COLLATE RTRIM))), vt0.c0, vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c0)&(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)&(rt0.c1)) WHEN ((rt0.c3)LIKE(rt0.c0)) THEN (~ (rt0.c2)) ELSE rt0.c0 END WHERE (9.00854784E8);
SELECT SUM(count) FROM (SELECT ((9.00854784E8) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c0)&(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)&(rt0.c1)) WHEN ((rt0.c3)LIKE(rt0.c0)) THEN (~ (rt0.c2)) ELSE rt0.c0 END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c0)&(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)&(rt0.c1)) WHEN ((rt0.c3)LIKE(rt0.c0)) THEN (~ (rt0.c2)) ELSE rt0.c0 END WHERE (9.00854784E8);
SELECT SUM(count) FROM (SELECT ((9.00854784E8) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c0)&(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)&(rt0.c1)) WHEN ((rt0.c3)LIKE(rt0.c0)) THEN (~ (rt0.c2)) ELSE rt0.c0 END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c0)&(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)&(rt0.c1)) WHEN ((rt0.c3)LIKE(rt0.c0)) THEN (~ (rt0.c2)) ELSE rt0.c0 END WHERE (9.00854784E8);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN (~ (vt0.c0)) ELSE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((vt0.c0)+(vt0.c0)))OR(((rt0.c3)/(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) IS FALSE) THEN (~ (vt0.c0)) ELSE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)+(vt0.c0)))OR(((rt0.c3)/(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN (~ (vt0.c0)) ELSE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((vt0.c0)+(vt0.c0)))OR(((rt0.c3)/(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) IS FALSE) THEN (~ (vt0.c0)) ELSE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)+(vt0.c0)))OR(((rt0.c3)/(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN (~ (vt0.c0)) ELSE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((vt0.c0)+(vt0.c0)))OR(((rt0.c3)/(rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY highlight('-1953288379', (- (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c0)>>(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY highlight('-1953288379', (- (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c0)>>(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY highlight('-1953288379', (- (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c0)>>(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY highlight('-1953288379', (- (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c0)>>(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY highlight('-1953288379', (- (vt0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c0)>>(vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)) THEN '-22683641' ELSE ((rt0.c3) IS FALSE) END) ORDER BY (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), (rt0.c0 IN ()), ((rt0.c2)*(rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c2 IN ()))) AND ((((x'') ISNULL), (((rt0.c2, rt0.c3, rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN '260014087' THEN 964544993 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN '1878191578' THEN rt0.c3 END, (rt0.c0 IN ())))), (((((x'62df'))<((rt0.c2)))) BETWEEN ((rt0.c2 IN (rt0.c2, rt0.c2))) AND (rt0.c2 COLLATE RTRIM)) ASC, (((NOT (rt0.c0)))IS(((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)) THEN '-22683641' ELSE ((rt0.c3) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), (rt0.c0 IN ()), ((rt0.c2)*(rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c2 IN ()))) AND ((((x'') ISNULL), (((rt0.c2, rt0.c3, rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN '260014087' THEN 964544993 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN '1878191578' THEN rt0.c3 END, (rt0.c0 IN ())))), (((((x'62df'))<((rt0.c2)))) BETWEEN ((rt0.c2 IN (rt0.c2, rt0.c2))) AND (rt0.c2 COLLATE RTRIM)) ASC, (((NOT (rt0.c0)))IS(((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)) THEN '-22683641' ELSE ((rt0.c3) IS FALSE) END) ORDER BY (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), (rt0.c0 IN ()), ((rt0.c2)*(rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c2 IN ()))) AND ((((x'') ISNULL), (((rt0.c2, rt0.c3, rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN '260014087' THEN 964544993 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN '1878191578' THEN rt0.c3 END, (rt0.c0 IN ())))), (((((x'62df'))<((rt0.c2)))) BETWEEN ((rt0.c2 IN (rt0.c2, rt0.c2))) AND (rt0.c2 COLLATE RTRIM)) ASC, (((NOT (rt0.c0)))IS(((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)) THEN '-22683641' ELSE ((rt0.c3) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), (rt0.c0 IN ()), ((rt0.c2)*(rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c2 IN ()))) AND ((((x'') ISNULL), (((rt0.c2, rt0.c3, rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN '260014087' THEN 964544993 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN '1878191578' THEN rt0.c3 END, (rt0.c0 IN ())))), (((((x'62df'))<((rt0.c2)))) BETWEEN ((rt0.c2 IN (rt0.c2, rt0.c2))) AND (rt0.c2 COLLATE RTRIM)) ASC, (((NOT (rt0.c0)))IS(((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)) THEN '-22683641' ELSE ((rt0.c3) IS FALSE) END) ORDER BY (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), (rt0.c0 IN ()), ((rt0.c2)*(rt0.c1)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c2 IN ()))) AND ((((x'') ISNULL), (((rt0.c2, rt0.c3, rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c0 WHEN '260014087' THEN 964544993 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN '1878191578' THEN rt0.c3 END, (rt0.c0 IN ())))), (((((x'62df'))<((rt0.c2)))) BETWEEN ((rt0.c2 IN (rt0.c2, rt0.c2))) AND (rt0.c2 COLLATE RTRIM)) ASC, (((NOT (rt0.c0)))IS(((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)))) DESC;
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB)) ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((rt0.c0) NOTNULL))) DESC, CASE (rt0.c1 IN ())  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN 'j!' END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((rt0.c0) NOTNULL))) DESC, CASE (rt0.c1 IN ())  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN 'j!' END ASC);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB)) ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((rt0.c0) NOTNULL))) DESC, CASE (rt0.c1 IN ())  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN 'j!' END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((rt0.c0) NOTNULL))) DESC, CASE (rt0.c1 IN ())  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN 'j!' END ASC);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB)) ORDER BY (((((- (rt0.c0)))AND(rt0.c1)))AND(((rt0.c0) NOTNULL))) DESC, CASE (rt0.c1 IN ())  WHEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN 'j!' END ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT NULL, rt0.c1) AS NUMERIC)) ORDER BY (((rt0.c0))=((rt0.c1 COLLATE RTRIM))), (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT NULL, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((rt0.c0))=((rt0.c1 COLLATE RTRIM))), (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT NULL, rt0.c1) AS NUMERIC)) ORDER BY (((rt0.c0))=((rt0.c1 COLLATE RTRIM))), (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT NULL, rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((rt0.c0))=((rt0.c1 COLLATE RTRIM))), (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT NULL, rt0.c1) AS NUMERIC)) ORDER BY (((rt0.c0))=((rt0.c1 COLLATE RTRIM))), (rt0.c1 COLLATE RTRIM IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rtreenode(rt0.c3, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(rt0.c3, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rtreenode(rt0.c3, rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(rt0.c3, rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rtreenode(rt0.c3, rt0.c2) AS NUMERIC));
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('-1730822287')))AND(rt0.c0)))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('-1730822287')))AND(rt0.c0)))>(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('-1730822287')))AND(rt0.c0)))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('-1730822287')))AND(rt0.c0)))>(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR('-1730822287')))AND(rt0.c0)))>(rt0.c3)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0) NOT NULL))AND((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((((rt0.c1)>(vt0.c0)))%('' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)>(vt0.c0)))%('' COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0) NOT NULL))AND((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((((rt0.c1)>(vt0.c0)))%('' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)>(vt0.c0)))%('' COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0) NOT NULL))AND((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((((rt0.c1)>(vt0.c0)))%('' COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)||(rt0.c1)) ELSE ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)||(rt0.c1)) ELSE ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)||(rt0.c1)) ELSE ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)||(rt0.c1)) ELSE ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt0.c0)||(rt0.c1)) ELSE ((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((0.22093796772984298) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-(NULL))) ORDER BY (((((vt0.c0)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN '6239862' THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<((vt0.c0, ((930222780)OR(vt0.c0)), ((vt0.c0)||(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.22093796772984298) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN '6239862' THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<((vt0.c0, ((930222780)OR(vt0.c0)), ((vt0.c0)||(vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE (((((0.22093796772984298) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-(NULL))) ORDER BY (((((vt0.c0)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN '6239862' THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<((vt0.c0, ((930222780)OR(vt0.c0)), ((vt0.c0)||(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.22093796772984298) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN '6239862' THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<((vt0.c0, ((930222780)OR(vt0.c0)), ((vt0.c0)||(vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE (((((0.22093796772984298) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-(NULL))) ORDER BY (((((vt0.c0)/(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN '6239862' THEN vt0.c0 WHEN NULL THEN vt0.c0 END, ((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<((vt0.c0, ((930222780)OR(vt0.c0)), ((vt0.c0)||(vt0.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(x'' AS NUMERIC))AND((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(x'' AS NUMERIC))AND((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(x'' AS NUMERIC))AND((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1))<((rt0.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<((rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1))<((rt0.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c1))<((rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1))<((rt0.c3))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) ORDER BY ((UPPER(DISTINCT rt0.c3)) ISNULL) DESC  NULLS LAST, json(CAST(rt0.c3 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UPPER(DISTINCT rt0.c3)) ISNULL) DESC  NULLS LAST, json(CAST(rt0.c3 AS BLOB)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) ORDER BY ((UPPER(DISTINCT rt0.c3)) ISNULL) DESC  NULLS LAST, json(CAST(rt0.c3 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UPPER(DISTINCT rt0.c3)) ISNULL) DESC  NULLS LAST, json(CAST(rt0.c3 AS BLOB)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM) ORDER BY ((UPPER(DISTINCT rt0.c3)) ISNULL) DESC  NULLS LAST, json(CAST(rt0.c3 AS BLOB)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(-5.14541499E8)))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(-5.14541499E8)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(-5.14541499E8)))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(-5.14541499E8)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(-5.14541499E8)))OR(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c3)), CAST('T9.t)&rး' AS REAL), (- (rt0.c2)))) AND (('-1180063820', rt0.c2, ((rt0.c2)+(rt0.c2)))))) ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c3)), CAST('T9.t)&rး' AS REAL), (- (rt0.c2)))) AND (('-1180063820', rt0.c2, ((rt0.c2)+(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c3)), CAST('T9.t)&rး' AS REAL), (- (rt0.c2)))) AND (('-1180063820', rt0.c2, ((rt0.c2)+(rt0.c2)))))) ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c3)), CAST('T9.t)&rး' AS REAL), (- (rt0.c2)))) AND (('-1180063820', rt0.c2, ((rt0.c2)+(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c3)), CAST('T9.t)&rး' AS REAL), (- (rt0.c2)))) AND (('-1180063820', rt0.c2, ((rt0.c2)+(rt0.c2)))))) ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))<=((CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS REAL)) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(((rt0.c2)&(rt0.c2)))))OR(((((rt0.c3)OR(rt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(((rt0.c2)&(rt0.c2)))))OR(((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(((rt0.c2)&(rt0.c2)))))OR(((((rt0.c3)OR(rt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(((rt0.c2)&(rt0.c2)))))OR(((((rt0.c3)OR(rt0.c2)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(((rt0.c2)&(rt0.c2)))))OR(((((rt0.c3)OR(rt0.c2)))OR(vt0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))GLOB((NOT (vt0.c0)))) WHERE (json_array((+ (rt0.c0)), (rt0.c1 IN ()))) ORDER BY (('-360025518') BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0)<<(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array((+ (rt0.c0)), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))GLOB((NOT (vt0.c0)))) ORDER BY (('-360025518') BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0)<<(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))GLOB((NOT (vt0.c0)))) WHERE (json_array((+ (rt0.c0)), (rt0.c1 IN ()))) ORDER BY (('-360025518') BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0)<<(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array((+ (rt0.c0)), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))GLOB((NOT (vt0.c0)))) ORDER BY (('-360025518') BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0)<<(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))GLOB((NOT (vt0.c0)))) WHERE (json_array((+ (rt0.c0)), (rt0.c1 IN ()))) ORDER BY (('-360025518') BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c0)<<(rt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((((((TRIM(vt0.c0))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1))<((vt0.c0))))))AND(((vt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)LIKE(rt0.c1))))) ORDER BY CASE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))  WHEN rt0.c3 THEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) END ASC, (+ (rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(vt0.c0))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1))<((vt0.c0))))))AND(((vt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))  WHEN rt0.c3 THEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) END ASC, (+ (rt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((((((TRIM(vt0.c0))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1))<((vt0.c0))))))AND(((vt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)LIKE(rt0.c1))))) ORDER BY CASE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))  WHEN rt0.c3 THEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) END ASC, (+ (rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(vt0.c0))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1))<((vt0.c0))))))AND(((vt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))  WHEN rt0.c3 THEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) END ASC, (+ (rt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((((((TRIM(vt0.c0))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1))<((vt0.c0))))))AND(((vt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)LIKE(rt0.c1))))) ORDER BY CASE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c3))  WHEN rt0.c3 THEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)) END ASC, (+ (rt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))|(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))|(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))|(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))|(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))|(CAST(rt0.c0 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c0, rt0.c3, 0xbd43eee))))<=(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c0, rt0.c3, 0xbd43eee))))<=(rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c0, rt0.c3, 0xbd43eee))))<=(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c0, rt0.c3, 0xbd43eee))))<=(rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c1))<=((rt0.c0, rt0.c3, 0xbd43eee))))<=(rt0.c3)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ('{\n*p');
SELECT SUM(count) FROM (SELECT ALL (('{\n*p') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('{\n*p');
SELECT SUM(count) FROM (SELECT ALL (('{\n*p') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('{\n*p');
SELECT * FROM vt0 WHERE (((NULL) ISNULL)) ORDER BY (((+ (vt0.c0)))=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))==((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL) ISNULL)) ORDER BY (((+ (vt0.c0)))=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))==((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL) ISNULL)) ORDER BY (((+ (vt0.c0)))=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((-1785116413) BETWEEN (((rt0.c2)AND(vt0.c0))) AND (((vt0.c0)%(rt0.c0))))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ((((-1785116413) BETWEEN (((rt0.c2)AND(vt0.c0))) AND (((vt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((-1785116413) BETWEEN (((rt0.c2)AND(vt0.c0))) AND (((vt0.c0)%(rt0.c0))))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ((((-1785116413) BETWEEN (((rt0.c2)AND(vt0.c0))) AND (((vt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((-1785116413) BETWEEN (((rt0.c2)AND(vt0.c0))) AND (((vt0.c0)%(rt0.c0))))) ORDER BY rt0.c3 ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((((((-1644636414)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN ('q1') AND (rt0.c2)), ((rt0.c2)<(rt0.c2))))>((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((-1644636414)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN ('q1') AND (rt0.c2)), ((rt0.c2)<(rt0.c2))))>((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((-1644636414)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN ('q1') AND (rt0.c2)), ((rt0.c2)<(rt0.c2))))>((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((-1644636414)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN ('q1') AND (rt0.c2)), ((rt0.c2)<(rt0.c2))))>((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((((-1644636414)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN ('q1') AND (rt0.c2)), ((rt0.c2)<(rt0.c2))))>((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), rt0.c0, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (TRIM(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))>(((((2.60014087E8, 1579086248, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c2))))))) ORDER BY (((rt0.c2 IN ())) IS TRUE)  NULLS FIRST, CAST((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c3, rt0.c3))) AS INTEGER), ((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_USED(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>(((((2.60014087E8, 1579086248, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) IS TRUE)  NULLS FIRST, CAST((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c3, rt0.c3))) AS INTEGER), ((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_USED(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))>(((((2.60014087E8, 1579086248, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c2))))))) ORDER BY (((rt0.c2 IN ())) IS TRUE)  NULLS FIRST, CAST((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c3, rt0.c3))) AS INTEGER), ((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_USED(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>(((((2.60014087E8, 1579086248, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) IS TRUE)  NULLS FIRST, CAST((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c3, rt0.c3))) AS INTEGER), ((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_USED(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))>(((((2.60014087E8, 1579086248, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c2))))))) ORDER BY (((rt0.c2 IN ())) IS TRUE)  NULLS FIRST, CAST((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c2, rt0.c3, rt0.c3))) AS INTEGER), ((((rt0.c1)<<(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_USED(rt0.c0))) DESC;
SELECT ALL * FROM rt0 WHERE (0xf7f8007);
SELECT SUM(count) FROM (SELECT ((0Xf7f8007) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0xf7f8007);
SELECT SUM(count) FROM (SELECT ((0Xf7f8007) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0xf7f8007);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c1)|(vt0.c0)) AS REAL) ASC  NULLS LAST, (('-1231346113') NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1)|(vt0.c0)) AS REAL) ASC  NULLS LAST, (('-1231346113') NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c1)|(vt0.c0)) AS REAL) ASC  NULLS LAST, (('-1231346113') NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1)|(vt0.c0)) AS REAL) ASC  NULLS LAST, (('-1231346113') NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY CAST(((rt0.c1)|(vt0.c0)) AS REAL) ASC  NULLS LAST, (('-1231346113') NOTNULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_quote((('-1053670448') BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((('-1053670448') BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_quote((('-1053670448') BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((('-1053670448') BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_quote((('-1053670448') BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (UNICODE(rt0.c0)) AND (CAST('0.7704954573499714' AS BLOB)))) ORDER BY CASE (((rt0.c3))<((rt0.c1)))  WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (~ (rt0.c1)) END DESC, ((NULL)<(rt0.c2)) COLLATE RTRIM, (((((((rt0.c1))>=((rt0.c1))))AND((~ (rt0.c3)))))AND(((rt0.c1)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (UNICODE(rt0.c0)) AND (CAST('0.7704954573499714' AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3))<((rt0.c1)))  WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (~ (rt0.c1)) END DESC, ((NULL)<(rt0.c2)) COLLATE RTRIM, (((((((rt0.c1))>=((rt0.c1))))AND((~ (rt0.c3)))))AND(((rt0.c1)*(rt0.c1)))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (UNICODE(rt0.c0)) AND (CAST('0.7704954573499714' AS BLOB)))) ORDER BY CASE (((rt0.c3))<((rt0.c1)))  WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (~ (rt0.c1)) END DESC, ((NULL)<(rt0.c2)) COLLATE RTRIM, (((((((rt0.c1))>=((rt0.c1))))AND((~ (rt0.c3)))))AND(((rt0.c1)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (UNICODE(rt0.c0)) AND (CAST('0.7704954573499714' AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3))<((rt0.c1)))  WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (~ (rt0.c1)) END DESC, ((NULL)<(rt0.c2)) COLLATE RTRIM, (((((((rt0.c1))>=((rt0.c1))))AND((~ (rt0.c3)))))AND(((rt0.c1)*(rt0.c1)))));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (UNICODE(rt0.c0)) AND (CAST('0.7704954573499714' AS BLOB)))) ORDER BY CASE (((rt0.c3))<((rt0.c1)))  WHEN ((rt0.c1)GLOB(rt0.c0)) THEN (~ (rt0.c1)) END DESC, ((NULL)<(rt0.c2)) COLLATE RTRIM, (((((((rt0.c1))>=((rt0.c1))))AND((~ (rt0.c3)))))AND(((rt0.c1)*(rt0.c1))));
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(TRIM(rt0.c3))))OR(((rt0.c0)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(TRIM(rt0.c3))))OR(((rt0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(TRIM(rt0.c3))))OR(((rt0.c0)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(TRIM(rt0.c3))))OR(((rt0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(TRIM(rt0.c3))))OR(((rt0.c0)IS NOT(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(0.14977218204113596)))OR(vt0.c0)))AND(vt0.c0)))|(HEX(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(0.14977218204113596)))OR(vt0.c0)))AND(vt0.c0)))|(HEX(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(0.14977218204113596)))OR(vt0.c0)))AND(vt0.c0)))|(HEX(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(0.14977218204113596)))OR(vt0.c0)))AND(vt0.c0)))|(HEX(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(0.14977218204113596)))OR(vt0.c0)))AND(vt0.c0)))|(HEX(vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)<<(rt0.c1)))>=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY ((rt0.c3)>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(rt0.c1)))>=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3)>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)<<(rt0.c1)))>=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY ((rt0.c3)>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(rt0.c1)))>=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3)>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)<<(rt0.c1)))>=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY ((rt0.c3)>=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (LIKELY(DISTINCT rt0.c3)))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (LIKE(rt0.c3, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (LIKE(rt0.c3, rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (LIKELY(DISTINCT rt0.c3)))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (LIKE(rt0.c3, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (LIKE(rt0.c3, rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (LIKELY(DISTINCT rt0.c3)))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (LIKE(rt0.c3, rt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0))))) ORDER BY ((0.008519084511798503)%(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.008519084511798503)%(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0))))) ORDER BY ((0.008519084511798503)%(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.008519084511798503)%(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0))))) ORDER BY ((0.008519084511798503)%(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0X7fffffffffffffff)|(QUOTE(NULL)))) ORDER BY rt0.c1  NULLS FIRST, ((((rt0.c1)=(rt0.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0x7fffffffffffffff)|(QUOTE(NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS FIRST, ((((rt0.c1)=(rt0.c3))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0X7fffffffffffffff)|(QUOTE(NULL)))) ORDER BY rt0.c1  NULLS FIRST, ((((rt0.c1)=(rt0.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0x7fffffffffffffff)|(QUOTE(NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS FIRST, ((((rt0.c1)=(rt0.c3))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0X7fffffffffffffff)|(QUOTE(NULL)))) ORDER BY rt0.c1  NULLS FIRST, ((((rt0.c1)=(rt0.c3))) NOTNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY vt0.c0, (((vt0.c0 IN ()))!=(((((vt0.c0)AND(vt0.c0)))AND('-1738285894'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((vt0.c0 IN ()))!=(((((vt0.c0)AND(vt0.c0)))AND('-1738285894'))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY vt0.c0, (((vt0.c0 IN ()))!=(((((vt0.c0)AND(vt0.c0)))AND('-1738285894'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((vt0.c0 IN ()))!=(((((vt0.c0)AND(vt0.c0)))AND('-1738285894'))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY vt0.c0, (((vt0.c0 IN ()))!=(((((vt0.c0)AND(vt0.c0)))AND('-1738285894'))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (highlight(CAST(vt0.c0 AS REAL), (~ (vt0.c0)), vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN '5_' THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(CAST(vt0.c0 AS REAL), (~ (vt0.c0)), vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN '5_' THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (highlight(CAST(vt0.c0 AS REAL), (~ (vt0.c0)), vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN '5_' THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(CAST(vt0.c0 AS REAL), (~ (vt0.c0)), vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN '5_' THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (highlight(CAST(vt0.c0 AS REAL), (~ (vt0.c0)), vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN '5_' THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) ORDER BY ((((((rt0.c1, vt0.c0, vt0.c0, x'a8bc74cb', rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0)))))<=((((rt0.c1)-(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1, vt0.c0, vt0.c0, x'a8bc74cb', rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0)))))<=((((rt0.c1)-(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) ORDER BY ((((((rt0.c1, vt0.c0, vt0.c0, x'a8bc74cb', rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0)))))<=((((rt0.c1)-(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1, vt0.c0, vt0.c0, x'a8bc74cb', rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0)))))<=((((rt0.c1)-(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) ORDER BY ((((((rt0.c1, vt0.c0, vt0.c0, x'a8bc74cb', rt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c0)))))<=((((rt0.c1)-(rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN x'' THEN (vt0.c0 IN ()) END, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN (vt0.c0 IN ()) END, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN x'' THEN (vt0.c0 IN ()) END, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN (vt0.c0 IN ()) END, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN x'' THEN (vt0.c0 IN ()) END, (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))) ORDER BY ((rt0.c2)<(((rt0.c2) IS FALSE))) DESC  NULLS LAST, ((- (rt0.c3)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)<(((rt0.c2) IS FALSE))) DESC  NULLS LAST, ((- (rt0.c3)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))) ORDER BY ((rt0.c2)<(((rt0.c2) IS FALSE))) DESC  NULLS LAST, ((- (rt0.c3)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)<(((rt0.c2) IS FALSE))) DESC  NULLS LAST, ((- (rt0.c3)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 COLLATE BINARY))<=((vt0.c0 COLLATE RTRIM)))) ORDER BY ((rt0.c2)<(((rt0.c2) IS FALSE))) DESC  NULLS LAST, ((- (rt0.c3)) IN ()) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE ((NOT (((rt0.c2) NOT NULL)))) ORDER BY (~ (rt0.c3));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY (~ (rt0.c3)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE ((NOT (((rt0.c2) NOT NULL)))) ORDER BY (~ (rt0.c3));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY (~ (rt0.c3)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE ((NOT (((rt0.c2) NOT NULL)))) ORDER BY (~ (rt0.c3));
SELECT COUNT(*) FROM vt0, rt0 WHERE (STRFTIME(GLOB(rt0.c1, rt0.c1), json_quote(NULL), (NOT (rt0.c0)))) ORDER BY (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(GLOB(rt0.c1, rt0.c1), json_quote(NULL), (NOT (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (STRFTIME(GLOB(rt0.c1, rt0.c1), json_quote(NULL), (NOT (rt0.c0)))) ORDER BY (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(GLOB(rt0.c1, rt0.c1), json_quote(NULL), (NOT (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (STRFTIME(GLOB(rt0.c1, rt0.c1), json_quote(NULL), (NOT (rt0.c0)))) ORDER BY (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c3) NOT BETWEEN ('()') AND (rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), TRIM(DISTINCT rt0.c1), ABS(DISTINCT rt0.c2))))) ORDER BY rt0.c1 DESC, CAST(rt0.c1 AS NUMERIC), CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c3) NOT BETWEEN ('()') AND (rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), TRIM(DISTINCT rt0.c1), ABS(DISTINCT rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC, CAST(rt0.c1 AS NUMERIC), CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c3) NOT BETWEEN ('()') AND (rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), TRIM(DISTINCT rt0.c1), ABS(DISTINCT rt0.c2))))) ORDER BY rt0.c1 DESC, CAST(rt0.c1 AS NUMERIC), CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c3) NOT BETWEEN ('()') AND (rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), TRIM(DISTINCT rt0.c1), ABS(DISTINCT rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC, CAST(rt0.c1 AS NUMERIC), CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((CAST(rt0.c1 AS REAL), ((rt0.c3) NOT BETWEEN ('()') AND (rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)), TRIM(DISTINCT rt0.c1), ABS(DISTINCT rt0.c2))))) ORDER BY rt0.c1 DESC, CAST(rt0.c1 AS NUMERIC), CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(CAST(rt0.c3 AS BLOB))))AND(((rt0.c0)LIKE(rt0.c1))))) ORDER BY ((rt0.c1) BETWEEN (((rt0.c0) NOTNULL)) AND (7.53452005E8)), ((rt0.c1)<<(((rt0.c1) ISNULL))), (((rt0.c2)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND (((rt0.c3 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(CAST(rt0.c3 AS BLOB))))AND(((rt0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (((rt0.c0) NOTNULL)) AND (7.53452005E8)), ((rt0.c1)<<(((rt0.c1) ISNULL))), (((rt0.c2)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND (((rt0.c3 IN ())))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(CAST(rt0.c3 AS BLOB))))AND(((rt0.c0)LIKE(rt0.c1))))) ORDER BY ((rt0.c1) BETWEEN (((rt0.c0) NOTNULL)) AND (7.53452005E8)), ((rt0.c1)<<(((rt0.c1) ISNULL))), (((rt0.c2)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND (((rt0.c3 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(CAST(rt0.c3 AS BLOB))))AND(((rt0.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (((rt0.c0) NOTNULL)) AND (7.53452005E8)), ((rt0.c1)<<(((rt0.c1) ISNULL))), (((rt0.c2)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND (((rt0.c3 IN ())))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)OR(CAST(rt0.c3 AS BLOB))))AND(((rt0.c0)LIKE(rt0.c1))))) ORDER BY ((rt0.c1) BETWEEN (((rt0.c0) NOTNULL)) AND (7.53452005E8)), ((rt0.c1)<<(((rt0.c1) ISNULL))), (((rt0.c2)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND (((rt0.c3 IN ())))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0))))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c0))))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0))))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c0))))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0))))<=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN x'' ELSE (~ (rt0.c2)) END) ORDER BY (((- (rt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN x'' ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c0))) NOT NULL) DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN x'' ELSE (~ (rt0.c2)) END) ORDER BY (((- (rt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN x'' ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c0))) NOT NULL) DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN x'' ELSE (~ (rt0.c2)) END) ORDER BY (((- (rt0.c0))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)IS(rt0.c1))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c3) BETWEEN (x'788e') AND (0.6902458002764191)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)IS(rt0.c1))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c3) BETWEEN (x'788e') AND (0.6902458002764191))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)IS(rt0.c1))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c3) BETWEEN (x'788e') AND (0.6902458002764191)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)IS(rt0.c1))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c3) BETWEEN (x'788e') AND (0.6902458002764191))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)IS(rt0.c1))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (((rt0.c3) BETWEEN (x'788e') AND (0.6902458002764191)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.5813877113328362);
SELECT SUM(count) FROM (SELECT ALL ((0.5813877113328362) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.5813877113328362);
SELECT SUM(count) FROM (SELECT ALL ((0.5813877113328362) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.5813877113328362);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY ((((rt0.c1)>=(rt0.c0)))IS NOT(CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)>=(rt0.c0)))IS NOT(CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY ((((rt0.c1)>=(rt0.c0)))IS NOT(CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)>=(rt0.c0)))IS NOT(CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY ((((rt0.c1)>=(rt0.c0)))IS NOT(CASE WHEN rt0.c0 THEN rt0.c3 END)) ASC;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((((((((((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN (NULL)))))OR((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c3))))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END)))OR(((rt0.c3)||(rt0.c3)))))OR(CASE rt0.c1  WHEN 0Xfffffffffd9821d6 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))AND(vt0.c0))) ORDER BY ((vt0.c0)<<(((rt0.c0)OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN (NULL)))))OR((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c3))))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END)))OR(((rt0.c3)||(rt0.c3)))))OR(CASE rt0.c1  WHEN 0Xfffffffffd9821d6 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))AND(vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)<<(((rt0.c0)OR(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((((((((((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN (NULL)))))OR((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c3))))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END)))OR(((rt0.c3)||(rt0.c3)))))OR(CASE rt0.c1  WHEN 0Xfffffffffd9821d6 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))AND(vt0.c0))) ORDER BY ((vt0.c0)<<(((rt0.c0)OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN (NULL)))))OR((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c3))))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END)))OR(((rt0.c3)||(rt0.c3)))))OR(CASE rt0.c1  WHEN 0Xfffffffffd9821d6 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))AND(vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)<<(((rt0.c0)OR(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (((((((((((((rt0.c2 COLLATE RTRIM)OR((rt0.c2 IN (NULL)))))OR((((rt0.c1, rt0.c3, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c3))))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END)))OR(((rt0.c3)||(rt0.c3)))))OR(CASE rt0.c1  WHEN 0Xfffffffffd9821d6 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))AND(vt0.c0))) ORDER BY ((vt0.c0)<<(((rt0.c0)OR(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) ORDER BY (- (((1381834835)!=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((1381834835)!=(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) ORDER BY (- (((1381834835)!=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((1381834835)!=(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ())) ORDER BY (- (((1381834835)!=(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))<('jo'))) ORDER BY ((((rt0.c2) IS FALSE))==(CASE x'5c72'  WHEN rt0.c1 THEN rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(rt0.c1)))<('jo'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))=(CASE x'5c72'  WHEN rt0.c1 THEN rt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))<('jo'))) ORDER BY ((((rt0.c2) IS FALSE))==(CASE x'5c72'  WHEN rt0.c1 THEN rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(rt0.c1)))<('jo'))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))=(CASE x'5c72'  WHEN rt0.c1 THEN rt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))<('jo'))) ORDER BY ((((rt0.c2) IS FALSE))==(CASE x'5c72'  WHEN rt0.c1 THEN rt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) IN ())) ORDER BY ((rt0.c1)|(0.5117953163104513)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)|(0.5117953163104513)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) IN ())) ORDER BY ((rt0.c1)|(0.5117953163104513)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)|(0.5117953163104513)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) IN ())) ORDER BY ((rt0.c1)|(0.5117953163104513)) COLLATE BINARY;
SELECT * FROM rt0 WHERE ((UNLIKELY(DISTINCT rt0.c2) IN ())) ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c3))  WHEN (((rt0.c2))<=((rt0.c2))) THEN rt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c3))  WHEN (((rt0.c2))<=((rt0.c2))) THEN rt0.c0 END  NULLS FIRST);
SELECT * FROM rt0 WHERE ((UNLIKELY(DISTINCT rt0.c2) IN ())) ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c3))  WHEN (((rt0.c2))<=((rt0.c2))) THEN rt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c3))  WHEN (((rt0.c2))<=((rt0.c2))) THEN rt0.c0 END  NULLS FIRST);
SELECT * FROM rt0 WHERE ((UNLIKELY(DISTINCT rt0.c2) IN ())) ORDER BY CASE ((((rt0.c1)OR(NULL)))AND(rt0.c3))  WHEN (((rt0.c2))<=((rt0.c2))) THEN rt0.c0 END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND('1343591696')))AND(rt0.c0)))||(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(NULL)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND('1343591696')))AND(rt0.c0)))||(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND('1343591696')))AND(rt0.c0)))||(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(NULL)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND('1343591696')))AND(rt0.c0)))||(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(NULL)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND('1343591696')))AND(rt0.c0)))||(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))OR(NULL)))OR(rt0.c3)))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END)))AND(((rt0.c0) NOTNULL)))) ORDER BY json_insert(rt0.c1, ((rt0.c2)>(rt0.c3)), (((rt0.c2))<=((rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END)))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY json_insert(rt0.c1, ((rt0.c2)>(rt0.c3)), (((rt0.c2))<=((rt0.c2)))) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END)))AND(((rt0.c0) NOTNULL)))) ORDER BY json_insert(rt0.c1, ((rt0.c2)>(rt0.c3)), (((rt0.c2))<=((rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END)))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY json_insert(rt0.c1, ((rt0.c2)>(rt0.c3)), (((rt0.c2))<=((rt0.c2)))) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END)))AND(((rt0.c0) NOTNULL)))) ORDER BY json_insert(rt0.c1, ((rt0.c2)>(rt0.c3)), (((rt0.c2))<=((rt0.c2)))) ASC;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 185284892 END)<>(TRIM(vt0.c0)))) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 185284892 END)!=(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 185284892 END)<>(TRIM(vt0.c0)))) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 185284892 END)!=(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 185284892 END)<>(TRIM(vt0.c0)))) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS INTEGER)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS INTEGER)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS INTEGER)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT -160397631 COLLATE BINARY, rt0.c1)) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT -160397631 COLLATE BINARY, rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT -160397631 COLLATE BINARY, rt0.c1)) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT -160397631 COLLATE BINARY, rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT -160397631 COLLATE BINARY, rt0.c1)) ORDER BY CAST(((rt0.c1) ISNULL) AS NUMERIC) ASC;
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c3))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c3))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c2) ISNULL))));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c3))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c3))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c2) ISNULL))));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ((~ (rt0.c3))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (((rt0.c2) ISNULL)));
SELECT * FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c1) NOT NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c1) NOT NULL)));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (rt0.c0 IN ()) COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((x'') IS FALSE) IN ()), ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((9.59882508E8)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((x'') IS FALSE) IN ()), ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((9.59882508E8)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((x'') IS FALSE) IN ()), ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((9.59882508E8)/(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((x'') IS FALSE) IN ()), ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((9.59882508E8)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY (((x'') IS FALSE) IN ()), ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((9.59882508E8)/(vt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN '70710143' ELSE rt0.c0 END AS INTEGER)  NULLS LAST, CAST(((rt0.c1)<(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS INTEGER)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN '70710143' ELSE rt0.c0 END AS INTEGER)  NULLS LAST, CAST(((rt0.c1)<(vt0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN '70710143' ELSE rt0.c0 END AS INTEGER)  NULLS LAST, CAST(((rt0.c1)<(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS INTEGER)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN '70710143' ELSE rt0.c0 END AS INTEGER)  NULLS LAST, CAST(((rt0.c1)<(vt0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))<((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY CAST(CASE WHEN vt0.c0 THEN '70710143' ELSE rt0.c0 END AS INTEGER)  NULLS LAST, CAST(((rt0.c1)<(vt0.c0)) AS REAL);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((+ (vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)));
SELECT * FROM rt0, vt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((rt0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'4eeb')) AND ((vt0.c0))))GLOB(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((x'4eeb')) AND ((vt0.c0))))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'4eeb')) AND ((vt0.c0))))GLOB(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((x'4eeb')) AND ((vt0.c0))))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'4eeb')) AND ((vt0.c0))))GLOB(vt0.c0)));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE NOCASE WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE NOCASE WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) COLLATE NOCASE WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY ((((rt0.c3 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))<>((vt0.c0 COLLATE NOCASE, ((rt0.c2)<<(rt0.c1)), (rt0.c0 IN (NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))<>((vt0.c0 COLLATE NOCASE, ((rt0.c2)<<(rt0.c1)), (rt0.c0 IN (NULL)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY ((((rt0.c3 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))<>((vt0.c0 COLLATE NOCASE, ((rt0.c2)<<(rt0.c1)), (rt0.c0 IN (NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))<>((vt0.c0 COLLATE NOCASE, ((rt0.c2)<<(rt0.c1)), (rt0.c0 IN (NULL)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY ((((rt0.c3 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))<>((vt0.c0 COLLATE NOCASE, ((rt0.c2)<<(rt0.c1)), (rt0.c0 IN (NULL)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(x'7c01')) DESC  NULLS FIRST, vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(x'7c01')) DESC  NULLS FIRST, vt0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(x'7c01')) DESC  NULLS FIRST, vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(x'7c01')) DESC  NULLS FIRST, vt0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(x'7c01')) DESC  NULLS FIRST, vt0.c0 COLLATE BINARY;
SELECT * FROM vt0 WHERE (LOWER((((vt0.c0))!=((vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((vt0.c0))<>((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (LOWER((((vt0.c0))!=((vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((vt0.c0))<>((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (LOWER((((vt0.c0))!=((vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))|(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0)))|(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))|(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0)))|(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)LIKE(rt0.c0)))|(((rt0.c3) ISNULL))));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0), 0.48917825593256226)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0), 0.48917825593256226)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0), 0.48917825593256226)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0), 0.48917825593256226)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT TRIM(DISTINCT vt0.c0, vt0.c0), 0.48917825593256226)) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END)AND((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR('1877618665'))) ORDER BY (((rt0.c3)) BETWEEN ((COALESCE(rt0.c3, x'', rt0.c3, vt0.c0, rt0.c1, 0xffffffff904e80e9))) AND ((CASE WHEN rt0.c3 THEN vt0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END)AND((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR('1877618665'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c3)) BETWEEN ((COALESCE(rt0.c3, x'', rt0.c3, vt0.c0, rt0.c1, 0xffffffff904e80e9))) AND ((CASE WHEN rt0.c3 THEN vt0.c0 END))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END)AND((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR('1877618665'))) ORDER BY (((rt0.c3)) BETWEEN ((COALESCE(rt0.c3, x'', rt0.c3, vt0.c0, rt0.c1, 0xffffffff904e80e9))) AND ((CASE WHEN rt0.c3 THEN vt0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END)AND((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR('1877618665'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c3)) BETWEEN ((COALESCE(rt0.c3, x'', rt0.c3, vt0.c0, rt0.c1, 0xffffffff904e80e9))) AND ((CASE WHEN rt0.c3 THEN vt0.c0 END))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END)AND((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR('1877618665'))) ORDER BY (((rt0.c3)) BETWEEN ((COALESCE(rt0.c3, x'', rt0.c3, vt0.c0, rt0.c1, 0xffffffff904e80e9))) AND ((CASE WHEN rt0.c3 THEN vt0.c0 END))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC;
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) IS FALSE))<(x'ba84')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<(x'ba84'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) IS FALSE))<(x'ba84')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))<(x'ba84'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c0) IS FALSE))<(x'ba84')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) ORDER BY (NOT (((rt0.c3)>>(rt0.c2)))), ((((NULL, vt0.c0, rt0.c0)) BETWEEN ((x'', rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) IN ()) ASC  NULLS LAST, ((((((rt0.c0)>(x'89dc')))AND(((rt0.c1) IS TRUE))))AND('-837071511')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c3)>>(rt0.c2)))), ((((NULL, vt0.c0, rt0.c0)) BETWEEN ((x'', rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) IN ()) ASC  NULLS LAST, ((((((rt0.c0)>(x'89dc')))AND(((rt0.c1) IS TRUE))))AND('-837071511')) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) ORDER BY (NOT (((rt0.c3)>>(rt0.c2)))), ((((NULL, vt0.c0, rt0.c0)) BETWEEN ((x'', rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) IN ()) ASC  NULLS LAST, ((((((rt0.c0)>(x'89dc')))AND(((rt0.c1) IS TRUE))))AND('-837071511')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((rt0.c3)>>(rt0.c2)))), ((((NULL, vt0.c0, rt0.c0)) BETWEEN ((x'', rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) IN ()) ASC  NULLS LAST, ((((((rt0.c0)>(x'89dc')))AND(((rt0.c1) IS TRUE))))AND('-837071511')) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) ORDER BY (NOT (((rt0.c3)>>(rt0.c2)))), ((((NULL, vt0.c0, rt0.c0)) BETWEEN ((x'', rt0.c3, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))) IN ()) ASC  NULLS LAST, ((((((rt0.c0)>(x'89dc')))AND(((rt0.c1) IS TRUE))))AND('-837071511')) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND((rt0.c3 IN (NULL)))))OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c3)))))) ORDER BY (((CAST(rt0.c3 AS TEXT)))==((((rt0.c0) NOTNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE BINARY)AND((rt0.c3 IN (NULL)))))OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c3 AS TEXT)))==((((rt0.c0) NOTNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND((rt0.c3 IN (NULL)))))OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c3)))))) ORDER BY (((CAST(rt0.c3 AS TEXT)))==((((rt0.c0) NOTNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE BINARY)AND((rt0.c3 IN (NULL)))))OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c3 AS TEXT)))==((((rt0.c0) NOTNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND((rt0.c3 IN (NULL)))))OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c3)))))) ORDER BY (((CAST(rt0.c3 AS TEXT)))==((((rt0.c0) NOTNULL)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, (NOT (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, (NOT (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, (NOT (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, (NOT (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (+ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, (NOT (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (-942998664);
SELECT SUM(count) FROM (SELECT ((-942998664) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-942998664);
SELECT SUM(count) FROM (SELECT ((-942998664) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-942998664);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))OR(0.9165921410373445)) DESC  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))!=(((vt0.c0)-('-578140228'))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))OR(0.9165921410373445)) DESC  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))<>(((vt0.c0)-('-578140228')))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))OR(0.9165921410373445)) DESC  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))!=(((vt0.c0)-('-578140228'))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))OR(0.9165921410373445)) DESC  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))<>(((vt0.c0)-('-578140228')))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))OR(0.9165921410373445)) DESC  NULLS FIRST, (((vt0.c0 IN (vt0.c0)))!=(((vt0.c0)-('-578140228'))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) DESC  NULLS FIRST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) DESC;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN -9223372036854775808 THEN vt0.c0 END THEN x'f924' COLLATE NOCASE ELSE rt0.c3 END WHERE ((((rt0.c3) ISNULL) IN (vt0.c0))) ORDER BY ((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3) ISNULL) IN (vt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN -9223372036854775808 THEN vt0.c0 END THEN x'f924' COLLATE NOCASE ELSE rt0.c3 END ORDER BY ((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN -9223372036854775808 THEN vt0.c0 END THEN x'f924' COLLATE NOCASE ELSE rt0.c3 END WHERE ((((rt0.c3) ISNULL) IN (vt0.c0))) ORDER BY ((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3) ISNULL) IN (vt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN -9223372036854775808 THEN vt0.c0 END THEN x'f924' COLLATE NOCASE ELSE rt0.c3 END ORDER BY ((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN -9223372036854775808 THEN vt0.c0 END THEN x'f924' COLLATE NOCASE ELSE rt0.c3 END WHERE ((((rt0.c3) ISNULL) IN (vt0.c0))) ORDER BY ((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((0.9229699425443189)&(rt0.c3))) IS TRUE)) ORDER BY ((((((((vt0.c0)AND(json_patch(rt0.c3, rt0.c3))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOTNULL))))AND(TYPEOF(rt0.c3))) ASC, (((~ (rt0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9229699425443189)&(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((vt0.c0)AND(json_patch(rt0.c3, rt0.c3))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOTNULL))))AND(TYPEOF(rt0.c3))) ASC, (((~ (rt0.c2))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((0.9229699425443189)&(rt0.c3))) IS TRUE)) ORDER BY ((((((((vt0.c0)AND(json_patch(rt0.c3, rt0.c3))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOTNULL))))AND(TYPEOF(rt0.c3))) ASC, (((~ (rt0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9229699425443189)&(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((vt0.c0)AND(json_patch(rt0.c3, rt0.c3))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOTNULL))))AND(TYPEOF(rt0.c3))) ASC, (((~ (rt0.c2))) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((0.9229699425443189)&(rt0.c3))) IS TRUE)) ORDER BY ((((((((vt0.c0)AND(json_patch(rt0.c3, rt0.c3))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOTNULL))))AND(TYPEOF(rt0.c3))) ASC, (((~ (rt0.c2))) IS FALSE) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (CAST((('HrbG''dwO')||(rt0.c0)) AS TEXT)) ORDER BY '1343591696'  NULLS LAST, ABS(DISTINCT (((1627785652)) BETWEEN ((rt0.c1)) AND ((NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((('HrbG''dwO')||(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1343591696'  NULLS LAST, ABS(DISTINCT (((1627785652)) BETWEEN ((rt0.c1)) AND ((NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((('HrbG''dwO')||(rt0.c0)) AS TEXT)) ORDER BY '1343591696'  NULLS LAST, ABS(DISTINCT (((1627785652)) BETWEEN ((rt0.c1)) AND ((NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((('HrbG''dwO')||(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '1343591696'  NULLS LAST, ABS(DISTINCT (((1627785652)) BETWEEN ((rt0.c1)) AND ((NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((('HrbG''dwO')||(rt0.c0)) AS TEXT)) ORDER BY '1343591696'  NULLS LAST, ABS(DISTINCT (((1627785652)) BETWEEN ((rt0.c1)) AND ((NULL)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (TRIM(CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))) ORDER BY ((((rt0.c2)&(rt0.c1)))>(1488367485)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c1)))>(1488367485)) ASC);
SELECT * FROM rt0 WHERE (TRIM(CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))) ORDER BY ((((rt0.c2)&(rt0.c1)))>(1488367485)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c1)))>(1488367485)) ASC);
SELECT * FROM rt0 WHERE (TRIM(CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL))) ORDER BY ((((rt0.c2)&(rt0.c1)))>(1488367485)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR(((rt0.c1)AND(rt0.c1)))))OR(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS FALSE))OR(((rt0.c1)AND(rt0.c1)))))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR(((rt0.c1)AND(rt0.c1)))))OR(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS FALSE))OR(((rt0.c1)AND(rt0.c1)))))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR(((rt0.c1)AND(rt0.c1)))))OR(rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))+(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c1, vt0.c0))=((vt0.c0, -1.053670448E9, rt0.c1))) COLLATE BINARY) ORDER BY (((- (vt0.c0)))>>(((rt0.c3)AND(vt0.c0))))  NULLS FIRST, (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, vt0.c0))==((vt0.c0, -1.053670448E9, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (vt0.c0)))>>(((rt0.c3)AND(vt0.c0))))  NULLS FIRST, (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c1, vt0.c0))=((vt0.c0, -1.053670448E9, rt0.c1))) COLLATE BINARY) ORDER BY (((- (vt0.c0)))>>(((rt0.c3)AND(vt0.c0))))  NULLS FIRST, (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, vt0.c0))==((vt0.c0, -1.053670448E9, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (vt0.c0)))>>(((rt0.c3)AND(vt0.c0))))  NULLS FIRST, (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c1, vt0.c0))=((vt0.c0, -1.053670448E9, rt0.c1))) COLLATE BINARY) ORDER BY (((- (vt0.c0)))>>(((rt0.c3)AND(vt0.c0))))  NULLS FIRST, (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c0)&(rt0.c2)), ((rt0.c1)AND(rt0.c3))))=(((+ (vt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END, (((vt0.c0))<=((vt0.c0)))))) WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY CASE rt0.c1  WHEN (+ (rt0.c3)) THEN CAST(0.2198903361535327 AS BLOB) WHEN (- (rt0.c3)) THEN LIKE(vt0.c0, rt0.c3) WHEN ABS(rt0.c3) THEN vt0.c0 COLLATE RTRIM END, 0.31074523072731863 ASC, (- (((rt0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c0)&(rt0.c2)), ((rt0.c1)AND(rt0.c3))))==(((+ (vt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END, (((vt0.c0))<=((vt0.c0)))))) ORDER BY CASE rt0.c1  WHEN (+ (rt0.c3)) THEN CAST(0.2198903361535327 AS BLOB) WHEN (- (rt0.c3)) THEN LIKE(vt0.c0, rt0.c3) WHEN ABS(rt0.c3) THEN vt0.c0 COLLATE RTRIM END, 0.31074523072731863 ASC, (- (((rt0.c3) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c0)&(rt0.c2)), ((rt0.c1)AND(rt0.c3))))=(((+ (vt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END, (((vt0.c0))<=((vt0.c0)))))) WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY CASE rt0.c1  WHEN (+ (rt0.c3)) THEN CAST(0.2198903361535327 AS BLOB) WHEN (- (rt0.c3)) THEN LIKE(vt0.c0, rt0.c3) WHEN ABS(rt0.c3) THEN vt0.c0 COLLATE RTRIM END, 0.31074523072731863 ASC, (- (((rt0.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c0)&(rt0.c2)), ((rt0.c1)AND(rt0.c3))))==(((+ (vt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END, (((vt0.c0))<=((vt0.c0)))))) ORDER BY CASE rt0.c1  WHEN (+ (rt0.c3)) THEN CAST(0.2198903361535327 AS BLOB) WHEN (- (rt0.c3)) THEN LIKE(vt0.c0, rt0.c3) WHEN ABS(rt0.c3) THEN vt0.c0 COLLATE RTRIM END, 0.31074523072731863 ASC, (- (((rt0.c3) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c0)&(rt0.c2)), ((rt0.c1)AND(rt0.c3))))=(((+ (vt0.c0)), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END, (((vt0.c0))<=((vt0.c0)))))) WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY CASE rt0.c1  WHEN (+ (rt0.c3)) THEN CAST(0.2198903361535327 AS BLOB) WHEN (- (rt0.c3)) THEN LIKE(vt0.c0, rt0.c3) WHEN ABS(rt0.c3) THEN vt0.c0 COLLATE RTRIM END, 0.31074523072731863 ASC, (- (((rt0.c3) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((x'')AND(CAST(NULL AS INTEGER))))AND((~ (rt0.c3)))))AND(NULL)))OR(((rt0.c2) IS TRUE))))AND(x'b72f')))OR((rt0.c1 IN (rt0.c0))))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c3)>>(rt0.c0)), CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 'x\{)(' ELSE rt0.c1 END)) AND ((0.14377329137904715, (NOT (rt0.c1)), (~ (rt0.c3))))) DESC  NULLS LAST, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0)>=(rt0.c0)) WHEN ((rt0.c0) NOTNULL) THEN (NOT (rt0.c3)) ELSE ((rt0.c2) IS FALSE) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((x'')AND(CAST(NULL AS INTEGER))))AND((~ (rt0.c3)))))AND(NULL)))OR(((rt0.c2) IS TRUE))))AND(x'b72f')))OR((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c3)>>(rt0.c0)), CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 'x\{)(' ELSE rt0.c1 END)) AND ((0.14377329137904715, (NOT (rt0.c1)), (~ (rt0.c3))))) DESC  NULLS LAST, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0)>=(rt0.c0)) WHEN ((rt0.c0) NOTNULL) THEN (NOT (rt0.c3)) ELSE ((rt0.c2) IS FALSE) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((x'')AND(CAST(NULL AS INTEGER))))AND((~ (rt0.c3)))))AND(NULL)))OR(((rt0.c2) IS TRUE))))AND(x'b72f')))OR((rt0.c1 IN (rt0.c0))))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c3)>>(rt0.c0)), CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 'x\{)(' ELSE rt0.c1 END)) AND ((0.14377329137904715, (NOT (rt0.c1)), (~ (rt0.c3))))) DESC  NULLS LAST, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0)>=(rt0.c0)) WHEN ((rt0.c0) NOTNULL) THEN (NOT (rt0.c3)) ELSE ((rt0.c2) IS FALSE) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((x'')AND(CAST(NULL AS INTEGER))))AND((~ (rt0.c3)))))AND(NULL)))OR(((rt0.c2) IS TRUE))))AND(x'b72f')))OR((rt0.c1 IN (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c3)>>(rt0.c0)), CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 'x\{)(' ELSE rt0.c1 END)) AND ((0.14377329137904715, (NOT (rt0.c1)), (~ (rt0.c3))))) DESC  NULLS LAST, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0)>=(rt0.c0)) WHEN ((rt0.c0) NOTNULL) THEN (NOT (rt0.c3)) ELSE ((rt0.c2) IS FALSE) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((x'')AND(CAST(NULL AS INTEGER))))AND((~ (rt0.c3)))))AND(NULL)))OR(((rt0.c2) IS TRUE))))AND(x'b72f')))OR((rt0.c1 IN (rt0.c0))))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST, (((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((rt0.c3)>>(rt0.c0)), CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN 'x\{)(' ELSE rt0.c1 END)) AND ((0.14377329137904715, (NOT (rt0.c1)), (~ (rt0.c3))))) DESC  NULLS LAST, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c0)>=(rt0.c0)) WHEN ((rt0.c0) NOTNULL) THEN (NOT (rt0.c3)) ELSE ((rt0.c2) IS FALSE) END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN ((((rt0.c2))==((0.979743929740471)))) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN ((((rt0.c2))=((0.979743929740471)))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN ((((rt0.c2))==((0.979743929740471)))) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN ((((rt0.c2))=((0.979743929740471)))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN ((((rt0.c2))==((0.979743929740471)))) AND (rt0.c2 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(((vt0.c0)=(vt0.c0)))))AND(0.09389085801529118)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) ISNULL))OR(((vt0.c0)==(vt0.c0)))))AND(0.09389085801529118))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(((vt0.c0)=(vt0.c0)))))AND(0.09389085801529118)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) ISNULL))OR(((vt0.c0)==(vt0.c0)))))AND(0.09389085801529118))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(((vt0.c0)=(vt0.c0)))))AND(0.09389085801529118)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c2 AS TEXT), ((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c0)GLOB(x''))) AND ((((rt0.c3, 0x766d1733, rt0.c2))<((rt0.c2, vt0.c0, 'q-.')))))  NULLS FIRST, ((((rt0.c3) IS TRUE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 AS TEXT), ((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c0)GLOB(x''))) AND ((((rt0.c3, 0X766d1733, rt0.c2))<((rt0.c2, vt0.c0, 'q-.')))))  NULLS FIRST, ((((rt0.c3) IS TRUE)) IS TRUE));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c2 AS TEXT), ((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c0)GLOB(x''))) AND ((((rt0.c3, 0x766d1733, rt0.c2))<((rt0.c2, vt0.c0, 'q-.')))))  NULLS FIRST, ((((rt0.c3) IS TRUE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(rt0.c2 AS TEXT), ((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c0)GLOB(x''))) AND ((((rt0.c3, 0X766d1733, rt0.c2))<((rt0.c2, vt0.c0, 'q-.')))))  NULLS FIRST, ((((rt0.c3) IS TRUE)) IS TRUE));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c2 AS TEXT), ((CASE WHEN rt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c0)GLOB(x''))) AND ((((rt0.c3, 0x766d1733, rt0.c2))<((rt0.c2, vt0.c0, 'q-.')))))  NULLS FIRST, ((((rt0.c3) IS TRUE)) IS TRUE);
SELECT * FROM vt0 WHERE ((+ ('0.5117953163104513')));
SELECT SUM(count) FROM (SELECT (((+ ('0.5117953163104513'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ('0.5117953163104513')));
SELECT SUM(count) FROM (SELECT (((+ ('0.5117953163104513'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ('0.5117953163104513')));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((NULL) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))OR('-550893834'))) ORDER BY json_remove(((rt0.c1)AND(NULL)), (rt0.c3 IN ()), CAST(rt0.c0 AS INTEGER), ((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))OR('-550893834'))) IS TRUE)  as count FROM rt0 ORDER BY json_remove(((rt0.c1)AND(NULL)), (rt0.c3 IN ()), CAST(rt0.c0 AS INTEGER), ((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((NULL) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))OR('-550893834'))) ORDER BY json_remove(((rt0.c1)AND(NULL)), (rt0.c3 IN ()), CAST(rt0.c0 AS INTEGER), ((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))OR('-550893834'))) IS TRUE)  as count FROM rt0 ORDER BY json_remove(((rt0.c1)AND(NULL)), (rt0.c3 IN ()), CAST(rt0.c0 AS INTEGER), ((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) DESC);
SELECT ALL * FROM vt0 WHERE ((('')&(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('')&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('')&(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('')&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('')&(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (~ ((0.2797831935007826 IN ()))) WHERE (0.9000400715126453) ORDER BY rt0.c1, (-8.37071511E8 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9000400715126453) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ ((0.2797831935007826 IN ()))) ORDER BY rt0.c1, (-8.37071511E8 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (~ ((0.2797831935007826 IN ()))) WHERE (0.9000400715126453) ORDER BY rt0.c1, (-8.37071511E8 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9000400715126453) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ ((0.2797831935007826 IN ()))) ORDER BY rt0.c1, (-8.37071511E8 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (~ ((0.2797831935007826 IN ()))) WHERE (0.9000400715126453) ORDER BY rt0.c1, (-8.37071511E8 COLLATE BINARY IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY '527947514' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY '527947514' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY '527947514' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY '527947514' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY '527947514' ASC  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((UNLIKELY(vt0.c0)))) WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY (((((((vt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, 0.11945064208074108, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c3) IS TRUE))))OR(((vt0.c0)/(rt0.c3)))) ASC  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((UNLIKELY(vt0.c0)))) ORDER BY (((((((vt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, 0.11945064208074108, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c3) IS TRUE))))OR(((vt0.c0)/(rt0.c3)))) ASC  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((UNLIKELY(vt0.c0)))) WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY (((((((vt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, 0.11945064208074108, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c3) IS TRUE))))OR(((vt0.c0)/(rt0.c3)))) ASC  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((UNLIKELY(vt0.c0)))) ORDER BY (((((((vt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, 0.11945064208074108, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c3) IS TRUE))))OR(((vt0.c0)/(rt0.c3)))) ASC  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 END)) AND ((UNLIKELY(vt0.c0)))) WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c1)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY (((((((vt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, 0.11945064208074108, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c3) IS TRUE))))OR(((vt0.c0)/(rt0.c3)))) ASC  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)IS(((rt0.c3)&(rt0.c1))))) ORDER BY CAST('' AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(((rt0.c3)&(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST('' AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)IS(((rt0.c3)&(rt0.c1))))) ORDER BY CAST('' AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(((rt0.c3)&(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST('' AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)IS(((rt0.c3)&(rt0.c1))))) ORDER BY CAST('' AS TEXT)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1)&(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)&(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)&(rt0.c2 COLLATE RTRIM)));
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c3)AND(rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c3) NOTNULL)) AND (-1.231346113E9)) DESC, LENGTH(((rt0.c2) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c3) NOTNULL)) AND (-1.231346113E9)) DESC, LENGTH(((rt0.c2) NOT NULL)) DESC);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c3)AND(rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c3) NOTNULL)) AND (-1.231346113E9)) DESC, LENGTH(((rt0.c2) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)AND(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c3) NOTNULL)) AND (-1.231346113E9)) DESC, LENGTH(((rt0.c2) NOT NULL)) DESC);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c3)AND(rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) BETWEEN (((rt0.c3) NOTNULL)) AND (-1.231346113E9)) DESC, LENGTH(((rt0.c2) NOT NULL)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST((((('-1730822287')OR(vt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((((('-1730822287')OR(vt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST((((('-1730822287')OR(vt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((((('-1730822287')OR(vt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST((((('-1730822287')OR(vt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))=(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))=(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))=(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))=(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))=(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(vt0.c0 COLLATE RTRIM)) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(vt0.c0 COLLATE RTRIM)) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(vt0.c0 COLLATE RTRIM)) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CASE vt0.c0  WHEN rt0.c1 THEN 0X61cd0c59 ELSE ((x'9710')OR(vt0.c0)) END) ORDER BY ((((rt0.c0) NOTNULL))&('?ሆ짏'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN rt0.c1 THEN 0x61cd0c59 ELSE ((x'9710')OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0) NOTNULL))&('?ሆ짏'))  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CASE vt0.c0  WHEN rt0.c1 THEN 0X61cd0c59 ELSE ((x'9710')OR(vt0.c0)) END) ORDER BY ((((rt0.c0) NOTNULL))&('?ሆ짏'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN rt0.c1 THEN 0x61cd0c59 ELSE ((x'9710')OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0) NOTNULL))&('?ሆ짏'))  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CASE vt0.c0  WHEN rt0.c1 THEN 0X61cd0c59 ELSE ((x'9710')OR(vt0.c0)) END) ORDER BY ((((rt0.c0) NOTNULL))&('?ሆ짏'))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((('0.09276592421470475'))<>((rt0.c3)))) BETWEEN (json_array_length(rt0.c2)) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('0.09276592421470475'))<>((rt0.c3)))) BETWEEN (json_array_length(rt0.c2)) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((('0.09276592421470475'))<>((rt0.c3)))) BETWEEN (json_array_length(rt0.c2)) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('0.09276592421470475'))<>((rt0.c3)))) BETWEEN (json_array_length(rt0.c2)) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((('0.09276592421470475'))<>((rt0.c3)))) BETWEEN (json_array_length(rt0.c2)) AND ((~ (rt0.c0)))));
SELECT * FROM rt0 WHERE (((highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c3))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((rt0.c3) IS TRUE) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c3))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) IS TRUE) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c3))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((rt0.c3) IS TRUE) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c0, rt0.c1, rt0.c1, rt0.c3))<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) IS TRUE) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN ((((vt0.c0))>((vt0.c0)))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN ((((vt0.c0))>((vt0.c0)))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) IN ((((vt0.c0))>((vt0.c0)))))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY;
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) ORDER BY rt0.c2;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL))<=((((vt0.c0)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL))<=((((vt0.c0)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL))<=((((vt0.c0)>=(vt0.c0))))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.314382671587326 ELSE vt0.c0 END)/(NULL)), ((CAST(rt0.c0 AS BLOB)) ISNULL)  NULLS LAST, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.314382671587326 ELSE vt0.c0 END)/(NULL)), ((CAST(rt0.c0 AS BLOB)) ISNULL)  NULLS LAST, rt0.c3);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.314382671587326 ELSE vt0.c0 END)/(NULL)), ((CAST(rt0.c0 AS BLOB)) ISNULL)  NULLS LAST, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.314382671587326 ELSE vt0.c0 END)/(NULL)), ((CAST(rt0.c0 AS BLOB)) ISNULL)  NULLS LAST, rt0.c3);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE BINARY) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.314382671587326 ELSE vt0.c0 END)/(NULL)), ((CAST(rt0.c0 AS BLOB)) ISNULL)  NULLS LAST, rt0.c3;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY ((CAST(vt0.c0 AS TEXT))OR('0.13035977780661956')) DESC  NULLS FIRST, 0Xfffffffff2d65e55  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))OR('0.13035977780661956')) DESC  NULLS FIRST, 0Xfffffffff2d65e55  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY ((CAST(vt0.c0 AS TEXT))OR('0.13035977780661956')) DESC  NULLS FIRST, 0Xfffffffff2d65e55  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))OR('0.13035977780661956')) DESC  NULLS FIRST, 0Xfffffffff2d65e55  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ())) ORDER BY ((CAST(vt0.c0 AS TEXT))OR('0.13035977780661956')) DESC  NULLS FIRST, 0Xfffffffff2d65e55  NULLS FIRST, CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((NULL)*(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)) WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (x'dd03')))))AND((((rt0.c1))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (x'dd03')))))AND((((rt0.c1))==((rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((NULL)*(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((NULL)*(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)) WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (x'dd03')))))AND((((rt0.c1))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (x'dd03')))))AND((((rt0.c1))==((rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((NULL)*(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((NULL)*(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)) WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (x'dd03')))))AND((((rt0.c1))==((rt0.c2))))));
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0x4e556420)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((0x4e556420)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0x4e556420)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((0x4e556420)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0x4e556420)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE))) ORDER BY TRIM(((x'') BETWEEN (rt0.c0) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TRIM(((x'') BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE))) ORDER BY TRIM(((x'') BETWEEN (rt0.c0) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TRIM(((x'') BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE))) ORDER BY TRIM(((x'') BETWEEN (rt0.c0) AND (rt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)&(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)&(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)&(TYPEOF(vt0.c0))));
SELECT * FROM rt0 WHERE ((((((((0.2077466749039334)AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))=((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)), ((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) ISNULL))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'')), ((rt0.c0)*(rt0.c1)))) AND (((rt0.c3 IN ()), ((rt0.c2) IS TRUE), -2.20832171E8)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((0.2077466749039334)AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))==((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)), ((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'')), ((rt0.c0)*(rt0.c1)))) AND (((rt0.c3 IN ()), ((rt0.c2) IS TRUE), -2.20832171E8)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((0.2077466749039334)AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))=((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)), ((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) ISNULL))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'')), ((rt0.c0)*(rt0.c1)))) AND (((rt0.c3 IN ()), ((rt0.c2) IS TRUE), -2.20832171E8)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((0.2077466749039334)AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))==((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)), ((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'')), ((rt0.c0)*(rt0.c1)))) AND (((rt0.c3 IN ()), ((rt0.c2) IS TRUE), -2.20832171E8)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((0.2077466749039334)AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END))=((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)), ((rt0.c0)IS NOT(rt0.c0)), ((rt0.c1) ISNULL))))) ORDER BY (((rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'')), ((rt0.c0)*(rt0.c1)))) AND (((rt0.c3 IN ()), ((rt0.c2) IS TRUE), -2.20832171E8)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((UNICODE(rt0.c2))%(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(rt0.c2))%(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((UNICODE(rt0.c2))%(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(rt0.c2))%(CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((UNICODE(rt0.c2))%(CASE WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM WHERE ((((('_+	Y+&T') NOT BETWEEN (rt0.c3) AND (rt0.c3)))||((((rt0.c3, rt0.c2, x'4fb0')) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((('_+	Y+&T') NOT BETWEEN (rt0.c3) AND (rt0.c3)))||((((rt0.c3, rt0.c2, x'4fb0')) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM WHERE ((((('_+	Y+&T') NOT BETWEEN (rt0.c3) AND (rt0.c3)))||((((rt0.c3, rt0.c2, x'4fb0')) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((('_+	Y+&T') NOT BETWEEN (rt0.c3) AND (rt0.c3)))||((((rt0.c3, rt0.c2, x'4fb0')) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 COLLATE RTRIM WHERE ((((('_+	Y+&T') NOT BETWEEN (rt0.c3) AND (rt0.c3)))||((((rt0.c3, rt0.c2, x'4fb0')) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0)-(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) IS TRUE)) ORDER BY (((((rt0.c1, rt0.c2, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c0)))) BETWEEN ('6239862') AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c2, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c0)))) BETWEEN ('6239862') AND ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) IS TRUE)) ORDER BY (((((rt0.c1, rt0.c2, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c0)))) BETWEEN ('6239862') AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c2, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c0)))) BETWEEN ('6239862') AND ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) IS TRUE)) ORDER BY (((((rt0.c1, rt0.c2, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c0)))) BETWEEN ('6239862') AND ((+ (rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('0.31074523072731863')-(vt0.c0)))|(CAST(vt0.c0 AS TEXT)))) ORDER BY (+ (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((('0.31074523072731863')-(vt0.c0)))|(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('0.31074523072731863')-(vt0.c0)))|(CAST(vt0.c0 AS TEXT)))) ORDER BY (+ (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((('0.31074523072731863')-(vt0.c0)))|(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('0.31074523072731863')-(vt0.c0)))|(CAST(vt0.c0 AS TEXT)))) ORDER BY (+ (vt0.c0)) ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((LENGTH(vt0.c0))=(((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND('	_^')))) WHERE (CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) ORDER BY ((((rt0.c3) NOT NULL))>(x'' COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((LENGTH(vt0.c0))==(((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND('	_^')))) ORDER BY ((((rt0.c3) NOT NULL))>(x'' COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((LENGTH(vt0.c0))=(((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND('	_^')))) WHERE (CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) ORDER BY ((((rt0.c3) NOT NULL))>(x'' COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((LENGTH(vt0.c0))==(((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND('	_^')))) ORDER BY ((((rt0.c3) NOT NULL))>(x'' COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((LENGTH(vt0.c0))=(((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND('	_^')))) WHERE (CAST(((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) ORDER BY ((((rt0.c3) NOT NULL))>(x'' COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)>(NULL))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(NULL))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)>(NULL))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(NULL))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)>(NULL))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), rtreenode(rt0.c0, rt0.c2))) ORDER BY (NOT (((rt0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), rtreenode(rt0.c0, rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), rtreenode(rt0.c0, rt0.c2))) ORDER BY (NOT (((rt0.c2) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), rtreenode(rt0.c0, rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), rtreenode(rt0.c0, rt0.c2))) ORDER BY (NOT (((rt0.c2) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (CHANGES()) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((0Xffffffff83ecf539)>=('9149147506584666979')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((0xffffffff83ecf539)>=('9149147506584666979')))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CHANGES()) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((0Xffffffff83ecf539)>=('9149147506584666979')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((0xffffffff83ecf539)>=('9149147506584666979')))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CHANGES()) ORDER BY ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((0Xffffffff83ecf539)>=('9149147506584666979')))) ASC;
SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c0)))));
SELECT * FROM vt0 WHERE (TRIM((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((((vt0.c0) NOT BETWEEN (0.9889202546876712) AND (1118551302)))AND(CAST(vt0.c0 AS BLOB))))OR((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (0.9889202546876712) AND (1118551302)))AND(CAST(vt0.c0 AS BLOB))))OR((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((((vt0.c0) NOT BETWEEN (0.9889202546876712) AND (1118551302)))AND(CAST(vt0.c0 AS BLOB))))OR((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (0.9889202546876712) AND (1118551302)))AND(CAST(vt0.c0 AS BLOB))))OR((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((((vt0.c0) NOT BETWEEN (0.9889202546876712) AND (1118551302)))AND(CAST(vt0.c0 AS BLOB))))OR((- (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((STRFTIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(5.360513610920243E18))))) ORDER BY '185284892' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(5.360513610920243E18))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '185284892' ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((STRFTIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(5.360513610920243E18))))) ORDER BY '185284892' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(5.360513610920243E18))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '185284892' ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((STRFTIME(rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(5.360513610920243E18))))) ORDER BY '185284892' ASC;
SELECT * FROM rt0, vt0 WHERE (1318389984) ORDER BY CAST(CAST(rt0.c3 AS NUMERIC) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((1318389984) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(rt0.c3 AS NUMERIC) AS BLOB));
SELECT * FROM rt0, vt0 WHERE (1318389984) ORDER BY CAST(CAST(rt0.c3 AS NUMERIC) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((1318389984) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(rt0.c3 AS NUMERIC) AS BLOB));
SELECT * FROM rt0, vt0 WHERE (1318389984) ORDER BY CAST(CAST(rt0.c3 AS NUMERIC) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(CAST(rt0.c1 AS BLOB)));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON 0xfffffffff678851a WHERE (((rt0.c0 COLLATE NOCASE)IS((((rt0.c3, rt0.c0, rt0.c2))<((rt0.c3, rt0.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)IS((((rt0.c3, rt0.c0, rt0.c2))<((rt0.c3, rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0Xfffffffff678851a);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON 0xfffffffff678851a WHERE (((rt0.c0 COLLATE NOCASE)IS((((rt0.c3, rt0.c0, rt0.c2))<((rt0.c3, rt0.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)IS((((rt0.c3, rt0.c0, rt0.c2))<((rt0.c3, rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON 0Xfffffffff678851a);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON 0xfffffffff678851a WHERE (((rt0.c0 COLLATE NOCASE)IS((((rt0.c3, rt0.c0, rt0.c2))<((rt0.c3, rt0.c3, vt0.c0))))));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(x'')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))==(vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('-1640408761')))AND(vt0.c0)) THEN ((NULL)<=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(x'')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('-1640408761')))AND(vt0.c0)) THEN ((NULL)<=(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(x'')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))==(vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('-1640408761')))AND(vt0.c0)) THEN ((NULL)<=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(x'')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('-1640408761')))AND(vt0.c0)) THEN ((NULL)<=(vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(x'')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))==(vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('-1640408761')))AND(vt0.c0)) THEN ((NULL)<=(vt0.c0)) END;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c0))) BETWEEN ('-360025518') AND (((rt0.c1) IS TRUE))) WHERE (((((rt0.c2) NOTNULL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c3))) ORDER BY 'YQ' ASC, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c3))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c0))) BETWEEN ('-360025518') AND (((rt0.c1) IS TRUE))) ORDER BY 'YQ' ASC, rt0.c3);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c0))) BETWEEN ('-360025518') AND (((rt0.c1) IS TRUE))) WHERE (((((rt0.c2) NOTNULL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c3))) ORDER BY 'YQ' ASC, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c3))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c0))) BETWEEN ('-360025518') AND (((rt0.c1) IS TRUE))) ORDER BY 'YQ' ASC, rt0.c3);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c0))) BETWEEN ('-360025518') AND (((rt0.c1) IS TRUE))) WHERE (((((rt0.c2) NOTNULL)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (rt0.c3))) ORDER BY 'YQ' ASC, rt0.c3;
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY (((NULL IN ()))<>(CAST(rt0.c1 AS NUMERIC))), (((vt0.c0 IN ()))<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST, ((+ (rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NULL IN ()))<>(CAST(rt0.c1 AS NUMERIC))), (((vt0.c0 IN ()))<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST, ((+ (rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY (((NULL IN ()))<>(CAST(rt0.c1 AS NUMERIC))), (((vt0.c0 IN ()))<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST, ((+ (rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NULL IN ()))<>(CAST(rt0.c1 AS NUMERIC))), (((vt0.c0 IN ()))<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST, ((+ (rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY (((NULL IN ()))<>(CAST(rt0.c1 AS NUMERIC))), (((vt0.c0 IN ()))<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))  NULLS FIRST, ((+ (rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.4674099234503263 THEN rt0.c2 END WHERE (CASE WHEN x'097f' THEN rt0.c3 END) ORDER BY (- ('rbi')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'097f' THEN rt0.c3 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.4674099234503263 THEN rt0.c2 END ORDER BY (- ('rbi')) DESC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.4674099234503263 THEN rt0.c2 END WHERE (CASE WHEN x'097f' THEN rt0.c3 END) ORDER BY (- ('rbi')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'097f' THEN rt0.c3 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.4674099234503263 THEN rt0.c2 END ORDER BY (- ('rbi')) DESC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN 0.4674099234503263 THEN rt0.c2 END WHERE (CASE WHEN x'097f' THEN rt0.c3 END) ORDER BY (- ('rbi')) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (TYPEOF(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (TYPEOF(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0) AND (TYPEOF(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((+ (rt0.c1)))<=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((+ (rt0.c1)))<=((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((+ (rt0.c1)))<=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((+ (rt0.c1)))<=((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((+ (rt0.c1)))<=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, (~ (rt0.c1)), rt0.c3))>((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c3)IS(rt0.c1)))))) ORDER BY UNLIKELY(rt0.c0 COLLATE BINARY), rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, (~ (rt0.c1)), rt0.c3))>((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c3)IS(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(rt0.c0 COLLATE BINARY), rt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, (~ (rt0.c1)), rt0.c3))>((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c3)IS(rt0.c1)))))) ORDER BY UNLIKELY(rt0.c0 COLLATE BINARY), rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, (~ (rt0.c1)), rt0.c3))>((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c3)IS(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(rt0.c0 COLLATE BINARY), rt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY, (~ (rt0.c1)), rt0.c3))>((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c3)IS(rt0.c1)))))) ORDER BY UNLIKELY(rt0.c0 COLLATE BINARY), rt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0)))IS(('0.20484792404476337' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c0)))IS(('0.20484792404476337' IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0)))IS(('0.20484792404476337' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c0)))IS(('0.20484792404476337' IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)<>(rt0.c0)))IS(('0.20484792404476337' IN ()))));
SELECT * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE ((((NULL) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3))==((rt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3))=((rt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3))==((rt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3))=((rt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3))==((rt0.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c3, rt0.c1, rt0.c2)))) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY (((vt0.c0))>((0xffffffffc98d8352))) COLLATE NOCASE, 0.354517318793493;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>((0Xffffffffc98d8352))) COLLATE NOCASE, 0.354517318793493);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY (((vt0.c0))>((0xffffffffc98d8352))) COLLATE NOCASE, 0.354517318793493;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>((0Xffffffffc98d8352))) COLLATE NOCASE, 0.354517318793493);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY (((vt0.c0))>((0xffffffffc98d8352))) COLLATE NOCASE, 0.354517318793493;
SELECT * FROM rt0, vt0 WHERE (549209884) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((549209884) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (549209884) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((549209884) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (549209884) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))>((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST('' AS REAL)) ORDER BY 0.44457216776154895 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.44457216776154895 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST('' AS REAL)) ORDER BY 0.44457216776154895 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.44457216776154895 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST('' AS REAL)) ORDER BY 0.44457216776154895 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<<((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c0))))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<<((~ (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<<((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c0))))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<<((~ (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0)))<<((~ (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c2 AS INTEGER))) WHERE ((((((NULL))<>((rt0.c1)))) NOT BETWEEN (((vt0.c0)*(rt0.c1))) AND (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))!=((rt0.c1)))) NOT BETWEEN (((vt0.c0)*(rt0.c1))) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c2 AS INTEGER))) WHERE ((((((NULL))<>((rt0.c1)))) NOT BETWEEN (((vt0.c0)*(rt0.c1))) AND (((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))!=((rt0.c1)))) NOT BETWEEN (((vt0.c0)*(rt0.c1))) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (CAST(rt0.c2 AS INTEGER))) WHERE ((((((NULL))<>((rt0.c1)))) NOT BETWEEN (((vt0.c0)*(rt0.c1))) AND (((rt0.c0) NOT NULL))));
SELECT * FROM rt0 WHERE ((0.24029265063914107 IN ()));
SELECT SUM(count) FROM (SELECT (((0.24029265063914107 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((0.24029265063914107 IN ()));
SELECT SUM(count) FROM (SELECT (((0.24029265063914107 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((0.24029265063914107 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS TEXT), (rt0.c0 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS TEXT), (rt0.c0 IN ())) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS TEXT), (rt0.c0 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS TEXT), (rt0.c0 IN ())) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY TRIM(DISTINCT CAST(rt0.c3 AS TEXT), (rt0.c0 IN ())) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c3 COLLATE BINARY) ISNULL)) ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c3 COLLATE BINARY) ISNULL)) ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c3 COLLATE BINARY) ISNULL)) ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)>>(((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>>(((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)>>(((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>>(((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)>>(((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((vt0.c0)>=(rt0.c0)))AND(((rt0.c0)OR(vt0.c0)))))OR(UPPER(DISTINCT rt0.c1))))OR(vt0.c0)))OR('')))AND(((vt0.c0)<<(rt0.c2)))))OR((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)>=(rt0.c0)))AND(((rt0.c0)OR(vt0.c0)))))OR(UPPER(DISTINCT rt0.c1))))OR(vt0.c0)))OR('')))AND(((vt0.c0)<<(rt0.c2)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((vt0.c0)>=(rt0.c0)))AND(((rt0.c0)OR(vt0.c0)))))OR(UPPER(DISTINCT rt0.c1))))OR(vt0.c0)))OR('')))AND(((vt0.c0)<<(rt0.c2)))))OR((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)>=(rt0.c0)))AND(((rt0.c0)OR(vt0.c0)))))OR(UPPER(DISTINCT rt0.c1))))OR(vt0.c0)))OR('')))AND(((vt0.c0)<<(rt0.c2)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((vt0.c0)>=(rt0.c0)))AND(((rt0.c0)OR(vt0.c0)))))OR(UPPER(DISTINCT rt0.c1))))OR(vt0.c0)))OR('')))AND(((vt0.c0)<<(rt0.c2)))))OR((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ((NULL IN (rt0.c0, 0.9842519711400737))) AND ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ((NULL IN (rt0.c0, 0.9842519711400737))) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ((NULL IN (rt0.c0, 0.9842519711400737))) AND ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN ((NULL IN (rt0.c0, 0.9842519711400737))) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ((NULL IN (rt0.c0, 0.9842519711400737))) AND ((- (rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c0 END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c0 END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE vt0.c0 END DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (0.2214852585410504);
SELECT SUM(count) FROM (SELECT ((0.2214852585410504) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.2214852585410504);
SELECT SUM(count) FROM (SELECT ((0.2214852585410504) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.2214852585410504);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)=('-589891473'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)==('-589891473'))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)=('-589891473'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)==('-589891473'))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)=('-589891473'))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))%(vt0.c0)) WHERE (((NULL COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((0Xffffffff8896bc97)%(rt0.c3))))) ORDER BY json_array_length(CAST(rt0.c1 AS INTEGER), ((rt0.c2)AND(rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((0xffffffff8896bc97)%(rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))%(vt0.c0)) ORDER BY json_array_length(CAST(rt0.c1 AS INTEGER), ((rt0.c2)AND(rt0.c3))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))%(vt0.c0)) WHERE (((NULL COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((0Xffffffff8896bc97)%(rt0.c3))))) ORDER BY json_array_length(CAST(rt0.c1 AS INTEGER), ((rt0.c2)AND(rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((0xffffffff8896bc97)%(rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))%(vt0.c0)) ORDER BY json_array_length(CAST(rt0.c1 AS INTEGER), ((rt0.c2)AND(rt0.c3))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (NULL) AND (rt0.c1)))%(vt0.c0)) WHERE (((NULL COLLATE BINARY) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((0Xffffffff8896bc97)%(rt0.c3))))) ORDER BY json_array_length(CAST(rt0.c1 AS INTEGER), ((rt0.c2)AND(rt0.c3))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOTNULL)))) ORDER BY ((CAST(-1.292580401E9 AS BLOB))>>(CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(-1.292580401E9 AS BLOB))>>(CAST(rt0.c3 AS TEXT))));
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOTNULL)))) ORDER BY ((CAST(-1.292580401E9 AS BLOB))>>(CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(-1.292580401E9 AS BLOB))>>(CAST(rt0.c3 AS TEXT))));
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) NOTNULL)))) ORDER BY ((CAST(-1.292580401E9 AS BLOB))>>(CAST(rt0.c3 AS TEXT)));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))) AND ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))) AND ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))) AND ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))) AND ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))) AND ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c3))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((('')=(rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c3))) AND ((((('F+af')AND(rt0.c3)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')==(rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c3))) AND ((((('F+af')AND(rt0.c3)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((('')=(rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c3))) AND ((((('F+af')AND(rt0.c3)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')==(rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c3))) AND ((((('F+af')AND(rt0.c3)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((('')=(rt0.c2))) BETWEEN (((rt0.c0)GLOB(rt0.c3))) AND ((((('F+af')AND(rt0.c3)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(NULL)))OR(0Xfffffffff43e1626)))OR(vt0.c0)))OR(vt0.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (NOT (json_extract(vt0.c0, vt0.c0))) DESC, (((~ (vt0.c0)))>((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(NULL)))OR(0xfffffffff43e1626)))OR(vt0.c0)))OR(vt0.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (json_extract(vt0.c0, vt0.c0))) DESC, (((~ (vt0.c0)))>((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(NULL)))OR(0Xfffffffff43e1626)))OR(vt0.c0)))OR(vt0.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (NOT (json_extract(vt0.c0, vt0.c0))) DESC, (((~ (vt0.c0)))>((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(NULL)))OR(0xfffffffff43e1626)))OR(vt0.c0)))OR(vt0.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (json_extract(vt0.c0, vt0.c0))) DESC, (((~ (vt0.c0)))>((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(NULL)))OR(0Xfffffffff43e1626)))OR(vt0.c0)))OR(vt0.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (NOT (json_extract(vt0.c0, vt0.c0))) DESC, (((~ (vt0.c0)))>((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((0.1686004405669741, ((rt0.c1)IS(rt0.c0)), COALESCE(NULL, rt0.c2, rt0.c0, rt0.c1)))<=((((vt0.c0)<=(vt0.c0)), CASE WHEN vt0.c0 THEN '-620493353' ELSE rt0.c1 END, (+ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((0.1686004405669741, ((rt0.c1)IS(rt0.c0)), COALESCE(NULL, rt0.c2, rt0.c0, rt0.c1)))<=((((vt0.c0)<=(vt0.c0)), CASE WHEN vt0.c0 THEN '-620493353' ELSE rt0.c1 END, (+ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((0.1686004405669741, ((rt0.c1)IS(rt0.c0)), COALESCE(NULL, rt0.c2, rt0.c0, rt0.c1)))<=((((vt0.c0)<=(vt0.c0)), CASE WHEN vt0.c0 THEN '-620493353' ELSE rt0.c1 END, (+ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((0.1686004405669741, ((rt0.c1)IS(rt0.c0)), COALESCE(NULL, rt0.c2, rt0.c0, rt0.c1)))<=((((vt0.c0)<=(vt0.c0)), CASE WHEN vt0.c0 THEN '-620493353' ELSE rt0.c1 END, (+ (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((0.1686004405669741, ((rt0.c1)IS(rt0.c0)), COALESCE(NULL, rt0.c2, rt0.c0, rt0.c1)))<=((((vt0.c0)<=(vt0.c0)), CASE WHEN vt0.c0 THEN '-620493353' ELSE rt0.c1 END, (+ (rt0.c3))))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT * FROM vt0 WHERE (json_extract(vt0.c0, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((vt0.c0)*(((vt0.c0)|(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt0.c0, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(((vt0.c0)|(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (json_extract(vt0.c0, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((vt0.c0)*(((vt0.c0)|(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt0.c0, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)*(((vt0.c0)|(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (json_extract(vt0.c0, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((vt0.c0)*(((vt0.c0)|(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)AND(LAST_INSERT_ROWID())))AND(((vt0.c0) IS TRUE)))) ORDER BY ((json_remove(vt0.c0, vt0.c0, rt0.c0, vt0.c0)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(LAST_INSERT_ROWID())))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((json_remove(vt0.c0, vt0.c0, rt0.c0, vt0.c0)) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)AND(LAST_INSERT_ROWID())))AND(((vt0.c0) IS TRUE)))) ORDER BY ((json_remove(vt0.c0, vt0.c0, rt0.c0, vt0.c0)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(LAST_INSERT_ROWID())))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((json_remove(vt0.c0, vt0.c0, rt0.c0, vt0.c0)) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)AND(LAST_INSERT_ROWID())))AND(((vt0.c0) IS TRUE)))) ORDER BY ((json_remove(vt0.c0, vt0.c0, rt0.c0, vt0.c0)) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)!=(rt0.c3)))%((((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c2))>(('185284892', vt0.c0, rt0.c0, rt0.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(rt0.c3)))%((((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c2))>(('185284892', vt0.c0, rt0.c0, rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)!=(rt0.c3)))%((((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c2))>(('185284892', vt0.c0, rt0.c0, rt0.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(rt0.c3)))%((((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c2))>(('185284892', vt0.c0, rt0.c0, rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)!=(rt0.c3)))%((((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c2))>(('185284892', vt0.c0, rt0.c0, rt0.c3, vt0.c0))))));
