-- Time: 2024/06/11 11:48:00
-- Database: database76
-- Database version: 3.40.0
-- seed value: 3432619976
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'b58c', 0.33385509319715767); -- 0ms;
END; -- 0ms;
UPDATE rt0 SET c0=x'a06c' WHERE rt0.c2; -- 0ms;
UPDATE rt0 SET c0=0.33385509319715767; -- 0ms;
UPDATE rt0 SET c1=x''; -- 0ms;
UPDATE rt0 SET c1=x'ec6a' WHERE '-2081326251'; -- 0ms;
UPDATE rt1 SET (c1)=('-2081326251'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES ('', 0.43581129213915126), ('', ''), (x'', x''), (0.6601680061452064, x''), (NULL, 0.5018509721615068); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL), ('⏞LU㵞'), ('-878234779'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (CASE (NOT ('1029317598'))  WHEN (NULL IN (0.2722929886948142)) THEN '' ELSE IFNULL('', x'') END, NULL), ('⏞LU㵞', x''), (-2.081326251E9, 815728501); -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('-1', NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=x''; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(-2081326251, 815728501); -- 1ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('815728501'); -- 1ms;
UPDATE rt1 SET (c2)=(x''); -- 0ms;
INSERT OR ABORT INTO rt1(c1) VALUES (NULL); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (0.5018509721615068, 'H>C{R', 0.9456367934207268, '', '298681397'), (0xffffffff9728c6c9, NULL, 0.33385509319715767, NULL, 1029317598), (x'', HEX(NULL), '(\nH⭰	be', x'', x'fc68'); -- 0ms;
UPDATE rt0 SET (c1)=(NULL); -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 7ms;
INSERT OR ABORT INTO rt1(c3, c2, c0, c1) VALUES (x'', '1677482083', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES ('-1995076843', x'23c7'), (0.3547050288687391, 0.3547050288687391), (NULL, x''); -- 8ms;
UPDATE OR FAIL rt0 SET (c1)=(0.8787238393301056); -- 0ms;
UPDATE rt0 SET c2=NULL WHERE rt0.c1 COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0.8787238393301056, c3=0.5723323140656228; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2, c2, c2)=('H>C{R', NULL, '298681397') WHERE ((((((rt0.c0)/(rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND(((-645474303) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'5253') NOT BETWEEN (NULL) AND (NULL)))OR(x'9607' COLLATE BINARY)))AND(ABS('394358478'))); -- 0ms;
UPDATE rt0 SET c2=-878234779; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('1677482083') WHERE (~ ((('')<(rt0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
ANALYZE; -- 0ms;
VACUUM; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt1 SET c2=0.43581129213915126; -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES ('1677482083'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'', '1', '133738964'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.2722929886948142, 0X749ca70e); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c0, c2) VALUES (NULL, x'b713'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (x''), (0.6830556278043954), (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='9\G', c1='-37652666' WHERE ((rt0.c1) IS FALSE); -- 0ms;
REINDEX; -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (0.5614911994813859); -- 5ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (NULL, 0x16673d5e, 0.244021823542508), (NULL, x'', 0.04620747890167398), (x'', NULL, NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c0, c3) VALUES (x'e0b7', '-2081326251', '815728501'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c4) VALUES ('K305:-6969554833966806945T1436T2127770259590003713-537T6910721760396024904:1256--7284745103610271378 *wZ'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-2081326251', c0=NULL; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, x''), (NULL, x''), (NULL, 0x5aee23b4); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0x45da1f09), ('815728501'), ('rT?'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE vt0 SET c0=0.6793506752025085; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE rt1 SET (c3)=('375864670') WHERE ((rt1.c2) IS FALSE); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='' WHERE rt0.c0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2120175996); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (0.7478276527884359, '#RWF{vT', NULL, -4.4618896E7, NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT ALL (((rt1.c3, rt0.c0, rt0.c2, rt1.c1, vt0.c0)) BETWEEN ((((rt1.c2)<(vt0.c0)), rt1.c2 COLLATE NOCASE, ((rt1.c0)!=(rt0.c0)), ((((vt0.c0)AND(rt1.c2)))AND(rt1.c3)), vt0.c0 COLLATE RTRIM)) AND ((MIN(rt0.c2), vt0.c0 COLLATE NOCASE, CAST(rt1.c4 AS REAL), ((rt0.c1)<<(vt0.c0)), ((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0))))), ((((((((GROUP_CONCAT(rt1.c1))OR('(y' COLLATE RTRIM)))OR((rt0.c2 IN ()))))OR(COUNT(x'7842'))))AND(CAST(rt0.c2 AS NUMERIC))), CASE UNLIKELY(DISTINCT rt0.c0)  WHEN rt0.c1 COLLATE NOCASE THEN '-512500413' ELSE ((rt0.c0)*(vt0.c0)) END FROM rt1, vt0, rt0 WHERE (CAST((((0.2659316130975904, '!/', '7'))>(('-1090660951', '-2081326251', '-729876680'))) AS BLOB)); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(NULL); -- 0ms;
DELETE FROM rt0; -- 0ms;
UPDATE rt1 SET (c0)=(0.6601680061452064); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.05044239340236234, c2='-512500413' WHERE CAST((rt0.c0 IN ()) AS TEXT); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x'96d1'), (x''), (''); -- 0ms;
UPDATE OR FAIL rt0 SET (c2, c2)=(-1109053675, ''); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.29518693666270623, -645474303), (0.18092632163049494, 0.47142242198819007), (x'', ''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('2USn!v?	v'); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c1)=(x''); -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 518691909); -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.7478276527884359; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR REPLACE rt0 SET c1=NULL WHERE ((CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)<=((rt0.c0 IN ()))); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=1633834536 unordered noskipscan'); -- 1ms;
UPDATE OR ABORT rt0 SET (c1)=('Be'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE ((((815728501))<=((((rt1.c3)LIKE(0.6066222446770634))))));
SELECT SUM(count) FROM (SELECT ALL (((((815728501))<=((((rt1.c3)LIKE(0.6066222446770634)))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE ((((815728501))<=((((rt1.c3)LIKE(0.6066222446770634))))));
SELECT SUM(count) FROM (SELECT ALL (((((815728501))<=((((rt1.c3)LIKE(0.6066222446770634)))))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE ((((815728501))<=((((rt1.c3)LIKE(0.6066222446770634))))));
SELECT * FROM vt0, v0 WHERE (((((0.10306042097342238)AND(v0.c1)))AND(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((0.10306042097342238)AND(v0.c1)))AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((0.10306042097342238)AND(v0.c1)))AND(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((0.10306042097342238)AND(v0.c1)))AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((0.10306042097342238)AND(v0.c1)))AND(v0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)IS(rt1.c2)))||(rt1.c3 COLLATE NOCASE))) ORDER BY CAST(((rt1.c0)IS(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS(rt1.c2)))||(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c0)IS(vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)IS(rt1.c2)))||(rt1.c3 COLLATE NOCASE))) ORDER BY CAST(((rt1.c0)IS(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS(rt1.c2)))||(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c0)IS(vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)IS(rt1.c2)))||(rt1.c3 COLLATE NOCASE))) ORDER BY CAST(((rt1.c0)IS(vt0.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ((CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt1.c2 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt1.c2 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM v0, rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ((CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt1.c2 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt1.c2 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END IN ())) IS TRUE)  as count FROM v0, rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ((CASE rt0.c0  WHEN '' THEN rt0.c1 WHEN rt1.c2 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END IN ()));
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ('F\G') ORDER BY (- ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT (('F\G') IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ('F\G') ORDER BY (- ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT (('F\G') IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ('F\G') ORDER BY (- ((rt0.c1 IN ())));
SELECT * FROM rt1 CROSS JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON 0.38342679357317777 CROSS JOIN v0 ON ((NULL)<<(CAST(rt1.c1 AS REAL))) WHERE (rt0.c1 COLLATE BINARY) ORDER BY -1.090660951E9;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON 0.38342679357317777 CROSS JOIN v0 ON ((NULL)<<(CAST(rt1.c1 AS REAL))) ORDER BY -1.090660951E9);
SELECT * FROM rt1 CROSS JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON 0.38342679357317777 CROSS JOIN v0 ON ((NULL)<<(CAST(rt1.c1 AS REAL))) WHERE (rt0.c1 COLLATE BINARY) ORDER BY -1.090660951E9;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON 0.38342679357317777 CROSS JOIN v0 ON ((NULL)<<(CAST(rt1.c1 AS REAL))) ORDER BY -1.090660951E9);
SELECT * FROM rt1 CROSS JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON 0.38342679357317777 CROSS JOIN v0 ON ((NULL)<<(CAST(rt1.c1 AS REAL))) WHERE (rt0.c1 COLLATE BINARY) ORDER BY -1.090660951E9;
SELECT ALL * FROM rt1, rt0 WHERE ((rt0.c1 IN ((rt1.c3 IN ()), ((((((((rt0.c0)OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2)))AND(rt1.c4))))) ORDER BY ((((rt1.c4)AND(rt1.c3)))IS NOT(HEX(DISTINCT rt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ((rt1.c3 IN ()), ((((((((rt0.c0)OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2)))AND(rt1.c4))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c4)AND(rt1.c3)))IS NOT(HEX(DISTINCT rt1.c3)))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((rt0.c1 IN ((rt1.c3 IN ()), ((((((((rt0.c0)OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2)))AND(rt1.c4))))) ORDER BY ((((rt1.c4)AND(rt1.c3)))IS NOT(HEX(DISTINCT rt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ((rt1.c3 IN ()), ((((((((rt0.c0)OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2)))AND(rt1.c4))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c4)AND(rt1.c3)))IS NOT(HEX(DISTINCT rt1.c3)))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((rt0.c1 IN ((rt1.c3 IN ()), ((((((((rt0.c0)OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c2)))AND(rt1.c4))))) ORDER BY ((((rt1.c4)AND(rt1.c3)))IS NOT(HEX(DISTINCT rt1.c3)))  NULLS LAST;
SELECT * FROM vt0, rt0, v0, rt1 WHERE (((SQLITE_VERSION())OR(-2081326251)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())OR(-2081326251))) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT * FROM vt0, rt0, v0, rt1 WHERE (((SQLITE_VERSION())OR(-2081326251)));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())OR(-2081326251))) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT * FROM vt0, rt0, v0, rt1 WHERE (((SQLITE_VERSION())OR(-2081326251)));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (((((v0.c1)||(rt1.c3))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(v0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)||(rt1.c3))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (((((v0.c1)||(rt1.c3))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(v0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)||(rt1.c3))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(v0.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE (((((v0.c1)||(rt1.c3))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(v0.c2 AS BLOB))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c0 IN ()) IN (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN NULL THEN rt1.c2 ELSE -1109053675 END COLLATE RTRIM, ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END)==(CASE WHEN rt1.c3 THEN rt1.c3 ELSE x'' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 IN ()) IN (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN NULL THEN rt1.c2 ELSE -1109053675 END COLLATE RTRIM, ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END)=(CASE WHEN rt1.c3 THEN rt1.c3 ELSE x'' END)) ASC);
SELECT * FROM rt0, rt1 WHERE (((rt1.c0 IN ()) IN (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN NULL THEN rt1.c2 ELSE -1109053675 END COLLATE RTRIM, ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END)==(CASE WHEN rt1.c3 THEN rt1.c3 ELSE x'' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 IN ()) IN (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN NULL THEN rt1.c2 ELSE -1109053675 END COLLATE RTRIM, ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END)=(CASE WHEN rt1.c3 THEN rt1.c3 ELSE x'' END)) ASC);
SELECT * FROM rt0, rt1 WHERE (((rt1.c0 IN ()) IN (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN NULL THEN rt1.c2 ELSE -1109053675 END COLLATE RTRIM, ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 END)==(CASE WHEN rt1.c3 THEN rt1.c3 ELSE x'' END)) ASC;
SELECT COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT (((v0.c2))>=((v0.c1))), (v0.c0 IN (v0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((v0.c2))>=((v0.c1))), (v0.c0 IN (v0.c1, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT (((v0.c2))>=((v0.c1))), (v0.c0 IN (v0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((v0.c2))>=((v0.c1))), (v0.c0 IN (v0.c1, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (COALESCE(DISTINCT (((v0.c2))>=((v0.c1))), (v0.c0 IN (v0.c1, v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((('Xrf<V筕Z') BETWEEN (v0.c1 COLLATE NOCASE) AND (v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('Xrf<V筕Z') BETWEEN (v0.c1 COLLATE NOCASE) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('Xrf<V筕Z') BETWEEN (v0.c1 COLLATE NOCASE) AND (v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((('Xrf<V筕Z') BETWEEN (v0.c1 COLLATE NOCASE) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((('Xrf<V筕Z') BETWEEN (v0.c1 COLLATE NOCASE) AND (v0.c2 COLLATE BINARY)));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) INNER JOIN v0 ON IFNULL(rt1.c4, rt1.c3) COLLATE BINARY CROSS JOIN rt0 ON CASE ((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN (((0.6348699424807898)) NOT BETWEEN ((0.6601680061452064)) AND (('-1378060420'))) ELSE ((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)) END WHERE (((0.3248288439086666)*(((rt1.c0)|(vt0.c0))))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((0.3248288439086666)*(((rt1.c0)|(vt0.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) INNER JOIN v0 ON IFNULL(rt1.c4, rt1.c3) COLLATE BINARY CROSS JOIN rt0 ON CASE ((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN (((0.6348699424807898)) NOT BETWEEN ((0.6601680061452064)) AND (('-1378060420'))) ELSE ((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)) END ORDER BY rt1.c3);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) INNER JOIN v0 ON IFNULL(rt1.c4, rt1.c3) COLLATE BINARY CROSS JOIN rt0 ON CASE ((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN (((0.6348699424807898)) NOT BETWEEN ((0.6601680061452064)) AND (('-1378060420'))) ELSE ((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)) END WHERE (((0.3248288439086666)*(((rt1.c0)|(vt0.c0))))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((0.3248288439086666)*(((rt1.c0)|(vt0.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) INNER JOIN v0 ON IFNULL(rt1.c4, rt1.c3) COLLATE BINARY CROSS JOIN rt0 ON CASE ((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN (((0.6348699424807898)) NOT BETWEEN ((0.6601680061452064)) AND (('-1378060420'))) ELSE ((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)) END ORDER BY rt1.c3);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) INNER JOIN v0 ON IFNULL(rt1.c4, rt1.c3) COLLATE BINARY CROSS JOIN rt0 ON CASE ((vt0.c0) BETWEEN (rt1.c1) AND (rt0.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN (((0.6348699424807898)) NOT BETWEEN ((0.6601680061452064)) AND (('-1378060420'))) ELSE ((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)) END WHERE (((0.3248288439086666)*(((rt1.c0)|(vt0.c0))))) ORDER BY rt1.c3;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (('133738964') ISNULL) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS TEXT))>>((~ (rt0.c1)))) CROSS JOIN vt0 ON (+ (CAST(v0.c1 AS INTEGER))) WHERE ((((rt1.c3)!=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)<>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (('133738964') ISNULL) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS TEXT))>>((~ (rt0.c1)))) CROSS JOIN vt0 ON (+ (CAST(v0.c1 AS INTEGER))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (('133738964') ISNULL) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS TEXT))>>((~ (rt0.c1)))) CROSS JOIN vt0 ON (+ (CAST(v0.c1 AS INTEGER))) WHERE ((((rt1.c3)!=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)<>(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (('133738964') ISNULL) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS TEXT))>>((~ (rt0.c1)))) CROSS JOIN vt0 ON (+ (CAST(v0.c1 AS INTEGER))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (('133738964') ISNULL) RIGHT OUTER JOIN v0 ON ((CAST(rt0.c0 AS TEXT))>>((~ (rt0.c1)))) CROSS JOIN vt0 ON (+ (CAST(v0.c1 AS INTEGER))) WHERE ((((rt1.c3)!=(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((((((((((((NULL)OR(vt0.c0)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(0x8022e17))))) ORDER BY CAST(v0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((NULL)OR(vt0.c0)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(0X8022e17))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(v0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((((((((((((NULL)OR(vt0.c0)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(0x8022e17))))) ORDER BY CAST(v0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT (((NOT (((((((((((((NULL)OR(vt0.c0)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(0X8022e17))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(v0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((((((((((((NULL)OR(vt0.c0)))OR(v0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(0x8022e17))))) ORDER BY CAST(v0.c0 AS INTEGER);
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)||(rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) WHERE (CAST((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)||(rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)||(rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) WHERE (CAST((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)||(rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((rt0.c1)||(rt0.c1))) NOT BETWEEN (vt0.c0) AND (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) WHERE (CAST((((rt0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))) AS NUMERIC));
SELECT * FROM v0 WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c1 COLLATE BINARY THEN v0.c1 COLLATE BINARY END);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c3  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c0))) ELSE json_array(rt0.c0, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c0))) ELSE json_array(rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c3  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c0))) ELSE json_array(rt0.c0, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c0))) ELSE json_array(rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE rt1.c3  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c0))) ELSE json_array(rt0.c0, rt0.c2) END);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN ()))!=(rt1.c4))) ORDER BY CASE WHEN ((rt1.c2)+(rt1.c0)) THEN (- (rt1.c0)) WHEN (+ (rt1.c4)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN x'' COLLATE RTRIM THEN ABS(rt1.c3) END ASC, CAST(((rt1.c2)IS NOT(rt1.c3)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))!=(rt1.c4))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2)+(rt1.c0)) THEN (- (rt1.c0)) WHEN (+ (rt1.c4)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN x'' COLLATE RTRIM THEN ABS(rt1.c3) END ASC, CAST(((rt1.c2)IS NOT(rt1.c3)) AS TEXT)  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN ()))!=(rt1.c4))) ORDER BY CASE WHEN ((rt1.c2)+(rt1.c0)) THEN (- (rt1.c0)) WHEN (+ (rt1.c4)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN x'' COLLATE RTRIM THEN ABS(rt1.c3) END ASC, CAST(((rt1.c2)IS NOT(rt1.c3)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))!=(rt1.c4))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2)+(rt1.c0)) THEN (- (rt1.c0)) WHEN (+ (rt1.c4)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN x'' COLLATE RTRIM THEN ABS(rt1.c3) END ASC, CAST(((rt1.c2)IS NOT(rt1.c3)) AS TEXT)  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN ()))!=(rt1.c4))) ORDER BY CASE WHEN ((rt1.c2)+(rt1.c0)) THEN (- (rt1.c0)) WHEN (+ (rt1.c4)) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN x'' COLLATE RTRIM THEN ABS(rt1.c3) END ASC, CAST(((rt1.c2)IS NOT(rt1.c3)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))OR(((((((((rt1.c0)AND(v0.c0)))AND(rt1.c2)))AND(rt0.c0)))AND('1633834536')))) FULL OUTER JOIN rt1 ON (+ (((v0.c1)GLOB(NULL)))) WHERE (x'3b3b');
SELECT SUM(count) FROM (SELECT ALL ((x'3b3b') IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))OR(((((((((rt1.c0)AND(v0.c0)))AND(rt1.c2)))AND(rt0.c0)))AND('1633834536')))) FULL OUTER JOIN rt1 ON (+ (((v0.c1)GLOB(NULL)))));
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))OR(((((((((rt1.c0)AND(v0.c0)))AND(rt1.c2)))AND(rt0.c0)))AND('1633834536')))) FULL OUTER JOIN rt1 ON (+ (((v0.c1)GLOB(NULL)))) WHERE (x'3b3b');
SELECT SUM(count) FROM (SELECT ALL ((x'3b3b') IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1 IN ()))OR(((((((((rt1.c0)AND(v0.c0)))AND(rt1.c2)))AND(rt0.c0)))AND('1633834536')))) FULL OUTER JOIN rt1 ON (+ (((v0.c1)GLOB(NULL)))));
SELECT ALL * FROM v0, rt0, rt1 WHERE ((((((rt0.c0) IS TRUE)))>((((((0.7156816616318983)AND(rt1.c4)))OR(rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) IS TRUE)))>((((((0.7156816616318983)AND(rt1.c4)))OR(rt1.c4)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((((((rt0.c0) IS TRUE)))>((((((0.7156816616318983)AND(rt1.c4)))OR(rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) IS TRUE)))>((((((0.7156816616318983)AND(rt1.c4)))OR(rt1.c4)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((((((rt0.c0) IS TRUE)))>((((((0.7156816616318983)AND(rt1.c4)))OR(rt1.c4))))));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))/(((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))/(((v0.c0) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))/(((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))/(((v0.c0) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))/(((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c4)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c4))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c4)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c4))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c4)));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (((v0.c2)+(rt1.c3)) COLLATE NOCASE) ORDER BY CASE WHEN ((rt1.c0) IS TRUE) THEN rt1.c4 END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)+(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY CASE WHEN ((rt1.c0) IS TRUE) THEN rt1.c4 END);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (((v0.c2)+(rt1.c3)) COLLATE NOCASE) ORDER BY CASE WHEN ((rt1.c0) IS TRUE) THEN rt1.c4 END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)+(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY CASE WHEN ((rt1.c0) IS TRUE) THEN rt1.c4 END);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (((v0.c2)+(rt1.c3)) COLLATE NOCASE) ORDER BY CASE WHEN ((rt1.c0) IS TRUE) THEN rt1.c4 END;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0, v0.c2, v0.c1)) BETWEEN (((rt0.c1 IN (v0.c2)), rt1.c4, (((rt0.c0))<>((v0.c0))))) AND ((((rt0.c0) IS FALSE), ((rt1.c1) IS FALSE), CAST(rt1.c3 AS REAL)))) CROSS JOIN rt1 ON (((vt0.c0)) BETWEEN ((CASE WHEN x'' THEN rt0.c0 WHEN v0.c2 THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 ELSE rt0.c1 END)) AND (('0.2722929886948142'))) RIGHT OUTER JOIN rt0 ON MIN(1.525556148E9, (+ (rt0.c2))) WHERE (((STRFTIME(rt1.c1, rt1.c1, rt1.c3)) BETWEEN (CASE WHEN vt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt1.c4 WHEN v0.c0 THEN v0.c0 END) AND (UNLIKELY(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt1.c1, rt1.c1, rt1.c3)) BETWEEN (CASE WHEN vt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt1.c4 WHEN v0.c0 THEN v0.c0 END) AND (UNLIKELY(rt1.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0, v0.c2, v0.c1)) BETWEEN (((rt0.c1 IN (v0.c2)), rt1.c4, (((rt0.c0))!=((v0.c0))))) AND ((((rt0.c0) IS FALSE), ((rt1.c1) IS FALSE), CAST(rt1.c3 AS REAL)))) CROSS JOIN rt1 ON (((vt0.c0)) BETWEEN ((CASE WHEN x'' THEN rt0.c0 WHEN v0.c2 THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 ELSE rt0.c1 END)) AND (('0.2722929886948142'))) RIGHT OUTER JOIN rt0 ON MIN(1.525556148E9, (+ (rt0.c2))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0, v0.c2, v0.c1)) BETWEEN (((rt0.c1 IN (v0.c2)), rt1.c4, (((rt0.c0))<>((v0.c0))))) AND ((((rt0.c0) IS FALSE), ((rt1.c1) IS FALSE), CAST(rt1.c3 AS REAL)))) CROSS JOIN rt1 ON (((vt0.c0)) BETWEEN ((CASE WHEN x'' THEN rt0.c0 WHEN v0.c2 THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 ELSE rt0.c1 END)) AND (('0.2722929886948142'))) RIGHT OUTER JOIN rt0 ON MIN(1.525556148E9, (+ (rt0.c2))) WHERE (((STRFTIME(rt1.c1, rt1.c1, rt1.c3)) BETWEEN (CASE WHEN vt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt1.c4 WHEN v0.c0 THEN v0.c0 END) AND (UNLIKELY(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((STRFTIME(rt1.c1, rt1.c1, rt1.c3)) BETWEEN (CASE WHEN vt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt1.c4 WHEN v0.c0 THEN v0.c0 END) AND (UNLIKELY(rt1.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0, v0.c2, v0.c1)) BETWEEN (((rt0.c1 IN (v0.c2)), rt1.c4, (((rt0.c0))!=((v0.c0))))) AND ((((rt0.c0) IS FALSE), ((rt1.c1) IS FALSE), CAST(rt1.c3 AS REAL)))) CROSS JOIN rt1 ON (((vt0.c0)) BETWEEN ((CASE WHEN x'' THEN rt0.c0 WHEN v0.c2 THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 ELSE rt0.c1 END)) AND (('0.2722929886948142'))) RIGHT OUTER JOIN rt0 ON MIN(1.525556148E9, (+ (rt0.c2))));
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c1 COLLATE NOCASE)AND(rt1.c1)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC, (((vt0.c0 IN ()))/((rt1.c1 IN (rt1.c1, rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1 COLLATE NOCASE)AND(rt1.c1)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC, (((vt0.c0 IN ()))/((rt1.c1 IN (rt1.c1, rt1.c2)))) ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c1 COLLATE NOCASE)AND(rt1.c1)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC, (((vt0.c0 IN ()))/((rt1.c1 IN (rt1.c1, rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1 COLLATE NOCASE)AND(rt1.c1)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC, (((vt0.c0 IN ()))/((rt1.c1 IN (rt1.c1, rt1.c2)))) ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((rt1.c1 COLLATE NOCASE)AND(rt1.c1)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR(CAST(rt1.c0 AS BLOB)))) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC, (((vt0.c0 IN ()))/((rt1.c1 IN (rt1.c1, rt1.c2)))) ASC;
SELECT * FROM rt0 WHERE ('	A');
SELECT SUM(count) FROM (SELECT ALL (('	A') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('	A');
SELECT SUM(count) FROM (SELECT ALL (('	A') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('	A');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((('-2135582731')<>(v0.c1))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE v0.c1  WHEN x'' THEN '{BݵIv?_' WHEN v0.c2 THEN 0.7478276527884359 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) WHERE (LTRIM(((0.16042743090838396) ISNULL), (((v0.c2, v0.c1, vt0.c0))=((0Xffffffffd4baff99, vt0.c0, v0.c2))))) ORDER BY CAST('G말K]eꝤ塣R' AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((0.16042743090838396) ISNULL), (((v0.c2, v0.c1, vt0.c0))==((0xffffffffd4baff99, vt0.c0, v0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((('-2135582731')<>(v0.c1))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE v0.c1  WHEN x'' THEN '{BݵIv?_' WHEN v0.c2 THEN 0.7478276527884359 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) ORDER BY CAST('G말K]eꝤ塣R' AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((('-2135582731')<>(v0.c1))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE v0.c1  WHEN x'' THEN '{BݵIv?_' WHEN v0.c2 THEN 0.7478276527884359 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) WHERE (LTRIM(((0.16042743090838396) ISNULL), (((v0.c2, v0.c1, vt0.c0))=((0Xffffffffd4baff99, vt0.c0, v0.c2))))) ORDER BY CAST('G말K]eꝤ塣R' AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((0.16042743090838396) ISNULL), (((v0.c2, v0.c1, vt0.c0))==((0xffffffffd4baff99, vt0.c0, v0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((('-2135582731')<>(v0.c1))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE v0.c1  WHEN x'' THEN '{BݵIv?_' WHEN v0.c2 THEN 0.7478276527884359 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) ORDER BY CAST('G말K]eꝤ塣R' AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((('-2135582731')<>(v0.c1))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE v0.c1  WHEN x'' THEN '{BݵIv?_' WHEN v0.c2 THEN 0.7478276527884359 WHEN vt0.c0 THEN v0.c2 ELSE v0.c0 END)) WHERE (LTRIM(((0.16042743090838396) ISNULL), (((v0.c2, v0.c1, vt0.c0))=((0Xffffffffd4baff99, vt0.c0, v0.c2))))) ORDER BY CAST('G말K]eꝤ塣R' AS TEXT) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY)|(rt0.c1))) ORDER BY (((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END))<=((0.9125185196414592))) ASC, ((((((vt0.c0)OR(v0.c0)))OR(x'c8e28527')))AND(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)|(rt0.c1))) IS TRUE)  as count FROM v0, vt0, rt1, rt0 ORDER BY (((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END))<=((0.9125185196414592))) ASC, ((((((vt0.c0)OR(v0.c0)))OR(x'c8e28527')))AND(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY)|(rt0.c1))) ORDER BY (((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END))<=((0.9125185196414592))) ASC, ((((((vt0.c0)OR(v0.c0)))OR(x'c8e28527')))AND(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)|(rt0.c1))) IS TRUE)  as count FROM v0, vt0, rt1, rt0 ORDER BY (((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END))<=((0.9125185196414592))) ASC, ((((((vt0.c0)OR(v0.c0)))OR(x'c8e28527')))AND(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY)|(rt0.c1))) ORDER BY (((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END))<=((0.9125185196414592))) ASC, ((((((vt0.c0)OR(v0.c0)))OR(x'c8e28527')))AND(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((((((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))AND('0.10306042097342238')))OR('-729876680')))OR(rt0.c0)))OR(rt0.c0))) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))AND('0.10306042097342238')))OR('-729876680')))OR(rt0.c0)))OR(rt0.c0))) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (rt0.c1))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((((((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))AND('0.10306042097342238')))OR('-729876680')))OR(rt0.c0)))OR(rt0.c0))) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))AND('0.10306042097342238')))OR('-729876680')))OR(rt0.c0)))OR(rt0.c0))) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (rt0.c1))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((((((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c0)))AND('0.10306042097342238')))OR('-729876680')))OR(rt0.c0)))OR(rt0.c0))) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (rt0.c1)));
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c4)OR(rt1.c0)))IS NOT(STRFTIME(rt0.c0, rt1.c0, '-729876680')))) ORDER BY (((NULL)) BETWEEN (('1101432640')) AND ((((rt0.c2) NOTNULL)))) DESC, MAX(((rt1.c1) IS TRUE), CASE WHEN rt1.c4 THEN rt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)OR(rt1.c0)))IS NOT(STRFTIME(rt0.c0, rt1.c0, '-729876680')))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NULL)) BETWEEN (('1101432640')) AND ((((rt0.c2) NOTNULL)))) DESC, MAX(((rt1.c1) IS TRUE), CASE WHEN rt1.c4 THEN rt0.c0 END) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c4)OR(rt1.c0)))IS NOT(STRFTIME(rt0.c0, rt1.c0, '-729876680')))) ORDER BY (((NULL)) BETWEEN (('1101432640')) AND ((((rt0.c2) NOTNULL)))) DESC, MAX(((rt1.c1) IS TRUE), CASE WHEN rt1.c4 THEN rt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)OR(rt1.c0)))IS NOT(STRFTIME(rt0.c0, rt1.c0, '-729876680')))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NULL)) BETWEEN (('1101432640')) AND ((((rt0.c2) NOTNULL)))) DESC, MAX(((rt1.c1) IS TRUE), CASE WHEN rt1.c4 THEN rt0.c0 END) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c4)OR(rt1.c0)))IS NOT(STRFTIME(rt0.c0, rt1.c0, '-729876680')))) ORDER BY (((NULL)) BETWEEN (('1101432640')) AND ((((rt0.c2) NOTNULL)))) DESC, MAX(((rt1.c1) IS TRUE), CASE WHEN rt1.c4 THEN rt0.c0 END) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY) IS FALSE)) ORDER BY CAST(CAST(NULL AS BLOB) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(NULL AS BLOB) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY) IS FALSE)) ORDER BY CAST(CAST(NULL AS BLOB) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(NULL AS BLOB) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY) IS FALSE)) ORDER BY CAST(CAST(NULL AS BLOB) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt1.c0)&(rt0.c1))) BETWEEN ((+ (rt1.c1))) AND ('1108704469'))) ORDER BY rt0.c2 DESC, (NOT (((((rt1.c2)OR(vt0.c0)))OR(rt0.c2)))), CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(rt0.c1))) BETWEEN ((+ (rt1.c1))) AND ('1108704469'))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY rt0.c2 DESC, (NOT (((((rt1.c2)OR(vt0.c0)))OR(rt0.c2)))), CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt1.c0)&(rt0.c1))) BETWEEN ((+ (rt1.c1))) AND ('1108704469'))) ORDER BY rt0.c2 DESC, (NOT (((((rt1.c2)OR(vt0.c0)))OR(rt0.c2)))), CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(rt0.c1))) BETWEEN ((+ (rt1.c1))) AND ('1108704469'))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY rt0.c2 DESC, (NOT (((((rt1.c2)OR(vt0.c0)))OR(rt0.c2)))), CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt1.c0)&(rt0.c1))) BETWEEN ((+ (rt1.c1))) AND ('1108704469'))) ORDER BY rt0.c2 DESC, (NOT (((((rt1.c2)OR(vt0.c0)))OR(rt0.c2)))), CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt1.c1)) ELSE rt0.c2 END FULL OUTER JOIN vt0 ON (((NULL, NULL, CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END, ((vt0.c0) NOTNULL), CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))>((CAST(rt1.c2 AS TEXT), rt0.c0, CAST(rt1.c3 AS BLOB), ABS(rt1.c0), CAST(rt1.c3 AS INTEGER)))) WHERE ((((rt1.c2)) BETWEEN ((((((((((((((rt1.c1)AND(rt0.c2)))AND(vt0.c0)))OR(0.9372734336418772)))AND(rt1.c4)))OR(rt0.c1)))AND(NULL)))) AND ((((((rt1.c2)OR(vt0.c0)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((((((((((((rt1.c1)AND(rt0.c2)))AND(vt0.c0)))OR(0.9372734336418772)))AND(rt1.c4)))OR(rt0.c1)))AND(NULL)))) AND ((((((rt1.c2)OR(vt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt1.c1)) ELSE rt0.c2 END FULL OUTER JOIN vt0 ON (((NULL, NULL, CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END, ((vt0.c0) NOTNULL), CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))>((CAST(rt1.c2 AS TEXT), rt0.c0, CAST(rt1.c3 AS BLOB), ABS(rt1.c0), CAST(rt1.c3 AS INTEGER)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt1.c1)) ELSE rt0.c2 END FULL OUTER JOIN vt0 ON (((NULL, NULL, CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END, ((vt0.c0) NOTNULL), CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))>((CAST(rt1.c2 AS TEXT), rt0.c0, CAST(rt1.c3 AS BLOB), ABS(rt1.c0), CAST(rt1.c3 AS INTEGER)))) WHERE ((((rt1.c2)) BETWEEN ((((((((((((((rt1.c1)AND(rt0.c2)))AND(vt0.c0)))OR(0.9372734336418772)))AND(rt1.c4)))OR(rt0.c1)))AND(NULL)))) AND ((((((rt1.c2)OR(vt0.c0)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((((((((((((rt1.c1)AND(rt0.c2)))AND(vt0.c0)))OR(0.9372734336418772)))AND(rt1.c4)))OR(rt0.c1)))AND(NULL)))) AND ((((((rt1.c2)OR(vt0.c0)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt1.c1)) ELSE rt0.c2 END FULL OUTER JOIN vt0 ON (((NULL, NULL, CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END, ((vt0.c0) NOTNULL), CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))>((CAST(rt1.c2 AS TEXT), rt0.c0, CAST(rt1.c3 AS BLOB), ABS(rt1.c0), CAST(rt1.c3 AS INTEGER)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE ((((rt1.c4)OR(rt1.c1)))OR(rt1.c1))  WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt1.c1)) ELSE rt0.c2 END FULL OUTER JOIN vt0 ON (((NULL, NULL, CASE WHEN rt1.c2 THEN NULL ELSE rt1.c0 END, ((vt0.c0) NOTNULL), CASE WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c0 END))>((CAST(rt1.c2 AS TEXT), rt0.c0, CAST(rt1.c3 AS BLOB), ABS(rt1.c0), CAST(rt1.c3 AS INTEGER)))) WHERE ((((rt1.c2)) BETWEEN ((((((((((((((rt1.c1)AND(rt0.c2)))AND(vt0.c0)))OR(0.9372734336418772)))AND(rt1.c4)))OR(rt0.c1)))AND(NULL)))) AND ((((((rt1.c2)OR(vt0.c0)))OR(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE ((rt1.c2) BETWEEN (rt0.c2) AND (v0.c1))  WHEN rt1.c2 COLLATE BINARY THEN 0.2722929886948142 END LEFT OUTER JOIN v0 ON CAST(((((v0.c1)OR(rt1.c0)))OR(rt0.c0)) AS NUMERIC) CROSS JOIN rt0 ON TYPEOF('!') WHERE (((((((v0.c0)OR(rt1.c0)))OR(rt0.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (x''))) ORDER BY ((rt1.c1) BETWEEN ((v0.c1 IN ())) AND (CAST(rt1.c3 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt1.c0)))OR(rt0.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (x''))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE ((rt1.c2) BETWEEN (rt0.c2) AND (v0.c1))  WHEN rt1.c2 COLLATE BINARY THEN 0.2722929886948142 END LEFT OUTER JOIN v0 ON CAST(((((v0.c1)OR(rt1.c0)))OR(rt0.c0)) AS NUMERIC) CROSS JOIN rt0 ON TYPEOF('!') ORDER BY ((rt1.c1) BETWEEN ((v0.c1 IN ())) AND (CAST(rt1.c3 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE ((rt1.c2) BETWEEN (rt0.c2) AND (v0.c1))  WHEN rt1.c2 COLLATE BINARY THEN 0.2722929886948142 END LEFT OUTER JOIN v0 ON CAST(((((v0.c1)OR(rt1.c0)))OR(rt0.c0)) AS NUMERIC) CROSS JOIN rt0 ON TYPEOF('!') WHERE (((((((v0.c0)OR(rt1.c0)))OR(rt0.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (x''))) ORDER BY ((rt1.c1) BETWEEN ((v0.c1 IN ())) AND (CAST(rt1.c3 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(rt1.c0)))OR(rt0.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (x''))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE ((rt1.c2) BETWEEN (rt0.c2) AND (v0.c1))  WHEN rt1.c2 COLLATE BINARY THEN 0.2722929886948142 END LEFT OUTER JOIN v0 ON CAST(((((v0.c1)OR(rt1.c0)))OR(rt0.c0)) AS NUMERIC) CROSS JOIN rt0 ON TYPEOF('!') ORDER BY ((rt1.c1) BETWEEN ((v0.c1 IN ())) AND (CAST(rt1.c3 AS REAL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CAST(((rt0.c1)<=(rt1.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY CAST(((rt0.c1)<=(rt1.c1)) AS TEXT) ASC);
SELECT COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CAST(((rt0.c1)<=(rt1.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY CAST(((rt0.c1)<=(rt1.c1)) AS TEXT) ASC);
SELECT COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CAST(((rt0.c1)<=(rt1.c1)) AS TEXT) ASC;
SELECT * FROM rt0, rt1 WHERE ((((((((((~ (rt1.c2)))OR((((rt1.c1, rt1.c4, x'ab8a'))>((rt1.c1, rt1.c1, rt0.c0))))))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))))AND(((((((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))))AND((('')IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt1.c2)))OR((((rt1.c1, rt1.c4, x'ab8a'))>((rt1.c1, rt1.c1, rt0.c0))))))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))))AND(((((((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))))AND((('')IS(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((((((~ (rt1.c2)))OR((((rt1.c1, rt1.c4, x'ab8a'))>((rt1.c1, rt1.c1, rt0.c0))))))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))))AND(((((((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))))AND((('')IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt1.c2)))OR((((rt1.c1, rt1.c4, x'ab8a'))>((rt1.c1, rt1.c1, rt0.c0))))))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))))AND(((((((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))))AND((('')IS(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((((((~ (rt1.c2)))OR((((rt1.c1, rt1.c4, x'ab8a'))>((rt1.c1, rt1.c1, rt0.c0))))))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))))AND(((((((((rt1.c3)AND(rt0.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c0)))))AND((('')IS(rt0.c2)))));
SELECT * FROM rt1 WHERE ((((((rt1.c3, rt1.c3, rt1.c3))<>((rt1.c0, NULL, rt1.c3)))) NOT BETWEEN (((((rt1.c3)AND(rt1.c0)))OR(rt1.c4))) AND (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2))))) ORDER BY ((((rt1.c1, rt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c3))) IN ((rt1.c1 IN ()), TRIM(DISTINCT rt1.c1, rt1.c4))), (((rt1.c1, rt1.c3, rt1.c1)) BETWEEN (((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))), (- (rt1.c2)), CASE WHEN rt1.c4 THEN rt1.c3 END)) AND ((NULL, (((0xffffffff8cce17ff))=((rt1.c1))), ((x'd316')<<(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt1.c3, rt1.c3))<>((rt1.c0, NULL, rt1.c3)))) NOT BETWEEN (((((rt1.c3)AND(rt1.c0)))OR(rt1.c4))) AND (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1, rt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c3))) IN ((rt1.c1 IN ()), TRIM(DISTINCT rt1.c1, rt1.c4))), (((rt1.c1, rt1.c3, rt1.c1)) BETWEEN (((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))), (- (rt1.c2)), CASE WHEN rt1.c4 THEN rt1.c3 END)) AND ((NULL, (((0Xffffffff8cce17ff))=((rt1.c1))), ((x'd316')<<(rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE ((((((rt1.c3, rt1.c3, rt1.c3))<>((rt1.c0, NULL, rt1.c3)))) NOT BETWEEN (((((rt1.c3)AND(rt1.c0)))OR(rt1.c4))) AND (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2))))) ORDER BY ((((rt1.c1, rt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c3))) IN ((rt1.c1 IN ()), TRIM(DISTINCT rt1.c1, rt1.c4))), (((rt1.c1, rt1.c3, rt1.c1)) BETWEEN (((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))), (- (rt1.c2)), CASE WHEN rt1.c4 THEN rt1.c3 END)) AND ((NULL, (((0xffffffff8cce17ff))=((rt1.c1))), ((x'd316')<<(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt1.c3, rt1.c3))<>((rt1.c0, NULL, rt1.c3)))) NOT BETWEEN (((((rt1.c3)AND(rt1.c0)))OR(rt1.c4))) AND (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1, rt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c3))) IN ((rt1.c1 IN ()), TRIM(DISTINCT rt1.c1, rt1.c4))), (((rt1.c1, rt1.c3, rt1.c1)) BETWEEN (((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))), (- (rt1.c2)), CASE WHEN rt1.c4 THEN rt1.c3 END)) AND ((NULL, (((0Xffffffff8cce17ff))=((rt1.c1))), ((x'd316')<<(rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE ((((((rt1.c3, rt1.c3, rt1.c3))<>((rt1.c0, NULL, rt1.c3)))) NOT BETWEEN (((((rt1.c3)AND(rt1.c0)))OR(rt1.c4))) AND (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))OR(rt1.c2))))) ORDER BY ((((rt1.c1, rt1.c0, rt1.c1))>((NULL, rt1.c1, rt1.c3))) IN ((rt1.c1 IN ()), TRIM(DISTINCT rt1.c1, rt1.c4))), (((rt1.c1, rt1.c3, rt1.c1)) BETWEEN (((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))), (- (rt1.c2)), CASE WHEN rt1.c4 THEN rt1.c3 END)) AND ((NULL, (((0xffffffff8cce17ff))=((rt1.c1))), ((x'd316')<<(rt1.c1))))) ASC;
SELECT COUNT(*) FROM v0 WHERE ((NOT (((((v0.c1)OR(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c1)OR(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((((v0.c1)OR(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c1)OR(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((((v0.c1)OR(v0.c0)))AND(v0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt1, v0, rt0 WHERE ((~ (((v0.c1)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)>>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, rt0 WHERE ((~ (((v0.c1)>>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)>>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt1, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, v0, rt0 WHERE ((~ (((v0.c1)>>(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON 'K(?XAFS' WHERE ((~ (0Xffffffffd9afd7c5 COLLATE BINARY))) ORDER BY (+ (rt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0Xffffffffd9afd7c5 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON 'K(?XAFS' ORDER BY (+ (rt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON 'K(?XAFS' WHERE ((~ (0Xffffffffd9afd7c5 COLLATE BINARY))) ORDER BY (+ (rt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0Xffffffffd9afd7c5 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON 'K(?XAFS' ORDER BY (+ (rt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON 'K(?XAFS' WHERE ((~ (0Xffffffffd9afd7c5 COLLATE BINARY))) ORDER BY (+ (rt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (v0.c2);
SELECT * FROM rt1, vt0, rt0, v0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt1, vt0, rt0, v0);
SELECT * FROM rt1, vt0, rt0, v0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt1, vt0, rt0, v0);
SELECT * FROM rt1, vt0, rt0, v0 WHERE ((x'' IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((rt1.c2 IN (rt1.c4)) COLLATE NOCASE) ORDER BY ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c2, rt1.c2)))) AND (NULL)), ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))<(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN (rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c2, rt1.c2)))) AND (NULL)), ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))<(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((rt1.c2 IN (rt1.c4)) COLLATE NOCASE) ORDER BY ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c2, rt1.c2)))) AND (NULL)), ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))<(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN (rt1.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c2, rt1.c2)))) AND (NULL)), ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))<(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((rt1.c2 IN (rt1.c4)) COLLATE NOCASE) ORDER BY ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c3)) AND ((rt1.c0, rt1.c2, rt1.c2)))) AND (NULL)), ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))<(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (rt1.c0) ORDER BY ((LOWER(DISTINCT vt0.c0))>>(((((((((rt1.c2)AND(rt1.c2)))AND('-1231790152')))OR(vt0.c0)))OR(rt0.c1))))  NULLS FIRST, ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)==((~ (rt1.c1)))) ASC  NULLS FIRST, CASE ((((((((rt0.c1)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c3))  WHEN ((rt1.c0)&(rt0.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) WHEN 0.1756442833976668 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) ISNULL) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c0) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((LOWER(DISTINCT vt0.c0))>>(((((((((rt1.c2)AND(rt1.c2)))AND('-1231790152')))OR(vt0.c0)))OR(rt0.c1))))  NULLS FIRST, ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)==((~ (rt1.c1)))) ASC  NULLS FIRST, CASE ((((((((rt0.c1)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c3))  WHEN ((rt1.c0)&(rt0.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) WHEN 0.1756442833976668 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) ISNULL) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c0) IS FALSE) END ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (rt1.c0) ORDER BY ((LOWER(DISTINCT vt0.c0))>>(((((((((rt1.c2)AND(rt1.c2)))AND('-1231790152')))OR(vt0.c0)))OR(rt0.c1))))  NULLS FIRST, ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)==((~ (rt1.c1)))) ASC  NULLS FIRST, CASE ((((((((rt0.c1)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c3))  WHEN ((rt1.c0)&(rt0.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) WHEN 0.1756442833976668 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) ISNULL) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c0) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((LOWER(DISTINCT vt0.c0))>>(((((((((rt1.c2)AND(rt1.c2)))AND('-1231790152')))OR(vt0.c0)))OR(rt0.c1))))  NULLS FIRST, ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)==((~ (rt1.c1)))) ASC  NULLS FIRST, CASE ((((((((rt0.c1)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c3))  WHEN ((rt1.c0)&(rt0.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) WHEN 0.1756442833976668 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) ISNULL) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c0) IS FALSE) END ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (rt1.c0) ORDER BY ((LOWER(DISTINCT vt0.c0))>>(((((((((rt1.c2)AND(rt1.c2)))AND('-1231790152')))OR(vt0.c0)))OR(rt0.c1))))  NULLS FIRST, ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)==((~ (rt1.c1)))) ASC  NULLS FIRST, CASE ((((((((rt0.c1)AND(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c3))  WHEN ((rt1.c0)&(rt0.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) WHEN 0.1756442833976668 COLLATE RTRIM THEN rt0.c2 WHEN ((vt0.c0) ISNULL) THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c0) IS FALSE) END ASC;
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((((rt1.c0, rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c3, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c4, rt1.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c3, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c4, rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((((rt1.c0, rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c3, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c4, rt1.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c3, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c4, rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((((rt1.c0, rt1.c4, vt0.c0)) NOT BETWEEN ((rt1.c3, v0.c0, rt1.c2)) AND ((rt1.c0, rt1.c4, rt1.c2))) COLLATE RTRIM);
SELECT * FROM v0, rt1 WHERE (CASE CAST(v0.c0 AS REAL)  WHEN rt1.c1 THEN rt1.c4 ELSE CASE '312721882'  WHEN rt1.c2 THEN rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS REAL)  WHEN rt1.c1 THEN rt1.c4 ELSE CASE '312721882'  WHEN rt1.c2 THEN rt1.c2 END END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE CAST(v0.c0 AS REAL)  WHEN rt1.c1 THEN rt1.c4 ELSE CASE '312721882'  WHEN rt1.c2 THEN rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c0 AS REAL)  WHEN rt1.c1 THEN rt1.c4 ELSE CASE '312721882'  WHEN rt1.c2 THEN rt1.c2 END END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE CAST(v0.c0 AS REAL)  WHEN rt1.c1 THEN rt1.c4 ELSE CASE '312721882'  WHEN rt1.c2 THEN rt1.c2 END END);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt1.c4) NOT NULL)) BETWEEN ((~ (rt1.c4))) AND ((((rt1.c2, -1779773349, rt1.c4)) BETWEEN ((rt1.c1, rt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c2, rt0.c2)))))) ORDER BY ((((NULL)IS NOT(rt0.c0)))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT NULL)) BETWEEN ((~ (rt1.c4))) AND ((((rt1.c2, -1779773349, rt1.c4)) BETWEEN ((rt1.c1, rt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c2, rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((NULL)IS NOT(rt0.c0)))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (x'')))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt1.c4) NOT NULL)) BETWEEN ((~ (rt1.c4))) AND ((((rt1.c2, -1779773349, rt1.c4)) BETWEEN ((rt1.c1, rt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c2, rt0.c2)))))) ORDER BY ((((NULL)IS NOT(rt0.c0)))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT NULL)) BETWEEN ((~ (rt1.c4))) AND ((((rt1.c2, -1779773349, rt1.c4)) BETWEEN ((rt1.c1, rt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c2, rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((NULL)IS NOT(rt0.c0)))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (x'')))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt1.c4) NOT NULL)) BETWEEN ((~ (rt1.c4))) AND ((((rt1.c2, -1779773349, rt1.c4)) BETWEEN ((rt1.c1, rt0.c0, rt1.c1)) AND ((vt0.c0, rt1.c2, rt0.c2)))))) ORDER BY ((((NULL)IS NOT(rt0.c0)))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (x'')))) DESC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))|(rt1.c4)) CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))) COLLATE BINARY LEFT OUTER JOIN v0 ON v0.c0 WHERE (((((((((TRIM(rt1.c0))OR(2051730496 COLLATE BINARY)))OR(rt0.c2)))OR(CASE WHEN rt1.c2 THEN '' ELSE v0.c0 END)))OR(((((rt1.c2)AND(rt1.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(rt1.c0))OR(2051730496 COLLATE BINARY)))OR(rt0.c2)))OR(CASE WHEN rt1.c2 THEN '' ELSE v0.c0 END)))OR(((((rt1.c2)AND(rt1.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))|(rt1.c4)) CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))) COLLATE BINARY LEFT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))|(rt1.c4)) CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))) COLLATE BINARY LEFT OUTER JOIN v0 ON v0.c0 WHERE (((((((((TRIM(rt1.c0))OR(2051730496 COLLATE BINARY)))OR(rt0.c2)))OR(CASE WHEN rt1.c2 THEN '' ELSE v0.c0 END)))OR(((((rt1.c2)AND(rt1.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(rt1.c0))OR(2051730496 COLLATE BINARY)))OR(rt0.c2)))OR(CASE WHEN rt1.c2 THEN '' ELSE v0.c0 END)))OR(((((rt1.c2)AND(rt1.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((v0.c1)AND(rt0.c0)))OR(rt0.c1)))|(rt1.c4)) CROSS JOIN vt0 ON (((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c1))) COLLATE BINARY LEFT OUTER JOIN v0 ON v0.c0);
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))==((rt0.c0))))!=(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))=((rt0.c0))))<>(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))==((rt0.c0))))!=(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))=((rt0.c0))))<>(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))==((rt0.c0))))!=(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)<(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)<(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)<(rt0.c1)) AS REAL));
SELECT COUNT(*) FROM vt0, rt0, v0 NOT INDEXED WHERE ((((v0.c1)IS(v0.c0)) IN ())) ORDER BY ((((((((((rt0.c2) NOTNULL))OR((+ (v0.c1)))))OR(rt0.c0)))AND(((vt0.c0) NOT NULL))))OR(SUBSTR(vt0.c0, 0.8235576159963048)));
SELECT SUM(count) FROM (SELECT (((((v0.c1)IS(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((((rt0.c2) NOTNULL))OR((+ (v0.c1)))))OR(rt0.c0)))AND(((vt0.c0) NOT NULL))))OR(SUBSTR(vt0.c0, 0.8235576159963048))));
SELECT COUNT(*) FROM vt0, rt0, v0 NOT INDEXED WHERE ((((v0.c1)IS(v0.c0)) IN ())) ORDER BY ((((((((((rt0.c2) NOTNULL))OR((+ (v0.c1)))))OR(rt0.c0)))AND(((vt0.c0) NOT NULL))))OR(SUBSTR(vt0.c0, 0.8235576159963048)));
SELECT SUM(count) FROM (SELECT (((((v0.c1)IS(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((((rt0.c2) NOTNULL))OR((+ (v0.c1)))))OR(rt0.c0)))AND(((vt0.c0) NOT NULL))))OR(SUBSTR(vt0.c0, 0.8235576159963048))));
SELECT COUNT(*) FROM vt0, rt0, v0 NOT INDEXED WHERE ((((v0.c1)IS(v0.c0)) IN ())) ORDER BY ((((((((((rt0.c2) NOTNULL))OR((+ (v0.c1)))))OR(rt0.c0)))AND(((vt0.c0) NOT NULL))))OR(SUBSTR(vt0.c0, 0.8235576159963048)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE TIME(NULL, rt1.c3, rt0.c0)  WHEN (rt1.c2 IN (v0.c2, rt1.c4)) THEN ((rt1.c3)*(rt1.c1)) ELSE (((-1.109053675E9)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))) END RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c0) BETWEEN (rt0.c0) AND (v0.c0)), NULL, (rt0.c2 IN (rt1.c3)), (rt0.c2 IN ())))==(((vt0.c0 IN (rt0.c0)), (rt0.c1 IN ()), v0.c2 COLLATE NOCASE, CAST(rt1.c0 AS TEXT), ((((rt1.c1)OR(v0.c0)))OR(rt1.c3))))) LEFT OUTER JOIN v0 ON LOWER(rt1.c2 COLLATE RTRIM) WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE TIME(NULL, rt1.c3, rt0.c0)  WHEN (rt1.c2 IN (v0.c2, rt1.c4)) THEN ((rt1.c3)*(rt1.c1)) ELSE (((-1.109053675E9)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))) END RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c0) BETWEEN (rt0.c0) AND (v0.c0)), NULL, (rt0.c2 IN (rt1.c3)), (rt0.c2 IN ())))=(((vt0.c0 IN (rt0.c0)), (rt0.c1 IN ()), v0.c2 COLLATE NOCASE, CAST(rt1.c0 AS TEXT), ((((rt1.c1)OR(v0.c0)))OR(rt1.c3))))) LEFT OUTER JOIN v0 ON LOWER(rt1.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CASE TIME(NULL, rt1.c3, rt0.c0)  WHEN (rt1.c2 IN (v0.c2, rt1.c4)) THEN ((rt1.c3)*(rt1.c1)) ELSE (((-1.109053675E9)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))) END RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c0) BETWEEN (rt0.c0) AND (v0.c0)), NULL, (rt0.c2 IN (rt1.c3)), (rt0.c2 IN ())))==(((vt0.c0 IN (rt0.c0)), (rt0.c1 IN ()), v0.c2 COLLATE NOCASE, CAST(rt1.c0 AS TEXT), ((((rt1.c1)OR(v0.c0)))OR(rt1.c3))))) LEFT OUTER JOIN v0 ON LOWER(rt1.c2 COLLATE RTRIM) WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE TIME(NULL, rt1.c3, rt0.c0)  WHEN (rt1.c2 IN (v0.c2, rt1.c4)) THEN ((rt1.c3)*(rt1.c1)) ELSE (((-1.109053675E9)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))) END RIGHT OUTER JOIN rt1 ON (((((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt1.c0) BETWEEN (rt0.c0) AND (v0.c0)), NULL, (rt0.c2 IN (rt1.c3)), (rt0.c2 IN ())))=(((vt0.c0 IN (rt0.c0)), (rt0.c1 IN ()), v0.c2 COLLATE NOCASE, CAST(rt1.c0 AS TEXT), ((((rt1.c1)OR(v0.c0)))OR(rt1.c3))))) LEFT OUTER JOIN v0 ON LOWER(rt1.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END) IS TRUE) WHERE (CAST((('-1718485645') ISNULL) AS NUMERIC)) ORDER BY CASE ((rt1.c4)+(rt1.c3))  WHEN (rt1.c0 IN ()) THEN rt1.c3 COLLATE RTRIM ELSE 0.06256393046230802 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1718485645') ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END) IS TRUE) ORDER BY CASE ((rt1.c4)+(rt1.c3))  WHEN (rt1.c0 IN ()) THEN rt1.c3 COLLATE RTRIM ELSE 0.06256393046230802 END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END) IS TRUE) WHERE (CAST((('-1718485645') ISNULL) AS NUMERIC)) ORDER BY CASE ((rt1.c4)+(rt1.c3))  WHEN (rt1.c0 IN ()) THEN rt1.c3 COLLATE RTRIM ELSE 0.06256393046230802 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1718485645') ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END) IS TRUE) ORDER BY CASE ((rt1.c4)+(rt1.c3))  WHEN (rt1.c0 IN ()) THEN rt1.c3 COLLATE RTRIM ELSE 0.06256393046230802 END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END) IS TRUE) WHERE (CAST((('-1718485645') ISNULL) AS NUMERIC)) ORDER BY CASE ((rt1.c4)+(rt1.c3))  WHEN (rt1.c0 IN ()) THEN rt1.c3 COLLATE RTRIM ELSE 0.06256393046230802 END  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c1)-(-9223372036854775808))) ISNULL) CROSS JOIN rt1 ON CAST(CASE v0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END AS REAL) WHERE ((((rt1.c4 COLLATE RTRIM))>=((json_array_length(rt1.c1))))) ORDER BY 0x73179272 ASC  NULLS LAST, ((rt1.c1)>>(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4 COLLATE RTRIM))>=((json_array_length(rt1.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c1)-(-9223372036854775808))) ISNULL) CROSS JOIN rt1 ON CAST(CASE v0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END AS REAL) ORDER BY 0X73179272 ASC  NULLS LAST, ((rt1.c1)>>(rt1.c0))  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c1)-(-9223372036854775808))) ISNULL) CROSS JOIN rt1 ON CAST(CASE v0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END AS REAL) WHERE ((((rt1.c4 COLLATE RTRIM))>=((json_array_length(rt1.c1))))) ORDER BY 0x73179272 ASC  NULLS LAST, ((rt1.c1)>>(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4 COLLATE RTRIM))>=((json_array_length(rt1.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c1)-(-9223372036854775808))) ISNULL) CROSS JOIN rt1 ON CAST(CASE v0.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END AS REAL) ORDER BY 0X73179272 ASC  NULLS LAST, ((rt1.c1)>>(rt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)&(rt0.c0))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)&(rt0.c0))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)&(rt0.c0))))) ORDER BY NULL DESC;
SELECT ALL * FROM rt0, v0 WHERE (-156447267 COLLATE BINARY) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((-156447267 COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0, v0 WHERE (-156447267 COLLATE BINARY) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((-156447267 COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0, v0 WHERE (-156447267 COLLATE BINARY) ORDER BY rt0.c2 ASC;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(SQLITE_COMPILEOPTION_GET(vt0.c0)) DESC  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(SQLITE_COMPILEOPTION_GET(vt0.c0)) DESC  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(SQLITE_COMPILEOPTION_GET(vt0.c0)) DESC  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(SQLITE_COMPILEOPTION_GET(vt0.c0)) DESC  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(SQLITE_COMPILEOPTION_GET(vt0.c0)) DESC  NULLS LAST, CAST((NOT (vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(v0.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c0)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(v0.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(v0.c0)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(v0.c0));
SELECT * FROM rt0, v0, vt0, rt1 WHERE (((((v0.c0)OR(v0.c0)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((rt0.c0)AND(rt1.c4)))OR(rt1.c0)))OR(v0.c1)))OR((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))))OR(CAST(rt1.c1 AS TEXT))))OR((((v0.c0))<=((v0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0, rt1 ORDER BY ((((((((((((rt0.c0)AND(rt1.c4)))OR(rt1.c0)))OR(v0.c1)))OR((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))))OR(CAST(rt1.c1 AS TEXT))))OR((((v0.c0))<=((v0.c2))))) ASC);
SELECT * FROM rt0, v0, vt0, rt1 WHERE (((((v0.c0)OR(v0.c0)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((rt0.c0)AND(rt1.c4)))OR(rt1.c0)))OR(v0.c1)))OR((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))))OR(CAST(rt1.c1 AS TEXT))))OR((((v0.c0))<=((v0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0, rt1 ORDER BY ((((((((((((rt0.c0)AND(rt1.c4)))OR(rt1.c0)))OR(v0.c1)))OR((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))))OR(CAST(rt1.c1 AS TEXT))))OR((((v0.c0))<=((v0.c2))))) ASC);
SELECT * FROM rt0, v0, vt0, rt1 WHERE (((((v0.c0)OR(v0.c0)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY ((((((((((((rt0.c0)AND(rt1.c4)))OR(rt1.c0)))OR(v0.c1)))OR((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))))))OR(CAST(rt1.c1 AS TEXT))))OR((((v0.c0))<=((v0.c2))))) ASC;
SELECT * FROM v0, rt1 WHERE (((((rt1.c1) NOT NULL)) ISNULL)) ORDER BY (~ (((v0.c2)-(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0, rt1 ORDER BY (~ (((v0.c2)-(rt1.c1)))));
SELECT * FROM v0, rt1 WHERE (((((rt1.c1) NOT NULL)) ISNULL)) ORDER BY (~ (((v0.c2)-(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0, rt1 ORDER BY (~ (((v0.c2)-(rt1.c1)))));
SELECT * FROM v0, rt1 WHERE (((((rt1.c1) NOT NULL)) ISNULL)) ORDER BY (~ (((v0.c2)-(rt1.c1))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE BINARY) ORDER BY CASE CAST(v0.c2 AS TEXT)  WHEN (+ (vt0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))) WHEN v0.c2 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c2)LIKE(v0.c2)) ELSE ((NULL) BETWEEN (v0.c2) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CAST(v0.c2 AS TEXT)  WHEN (+ (vt0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))) WHEN v0.c2 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c2)LIKE(v0.c2)) ELSE ((NULL) BETWEEN (v0.c2) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE BINARY) ORDER BY CASE CAST(v0.c2 AS TEXT)  WHEN (+ (vt0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))) WHEN v0.c2 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c2)LIKE(v0.c2)) ELSE ((NULL) BETWEEN (v0.c2) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE CAST(v0.c2 AS TEXT)  WHEN (+ (vt0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))) WHEN v0.c2 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c2)LIKE(v0.c2)) ELSE ((NULL) BETWEEN (v0.c2) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE BINARY) ORDER BY CASE CAST(v0.c2 AS TEXT)  WHEN (+ (vt0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))) WHEN v0.c2 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c2)LIKE(v0.c2)) ELSE ((NULL) BETWEEN (v0.c2) AND (v0.c0)) END;
SELECT * FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((+ ('134360599')))OR(v0.c2)))AND(((v0.c1)LIKE(v0.c2))))) ORDER BY ((((rt0.c2)=(rt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ ('134360599')))OR(v0.c2)))AND(((v0.c1)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)==(rt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((+ ('134360599')))OR(v0.c2)))AND(((v0.c1)LIKE(v0.c2))))) ORDER BY ((((rt0.c2)=(rt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ ('134360599')))OR(v0.c2)))AND(((v0.c1)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c2)==(rt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((+ ('134360599')))OR(v0.c2)))AND(((v0.c1)LIKE(v0.c2))))) ORDER BY ((((rt0.c2)=(rt0.c0))) NOT NULL) DESC  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON x'' WHERE (((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))))>=(((v0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))))>=(((v0.c1 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON x'' WHERE (((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))))>=(((v0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))))>=(((v0.c1 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON x'');
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON x'' WHERE (((((((vt0.c0)) BETWEEN ((v0.c2)) AND ((vt0.c0)))))>=(((v0.c1 IN ())))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((+ (rt1.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt1.c2 END) AND ('-1944908331')) WHERE ((~ (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 WHEN 0xffffffffaddc777c THEN rt1.c1 WHEN x'' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((rt0.c2 IN ())))<((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c1 END)))  NULLS FIRST, (((((rt1.c3))>((rt1.c2))))>('qJ')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 WHEN 0xffffffffaddc777c THEN rt1.c1 WHEN x'' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((+ (rt1.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt1.c2 END) AND ('-1944908331')) ORDER BY ((((rt0.c2 IN ())))<((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c1 END)))  NULLS FIRST, (((((rt1.c3))>((rt1.c2))))>('qJ')) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((+ (rt1.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt1.c2 END) AND ('-1944908331')) WHERE ((~ (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 WHEN 0xffffffffaddc777c THEN rt1.c1 WHEN x'' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((rt0.c2 IN ())))<((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c1 END)))  NULLS FIRST, (((((rt1.c3))>((rt1.c2))))>('qJ')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 WHEN 0xffffffffaddc777c THEN rt1.c1 WHEN x'' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((+ (rt1.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt1.c2 END) AND ('-1944908331')) ORDER BY ((((rt0.c2 IN ())))<((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c1 END)))  NULLS FIRST, (((((rt1.c3))>((rt1.c2))))>('qJ')) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((+ (rt1.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt1.c2 END) AND ('-1944908331')) WHERE ((~ (CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 WHEN 0xffffffffaddc777c THEN rt1.c1 WHEN x'' THEN rt1.c4 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY ((((rt0.c2 IN ())))<((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c1 END)))  NULLS FIRST, (((((rt1.c3))>((rt1.c2))))>('qJ')) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0, rt1 WHERE (((RTRIM(v0.c0))<=(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (((~ (rt1.c1)))GLOB(((rt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((RTRIM(v0.c0))<=(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY (((~ (rt1.c1)))GLOB(((rt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0, rt1 WHERE (((RTRIM(v0.c0))<=(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (((~ (rt1.c1)))GLOB(((rt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((RTRIM(v0.c0))<=(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY (((~ (rt1.c1)))GLOB(((rt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED, vt0, v0, rt1 WHERE (((RTRIM(v0.c0))<=(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (((~ (rt1.c1)))GLOB(((rt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt1 WHERE (load_extension(json_array_length(rt1.c2, rt1.c0), ((((((((v0.c2)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c0)))) ORDER BY ((NOT (0.58501927614673)) IN (((v0.c2) BETWEEN (v0.c1) AND (rt1.c1)))) DESC, CASE ((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) IS FALSE) WHEN ((v0.c2)IS(rt1.c2)) THEN ((rt1.c1)=(v0.c1)) WHEN (((rt1.c4))>=((rt1.c2))) THEN (rt1.c3 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(json_array_length(rt1.c2, rt1.c0), ((((((((v0.c2)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c0)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((NOT (0.58501927614673)) IN (((v0.c2) BETWEEN (v0.c1) AND (rt1.c1)))) DESC, CASE ((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) IS FALSE) WHEN ((v0.c2)IS(rt1.c2)) THEN ((rt1.c1)==(v0.c1)) WHEN (((rt1.c4))>=((rt1.c2))) THEN (rt1.c3 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (load_extension(json_array_length(rt1.c2, rt1.c0), ((((((((v0.c2)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c0)))) ORDER BY ((NOT (0.58501927614673)) IN (((v0.c2) BETWEEN (v0.c1) AND (rt1.c1)))) DESC, CASE ((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) IS FALSE) WHEN ((v0.c2)IS(rt1.c2)) THEN ((rt1.c1)=(v0.c1)) WHEN (((rt1.c4))>=((rt1.c2))) THEN (rt1.c3 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(json_array_length(rt1.c2, rt1.c0), ((((((((v0.c2)AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c0)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((NOT (0.58501927614673)) IN (((v0.c2) BETWEEN (v0.c1) AND (rt1.c1)))) DESC, CASE ((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))  WHEN rt1.c0 COLLATE RTRIM THEN ((v0.c0) IS FALSE) WHEN ((v0.c2)IS(rt1.c2)) THEN ((rt1.c1)==(v0.c1)) WHEN (((rt1.c4))>=((rt1.c2))) THEN (rt1.c3 IN ()) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt0 ON (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END, (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c2, rt1.c3, rt1.c0))>((((vt0.c0) IS FALSE), ((rt0.c1)GLOB('254066839')), ((((((((rt1.c1)OR(rt1.c4)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)), (- (NULL)), ((rt1.c2)-(0.6145537753878965))))) WHERE (((rt0.c0)LIKE(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt0 ON (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END, (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c2, rt1.c3, rt1.c0))>((((vt0.c0) IS FALSE), ((rt0.c1)GLOB('254066839')), ((((((((rt1.c1)OR(rt1.c4)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)), (- (NULL)), ((rt1.c2)-(0.6145537753878965))))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt0 ON (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END, (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c2, rt1.c3, rt1.c0))>((((vt0.c0) IS FALSE), ((rt0.c1)GLOB('254066839')), ((((((((rt1.c1)OR(rt1.c4)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)), (- (NULL)), ((rt1.c2)-(0.6145537753878965))))) WHERE (((rt0.c0)LIKE(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)LIKE(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt0 ON (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END, (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c2, rt1.c3, rt1.c0))>((((vt0.c0) IS FALSE), ((rt0.c1)GLOB('254066839')), ((((((((rt1.c1)OR(rt1.c4)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)), (- (NULL)), ((rt1.c2)-(0.6145537753878965))))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt0 ON (((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END, (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), rt0.c2, rt1.c3, rt1.c0))>((((vt0.c0) IS FALSE), ((rt0.c1)GLOB('254066839')), ((((((((rt1.c1)OR(rt1.c4)))AND(vt0.c0)))OR(rt0.c1)))AND(vt0.c0)), (- (NULL)), ((rt1.c2)-(0.6145537753878965))))) WHERE (((rt0.c0)LIKE(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((((CASE x'4737'  WHEN v0.c2 THEN vt0.c0 WHEN rt1.c4 THEN rt1.c2 WHEN 0.4333334377845438 THEN '}FBi!JkP_' ELSE v0.c1 END))<((((rt1.c0)==(rt1.c0)))))) ORDER BY (((v0.c0 COLLATE NOCASE))<((HEX(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE x'4737'  WHEN v0.c2 THEN vt0.c0 WHEN rt1.c4 THEN rt1.c2 WHEN 0.4333334377845438 THEN '}FBi!JkP_' ELSE v0.c1 END))<((((rt1.c0)==(rt1.c0)))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (((v0.c0 COLLATE NOCASE))<((HEX(rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((((CASE x'4737'  WHEN v0.c2 THEN vt0.c0 WHEN rt1.c4 THEN rt1.c2 WHEN 0.4333334377845438 THEN '}FBi!JkP_' ELSE v0.c1 END))<((((rt1.c0)==(rt1.c0)))))) ORDER BY (((v0.c0 COLLATE NOCASE))<((HEX(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE x'4737'  WHEN v0.c2 THEN vt0.c0 WHEN rt1.c4 THEN rt1.c2 WHEN 0.4333334377845438 THEN '}FBi!JkP_' ELSE v0.c1 END))<((((rt1.c0)==(rt1.c0)))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (((v0.c0 COLLATE NOCASE))<((HEX(rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, vt0 WHERE ((((CASE x'4737'  WHEN v0.c2 THEN vt0.c0 WHEN rt1.c4 THEN rt1.c2 WHEN 0.4333334377845438 THEN '}FBi!JkP_' ELSE v0.c1 END))<((((rt1.c0)==(rt1.c0)))))) ORDER BY (((v0.c0 COLLATE NOCASE))<((HEX(rt1.c2))))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (HEX(rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt1.c1)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (HEX(rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt1.c1)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (HEX(rt1.c1));
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, rt1.c3))<((rt1.c1, NULL, rt1.c2)))  WHEN ((((rt1.c4)AND(rt1.c3)))AND(v0.c2)) THEN ((rt1.c2)-(vt0.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)) END WHERE (CAST(((0.9059492221394846) IS FALSE) AS TEXT)) ORDER BY (~ (((rt1.c3)||(v0.c2)))), v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.9059492221394846) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, rt1.c3))<((rt1.c1, NULL, rt1.c2)))  WHEN ((((rt1.c4)AND(rt1.c3)))AND(v0.c2)) THEN ((rt1.c2)-(vt0.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)) END ORDER BY (~ (((rt1.c3)||(v0.c2)))), v0.c2  NULLS LAST);
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, rt1.c3))<((rt1.c1, NULL, rt1.c2)))  WHEN ((((rt1.c4)AND(rt1.c3)))AND(v0.c2)) THEN ((rt1.c2)-(vt0.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)) END WHERE (CAST(((0.9059492221394846) IS FALSE) AS TEXT)) ORDER BY (~ (((rt1.c3)||(v0.c2)))), v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.9059492221394846) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, rt1.c3))<((rt1.c1, NULL, rt1.c2)))  WHEN ((((rt1.c4)AND(rt1.c3)))AND(v0.c2)) THEN ((rt1.c2)-(vt0.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)) END ORDER BY (~ (((rt1.c3)||(v0.c2)))), v0.c2  NULLS LAST);
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON CASE (((rt1.c2, rt1.c0, rt1.c3))<((rt1.c1, NULL, rt1.c2)))  WHEN ((((rt1.c4)AND(rt1.c3)))AND(v0.c2)) THEN ((rt1.c2)-(vt0.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c3) AND (v0.c1)) END WHERE (CAST(((0.9059492221394846) IS FALSE) AS TEXT)) ORDER BY (~ (((rt1.c3)||(v0.c2)))), v0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, v0 WHERE (rt1.c2);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (((((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c1)))OR(((v0.c2) NOTNULL))))OR(rt1.c0)))AND(ABS(rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 WHEN rt0.c2 THEN x'' ELSE rt1.c1 END))) ORDER BY (CAST('wV' AS INTEGER) IN ())  NULLS LAST, ((((vt0.c0))<=((rt1.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c1)))OR(((v0.c2) NOTNULL))))OR(rt1.c0)))AND(ABS(rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 WHEN rt0.c2 THEN x'' ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, v0, rt0 NOT INDEXED, vt0 ORDER BY (CAST('wV' AS INTEGER) IN ())  NULLS LAST, ((((vt0.c0))<=((rt1.c1))) IN ()) ASC);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (((((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c1)))OR(((v0.c2) NOTNULL))))OR(rt1.c0)))AND(ABS(rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 WHEN rt0.c2 THEN x'' ELSE rt1.c1 END))) ORDER BY (CAST('wV' AS INTEGER) IN ())  NULLS LAST, ((((vt0.c0))<=((rt1.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c1)))OR(((v0.c2) NOTNULL))))OR(rt1.c0)))AND(ABS(rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 WHEN rt0.c2 THEN x'' ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, v0, rt0 NOT INDEXED, vt0 ORDER BY (CAST('wV' AS INTEGER) IN ())  NULLS LAST, ((((vt0.c0))<=((rt1.c1))) IN ()) ASC);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (((((((((((((rt0.c2)AND(v0.c2)))OR(rt0.c1)))OR(((v0.c2) NOTNULL))))OR(rt1.c0)))AND(ABS(rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN v0.c0 WHEN rt0.c2 THEN x'' ELSE rt1.c1 END))) ORDER BY (CAST('wV' AS INTEGER) IN ())  NULLS LAST, ((((vt0.c0))<=((rt1.c1))) IN ()) ASC;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(NULL))))>=((((v0.c1)||(v0.c1)))))) ORDER BY (((('釻>j') BETWEEN (v0.c2) AND (v0.c1))) BETWEEN (json_array(v0.c2, v0.c1)) AND (((v0.c2)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(NULL))))>=((((v0.c1)||(v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((('釻>j') BETWEEN (v0.c2) AND (v0.c1))) BETWEEN (json_array(v0.c2, v0.c1)) AND (((v0.c2)>=(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(NULL))))>=((((v0.c1)||(v0.c1)))))) ORDER BY (((('釻>j') BETWEEN (v0.c2) AND (v0.c1))) BETWEEN (json_array(v0.c2, v0.c1)) AND (((v0.c2)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(NULL))))>=((((v0.c1)||(v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((('釻>j') BETWEEN (v0.c2) AND (v0.c1))) BETWEEN (json_array(v0.c2, v0.c1)) AND (((v0.c2)>=(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)AND(NULL))))>=((((v0.c1)||(v0.c1)))))) ORDER BY (((('釻>j') BETWEEN (v0.c2) AND (v0.c1))) BETWEEN (json_array(v0.c2, v0.c1)) AND (((v0.c2)>=(v0.c0))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((((v0.c0)AND(vt0.c0)))AND('906321621'))) AND ((+ ('ywp&'))))) ORDER BY ((((((rt0.c1, rt0.c1, x'', v0.c0, rt0.c0))>((v0.c2, 770390594, v0.c2, rt0.c1, rt0.c2)))))<>((v0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((((v0.c0)AND(vt0.c0)))AND('906321621'))) AND ((+ ('ywp&'))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c1, rt0.c1, x'', v0.c0, rt0.c0))>((v0.c2, 770390594, v0.c2, rt0.c1, rt0.c2)))))!=((v0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((((v0.c0)AND(vt0.c0)))AND('906321621'))) AND ((+ ('ywp&'))))) ORDER BY ((((((rt0.c1, rt0.c1, x'', v0.c0, rt0.c0))>((v0.c2, 770390594, v0.c2, rt0.c1, rt0.c2)))))<>((v0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((((v0.c0)AND(vt0.c0)))AND('906321621'))) AND ((+ ('ywp&'))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((rt0.c1, rt0.c1, x'', v0.c0, rt0.c0))>((v0.c2, 770390594, v0.c2, rt0.c1, rt0.c2)))))!=((v0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (((((v0.c0)AND(vt0.c0)))AND('906321621'))) AND ((+ ('ywp&'))))) ORDER BY ((((((rt0.c1, rt0.c1, x'', v0.c0, rt0.c0))>((v0.c2, 770390594, v0.c2, rt0.c1, rt0.c2)))))<>((v0.c1))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT * FROM v0, rt1, vt0, rt0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt1, vt0, rt0);
SELECT * FROM v0, rt1, vt0, rt0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt1, vt0, rt0);
SELECT * FROM v0, rt1, vt0, rt0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (rt0.c1 COLLATE BINARY) AND (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0))<>((vt0.c0))))AND(x'' COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))<>((vt0.c0))))AND(x'' COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0))<>((vt0.c0))))AND(x'' COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))<>((vt0.c0))))AND(x'' COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0))<>((vt0.c0))))AND(x'' COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM vt0, rt0, v0 WHERE ((LTRIM(rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((LTRIM(rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((LTRIM(rt0.c1) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(0.4333334377845438)))OR(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(0.4333334377845438)))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(0.4333334377845438)))OR(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(0.4333334377845438)))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(0.4333334377845438)))OR(rt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, rt1, rt0 WHERE ((+ (((-1888020346)<(rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((-1888020346)<(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY rt1.c4 ASC  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE ((+ (((-1888020346)<(rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((-1888020346)<(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY rt1.c4 ASC  NULLS FIRST);
SELECT * FROM vt0, rt1, rt0 WHERE ((+ (((-1888020346)<(rt1.c1))))) ORDER BY rt1.c4 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND (((('-878234779') ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND (((('-878234779') ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND (((('-878234779') ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND (((('-878234779') ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)=(vt0.c0)))) AND (((('-878234779') ISNULL)))));
SELECT ALL * FROM rt1, rt0, vt0, v0 WHERE (((rt0.c2 COLLATE BINARY)AND(((rt0.c0)|(rt1.c3))))) ORDER BY ((rt1.c4 COLLATE NOCASE)+(((NULL)>=(vt0.c0)))) ASC, CAST(((((0x52981539)OR('987329753')))OR(rt0.c1)) AS BLOB), (NOT ((~ (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)AND(((rt0.c0)|(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt0, v0 ORDER BY ((rt1.c4 COLLATE NOCASE)+(((NULL)>=(vt0.c0)))) ASC, CAST(((((0x52981539)OR('987329753')))OR(rt0.c1)) AS BLOB), (NOT ((~ (rt1.c3)))) DESC);
SELECT ALL * FROM rt1, rt0, vt0, v0 WHERE (((rt0.c2 COLLATE BINARY)AND(((rt0.c0)|(rt1.c3))))) ORDER BY ((rt1.c4 COLLATE NOCASE)+(((NULL)>=(vt0.c0)))) ASC, CAST(((((0x52981539)OR('987329753')))OR(rt0.c1)) AS BLOB), (NOT ((~ (rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)AND(((rt0.c0)|(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt0, v0 ORDER BY ((rt1.c4 COLLATE NOCASE)+(((NULL)>=(vt0.c0)))) ASC, CAST(((((0x52981539)OR('987329753')))OR(rt0.c1)) AS BLOB), (NOT ((~ (rt1.c3)))) DESC);
SELECT ALL * FROM rt1, rt0, vt0, v0 WHERE (((rt0.c2 COLLATE BINARY)AND(((rt0.c0)|(rt1.c3))))) ORDER BY ((rt1.c4 COLLATE NOCASE)+(((NULL)>=(vt0.c0)))) ASC, CAST(((((0x52981539)OR('987329753')))OR(rt0.c1)) AS BLOB), (NOT ((~ (rt1.c3)))) DESC;
SELECT * FROM v0, rt1 NOT INDEXED WHERE ('1383310054');
SELECT SUM(count) FROM (SELECT ALL (('1383310054') IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 NOT INDEXED WHERE ('1383310054');
SELECT SUM(count) FROM (SELECT ALL (('1383310054') IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 NOT INDEXED WHERE ('1383310054');
SELECT ALL COUNT(*) FROM rt0, rt1, v0, vt0 WHERE (((((((((((((((v0.c0)OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))OR(rt0.c2)))OR(x'2e48')))AND(rt0.c0)))<<(((rt1.c3) ISNULL)))) ORDER BY v0.c2, ((((rt1.c2) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (v0.c1) AND (rt0.c1))) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))OR(rt0.c2)))OR(x'2e48')))AND(rt0.c0)))<<(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, v0, vt0 ORDER BY v0.c2, ((((rt1.c2) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (v0.c1) AND (rt0.c1))) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1, v0, vt0 WHERE (((((((((((((((v0.c0)OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))OR(rt0.c2)))OR(x'2e48')))AND(rt0.c0)))<<(((rt1.c3) ISNULL)))) ORDER BY v0.c2, ((((rt1.c2) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (v0.c1) AND (rt0.c1))) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))OR(rt0.c2)))OR(x'2e48')))AND(rt0.c0)))<<(((rt1.c3) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, v0, vt0 ORDER BY v0.c2, ((((rt1.c2) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (v0.c1) AND (rt0.c1))) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1, v0, vt0 WHERE (((((((((((((((v0.c0)OR(rt1.c0)))AND(v0.c2)))OR(v0.c2)))OR(rt0.c2)))OR(x'2e48')))AND(rt0.c0)))<<(((rt1.c3) ISNULL)))) ORDER BY v0.c2, ((((rt1.c2) IS FALSE)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (v0.c1) AND (rt0.c1))) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1, rt0.c1, v0.c0))<>((rt0.c1, rt0.c2, rt0.c1))) IN ()) WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(CAST(rt0.c2 AS TEXT)))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c2)))LIKE(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1, rt0.c1, v0.c0))<>((rt0.c1, rt0.c2, rt0.c1))) IN ()) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c2)))LIKE(rt0.c2))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1, rt0.c1, v0.c0))<>((rt0.c1, rt0.c2, rt0.c1))) IN ()) WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(CAST(rt0.c2 AS TEXT)))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c2)))LIKE(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1, rt0.c1, v0.c0))<>((rt0.c1, rt0.c2, rt0.c1))) IN ()) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c2)))LIKE(rt0.c2))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((v0.c1, rt0.c1, v0.c0))<>((rt0.c1, rt0.c2, rt0.c1))) IN ()) WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(CAST(rt0.c2 AS TEXT)))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c2)))LIKE(rt0.c2))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CAST(((v0.c2)>>(v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)>>(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((v0.c2)>>(v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)>>(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(((v0.c2)>>(v0.c2)) AS TEXT));
SELECT * FROM vt0, rt0, rt1, v0 WHERE ((((vt0.c0, rt1.c1, v0.c2)) BETWEEN (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt1.c1))<((v0.c0))), rt1.c1)) AND (((((rt1.c1))<((v0.c0))), (((1.365894326E9)) BETWEEN ((v0.c2)) AND ((v0.c1))), ((rt0.c2)IS NOT(rt1.c1)))))) ORDER BY CASE WHEN rt0.c2 THEN (((rt0.c2, v0.c2, rt0.c1, v0.c2, vt0.c0))>((rt0.c0, v0.c2, vt0.c0, rt1.c4, rt0.c1))) ELSE (+ (v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c1, v0.c2)) BETWEEN (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt1.c1))<((v0.c0))), rt1.c1)) AND (((((rt1.c1))<((v0.c0))), (((1.365894326E9)) BETWEEN ((v0.c2)) AND ((v0.c1))), ((rt0.c2)IS NOT(rt1.c1)))))) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY CASE WHEN rt0.c2 THEN (((rt0.c2, v0.c2, rt0.c1, v0.c2, vt0.c0))>((rt0.c0, v0.c2, vt0.c0, rt1.c4, rt0.c1))) ELSE (+ (v0.c1)) END ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, rt1, v0 WHERE ((((vt0.c0, rt1.c1, v0.c2)) BETWEEN (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt1.c1))<((v0.c0))), rt1.c1)) AND (((((rt1.c1))<((v0.c0))), (((1.365894326E9)) BETWEEN ((v0.c2)) AND ((v0.c1))), ((rt0.c2)IS NOT(rt1.c1)))))) ORDER BY CASE WHEN rt0.c2 THEN (((rt0.c2, v0.c2, rt0.c1, v0.c2, vt0.c0))>((rt0.c0, v0.c2, vt0.c0, rt1.c4, rt0.c1))) ELSE (+ (v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c1, v0.c2)) BETWEEN (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt1.c1))<((v0.c0))), rt1.c1)) AND (((((rt1.c1))<((v0.c0))), (((1.365894326E9)) BETWEEN ((v0.c2)) AND ((v0.c1))), ((rt0.c2)IS NOT(rt1.c1)))))) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY CASE WHEN rt0.c2 THEN (((rt0.c2, v0.c2, rt0.c1, v0.c2, vt0.c0))>((rt0.c0, v0.c2, vt0.c0, rt1.c4, rt0.c1))) ELSE (+ (v0.c1)) END ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, rt1, v0 WHERE ((((vt0.c0, rt1.c1, v0.c2)) BETWEEN (((((v0.c1)) BETWEEN ((rt0.c0)) AND ((NULL))), (((rt1.c1))<((v0.c0))), rt1.c1)) AND (((((rt1.c1))<((v0.c0))), (((1.365894326E9)) BETWEEN ((v0.c2)) AND ((v0.c1))), ((rt0.c2)IS NOT(rt1.c1)))))) ORDER BY CASE WHEN rt0.c2 THEN (((rt0.c2, v0.c2, rt0.c1, v0.c2, vt0.c0))>((rt0.c0, v0.c2, vt0.c0, rt1.c4, rt0.c1))) ELSE (+ (v0.c1)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((TRIM(DISTINCT v0.c1)) NOTNULL) WHERE ((((((rt0.c2)+(vt0.c0)), NULLIF(rt0.c0, v0.c0), (+ (v0.c1))))=((((((0X75496940)AND(rt0.c0)))OR('-555959281')), v0.c1 COLLATE NOCASE, ((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)+(vt0.c0)), NULLIF(rt0.c0, v0.c0), (+ (v0.c1))))==((((((0X75496940)AND(rt0.c0)))OR('-555959281')), v0.c1 COLLATE NOCASE, ((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 CROSS JOIN v0 ON ((TRIM(DISTINCT v0.c1)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((TRIM(DISTINCT v0.c1)) NOTNULL) WHERE ((((((rt0.c2)+(vt0.c0)), NULLIF(rt0.c0, v0.c0), (+ (v0.c1))))=((((((0X75496940)AND(rt0.c0)))OR('-555959281')), v0.c1 COLLATE NOCASE, ((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)+(vt0.c0)), NULLIF(rt0.c0, v0.c0), (+ (v0.c1))))==((((((0X75496940)AND(rt0.c0)))OR('-555959281')), v0.c1 COLLATE NOCASE, ((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 CROSS JOIN v0 ON ((TRIM(DISTINCT v0.c1)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN v0 ON ((TRIM(DISTINCT v0.c1)) NOTNULL) WHERE ((((((rt0.c2)+(vt0.c0)), NULLIF(rt0.c0, v0.c0), (+ (v0.c1))))=((((((0X75496940)AND(rt0.c0)))OR('-555959281')), v0.c1 COLLATE NOCASE, ((rt0.c0) BETWEEN (v0.c1) AND (rt0.c1))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt1.c0)) NOT NULL) FULL OUTER JOIN vt0 ON (((v0.c1, v0.c1, rt1.c4)) NOT BETWEEN ((((rt1.c1)>(v0.c2)), CAST(rt1.c1 AS INTEGER), '5q')) AND ((LENGTH(rt1.c4), v0.c0 COLLATE RTRIM, 0.6516739796477042))) WHERE (TRIM(DISTINCT -7.25942375E8 COLLATE BINARY, rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT -7.25942375E8 COLLATE BINARY, rt1.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt1.c0)) NOT NULL) FULL OUTER JOIN vt0 ON (((v0.c1, v0.c1, rt1.c4)) NOT BETWEEN ((((rt1.c1)>(v0.c2)), CAST(rt1.c1 AS INTEGER), '5q')) AND ((LENGTH(rt1.c4), v0.c0 COLLATE RTRIM, 0.6516739796477042))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt1.c0)) NOT NULL) FULL OUTER JOIN vt0 ON (((v0.c1, v0.c1, rt1.c4)) NOT BETWEEN ((((rt1.c1)>(v0.c2)), CAST(rt1.c1 AS INTEGER), '5q')) AND ((LENGTH(rt1.c4), v0.c0 COLLATE RTRIM, 0.6516739796477042))) WHERE (TRIM(DISTINCT -7.25942375E8 COLLATE BINARY, rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT -7.25942375E8 COLLATE BINARY, rt1.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt1.c0)) NOT NULL) FULL OUTER JOIN vt0 ON (((v0.c1, v0.c1, rt1.c4)) NOT BETWEEN ((((rt1.c1)>(v0.c2)), CAST(rt1.c1 AS INTEGER), '5q')) AND ((LENGTH(rt1.c4), v0.c0 COLLATE RTRIM, 0.6516739796477042))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((UNLIKELY(DISTINCT rt1.c0)) NOT NULL) FULL OUTER JOIN vt0 ON (((v0.c1, v0.c1, rt1.c4)) NOT BETWEEN ((((rt1.c1)>(v0.c2)), CAST(rt1.c1 AS INTEGER), '5q')) AND ((LENGTH(rt1.c4), v0.c0 COLLATE RTRIM, 0.6516739796477042))) WHERE (TRIM(DISTINCT -7.25942375E8 COLLATE BINARY, rt1.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 CROSS JOIN rt1 ON ((((rt1.c3 IN ()), ((rt1.c2) BETWEEN (v0.c0) AND ('	A')), ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3))))==((CAST(v0.c2 AS BLOB), ((vt0.c0)>(rt1.c2)), (NOT (rt0.c0))))) WHERE ((((NOT (vt0.c0))) NOT BETWEEN (load_extension(rt0.c2)) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (load_extension(rt0.c2)) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0 CROSS JOIN rt1 ON ((((rt1.c3 IN ()), ((rt1.c2) BETWEEN (v0.c0) AND ('	A')), ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3))))==((CAST(v0.c2 AS BLOB), ((vt0.c0)>(rt1.c2)), (NOT (rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 CROSS JOIN rt1 ON ((((rt1.c3 IN ()), ((rt1.c2) BETWEEN (v0.c0) AND ('	A')), ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3))))==((CAST(v0.c2 AS BLOB), ((vt0.c0)>(rt1.c2)), (NOT (rt0.c0))))) WHERE ((((NOT (vt0.c0))) NOT BETWEEN (load_extension(rt0.c2)) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (load_extension(rt0.c2)) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0 CROSS JOIN rt1 ON ((((rt1.c3 IN ()), ((rt1.c2) BETWEEN (v0.c0) AND ('	A')), ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3))))==((CAST(v0.c2 AS BLOB), ((vt0.c0)>(rt1.c2)), (NOT (rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 CROSS JOIN rt1 ON ((((rt1.c3 IN ()), ((rt1.c2) BETWEEN (v0.c0) AND ('	A')), ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3))))==((CAST(v0.c2 AS BLOB), ((vt0.c0)>(rt1.c2)), (NOT (rt0.c0))))) WHERE ((((NOT (vt0.c0))) NOT BETWEEN (load_extension(rt0.c2)) AND (CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((((CAST(rt1.c2 AS NUMERIC))OR(((((rt1.c3)AND(v0.c2)))AND(rt1.c0)))))AND(v0.c1)))AND(((rt1.c2)>(v0.c0)))))OR(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c2 AS NUMERIC))OR(((((rt1.c3)AND(v0.c2)))AND(rt1.c0)))))AND(v0.c1)))AND(((rt1.c2)>(v0.c0)))))OR(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((((CAST(rt1.c2 AS NUMERIC))OR(((((rt1.c3)AND(v0.c2)))AND(rt1.c0)))))AND(v0.c1)))AND(((rt1.c2)>(v0.c0)))))OR(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c2 AS NUMERIC))OR(((((rt1.c3)AND(v0.c2)))AND(rt1.c0)))))AND(v0.c1)))AND(((rt1.c2)>(v0.c0)))))OR(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((((((((CAST(rt1.c2 AS NUMERIC))OR(((((rt1.c3)AND(v0.c2)))AND(rt1.c0)))))AND(v0.c1)))AND(((rt1.c2)>(v0.c0)))))OR(((v0.c0)IS(v0.c0)))));
SELECT * FROM rt0, rt1, vt0, v0 WHERE (0.8182618044666256);
SELECT SUM(count) FROM (SELECT ALL ((0.8182618044666256) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT * FROM rt0, rt1, vt0, v0 WHERE (0.8182618044666256);
SELECT SUM(count) FROM (SELECT ALL ((0.8182618044666256) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT * FROM rt0, rt1, vt0, v0 WHERE (0.8182618044666256);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE RTRIM WHERE ('7\r');
SELECT SUM(count) FROM (SELECT (('7\r') IS TRUE)  as count FROM vt0, rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE RTRIM WHERE ('7\r');
SELECT SUM(count) FROM (SELECT (('7\r') IS TRUE)  as count FROM vt0, rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE RTRIM WHERE ('7\r');
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ()) ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ()) ASC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((((v0.c1) IS TRUE)) BETWEEN (((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))) AND (((rt1.c3) IS FALSE))) CROSS JOIN rt1 ON '' WHERE ((((v0.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((1108704469)))) ORDER BY (((((((((rt0.c2)OR(v0.c0)))OR(2.98681397E8)))AND(v0.c0)))AND(rt1.c1)) IN (((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((1108704469)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((v0.c1) IS TRUE)) BETWEEN (((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))) AND (((rt1.c3) IS FALSE))) CROSS JOIN rt1 ON '' ORDER BY (((((((((rt0.c2)OR(v0.c0)))OR(2.98681397E8)))AND(v0.c0)))AND(rt1.c1)) IN (((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((((v0.c1) IS TRUE)) BETWEEN (((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))) AND (((rt1.c3) IS FALSE))) CROSS JOIN rt1 ON '' WHERE ((((v0.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((1108704469)))) ORDER BY (((((((((rt0.c2)OR(v0.c0)))OR(2.98681397E8)))AND(v0.c0)))AND(rt1.c1)) IN (((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((1108704469)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((v0.c1) IS TRUE)) BETWEEN (((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))) AND (((rt1.c3) IS FALSE))) CROSS JOIN rt1 ON '' ORDER BY (((((((((rt0.c2)OR(v0.c0)))OR(2.98681397E8)))AND(v0.c0)))AND(rt1.c1)) IN (((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((((v0.c1) IS TRUE)) BETWEEN (((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))) AND (((rt1.c3) IS FALSE))) CROSS JOIN rt1 ON '' WHERE ((((v0.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((1108704469)))) ORDER BY (((((((((rt0.c2)OR(v0.c0)))OR(2.98681397E8)))AND(v0.c0)))AND(rt1.c1)) IN (((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE x''  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END COLLATE RTRIM) ORDER BY (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END))>((IFNULL(rt1.c0, rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END))>((IFNULL(rt1.c0, rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE x''  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END COLLATE RTRIM) ORDER BY (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END))>((IFNULL(rt1.c0, rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END))>((IFNULL(rt1.c0, rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE x''  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c4 END COLLATE RTRIM) ORDER BY (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END))>((IFNULL(rt1.c0, rt1.c1))))  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (IFNULL((('2USn!v?	v')!=(rt1.c3)), ((((rt1.c0)AND(rt0.c0)))OR(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((IFNULL((('2USn!v?	v')!=(rt1.c3)), ((((rt1.c0)AND(rt0.c0)))OR(rt1.c4)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (IFNULL((('2USn!v?	v')!=(rt1.c3)), ((((rt1.c0)AND(rt0.c0)))OR(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((IFNULL((('2USn!v?	v')!=(rt1.c3)), ((((rt1.c0)AND(rt0.c0)))OR(rt1.c4)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (IFNULL((('2USn!v?	v')!=(rt1.c3)), ((((rt1.c0)AND(rt0.c0)))OR(rt1.c4))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT) FULL OUTER JOIN v0 ON 1627381566 WHERE (CASE WHEN ((rt1.c1)>=(rt0.c1)) THEN (((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(v0.c0)))OR(rt1.c1)))OR(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)>=(rt0.c1)) THEN (((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(v0.c0)))OR(rt1.c1)))OR(rt1.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT) FULL OUTER JOIN v0 ON 1627381566);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT) FULL OUTER JOIN v0 ON 1627381566 WHERE (CASE WHEN ((rt1.c1)>=(rt0.c1)) THEN (((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(v0.c0)))OR(rt1.c1)))OR(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1)>=(rt0.c1)) THEN (((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(v0.c0)))OR(rt1.c1)))OR(rt1.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT) FULL OUTER JOIN v0 ON 1627381566);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c0 RIGHT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT) FULL OUTER JOIN v0 ON 1627381566 WHERE (CASE WHEN ((rt1.c1)>=(rt0.c1)) THEN (((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))) ELSE ((((((((rt1.c0)OR(rt1.c1)))OR(v0.c0)))OR(rt1.c1)))OR(rt1.c0)) END);
SELECT ALL * FROM rt1, v0, rt0 WHERE ('Xrf<V筕Z');
SELECT SUM(count) FROM (SELECT (('Xrf<V筕Z') IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ('Xrf<V筕Z');
SELECT SUM(count) FROM (SELECT (('Xrf<V筕Z') IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ('Xrf<V筕Z');
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON (('-2045945683')<=(CASE rt1.c3  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN 0.32940807555928764 WHEN 1.956423438E9 THEN v0.c2 ELSE vt0.c0 END)) INNER JOIN v0 ON ((((((((rt1.c3)AND(rt0.c0)))OR(rt1.c3)))OR((v0.c1 IN ()))))AND(x'c6b3')) WHERE (LAST_INSERT_ROWID()) ORDER BY (('') NOT NULL) DESC  NULLS LAST, (((rt1.c4, vt0.c0, v0.c2)) BETWEEN (((((rt1.c0))>=((v0.c2))), ((v0.c2)|(NULL)), ((((rt0.c1)OR(rt0.c2)))OR(rt1.c3)))) AND (((vt0.c0 IN ()), NULLIF(v0.c1, 0x5169e4b6), (rt1.c2 IN ())))) DESC, CAST((vt0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON (('-2045945683')<=(CASE rt1.c3  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN 0.32940807555928764 WHEN 1.956423438E9 THEN v0.c2 ELSE vt0.c0 END)) INNER JOIN v0 ON ((((((((rt1.c3)AND(rt0.c0)))OR(rt1.c3)))OR((v0.c1 IN ()))))AND(x'c6b3')) ORDER BY (('') NOT NULL) DESC  NULLS LAST, (((rt1.c4, vt0.c0, v0.c2)) BETWEEN (((((rt1.c0))>=((v0.c2))), ((v0.c2)|(NULL)), ((((rt0.c1)OR(rt0.c2)))OR(rt1.c3)))) AND (((vt0.c0 IN ()), NULLIF(v0.c1, 0X5169e4b6), (rt1.c2 IN ())))) DESC, CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON (('-2045945683')<=(CASE rt1.c3  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN 0.32940807555928764 WHEN 1.956423438E9 THEN v0.c2 ELSE vt0.c0 END)) INNER JOIN v0 ON ((((((((rt1.c3)AND(rt0.c0)))OR(rt1.c3)))OR((v0.c1 IN ()))))AND(x'c6b3')) WHERE (LAST_INSERT_ROWID()) ORDER BY (('') NOT NULL) DESC  NULLS LAST, (((rt1.c4, vt0.c0, v0.c2)) BETWEEN (((((rt1.c0))>=((v0.c2))), ((v0.c2)|(NULL)), ((((rt0.c1)OR(rt0.c2)))OR(rt1.c3)))) AND (((vt0.c0 IN ()), NULLIF(v0.c1, 0x5169e4b6), (rt1.c2 IN ())))) DESC, CAST((vt0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON (('-2045945683')<=(CASE rt1.c3  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN 0.32940807555928764 WHEN 1.956423438E9 THEN v0.c2 ELSE vt0.c0 END)) INNER JOIN v0 ON ((((((((rt1.c3)AND(rt0.c0)))OR(rt1.c3)))OR((v0.c1 IN ()))))AND(x'c6b3')) ORDER BY (('') NOT NULL) DESC  NULLS LAST, (((rt1.c4, vt0.c0, v0.c2)) BETWEEN (((((rt1.c0))>=((v0.c2))), ((v0.c2)|(NULL)), ((((rt0.c1)OR(rt0.c2)))OR(rt1.c3)))) AND (((vt0.c0 IN ()), NULLIF(v0.c1, 0X5169e4b6), (rt1.c2 IN ())))) DESC, CAST((vt0.c0 IN ()) AS BLOB));
SELECT * FROM v0 WHERE (CAST(v0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c2))) BETWEEN (LIKELY(v0.c2)) AND (NULLIF(DISTINCT v0.c0, v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c2))) BETWEEN (LIKELY(v0.c2)) AND (NULLIF(DISTINCT v0.c0, v0.c1))));
SELECT * FROM v0 WHERE (CAST(v0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c2))) BETWEEN (LIKELY(v0.c2)) AND (NULLIF(DISTINCT v0.c0, v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c2))) BETWEEN (LIKELY(v0.c2)) AND (NULLIF(DISTINCT v0.c0, v0.c1))));
SELECT * FROM v0 WHERE (CAST(v0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c2))) BETWEEN (LIKELY(v0.c2)) AND (NULLIF(DISTINCT v0.c0, v0.c1)));
SELECT ALL * FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.49052983784485327))|((+ (vt0.c0))))) ORDER BY ((- (vt0.c0)) IN ()), (((((NOT (rt0.c2)))OR(UNLIKELY(rt0.c1))))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c1, 0.49052983784485327))|((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((- (vt0.c0)) IN ()), (((((NOT (rt0.c2)))OR(UNLIKELY(rt0.c1))))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.49052983784485327))|((+ (vt0.c0))))) ORDER BY ((- (vt0.c0)) IN ()), (((((NOT (rt0.c2)))OR(UNLIKELY(rt0.c1))))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c1, 0.49052983784485327))|((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((- (vt0.c0)) IN ()), (((((NOT (rt0.c2)))OR(UNLIKELY(rt0.c1))))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.49052983784485327))|((+ (vt0.c0))))) ORDER BY ((- (vt0.c0)) IN ()), (((((NOT (rt0.c2)))OR(UNLIKELY(rt0.c1))))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(0.5981597838851622 AS REAL)) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.07933972203656714))*((~ (rt0.c0))))  NULLS FIRST, CAST(rt0.c0 AS INTEGER), CASE (((rt1.c4, rt1.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt1.c3)) AND ((0.9609517357709709, rt0.c0, rt0.c0)))  WHEN (vt0.c0 IN (vt0.c0, rt1.c2)) THEN rt1.c3 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.5981597838851622 AS REAL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.07933972203656714))*((~ (rt0.c0))))  NULLS FIRST, CAST(rt0.c0 AS INTEGER), CASE (((rt1.c4, rt1.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt1.c3)) AND ((0.9609517357709709, rt0.c0, rt0.c0)))  WHEN (vt0.c0 IN (vt0.c0, rt1.c2)) THEN rt1.c3 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(0.5981597838851622 AS REAL)) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.07933972203656714))*((~ (rt0.c0))))  NULLS FIRST, CAST(rt0.c0 AS INTEGER), CASE (((rt1.c4, rt1.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt1.c3)) AND ((0.9609517357709709, rt0.c0, rt0.c0)))  WHEN (vt0.c0 IN (vt0.c0, rt1.c2)) THEN rt1.c3 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.5981597838851622 AS REAL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.07933972203656714))*((~ (rt0.c0))))  NULLS FIRST, CAST(rt0.c0 AS INTEGER), CASE (((rt1.c4, rt1.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt1.c3)) AND ((0.9609517357709709, rt0.c0, rt0.c0)))  WHEN (vt0.c0 IN (vt0.c0, rt1.c2)) THEN rt1.c3 COLLATE NOCASE END ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(0.5981597838851622 AS REAL)) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.07933972203656714))*((~ (rt0.c0))))  NULLS FIRST, CAST(rt0.c0 AS INTEGER), CASE (((rt1.c4, rt1.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt1.c3)) AND ((0.9609517357709709, rt0.c0, rt0.c0)))  WHEN (vt0.c0 IN (vt0.c0, rt1.c2)) THEN rt1.c3 COLLATE NOCASE END ASC;
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (~ (rt1.c4)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c4)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (~ (rt1.c4)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c4)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (~ (rt1.c4)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((((NOT (rt0.c2)))=(CASE rt0.c0  WHEN 0.9621664447546657 THEN rt0.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))=(CASE rt0.c0  WHEN 0.9621664447546657 THEN rt0.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((((NOT (rt0.c2)))=(CASE rt0.c0  WHEN 0.9621664447546657 THEN rt0.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))=(CASE rt0.c0  WHEN 0.9621664447546657 THEN rt0.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((((NOT (rt0.c2)))=(CASE rt0.c0  WHEN 0.9621664447546657 THEN rt0.c0 ELSE rt1.c4 END)));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(0.43544384970281624)))OR(rt0.c1)))AND(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))OR(0.43544384970281624)))OR(rt0.c1)))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(0.43544384970281624)))OR(rt0.c1)))AND(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c0)))OR(0.43544384970281624)))OR(rt0.c1)))AND(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(0.43544384970281624)))OR(rt0.c1)))AND(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (ABS(TRIM(DISTINCT rt1.c4, rt1.c3))) ORDER BY (((rt1.c1 IN ())) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(DISTINCT rt1.c4, rt1.c3))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY (((rt1.c1 IN ())) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (rt1.c3)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (ABS(TRIM(DISTINCT rt1.c4, rt1.c3))) ORDER BY (((rt1.c1 IN ())) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (rt1.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(DISTINCT rt1.c4, rt1.c3))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY (((rt1.c1 IN ())) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (rt1.c3)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (ABS(TRIM(DISTINCT rt1.c4, rt1.c3))) ORDER BY (((rt1.c1 IN ())) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (rt1.c3)) ASC;
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (LOWER(rt1.c3) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c3) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (LOWER(rt1.c3) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c3) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (LOWER(rt1.c3) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM rt0, v0, rt1, vt0 WHERE (((rt0.c0) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, rt1, vt0);
SELECT * FROM rt0, v0, rt1, vt0 WHERE (((rt0.c0) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, rt1, vt0);
SELECT * FROM rt0, v0, rt1, vt0 WHERE (((rt0.c0) BETWEEN (NULL) AND (rt1.c3)) COLLATE RTRIM);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c2 END AS TEXT) INNER JOIN vt0 ON CAST(HEX(rt1.c1) AS INTEGER) FULL OUTER JOIN v0 ON CAST(CASE WHEN '-1' THEN v0.c1 ELSE rt1.c2 END AS NUMERIC) WHERE (((((rt1.c3) IS TRUE))>>(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))>>(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c2 END AS TEXT) INNER JOIN vt0 ON CAST(HEX(rt1.c1) AS INTEGER) FULL OUTER JOIN v0 ON CAST(CASE WHEN '-1' THEN v0.c1 ELSE rt1.c2 END AS NUMERIC));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c2 END AS TEXT) INNER JOIN vt0 ON CAST(HEX(rt1.c1) AS INTEGER) FULL OUTER JOIN v0 ON CAST(CASE WHEN '-1' THEN v0.c1 ELSE rt1.c2 END AS NUMERIC) WHERE (((((rt1.c3) IS TRUE))>>(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))>>(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN rt1.c2 ELSE v0.c2 END AS TEXT) INNER JOIN vt0 ON CAST(HEX(rt1.c1) AS INTEGER) FULL OUTER JOIN v0 ON CAST(CASE WHEN '-1' THEN v0.c1 ELSE rt1.c2 END AS NUMERIC));
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE ((NOT (((rt0.c2) NOT NULL)))) ORDER BY (((NOT (vt0.c0)))<((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))  NULLS FIRST, CAST(v0.c1 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c0 ORDER BY (((NOT (vt0.c0)))<((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))  NULLS FIRST, CAST(v0.c1 AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE ((NOT (((rt0.c2) NOT NULL)))) ORDER BY (((NOT (vt0.c0)))<((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))  NULLS FIRST, CAST(v0.c1 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c0 ORDER BY (((NOT (vt0.c0)))<((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))  NULLS FIRST, CAST(v0.c1 AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE ((NOT (((rt0.c2) NOT NULL)))) ORDER BY (((NOT (vt0.c0)))<((((NULL)) BETWEEN ((vt0.c0)) AND ((v0.c1)))))  NULLS FIRST, CAST(v0.c1 AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)IS NOT(CAST(rt0.c2 AS BLOB)))) ORDER BY ((json_object(rt0.c2, x'c5cb4bce', rt0.c0, rt0.c2)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)IS NOT(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((json_object(rt0.c2, x'c5cb4bce', rt0.c0, rt0.c2)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 NOT INDEXED WHERE (((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)IS NOT(CAST(rt0.c2 AS BLOB)))) ORDER BY ((json_object(rt0.c2, x'c5cb4bce', rt0.c0, rt0.c2)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c3 END)IS NOT(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((json_object(rt0.c2, x'c5cb4bce', rt0.c0, rt0.c2)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE ((- (CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 END))) ORDER BY (+ ((((v0.c0))!=((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY (+ ((((v0.c0))!=((v0.c0))))) ASC);
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE ((- (CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 END))) ORDER BY (+ ((((v0.c0))!=((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY (+ ((((v0.c0))!=((v0.c0))))) ASC);
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE ((- (CASE rt1.c2  WHEN v0.c1 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 END))) ORDER BY (+ ((((v0.c0))!=((v0.c0))))) ASC;
SELECT * FROM rt0, rt1, v0 WHERE (CAST(((v0.c1)LIKE(rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)LIKE(rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (CAST(((v0.c1)LIKE(rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)LIKE(rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (CAST(((v0.c1)LIKE(rt1.c3)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY rt0.c1 DESC, (rt0.c0 COLLATE BINARY IN (((NULL) BETWEEN (v0.c1) AND (0.7744850637034062)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c1 DESC, (rt0.c0 COLLATE BINARY IN (((NULL) BETWEEN (v0.c1) AND (0.7744850637034062)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY rt0.c1 DESC, (rt0.c0 COLLATE BINARY IN (((NULL) BETWEEN (v0.c1) AND (0.7744850637034062)))) DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY rt0.c1 DESC, (rt0.c0 COLLATE BINARY IN (((NULL) BETWEEN (v0.c1) AND (0.7744850637034062)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY rt0.c1 DESC, (rt0.c0 COLLATE BINARY IN (((NULL) BETWEEN (v0.c1) AND (0.7744850637034062)))) DESC;
SELECT ALL * FROM rt0, v0 WHERE (json_quote(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (json_quote(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (json_quote(rt0.c0 COLLATE NOCASE));
SELECT * FROM rt1 WHERE (LIKELIHOOD(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)), 0.40509292350487414));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)), 0.40509292350487414)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELIHOOD(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)), 0.40509292350487414));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)), 0.40509292350487414)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELIHOOD(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)), 0.40509292350487414));
SELECT COUNT(*) FROM rt1 WHERE (MIN((rt1.c2 IN (rt1.c1, rt1.c0)), ((rt1.c3)LIKE(rt1.c3)))) ORDER BY rt1.c4  NULLS FIRST, ((QUOTE(rt1.c4)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN((rt1.c2 IN (rt1.c1, rt1.c0)), ((rt1.c3)LIKE(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4  NULLS FIRST, ((QUOTE(rt1.c4)) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (MIN((rt1.c2 IN (rt1.c1, rt1.c0)), ((rt1.c3)LIKE(rt1.c3)))) ORDER BY rt1.c4  NULLS FIRST, ((QUOTE(rt1.c4)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MIN((rt1.c2 IN (rt1.c1, rt1.c0)), ((rt1.c3)LIKE(rt1.c3)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4  NULLS FIRST, ((QUOTE(rt1.c4)) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (MIN((rt1.c2 IN (rt1.c1, rt1.c0)), ((rt1.c3)LIKE(rt1.c3)))) ORDER BY rt1.c4  NULLS FIRST, ((QUOTE(rt1.c4)) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0, v0, rt0 WHERE (TYPEOF(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT ALL * FROM rt1, vt0, v0, rt0 WHERE (TYPEOF(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TYPEOF(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT ALL * FROM rt1, vt0, v0, rt0 WHERE (TYPEOF(rt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON CASE WHEN 0.43581129213915126 THEN x'' WHEN (NOT (rt1.c4)) THEN ((rt1.c4)%('-512500413')) WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt1.c3)) ELSE (rt0.c1 IN ()) END RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))/((rt0.c0 IN (rt0.c2, rt0.c0)))) WHERE ((0.38342679357317777 IN (CASE v0.c1  WHEN v0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END))) ORDER BY (((v0.c1) ISNULL) IN (((rt1.c2)/(rt0.c0))))  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((0.38342679357317777 IN (CASE v0.c1  WHEN v0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON CASE WHEN 0.43581129213915126 THEN x'' WHEN (NOT (rt1.c4)) THEN ((rt1.c4)%('-512500413')) WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt1.c3)) ELSE (rt0.c1 IN ()) END RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))/((rt0.c0 IN (rt0.c2, rt0.c0)))) ORDER BY (((v0.c1) ISNULL) IN (((rt1.c2)/(rt0.c0))))  NULLS LAST, rt0.c2);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON CASE WHEN 0.43581129213915126 THEN x'' WHEN (NOT (rt1.c4)) THEN ((rt1.c4)%('-512500413')) WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt1.c3)) ELSE (rt0.c1 IN ()) END RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))/((rt0.c0 IN (rt0.c2, rt0.c0)))) WHERE ((0.38342679357317777 IN (CASE v0.c1  WHEN v0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END))) ORDER BY (((v0.c1) ISNULL) IN (((rt1.c2)/(rt0.c0))))  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((0.38342679357317777 IN (CASE v0.c1  WHEN v0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON CASE WHEN 0.43581129213915126 THEN x'' WHEN (NOT (rt1.c4)) THEN ((rt1.c4)%('-512500413')) WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt1.c3)) ELSE (rt0.c1 IN ()) END RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))/((rt0.c0 IN (rt0.c2, rt0.c0)))) ORDER BY (((v0.c1) ISNULL) IN (((rt1.c2)/(rt0.c0))))  NULLS LAST, rt0.c2);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (LOWER(v0.c0));
SELECT COUNT(*) FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c0 WHERE ((((((rt1.c3)AND(rt1.c2)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)AND(rt1.c2)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c0);
SELECT COUNT(*) FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c0 WHERE ((((((rt1.c3)AND(rt1.c2)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)AND(rt1.c2)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c0);
SELECT COUNT(*) FROM rt0, vt0, v0 RIGHT OUTER JOIN rt1 ON rt0.c0 WHERE ((((((rt1.c3)AND(rt1.c2)))AND(vt0.c0)) IN ()));
SELECT * FROM v0, rt1, vt0, rt0 WHERE ((NOT ('o2'))) ORDER BY (- (((rt1.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('o2'))) IS TRUE)  as count FROM v0, rt1, vt0, rt0 ORDER BY (- (((rt1.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM v0, rt1, vt0, rt0 WHERE ((NOT ('o2'))) ORDER BY (- (((rt1.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('o2'))) IS TRUE)  as count FROM v0, rt1, vt0, rt0 ORDER BY (- (((rt1.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM v0, rt1, vt0, rt0 WHERE ((NOT ('o2'))) ORDER BY (- (((rt1.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0))))!=(((vt0.c0 IN ())))) WHERE (vt0.c0) ORDER BY (- (((vt0.c0) BETWEEN ('375864670') AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0))))<>(((vt0.c0 IN ())))) ORDER BY (- (((vt0.c0) BETWEEN ('375864670') AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0))))!=(((vt0.c0 IN ())))) WHERE (vt0.c0) ORDER BY (- (((vt0.c0) BETWEEN ('375864670') AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0))))<>(((vt0.c0 IN ())))) ORDER BY (- (((vt0.c0) BETWEEN ('375864670') AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((vt0.c0)OR(vt0.c0))))!=(((vt0.c0 IN ())))) WHERE (vt0.c0) ORDER BY (- (((vt0.c0) BETWEEN ('375864670') AND (rt0.c0))));
SELECT * FROM rt0 CROSS JOIN rt1 ON ((rt0.c1)<>(rt1.c1)) COLLATE RTRIM WHERE (rt1.c1) ORDER BY CAST((+ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((rt0.c1)!=(rt1.c1)) COLLATE RTRIM ORDER BY CAST((+ (rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN rt1 ON ((rt0.c1)<>(rt1.c1)) COLLATE RTRIM WHERE (rt1.c1) ORDER BY CAST((+ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((rt0.c1)!=(rt1.c1)) COLLATE RTRIM ORDER BY CAST((+ (rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN rt1 ON ((rt0.c1)<>(rt1.c1)) COLLATE RTRIM WHERE (rt1.c1) ORDER BY CAST((+ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))  WHEN CASE WHEN rt1.c2 THEN rt1.c4 ELSE v0.c1 END THEN NULLIF(DISTINCT rt1.c0, rt1.c3) WHEN v0.c2 COLLATE NOCASE THEN -91181894 WHEN LOWER(v0.c2) THEN ((((((((v0.c1)AND(rt1.c1)))AND(v0.c2)))AND(rt1.c3)))OR(0.33385509319715767)) END) ORDER BY ((vt0.c0)>=(v0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))  WHEN CASE WHEN rt1.c2 THEN rt1.c4 ELSE v0.c1 END THEN NULLIF(DISTINCT rt1.c0, rt1.c3) WHEN v0.c2 COLLATE NOCASE THEN -91181894 WHEN LOWER(v0.c2) THEN ((((((((v0.c1)AND(rt1.c1)))AND(v0.c2)))AND(rt1.c3)))OR(0.33385509319715767)) END) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY ((vt0.c0)>=(v0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))  WHEN CASE WHEN rt1.c2 THEN rt1.c4 ELSE v0.c1 END THEN NULLIF(DISTINCT rt1.c0, rt1.c3) WHEN v0.c2 COLLATE NOCASE THEN -91181894 WHEN LOWER(v0.c2) THEN ((((((((v0.c1)AND(rt1.c1)))AND(v0.c2)))AND(rt1.c3)))OR(0.33385509319715767)) END) ORDER BY ((vt0.c0)>=(v0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))  WHEN CASE WHEN rt1.c2 THEN rt1.c4 ELSE v0.c1 END THEN NULLIF(DISTINCT rt1.c0, rt1.c3) WHEN v0.c2 COLLATE NOCASE THEN -91181894 WHEN LOWER(v0.c2) THEN ((((((((v0.c1)AND(rt1.c1)))AND(v0.c2)))AND(rt1.c3)))OR(0.33385509319715767)) END) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY ((vt0.c0)>=(v0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt1, vt0 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))  WHEN CASE WHEN rt1.c2 THEN rt1.c4 ELSE v0.c1 END THEN NULLIF(DISTINCT rt1.c0, rt1.c3) WHEN v0.c2 COLLATE NOCASE THEN -91181894 WHEN LOWER(v0.c2) THEN ((((((((v0.c1)AND(rt1.c1)))AND(v0.c2)))AND(rt1.c3)))OR(0.33385509319715767)) END) ORDER BY ((vt0.c0)>=(v0.c1)) COLLATE BINARY;
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt1.c1) ORDER BY ((((((((((rt0.c0)OR(rt1.c4)))AND('Ly|rr[෕i.')))OR(rt1.c2)))OR(rt1.c3))) NOT NULL) DESC  NULLS FIRST, CASE v0.c2  WHEN rt0.c1 THEN rt1.c1 END COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((((((((rt0.c0)OR(rt1.c4)))AND('Ly|rr[෕i.')))OR(rt1.c2)))OR(rt1.c3))) NOT NULL) DESC  NULLS FIRST, CASE v0.c2  WHEN rt0.c1 THEN rt1.c1 END COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt1.c1) ORDER BY ((((((((((rt0.c0)OR(rt1.c4)))AND('Ly|rr[෕i.')))OR(rt1.c2)))OR(rt1.c3))) NOT NULL) DESC  NULLS FIRST, CASE v0.c2  WHEN rt0.c1 THEN rt1.c1 END COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((((((((rt0.c0)OR(rt1.c4)))AND('Ly|rr[෕i.')))OR(rt1.c2)))OR(rt1.c3))) NOT NULL) DESC  NULLS FIRST, CASE v0.c2  WHEN rt0.c1 THEN rt1.c1 END COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt1.c1) ORDER BY ((((((((((rt0.c0)OR(rt1.c4)))AND('Ly|rr[෕i.')))OR(rt1.c2)))OR(rt1.c3))) NOT NULL) DESC  NULLS FIRST, CASE v0.c2  WHEN rt0.c1 THEN rt1.c1 END COLLATE NOCASE COLLATE BINARY;
SELECT COUNT(*) FROM rt0, rt1 WHERE (ABS(DISTINCT rt0.c1 COLLATE RTRIM)) ORDER BY (- (-1.733580956E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (-1.733580956E9)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (ABS(DISTINCT rt0.c1 COLLATE RTRIM)) ORDER BY (- (-1.733580956E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (-1.733580956E9)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (ABS(DISTINCT rt0.c1 COLLATE RTRIM)) ORDER BY (- (-1.733580956E9)) DESC  NULLS LAST;
SELECT * FROM rt1 NOT INDEXED, vt0, v0, rt0 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2)))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2)))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT * FROM rt1 NOT INDEXED, vt0, v0, rt0 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2)))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2)))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT * FROM rt1 NOT INDEXED, vt0, v0, rt0 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c2)))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))&(CASE WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER))&(CASE WHEN x'' THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))&(CASE WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER))&(CASE WHEN x'' THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))&(CASE WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON x'2694' WHERE ((((('0.9621664447546657' IN ()), ((('mb3R')) BETWEEN ((v0.c0)) AND ((v0.c0))), (vt0.c0 IN ())))>((v0.c1 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(vt0.c0, v0.c2))))) ORDER BY (('3bu{%')!=(((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('0.9621664447546657' IN ()), ((('mb3R')) BETWEEN ((v0.c0)) AND ((v0.c0))), (vt0.c0 IN ())))>((v0.c1 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(vt0.c0, v0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON x'2694' ORDER BY (('3bu{%')!=(((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON x'2694' WHERE ((((('0.9621664447546657' IN ()), ((('mb3R')) BETWEEN ((v0.c0)) AND ((v0.c0))), (vt0.c0 IN ())))>((v0.c1 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(vt0.c0, v0.c2))))) ORDER BY (('3bu{%')!=(((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('0.9621664447546657' IN ()), ((('mb3R')) BETWEEN ((v0.c0)) AND ((v0.c0))), (vt0.c0 IN ())))>((v0.c1 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(vt0.c0, v0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON x'2694' ORDER BY (('3bu{%')!=(((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON x'2694' WHERE ((((('0.9621664447546657' IN ()), ((('mb3R')) BETWEEN ((v0.c0)) AND ((v0.c0))), (vt0.c0 IN ())))>((v0.c1 COLLATE NOCASE, (vt0.c0 IN ()), IFNULL(vt0.c0, v0.c2))))) ORDER BY (('3bu{%')!=(((v0.c2) NOT BETWEEN (NULL) AND (v0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2))>=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2))>=((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2))>=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2))>=((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2))>=((rt1.c0))))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((((((((((v0.c1)AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))OR(rt0.c1))))!=((rt0.c1 COLLATE NOCASE))) WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (rt0.c2))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((((((((v0.c1)AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))OR(rt0.c1))))<>((rt0.c1 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((((((((((v0.c1)AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))OR(rt0.c1))))!=((rt0.c1 COLLATE NOCASE))) WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (rt0.c2))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((((((((v0.c1)AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))OR(rt0.c1))))<>((rt0.c1 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((((((((((v0.c1)AND(v0.c0)))AND(v0.c1)))OR(rt0.c1)))OR(rt0.c1))))!=((rt0.c1 COLLATE NOCASE))) WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (rt0.c2)));
SELECT * FROM rt1, v0 WHERE (SQLITE_VERSION()) ORDER BY ('1169227355' IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt1, v0 ORDER BY ('1169227355' IN ()));
SELECT * FROM rt1, v0 WHERE (SQLITE_VERSION()) ORDER BY ('1169227355' IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt1, v0 ORDER BY ('1169227355' IN ()));
SELECT * FROM rt1, v0 WHERE (SQLITE_VERSION()) ORDER BY ('1169227355' IN ());
SELECT ALL COUNT(*) FROM rt0, v0, vt0, rt1 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(rt1.c1)) IN ((((rt0.c1, rt1.c0, rt1.c3))<=((v0.c0, vt0.c0, rt1.c2)))))) ORDER BY LIKELY(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(rt1.c1)) IN ((((rt0.c1, rt1.c0, rt1.c3))<=((v0.c0, vt0.c0, rt1.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0, rt1 ORDER BY LIKELY(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c3 END) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, rt1 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(rt1.c1)) IN ((((rt0.c1, rt1.c0, rt1.c3))<=((v0.c0, vt0.c0, rt1.c2)))))) ORDER BY LIKELY(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c3 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))AND(rt1.c1)) IN ((((rt0.c1, rt1.c0, rt1.c3))<=((v0.c0, vt0.c0, rt1.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0, rt1 ORDER BY LIKELY(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c3 END) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, rt1 WHERE ((((((vt0.c0)OR(vt0.c0)))AND(rt1.c1)) IN ((((rt0.c1, rt1.c0, rt1.c3))<=((v0.c0, vt0.c0, rt1.c2)))))) ORDER BY LIKELY(CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c3 END) DESC;
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((-805323510)LIKE(((((((((rt0.c1)OR(rt1.c1)))OR(-836602635)))OR(rt1.c2)))AND(rt1.c1))))) ORDER BY (((vt0.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, CAST(rt0.c2 AS TEXT), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) AND ((((vt0.c0) IS TRUE), rt1.c4 COLLATE BINARY, 'R(')));
SELECT SUM(count) FROM (SELECT ((((-805323510)LIKE(((((((((rt0.c1)OR(rt1.c1)))OR(-836602635)))OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((vt0.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, CAST(rt0.c2 AS TEXT), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) AND ((((vt0.c0) IS TRUE), rt1.c4 COLLATE BINARY, 'R('))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((-805323510)LIKE(((((((((rt0.c1)OR(rt1.c1)))OR(-836602635)))OR(rt1.c2)))AND(rt1.c1))))) ORDER BY (((vt0.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, CAST(rt0.c2 AS TEXT), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) AND ((((vt0.c0) IS TRUE), rt1.c4 COLLATE BINARY, 'R(')));
SELECT SUM(count) FROM (SELECT ((((-805323510)LIKE(((((((((rt0.c1)OR(rt1.c1)))OR(-836602635)))OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((vt0.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, CAST(rt0.c2 AS TEXT), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) AND ((((vt0.c0) IS TRUE), rt1.c4 COLLATE BINARY, 'R('))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((-805323510)LIKE(((((((((rt0.c1)OR(rt1.c1)))OR(-836602635)))OR(rt1.c2)))AND(rt1.c1))))) ORDER BY (((vt0.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, CAST(rt0.c2 AS TEXT), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) AND ((((vt0.c0) IS TRUE), rt1.c4 COLLATE BINARY, 'R(')));
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))&(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))) ASC, (((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('-764751870') AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))&(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))) ASC, (((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('-764751870') AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))&(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))) ASC, (((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('-764751870') AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))&(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))) ASC, (((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('-764751870') AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))&(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)))) ASC, (((- (vt0.c0)))AND(((vt0.c0) NOT BETWEEN ('-764751870') AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN INSTR(rt0.c2, vt0.c0) WHEN CAST(NULL AS NUMERIC) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN (('0.05044239340236234') BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS BLOB) THEN INSTR(rt0.c2, vt0.c0) WHEN CAST(NULL AS NUMERIC) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN (('0.05044239340236234') BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN INSTR(rt0.c2, vt0.c0) WHEN CAST(NULL AS NUMERIC) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN (('0.05044239340236234') BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS BLOB) THEN INSTR(rt0.c2, vt0.c0) WHEN CAST(NULL AS NUMERIC) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN (('0.05044239340236234') BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS BLOB) THEN INSTR(rt0.c2, vt0.c0) WHEN CAST(NULL AS NUMERIC) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END THEN (('0.05044239340236234') BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT * FROM v0, rt0, vt0, rt1 WHERE ((((((((((+ (rt1.c4)))OR(((rt0.c2) NOT BETWEEN (rt1.c2) AND (x'')))))AND(CASE WHEN rt1.c1 THEN NULL END)))OR(((rt1.c4)IS NOT(rt0.c0)))))OR(((rt1.c3)/(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt1.c4)))OR(((rt0.c2) NOT BETWEEN (rt1.c2) AND (x'')))))AND(CASE WHEN rt1.c1 THEN NULL END)))OR(((rt1.c4)IS NOT(rt0.c0)))))OR(((rt1.c3)/(rt1.c4))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT * FROM v0, rt0, vt0, rt1 WHERE ((((((((((+ (rt1.c4)))OR(((rt0.c2) NOT BETWEEN (rt1.c2) AND (x'')))))AND(CASE WHEN rt1.c1 THEN NULL END)))OR(((rt1.c4)IS NOT(rt0.c0)))))OR(((rt1.c3)/(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt1.c4)))OR(((rt0.c2) NOT BETWEEN (rt1.c2) AND (x'')))))AND(CASE WHEN rt1.c1 THEN NULL END)))OR(((rt1.c4)IS NOT(rt0.c0)))))OR(((rt1.c3)/(rt1.c4))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT * FROM v0, rt0, vt0, rt1 WHERE ((((((((((+ (rt1.c4)))OR(((rt0.c2) NOT BETWEEN (rt1.c2) AND (x'')))))AND(CASE WHEN rt1.c1 THEN NULL END)))OR(((rt1.c4)IS NOT(rt0.c0)))))OR(((rt1.c3)/(rt1.c4)))));
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(rt1.c2)) AND ((((rt1.c4, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(rt1.c2)) AND ((((rt1.c4, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(rt1.c2)) AND ((((rt1.c4, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(rt1.c2)) AND ((((rt1.c4, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(rt1.c2)) AND ((((rt1.c4, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c0, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c2))))));
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)*(v0.c1 COLLATE NOCASE))) ORDER BY (LTRIM(v0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)*(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (LTRIM(v0.c1) IN ())  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)*(v0.c1 COLLATE NOCASE))) ORDER BY (LTRIM(v0.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)*(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (LTRIM(v0.c1) IN ())  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END)*(v0.c1 COLLATE NOCASE))) ORDER BY (LTRIM(v0.c1) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((NOT ((~ (rt0.c2))))) ORDER BY CASE WHEN ((((((((NULL)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c1, 0.05536037306808428, v0.c0))>=((v0.c2, v0.c0, v0.c1))) WHEN CAST(rt0.c2 AS REAL) THEN '-1050838836' WHEN (('5R|h\ᷡN%	')<(rt0.c2)) THEN ((rt0.c0)AND(rt0.c1)) ELSE ((((v0.c1)OR(rt0.c1)))OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN ((((((((NULL)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c1, 0.05536037306808428, v0.c0))>=((v0.c2, v0.c0, v0.c1))) WHEN CAST(rt0.c2 AS REAL) THEN '-1050838836' WHEN (('5R|h\ᷡN%	')<(rt0.c2)) THEN ((rt0.c0)AND(rt0.c1)) ELSE ((((v0.c1)OR(rt0.c1)))OR(rt0.c1)) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((NOT ((~ (rt0.c2))))) ORDER BY CASE WHEN ((((((((NULL)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c1, 0.05536037306808428, v0.c0))>=((v0.c2, v0.c0, v0.c1))) WHEN CAST(rt0.c2 AS REAL) THEN '-1050838836' WHEN (('5R|h\ᷡN%	')<(rt0.c2)) THEN ((rt0.c0)AND(rt0.c1)) ELSE ((((v0.c1)OR(rt0.c1)))OR(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN ((((((((NULL)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c1, 0.05536037306808428, v0.c0))>=((v0.c2, v0.c0, v0.c1))) WHEN CAST(rt0.c2 AS REAL) THEN '-1050838836' WHEN (('5R|h\ᷡN%	')<(rt0.c2)) THEN ((rt0.c0)AND(rt0.c1)) ELSE ((((v0.c1)OR(rt0.c1)))OR(rt0.c1)) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((NOT ((~ (rt0.c2))))) ORDER BY CASE WHEN ((((((((NULL)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))AND(rt0.c0)) THEN (((rt0.c1, 0.05536037306808428, v0.c0))>=((v0.c2, v0.c0, v0.c1))) WHEN CAST(rt0.c2 AS REAL) THEN '-1050838836' WHEN (('5R|h\ᷡN%	')<(rt0.c2)) THEN ((rt0.c0)AND(rt0.c1)) ELSE ((((v0.c1)OR(rt0.c1)))OR(rt0.c1)) END;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((0.6313124955200858)<((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))) WHERE (NULL) ORDER BY (((v0.c1 IN ())) BETWEEN (v0.c1) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((0.6313124955200858)<((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))) ORDER BY (((v0.c1 IN ())) BETWEEN (v0.c1) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((x''))))) ASC  NULLS FIRST);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((0.6313124955200858)<((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))) WHERE (NULL) ORDER BY (((v0.c1 IN ())) BETWEEN (v0.c1) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((0.6313124955200858)<((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))) ORDER BY (((v0.c1 IN ())) BETWEEN (v0.c1) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((x''))))) ASC  NULLS FIRST);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((0.6313124955200858)<((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))) WHERE (NULL) ORDER BY (((v0.c1 IN ())) BETWEEN (v0.c1) AND ((((v0.c1)) BETWEEN ((v0.c1)) AND ((x''))))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN ((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((+ (vt0.c0))))) ORDER BY COALESCE(CAST(v0.c1 AS REAL), v0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE RTRIM) BETWEEN ((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY COALESCE(CAST(v0.c1 AS REAL), v0.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN ((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((+ (vt0.c0))))) ORDER BY COALESCE(CAST(v0.c1 AS REAL), v0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE RTRIM) BETWEEN ((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY COALESCE(CAST(v0.c1 AS REAL), v0.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c1 COLLATE RTRIM) BETWEEN ((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c1)))) AND ((+ (vt0.c0))))) ORDER BY COALESCE(CAST(v0.c1 AS REAL), v0.c2 COLLATE NOCASE);
SELECT * FROM rt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (- (rt1.c1)) COLLATE RTRIM WHERE (CAST(v0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (- (rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (- (rt1.c1)) COLLATE RTRIM WHERE (CAST(v0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (- (rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (- (rt1.c1)) COLLATE RTRIM WHERE (CAST(v0.c1 AS TEXT));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((v0.c1 IN ()))+((((rt0.c1, vt0.c0, rt0.c1, v0.c2, vt0.c0))<(('-1995076843', rt0.c0, vt0.c0, vt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))+((((rt0.c1, vt0.c0, rt0.c1, v0.c2, vt0.c0))<(('-1995076843', rt0.c0, vt0.c0, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((v0.c1 IN ()))+((((rt0.c1, vt0.c0, rt0.c1, v0.c2, vt0.c0))<(('-1995076843', rt0.c0, vt0.c0, vt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))+((((rt0.c1, vt0.c0, rt0.c1, v0.c2, vt0.c0))<(('-1995076843', rt0.c0, vt0.c0, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((v0.c1 IN ()))+((((rt0.c1, vt0.c0, rt0.c1, v0.c2, vt0.c0))<(('-1995076843', rt0.c0, vt0.c0, vt0.c0, rt0.c1))))));
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'')OR(CAST(x'' AS BLOB))))AND(((((v0.c2)AND(v0.c2)))OR(v0.c0))))) ORDER BY (STRFTIME(v0.c2, v0.c1, v0.c1, v0.c1, v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CAST(x'' AS BLOB))))AND(((((v0.c2)AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (STRFTIME(v0.c2, v0.c1, v0.c1, v0.c1, v0.c0) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'')OR(CAST(x'' AS BLOB))))AND(((((v0.c2)AND(v0.c2)))OR(v0.c0))))) ORDER BY (STRFTIME(v0.c2, v0.c1, v0.c1, v0.c1, v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CAST(x'' AS BLOB))))AND(((((v0.c2)AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (STRFTIME(v0.c2, v0.c1, v0.c1, v0.c1, v0.c0) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((x'')OR(CAST(x'' AS BLOB))))AND(((((v0.c2)AND(v0.c2)))OR(v0.c0))))) ORDER BY (STRFTIME(v0.c2, v0.c1, v0.c1, v0.c1, v0.c0) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((('0.9125185196414592')AND(vt0.c0)))) AND ((vt0.c0)))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((('0.9125185196414592')AND(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((('0.9125185196414592')AND(vt0.c0)))) AND ((vt0.c0)))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((('0.9125185196414592')AND(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((('0.9125185196414592')AND(vt0.c0)))) AND ((vt0.c0)))) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))>=(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ASC;
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE ((((CASE rt1.c1  WHEN rt1.c4 THEN '3Rz2YsPS' WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE v0.c2 END))<((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt1.c4 THEN '3Rz2YsPS' WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE v0.c2 END))<((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt1, rt0, v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE ((((CASE rt1.c1  WHEN rt1.c4 THEN '3Rz2YsPS' WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE v0.c2 END))<((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt1.c4 THEN '3Rz2YsPS' WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE v0.c2 END))<((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt1, rt0, v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE ((((CASE rt1.c1  WHEN rt1.c4 THEN '3Rz2YsPS' WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c1 ELSE v0.c2 END))<((((rt0.c0) NOTNULL)))));
SELECT COUNT(*) FROM vt0, v0, rt0, rt1 WHERE ((((rt1.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt0, rt1 WHERE ((((rt1.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt0, rt1 WHERE ((((rt1.c3 IN ())) NOTNULL));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c2)!=('1598266189')))+(CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<>('1598266189')))+(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c2)!=('1598266189')))+(CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<>('1598266189')))+(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c2)!=('1598266189')))+(CAST(rt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (vt0.c0);
SELECT * FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((x'17a7' IN ()))))AND(MAX(rt0.c1, rt0.c2)))) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2)==(rt0.c0)) END ASC, CAST((+ (rt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((x'17a7' IN ()))))AND(MAX(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2)==(rt0.c0)) END ASC, CAST((+ (rt0.c2)) AS TEXT) ASC);
SELECT * FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((x'17a7' IN ()))))AND(MAX(rt0.c1, rt0.c2)))) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2)==(rt0.c0)) END ASC, CAST((+ (rt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((x'17a7' IN ()))))AND(MAX(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2)==(rt0.c0)) END ASC, CAST((+ (rt0.c2)) AS TEXT) ASC);
SELECT * FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)AND(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((x'17a7' IN ()))))AND(MAX(rt0.c1, rt0.c2)))) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c2)==(rt0.c0)) END ASC, CAST((+ (rt0.c2)) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((~ (rt0.c2 COLLATE BINARY))) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN -484623527 THEN rt0.c2 END THEN ((((v0.c1)OR(0x662d21f8)))OR(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN -484623527 THEN rt0.c2 END THEN ((((v0.c1)OR(0x662d21f8)))OR(rt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((~ (rt0.c2 COLLATE BINARY))) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN -484623527 THEN rt0.c2 END THEN ((((v0.c1)OR(0x662d21f8)))OR(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN -484623527 THEN rt0.c2 END THEN ((((v0.c1)OR(0x662d21f8)))OR(rt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((~ (rt0.c2 COLLATE BINARY))) ORDER BY CASE v0.c0 COLLATE NOCASE  WHEN CASE vt0.c0  WHEN -484623527 THEN rt0.c2 END THEN ((((v0.c1)OR(0x662d21f8)))OR(rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(CAST(rt0.c2 AS BLOB), (rt0.c2 IN ()), ((rt0.c1)GLOB(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CAST(rt0.c2 AS BLOB), (rt0.c2 IN ()), ((rt0.c1)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(CAST(rt0.c2 AS BLOB), (rt0.c2 IN ()), ((rt0.c1)GLOB(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CAST(rt0.c2 AS BLOB), (rt0.c2 IN ()), ((rt0.c1)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(CAST(rt0.c2 AS BLOB), (rt0.c2 IN ()), ((rt0.c1)GLOB(rt0.c0))));
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY ((((rt1.c4) NOTNULL))*((+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY ((((rt1.c4) NOTNULL))*((+ (rt1.c0)))));
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY ((((rt1.c4) NOTNULL))*((+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY ((((rt1.c4) NOTNULL))*((+ (rt1.c0)))));
SELECT COUNT(*) FROM v0, rt1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY ((((rt1.c4) NOTNULL))*((+ (rt1.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((('}fbi!jkp_')&(((rt0.c0) IS FALSE)))) ORDER BY v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('}fbi!jkp_')&(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((('}fbi!jkp_')&(((rt0.c0) IS FALSE)))) ORDER BY v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('}fbi!jkp_')&(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY v0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((('}fbi!jkp_')&(((rt0.c0) IS FALSE)))) ORDER BY v0.c2  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0, v0 WHERE (((((((x'9757')AND(rt0.c2)))OR(rt1.c1)))||(((((x'96ed')AND(vt0.c0)))AND(v0.c1))))) ORDER BY SUBSTR(rt1.c0, vt0.c0) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'9757')AND(rt0.c2)))OR(rt1.c1)))||(((((x'96ed')AND(vt0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0, v0 ORDER BY SUBSTR(rt1.c0, vt0.c0) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, vt0, v0 WHERE (((((((x'9757')AND(rt0.c2)))OR(rt1.c1)))||(((((x'96ed')AND(vt0.c0)))AND(v0.c1))))) ORDER BY SUBSTR(rt1.c0, vt0.c0) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'9757')AND(rt0.c2)))OR(rt1.c1)))||(((((x'96ed')AND(vt0.c0)))AND(v0.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0, v0 ORDER BY SUBSTR(rt1.c0, vt0.c0) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, vt0, v0 WHERE (((((((x'9757')AND(rt0.c2)))OR(rt1.c1)))||(((((x'96ed')AND(vt0.c0)))AND(v0.c1))))) ORDER BY SUBSTR(rt1.c0, vt0.c0) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '918059488' WHERE (MIN(CAST(v0.c2 AS TEXT), NULL, ((vt0.c0)LIKE(v0.c1)), '0.38342679357317777' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((MIN(CAST(v0.c2 AS TEXT), NULL, ((vt0.c0)LIKE(v0.c1)), '0.38342679357317777' COLLATE RTRIM)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON '918059488');
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '918059488' WHERE (MIN(CAST(v0.c2 AS TEXT), NULL, ((vt0.c0)LIKE(v0.c1)), '0.38342679357317777' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((MIN(CAST(v0.c2 AS TEXT), NULL, ((vt0.c0)LIKE(v0.c1)), '0.38342679357317777' COLLATE RTRIM)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON '918059488');
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '918059488' WHERE (MIN(CAST(v0.c2 AS TEXT), NULL, ((vt0.c0)LIKE(v0.c1)), '0.38342679357317777' COLLATE RTRIM));
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON (((('-156447267') NOT BETWEEN (rt0.c1) AND (v0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END) AND (CASE v0.c1  WHEN v0.c1 THEN '5q' END)) WHERE (((((vt0.c0)!=(rt0.c2)))==(json_object(rt0.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(rt0.c2)))==(json_object(rt0.c1, NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((('-156447267') NOT BETWEEN (rt0.c1) AND (v0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END) AND (CASE v0.c1  WHEN v0.c1 THEN '5q' END)));
SELECT ALL * FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON (((('-156447267') NOT BETWEEN (rt0.c1) AND (v0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END) AND (CASE v0.c1  WHEN v0.c1 THEN '5q' END)) WHERE (((((vt0.c0)!=(rt0.c2)))==(json_object(rt0.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(rt0.c2)))==(json_object(rt0.c1, NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((('-156447267') NOT BETWEEN (rt0.c1) AND (v0.c1))) NOT NULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END) AND (CASE v0.c1  WHEN v0.c1 THEN '5q' END)));
SELECT ALL * FROM vt0, rt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2126891937'))))) ORDER BY '1900703493' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2126891937'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1900703493' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2126891937'))))) ORDER BY '1900703493' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2126891937'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1900703493' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('2126891937'))))) ORDER BY '1900703493' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (((rt1.c0 IN ()) IN ())) ORDER BY CASE WHEN (((rt1.c0, rt1.c2, rt1.c3)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((rt1.c1, 0.6148576762531829, vt0.c0))) THEN (((v0.c2))<=((0.8822884946573816))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CASE WHEN (((rt1.c0, rt1.c2, rt1.c3)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((rt1.c1, 0.6148576762531829, vt0.c0))) THEN (((v0.c2))<=((0.8822884946573816))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (((rt1.c0 IN ()) IN ())) ORDER BY CASE WHEN (((rt1.c0, rt1.c2, rt1.c3)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((rt1.c1, 0.6148576762531829, vt0.c0))) THEN (((v0.c2))<=((0.8822884946573816))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0, v0 ORDER BY CASE WHEN (((rt1.c0, rt1.c2, rt1.c3)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((rt1.c1, 0.6148576762531829, vt0.c0))) THEN (((v0.c2))<=((0.8822884946573816))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, v0 WHERE (((rt1.c0 IN ()) IN ())) ORDER BY CASE WHEN (((rt1.c0, rt1.c2, rt1.c3)) BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((rt1.c1, 0.6148576762531829, vt0.c0))) THEN (((v0.c2))<=((0.8822884946573816))) END  NULLS FIRST;
SELECT * FROM v0, rt1, vt0, rt0 WHERE (((((vt0.c0)>=(rt1.c2)))-(((rt1.c3)IS(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(rt1.c2)))-(((rt1.c3)IS(rt1.c4))))) IS TRUE)  as count FROM v0, rt1, vt0, rt0);
SELECT * FROM v0, rt1, vt0, rt0 WHERE (((((vt0.c0)>=(rt1.c2)))-(((rt1.c3)IS(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(rt1.c2)))-(((rt1.c3)IS(rt1.c4))))) IS TRUE)  as count FROM v0, rt1, vt0, rt0);
SELECT * FROM v0, rt1, vt0, rt0 WHERE (((((vt0.c0)>=(rt1.c2)))-(((rt1.c3)IS(rt1.c4)))));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((((v0.c1)%(v0.c0)))<<(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)%(v0.c0)))<<(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((((v0.c1)%(v0.c0)))<<(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)%(v0.c0)))<<(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((((v0.c1)%(v0.c0)))<<(((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (('' IN ())) AND (((vt0.c0) NOT BETWEEN ('\rk*NL') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (('' IN ())) AND (((vt0.c0) NOT BETWEEN ('\rk*NL') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (('' IN ())) AND (((vt0.c0) NOT BETWEEN ('\rk*NL') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (('' IN ())) AND (((vt0.c0) NOT BETWEEN ('\rk*NL') AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0)))) NOT BETWEEN (('' IN ())) AND (((vt0.c0) NOT BETWEEN ('\rk*NL') AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) ORDER BY ((LENGTH(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((LENGTH(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) ORDER BY ((LENGTH(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((LENGTH(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) ORDER BY ((LENGTH(vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<(((('154796456') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<(((('154796456') NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<(((('154796456') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<(((('154796456') NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<(((('154796456') NOT NULL)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c3) ORDER BY (((('0.6348699424807898') BETWEEN (rt1.c4) AND (rt1.c4))) BETWEEN ((NOT (rt1.c2))) AND ((rt1.c4 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((('0.6348699424807898') BETWEEN (rt1.c4) AND (rt1.c4))) BETWEEN ((NOT (rt1.c2))) AND ((rt1.c4 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c3) ORDER BY (((('0.6348699424807898') BETWEEN (rt1.c4) AND (rt1.c4))) BETWEEN ((NOT (rt1.c2))) AND ((rt1.c4 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((('0.6348699424807898') BETWEEN (rt1.c4) AND (rt1.c4))) BETWEEN ((NOT (rt1.c2))) AND ((rt1.c4 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c3) ORDER BY (((('0.6348699424807898') BETWEEN (rt1.c4) AND (rt1.c4))) BETWEEN ((NOT (rt1.c2))) AND ((rt1.c4 IN (vt0.c0))));
SELECT * FROM vt0, rt0, v0 WHERE (x'') ORDER BY ((((((((((rt0.c0)+(v0.c1)))OR(((((v0.c0)OR(rt0.c2)))OR(v0.c2)))))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(rt0.c0)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND ('375864670')))) DESC  NULLS FIRST, ((0.7454387997225256) ISNULL) ASC, CASE WHEN v0.c1 THEN json_type(v0.c1) ELSE (NOT (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((((rt0.c0)+(v0.c1)))OR(((((v0.c0)OR(rt0.c2)))OR(v0.c2)))))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(rt0.c0)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND ('375864670')))) DESC  NULLS FIRST, ((0.7454387997225256) ISNULL) ASC, CASE WHEN v0.c1 THEN json_type(v0.c1) ELSE (NOT (v0.c1)) END);
SELECT * FROM vt0, rt0, v0 WHERE (x'') ORDER BY ((((((((((rt0.c0)+(v0.c1)))OR(((((v0.c0)OR(rt0.c2)))OR(v0.c2)))))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(rt0.c0)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND ('375864670')))) DESC  NULLS FIRST, ((0.7454387997225256) ISNULL) ASC, CASE WHEN v0.c1 THEN json_type(v0.c1) ELSE (NOT (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((((rt0.c0)+(v0.c1)))OR(((((v0.c0)OR(rt0.c2)))OR(v0.c2)))))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(rt0.c0)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND ('375864670')))) DESC  NULLS FIRST, ((0.7454387997225256) ISNULL) ASC, CASE WHEN v0.c1 THEN json_type(v0.c1) ELSE (NOT (v0.c1)) END);
SELECT * FROM vt0, rt0, v0 WHERE (x'') ORDER BY ((((((((((rt0.c0)+(v0.c1)))OR(((((v0.c0)OR(rt0.c2)))OR(v0.c2)))))OR((((rt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(rt0.c0)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND ('375864670')))) DESC  NULLS FIRST, ((0.7454387997225256) ISNULL) ASC, CASE WHEN v0.c1 THEN json_type(v0.c1) ELSE (NOT (v0.c1)) END;
SELECT ALL * FROM rt1, rt0 NOT INDEXED, v0, vt0 WHERE (x'b7e5') ORDER BY ((CASE WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END)IS((rt1.c3 IN ()))) ASC, ((v0.c0) ISNULL) ASC, IFNULL(((rt1.c3)<('a')), ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'b7e5') IS TRUE)  as count FROM rt1, rt0, v0, vt0 ORDER BY ((CASE WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END)IS((rt1.c3 IN ()))) ASC, ((v0.c0) ISNULL) ASC, IFNULL(((rt1.c3)<('a')), ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 NOT INDEXED, v0, vt0 WHERE (x'b7e5') ORDER BY ((CASE WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END)IS((rt1.c3 IN ()))) ASC, ((v0.c0) ISNULL) ASC, IFNULL(((rt1.c3)<('a')), ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'b7e5') IS TRUE)  as count FROM rt1, rt0, v0, vt0 ORDER BY ((CASE WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END)IS((rt1.c3 IN ()))) ASC, ((v0.c0) ISNULL) ASC, IFNULL(((rt1.c3)<('a')), ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 NOT INDEXED, v0, vt0 WHERE (x'b7e5') ORDER BY ((CASE WHEN rt0.c2 THEN v0.c2 ELSE rt0.c1 END)IS((rt1.c3 IN ()))) ASC, ((v0.c0) ISNULL) ASC, IFNULL(((rt1.c3)<('a')), ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c2 COLLATE BINARY, v0.c0, CAST(v0.c2 AS INTEGER)))<((CAST(vt0.c0 AS NUMERIC), (v0.c2 IN (v0.c1, vt0.c0)), ((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2 COLLATE BINARY, v0.c0, CAST(v0.c2 AS INTEGER)))<((CAST(vt0.c0 AS NUMERIC), (v0.c2 IN (v0.c1, vt0.c0)), ((v0.c1) NOTNULL)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c2 COLLATE BINARY, v0.c0, CAST(v0.c2 AS INTEGER)))<((CAST(vt0.c0 AS NUMERIC), (v0.c2 IN (v0.c1, vt0.c0)), ((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c2 COLLATE BINARY, v0.c0, CAST(v0.c2 AS INTEGER)))<((CAST(vt0.c0 AS NUMERIC), (v0.c2 IN (v0.c1, vt0.c0)), ((v0.c1) NOTNULL)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY (((v0.c2 COLLATE BINARY, v0.c0, CAST(v0.c2 AS INTEGER)))<((CAST(vt0.c0 AS NUMERIC), (v0.c2 IN (v0.c1, vt0.c0)), ((v0.c1) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c1, v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c1, v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c1, v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c1, v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c1, v0.c2))) IS FALSE));
SELECT COUNT(*) FROM rt1, rt0, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0, v0);
SELECT COUNT(*) FROM rt1, rt0, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0, v0);
SELECT COUNT(*) FROM rt1, rt0, vt0, v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (('Fk1191 4663135125811364480T1484252334447349116-_k')-(CAST(rt1.c0 AS REAL))) CROSS JOIN rt0 ON (ABS('-1493332643') IN ()) WHERE ((+ (rt1.c4)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c4))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (('Fk1191 4663135125811364480T1484252334447349116-_k')-(CAST(rt1.c0 AS REAL))) CROSS JOIN rt0 ON (ABS('-1493332643') IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (('Fk1191 4663135125811364480T1484252334447349116-_k')-(CAST(rt1.c0 AS REAL))) CROSS JOIN rt0 ON (ABS('-1493332643') IN ()) WHERE ((+ (rt1.c4)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c4))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (('Fk1191 4663135125811364480T1484252334447349116-_k')-(CAST(rt1.c0 AS REAL))) CROSS JOIN rt0 ON (ABS('-1493332643') IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (('Fk1191 4663135125811364480T1484252334447349116-_k')-(CAST(rt1.c0 AS REAL))) CROSS JOIN rt0 ON (ABS('-1493332643') IN ()) WHERE ((+ (rt1.c4)));
SELECT * FROM rt1 WHERE (((rt1.c3)>(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3)>(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3)>(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3)>(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3)>(rt1.c1)) COLLATE RTRIM);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0)/(rt0.c2)))-(vt0.c0)) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0)/(rt0.c2)))-(vt0.c0)));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0)/(rt0.c2)))-(vt0.c0)) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0)/(rt0.c2)))-(vt0.c0)));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0)/(rt0.c2)))-(vt0.c0)) WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM rt1, rt0 WHERE (ABS(CAST(NULL AS BLOB))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR((((rt1.c3))<=((rt1.c3))))) DESC  NULLS FIRST, rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT ((ABS(CAST(NULL AS BLOB))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR((((rt1.c3))<=((rt1.c3))))) DESC  NULLS FIRST, rt1.c4 ASC);
SELECT * FROM rt1, rt0 WHERE (ABS(CAST(NULL AS BLOB))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR((((rt1.c3))<=((rt1.c3))))) DESC  NULLS FIRST, rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT ((ABS(CAST(NULL AS BLOB))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR((((rt1.c3))<=((rt1.c3))))) DESC  NULLS FIRST, rt1.c4 ASC);
SELECT * FROM rt1, rt0 WHERE (ABS(CAST(NULL AS BLOB))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))OR((((rt1.c3))<=((rt1.c3))))) DESC  NULLS FIRST, rt1.c4 ASC;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c4 AS BLOB) AS REAL) INNER JOIN vt0 ON x'' WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CASE ''  WHEN rt1.c0 THEN -721564300 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CASE ''  WHEN rt1.c0 THEN -721564300 END)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c4 AS BLOB) AS REAL) INNER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c4 AS BLOB) AS REAL) INNER JOIN vt0 ON x'' WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CASE ''  WHEN rt1.c0 THEN -721564300 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CASE ''  WHEN rt1.c0 THEN -721564300 END)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c4 AS BLOB) AS REAL) INNER JOIN vt0 ON x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST(CAST(rt1.c4 AS BLOB) AS REAL) INNER JOIN vt0 ON x'' WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CASE ''  WHEN rt1.c0 THEN -721564300 END))));
SELECT * FROM v0, rt1, vt0 WHERE (((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))+(((v0.c0)+(v0.c2))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))+(((v0.c0)+(v0.c2))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY v0.c0);
SELECT * FROM v0, rt1, vt0 WHERE (((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))+(((v0.c0)+(v0.c2))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))+(((v0.c0)+(v0.c2))))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY v0.c0);
SELECT * FROM v0, rt1, vt0 WHERE (((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))+(((v0.c0)+(v0.c2))))) ORDER BY v0.c0;
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 END) IS FALSE) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 END) IS FALSE));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 END) IS FALSE) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 END) IS FALSE));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c4 END) IS FALSE) WHERE (rt1.c3);
SELECT ALL * FROM v0, rt0, rt1, vt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY ((((((v0.c1)-(v0.c1)))AND(CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END)))OR(LIKELIHOOD(DISTINCT rt1.c3, 0.1778429882667959))), (((('0.18092632163049494') NOT BETWEEN (v0.c0) AND (rt1.c2)))<=(CAST(vt0.c0 AS TEXT))), ((((((rt0.c1)IS(rt0.c2)))OR((NOT (v0.c0)))))AND(((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, rt0, rt1, vt0 ORDER BY ((((((v0.c1)-(v0.c1)))AND(CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END)))OR(LIKELIHOOD(DISTINCT rt1.c3, 0.1778429882667959))), (((('0.18092632163049494') NOT BETWEEN (v0.c0) AND (rt1.c2)))<=(CAST(vt0.c0 AS TEXT))), ((((((rt0.c1)IS(rt0.c2)))OR((NOT (v0.c0)))))AND(((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT ALL * FROM v0, rt0, rt1, vt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY ((((((v0.c1)-(v0.c1)))AND(CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END)))OR(LIKELIHOOD(DISTINCT rt1.c3, 0.1778429882667959))), (((('0.18092632163049494') NOT BETWEEN (v0.c0) AND (rt1.c2)))<=(CAST(vt0.c0 AS TEXT))), ((((((rt0.c1)IS(rt0.c2)))OR((NOT (v0.c0)))))AND(((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, rt0, rt1, vt0 ORDER BY ((((((v0.c1)-(v0.c1)))AND(CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END)))OR(LIKELIHOOD(DISTINCT rt1.c3, 0.1778429882667959))), (((('0.18092632163049494') NOT BETWEEN (v0.c0) AND (rt1.c2)))<=(CAST(vt0.c0 AS TEXT))), ((((((rt0.c1)IS(rt0.c2)))OR((NOT (v0.c0)))))AND(((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT ALL * FROM v0, rt0, rt1, vt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY ((((((v0.c1)-(v0.c1)))AND(CASE v0.c2  WHEN rt1.c1 THEN vt0.c0 END)))OR(LIKELIHOOD(DISTINCT rt1.c3, 0.1778429882667959))), (((('0.18092632163049494') NOT BETWEEN (v0.c0) AND (rt1.c2)))<=(CAST(vt0.c0 AS TEXT))), ((((((rt0.c1)IS(rt0.c2)))OR((NOT (v0.c0)))))AND(((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c0))));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3)<(rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)<(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3)<(rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)<(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3)<(rt1.c1)) AS INTEGER));
SELECT * FROM rt1 WHERE (0.5960389185082527) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5960389185082527) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (0.5960389185082527) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5960389185082527) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (0.5960389185082527) ORDER BY (((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, rt1, rt0 WHERE ('.A');
SELECT SUM(count) FROM (SELECT ALL (('.A') IS TRUE)  as count FROM vt0, v0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, rt0 WHERE ('.A');
SELECT SUM(count) FROM (SELECT ALL (('.A') IS TRUE)  as count FROM vt0, v0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, rt0 WHERE ('.A');
SELECT COUNT(*) FROM vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ('');
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON -1375331032 COLLATE BINARY WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON -1375331032 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON -1375331032 COLLATE BINARY WHERE ((v0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON -1375331032 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON -1375331032 COLLATE BINARY WHERE ((v0.c2 IN ()));
SELECT COUNT(*) FROM v0, rt0, rt1, vt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))OR(CASE rt1.c3  WHEN x'' THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))OR(CASE rt1.c3  WHEN x'' THEN rt1.c4 END))) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT COUNT(*) FROM v0, rt0, rt1, vt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))OR(CASE rt1.c3  WHEN x'' THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))OR(CASE rt1.c3  WHEN x'' THEN rt1.c4 END))) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT COUNT(*) FROM v0, rt0, rt1, vt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))OR(CASE rt1.c3  WHEN x'' THEN rt1.c4 END)));
SELECT ALL COUNT(*) FROM v0, vt0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c4) IS TRUE) WHERE (rt1.c0) ORDER BY ((((0.13931247550809267)AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((rt1.c1 IN (v0.c2, v0.c2))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (v0.c2) AND ((v0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, vt0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c4) IS TRUE) ORDER BY ((((0.13931247550809267)AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((rt1.c1 IN (v0.c2, v0.c2))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (v0.c2) AND ((v0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c4) IS TRUE) WHERE (rt1.c0) ORDER BY ((((0.13931247550809267)AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((rt1.c1 IN (v0.c2, v0.c2))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (v0.c2) AND ((v0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, vt0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c4) IS TRUE) ORDER BY ((((0.13931247550809267)AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((rt1.c1 IN (v0.c2, v0.c2))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (v0.c2) AND ((v0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c4) IS TRUE) WHERE (rt1.c0) ORDER BY ((((0.13931247550809267)AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND((rt1.c1 IN (v0.c2, v0.c2))))  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (v0.c2) AND ((v0.c1 IN ()))) DESC;
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2) ISNULL)))) ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER));
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2) ISNULL)))) ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER));
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2) ISNULL)))) ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER);
SELECT * FROM v0, vt0, rt0 WHERE (((NULL)<>(((((((((rt0.c2)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)<>(((((((((rt0.c2)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((NULL)<>(((((((((rt0.c2)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)<>(((((((((rt0.c2)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((NULL)<>(((((((((rt0.c2)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (0X8022e17);
SELECT SUM(count) FROM (SELECT ((0x8022e17) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0X8022e17);
SELECT SUM(count) FROM (SELECT ((0x8022e17) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0X8022e17);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))>>((((v0.c1, rt1.c3, rt1.c1))!=((v0.c2, rt0.c1, v0.c1)))))) ORDER BY ((rt0.c0)<=(rt1.c1)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))>>((((v0.c1, rt1.c3, rt1.c1))<>((v0.c2, rt0.c1, v0.c1)))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((rt0.c0)<=(rt1.c1)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))>>((((v0.c1, rt1.c3, rt1.c1))!=((v0.c2, rt0.c1, v0.c1)))))) ORDER BY ((rt0.c0)<=(rt1.c1)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))>>((((v0.c1, rt1.c3, rt1.c1))<>((v0.c2, rt0.c1, v0.c1)))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((rt0.c0)<=(rt1.c1)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))>>((((v0.c1, rt1.c3, rt1.c1))!=((v0.c2, rt0.c1, v0.c1)))))) ORDER BY ((rt0.c0)<=(rt1.c1)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt1, vt0, v0, rt0 WHERE ((- (rt1.c0))) ORDER BY (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((0.7810272675022754 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0))) IS TRUE)  as count FROM rt1, vt0, v0, rt0 ORDER BY (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((0.7810272675022754 COLLATE NOCASE)))  NULLS FIRST);
SELECT * FROM rt1, vt0, v0, rt0 WHERE ((- (rt1.c0))) ORDER BY (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((0.7810272675022754 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c0))) IS TRUE)  as count FROM rt1, vt0, v0, rt0 ORDER BY (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((0.7810272675022754 COLLATE NOCASE)))  NULLS FIRST);
SELECT * FROM rt1, vt0, v0, rt0 WHERE ((- (rt1.c0))) ORDER BY (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((0.7810272675022754 COLLATE NOCASE)))  NULLS FIRST;
SELECT * FROM v0, rt0, rt1, vt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt1.c1))))))OR('	A')));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt1.c1))))))OR('	A'))) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT * FROM v0, rt0, rt1, vt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt1.c1))))))OR('	A')));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt1.c1))))))OR('	A'))) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT * FROM v0, rt0, rt1, vt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt1.c1))))))OR('	A')));
SELECT ALL * FROM vt0, rt1 CROSS JOIN v0 ON ((((((((((0.4199186958005239)OR(vt0.c0)))AND(0X7781597b)))OR(rt1.c2)))AND(v0.c2)))%((rt1.c3 IN ()))) WHERE (((((((v0.c2)IS(v0.c1)))AND((~ (rt1.c2)))))OR(((((rt1.c0)AND(v0.c1)))AND('-1995076843')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)IS(v0.c1)))AND((~ (rt1.c2)))))OR(((((rt1.c0)AND(v0.c1)))AND('-1995076843'))))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN v0 ON ((((((((((0.4199186958005239)OR(vt0.c0)))AND(0X7781597b)))OR(rt1.c2)))AND(v0.c2)))%((rt1.c3 IN ()))));
SELECT ALL * FROM vt0, rt1 CROSS JOIN v0 ON ((((((((((0.4199186958005239)OR(vt0.c0)))AND(0X7781597b)))OR(rt1.c2)))AND(v0.c2)))%((rt1.c3 IN ()))) WHERE (((((((v0.c2)IS(v0.c1)))AND((~ (rt1.c2)))))OR(((((rt1.c0)AND(v0.c1)))AND('-1995076843')))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)IS(v0.c1)))AND((~ (rt1.c2)))))OR(((((rt1.c0)AND(v0.c1)))AND('-1995076843'))))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN v0 ON ((((((((((0.4199186958005239)OR(vt0.c0)))AND(0X7781597b)))OR(rt1.c2)))AND(v0.c2)))%((rt1.c3 IN ()))));
SELECT ALL * FROM vt0, rt1 CROSS JOIN v0 ON ((((((((((0.4199186958005239)OR(vt0.c0)))AND(0X7781597b)))OR(rt1.c2)))AND(v0.c2)))%((rt1.c3 IN ()))) WHERE (((((((v0.c2)IS(v0.c1)))AND((~ (rt1.c2)))))OR(((((rt1.c0)AND(v0.c1)))AND('-1995076843')))));
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN v0 ON CASE WHEN ((0.24984529225541874) IS FALSE) THEN v0.c1 ELSE ((rt1.c4)AND(rt1.c1)) END WHERE ((- ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON CASE WHEN ((0.24984529225541874) IS FALSE) THEN v0.c1 ELSE ((rt1.c4)AND(rt1.c1)) END);
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN v0 ON CASE WHEN ((0.24984529225541874) IS FALSE) THEN v0.c1 ELSE ((rt1.c4)AND(rt1.c1)) END WHERE ((- ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON CASE WHEN ((0.24984529225541874) IS FALSE) THEN v0.c1 ELSE ((rt1.c4)AND(rt1.c1)) END);
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN v0 ON CASE WHEN ((0.24984529225541874) IS FALSE) THEN v0.c1 ELSE ((rt1.c4)AND(rt1.c1)) END WHERE ((- ((NULL IN ()))));
SELECT ALL * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON CAST(((rt1.c4)+(v0.c1)) AS INTEGER) WHERE ((((((rt1.c1))==((v0.c0))))+(vt0.c0))) ORDER BY (rt1.c1 IN ())  NULLS LAST, rt1.c4 ASC  NULLS LAST, CASE NULL  WHEN CAST('5ymኴvO''' AS BLOB) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))==((v0.c0))))+(vt0.c0))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON CAST(((rt1.c4)+(v0.c1)) AS INTEGER) ORDER BY (rt1.c1 IN ())  NULLS LAST, rt1.c4 ASC  NULLS LAST, CASE NULL  WHEN CAST('5ymኴvO''' AS BLOB) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) END);
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON CAST(((rt1.c4)+(v0.c1)) AS INTEGER) WHERE ((((((rt1.c1))==((v0.c0))))+(vt0.c0))) ORDER BY (rt1.c1 IN ())  NULLS LAST, rt1.c4 ASC  NULLS LAST, CASE NULL  WHEN CAST('5ymኴvO''' AS BLOB) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))==((v0.c0))))+(vt0.c0))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON CAST(((rt1.c4)+(v0.c1)) AS INTEGER) ORDER BY (rt1.c1 IN ())  NULLS LAST, rt1.c4 ASC  NULLS LAST, CASE NULL  WHEN CAST('5ymኴvO''' AS BLOB) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) END);
SELECT ALL * FROM vt0, v0 INNER JOIN rt1 ON CAST(((rt1.c4)+(v0.c1)) AS INTEGER) WHERE ((((((rt1.c1))==((v0.c0))))+(vt0.c0))) ORDER BY (rt1.c1 IN ())  NULLS LAST, rt1.c4 ASC  NULLS LAST, CASE NULL  WHEN CAST('5ymኴvO''' AS BLOB) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) END;
SELECT ALL * FROM vt0 WHERE ('143621635') ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('143621635') IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('143621635') ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('143621635') IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('143621635') ORDER BY (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((vt0.c0)||(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c1)))AND(CAST(NULL AS INTEGER))))AND('0.32940807555928764')) WHERE ((rt1.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c1)))AND(CAST(NULL AS INTEGER))))AND('0.32940807555928764')));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c1)))AND(CAST(NULL AS INTEGER))))AND('0.32940807555928764')) WHERE ((rt1.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c1)))AND(CAST(NULL AS INTEGER))))AND('0.32940807555928764')));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN v0 ON NULL RIGHT OUTER JOIN vt0 ON ((((((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c1)))AND(CAST(NULL AS INTEGER))))AND('0.32940807555928764')) WHERE ((rt1.c2 COLLATE RTRIM IN ()));
SELECT * FROM rt1 NOT INDEXED, rt0, vt0, v0 WHERE ((- (TIME(rt1.c0, v0.c1, rt1.c1, v0.c2, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (TIME(rt1.c0, v0.c1, rt1.c1, v0.c2, rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, vt0, v0);
SELECT * FROM rt1 NOT INDEXED, rt0, vt0, v0 WHERE ((- (TIME(rt1.c0, v0.c1, rt1.c1, v0.c2, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- (TIME(rt1.c0, v0.c1, rt1.c1, v0.c2, rt1.c2)))) IS TRUE)  as count FROM rt1, rt0, vt0, v0);
SELECT * FROM rt1 NOT INDEXED, rt0, vt0, v0 WHERE ((- (TIME(rt1.c0, v0.c1, rt1.c1, v0.c2, rt1.c2))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)AND(rt0.c0 COLLATE BINARY)))AND(CAST(rt0.c0 AS INTEGER))) WHERE ((((rt0.c2)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)AND(rt0.c0 COLLATE BINARY)))AND(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)AND(rt0.c0 COLLATE BINARY)))AND(CAST(rt0.c0 AS INTEGER))) WHERE ((((rt0.c2)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)AND(rt0.c0 COLLATE BINARY)))AND(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)AND(rt0.c0 COLLATE BINARY)))AND(CAST(rt0.c0 AS INTEGER))) WHERE ((((rt0.c2)<=(rt0.c1)) IN ()));
SELECT ALL * FROM rt1, v0, vt0 WHERE ((((CAST(rt1.c3 AS INTEGER)))>=(((rt1.c0 IN (rt1.c3)))))) ORDER BY (CAST(rt1.c2 AS TEXT) IN (CASE WHEN '?#뒨d\' THEN rt1.c3 ELSE rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS INTEGER)))>=(((rt1.c0 IN (rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (CAST(rt1.c2 AS TEXT) IN (CASE WHEN '?#뒨d\' THEN rt1.c3 ELSE rt1.c2 END))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt0 WHERE ((((CAST(rt1.c3 AS INTEGER)))>=(((rt1.c0 IN (rt1.c3)))))) ORDER BY (CAST(rt1.c2 AS TEXT) IN (CASE WHEN '?#뒨d\' THEN rt1.c3 ELSE rt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS INTEGER)))>=(((rt1.c0 IN (rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (CAST(rt1.c2 AS TEXT) IN (CASE WHEN '?#뒨d\' THEN rt1.c3 ELSE rt1.c2 END))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, vt0 WHERE ((((CAST(rt1.c3 AS INTEGER)))>=(((rt1.c0 IN (rt1.c3)))))) ORDER BY (CAST(rt1.c2 AS TEXT) IN (CASE WHEN '?#뒨d\' THEN rt1.c3 ELSE rt1.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN ((vt0.c0)<(rt1.c2)) THEN LTRIM(rt1.c2, rt1.c1) WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) WHEN (~ (v0.c0)) THEN DATE(-1.932650497E9, rt1.c4, rt1.c1) END) ORDER BY (((((rt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt1.c0, v0.c1, vt0.c0)) AND ((rt1.c2, '0.6516739796477042', rt1.c3)))) NOT BETWEEN ((('-2045945683')AND(v0.c2))) AND ((NOT (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<(rt1.c2)) THEN LTRIM(rt1.c2, rt1.c1) WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) WHEN (~ (v0.c0)) THEN DATE(-1.932650497E9, rt1.c4, rt1.c1) END) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (((((rt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt1.c0, v0.c1, vt0.c0)) AND ((rt1.c2, '0.6516739796477042', rt1.c3)))) NOT BETWEEN ((('-2045945683')AND(v0.c2))) AND ((NOT (v0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN ((vt0.c0)<(rt1.c2)) THEN LTRIM(rt1.c2, rt1.c1) WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) WHEN (~ (v0.c0)) THEN DATE(-1.932650497E9, rt1.c4, rt1.c1) END) ORDER BY (((((rt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt1.c0, v0.c1, vt0.c0)) AND ((rt1.c2, '0.6516739796477042', rt1.c3)))) NOT BETWEEN ((('-2045945683')AND(v0.c2))) AND ((NOT (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<(rt1.c2)) THEN LTRIM(rt1.c2, rt1.c1) WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) WHEN (~ (v0.c0)) THEN DATE(-1.932650497E9, rt1.c4, rt1.c1) END) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (((((rt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt1.c0, v0.c1, vt0.c0)) AND ((rt1.c2, '0.6516739796477042', rt1.c3)))) NOT BETWEEN ((('-2045945683')AND(v0.c2))) AND ((NOT (v0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (CASE WHEN ((vt0.c0)<(rt1.c2)) THEN LTRIM(rt1.c2, rt1.c1) WHEN rt1.c4 COLLATE NOCASE THEN ((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)) WHEN (~ (v0.c0)) THEN DATE(-1.932650497E9, rt1.c4, rt1.c1) END) ORDER BY (((((rt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((rt1.c0, v0.c1, vt0.c0)) AND ((rt1.c2, '0.6516739796477042', rt1.c3)))) NOT BETWEEN ((('-2045945683')AND(v0.c2))) AND ((NOT (v0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, vt0, rt1 WHERE ((((rt1.c3 IN ()))>=(CAST(rt1.c2 AS REAL)))) ORDER BY CAST((((rt0.c1))==((rt1.c3))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ()))>=(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY CAST((((rt0.c1))==((rt1.c3))) AS BLOB) ASC);
SELECT COUNT(*) FROM v0, rt0, vt0, rt1 WHERE ((((rt1.c3 IN ()))>=(CAST(rt1.c2 AS REAL)))) ORDER BY CAST((((rt0.c1))==((rt1.c3))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ()))>=(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY CAST((((rt0.c1))==((rt1.c3))) AS BLOB) ASC);
SELECT COUNT(*) FROM v0, rt0, vt0, rt1 WHERE ((((rt1.c3 IN ()))>=(CAST(rt1.c2 AS REAL)))) ORDER BY CAST((((rt0.c1))==((rt1.c3))) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY CASE WHEN ((((rt0.c1)AND(rt1.c4)))OR(rt0.c0)) THEN ((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)) ELSE (NOT (rt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt1.c4)))OR(rt0.c0)) THEN ((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)) ELSE (NOT (rt1.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY CASE WHEN ((((rt0.c1)AND(rt1.c4)))OR(rt0.c0)) THEN ((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)) ELSE (NOT (rt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt1.c4)))OR(rt0.c0)) THEN ((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)) ELSE (NOT (rt1.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY CASE WHEN ((((rt0.c1)AND(rt1.c4)))OR(rt0.c0)) THEN ((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)) ELSE (NOT (rt1.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)AND(v0.c0)))AND(rt1.c2)))>>(((0.9843161255266666)||(rt1.c2)))) RIGHT OUTER JOIN rt0 ON INSTR(((rt1.c3) IS TRUE), (- (rt1.c1))) CROSS JOIN vt0 ON v0.c2 WHERE ((((rt0.c1 IN ())) BETWEEN (LIKELIHOOD(rt0.c0, 0.9162637465722281)) AND (((rt1.c1) IS FALSE)))) ORDER BY (((rt0.c2 IN (v0.c0))) NOT BETWEEN (NULL) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (LIKELIHOOD(rt0.c0, 0.9162637465722281)) AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)AND(v0.c0)))AND(rt1.c2)))>>(((0.9843161255266666)||(rt1.c2)))) RIGHT OUTER JOIN rt0 ON INSTR(((rt1.c3) IS TRUE), (- (rt1.c1))) CROSS JOIN vt0 ON v0.c2 ORDER BY (((rt0.c2 IN (v0.c0))) NOT BETWEEN (NULL) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)AND(v0.c0)))AND(rt1.c2)))>>(((0.9843161255266666)||(rt1.c2)))) RIGHT OUTER JOIN rt0 ON INSTR(((rt1.c3) IS TRUE), (- (rt1.c1))) CROSS JOIN vt0 ON v0.c2 WHERE ((((rt0.c1 IN ())) BETWEEN (LIKELIHOOD(rt0.c0, 0.9162637465722281)) AND (((rt1.c1) IS FALSE)))) ORDER BY (((rt0.c2 IN (v0.c0))) NOT BETWEEN (NULL) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (LIKELIHOOD(rt0.c0, 0.9162637465722281)) AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON ((((((rt0.c0)AND(v0.c0)))AND(rt1.c2)))>>(((0.9843161255266666)||(rt1.c2)))) RIGHT OUTER JOIN rt0 ON INSTR(((rt1.c3) IS TRUE), (- (rt1.c1))) CROSS JOIN vt0 ON v0.c2 ORDER BY (((rt0.c2 IN (v0.c0))) NOT BETWEEN (NULL) AND ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((v0.c0) BETWEEN ((0.31166620915761456 IN ())) AND ((((x'', v0.c1, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN ((0.31166620915761456 IN ())) AND ((((x'', v0.c1, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) ISNULL) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((v0.c0) BETWEEN ((0.31166620915761456 IN ())) AND ((((x'', v0.c1, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN ((0.31166620915761456 IN ())) AND ((((x'', v0.c1, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) ISNULL) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((v0.c0) BETWEEN ((0.31166620915761456 IN ())) AND ((((x'', v0.c1, v0.c2)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) ISNULL) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))&(((v0.c1)IS NOT(v0.c2))))) ORDER BY ((((('2144263661'))<((v0.c1)))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))&(((v0.c1)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((((('2144263661'))<((v0.c1)))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))&(((v0.c1)IS NOT(v0.c2))))) ORDER BY ((((('2144263661'))<((v0.c1)))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))&(((v0.c1)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((((('2144263661'))<((v0.c1)))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))&(((v0.c1)IS NOT(v0.c2))))) ORDER BY ((((('2144263661'))<((v0.c1)))) ISNULL) ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE ((((json_insert(rt0.c1, rt1.c2, rt1.c1, rt1.c3, 0.735808146003814), (rt0.c2 IN ()), COALESCE(rt0.c0, rt1.c1)))!=((CASE WHEN rt1.c0 THEN '1738546350' ELSE rt1.c3 END, rt1.c2, CASE rt1.c2  WHEN 0.7722031510686104 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY (((rt1.c3, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt0.c1, rt0.c1, rt1.c4))) COLLATE BINARY  NULLS LAST, (((((rt0.c1) BETWEEN ('-1483009348') AND ('-1460216988'))))>((CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c3 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((json_insert(rt0.c1, rt1.c2, rt1.c1, rt1.c3, 0.735808146003814), (rt0.c2 IN ()), COALESCE(rt0.c0, rt1.c1)))<>((CASE WHEN rt1.c0 THEN '1738546350' ELSE rt1.c3 END, rt1.c2, CASE rt1.c2  WHEN 0.7722031510686104 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt0.c1, rt0.c1, rt1.c4))) COLLATE BINARY  NULLS LAST, (((((rt0.c1) BETWEEN ('-1483009348') AND ('-1460216988'))))>((CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c3 END)))  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((json_insert(rt0.c1, rt1.c2, rt1.c1, rt1.c3, 0.735808146003814), (rt0.c2 IN ()), COALESCE(rt0.c0, rt1.c1)))!=((CASE WHEN rt1.c0 THEN '1738546350' ELSE rt1.c3 END, rt1.c2, CASE rt1.c2  WHEN 0.7722031510686104 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY (((rt1.c3, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt0.c1, rt0.c1, rt1.c4))) COLLATE BINARY  NULLS LAST, (((((rt0.c1) BETWEEN ('-1483009348') AND ('-1460216988'))))>((CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c3 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((json_insert(rt0.c1, rt1.c2, rt1.c1, rt1.c3, 0.735808146003814), (rt0.c2 IN ()), COALESCE(rt0.c0, rt1.c1)))<>((CASE WHEN rt1.c0 THEN '1738546350' ELSE rt1.c3 END, rt1.c2, CASE rt1.c2  WHEN 0.7722031510686104 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt0.c1, rt0.c1, rt1.c4))) COLLATE BINARY  NULLS LAST, (((((rt0.c1) BETWEEN ('-1483009348') AND ('-1460216988'))))>((CASE rt0.c0  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c3 END)))  NULLS LAST);
SELECT * FROM vt0, rt0, v0, rt1 WHERE ((rt1.c3 IN (rt1.c1, rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN (rt1.c1, rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT * FROM vt0, rt0, v0, rt1 WHERE ((rt1.c3 IN (rt1.c1, rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN (rt1.c1, rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT * FROM vt0, rt0, v0, rt1 WHERE ((rt1.c3 IN (rt1.c1, rt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)) NOT BETWEEN ((v0.c0)) AND (('	Zpc쮡'))) IN ())) ORDER BY ((((v0.c2) ISNULL)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)) NOT BETWEEN ((v0.c0)) AND (('	Zpc쮡'))) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) ISNULL)) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)) NOT BETWEEN ((v0.c0)) AND (('	Zpc쮡'))) IN ())) ORDER BY ((((v0.c2) ISNULL)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)) NOT BETWEEN ((v0.c0)) AND (('	Zpc쮡'))) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) ISNULL)) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2)) NOT BETWEEN ((v0.c0)) AND (('	Zpc쮡'))) IN ())) ORDER BY ((((v0.c2) ISNULL)) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((0.03354576164308143)OR(((rt0.c1)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.03354576164308143)OR(((rt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((0.03354576164308143)OR(((rt0.c1)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.03354576164308143)OR(((rt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((0.03354576164308143)OR(((rt0.c1)<<(rt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON TRIM(DISTINCT rt1.c3, (((rt0.c0))>((v0.c1)))) INNER JOIN rt0 ON 1295913702 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)>(CASE WHEN rt0.c2 THEN rt1.c3 END))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))*(ABS(rt1.c4)))  NULLS LAST, ((((((((rt0.c1)OR(CASE WHEN rt1.c2 THEN v0.c1 ELSE rt1.c2 END)))OR(CASE rt0.c0  WHEN rt1.c3 THEN 0.5701199214542958 ELSE vt0.c0 END)))OR((rt1.c3 IN ()))))OR(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c4 END)) DESC, ((HEX(vt0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)>(CASE WHEN rt0.c2 THEN rt1.c3 END))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON TRIM(DISTINCT rt1.c3, (((rt0.c0))>((v0.c1)))) INNER JOIN rt0 ON 1295913702 ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))*(ABS(rt1.c4)))  NULLS LAST, ((((((((rt0.c1)OR(CASE WHEN rt1.c2 THEN v0.c1 ELSE rt1.c2 END)))OR(CASE rt0.c0  WHEN rt1.c3 THEN 0.5701199214542958 ELSE vt0.c0 END)))OR((rt1.c3 IN ()))))OR(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c4 END)) DESC, ((HEX(vt0.c0)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON TRIM(DISTINCT rt1.c3, (((rt0.c0))>((v0.c1)))) INNER JOIN rt0 ON 1295913702 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)>(CASE WHEN rt0.c2 THEN rt1.c3 END))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))*(ABS(rt1.c4)))  NULLS LAST, ((((((((rt0.c1)OR(CASE WHEN rt1.c2 THEN v0.c1 ELSE rt1.c2 END)))OR(CASE rt0.c0  WHEN rt1.c3 THEN 0.5701199214542958 ELSE vt0.c0 END)))OR((rt1.c3 IN ()))))OR(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c4 END)) DESC, ((HEX(vt0.c0)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)>(CASE WHEN rt0.c2 THEN rt1.c3 END))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt1 ON TRIM(DISTINCT rt1.c3, (((rt0.c0))>((v0.c1)))) INNER JOIN rt0 ON 1295913702 ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))*(ABS(rt1.c4)))  NULLS LAST, ((((((((rt0.c1)OR(CASE WHEN rt1.c2 THEN v0.c1 ELSE rt1.c2 END)))OR(CASE rt0.c0  WHEN rt1.c3 THEN 0.5701199214542958 ELSE vt0.c0 END)))OR((rt1.c3 IN ()))))OR(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c4 END)) DESC, ((HEX(vt0.c0)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt1 ON TRIM(DISTINCT rt1.c3, (((rt0.c0))>((v0.c1)))) INNER JOIN rt0 ON 1295913702 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END)>(CASE WHEN rt0.c2 THEN rt1.c3 END))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))*(ABS(rt1.c4)))  NULLS LAST, ((((((((rt0.c1)OR(CASE WHEN rt1.c2 THEN v0.c1 ELSE rt1.c2 END)))OR(CASE rt0.c0  WHEN rt1.c3 THEN 0.5701199214542958 ELSE vt0.c0 END)))OR((rt1.c3 IN ()))))OR(CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c4 END)) DESC, ((HEX(vt0.c0)) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY v0.c0 DESC;
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC);
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC);
SELECT * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC;
SELECT ALL * FROM rt0, vt0, rt1, v0 WHERE (((vt0.c0)>(rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1, v0);
SELECT ALL * FROM rt0, vt0, rt1, v0 WHERE (((vt0.c0)>(rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1, v0);
SELECT ALL * FROM rt0, vt0, rt1, v0 WHERE (((vt0.c0)>(rt1.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')&(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')&(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')&(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')&(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')&(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST((((rt1.c4))<=((rt1.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c4))<=((rt1.c1))) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST((((rt1.c4))<=((rt1.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c4))<=((rt1.c1))) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (CAST((((rt1.c4))<=((rt1.c1))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('')));
SELECT ALL COUNT(*) FROM rt0, rt1, v0, vt0 WHERE (((((rt1.c4) IS TRUE))GLOB(((rt1.c1)||(rt0.c0))))) ORDER BY NULL, (((rt0.c2)<=(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) IS TRUE))GLOB(((rt1.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0, vt0 ORDER BY NULL, (((rt0.c2)<=(rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, vt0 WHERE (((((rt1.c4) IS TRUE))GLOB(((rt1.c1)||(rt0.c0))))) ORDER BY NULL, (((rt0.c2)<=(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) IS TRUE))GLOB(((rt1.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0, vt0 ORDER BY NULL, (((rt0.c2)<=(rt0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, vt0 WHERE (((((rt1.c4) IS TRUE))GLOB(((rt1.c1)||(rt0.c0))))) ORDER BY NULL, (((rt0.c2)<=(rt0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((((~ ('-1862876567')))AND(((v0.c1) ISNULL))))OR((((v0.c0, v0.c1, v0.c2))!=((v0.c1, 0.6066222446770634, v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((~ ('-1862876567')))AND(((v0.c1) ISNULL))))OR((((v0.c0, v0.c1, v0.c2))!=((v0.c1, 0.6066222446770634, v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((~ ('-1862876567')))AND(((v0.c1) ISNULL))))OR((((v0.c0, v0.c1, v0.c2))!=((v0.c1, 0.6066222446770634, v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((~ ('-1862876567')))AND(((v0.c1) ISNULL))))OR((((v0.c0, v0.c1, v0.c2))!=((v0.c1, 0.6066222446770634, v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((~ ('-1862876567')))AND(((v0.c1) ISNULL))))OR((((v0.c0, v0.c1, v0.c2))!=((v0.c1, 0.6066222446770634, v0.c1))))));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0) NOT NULL))AND(((rt1.c0)<(rt1.c3)))))OR((((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c3))))) WHERE (((((rt0.c0)>(rt0.c2)))LIKE(rt1.c4))) ORDER BY (rt1.c1 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c2)))LIKE(rt1.c4))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0) NOT NULL))AND(((rt1.c0)<(rt1.c3)))))OR((((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c3))))) ORDER BY (rt1.c1 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0) NOT NULL))AND(((rt1.c0)<(rt1.c3)))))OR((((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c3))))) WHERE (((((rt0.c0)>(rt0.c2)))LIKE(rt1.c4))) ORDER BY (rt1.c1 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c2)))LIKE(rt1.c4))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0) NOT NULL))AND(((rt1.c0)<(rt1.c3)))))OR((((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c3))))) ORDER BY (rt1.c1 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c0) NOT NULL))AND(((rt1.c0)<(rt1.c3)))))OR((((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c3))))) WHERE (((((rt0.c0)>(rt0.c2)))LIKE(rt1.c4))) ORDER BY (rt1.c1 IN ()) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (0.10973548219604923) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((v0.c0)GLOB(rt1.c2)) WHEN rt1.c4 THEN ((((rt1.c0)AND(v0.c2)))OR(rt1.c0)) WHEN CASE WHEN v0.c0 THEN 0Xffffffffbe775246 WHEN v0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END THEN ((((rt1.c3)AND(NULL)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.10973548219604923) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((v0.c0)GLOB(rt1.c2)) WHEN rt1.c4 THEN ((((rt1.c0)AND(v0.c2)))OR(rt1.c0)) WHEN CASE WHEN v0.c0 THEN 0xffffffffbe775246 WHEN v0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END THEN ((((rt1.c3)AND(NULL)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (0.10973548219604923) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((v0.c0)GLOB(rt1.c2)) WHEN rt1.c4 THEN ((((rt1.c0)AND(v0.c2)))OR(rt1.c0)) WHEN CASE WHEN v0.c0 THEN 0Xffffffffbe775246 WHEN v0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END THEN ((((rt1.c3)AND(NULL)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.10973548219604923) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((v0.c0)GLOB(rt1.c2)) WHEN rt1.c4 THEN ((((rt1.c0)AND(v0.c2)))OR(rt1.c0)) WHEN CASE WHEN v0.c0 THEN 0xffffffffbe775246 WHEN v0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END THEN ((((rt1.c3)AND(NULL)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (0.10973548219604923) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN ((v0.c0)GLOB(rt1.c2)) WHEN rt1.c4 THEN ((((rt1.c0)AND(v0.c2)))OR(rt1.c0)) WHEN CASE WHEN v0.c0 THEN 0Xffffffffbe775246 WHEN v0.c1 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 ELSE rt1.c0 END THEN ((((rt1.c3)AND(NULL)))AND(v0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((+ (CHAR(rt1.c3)))) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c2)<>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CHAR(rt1.c3)))) IS TRUE)  as count FROM v0, rt0, rt1, vt0 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c2)!=(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((+ (CHAR(rt1.c3)))) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c2)<>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CHAR(rt1.c3)))) IS TRUE)  as count FROM v0, rt0, rt1, vt0 ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c2)!=(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((+ (CHAR(rt1.c3)))) ORDER BY ((CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt0.c2)<>(rt0.c0)))) ASC;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE (((vt0.c0))<((rt1.c1)))  WHEN ((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c3)) THEN rt1.c4 WHEN CAST(rt0.c1 AS REAL) THEN ((vt0.c0)||(rt1.c0)) WHEN (((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN ('1365894326') AND (rt1.c4)) END) ORDER BY (((rt1.c4 IN (rt1.c3, rt1.c3)))>>((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<((rt1.c1)))  WHEN ((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c3)) THEN rt1.c4 WHEN CAST(rt0.c1 AS REAL) THEN ((vt0.c0)||(rt1.c0)) WHEN (((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN ('1365894326') AND (rt1.c4)) END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((rt1.c4 IN (rt1.c3, rt1.c3)))>>((NOT (rt1.c2)))));
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE (((vt0.c0))<((rt1.c1)))  WHEN ((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c3)) THEN rt1.c4 WHEN CAST(rt0.c1 AS REAL) THEN ((vt0.c0)||(rt1.c0)) WHEN (((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN ('1365894326') AND (rt1.c4)) END) ORDER BY (((rt1.c4 IN (rt1.c3, rt1.c3)))>>((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<((rt1.c1)))  WHEN ((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c3)) THEN rt1.c4 WHEN CAST(rt0.c1 AS REAL) THEN ((vt0.c0)||(rt1.c0)) WHEN (((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN ('1365894326') AND (rt1.c4)) END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((rt1.c4 IN (rt1.c3, rt1.c3)))>>((NOT (rt1.c2)))));
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE (((vt0.c0))<((rt1.c1)))  WHEN ((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c3)) THEN rt1.c4 WHEN CAST(rt0.c1 AS REAL) THEN ((vt0.c0)||(rt1.c0)) WHEN (((rt1.c4, rt1.c2, rt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, rt0.c2)) AND ((rt1.c2, rt1.c2, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN ('1365894326') AND (rt1.c4)) END) ORDER BY (((rt1.c4 IN (rt1.c3, rt1.c3)))>>((NOT (rt1.c2))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('');
SELECT * FROM v0 WHERE ((GLOB(v0.c1, v0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(v0.c1, v0.c2) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((GLOB(v0.c1, v0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(v0.c1, v0.c2) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((GLOB(v0.c1, v0.c2) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((rt1.c2)AND(vt0.c0)))AND(v0.c2)) COLLATE BINARY) ORDER BY (((rt1.c1 IN ()))<('881639017')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(vt0.c0)))AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (((rt1.c1 IN ()))<('881639017')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((rt1.c2)AND(vt0.c0)))AND(v0.c2)) COLLATE BINARY) ORDER BY (((rt1.c1 IN ()))<('881639017')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(vt0.c0)))AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1, v0 ORDER BY (((rt1.c1 IN ()))<('881639017')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, v0 WHERE (((((rt1.c2)AND(vt0.c0)))AND(v0.c2)) COLLATE BINARY) ORDER BY (((rt1.c1 IN ()))<('881639017')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON CAST(((rt1.c0)==(rt1.c3)) AS NUMERIC) WHERE (((((rt1.c0 IN (rt1.c0))))>((((0.24973800777870636)>=(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 IN (rt1.c0))))>((((0.24973800777870636)>=(rt1.c3)))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON CAST(((rt1.c0)=(rt1.c3)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON CAST(((rt1.c0)==(rt1.c3)) AS NUMERIC) WHERE (((((rt1.c0 IN (rt1.c0))))>((((0.24973800777870636)>=(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 IN (rt1.c0))))>((((0.24973800777870636)>=(rt1.c3)))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON CAST(((rt1.c0)=(rt1.c3)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON CAST(((rt1.c0)==(rt1.c3)) AS NUMERIC) WHERE (((((rt1.c0 IN (rt1.c0))))>((((0.24973800777870636)>=(rt1.c3))))));
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE ((- ((NOT (0.7244719457276312))))) ORDER BY (((rt1.c4)) BETWEEN ((0.17131344715184926 COLLATE BINARY)) AND ((9.06321621E8)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (0.7244719457276312))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY (((rt1.c4)) BETWEEN ((0.17131344715184926 COLLATE BINARY)) AND ((9.06321621E8)))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE ((- ((NOT (0.7244719457276312))))) ORDER BY (((rt1.c4)) BETWEEN ((0.17131344715184926 COLLATE BINARY)) AND ((9.06321621E8)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (0.7244719457276312))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY (((rt1.c4)) BETWEEN ((0.17131344715184926 COLLATE BINARY)) AND ((9.06321621E8)))  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE ((- ((NOT (0.7244719457276312))))) ORDER BY (((rt1.c4)) BETWEEN ((0.17131344715184926 COLLATE BINARY)) AND ((9.06321621E8)))  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY CAST(((rt0.c1) BETWEEN ('~>嗦') AND (rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN ('~>嗦') AND (rt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY CAST(((rt0.c1) BETWEEN ('~>嗦') AND (rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1) BETWEEN ('~>嗦') AND (rt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY CAST(((rt0.c1) BETWEEN ('~>嗦') AND (rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c1)>=(rt1.c1))) BETWEEN (TYPEOF(DISTINCT rt1.c2)) AND (((rt0.c0) NOT NULL))) WHERE (CAST(((rt1.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c1)>=(rt1.c1))) BETWEEN (TYPEOF(DISTINCT rt1.c2)) AND (((rt0.c0) NOT NULL))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c1)>=(rt1.c1))) BETWEEN (TYPEOF(DISTINCT rt1.c2)) AND (((rt0.c0) NOT NULL))) WHERE (CAST(((rt1.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c1)>=(rt1.c1))) BETWEEN (TYPEOF(DISTINCT rt1.c2)) AND (((rt0.c0) NOT NULL))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c1)>=(rt1.c1))) BETWEEN (TYPEOF(DISTINCT rt1.c2)) AND (((rt0.c0) NOT NULL))) WHERE (CAST(((rt1.c2) NOT NULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (((rt1.c4 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (((rt1.c4 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt1);
SELECT ALL COUNT(*) FROM v0, vt0, rt1 WHERE (((rt1.c4 COLLATE RTRIM) IS FALSE));
SELECT * FROM v0 WHERE (NULL) ORDER BY v0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY v0.c2 DESC);
SELECT * FROM v0 WHERE (NULL) ORDER BY v0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY v0.c2 DESC);
SELECT * FROM v0 WHERE (NULL) ORDER BY v0.c2 DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c0)<<((- (v0.c2))))) ORDER BY ((((v0.c0) ISNULL))>(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<((- (v0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((v0.c0) ISNULL))>(rt0.c0)) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c0)<<((- (v0.c2))))) ORDER BY ((((v0.c0) ISNULL))>(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<((- (v0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((v0.c0) ISNULL))>(rt0.c0)) ASC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c0)<<((- (v0.c2))))) ORDER BY ((((v0.c0) ISNULL))>(rt0.c0)) ASC;
SELECT * FROM rt0, v0 WHERE (CAST(((v0.c1) BETWEEN (rt0.c2) AND (v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) BETWEEN (rt0.c2) AND (v0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((v0.c1) BETWEEN (rt0.c2) AND (v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) BETWEEN (rt0.c2) AND (v0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((v0.c1) BETWEEN (rt0.c2) AND (v0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, v0, rt1, vt0 WHERE ((((rt1.c1 COLLATE BINARY))>((((vt0.c0) ISNULL))))) ORDER BY (((rt1.c1)) BETWEEN ((CAST(v0.c0 AS BLOB))) AND (('a' COLLATE RTRIM))), ((ABS(DISTINCT rt1.c4)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (CASE WHEN rt0.c1 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 COLLATE BINARY))>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0, v0, rt1, vt0 ORDER BY (((rt1.c1)) BETWEEN ((CAST(v0.c0 AS BLOB))) AND (('a' COLLATE RTRIM))), ((ABS(DISTINCT rt1.c4)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (CASE WHEN rt0.c1 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt0, v0, rt1, vt0 WHERE ((((rt1.c1 COLLATE BINARY))>((((vt0.c0) ISNULL))))) ORDER BY (((rt1.c1)) BETWEEN ((CAST(v0.c0 AS BLOB))) AND (('a' COLLATE RTRIM))), ((ABS(DISTINCT rt1.c4)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (CASE WHEN rt0.c1 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 COLLATE BINARY))>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0, v0, rt1, vt0 ORDER BY (((rt1.c1)) BETWEEN ((CAST(v0.c0 AS BLOB))) AND (('a' COLLATE RTRIM))), ((ABS(DISTINCT rt1.c4)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (CASE WHEN rt0.c1 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt0, v0, rt1, vt0 WHERE ((((rt1.c1 COLLATE BINARY))>((((vt0.c0) ISNULL))))) ORDER BY (((rt1.c1)) BETWEEN ((CAST(v0.c0 AS BLOB))) AND (('a' COLLATE RTRIM))), ((ABS(DISTINCT rt1.c4)) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END) AND (CASE WHEN rt0.c1 THEN rt1.c3 END));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (CAST((~ (rt0.c0)) AS NUMERIC)) ORDER BY ((CAST(rt0.c1 AS INTEGER))%((v0.c2 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY ((CAST(rt0.c1 AS INTEGER))%((v0.c2 IN (rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (CAST((~ (rt0.c0)) AS NUMERIC)) ORDER BY ((CAST(rt0.c1 AS INTEGER))%((v0.c2 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY ((CAST(rt0.c1 AS INTEGER))%((v0.c2 IN (rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (CAST((~ (rt0.c0)) AS NUMERIC)) ORDER BY ((CAST(rt0.c1 AS INTEGER))%((v0.c2 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END AS REAL));
SELECT * FROM v0, rt0, vt0, rt1 WHERE (rt1.c3) ORDER BY 'BE' DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY 'BE' DESC);
SELECT * FROM v0, rt0, vt0, rt1 WHERE (rt1.c3) ORDER BY 'BE' DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY 'BE' DESC);
SELECT * FROM v0, rt0, vt0, rt1 WHERE (rt1.c3) ORDER BY 'BE' DESC;
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (HEX(DISTINCT (((rt1.c4)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0))))) ORDER BY x'9160' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((rt1.c4)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY x'9160' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (HEX(DISTINCT (((rt1.c4)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0))))) ORDER BY x'9160' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((rt1.c4)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY x'9160' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (HEX(DISTINCT (((rt1.c4)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0))))) ORDER BY x'9160' ASC  NULLS FIRST;
SELECT * FROM rt1, rt0, v0, vt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY CASE WHEN ((rt1.c2)/(rt1.c3)) THEN (('1677482083') NOT BETWEEN ('	Jj') AND (v0.c1)) ELSE ((rt0.c2)>>(rt1.c0)) END, CAST((rt0.c2 IN (rt0.c1, x'')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, rt0, v0, vt0 ORDER BY CASE WHEN ((rt1.c2)/(rt1.c3)) THEN (('1677482083') NOT BETWEEN ('	Jj') AND (v0.c1)) ELSE ((rt0.c2)>>(rt1.c0)) END, CAST((rt0.c2 IN (rt0.c1, x'')) AS INTEGER));
SELECT * FROM rt1, rt0, v0, vt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY CASE WHEN ((rt1.c2)/(rt1.c3)) THEN (('1677482083') NOT BETWEEN ('	Jj') AND (v0.c1)) ELSE ((rt0.c2)>>(rt1.c0)) END, CAST((rt0.c2 IN (rt0.c1, x'')) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, rt0, v0, vt0 ORDER BY CASE WHEN ((rt1.c2)/(rt1.c3)) THEN (('1677482083') NOT BETWEEN ('	Jj') AND (v0.c1)) ELSE ((rt0.c2)>>(rt1.c0)) END, CAST((rt0.c2 IN (rt0.c1, x'')) AS INTEGER));
SELECT * FROM rt1, rt0, v0, vt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY CASE WHEN ((rt1.c2)/(rt1.c3)) THEN (('1677482083') NOT BETWEEN ('	Jj') AND (v0.c1)) ELSE ((rt0.c2)>>(rt1.c0)) END, CAST((rt0.c2 IN (rt0.c1, x'')) AS INTEGER);
SELECT * FROM rt0, vt0, rt1, v0 WHERE ((rt1.c3 COLLATE NOCASE IN (CASE rt1.c4  WHEN rt1.c4 THEN 0xffffffffe1e26d2f WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT (((rt1.c3 COLLATE NOCASE IN (CASE rt1.c4  WHEN rt1.c4 THEN 0xffffffffe1e26d2f WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM rt0, vt0, rt1, v0);
SELECT * FROM rt0, vt0, rt1, v0 WHERE ((rt1.c3 COLLATE NOCASE IN (CASE rt1.c4  WHEN rt1.c4 THEN 0xffffffffe1e26d2f WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT (((rt1.c3 COLLATE NOCASE IN (CASE rt1.c4  WHEN rt1.c4 THEN 0xffffffffe1e26d2f WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM rt0, vt0, rt1, v0);
SELECT * FROM rt0, vt0, rt1, v0 WHERE ((rt1.c3 COLLATE NOCASE IN (CASE rt1.c4  WHEN rt1.c4 THEN 0xffffffffe1e26d2f WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN rt1.c4 END)));
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (((((((rt1.c3))>((vt0.c0))), TYPEOF(DISTINCT rt0.c1), (v0.c1 IN ())))>=((((x'6ac5')>(rt1.c2)), ((v0.c2)GLOB(rt1.c2)), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3))>((vt0.c0))), TYPEOF(DISTINCT rt0.c1), (v0.c1 IN ())))>=((((x'6ac5')>(rt1.c2)), ((v0.c2)GLOB(rt1.c2)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (((((((rt1.c3))>((vt0.c0))), TYPEOF(DISTINCT rt0.c1), (v0.c1 IN ())))>=((((x'6ac5')>(rt1.c2)), ((v0.c2)GLOB(rt1.c2)), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3))>((vt0.c0))), TYPEOF(DISTINCT rt0.c1), (v0.c1 IN ())))>=((((x'6ac5')>(rt1.c2)), ((v0.c2)GLOB(rt1.c2)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT ALL * FROM v0, rt0, vt0, rt1 WHERE (((((((rt1.c3))>((vt0.c0))), TYPEOF(DISTINCT rt0.c1), (v0.c1 IN ())))>=((((x'6ac5')>(rt1.c2)), ((v0.c2)GLOB(rt1.c2)), (rt0.c1 IN ())))));
SELECT * FROM vt0, rt0 WHERE ((json_extract(rt0.c2, rt0.c0) IN ())) ORDER BY (((rt0.c0)!=(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((json_extract(rt0.c2, rt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)!=(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0, rt0 WHERE ((json_extract(rt0.c2, rt0.c0) IN ())) ORDER BY (((rt0.c0)!=(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((json_extract(rt0.c2, rt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)!=(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0, rt0 WHERE ((json_extract(rt0.c2, rt0.c0) IN ())) ORDER BY (((rt0.c0)!=(vt0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(NULL))) ORDER BY ((rt0.c2) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)IS NOT(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(NULL))) ORDER BY ((rt0.c2) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)IS NOT(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(NULL))) ORDER BY ((rt0.c2) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(((v0.c0) NOTNULL))) ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c2 COLLATE BINARY)), ((v0.c1)-((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c2 COLLATE BINARY)), ((v0.c1)-((v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(((v0.c0) NOTNULL))) ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c2 COLLATE BINARY)), ((v0.c1)-((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0) NOTNULL))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c2 COLLATE BINARY)), ((v0.c1)-((v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(((v0.c0) NOTNULL))) ORDER BY (((NOT (v0.c1))) NOT BETWEEN (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c2 COLLATE BINARY)), ((v0.c1)-((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY SQLITE_COMPILEOPTION_USED(rt1.c3)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY SQLITE_COMPILEOPTION_USED(rt1.c3)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY SQLITE_COMPILEOPTION_USED(rt1.c3)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY SQLITE_COMPILEOPTION_USED(rt1.c3)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY SQLITE_COMPILEOPTION_USED(rt1.c3)  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0)&(v0.c2)))) AND ((LOWER(v0.c0)))) LEFT OUTER JOIN rt1 ON ((rt1.c0) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END) AND (LTRIM(v0.c0))) WHERE ((((rt1.c4 IN (rt1.c3, rt1.c4))) NOT BETWEEN ((((v0.c2, rt0.c2, rt1.c4)) NOT BETWEEN ((rt0.c0, v0.c2, x'')) AND ((rt1.c0, v0.c1, rt1.c4)))) AND (rt1.c4)));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN (rt1.c3, rt1.c4))) NOT BETWEEN ((((v0.c2, rt0.c2, rt1.c4)) NOT BETWEEN ((rt0.c0, v0.c2, x'')) AND ((rt1.c0, v0.c1, rt1.c4)))) AND (rt1.c4))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0)&(v0.c2)))) AND ((LOWER(v0.c0)))) LEFT OUTER JOIN rt1 ON ((rt1.c0) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END) AND (LTRIM(v0.c0))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0)&(v0.c2)))) AND ((LOWER(v0.c0)))) LEFT OUTER JOIN rt1 ON ((rt1.c0) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END) AND (LTRIM(v0.c0))) WHERE ((((rt1.c4 IN (rt1.c3, rt1.c4))) NOT BETWEEN ((((v0.c2, rt0.c2, rt1.c4)) NOT BETWEEN ((rt0.c0, v0.c2, x'')) AND ((rt1.c0, v0.c1, rt1.c4)))) AND (rt1.c4)));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN (rt1.c3, rt1.c4))) NOT BETWEEN ((((v0.c2, rt0.c2, rt1.c4)) NOT BETWEEN ((rt0.c0, v0.c2, x'')) AND ((rt1.c0, v0.c1, rt1.c4)))) AND (rt1.c4))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN ((((rt0.c0)&(v0.c2)))) AND ((LOWER(v0.c0)))) LEFT OUTER JOIN rt1 ON ((rt1.c0) NOTNULL) RIGHT OUTER JOIN rt0 ON ((((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END) AND (LTRIM(v0.c0))));
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE (NULL) ORDER BY ((v0.c1)IS(((v0.c0) ISNULL))) ASC, (~ (rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((rt1.c3)||(v0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY ((v0.c1)IS(((v0.c0) ISNULL))) ASC, (~ (rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((rt1.c3)||(v0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE (NULL) ORDER BY ((v0.c1)IS(((v0.c0) ISNULL))) ASC, (~ (rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((rt1.c3)||(v0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY ((v0.c1)IS(((v0.c0) ISNULL))) ASC, (~ (rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((rt1.c3)||(v0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE (NULL) ORDER BY ((v0.c1)IS(((v0.c0) ISNULL))) ASC, (~ (rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, ((rt1.c3)||(v0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM v0, rt1, vt0 WHERE (json_insert(TRIM(rt1.c2), (rt1.c2 IN ()), ((rt1.c4) IS FALSE))) ORDER BY (~ (v0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(TRIM(rt1.c2), (rt1.c2 IN ()), ((rt1.c4) IS FALSE))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY (~ (v0.c2)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM v0, rt1, vt0 WHERE (json_insert(TRIM(rt1.c2), (rt1.c2 IN ()), ((rt1.c4) IS FALSE))) ORDER BY (~ (v0.c2)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(TRIM(rt1.c2), (rt1.c2 IN ()), ((rt1.c4) IS FALSE))) IS TRUE)  as count FROM v0, rt1, vt0 ORDER BY (~ (v0.c2)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c2)<>(rt1.c3))) BETWEEN (((((rt1.c0)AND(rt1.c4)))OR(rt0.c2))) AND (((rt0.c2)IS(rt1.c1))))) ORDER BY (x'' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)!=(rt1.c3))) BETWEEN (((((rt1.c0)AND(rt1.c4)))OR(rt0.c2))) AND (((rt0.c2)IS(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (x'' IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c2)<>(rt1.c3))) BETWEEN (((((rt1.c0)AND(rt1.c4)))OR(rt0.c2))) AND (((rt0.c2)IS(rt1.c1))))) ORDER BY (x'' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)!=(rt1.c3))) BETWEEN (((((rt1.c0)AND(rt1.c4)))OR(rt0.c2))) AND (((rt0.c2)IS(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (x'' IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c2)<>(rt1.c3))) BETWEEN (((((rt1.c0)AND(rt1.c4)))OR(rt0.c2))) AND (((rt0.c2)IS(rt1.c1))))) ORDER BY (x'' IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (rt1.c1) ORDER BY LTRIM(rt0.c0, CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY LTRIM(rt0.c0, CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END));
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (rt1.c1) ORDER BY LTRIM(rt0.c0, CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY LTRIM(rt0.c0, CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END));
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (rt1.c1) ORDER BY LTRIM(rt0.c0, CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)%(rt0.c1))))=((0X798f6fb3)))) ORDER BY (((NOT (rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)%(rt0.c1))))==((0x798f6fb3)))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) NOT NULL));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)%(rt0.c1))))=((0X798f6fb3)))) ORDER BY (((NOT (rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)%(rt0.c1))))==((0x798f6fb3)))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) NOT NULL));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)%(rt0.c1))))=((0X798f6fb3)))) ORDER BY (((NOT (rt0.c0))) NOT NULL);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((0.8223408271124074) BETWEEN (v0.c0) AND (rt1.c2))) IS FALSE) CROSS JOIN v0 ON ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c3))) NOT BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (v0.c2))) AND (((rt1.c1) IS FALSE))) WHERE (CASE ((rt1.c4) BETWEEN (vt0.c0) AND (rt1.c3))  WHEN rt1.c4 COLLATE NOCASE THEN ((rt1.c2)<=(rt1.c1)) ELSE (x'aff6' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c4) BETWEEN (vt0.c0) AND (rt1.c3))  WHEN rt1.c4 COLLATE NOCASE THEN ((rt1.c2)<=(rt1.c1)) ELSE (x'aff6' IN ()) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((0.8223408271124074) BETWEEN (v0.c0) AND (rt1.c2))) IS FALSE) CROSS JOIN v0 ON ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c3))) NOT BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (v0.c2))) AND (((rt1.c1) IS FALSE))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((0.8223408271124074) BETWEEN (v0.c0) AND (rt1.c2))) IS FALSE) CROSS JOIN v0 ON ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c3))) NOT BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (v0.c2))) AND (((rt1.c1) IS FALSE))) WHERE (CASE ((rt1.c4) BETWEEN (vt0.c0) AND (rt1.c3))  WHEN rt1.c4 COLLATE NOCASE THEN ((rt1.c2)<=(rt1.c1)) ELSE (x'aff6' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c4) BETWEEN (vt0.c0) AND (rt1.c3))  WHEN rt1.c4 COLLATE NOCASE THEN ((rt1.c2)<=(rt1.c1)) ELSE (x'aff6' IN ()) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((0.8223408271124074) BETWEEN (v0.c0) AND (rt1.c2))) IS FALSE) CROSS JOIN v0 ON ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c3))) NOT BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (v0.c2))) AND (((rt1.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)) AS TEXT) LEFT OUTER JOIN v0 ON ((ABS(rt1.c2))<<(CAST(rt1.c0 AS TEXT))) WHERE ((((JULIANDAY(v0.c2, v0.c1, rt1.c2)))=((((rt1.c4) NOT BETWEEN (rt1.c4) AND (v0.c0)))))) ORDER BY CAST(((((rt1.c4)AND('⏞LU㵞')))AND(rt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((JULIANDAY(v0.c2, v0.c1, rt1.c2)))=((((rt1.c4) NOT BETWEEN (rt1.c4) AND (v0.c0)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)) AS TEXT) LEFT OUTER JOIN v0 ON ((ABS(rt1.c2))<<(CAST(rt1.c0 AS TEXT))) ORDER BY CAST(((((rt1.c4)AND('⏞LU㵞')))AND(rt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)) AS TEXT) LEFT OUTER JOIN v0 ON ((ABS(rt1.c2))<<(CAST(rt1.c0 AS TEXT))) WHERE ((((JULIANDAY(v0.c2, v0.c1, rt1.c2)))=((((rt1.c4) NOT BETWEEN (rt1.c4) AND (v0.c0)))))) ORDER BY CAST(((((rt1.c4)AND('⏞LU㵞')))AND(rt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((JULIANDAY(v0.c2, v0.c1, rt1.c2)))=((((rt1.c4) NOT BETWEEN (rt1.c4) AND (v0.c0)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)) AS TEXT) LEFT OUTER JOIN v0 ON ((ABS(rt1.c2))<<(CAST(rt1.c0 AS TEXT))) ORDER BY CAST(((((rt1.c4)AND('⏞LU㵞')))AND(rt1.c0)) AS BLOB));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))*(vt0.c0))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))*(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))*(vt0.c0))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))*(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))*(vt0.c0))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))&(((rt0.c1)|(rt0.c1))))) ORDER BY CASE ((1.295913702E9) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULL THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END DESC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))&(((rt0.c1)|(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((1.295913702E9) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULL THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END DESC  NULLS LAST, rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))&(((rt0.c1)|(rt0.c1))))) ORDER BY CASE ((1.295913702E9) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULL THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END DESC  NULLS LAST, rt0.c1;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))&(((rt0.c1)|(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((1.295913702E9) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULL THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END DESC  NULLS LAST, rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))&(((rt0.c1)|(rt0.c1))))) ORDER BY CASE ((1.295913702E9) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN NULL THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END DESC  NULLS LAST, rt0.c1;
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c3, rt1.c3, rt0.c0)) NOT BETWEEN ((x'', (- (rt1.c0)), ((rt1.c4)+(vt0.c0)))) AND ((((rt1.c2) IS FALSE), 0.3544528348679281, CAST(rt1.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c3, rt0.c0)) NOT BETWEEN ((x'', (- (rt1.c0)), ((rt1.c4)+(vt0.c0)))) AND ((((rt1.c2) IS FALSE), 0.3544528348679281, CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c3, rt1.c3, rt0.c0)) NOT BETWEEN ((x'', (- (rt1.c0)), ((rt1.c4)+(vt0.c0)))) AND ((((rt1.c2) IS FALSE), 0.3544528348679281, CAST(rt1.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c3, rt0.c0)) NOT BETWEEN ((x'', (- (rt1.c0)), ((rt1.c4)+(vt0.c0)))) AND ((((rt1.c2) IS FALSE), 0.3544528348679281, CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c3, rt1.c3, rt0.c0)) NOT BETWEEN ((x'', (- (rt1.c0)), ((rt1.c4)+(vt0.c0)))) AND ((((rt1.c2) IS FALSE), 0.3544528348679281, CAST(rt1.c2 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM v0 WHERE (-156447267) ORDER BY CASE x''  WHEN ((((((((((((1.930924658E9)OR(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))AND(v0.c0)) THEN ((v0.c2)<=(v0.c0)) ELSE (((0.278524025325086, v0.c2, v0.c1))<=((NULL, v0.c1, v0.c1))) END, CASE WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c2 END THEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) ELSE CAST(v0.c1 AS INTEGER) END  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((-156447267) IS TRUE)  as count FROM v0 ORDER BY CASE x''  WHEN ((((((((((((1.930924658E9)OR(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))AND(v0.c0)) THEN ((v0.c2)<=(v0.c0)) ELSE (((0.278524025325086, v0.c2, v0.c1))<=((NULL, v0.c1, v0.c1))) END, CASE WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c2 END THEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) ELSE CAST(v0.c1 AS INTEGER) END  NULLS FIRST, v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (-156447267) ORDER BY CASE x''  WHEN ((((((((((((1.930924658E9)OR(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))AND(v0.c0)) THEN ((v0.c2)<=(v0.c0)) ELSE (((0.278524025325086, v0.c2, v0.c1))<=((NULL, v0.c1, v0.c1))) END, CASE WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c2 END THEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) ELSE CAST(v0.c1 AS INTEGER) END  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((-156447267) IS TRUE)  as count FROM v0 ORDER BY CASE x''  WHEN ((((((((((((1.930924658E9)OR(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))AND(v0.c0)) THEN ((v0.c2)<=(v0.c0)) ELSE (((0.278524025325086, v0.c2, v0.c1))<=((NULL, v0.c1, v0.c1))) END, CASE WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c2 END THEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) ELSE CAST(v0.c1 AS INTEGER) END  NULLS FIRST, v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (-156447267) ORDER BY CASE x''  WHEN ((((((((((((1.930924658E9)OR(v0.c1)))OR(v0.c0)))AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))AND(v0.c0)) THEN ((v0.c2)<=(v0.c0)) ELSE (((0.278524025325086, v0.c2, v0.c1))<=((NULL, v0.c1, v0.c1))) END, CASE WHEN CASE v0.c0  WHEN v0.c2 THEN v0.c2 END THEN ((((v0.c2)AND(v0.c1)))OR(v0.c2)) ELSE CAST(v0.c1 AS INTEGER) END  NULLS FIRST, v0.c0;
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((('rn')=(TRIM(DISTINCT rt1.c4, v0.c0))));
SELECT SUM(count) FROM (SELECT (((('rn')==(TRIM(DISTINCT rt1.c4, v0.c0)))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((('rn')=(TRIM(DISTINCT rt1.c4, v0.c0))));
SELECT SUM(count) FROM (SELECT (((('rn')==(TRIM(DISTINCT rt1.c4, v0.c0)))) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT COUNT(*) FROM vt0, v0, rt1 WHERE ((('rn')=(TRIM(DISTINCT rt1.c4, v0.c0))));
SELECT COUNT(*) FROM rt1, rt0, v0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (((((rt1.c0)AND(v0.c0)))OR('')))) WHERE (PRINTF(((v0.c0)<=(rt1.c2)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)), SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((v0.c0)<=(rt1.c2)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM rt1, rt0, v0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (((((rt1.c0)AND(v0.c0)))OR('')))));
SELECT COUNT(*) FROM rt1, rt0, v0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (((((rt1.c0)AND(v0.c0)))OR('')))) WHERE (PRINTF(((v0.c0)<=(rt1.c2)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)), SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((v0.c0)<=(rt1.c2)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM rt1, rt0, v0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (((((rt1.c0)AND(v0.c0)))OR('')))));
SELECT COUNT(*) FROM rt1, rt0, v0 LEFT OUTER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN (((((rt1.c0)AND(v0.c0)))OR('')))) WHERE (PRINTF(((v0.c0)<=(rt1.c2)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)), SQLITE_SOURCE_ID()));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON rt1.c0 INNER JOIN rt0 ON (((((rt0.c0, rt1.c1, rt0.c1))<=((0.9609517357709709, rt0.c2, NULL))))IS NOT('FD' COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON UPPER(DISTINCT (~ (vt0.c0))) WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON rt1.c0 INNER JOIN rt0 ON (((((rt0.c0, rt1.c1, rt0.c1))<=((0.9609517357709709, rt0.c2, NULL))))IS NOT('FD' COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON UPPER(DISTINCT (~ (vt0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON rt1.c0 INNER JOIN rt0 ON (((((rt0.c0, rt1.c1, rt0.c1))<=((0.9609517357709709, rt0.c2, NULL))))IS NOT('FD' COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON UPPER(DISTINCT (~ (vt0.c0))) WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON rt1.c0 INNER JOIN rt0 ON (((((rt0.c0, rt1.c1, rt0.c1))<=((0.9609517357709709, rt0.c2, NULL))))IS NOT('FD' COLLATE NOCASE)) RIGHT OUTER JOIN rt1 ON UPPER(DISTINCT (~ (vt0.c0))));
SELECT COUNT(*) FROM rt1 WHERE (DATETIME(LIKELY(rt1.c4), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)), (NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((DATETIME(LIKELY(rt1.c4), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)), (NOT (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (DATETIME(LIKELY(rt1.c4), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)), (NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((DATETIME(LIKELY(rt1.c4), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)), (NOT (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (DATETIME(LIKELY(rt1.c4), ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)), (NOT (rt1.c2))));
SELECT ALL COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (((('-1109053675' COLLATE NOCASE))>=((((rt1.c2)OR(rt1.c2)))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c0)))AND(rt1.c2))) AND (((rt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-1109053675' COLLATE NOCASE))>=((((rt1.c2)OR(rt1.c2)))))) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c0)))AND(rt1.c2))) AND (((rt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (((('-1109053675' COLLATE NOCASE))>=((((rt1.c2)OR(rt1.c2)))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c0)))AND(rt1.c2))) AND (((rt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-1109053675' COLLATE NOCASE))>=((((rt1.c2)OR(rt1.c2)))))) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c0)))AND(rt1.c2))) AND (((rt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (((('-1109053675' COLLATE NOCASE))>=((((rt1.c2)OR(rt1.c2)))))) ORDER BY ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (((((vt0.c0)OR(rt1.c0)))AND(rt1.c2))) AND (((rt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (rt0.c0 IN ()) INNER JOIN rt1 ON CASE WHEN rt1.c0 THEN ((vt0.c0)>=(0.05408609139266307)) END WHERE ((((rt1.c3) NOT NULL) IN (((rt1.c1)GLOB(rt1.c4))))) ORDER BY (((rt1.c2)) BETWEEN ((((rt0.c2)%(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT NULL) IN (((rt1.c1)GLOB(rt1.c4))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (rt0.c0 IN ()) INNER JOIN rt1 ON CASE WHEN rt1.c0 THEN ((vt0.c0)>=(0.05408609139266307)) END ORDER BY (((rt1.c2)) BETWEEN ((((rt0.c2)%(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (rt0.c0 IN ()) INNER JOIN rt1 ON CASE WHEN rt1.c0 THEN ((vt0.c0)>=(0.05408609139266307)) END WHERE ((((rt1.c3) NOT NULL) IN (((rt1.c1)GLOB(rt1.c4))))) ORDER BY (((rt1.c2)) BETWEEN ((((rt0.c2)%(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT NULL) IN (((rt1.c1)GLOB(rt1.c4))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (rt0.c0 IN ()) INNER JOIN rt1 ON CASE WHEN rt1.c0 THEN ((vt0.c0)>=(0.05408609139266307)) END ORDER BY (((rt1.c2)) BETWEEN ((((rt0.c2)%(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (rt0.c0 IN ()) INNER JOIN rt1 ON CASE WHEN rt1.c0 THEN ((vt0.c0)>=(0.05408609139266307)) END WHERE ((((rt1.c3) NOT NULL) IN (((rt1.c1)GLOB(rt1.c4))))) ORDER BY (((rt1.c2)) BETWEEN ((((rt0.c2)%(rt1.c0)))) AND ((rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN v0 ON (x'' IN ()) WHERE ((((((v0.c2) IS FALSE)))<=(((~ (rt1.c1)))))) ORDER BY ((((rt1.c4)==(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) IS FALSE)))<=(((~ (rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN v0 ON (x'' IN ()) ORDER BY ((((rt1.c4)=(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN v0 ON (x'' IN ()) WHERE ((((((v0.c2) IS FALSE)))<=(((~ (rt1.c1)))))) ORDER BY ((((rt1.c4)==(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) IS FALSE)))<=(((~ (rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN v0 ON (x'' IN ()) ORDER BY ((((rt1.c4)=(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN v0 ON (x'' IN ()) WHERE ((((((v0.c2) IS FALSE)))<=(((~ (rt1.c1)))))) ORDER BY ((((rt1.c4)==(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE ((~ (((rt0.c2)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)!=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE ((~ (((rt0.c2)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)!=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE ((~ (((rt0.c2)!=(vt0.c0)))));
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.5843169636797244 END) BETWEEN ((+ ('-1888020346'))) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.5843169636797244 END) BETWEEN ((+ ('-1888020346'))) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.5843169636797244 END) BETWEEN ((+ ('-1888020346'))) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.5843169636797244 END) BETWEEN ((+ ('-1888020346'))) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 ELSE 0.5843169636797244 END) BETWEEN ((+ ('-1888020346'))) AND (rt1.c1)));
SELECT ALL * FROM v0 WHERE (x'') ORDER BY CASE WHEN ((((v0.c1)OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))<=((v0.c1))) END DESC  NULLS FIRST, -330330767 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c1)OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))<=((v0.c1))) END DESC  NULLS FIRST, -330330767 ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY CASE WHEN ((((v0.c1)OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))<=((v0.c1))) END DESC  NULLS FIRST, -330330767 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c1)OR(v0.c2)))OR(v0.c0)) THEN (((v0.c1))<=((v0.c1))) END DESC  NULLS FIRST, -330330767 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (CAST((((rt1.c3))>=((rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3))>=((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (CAST((((rt1.c3))>=((rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3))>=((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (CAST((((rt1.c3))>=((rt0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((v0.c2 IN ()))AND(CAST(v0.c2 AS BLOB))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((v0.c1)||(rt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))AND(CAST(v0.c2 AS BLOB))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((v0.c1)||(rt0.c2))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((v0.c2 IN ()))AND(CAST(v0.c2 AS BLOB))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((v0.c1)||(rt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2 IN ()))AND(CAST(v0.c2 AS BLOB))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((v0.c1)||(rt0.c2))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((v0.c2 IN ()))AND(CAST(v0.c2 AS BLOB))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((v0.c1)||(rt0.c2))) ISNULL) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c0 COLLATE BINARY)=(((rt1.c4) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0 COLLATE BINARY)==(((rt1.c4) ISNULL))));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c0 COLLATE BINARY)=(((rt1.c4) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0 COLLATE BINARY)==(((rt1.c4) ISNULL))));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c0 COLLATE BINARY)=(((rt1.c4) ISNULL)));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ())) ORDER BY CASE LIKELY(rt0.c0)  WHEN (- (vt0.c0)) THEN v0.c2 WHEN ((v0.c2) IS FALSE) THEN ((((v0.c2)AND(rt0.c1)))AND(vt0.c0)) WHEN rt0.c0 THEN ((rt0.c2)/(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0 ORDER BY CASE LIKELY(rt0.c0)  WHEN (- (vt0.c0)) THEN v0.c2 WHEN ((v0.c2) IS FALSE) THEN ((((v0.c2)AND(rt0.c1)))AND(vt0.c0)) WHEN rt0.c0 THEN ((rt0.c2)/(v0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ())) ORDER BY CASE LIKELY(rt0.c0)  WHEN (- (vt0.c0)) THEN v0.c2 WHEN ((v0.c2) IS FALSE) THEN ((((v0.c2)AND(rt0.c1)))AND(vt0.c0)) WHEN rt0.c0 THEN ((rt0.c2)/(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0 ORDER BY CASE LIKELY(rt0.c0)  WHEN (- (vt0.c0)) THEN v0.c2 WHEN ((v0.c2) IS FALSE) THEN ((((v0.c2)AND(rt0.c1)))AND(vt0.c0)) WHEN rt0.c0 THEN ((rt0.c2)/(v0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN ())) ORDER BY CASE LIKELY(rt0.c0)  WHEN (- (vt0.c0)) THEN v0.c2 WHEN ((v0.c2) IS FALSE) THEN ((((v0.c2)AND(rt0.c1)))AND(vt0.c0)) WHEN rt0.c0 THEN ((rt0.c2)/(v0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((MAX(rt1.c0, rt1.c0))-('773ᒵ#V*h')));
SELECT SUM(count) FROM (SELECT ((((MAX(rt1.c0, rt1.c0))-('773ᒵ#V*h'))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((MAX(rt1.c0, rt1.c0))-('773ᒵ#V*h')));
SELECT SUM(count) FROM (SELECT ((((MAX(rt1.c0, rt1.c0))-('773ᒵ#V*h'))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((MAX(rt1.c0, rt1.c0))-('773ᒵ#V*h')));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 NATURAL JOIN v0 WHERE ((CASE v0.c1  WHEN v0.c0 THEN rt1.c0 END IN ())) ORDER BY (- (rt0.c2)) ASC, DATE('g쇚!및C韵eO', rt0.c0 COLLATE BINARY, ((rt1.c0)|(v0.c0))) DESC, ((((((((((((rt0.c2)OR(rt0.c0)))OR(rt1.c1)))OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c2 COLLATE BINARY)))OR(UNICODE(rt1.c4))))OR((rt1.c4 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c1  WHEN v0.c0 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, rt1 NATURAL JOIN v0 ORDER BY (- (rt0.c2)) ASC, DATE('g쇚!및C韵eO', rt0.c0 COLLATE BINARY, ((rt1.c0)|(v0.c0))) DESC, ((((((((((((rt0.c2)OR(rt0.c0)))OR(rt1.c1)))OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c2 COLLATE BINARY)))OR(UNICODE(rt1.c4))))OR((rt1.c4 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 NATURAL JOIN v0 WHERE ((CASE v0.c1  WHEN v0.c0 THEN rt1.c0 END IN ())) ORDER BY (- (rt0.c2)) ASC, DATE('g쇚!및C韵eO', rt0.c0 COLLATE BINARY, ((rt1.c0)|(v0.c0))) DESC, ((((((((((((rt0.c2)OR(rt0.c0)))OR(rt1.c1)))OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c2 COLLATE BINARY)))OR(UNICODE(rt1.c4))))OR((rt1.c4 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c1  WHEN v0.c0 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, rt1 NATURAL JOIN v0 ORDER BY (- (rt0.c2)) ASC, DATE('g쇚!및C韵eO', rt0.c0 COLLATE BINARY, ((rt1.c0)|(v0.c0))) DESC, ((((((((((((rt0.c2)OR(rt0.c0)))OR(rt1.c1)))OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c2 COLLATE BINARY)))OR(UNICODE(rt1.c4))))OR((rt1.c4 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 NATURAL JOIN v0 WHERE ((CASE v0.c1  WHEN v0.c0 THEN rt1.c0 END IN ())) ORDER BY (- (rt0.c2)) ASC, DATE('g쇚!및C韵eO', rt0.c0 COLLATE BINARY, ((rt1.c0)|(v0.c0))) DESC, ((((((((((((rt0.c2)OR(rt0.c0)))OR(rt1.c1)))OR(CAST(rt0.c1 AS BLOB))))OR(rt0.c2 COLLATE BINARY)))OR(UNICODE(rt1.c4))))OR((rt1.c4 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c4)/(rt1.c4)) IN ()) LEFT OUTER JOIN v0 ON ((((rt0.c1)<(rt1.c3)))<(((((vt0.c0)OR(rt1.c2)))AND(vt0.c0)))) CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) WHERE (((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt1.c4)/(rt1.c4)) IN ()) LEFT OUTER JOIN v0 ON ((((rt0.c1)<(rt1.c3)))<(((((vt0.c0)OR(rt1.c2)))AND(vt0.c0)))) CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c4)/(rt1.c4)) IN ()) LEFT OUTER JOIN v0 ON ((((rt0.c1)<(rt1.c3)))<(((((vt0.c0)OR(rt1.c2)))AND(vt0.c0)))) CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) WHERE (((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt1.c4)/(rt1.c4)) IN ()) LEFT OUTER JOIN v0 ON ((((rt0.c1)<(rt1.c3)))<(((((vt0.c0)OR(rt1.c2)))AND(vt0.c0)))) CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c4)/(rt1.c4)) IN ()) LEFT OUTER JOIN v0 ON ((((rt0.c1)<(rt1.c3)))<(((((vt0.c0)OR(rt1.c2)))AND(vt0.c0)))) CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) WHERE (((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt1.c2)IS(v0.c2))) NOT BETWEEN ((((rt1.c0))>((v0.c1)))) AND (((rt1.c2) NOTNULL))) WHERE ((((((rt1.c2, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c1)) AND (('-1493332643', v0.c1, rt0.c1))))-('X%S鱏,')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c1)) AND (('-1493332643', v0.c1, rt0.c1))))-('X%S鱏,'))) IS TRUE)  as count FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt1.c2)IS(v0.c2))) NOT BETWEEN ((((rt1.c0))>((v0.c1)))) AND (((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt1.c2)IS(v0.c2))) NOT BETWEEN ((((rt1.c0))>((v0.c1)))) AND (((rt1.c2) NOTNULL))) WHERE ((((((rt1.c2, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c1)) AND (('-1493332643', v0.c1, rt0.c1))))-('X%S鱏,')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c1)) AND (('-1493332643', v0.c1, rt0.c1))))-('X%S鱏,'))) IS TRUE)  as count FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt1.c2)IS(v0.c2))) NOT BETWEEN ((((rt1.c0))>((v0.c1)))) AND (((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON ((((rt1.c2)IS(v0.c2))) NOT BETWEEN ((((rt1.c0))>((v0.c1)))) AND (((rt1.c2) NOTNULL))) WHERE ((((((rt1.c2, v0.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c0, rt0.c1)) AND (('-1493332643', v0.c1, rt0.c1))))-('X%S鱏,')));
SELECT COUNT(*) FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 END, (((rt0.c1))>((rt0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((((rt0.c1))<((rt1.c2))), ((rt1.c3)||(rt0.c1)), ((rt1.c2) NOTNULL)))) WHERE ((((((((((- (vt0.c0)))AND((vt0.c0 IN (rt0.c1)))))OR(x'4f48')))AND((+ (rt1.c4)))))AND(((rt1.c1) IS FALSE)))) ORDER BY PRINTF(LIKELY(rt1.c2), 0.8836964450533168 COLLATE BINARY, (rt1.c4 IN (rt0.c0)))  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))AND((vt0.c0 IN (rt0.c1)))))OR(x'4f48')))AND((+ (rt1.c4)))))AND(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 END, (((rt0.c1))>((rt0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((((rt0.c1))<((rt1.c2))), ((rt1.c3)||(rt0.c1)), ((rt1.c2) NOTNULL)))) ORDER BY PRINTF(LIKELY(rt1.c2), 0.8836964450533168 COLLATE BINARY, (rt1.c4 IN (rt0.c0)))  NULLS FIRST, rt0.c1 DESC);
SELECT COUNT(*) FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 END, (((rt0.c1))>((rt0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((((rt0.c1))<((rt1.c2))), ((rt1.c3)||(rt0.c1)), ((rt1.c2) NOTNULL)))) WHERE ((((((((((- (vt0.c0)))AND((vt0.c0 IN (rt0.c1)))))OR(x'4f48')))AND((+ (rt1.c4)))))AND(((rt1.c1) IS FALSE)))) ORDER BY PRINTF(LIKELY(rt1.c2), 0.8836964450533168 COLLATE BINARY, (rt1.c4 IN (rt0.c0)))  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))AND((vt0.c0 IN (rt0.c1)))))OR(x'4f48')))AND((+ (rt1.c4)))))AND(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 END, (((rt0.c1))>((rt0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((((rt0.c1))<((rt1.c2))), ((rt1.c3)||(rt0.c1)), ((rt1.c2) NOTNULL)))) ORDER BY PRINTF(LIKELY(rt1.c2), 0.8836964450533168 COLLATE BINARY, (rt1.c4 IN (rt0.c0)))  NULLS FIRST, rt0.c1 DESC);
SELECT COUNT(*) FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((CASE WHEN rt1.c2 THEN rt1.c2 END, (((rt0.c1))>((rt0.c2))), CAST(rt1.c2 AS INTEGER))) AND (((((rt0.c1))<((rt1.c2))), ((rt1.c3)||(rt0.c1)), ((rt1.c2) NOTNULL)))) WHERE ((((((((((- (vt0.c0)))AND((vt0.c0 IN (rt0.c1)))))OR(x'4f48')))AND((+ (rt1.c4)))))AND(((rt1.c1) IS FALSE)))) ORDER BY PRINTF(LIKELY(rt1.c2), 0.8836964450533168 COLLATE BINARY, (rt1.c4 IN (rt0.c0)))  NULLS FIRST, rt0.c1 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) ORDER BY (rt1.c2 IN (rt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN (rt1.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) ORDER BY (rt1.c2 IN (rt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN (rt1.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) ORDER BY (rt1.c2 IN (rt1.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) END FULL OUTER JOIN v0 ON CAST(((rt0.c1) ISNULL) AS REAL) RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((x'') NOT BETWEEN (v0.c1) AND (rt1.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (v0.c1) AND (rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) END FULL OUTER JOIN v0 ON CAST(((rt0.c1) ISNULL) AS REAL) RIGHT OUTER JOIN rt1 ON rt1.c0);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) END FULL OUTER JOIN v0 ON CAST(((rt0.c1) ISNULL) AS REAL) RIGHT OUTER JOIN rt1 ON rt1.c0 WHERE (((x'') NOT BETWEEN (v0.c1) AND (rt1.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (v0.c1) AND (rt1.c4)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) END FULL OUTER JOIN v0 ON CAST(((rt0.c1) ISNULL) AS REAL) RIGHT OUTER JOIN rt1 ON rt1.c0);
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (('')OR(1248474191)) THEN ((NULL) IS FALSE) END WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY (+ (rt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((CAST(0X5273a2e6 AS NUMERIC), ((rt1.c0)GLOB(rt1.c2)), v0.c1 COLLATE BINARY, CASE rt1.c1  WHEN rt0.c0 THEN x'' END, ((vt0.c0)>>(rt1.c2))))>=((CAST(x'b083' AS TEXT), v0.c0 COLLATE RTRIM, ((((((((v0.c2)OR(rt1.c3)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2)), 0.19632691089814203, ((((v0.c0)AND(rt0.c2)))AND(rt1.c3))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (('')OR(1248474191)) THEN ((NULL) IS FALSE) END ORDER BY (+ (rt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((CAST(0x5273a2e6 AS NUMERIC), ((rt1.c0)GLOB(rt1.c2)), v0.c1 COLLATE BINARY, CASE rt1.c1  WHEN rt0.c0 THEN x'' END, ((vt0.c0)>>(rt1.c2))))>=((CAST(x'b083' AS TEXT), v0.c0 COLLATE RTRIM, ((((((((v0.c2)OR(rt1.c3)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2)), 0.19632691089814203, ((((v0.c0)AND(rt0.c2)))AND(rt1.c3))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (('')OR(1248474191)) THEN ((NULL) IS FALSE) END WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY (+ (rt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((CAST(0X5273a2e6 AS NUMERIC), ((rt1.c0)GLOB(rt1.c2)), v0.c1 COLLATE BINARY, CASE rt1.c1  WHEN rt0.c0 THEN x'' END, ((vt0.c0)>>(rt1.c2))))>=((CAST(x'b083' AS TEXT), v0.c0 COLLATE RTRIM, ((((((((v0.c2)OR(rt1.c3)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2)), 0.19632691089814203, ((((v0.c0)AND(rt0.c2)))AND(rt1.c3))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (('')OR(1248474191)) THEN ((NULL) IS FALSE) END ORDER BY (+ (rt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((CAST(0x5273a2e6 AS NUMERIC), ((rt1.c0)GLOB(rt1.c2)), v0.c1 COLLATE BINARY, CASE rt1.c1  WHEN rt0.c0 THEN x'' END, ((vt0.c0)>>(rt1.c2))))>=((CAST(x'b083' AS TEXT), v0.c0 COLLATE RTRIM, ((((((((v0.c2)OR(rt1.c3)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2)), 0.19632691089814203, ((((v0.c0)AND(rt0.c2)))AND(rt1.c3))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0, rt0 RIGHT OUTER JOIN v0 ON CASE WHEN (('')OR(1248474191)) THEN ((NULL) IS FALSE) END WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY (+ (rt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((CAST(0X5273a2e6 AS NUMERIC), ((rt1.c0)GLOB(rt1.c2)), v0.c1 COLLATE BINARY, CASE rt1.c1  WHEN rt0.c0 THEN x'' END, ((vt0.c0)>>(rt1.c2))))>=((CAST(x'b083' AS TEXT), v0.c0 COLLATE RTRIM, ((((((((v0.c2)OR(rt1.c3)))AND(rt0.c1)))AND(rt1.c3)))AND(v0.c2)), 0.19632691089814203, ((((v0.c0)AND(rt0.c2)))AND(rt1.c3))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE (CAST(rt1.c4 AS NUMERIC)) ORDER BY 0X73179272 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY 0X73179272 ASC);
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE (CAST(rt1.c4 AS NUMERIC)) ORDER BY 0X73179272 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY 0X73179272 ASC);
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (UNICODE(rt0.c2)) AND (((rt0.c1)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (UNICODE(rt0.c2)) AND (((rt0.c1)=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (UNICODE(rt0.c2)) AND (((rt0.c1)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (UNICODE(rt0.c2)) AND (((rt0.c1)=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (UNICODE(rt0.c2)) AND (((rt0.c1)=(rt0.c1)))));
SELECT * FROM rt1 NOT INDEXED WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE (rt1.c0);
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt1.c4)/(rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(PRINTF(rt0.c1, rt0.c1, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)/(rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(PRINTF(rt0.c1, rt0.c1, rt1.c3)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt1.c4)/(rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(PRINTF(rt0.c1, rt0.c1, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)/(rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(PRINTF(rt0.c1, rt0.c1, rt1.c3)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt1.c4)/(rt1.c2)))OR(((rt1.c0) IS TRUE))))OR(PRINTF(rt0.c1, rt0.c1, rt1.c3))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((((((v0.c2, v0.c0, vt0.c0))=((rt1.c1, v0.c0, rt1.c3))), CAST(v0.c2 AS REAL), v0.c0))!=((154962702, CAST(rt1.c4 AS INTEGER), ((rt1.c0)|(v0.c1))))) RIGHT OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((x'')) AND ((rt1.c4)))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(rt1.c4))) AND (0.8151260894094633)) WHERE ((rt1.c4 IN (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((rt1.c4 IN (rt1.c3))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((((((v0.c2, v0.c0, vt0.c0))=((rt1.c1, v0.c0, rt1.c3))), CAST(v0.c2 AS REAL), v0.c0))!=((154962702, CAST(rt1.c4 AS INTEGER), ((rt1.c0)|(v0.c1))))) RIGHT OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((x'')) AND ((rt1.c4)))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(rt1.c4))) AND (0.8151260894094633)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((((((v0.c2, v0.c0, vt0.c0))=((rt1.c1, v0.c0, rt1.c3))), CAST(v0.c2 AS REAL), v0.c0))!=((154962702, CAST(rt1.c4 AS INTEGER), ((rt1.c0)|(v0.c1))))) RIGHT OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((x'')) AND ((rt1.c4)))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(rt1.c4))) AND (0.8151260894094633)) WHERE ((rt1.c4 IN (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((rt1.c4 IN (rt1.c3))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((((((v0.c2, v0.c0, vt0.c0))=((rt1.c1, v0.c0, rt1.c3))), CAST(v0.c2 AS REAL), v0.c0))!=((154962702, CAST(rt1.c4 AS INTEGER), ((rt1.c0)|(v0.c1))))) RIGHT OUTER JOIN vt0 ON (((((v0.c0)) BETWEEN ((x'')) AND ((rt1.c4)))) NOT BETWEEN (((((v0.c0)OR(v0.c0)))OR(rt1.c4))) AND (0.8151260894094633)));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((rt0.c1)OR('')))OR('-1375331032')))>((rt1.c2 IN ())))) ORDER BY ((x'')%(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('')))OR('-1375331032')))>((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((x'')%(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((rt0.c1)OR('')))OR('-1375331032')))>((rt1.c2 IN ())))) ORDER BY ((x'')%(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('')))OR('-1375331032')))>((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((x'')%(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((rt0.c1)OR('')))OR('-1375331032')))>((rt1.c2 IN ())))) ORDER BY ((x'')%(rt0.c1 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM v0, vt0, rt0, rt1 WHERE ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY (((v0.c2)) BETWEEN ((rt0.c1)) AND ((UPPER(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0, rt1 ORDER BY (((v0.c2)) BETWEEN ((rt0.c1)) AND ((UPPER(rt1.c1)))) DESC);
SELECT * FROM v0, vt0, rt0, rt1 WHERE ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY (((v0.c2)) BETWEEN ((rt0.c1)) AND ((UPPER(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0, rt1 ORDER BY (((v0.c2)) BETWEEN ((rt0.c1)) AND ((UPPER(rt1.c1)))) DESC);
SELECT * FROM v0, vt0, rt0, rt1 WHERE ((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY (((v0.c2)) BETWEEN ((rt0.c1)) AND ((UPPER(rt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB))<<(((rt1.c3)==(rt1.c2))))) ORDER BY ((json_object(rt1.c3, rt1.c1, rt1.c2, rt1.c3)) BETWEEN ('1694440929' COLLATE NOCASE) AND (((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB))<<(((rt1.c3)==(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((json_object(rt1.c3, rt1.c1, rt1.c2, rt1.c3)) BETWEEN ('1694440929' COLLATE NOCASE) AND (((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c4 AS BLOB))<<(((rt1.c3)==(rt1.c2))))) ORDER BY ((json_object(rt1.c3, rt1.c1, rt1.c2, rt1.c3)) BETWEEN ('1694440929' COLLATE NOCASE) AND (((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB))<<(((rt1.c3)==(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((json_object(rt1.c3, rt1.c1, rt1.c2, rt1.c3)) BETWEEN ('1694440929' COLLATE NOCASE) AND (((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c1)) BETWEEN (((((v0.c1, rt1.c1, rt1.c4)) BETWEEN ((v0.c1, v0.c2, rt1.c0)) AND ((rt1.c3, rt1.c4, v0.c1))))) AND ((TYPEOF('O]'))))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((((v0.c1, rt1.c1, rt1.c4)) BETWEEN ((v0.c1, v0.c2, rt1.c0)) AND ((rt1.c3, rt1.c4, v0.c1))))) AND ((TYPEOF('O]'))))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c1)) BETWEEN (((((v0.c1, rt1.c1, rt1.c4)) BETWEEN ((v0.c1, v0.c2, rt1.c0)) AND ((rt1.c3, rt1.c4, v0.c1))))) AND ((TYPEOF('O]'))))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN (((((v0.c1, rt1.c1, rt1.c4)) BETWEEN ((v0.c1, v0.c2, rt1.c0)) AND ((rt1.c3, rt1.c4, v0.c1))))) AND ((TYPEOF('O]'))))) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE ((((rt1.c1)) BETWEEN (((((v0.c1, rt1.c1, rt1.c4)) BETWEEN ((v0.c1, v0.c2, rt1.c0)) AND ((rt1.c3, rt1.c4, v0.c1))))) AND ((TYPEOF('O]'))))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOTNULL));
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((NOT (rt0.c1))) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((+ (v0.c2))) BETWEEN ((+ (rt0.c2))) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY (((+ (v0.c2))) BETWEEN ((+ (rt0.c2))) AND ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((NOT (rt0.c1))) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((+ (v0.c2))) BETWEEN ((+ (rt0.c2))) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY (((+ (v0.c2))) BETWEEN ((+ (rt0.c2))) AND ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((NOT (rt0.c1))) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((+ (v0.c2))) BETWEEN ((+ (rt0.c2))) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, v0, rt1 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY ((json_insert(rt0.c2, rt1.c1, rt1.c4))GLOB((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY ((json_insert(rt0.c2, rt1.c1, rt1.c4))GLOB((- (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, v0, rt1 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY ((json_insert(rt0.c2, rt1.c1, rt1.c4))GLOB((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY ((json_insert(rt0.c2, rt1.c1, rt1.c4))GLOB((- (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('ᬻV25MmLc') ORDER BY ((((x'bde9') ISNULL))!=(((rt0.c2)%(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (('ᬻV25MmLc') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((x'bde9') ISNULL))!=(((rt0.c2)%(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('ᬻV25MmLc') ORDER BY ((((x'bde9') ISNULL))!=(((rt0.c2)%(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (('ᬻV25MmLc') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((x'bde9') ISNULL))!=(((rt0.c2)%(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ('ᬻV25MmLc') ORDER BY ((((x'bde9') ISNULL))!=(((rt0.c2)%(rt0.c1)))) DESC;
SELECT ALL * FROM rt0, v0, vt0, rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0, rt1);
SELECT ALL * FROM rt0, v0, vt0, rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0, rt1);
SELECT ALL * FROM rt0, v0, vt0, rt1 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (v0.c0) ORDER BY ((CAST(rt1.c1 AS REAL))|(v0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, rt0, v0, vt0 ORDER BY ((CAST(rt1.c1 AS REAL))|(v0.c1)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (v0.c0) ORDER BY ((CAST(rt1.c1 AS REAL))|(v0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, rt0, v0, vt0 ORDER BY ((CAST(rt1.c1 AS REAL))|(v0.c1)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (v0.c0) ORDER BY ((CAST(rt1.c1 AS REAL))|(v0.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE (v0.c0) ORDER BY CAST(rt1.c1 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY CAST(rt1.c1 COLLATE NOCASE AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE (v0.c0) ORDER BY CAST(rt1.c1 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0, rt1, v0 ORDER BY CAST(rt1.c1 COLLATE NOCASE AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE (v0.c0) ORDER BY CAST(rt1.c1 COLLATE NOCASE AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY);
SELECT * FROM vt0, v0, rt0, rt1 WHERE (LENGTH(rt0.c0) COLLATE BINARY) ORDER BY ((((((((CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)AND((v0.c1 IN ()))))AND(rt1.c2)))AND(((rt1.c4)==(rt0.c0)))))AND(((v0.c2)&(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0, rt1 ORDER BY ((((((((CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)AND((v0.c1 IN ()))))AND(rt1.c2)))AND(((rt1.c4)=(rt0.c0)))))AND(((v0.c2)&(rt0.c1))))  NULLS LAST);
SELECT * FROM vt0, v0, rt0, rt1 WHERE (LENGTH(rt0.c0) COLLATE BINARY) ORDER BY ((((((((CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)AND((v0.c1 IN ()))))AND(rt1.c2)))AND(((rt1.c4)==(rt0.c0)))))AND(((v0.c2)&(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0, rt1 ORDER BY ((((((((CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)AND((v0.c1 IN ()))))AND(rt1.c2)))AND(((rt1.c4)=(rt0.c0)))))AND(((v0.c2)&(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END))) ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.0027736615928453112)) AND ((LOWER(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.0027736615928453112)) AND ((LOWER(DISTINCT rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END))) ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.0027736615928453112)) AND ((LOWER(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.0027736615928453112)) AND ((LOWER(DISTINCT rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END)<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END))) ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST, (((rt1.c1)) NOT BETWEEN ((0.0027736615928453112)) AND ((LOWER(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((1.385698617E9) BETWEEN ((v0.c2 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((1.385698617E9) BETWEEN ((v0.c2 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((1.385698617E9) BETWEEN ((v0.c2 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((1.385698617E9) BETWEEN ((v0.c2 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((1.385698617E9) BETWEEN ((v0.c2 IN ())) AND (vt0.c0)));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((-0.0) BETWEEN (((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) AND (((rt1.c4)+(rt1.c4)))) WHERE (((((((((x'')AND(((rt1.c3) ISNULL))))OR(CASE 0.7478276527884359  WHEN '1612236270' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 END)))AND(((vt0.c0)||(x'019d')))))AND(rt1.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(((rt1.c3) ISNULL))))OR(CASE 0.7478276527884359  WHEN '1612236270' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 END)))AND(((vt0.c0)||(x'019d')))))AND(rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((-0.0) BETWEEN (((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) AND (((rt1.c4)+(rt1.c4)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((-0.0) BETWEEN (((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) AND (((rt1.c4)+(rt1.c4)))) WHERE (((((((((x'')AND(((rt1.c3) ISNULL))))OR(CASE 0.7478276527884359  WHEN '1612236270' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 END)))AND(((vt0.c0)||(x'019d')))))AND(rt1.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(((rt1.c3) ISNULL))))OR(CASE 0.7478276527884359  WHEN '1612236270' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 END)))AND(((vt0.c0)||(x'019d')))))AND(rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((-0.0) BETWEEN (((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) AND (((rt1.c4)+(rt1.c4)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((-0.0) BETWEEN (((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) AND (((rt1.c4)+(rt1.c4)))) WHERE (((((((((x'')AND(((rt1.c3) ISNULL))))OR(CASE 0.7478276527884359  WHEN '1612236270' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 END)))AND(((vt0.c0)||(x'019d')))))AND(rt1.c4 COLLATE BINARY)));
SELECT ALL * FROM rt0, rt1, v0, vt0 WHERE (x'') ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, v0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, rt1, v0, vt0 WHERE (x'') ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, v0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, rt1, v0, vt0 WHERE (x'') ORDER BY ((vt0.c0 COLLATE BINARY) ISNULL);
SELECT * FROM rt0, vt0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS TEXT) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c2 AS TEXT) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS TEXT) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c2 AS TEXT) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS TEXT) THEN (rt1.c2 IN ()) END);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((((rt1.c3)) BETWEEN ((((v0.c0)GLOB('1340030627')))) AND ((0.3773454249683771))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN ((((v0.c0)GLOB('1340030627')))) AND ((0.3773454249683771)))) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((((rt1.c3)) BETWEEN ((((v0.c0)GLOB('1340030627')))) AND ((0.3773454249683771))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN ((((v0.c0)GLOB('1340030627')))) AND ((0.3773454249683771)))) IS TRUE)  as count FROM v0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE ((((rt1.c3)) BETWEEN ((((v0.c0)GLOB('1340030627')))) AND ((0.3773454249683771))));
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) ORDER BY CAST('a' AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST('a' AS REAL));
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) ORDER BY CAST('a' AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST('a' AS REAL));
SELECT * FROM rt1, vt0 WHERE (CAST(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) ORDER BY CAST('a' AS REAL);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)=('312721882' COLLATE NOCASE))) ORDER BY (((json_extract(rt0.c1, rt0.c0)))<=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END)==('312721882' COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (((json_extract(rt0.c1, rt0.c0)))<=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END)=('312721882' COLLATE NOCASE))) ORDER BY (((json_extract(rt0.c1, rt0.c0)))<=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END)==('312721882' COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (((json_extract(rt0.c1, rt0.c0)))<=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((vt0.c0)AND(v0.c0)))AND(v0.c1)) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(v0.c0)))AND(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((vt0.c0)AND(v0.c0)))AND(v0.c1)) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(v0.c0)))AND(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((vt0.c0)AND(v0.c0)))AND(v0.c1)) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE;
SELECT * FROM v0, rt0, vt0 CROSS JOIN rt1 ON ((((0.6047752218989126)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY WHERE (CASE CASE rt1.c3  WHEN rt0.c1 THEN '-1166988510' WHEN v0.c2 THEN rt1.c0 WHEN rt1.c3 THEN NULL END  WHEN (+ (rt1.c4)) THEN ((2144263661) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c3  WHEN rt0.c1 THEN '-1166988510' WHEN v0.c2 THEN rt1.c0 WHEN rt1.c3 THEN NULL END  WHEN (+ (rt1.c4)) THEN ((2144263661) NOT NULL) END) IS TRUE)  as count FROM v0, rt0, vt0 CROSS JOIN rt1 ON ((((0.6047752218989126)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY);
SELECT * FROM v0, rt0, vt0 CROSS JOIN rt1 ON ((((0.6047752218989126)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY WHERE (CASE CASE rt1.c3  WHEN rt0.c1 THEN '-1166988510' WHEN v0.c2 THEN rt1.c0 WHEN rt1.c3 THEN NULL END  WHEN (+ (rt1.c4)) THEN ((2144263661) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt1.c3  WHEN rt0.c1 THEN '-1166988510' WHEN v0.c2 THEN rt1.c0 WHEN rt1.c3 THEN NULL END  WHEN (+ (rt1.c4)) THEN ((2144263661) NOT NULL) END) IS TRUE)  as count FROM v0, rt0, vt0 CROSS JOIN rt1 ON ((((0.6047752218989126)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY);
SELECT * FROM v0, rt0, vt0 CROSS JOIN rt1 ON ((((0.6047752218989126)AND(v0.c0)))OR(rt0.c1)) COLLATE BINARY WHERE (CASE CASE rt1.c3  WHEN rt0.c1 THEN '-1166988510' WHEN v0.c2 THEN rt1.c0 WHEN rt1.c3 THEN NULL END  WHEN (+ (rt1.c4)) THEN ((2144263661) NOT NULL) END);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (v0.c0) ORDER BY ((((v0.c2) NOT NULL)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (rt0.c2)))) ASC  NULLS LAST, CAST(CASE rt0.c1  WHEN v0.c2 THEN '-836602635' ELSE v0.c2 END AS BLOB) DESC, ((UNLIKELY(DISTINCT rt0.c1))>(((((v0.c1)OR(-1460216988)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((v0.c2) NOT NULL)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (rt0.c2)))) ASC  NULLS LAST, CAST(CASE rt0.c1  WHEN v0.c2 THEN '-836602635' ELSE v0.c2 END AS BLOB) DESC, ((UNLIKELY(DISTINCT rt0.c1))>(((((v0.c1)OR(-1460216988)))AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (v0.c0) ORDER BY ((((v0.c2) NOT NULL)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (rt0.c2)))) ASC  NULLS LAST, CAST(CASE rt0.c1  WHEN v0.c2 THEN '-836602635' ELSE v0.c2 END AS BLOB) DESC, ((UNLIKELY(DISTINCT rt0.c1))>(((((v0.c1)OR(-1460216988)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((v0.c2) NOT NULL)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (rt0.c2)))) ASC  NULLS LAST, CAST(CASE rt0.c1  WHEN v0.c2 THEN '-836602635' ELSE v0.c2 END AS BLOB) DESC, ((UNLIKELY(DISTINCT rt0.c1))>(((((v0.c1)OR(-1460216988)))AND(v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (v0.c0) ORDER BY ((((v0.c2) NOT NULL)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (rt0.c2)))) ASC  NULLS LAST, CAST(CASE rt0.c1  WHEN v0.c2 THEN '-836602635' ELSE v0.c2 END AS BLOB) DESC, ((UNLIKELY(DISTINCT rt0.c1))>(((((v0.c1)OR(-1460216988)))AND(v0.c0)))) DESC;
SELECT * FROM rt1, rt0, vt0, v0 WHERE (CAST(((rt1.c2)>=(rt0.c2)) AS REAL)) ORDER BY ((NULL) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)>=(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt1, rt0, vt0, v0 ORDER BY ((NULL) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((rt0.c0) NOTNULL))) DESC);
SELECT * FROM rt1, rt0, vt0, v0 WHERE (CAST(((rt1.c2)>=(rt0.c2)) AS REAL)) ORDER BY ((NULL) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)>=(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt1, rt0, vt0, v0 ORDER BY ((NULL) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((rt0.c0) NOTNULL))) DESC);
SELECT * FROM rt1, rt0, vt0, v0 WHERE (CAST(((rt1.c2)>=(rt0.c2)) AS REAL)) ORDER BY ((NULL) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((rt0.c0) NOTNULL))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 CROSS JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt1 ON (((((((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((vt0.c0))))OR(v0.c0 COLLATE BINARY)))OR((NOT (739583384)))))OR(((((vt0.c0)OR(v0.c1)))OR(v0.c1)))))OR(x'fc9d' COLLATE NOCASE)) WHERE (rt1.c1) ORDER BY (rt1.c4 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt1 ON (((((((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((vt0.c0))))OR(v0.c0 COLLATE BINARY)))OR((NOT (739583384)))))OR(((((vt0.c0)OR(v0.c1)))OR(v0.c1)))))OR(x'fc9d' COLLATE NOCASE)) ORDER BY (rt1.c4 IN ()) COLLATE BINARY DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt1 ON (((((((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((vt0.c0))))OR(v0.c0 COLLATE BINARY)))OR((NOT (739583384)))))OR(((((vt0.c0)OR(v0.c1)))OR(v0.c1)))))OR(x'fc9d' COLLATE NOCASE)) WHERE (rt1.c1) ORDER BY (rt1.c4 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt1 ON (((((((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((vt0.c0))))OR(v0.c0 COLLATE BINARY)))OR((NOT (739583384)))))OR(((((vt0.c0)OR(v0.c1)))OR(v0.c1)))))OR(x'fc9d' COLLATE NOCASE)) ORDER BY (rt1.c4 IN ()) COLLATE BINARY DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt1 ON (((((((((((v0.c2)) BETWEEN ((rt1.c3)) AND ((vt0.c0))))OR(v0.c0 COLLATE BINARY)))OR((NOT (739583384)))))OR(((((vt0.c0)OR(v0.c1)))OR(v0.c1)))))OR(x'fc9d' COLLATE NOCASE)) WHERE (rt1.c1) ORDER BY (rt1.c4 IN ()) COLLATE BINARY DESC;
SELECT COUNT(*) FROM rt1, v0, rt0, vt0 WHERE ((((v0.c2, vt0.c0, rt1.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)), ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c1)), ((rt0.c2)*(rt0.c0)))) AND ((COALESCE(NULL, vt0.c0), 0.46025007279950636, ((((((((v0.c0)AND(v0.c1)))OR(v0.c0)))OR(rt1.c4)))OR(rt1.c3)))))) ORDER BY (((v0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, vt0.c0, rt1.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)), ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c1)), ((rt0.c2)*(rt0.c0)))) AND ((COALESCE(NULL, vt0.c0), 0.46025007279950636, ((((((((v0.c0)AND(v0.c1)))OR(v0.c0)))OR(rt1.c4)))OR(rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY (((v0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt1, v0, rt0, vt0 WHERE ((((v0.c2, vt0.c0, rt1.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)), ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c1)), ((rt0.c2)*(rt0.c0)))) AND ((COALESCE(NULL, vt0.c0), 0.46025007279950636, ((((((((v0.c0)AND(v0.c1)))OR(v0.c0)))OR(rt1.c4)))OR(rt1.c3)))))) ORDER BY (((v0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, vt0.c0, rt1.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)), ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c1)), ((rt0.c2)*(rt0.c0)))) AND ((COALESCE(NULL, vt0.c0), 0.46025007279950636, ((((((((v0.c0)AND(v0.c1)))OR(v0.c0)))OR(rt1.c4)))OR(rt1.c3)))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY (((v0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt1, v0, rt0, vt0 WHERE ((((v0.c2, vt0.c0, rt1.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)), ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c1)), ((rt0.c2)*(rt0.c0)))) AND ((COALESCE(NULL, vt0.c0), 0.46025007279950636, ((((((((v0.c0)AND(v0.c1)))OR(v0.c0)))OR(rt1.c4)))OR(rt1.c3)))))) ORDER BY (((v0.c2) BETWEEN (rt1.c2) AND (rt0.c1)) IN ());
SELECT ALL * FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT * FROM vt0, rt1, v0 WHERE (((((NULL)OR(((((((((rt1.c0)OR(rt1.c3)))AND(v0.c2)))AND(v0.c1)))OR(rt1.c0)))))OR(((v0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((((((((rt1.c0)OR(rt1.c3)))AND(v0.c2)))AND(v0.c1)))OR(rt1.c0)))))OR(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT * FROM vt0, rt1, v0 WHERE (((((NULL)OR(((((((((rt1.c0)OR(rt1.c3)))AND(v0.c2)))AND(v0.c1)))OR(rt1.c0)))))OR(((v0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((((((((rt1.c0)OR(rt1.c3)))AND(v0.c2)))AND(v0.c1)))OR(rt1.c0)))))OR(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, v0);
SELECT * FROM vt0, rt1, v0 WHERE (((((NULL)OR(((((((((rt1.c0)OR(rt1.c3)))AND(v0.c2)))AND(v0.c1)))OR(rt1.c0)))))OR(((v0.c2) NOTNULL))));
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c4) ORDER BY (((((((((((rt0.c1))==((rt1.c1))))OR(((rt1.c4) ISNULL))))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((vt0.c0, rt0.c2, rt0.c1))=((rt0.c1, '', vt0.c0))))))OR((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((((((rt0.c1))==((rt1.c1))))OR(((rt1.c4) ISNULL))))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((vt0.c0, rt0.c2, rt0.c1))=((rt0.c1, '', vt0.c0))))))OR((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c4) ORDER BY (((((((((((rt0.c1))==((rt1.c1))))OR(((rt1.c4) ISNULL))))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((vt0.c0, rt0.c2, rt0.c1))=((rt0.c1, '', vt0.c0))))))OR((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((((((rt0.c1))==((rt1.c1))))OR(((rt1.c4) ISNULL))))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((vt0.c0, rt0.c2, rt0.c1))=((rt0.c1, '', vt0.c0))))))OR((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, vt0 WHERE (rt1.c4) ORDER BY (((((((((((rt0.c1))==((rt1.c1))))OR(((rt1.c4) ISNULL))))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND((((vt0.c0, rt0.c2, rt0.c1))=((rt0.c1, '', vt0.c0))))))OR((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c2)))AND(v0.c2))) NOT BETWEEN ((~ (v0.c0))) AND (CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c2)))AND(v0.c2))) NOT BETWEEN ((~ (v0.c0))) AND (CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c2)))AND(v0.c2))) NOT BETWEEN ((~ (v0.c0))) AND (CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c2)))AND(v0.c2))) NOT BETWEEN ((~ (v0.c0))) AND (CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c2)))AND(v0.c2))) NOT BETWEEN ((~ (v0.c0))) AND (CAST(v0.c1 AS BLOB))));
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON CAST((NOT (rt1.c4)) AS NUMERIC) FULL OUTER JOIN rt1 ON (((3.7586467E8 IN ()))-((~ (vt0.c0)))) WHERE (rt1.c4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON CAST((NOT (rt1.c4)) AS NUMERIC) FULL OUTER JOIN rt1 ON (((3.7586467E8 IN ()))-((~ (vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0 INNER JOIN vt0 ON CAST((NOT (rt1.c4)) AS NUMERIC) FULL OUTER JOIN rt1 ON (((3.7586467E8 IN ()))-((~ (vt0.c0)))) WHERE (rt1.c4 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON CAST((NOT (rt1.c4)) AS NUMERIC) FULL OUTER JOIN rt1 ON (((3.7586467E8 IN ()))-((~ (vt0.c0)))));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM rt1, v0 CROSS JOIN vt0 ON v0.c0 WHERE ((((rt1.c0)) NOT BETWEEN ((HEX(rt1.c4))) AND ((((rt1.c0)>(rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((HEX(rt1.c4))) AND ((((rt1.c0)>(rt1.c0)))))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt0 ON v0.c0);
SELECT ALL * FROM rt1, v0 CROSS JOIN vt0 ON v0.c0 WHERE ((((rt1.c0)) NOT BETWEEN ((HEX(rt1.c4))) AND ((((rt1.c0)>(rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((HEX(rt1.c4))) AND ((((rt1.c0)>(rt1.c0)))))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN vt0 ON v0.c0);
SELECT ALL * FROM rt1, v0 CROSS JOIN vt0 ON v0.c0 WHERE ((((rt1.c0)) NOT BETWEEN ((HEX(rt1.c4))) AND ((((rt1.c0)>(rt1.c0))))));
SELECT COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) IN ())) IS TRUE)  as count FROM v0, rt1, rt0, vt0);
SELECT COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) IN ())) IS TRUE)  as count FROM v0, rt1, rt0, vt0);
SELECT COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2)))))=(((rt1.c1 IN ())))) WHERE (LIKELY((((rt0.c1))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c1))>((rt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2)))))==(((rt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2)))))=(((rt1.c1 IN ())))) WHERE (LIKELY((((rt0.c1))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c1))>((rt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2)))))==(((rt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 LEFT OUTER JOIN vt0 ON ((((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2)))))=(((rt1.c1 IN ())))) WHERE (LIKELY((((rt0.c1))>((rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((NOT (rt0.c1)), rt0.c0, CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c0 AS TEXT), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), -1180594288))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((NOT (rt0.c1)), rt0.c0, CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c0 AS TEXT), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), -1180594288)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((NOT (rt0.c1)), rt0.c0, CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c0 AS TEXT), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), -1180594288))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((NOT (rt0.c1)), rt0.c0, CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c0 AS TEXT), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), -1180594288)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN (((NOT (rt0.c1)), rt0.c0, CAST(rt0.c2 AS REAL))) AND ((CAST(rt0.c0 AS TEXT), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), -1180594288))));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(((rt1.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(((rt1.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(((rt1.c0) ISNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3)==(((rt1.c0)AND(rt1.c2)))) WHERE (((v0.c0)IS NOT((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3)=(((rt1.c0)AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3)==(((rt1.c0)AND(rt1.c2)))) WHERE (((v0.c0)IS NOT((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT((v0.c0 IN ())))) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3)=(((rt1.c0)AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM v0, rt1 LEFT OUTER JOIN vt0 ON ((rt1.c3)==(((rt1.c0)AND(rt1.c2)))) WHERE (((v0.c0)IS NOT((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, rt1 WHERE (CASE WHEN ((rt1.c4)<(rt0.c0)) THEN ((rt1.c3)IS NOT(rt1.c4)) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c4)<(rt0.c0)) THEN ((rt1.c3)IS NOT(rt1.c4)) ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, v0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, rt1 WHERE (CASE WHEN ((rt1.c4)<(rt0.c0)) THEN ((rt1.c3)IS NOT(rt1.c4)) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c4)<(rt0.c0)) THEN ((rt1.c3)IS NOT(rt1.c4)) ELSE CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, v0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, rt1 WHERE (CASE WHEN ((rt1.c4)<(rt0.c0)) THEN ((rt1.c3)IS NOT(rt1.c4)) ELSE CAST(v0.c0 AS NUMERIC) END);
SELECT * FROM rt1, vt0 WHERE (((((((((((((rt1.c2)OR(0.18092632163049494)))AND(rt1.c0)))AND(rt1.c4)))AND(vt0.c0)))AND((((rt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, '|')) AND ((rt1.c0, vt0.c0, rt1.c3))))))OR((((vt0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN (('1340030627', NULL, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c0, rt1.c2, rt1.c2, rt1.c3, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c2)OR(0.18092632163049494)))AND(rt1.c0)))AND(rt1.c4)))AND(vt0.c0)))AND((((rt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, '|')) AND ((rt1.c0, vt0.c0, rt1.c3))))))OR((((vt0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN (('1340030627', NULL, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c0, rt1.c2, rt1.c2, rt1.c3, rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((((((rt1.c2)OR(0.18092632163049494)))AND(rt1.c0)))AND(rt1.c4)))AND(vt0.c0)))AND((((rt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, '|')) AND ((rt1.c0, vt0.c0, rt1.c3))))))OR((((vt0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN (('1340030627', NULL, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c0, rt1.c2, rt1.c2, rt1.c3, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c2)OR(0.18092632163049494)))AND(rt1.c0)))AND(rt1.c4)))AND(vt0.c0)))AND((((rt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, '|')) AND ((rt1.c0, vt0.c0, rt1.c3))))))OR((((vt0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN (('1340030627', NULL, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c0, rt1.c2, rt1.c2, rt1.c3, rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((((((rt1.c2)OR(0.18092632163049494)))AND(rt1.c0)))AND(rt1.c4)))AND(vt0.c0)))AND((((rt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c0, '|')) AND ((rt1.c0, vt0.c0, rt1.c3))))))OR((((vt0.c0, vt0.c0, rt1.c3, rt1.c2, rt1.c3)) NOT BETWEEN (('1340030627', NULL, rt1.c2, rt1.c4, rt1.c4)) AND ((rt1.c0, rt1.c2, rt1.c2, rt1.c3, rt1.c2))))));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((((((((((NOT (rt0.c1)))OR(CASE rt0.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c2 COLLATE BINARY)))AND(((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((vt0.c0 IN ()))))OR((- (rt1.c0))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2)) IS TRUE) DESC, ((((((((((rt0.c1)%('')))AND((- (rt1.c4)))))OR(((NULL)AND(rt1.c1)))))AND('-61707598')))AND(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((NOT (rt0.c1)))OR(CASE rt0.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c2 COLLATE BINARY)))AND(((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((vt0.c0 IN ()))))OR((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2)) IS TRUE) DESC, ((((((((((rt0.c1)%('')))AND((- (rt1.c4)))))OR(((NULL)AND(rt1.c1)))))AND('-61707598')))AND(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((((((((((NOT (rt0.c1)))OR(CASE rt0.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c2 COLLATE BINARY)))AND(((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((vt0.c0 IN ()))))OR((- (rt1.c0))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2)) IS TRUE) DESC, ((((((((((rt0.c1)%('')))AND((- (rt1.c4)))))OR(((NULL)AND(rt1.c1)))))AND('-61707598')))AND(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((NOT (rt0.c1)))OR(CASE rt0.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c2 COLLATE BINARY)))AND(((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((vt0.c0 IN ()))))OR((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2)) IS TRUE) DESC, ((((((((((rt0.c1)%('')))AND((- (rt1.c4)))))OR(((NULL)AND(rt1.c1)))))AND('-61707598')))AND(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((((((((((((((NOT (rt0.c1)))OR(CASE rt0.c2  WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c2 COLLATE BINARY)))AND(((((rt1.c2)AND(rt1.c3)))AND(rt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))OR((vt0.c0 IN ()))))OR((- (rt1.c0))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c2)) IS TRUE) DESC, ((((((((((rt0.c1)%('')))AND((- (rt1.c4)))))OR(((NULL)AND(rt1.c1)))))AND('-61707598')))AND(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)))>(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)))>(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)))>(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)))>(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)))>(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((v0.c2 COLLATE NOCASE)<=(((rt0.c0) BETWEEN (rt1.c3) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((rt1.c3) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) IN ()) WHERE (ABS(DISTINCT CASE WHEN rt1.c2 THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE WHEN rt1.c2 THEN v0.c2 END)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((v0.c2 COLLATE NOCASE)<=(((rt0.c0) BETWEEN (rt1.c3) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((rt1.c3) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((v0.c2 COLLATE NOCASE)<=(((rt0.c0) BETWEEN (rt1.c3) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((rt1.c3) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) IN ()) WHERE (ABS(DISTINCT CASE WHEN rt1.c2 THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE WHEN rt1.c2 THEN v0.c2 END)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((v0.c2 COLLATE NOCASE)<=(((rt0.c0) BETWEEN (rt1.c3) AND (vt0.c0)))) FULL OUTER JOIN v0 ON (((rt1.c3) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((rt0.c2)OR(rt0.c0)))AND(rt1.c2)) IN ()));
SELECT * FROM vt0, rt0, rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN ((((((((0.4765756118264538)OR(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt1.c4)) THEN ((x'cc59')<<(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS BLOB)  WHEN ((((((((0.4765756118264538)OR(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt1.c4)) THEN ((x'cc59')<<(rt1.c0)) END) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN ((((((((0.4765756118264538)OR(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt1.c4)) THEN ((x'cc59')<<(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS BLOB)  WHEN ((((((((0.4765756118264538)OR(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt1.c4)) THEN ((x'cc59')<<(rt1.c0)) END) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CASE CAST(rt1.c1 AS BLOB)  WHEN ((((((((0.4765756118264538)OR(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt1.c4)) THEN ((x'cc59')<<(rt1.c0)) END);
SELECT * FROM rt1, rt0, v0 WHERE (((((((((rt0.c0)AND(json_extract(rt1.c1, rt1.c0, rt0.c2, '1295913702'))))OR(0.9345909605863403)))AND(((rt0.c1)<=(v0.c1)))))OR((((rt1.c2))>=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(json_extract(rt1.c1, rt1.c0, rt0.c2, '1295913702'))))OR(0.9345909605863403)))AND(((rt0.c1)<=(v0.c1)))))OR((((rt1.c2))>=((v0.c2)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE (((((((((rt0.c0)AND(json_extract(rt1.c1, rt1.c0, rt0.c2, '1295913702'))))OR(0.9345909605863403)))AND(((rt0.c1)<=(v0.c1)))))OR((((rt1.c2))>=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(json_extract(rt1.c1, rt1.c0, rt0.c2, '1295913702'))))OR(0.9345909605863403)))AND(((rt0.c1)<=(v0.c1)))))OR((((rt1.c2))>=((v0.c2)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM vt0 CROSS JOIN v0 ON ((((rt1.c1)OR(x'')))AND(rt1.c1)) COLLATE BINARY INNER JOIN rt1 ON ((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY COLLATE NOCASE WHERE (((RTRIM(rt1.c3))<>(((v0.c0) NOT BETWEEN (rt1.c3) AND (v0.c2))))) ORDER BY CASE (('k2#N)\0') IS TRUE)  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (rt1.c3)) THEN ((v0.c1)%(rt1.c4)) WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)) WHEN '1956423438' THEN x'' ELSE ((((rt1.c1)AND(v0.c2)))OR(rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ((((RTRIM(rt1.c3))!=(((v0.c0) NOT BETWEEN (rt1.c3) AND (v0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((rt1.c1)OR(x'')))AND(rt1.c1)) COLLATE BINARY INNER JOIN rt1 ON ((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY COLLATE NOCASE ORDER BY CASE (('k2#N)\0') IS TRUE)  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (rt1.c3)) THEN ((v0.c1)%(rt1.c4)) WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)) WHEN '1956423438' THEN x'' ELSE ((((rt1.c1)AND(v0.c2)))OR(rt1.c3)) END DESC);
SELECT * FROM vt0 CROSS JOIN v0 ON ((((rt1.c1)OR(x'')))AND(rt1.c1)) COLLATE BINARY INNER JOIN rt1 ON ((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY COLLATE NOCASE WHERE (((RTRIM(rt1.c3))<>(((v0.c0) NOT BETWEEN (rt1.c3) AND (v0.c2))))) ORDER BY CASE (('k2#N)\0') IS TRUE)  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (rt1.c3)) THEN ((v0.c1)%(rt1.c4)) WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)) WHEN '1956423438' THEN x'' ELSE ((((rt1.c1)AND(v0.c2)))OR(rt1.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ((((RTRIM(rt1.c3))!=(((v0.c0) NOT BETWEEN (rt1.c3) AND (v0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((rt1.c1)OR(x'')))AND(rt1.c1)) COLLATE BINARY INNER JOIN rt1 ON ((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY COLLATE NOCASE ORDER BY CASE (('k2#N)\0') IS TRUE)  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (rt1.c3)) THEN ((v0.c1)%(rt1.c4)) WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)) WHEN '1956423438' THEN x'' ELSE ((((rt1.c1)AND(v0.c2)))OR(rt1.c3)) END DESC);
SELECT * FROM vt0 CROSS JOIN v0 ON ((((rt1.c1)OR(x'')))AND(rt1.c1)) COLLATE BINARY INNER JOIN rt1 ON ((((rt1.c4)OR(rt1.c0)))AND(rt1.c2)) COLLATE BINARY COLLATE NOCASE WHERE (((RTRIM(rt1.c3))<>(((v0.c0) NOT BETWEEN (rt1.c3) AND (v0.c2))))) ORDER BY CASE (('k2#N)\0') IS TRUE)  WHEN ((vt0.c0) BETWEEN (v0.c2) AND (rt1.c3)) THEN ((v0.c1)%(rt1.c4)) WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)) WHEN '1956423438' THEN x'' ELSE ((((rt1.c1)AND(v0.c2)))OR(rt1.c3)) END DESC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c2 ELSE x'' END) NOT BETWEEN ((((v0.c2))==((vt0.c0)))) AND (TRIM(DISTINCT v0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN v0.c2 ELSE x'' END) NOT BETWEEN ((((v0.c2))=((vt0.c0)))) AND (TRIM(DISTINCT v0.c2)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c2 ELSE x'' END) NOT BETWEEN ((((v0.c2))==((vt0.c0)))) AND (TRIM(DISTINCT v0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN v0.c2 ELSE x'' END) NOT BETWEEN ((((v0.c2))=((vt0.c0)))) AND (TRIM(DISTINCT v0.c2)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c2 ELSE x'' END) NOT BETWEEN ((((v0.c2))==((vt0.c0)))) AND (TRIM(DISTINCT v0.c2))));
SELECT * FROM vt0, v0, rt1 NOT INDEXED, rt0 WHERE (((v0.c2)==(((((vt0.c0)OR(rt1.c4)))OR(v0.c1))))) ORDER BY ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c4)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)==(((((vt0.c0)OR(rt1.c4)))OR(v0.c1))))) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c4)) COLLATE RTRIM DESC);
SELECT * FROM vt0, v0, rt1 NOT INDEXED, rt0 WHERE (((v0.c2)==(((((vt0.c0)OR(rt1.c4)))OR(v0.c1))))) ORDER BY ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c4)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)==(((((vt0.c0)OR(rt1.c4)))OR(v0.c1))))) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c4)) COLLATE RTRIM DESC);
SELECT * FROM vt0, v0, rt1 NOT INDEXED, rt0 WHERE (((v0.c2)==(((((vt0.c0)OR(rt1.c4)))OR(v0.c1))))) ORDER BY ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c4)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0, rt1);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (vt0.c0);
SELECT * FROM rt1 INNER JOIN v0 ON ((rt1.c2)/(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((((rt1.c3 COLLATE RTRIM)OR(((v0.c0) IS FALSE))))OR(((((rt1.c3)AND(v0.c0)))AND(rt1.c4)))) WHERE ((((((rt1.c2)IS(rt1.c2))))>((((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)IS(rt1.c2))))>((((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4)))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((rt1.c2)/(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((((rt1.c3 COLLATE RTRIM)OR(((v0.c0) IS FALSE))))OR(((((rt1.c3)AND(v0.c0)))AND(rt1.c4)))));
SELECT * FROM rt1 INNER JOIN v0 ON ((rt1.c2)/(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((((rt1.c3 COLLATE RTRIM)OR(((v0.c0) IS FALSE))))OR(((((rt1.c3)AND(v0.c0)))AND(rt1.c4)))) WHERE ((((((rt1.c2)IS(rt1.c2))))>((((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)IS(rt1.c2))))>((((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4)))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((rt1.c2)/(rt0.c1)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((((rt1.c3 COLLATE RTRIM)OR(((v0.c0) IS FALSE))))OR(((((rt1.c3)AND(v0.c0)))AND(rt1.c4)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((~ (rt1.c0))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN x'' WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 ELSE rt0.c0 END) AND (((v0.c0)<(rt1.c2)))) INNER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())) INNER JOIN rt1 ON ((((((((v0.c2)OR(v0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c4))))) WHERE ((((+ (rt1.c2)))/((rt1.c1 IN ())))) ORDER BY (((((rt0.c2))<((v0.c2))))AND(((rt1.c4)AND(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))/((rt1.c1 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((~ (rt1.c0))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN x'' WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 ELSE rt0.c0 END) AND (((v0.c0)<(rt1.c2)))) INNER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())) INNER JOIN rt1 ON ((((((((v0.c2)OR(v0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c4))))) ORDER BY (((((rt0.c2))<((v0.c2))))AND(((rt1.c4)AND(rt1.c1)))) DESC);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((~ (rt1.c0))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN x'' WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 ELSE rt0.c0 END) AND (((v0.c0)<(rt1.c2)))) INNER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())) INNER JOIN rt1 ON ((((((((v0.c2)OR(v0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c4))))) WHERE ((((+ (rt1.c2)))/((rt1.c1 IN ())))) ORDER BY (((((rt0.c2))<((v0.c2))))AND(((rt1.c4)AND(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))/((rt1.c1 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((~ (rt1.c0))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN x'' WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 ELSE rt0.c0 END) AND (((v0.c0)<(rt1.c2)))) INNER JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())) INNER JOIN rt1 ON ((((((((v0.c2)OR(v0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c4))))) ORDER BY (((((rt0.c2))<((v0.c2))))AND(((rt1.c4)AND(rt1.c1)))) DESC);
SELECT * FROM vt0 WHERE ((('')>=(LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('')>=(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('')>=(LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('')>=(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('')>=(LIKELY(DISTINCT vt0.c0))));
SELECT * FROM v0, vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((rt0.c2, rt0.c2, NULL))>((rt0.c0, rt0.c0, rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((rt0.c2, rt0.c2, NULL))>((rt0.c0, rt0.c0, rt0.c2))))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((rt0.c2, rt0.c2, NULL))>((rt0.c0, rt0.c0, rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((rt0.c2, rt0.c2, NULL))>((rt0.c0, rt0.c0, rt0.c2))))) DESC  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((v0.c1) IS FALSE)) AND ((((rt0.c2, rt0.c2, NULL))>((rt0.c0, rt0.c0, rt0.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt0, rt1, vt0, v0 WHERE ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0)))) ISNULL)) ORDER BY (((+ (rt1.c4))) BETWEEN (((NULL)OR(v0.c1))) AND ((v0.c2 IN ()))) ASC, ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))&(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, vt0, v0 ORDER BY (((+ (rt1.c4))) BETWEEN (((NULL)OR(v0.c1))) AND ((v0.c2 IN ()))) ASC, ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))&(vt0.c0)) ASC);
SELECT * FROM rt0, rt1, vt0, v0 WHERE ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0)))) ISNULL)) ORDER BY (((+ (rt1.c4))) BETWEEN (((NULL)OR(v0.c1))) AND ((v0.c2 IN ()))) ASC, ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))&(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, vt0, v0 ORDER BY (((+ (rt1.c4))) BETWEEN (((NULL)OR(v0.c1))) AND ((v0.c2 IN ()))) ASC, ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))&(vt0.c0)) ASC);
SELECT * FROM rt0, rt1, vt0, v0 WHERE ((((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0)))) ISNULL)) ORDER BY (((+ (rt1.c4))) BETWEEN (((NULL)OR(v0.c1))) AND ((v0.c2 IN ()))) ASC, ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))&(vt0.c0)) ASC;
SELECT * FROM rt0, rt1, vt0, v0 WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT * FROM rt0, rt1, vt0, v0 WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT * FROM rt0, rt1, vt0, v0 WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN ((+ (rt1.c4))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) BETWEEN ((+ (rt1.c4))) AND (rt0.c1))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN ((+ (rt1.c4))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) BETWEEN ((+ (rt1.c4))) AND (rt0.c1))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN ((+ (rt1.c4))) AND (rt0.c1)));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (LIKELY(((v0.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ORDER BY (((v0.c1, v0.c2, rt1.c0)) BETWEEN ((((v0.c2)>=(v0.c2)), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 END, x'')) AND (((v0.c2 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c1) BETWEEN (rt1.c3) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((v0.c1, v0.c2, rt1.c0)) BETWEEN ((((v0.c2)>=(v0.c2)), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 END, x'')) AND (((v0.c2 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (LIKELY(((v0.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ORDER BY (((v0.c1, v0.c2, rt1.c0)) BETWEEN ((((v0.c2)>=(v0.c2)), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 END, x'')) AND (((v0.c2 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c1) BETWEEN (rt1.c3) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((v0.c1, v0.c2, rt1.c0)) BETWEEN ((((v0.c2)>=(v0.c2)), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 END, x'')) AND (((v0.c2 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (LIKELY(((v0.c1) BETWEEN (rt1.c3) AND (v0.c0)))) ORDER BY (((v0.c1, v0.c2, rt1.c0)) BETWEEN ((((v0.c2)>=(v0.c2)), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 END, x'')) AND (((v0.c2 IN ()), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (v0.c2)), ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((((((vt0.c0)GLOB(rt0.c2)))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)GLOB(rt0.c2)))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((((((vt0.c0)GLOB(rt0.c2)))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c0)GLOB(rt0.c2)))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY ((((((vt0.c0)GLOB(rt0.c2)))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0, rt1 WHERE (((((((((CASE rt1.c0  WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE rt0.c2 END)AND(ABS(rt1.c0))))OR(((rt0.c0)/(rt1.c1)))))AND(((rt1.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(((rt1.c0)|(NULL))))) ORDER BY ((0.507882879874157) BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (0.7449678526898166 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c0  WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE rt0.c2 END)AND(ABS(rt1.c0))))OR(((rt0.c0)/(rt1.c1)))))AND(((rt1.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(((rt1.c0)|(NULL))))) IS TRUE)  as count FROM v0, vt0, rt0, rt1 ORDER BY ((0.507882879874157) BETWEEN ((((rt0.c2))==((rt0.c2)))) AND (0.7449678526898166 COLLATE RTRIM)) DESC);
SELECT ALL * FROM v0, vt0, rt0, rt1 WHERE (((((((((CASE rt1.c0  WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE rt0.c2 END)AND(ABS(rt1.c0))))OR(((rt0.c0)/(rt1.c1)))))AND(((rt1.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(((rt1.c0)|(NULL))))) ORDER BY ((0.507882879874157) BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (0.7449678526898166 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c0  WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE rt0.c2 END)AND(ABS(rt1.c0))))OR(((rt0.c0)/(rt1.c1)))))AND(((rt1.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(((rt1.c0)|(NULL))))) IS TRUE)  as count FROM v0, vt0, rt0, rt1 ORDER BY ((0.507882879874157) BETWEEN ((((rt0.c2))==((rt0.c2)))) AND (0.7449678526898166 COLLATE RTRIM)) DESC);
SELECT ALL * FROM v0, vt0, rt0, rt1 WHERE (((((((((CASE rt1.c0  WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE rt0.c2 END)AND(ABS(rt1.c0))))OR(((rt0.c0)/(rt1.c1)))))AND(((rt1.c0) BETWEEN (v0.c2) AND (rt1.c3)))))OR(((rt1.c0)|(NULL))))) ORDER BY ((0.507882879874157) BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (0.7449678526898166 COLLATE RTRIM)) DESC;
SELECT ALL * FROM rt1, rt0, v0 FULL OUTER JOIN vt0 ON ((((((v0.c0)OR(rt1.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((v0.c0)<=(v0.c2)))) WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt1, rt0, v0 FULL OUTER JOIN vt0 ON ((((((v0.c0)OR(rt1.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((v0.c0)<=(v0.c2)))));
SELECT ALL * FROM rt1, rt0, v0 FULL OUTER JOIN vt0 ON ((((((v0.c0)OR(rt1.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((v0.c0)<=(v0.c2)))) WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt1, rt0, v0 FULL OUTER JOIN vt0 ON ((((((v0.c0)OR(rt1.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((v0.c0)<=(v0.c2)))));
SELECT ALL * FROM rt1, rt0, v0 FULL OUTER JOIN vt0 ON ((((((v0.c0)OR(rt1.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((v0.c0)<=(v0.c2)))) WHERE (((CAST(v0.c0 AS TEXT)) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c4, rt1.c0, rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((rt1.c2, rt1.c4, rt1.c0, rt1.c4, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c4, rt1.c1, rt1.c3))))OR(MIN(rt1.c1, rt1.c3, rt1.c2, rt1.c4))))AND('-777641552'))) ORDER BY ((((x'')==(rt1.c1))) NOT BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4))))  NULLS LAST, json_valid(((rt1.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c4, rt1.c0, rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((rt1.c2, rt1.c4, rt1.c0, rt1.c4, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c4, rt1.c1, rt1.c3))))OR(MIN(rt1.c1, rt1.c3, rt1.c2, rt1.c4))))AND('-777641552'))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((x'')==(rt1.c1))) NOT BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4))))  NULLS LAST, json_valid(((rt1.c0) IS FALSE)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c4, rt1.c0, rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((rt1.c2, rt1.c4, rt1.c0, rt1.c4, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c4, rt1.c1, rt1.c3))))OR(MIN(rt1.c1, rt1.c3, rt1.c2, rt1.c4))))AND('-777641552'))) ORDER BY ((((x'')==(rt1.c1))) NOT BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4))))  NULLS LAST, json_valid(((rt1.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c4, rt1.c0, rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((rt1.c2, rt1.c4, rt1.c0, rt1.c4, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c4, rt1.c1, rt1.c3))))OR(MIN(rt1.c1, rt1.c3, rt1.c2, rt1.c4))))AND('-777641552'))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((((x'')==(rt1.c1))) NOT BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4))))  NULLS LAST, json_valid(((rt1.c0) IS FALSE)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c4, rt1.c0, rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((rt1.c2, rt1.c4, rt1.c0, rt1.c4, rt1.c3)) AND ((rt1.c1, rt1.c1, rt1.c4, rt1.c1, rt1.c3))))OR(MIN(rt1.c1, rt1.c3, rt1.c2, rt1.c4))))AND('-777641552'))) ORDER BY ((((x'')==(rt1.c1))) NOT BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c4))))  NULLS LAST, json_valid(((rt1.c0) IS FALSE)) DESC;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((~ (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c1))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((~ (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c1))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((~ (rt1.c1)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (~ (((rt1.c0) IS FALSE))) WHERE (NULLIF(vt0.c0 COLLATE RTRIM, (rt1.c1 IN ()))) ORDER BY ((LIKE(vt0.c0, rt1.c4, 't'))&(((vt0.c0)<<(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0 COLLATE RTRIM, (rt1.c1 IN ()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (~ (((rt1.c0) IS FALSE))) ORDER BY ((LIKE(vt0.c0, rt1.c4, 't'))&(((vt0.c0)<<(rt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (~ (((rt1.c0) IS FALSE))) WHERE (NULLIF(vt0.c0 COLLATE RTRIM, (rt1.c1 IN ()))) ORDER BY ((LIKE(vt0.c0, rt1.c4, 't'))&(((vt0.c0)<<(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0 COLLATE RTRIM, (rt1.c1 IN ()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (~ (((rt1.c0) IS FALSE))) ORDER BY ((LIKE(vt0.c0, rt1.c4, 't'))&(((vt0.c0)<<(rt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (~ (((rt1.c0) IS FALSE))) WHERE (NULLIF(vt0.c0 COLLATE RTRIM, (rt1.c1 IN ()))) ORDER BY ((LIKE(vt0.c0, rt1.c4, 't'))&(((vt0.c0)<<(rt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED, vt0 WHERE ((((+ ('-656272203'))) ISNULL)) ORDER BY ((((((rt0.c2)OR('-656272203')))OR(v0.c1)))>(v0.c2 COLLATE RTRIM))  NULLS LAST, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (((((+ ('-656272203'))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c2)OR('-656272203')))OR(v0.c1)))>(v0.c2 COLLATE RTRIM))  NULLS LAST, TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED, vt0 WHERE ((((+ ('-656272203'))) ISNULL)) ORDER BY ((((((rt0.c2)OR('-656272203')))OR(v0.c1)))>(v0.c2 COLLATE RTRIM))  NULLS LAST, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT (((((+ ('-656272203'))) ISNULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c2)OR('-656272203')))OR(v0.c1)))>(v0.c2 COLLATE RTRIM))  NULLS LAST, TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED, vt0 WHERE ((((+ ('-656272203'))) ISNULL)) ORDER BY ((((((rt0.c2)OR('-656272203')))OR(v0.c1)))>(v0.c2 COLLATE RTRIM))  NULLS LAST, TOTAL_CHANGES();
SELECT * FROM rt0, rt1 WHERE (((((CASE rt0.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)AND((((rt1.c4)) NOT BETWEEN ((x'')) AND ((rt0.c1))))))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)AND((((rt1.c4)) NOT BETWEEN ((x'')) AND ((rt0.c1))))))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED);
SELECT * FROM rt0, rt1 WHERE (((((CASE rt0.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)AND((((rt1.c4)) NOT BETWEEN ((x'')) AND ((rt0.c1))))))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)AND((((rt1.c4)) NOT BETWEEN ((x'')) AND ((rt0.c1))))))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED);
SELECT * FROM rt0, rt1 WHERE (((((CASE rt0.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)AND((((rt1.c4)) NOT BETWEEN ((x'')) AND ((rt0.c1))))))OR(((rt0.c2) IS TRUE))));
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON (NOT (LOWER(v0.c1))) CROSS JOIN vt0 ON (- (v0.c1)) COLLATE NOCASE WHERE (((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c2 END) BETWEEN (((rt1.c0) ISNULL)) AND ((((rt1.c3, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt1.c0, rt0.c0)) AND ((v0.c2, rt0.c0, rt1.c3)))))) ORDER BY 0.8221645922991448 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c2 END) BETWEEN (((rt1.c0) ISNULL)) AND ((((rt1.c3, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt1.c0, rt0.c0)) AND ((v0.c2, rt0.c0, rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON (NOT (LOWER(v0.c1))) CROSS JOIN vt0 ON (- (v0.c1)) COLLATE NOCASE ORDER BY 0.8221645922991448 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON (NOT (LOWER(v0.c1))) CROSS JOIN vt0 ON (- (v0.c1)) COLLATE NOCASE WHERE (((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c2 END) BETWEEN (((rt1.c0) ISNULL)) AND ((((rt1.c3, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt1.c0, rt0.c0)) AND ((v0.c2, rt0.c0, rt1.c3)))))) ORDER BY 0.8221645922991448 COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c2 END) BETWEEN (((rt1.c0) ISNULL)) AND ((((rt1.c3, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt1.c0, rt0.c0)) AND ((v0.c2, rt0.c0, rt1.c3)))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON (NOT (LOWER(v0.c1))) CROSS JOIN vt0 ON (- (v0.c1)) COLLATE NOCASE ORDER BY 0.8221645922991448 COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON (NOT (LOWER(v0.c1))) CROSS JOIN vt0 ON (- (v0.c1)) COLLATE NOCASE WHERE (((CASE rt0.c0  WHEN rt1.c4 THEN rt0.c2 END) BETWEEN (((rt1.c0) ISNULL)) AND ((((rt1.c3, rt0.c0, v0.c0)) BETWEEN ((rt0.c2, rt1.c0, rt0.c0)) AND ((v0.c2, rt0.c0, rt1.c3)))))) ORDER BY 0.8221645922991448 COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((v0.c2)AND(vt0.c0)))OR(v0.c2)), (~ (v0.c1)), json_patch(vt0.c0, x'')))<((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), (((v0.c0, v0.c1, vt0.c0)) BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((vt0.c0, vt0.c0, v0.c0))))))) ORDER BY (- (((((v0.c0)AND(v0.c1)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c2)AND(vt0.c0)))OR(v0.c2)), (~ (v0.c1)), json_patch(vt0.c0, x'')))<((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), (((v0.c0, v0.c1, vt0.c0)) BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((vt0.c0, vt0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((((v0.c0)AND(v0.c1)))AND(v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((v0.c2)AND(vt0.c0)))OR(v0.c2)), (~ (v0.c1)), json_patch(vt0.c0, x'')))<((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), (((v0.c0, v0.c1, vt0.c0)) BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((vt0.c0, vt0.c0, v0.c0))))))) ORDER BY (- (((((v0.c0)AND(v0.c1)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c2)AND(vt0.c0)))OR(v0.c2)), (~ (v0.c1)), json_patch(vt0.c0, x'')))<((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), (((v0.c0, v0.c1, vt0.c0)) BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((vt0.c0, vt0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((((v0.c0)AND(v0.c1)))AND(v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((v0.c2)AND(vt0.c0)))OR(v0.c2)), (~ (v0.c1)), json_patch(vt0.c0, x'')))<((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), (((v0.c0, v0.c1, vt0.c0)) BETWEEN ((v0.c1, v0.c0, v0.c2)) AND ((vt0.c0, vt0.c0, v0.c0))))))) ORDER BY (- (((((v0.c0)AND(v0.c1)))AND(v0.c0))));
SELECT * FROM rt1, rt0 WHERE (CAST('0.04620747890167398' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.04620747890167398' AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST('0.04620747890167398' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.04620747890167398' AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST('0.04620747890167398' AS NUMERIC));
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((rt0.c0 IN (rt0.c1))))) ORDER BY ((rt0.c2)&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2)&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((rt0.c0 IN (rt0.c1))))) ORDER BY ((rt0.c2)&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2)&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE ((+ ((rt0.c0 IN (rt0.c1))))) ORDER BY ((rt0.c2)&(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON '-1118470656' CROSS JOIN rt0 ON (NOT (rt1.c1)) WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON '-1118470656' CROSS JOIN rt0 ON (NOT (rt1.c1)));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON '-1118470656' CROSS JOIN rt0 ON (NOT (rt1.c1)) WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON '-1118470656' CROSS JOIN rt0 ON (NOT (rt1.c1)));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON '-1118470656' CROSS JOIN rt0 ON (NOT (rt1.c1)) WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT * FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c0, 0.15221460195124192) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt1.c0, 0.15221460195124192) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c0, 0.15221460195124192) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT rt1.c0, 0.15221460195124192) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LIKELIHOOD(DISTINCT rt1.c0, 0.15221460195124192) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (LOWER(((rt1.c2)+(rt1.c0)))) ORDER BY ((((rt1.c2)==(rt1.c2)))>(rt1.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c2)+(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)==(rt1.c2)))>(rt1.c2)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (LOWER(((rt1.c2)+(rt1.c0)))) ORDER BY ((((rt1.c2)==(rt1.c2)))>(rt1.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c2)+(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)==(rt1.c2)))>(rt1.c2)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (LOWER(((rt1.c2)+(rt1.c0)))) ORDER BY ((((rt1.c2)==(rt1.c2)))>(rt1.c2)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)>>('rX'))))<=((((((((((vt0.c0)OR(0Xffffffffe173dd43)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>>('rX'))))<=((((((((((vt0.c0)OR(0xffffffffe173dd43)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>>('rX'))))<=((((((((((vt0.c0)OR(0Xffffffffe173dd43)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>>('rX'))))<=((((((((((vt0.c0)OR(0xffffffffe173dd43)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>>('rX'))))<=((((((((((vt0.c0)OR(0Xffffffffe173dd43)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))));
SELECT * FROM v0 CROSS JOIN rt1 ON LENGTH(v0.c2) COLLATE RTRIM CROSS JOIN rt0 ON (((v0.c0) NOT NULL) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND ('')))) WHERE ((((rt1.c2) IS TRUE) IN (CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) IS TRUE) IN (CAST(NULL AS REAL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON LENGTH(v0.c2) COLLATE RTRIM CROSS JOIN rt0 ON (((v0.c0) NOT NULL) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND ('')))));
SELECT * FROM v0 CROSS JOIN rt1 ON LENGTH(v0.c2) COLLATE RTRIM CROSS JOIN rt0 ON (((v0.c0) NOT NULL) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND ('')))) WHERE ((((rt1.c2) IS TRUE) IN (CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) IS TRUE) IN (CAST(NULL AS REAL)))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON LENGTH(v0.c2) COLLATE RTRIM CROSS JOIN rt0 ON (((v0.c0) NOT NULL) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND ('')))));
SELECT * FROM v0 CROSS JOIN rt1 ON LENGTH(v0.c2) COLLATE RTRIM CROSS JOIN rt0 ON (((v0.c0) NOT NULL) IN (((rt0.c2) NOT BETWEEN (v0.c0) AND ('')))) WHERE ((((rt1.c2) IS TRUE) IN (CAST(NULL AS REAL))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))))AND(((v0.c1)<=(v0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))))) ORDER BY (NOT ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))))AND(((v0.c1)<=(v0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY (NOT ((rt0.c0 IN ()))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))))AND(((v0.c1)<=(v0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))))) ORDER BY (NOT ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))))AND(((v0.c1)<=(v0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY (NOT ((rt0.c0 IN ()))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c2))))AND(((v0.c1)<=(v0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))))) ORDER BY (NOT ((rt0.c0 IN ())));
SELECT * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8221645922991448))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8221645922991448))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(RTRIM(vt0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8221645922991448))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8221645922991448))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(RTRIM(vt0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (0.8221645922991448))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(RTRIM(vt0.c0)));
SELECT * FROM rt1, rt0 WHERE (((((rt0.c2) IS FALSE))AND('1881970761')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))AND('1881970761'))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c2) IS FALSE))AND('1881970761')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))AND('1881970761'))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c2) IS FALSE))AND('1881970761')));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c0)))IS(rt0.c2))) ORDER BY CASE (((('')OR(rt0.c2)))OR(rt0.c1))  WHEN (~ (rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END WHEN ((rt0.c2)!=(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.46681339958310886) AND ('Z7')) WHEN rt0.c0 COLLATE BINARY THEN (NOT (rt0.c1)) ELSE ((x'')|(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c0)))IS(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((('')OR(rt0.c2)))OR(rt0.c1))  WHEN (~ (rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END WHEN ((rt0.c2)<>(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.46681339958310886) AND ('Z7')) WHEN rt0.c0 COLLATE BINARY THEN (NOT (rt0.c1)) ELSE ((x'')|(rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c0)))IS(rt0.c2))) ORDER BY CASE (((('')OR(rt0.c2)))OR(rt0.c1))  WHEN (~ (rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END WHEN ((rt0.c2)!=(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.46681339958310886) AND ('Z7')) WHEN rt0.c0 COLLATE BINARY THEN (NOT (rt0.c1)) ELSE ((x'')|(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)GLOB(rt0.c0)))IS(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((('')OR(rt0.c2)))OR(rt0.c1))  WHEN (~ (rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END WHEN ((rt0.c2)<>(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.46681339958310886) AND ('Z7')) WHEN rt0.c0 COLLATE BINARY THEN (NOT (rt0.c1)) ELSE ((x'')|(rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)GLOB(rt0.c0)))IS(rt0.c2))) ORDER BY CASE (((('')OR(rt0.c2)))OR(rt0.c1))  WHEN (~ (rt0.c2)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END WHEN ((rt0.c2)!=(rt0.c1)) THEN ((rt0.c2) BETWEEN (0.46681339958310886) AND ('Z7')) WHEN rt0.c0 COLLATE BINARY THEN (NOT (rt0.c1)) ELSE ((x'')|(rt0.c2)) END;
SELECT * FROM rt1, v0, rt0, vt0 WHERE (STRFTIME((((v0.c2))>=((rt1.c4))), (2.039443379E9 IN ()), ((rt0.c2) IS TRUE), UNLIKELY(rt1.c4), rt1.c4 COLLATE NOCASE, ((((rt1.c3)AND(rt0.c1)))OR(rt1.c4)), (((rt1.c4, rt0.c1, rt0.c1))>((rt1.c0, v0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((((v0.c2))>=((rt1.c4))), (2.039443379E9 IN ()), ((rt0.c2) IS TRUE), UNLIKELY(rt1.c4), rt1.c4 COLLATE NOCASE, ((((rt1.c3)AND(rt0.c1)))OR(rt1.c4)), (((rt1.c4, rt0.c1, rt0.c1))>((rt1.c0, v0.c2, rt0.c2))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (STRFTIME((((v0.c2))>=((rt1.c4))), (2.039443379E9 IN ()), ((rt0.c2) IS TRUE), UNLIKELY(rt1.c4), rt1.c4 COLLATE NOCASE, ((((rt1.c3)AND(rt0.c1)))OR(rt1.c4)), (((rt1.c4, rt0.c1, rt0.c1))>((rt1.c0, v0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((((v0.c2))>=((rt1.c4))), (2.039443379E9 IN ()), ((rt0.c2) IS TRUE), UNLIKELY(rt1.c4), rt1.c4 COLLATE NOCASE, ((((rt1.c3)AND(rt0.c1)))OR(rt1.c4)), (((rt1.c4, rt0.c1, rt0.c1))>((rt1.c0, v0.c2, rt0.c2))))) IS TRUE)  as count FROM rt1, v0, rt0, vt0);
SELECT * FROM rt1, v0, rt0, vt0 WHERE (STRFTIME((((v0.c2))>=((rt1.c4))), (2.039443379E9 IN ()), ((rt0.c2) IS TRUE), UNLIKELY(rt1.c4), rt1.c4 COLLATE NOCASE, ((((rt1.c3)AND(rt0.c1)))OR(rt1.c4)), (((rt1.c4, rt0.c1, rt0.c1))>((rt1.c0, v0.c2, rt0.c2)))));
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE ((((((rt1.c4))>((rt1.c1)))) NOT NULL)) ORDER BY (((vt0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))) AND ((((v0.c0)GLOB(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4))>((rt1.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (((vt0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))) AND ((((v0.c0)GLOB(rt1.c1))))));
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE ((((((rt1.c4))>((rt1.c1)))) NOT NULL)) ORDER BY (((vt0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))) AND ((((v0.c0)GLOB(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4))>((rt1.c1)))) NOT NULL)) IS TRUE)  as count FROM v0, vt0, rt1 ORDER BY (((vt0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))) AND ((((v0.c0)GLOB(rt1.c1))))));
SELECT COUNT(*) FROM v0, vt0, rt1 WHERE ((((((rt1.c4))>((rt1.c1)))) NOT NULL)) ORDER BY (((vt0.c0)) BETWEEN ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))) AND ((((v0.c0)GLOB(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE ((((((((((((v0.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0)))AND(NULL))  WHEN ((0Xffffffffff2c1b3b)+(rt1.c1)) THEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c3)) END) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN x'293e' THEN v0.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE v0.c1 END)IS(CASE WHEN rt1.c4 THEN rt1.c1 WHEN v0.c1 THEN rt1.c4 WHEN rt1.c4 THEN v0.c2 END)) ASC  NULLS FIRST, ((CASE WHEN rt1.c3 THEN v0.c2 ELSE rt1.c1 END) IS TRUE) DESC  NULLS LAST, (v0.c1 IN (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((v0.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0)))AND(NULL))  WHEN ((0xffffffffff2c1b3b)+(rt1.c1)) THEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c3)) END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN x'293e' THEN v0.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE v0.c1 END)IS(CASE WHEN rt1.c4 THEN rt1.c1 WHEN v0.c1 THEN rt1.c4 WHEN rt1.c4 THEN v0.c2 END)) ASC  NULLS FIRST, ((CASE WHEN rt1.c3 THEN v0.c2 ELSE rt1.c1 END) IS TRUE) DESC  NULLS LAST, (v0.c1 IN (x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE ((((((((((((v0.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0)))AND(NULL))  WHEN ((0Xffffffffff2c1b3b)+(rt1.c1)) THEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c3)) END) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN x'293e' THEN v0.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE v0.c1 END)IS(CASE WHEN rt1.c4 THEN rt1.c1 WHEN v0.c1 THEN rt1.c4 WHEN rt1.c4 THEN v0.c2 END)) ASC  NULLS FIRST, ((CASE WHEN rt1.c3 THEN v0.c2 ELSE rt1.c1 END) IS TRUE) DESC  NULLS LAST, (v0.c1 IN (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((((((v0.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0)))AND(NULL))  WHEN ((0xffffffffff2c1b3b)+(rt1.c1)) THEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c3)) END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN x'293e' THEN v0.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE v0.c1 END)IS(CASE WHEN rt1.c4 THEN rt1.c1 WHEN v0.c1 THEN rt1.c4 WHEN rt1.c4 THEN v0.c2 END)) ASC  NULLS FIRST, ((CASE WHEN rt1.c3 THEN v0.c2 ELSE rt1.c1 END) IS TRUE) DESC  NULLS LAST, (v0.c1 IN (x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE ((((((((((((v0.c2)AND(rt1.c4)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0)))AND(NULL))  WHEN ((0Xffffffffff2c1b3b)+(rt1.c1)) THEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c3)) END) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN x'293e' THEN v0.c2 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE v0.c1 END)IS(CASE WHEN rt1.c4 THEN rt1.c1 WHEN v0.c1 THEN rt1.c4 WHEN rt1.c4 THEN v0.c2 END)) ASC  NULLS FIRST, ((CASE WHEN rt1.c3 THEN v0.c2 ELSE rt1.c1 END) IS TRUE) DESC  NULLS LAST, (v0.c1 IN (x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)||(vt0.c0))))) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN (CASE WHEN rt0.c1 THEN rt0.c2 END)) ASC, (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))&(((rt0.c2)||(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN (CASE WHEN rt0.c1 THEN rt0.c2 END)) ASC, (x'' IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)||(vt0.c0))))) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN (CASE WHEN rt0.c1 THEN rt0.c2 END)) ASC, (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))&(((rt0.c2)||(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN (CASE WHEN rt0.c1 THEN rt0.c2 END)) ASC, (x'' IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)||(vt0.c0))))) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN (CASE WHEN rt0.c1 THEN rt0.c2 END)) ASC, (x'' IN ());
SELECT * FROM v0, rt1, rt0 WHERE ((((rt1.c0))>((LIKE(rt1.c3, rt0.c1))))) ORDER BY CASE WHEN v0.c2 COLLATE BINARY THEN ABS(DISTINCT rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN (NOT ('')) WHEN ((v0.c1)<<(v0.c0)) THEN ((rt0.c0)==(rt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))>((LIKE(rt1.c3, rt0.c1))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE WHEN v0.c2 COLLATE BINARY THEN ABS(DISTINCT rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN (NOT ('')) WHEN ((v0.c1)<<(v0.c0)) THEN ((rt0.c0)==(rt1.c1)) END DESC  NULLS LAST);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt1.c0))>((LIKE(rt1.c3, rt0.c1))))) ORDER BY CASE WHEN v0.c2 COLLATE BINARY THEN ABS(DISTINCT rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN (NOT ('')) WHEN ((v0.c1)<<(v0.c0)) THEN ((rt0.c0)==(rt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))>((LIKE(rt1.c3, rt0.c1))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE WHEN v0.c2 COLLATE BINARY THEN ABS(DISTINCT rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN (NOT ('')) WHEN ((v0.c1)<<(v0.c0)) THEN ((rt0.c0)==(rt1.c1)) END DESC  NULLS LAST);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt1.c0))>((LIKE(rt1.c3, rt0.c1))))) ORDER BY CASE WHEN v0.c2 COLLATE BINARY THEN ABS(DISTINCT rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN (NOT ('')) WHEN ((v0.c1)<<(v0.c0)) THEN ((rt0.c0)==(rt1.c1)) END DESC  NULLS LAST;
SELECT * FROM rt0, vt0, rt1 WHERE ((- (((rt1.c3)GLOB(rt1.c2))))) ORDER BY ((rt1.c3)GLOB(((NULL) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, CAST(((((((((rt0.c1)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt1.c3)GLOB(((NULL) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, CAST(((((((((rt0.c1)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)) AS REAL)  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE ((- (((rt1.c3)GLOB(rt1.c2))))) ORDER BY ((rt1.c3)GLOB(((NULL) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, CAST(((((((((rt0.c1)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c3)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt1.c3)GLOB(((NULL) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, CAST(((((((((rt0.c1)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)) AS REAL)  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE ((- (((rt1.c3)GLOB(rt1.c2))))) ORDER BY ((rt1.c3)GLOB(((NULL) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS FIRST, CAST(((((((((rt0.c1)OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c2, rt0.c1) AS REAL) WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c2, rt0.c1) AS REAL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c2, rt0.c1) AS REAL) WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c2, rt0.c1) AS REAL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CAST(TRIM(DISTINCT rt0.c2, rt0.c1) AS REAL) WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt1, v0, vt0, rt0 WHERE ((rt1.c3 COLLATE BINARY IN ((((rt1.c1, v0.c2, rt1.c4)) NOT BETWEEN ((0.5831162195274964, rt1.c4, x'')) AND ((v0.c0, rt0.c2, v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 COLLATE BINARY IN ((((rt1.c1, v0.c2, rt1.c4)) NOT BETWEEN ((0.5831162195274964, rt1.c4, x'')) AND ((v0.c0, rt0.c2, v0.c1)))))) IS TRUE)  as count FROM rt1, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, rt0 WHERE ((rt1.c3 COLLATE BINARY IN ((((rt1.c1, v0.c2, rt1.c4)) NOT BETWEEN ((0.5831162195274964, rt1.c4, x'')) AND ((v0.c0, rt0.c2, v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 COLLATE BINARY IN ((((rt1.c1, v0.c2, rt1.c4)) NOT BETWEEN ((0.5831162195274964, rt1.c4, x'')) AND ((v0.c0, rt0.c2, v0.c1)))))) IS TRUE)  as count FROM rt1, v0, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, vt0, rt0 WHERE ((rt1.c3 COLLATE BINARY IN ((((rt1.c1, v0.c2, rt1.c4)) NOT BETWEEN ((0.5831162195274964, rt1.c4, x'')) AND ((v0.c0, rt0.c2, v0.c1))))));
SELECT * FROM rt1 WHERE ((((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4))))<((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4))))<((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4))))<((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4))))<((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c4))))<((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))));
SELECT ALL * FROM rt1, vt0, v0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL * FROM rt1, vt0, v0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT ALL * FROM rt1, vt0, v0 WHERE (CAST((((v0.c2)) NOT BETWEEN ((rt1.c4)) AND ((v0.c2))) AS NUMERIC));
SELECT * FROM v0, rt1 WHERE (((- (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c1)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((- (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c1)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((- (v0.c1)) IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c1 WHERE (((((((v0.c1)OR(rt1.c1)))OR(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)OR(rt1.c1)))OR(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON v0.c1);
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c1 WHERE (((((((v0.c1)OR(rt1.c1)))OR(rt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)OR(rt1.c1)))OR(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON v0.c1);
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c1 WHERE (((((((v0.c1)OR(rt1.c1)))OR(rt1.c0))) NOTNULL));
SELECT ALL * FROM v0 INNER JOIN rt1 ON (+ ((v0.c1 IN (rt1.c4, v0.c1)))) WHERE (LOWER(DISTINCT CASE WHEN rt1.c0 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE WHEN rt1.c0 THEN rt1.c3 END)) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (+ ((v0.c1 IN (rt1.c4, v0.c1)))));
SELECT ALL * FROM v0 INNER JOIN rt1 ON (+ ((v0.c1 IN (rt1.c4, v0.c1)))) WHERE (LOWER(DISTINCT CASE WHEN rt1.c0 THEN rt1.c3 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE WHEN rt1.c0 THEN rt1.c3 END)) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (+ ((v0.c1 IN (rt1.c4, v0.c1)))));
SELECT ALL * FROM v0 INNER JOIN rt1 ON (+ ((v0.c1 IN (rt1.c4, v0.c1)))) WHERE (LOWER(DISTINCT CASE WHEN rt1.c0 THEN rt1.c3 END));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, v0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, v0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, v0 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM v0, rt0, vt0 INNER JOIN rt1 ON ((CAST(1.139587536E9 AS REAL)) BETWEEN (x'') AND (x'')) WHERE (((((x'')-(rt1.c4)))GLOB((('3cP!')|(v0.c1))))) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c0, 0.5466763119581443)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')-(rt1.c4)))GLOB((('3cP!')|(v0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0 INNER JOIN rt1 ON ((CAST(1.139587536E9 AS REAL)) BETWEEN (x'') AND (x'')) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c0, 0.5466763119581443)) ISNULL)  NULLS LAST);
SELECT * FROM v0, rt0, vt0 INNER JOIN rt1 ON ((CAST(1.139587536E9 AS REAL)) BETWEEN (x'') AND (x'')) WHERE (((((x'')-(rt1.c4)))GLOB((('3cP!')|(v0.c1))))) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c0, 0.5466763119581443)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')-(rt1.c4)))GLOB((('3cP!')|(v0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0 INNER JOIN rt1 ON ((CAST(1.139587536E9 AS REAL)) BETWEEN (x'') AND (x'')) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c0, 0.5466763119581443)) ISNULL)  NULLS LAST);
SELECT * FROM v0, rt0, vt0 INNER JOIN rt1 ON ((CAST(1.139587536E9 AS REAL)) BETWEEN (x'') AND (x'')) WHERE (((((x'')-(rt1.c4)))GLOB((('3cP!')|(v0.c1))))) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c0, 0.5466763119581443)) ISNULL)  NULLS LAST;
SELECT ALL * FROM rt1, vt0 NATURAL JOIN v0 WHERE (((((((((((rt1.c2)AND(v0.c2)))AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))>(((rt1.c2) BETWEEN (rt1.c2) AND (v0.c1))))) ORDER BY ((((((vt0.c0)OR(rt1.c4)))AND(vt0.c0)))<<(((rt1.c0)/(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(v0.c2)))AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))>(((rt1.c2) BETWEEN (rt1.c2) AND (v0.c1))))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN v0 ORDER BY ((((((vt0.c0)OR(rt1.c4)))AND(vt0.c0)))<<(((rt1.c0)/(rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 NATURAL JOIN v0 WHERE (((((((((((rt1.c2)AND(v0.c2)))AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))>(((rt1.c2) BETWEEN (rt1.c2) AND (v0.c1))))) ORDER BY ((((((vt0.c0)OR(rt1.c4)))AND(vt0.c0)))<<(((rt1.c0)/(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(v0.c2)))AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))>(((rt1.c2) BETWEEN (rt1.c2) AND (v0.c1))))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN v0 ORDER BY ((((((vt0.c0)OR(rt1.c4)))AND(vt0.c0)))<<(((rt1.c0)/(rt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 NATURAL JOIN v0 WHERE (((((((((((rt1.c2)AND(v0.c2)))AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))>(((rt1.c2) BETWEEN (rt1.c2) AND (v0.c1))))) ORDER BY ((((((vt0.c0)OR(rt1.c4)))AND(vt0.c0)))<<(((rt1.c0)/(rt1.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)<>(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)!=(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)<>(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)!=(v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)<>(v0.c1)) IN ()));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0) NOT NULL))AND(((0.6035649958682962)IS(rt1.c4)))))AND(((rt1.c4) IS TRUE)))) ORDER BY (((0X78fe43f5) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())  NULLS LAST, CAST('-878234779' AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) NOT NULL))AND(((0.6035649958682962)IS(rt1.c4)))))AND(((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (((0x78fe43f5) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())  NULLS LAST, CAST('-878234779' AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0) NOT NULL))AND(((0.6035649958682962)IS(rt1.c4)))))AND(((rt1.c4) IS TRUE)))) ORDER BY (((0X78fe43f5) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())  NULLS LAST, CAST('-878234779' AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) NOT NULL))AND(((0.6035649958682962)IS(rt1.c4)))))AND(((rt1.c4) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (((0x78fe43f5) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())  NULLS LAST, CAST('-878234779' AS TEXT)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0) NOT NULL))AND(((0.6035649958682962)IS(rt1.c4)))))AND(((rt1.c4) IS TRUE)))) ORDER BY (((0X78fe43f5) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())  NULLS LAST, CAST('-878234779' AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (CAST(v0.c1 AS TEXT)) ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c2) ISNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c2) ISNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (CAST(v0.c1 AS TEXT)) ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c2) ISNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt1, rt0 ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c2) ISNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt1, rt0 WHERE (CAST(v0.c1 AS TEXT)) ORDER BY ((rt1.c0) NOT BETWEEN (((rt1.c2) ISNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS FALSE)) ORDER BY ((CAST(0.7091745342773909 AS TEXT)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(-1259503086))) AND (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR('Gy')))OR('1525556148')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(0.7091745342773909 AS TEXT)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(-1259503086))) AND (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR('Gy')))OR('1525556148')))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS FALSE)) ORDER BY ((CAST(0.7091745342773909 AS TEXT)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(-1259503086))) AND (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR('Gy')))OR('1525556148')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(0.7091745342773909 AS TEXT)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(-1259503086))) AND (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR('Gy')))OR('1525556148')))) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS FALSE)) ORDER BY ((CAST(0.7091745342773909 AS TEXT)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(-1259503086))) AND (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))OR('Gy')))OR('1525556148')))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c1)<=(rt1.c3)), ((((((((rt0.c0)AND(0.0814751568330403)))AND(rt1.c2)))OR(x'')))AND(rt0.c0)), (((rt1.c1)) NOT BETWEEN ((0.7478276527884359)) AND ((rt0.c1)))))<>((x'', (rt0.c1 IN (rt1.c0)), CAST(rt1.c3 AS REAL))))) ORDER BY ((((((rt1.c2)>(rt1.c2)))AND(TRIM(rt1.c3))))AND(((rt1.c1)||(rt1.c3))))  NULLS LAST, ((((rt1.c3)OR(rt0.c1)))OR((((rt1.c2, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c4, 0.35232297990990025, rt1.c1)) AND ((rt1.c2, rt1.c3, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt1.c3)), ((((((((rt0.c0)AND(0.0814751568330403)))AND(rt1.c2)))OR(x'')))AND(rt0.c0)), (((rt1.c1)) NOT BETWEEN ((0.7478276527884359)) AND ((rt0.c1)))))<>((x'', (rt0.c1 IN (rt1.c0)), CAST(rt1.c3 AS REAL))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c2)>(rt1.c2)))AND(TRIM(rt1.c3))))AND(((rt1.c1)||(rt1.c3))))  NULLS LAST, ((((rt1.c3)OR(rt0.c1)))OR((((rt1.c2, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c4, 0.35232297990990025, rt1.c1)) AND ((rt1.c2, rt1.c3, rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c1)<=(rt1.c3)), ((((((((rt0.c0)AND(0.0814751568330403)))AND(rt1.c2)))OR(x'')))AND(rt0.c0)), (((rt1.c1)) NOT BETWEEN ((0.7478276527884359)) AND ((rt0.c1)))))<>((x'', (rt0.c1 IN (rt1.c0)), CAST(rt1.c3 AS REAL))))) ORDER BY ((((((rt1.c2)>(rt1.c2)))AND(TRIM(rt1.c3))))AND(((rt1.c1)||(rt1.c3))))  NULLS LAST, ((((rt1.c3)OR(rt0.c1)))OR((((rt1.c2, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c4, 0.35232297990990025, rt1.c1)) AND ((rt1.c2, rt1.c3, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt1.c3)), ((((((((rt0.c0)AND(0.0814751568330403)))AND(rt1.c2)))OR(x'')))AND(rt0.c0)), (((rt1.c1)) NOT BETWEEN ((0.7478276527884359)) AND ((rt0.c1)))))<>((x'', (rt0.c1 IN (rt1.c0)), CAST(rt1.c3 AS REAL))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c2)>(rt1.c2)))AND(TRIM(rt1.c3))))AND(((rt1.c1)||(rt1.c3))))  NULLS LAST, ((((rt1.c3)OR(rt0.c1)))OR((((rt1.c2, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c4, 0.35232297990990025, rt1.c1)) AND ((rt1.c2, rt1.c3, rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c1)<=(rt1.c3)), ((((((((rt0.c0)AND(0.0814751568330403)))AND(rt1.c2)))OR(x'')))AND(rt0.c0)), (((rt1.c1)) NOT BETWEEN ((0.7478276527884359)) AND ((rt0.c1)))))<>((x'', (rt0.c1 IN (rt1.c0)), CAST(rt1.c3 AS REAL))))) ORDER BY ((((((rt1.c2)>(rt1.c2)))AND(TRIM(rt1.c3))))AND(((rt1.c1)||(rt1.c3))))  NULLS LAST, ((((rt1.c3)OR(rt0.c1)))OR((((rt1.c2, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c4, 0.35232297990990025, rt1.c1)) AND ((rt1.c2, rt1.c3, rt0.c0)))))  NULLS FIRST;
SELECT * FROM rt0, vt0, rt1, v0 WHERE (((((rt0.c1)<(0.9375377351982657)))!=((0.2619693024465286 IN (vt0.c0))))) ORDER BY '375864670'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(0.9375377351982657)))!=((0.2619693024465286 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY '375864670'  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1, v0 WHERE (((((rt0.c1)<(0.9375377351982657)))!=((0.2619693024465286 IN (vt0.c0))))) ORDER BY '375864670'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(0.9375377351982657)))!=((0.2619693024465286 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY '375864670'  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1, v0 WHERE (((((rt0.c1)<(0.9375377351982657)))!=((0.2619693024465286 IN (vt0.c0))))) ORDER BY '375864670'  NULLS FIRST;
SELECT * FROM v0, rt1, rt0, vt0 WHERE ((((- (rt1.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c3))) ISNULL)) IS TRUE)  as count FROM v0, rt1, rt0, vt0);
SELECT * FROM v0, rt1, rt0, vt0 WHERE ((((- (rt1.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c3))) ISNULL)) IS TRUE)  as count FROM v0, rt1, rt0, vt0);
SELECT * FROM v0, rt1, rt0, vt0 WHERE ((((- (rt1.c3))) ISNULL));
SELECT * FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (NOT (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON HEX(DISTINCT CAST(rt1.c1 AS TEXT)) WHERE (COALESCE(((v0.c2) BETWEEN (vt0.c0) AND (rt1.c0)), ((((((((rt1.c4)AND(v0.c0)))OR(rt1.c0)))AND(rt0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c2) BETWEEN (vt0.c0) AND (rt1.c0)), ((((((((rt1.c4)AND(v0.c0)))OR(rt1.c0)))AND(rt0.c2)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (NOT (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON HEX(DISTINCT CAST(rt1.c1 AS TEXT)));
SELECT * FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (NOT (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON HEX(DISTINCT CAST(rt1.c1 AS TEXT)) WHERE (COALESCE(((v0.c2) BETWEEN (vt0.c0) AND (rt1.c0)), ((((((((rt1.c4)AND(v0.c0)))OR(rt1.c0)))AND(rt0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c2) BETWEEN (vt0.c0) AND (rt1.c0)), ((((((((rt1.c4)AND(v0.c0)))OR(rt1.c0)))AND(rt0.c2)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN v0 ON (NOT (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON HEX(DISTINCT CAST(rt1.c1 AS TEXT)));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) IS FALSE) AS BLOB) WHERE (CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) IS FALSE) AS BLOB) WHERE (CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c2) IS FALSE) AS BLOB) WHERE (CAST(((rt0.c1)LIKE(rt0.c0)) AS REAL));
SELECT * FROM v0, rt0 WHERE ((((rt0.c0, rt0.c2, v0.c2)) BETWEEN ((load_extension(rt0.c1, v0.c0), UPPER(DISTINCT rt0.c0), CAST(v0.c1 AS TEXT))) AND ((rt0.c1 COLLATE BINARY, CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END, (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, v0.c2)) BETWEEN ((load_extension(rt0.c1, v0.c0), UPPER(DISTINCT rt0.c0), CAST(v0.c1 AS TEXT))) AND ((rt0.c1 COLLATE BINARY, CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END, (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0, rt0.c2, v0.c2)) BETWEEN ((load_extension(rt0.c1, v0.c0), UPPER(DISTINCT rt0.c0), CAST(v0.c1 AS TEXT))) AND ((rt0.c1 COLLATE BINARY, CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END, (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, v0.c2)) BETWEEN ((load_extension(rt0.c1, v0.c0), UPPER(DISTINCT rt0.c0), CAST(v0.c1 AS TEXT))) AND ((rt0.c1 COLLATE BINARY, CASE WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END, (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ('-295998719') ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-295998719') IS TRUE)  as count FROM v0, rt1, rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ('-295998719') ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-295998719') IS TRUE)  as count FROM v0, rt1, rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0, vt0 WHERE ('-295998719') ORDER BY rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c2) NOTNULL)  WHEN ((((v0.c0)OR(v0.c2)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE LIKELIHOOD(v0.c2, 0.920264591209319) END) ORDER BY ((((v0.c2)==(v0.c1)))<((- (v0.c0)))) DESC  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) NOTNULL)  WHEN ((((v0.c0)OR(v0.c2)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE LIKELIHOOD(v0.c2, 0.920264591209319) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)==(v0.c1)))<((- (v0.c0)))) DESC  NULLS FIRST, v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c2) NOTNULL)  WHEN ((((v0.c0)OR(v0.c2)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE LIKELIHOOD(v0.c2, 0.920264591209319) END) ORDER BY ((((v0.c2)==(v0.c1)))<((- (v0.c0)))) DESC  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) NOTNULL)  WHEN ((((v0.c0)OR(v0.c2)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE LIKELIHOOD(v0.c2, 0.920264591209319) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)==(v0.c1)))<((- (v0.c0)))) DESC  NULLS FIRST, v0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c2) NOTNULL)  WHEN ((((v0.c0)OR(v0.c2)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE LIKELIHOOD(v0.c2, 0.920264591209319) END) ORDER BY ((((v0.c2)==(v0.c1)))<((- (v0.c0)))) DESC  NULLS FIRST, v0.c0;
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((CASE v0.c2  WHEN vt0.c0 THEN 0.9254942344231865 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN '-1427998906' END)IS NOT(CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 ELSE '|' END)) INNER JOIN v0 ON UNLIKELY(NULL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((CASE v0.c2  WHEN vt0.c0 THEN 0.9254942344231865 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN '-1427998906' END)IS NOT(CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 ELSE '|' END)) INNER JOIN v0 ON UNLIKELY(NULL));
SELECT COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((CASE v0.c2  WHEN vt0.c0 THEN 0.9254942344231865 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN '-1427998906' END)IS NOT(CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 ELSE '|' END)) INNER JOIN v0 ON UNLIKELY(NULL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((CASE v0.c2  WHEN vt0.c0 THEN 0.9254942344231865 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN '-1427998906' END)IS NOT(CASE rt1.c0  WHEN rt1.c0 THEN v0.c2 ELSE '|' END)) INNER JOIN v0 ON UNLIKELY(NULL));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (~ (CASE WHEN rt1.c3 THEN x'' WHEN '' THEN 0.9345909605863403 WHEN rt1.c2 THEN rt1.c2 END)) FULL OUTER JOIN vt0 ON (rt0.c2 IN ()) WHERE (((rt1.c0 COLLATE BINARY)<>(NULL))) ORDER BY ((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)<((((rt0.c0, rt1.c0, vt0.c0, rt1.c2, rt1.c3))<((rt1.c0, 0.43848561800705277, rt1.c0, rt1.c3, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)!=(NULL))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ (CASE WHEN rt1.c3 THEN x'' WHEN '' THEN 0.9345909605863403 WHEN rt1.c2 THEN rt1.c2 END)) FULL OUTER JOIN vt0 ON (rt0.c2 IN ()) ORDER BY ((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)<((((rt0.c0, rt1.c0, vt0.c0, rt1.c2, rt1.c3))<((rt1.c0, 0.43848561800705277, rt1.c0, rt1.c3, rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (~ (CASE WHEN rt1.c3 THEN x'' WHEN '' THEN 0.9345909605863403 WHEN rt1.c2 THEN rt1.c2 END)) FULL OUTER JOIN vt0 ON (rt0.c2 IN ()) WHERE (((rt1.c0 COLLATE BINARY)<>(NULL))) ORDER BY ((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)<((((rt0.c0, rt1.c0, vt0.c0, rt1.c2, rt1.c3))<((rt1.c0, 0.43848561800705277, rt1.c0, rt1.c3, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)!=(NULL))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (~ (CASE WHEN rt1.c3 THEN x'' WHEN '' THEN 0.9345909605863403 WHEN rt1.c2 THEN rt1.c2 END)) FULL OUTER JOIN vt0 ON (rt0.c2 IN ()) ORDER BY ((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)<((((rt0.c0, rt1.c0, vt0.c0, rt1.c2, rt1.c3))<((rt1.c0, 0.43848561800705277, rt1.c0, rt1.c3, rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (~ (CASE WHEN rt1.c3 THEN x'' WHEN '' THEN 0.9345909605863403 WHEN rt1.c2 THEN rt1.c2 END)) FULL OUTER JOIN vt0 ON (rt0.c2 IN ()) WHERE (((rt1.c0 COLLATE BINARY)<>(NULL))) ORDER BY ((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c1 END)<((((rt0.c0, rt1.c0, vt0.c0, rt1.c2, rt1.c3))<((rt1.c0, 0.43848561800705277, rt1.c0, rt1.c3, rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)LIKE(((((v0.c2)OR(v0.c1)))OR(v0.c2))))) ORDER BY (((v0.c1) ISNULL) IN ()), ((NULL) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)LIKE(((((v0.c2)OR(v0.c1)))OR(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) ISNULL) IN ()), ((NULL) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)LIKE(((((v0.c2)OR(v0.c1)))OR(v0.c2))))) ORDER BY (((v0.c1) ISNULL) IN ()), ((NULL) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)LIKE(((((v0.c2)OR(v0.c1)))OR(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) ISNULL) IN ()), ((NULL) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)LIKE(((((v0.c2)OR(v0.c1)))OR(v0.c2))))) ORDER BY (((v0.c1) ISNULL) IN ()), ((NULL) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE (((((v0.c0)==(rt0.c1)))>>(((((rt1.c0)OR(vt0.c0)))OR(v0.c2))))) ORDER BY ((((((((0.5843169636797244)OR(rt0.c1)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(v0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(rt0.c1)))>>(((((rt1.c0)OR(vt0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY ((((((((0.5843169636797244)OR(rt0.c1)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(v0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE (((((v0.c0)==(rt0.c1)))>>(((((rt1.c0)OR(vt0.c0)))OR(v0.c2))))) ORDER BY ((((((((0.5843169636797244)OR(rt0.c1)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(v0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(rt0.c1)))>>(((((rt1.c0)OR(vt0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, rt1 ORDER BY ((((((((0.5843169636797244)OR(rt0.c1)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(v0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0, rt1 WHERE (((((v0.c0)==(rt0.c1)))>>(((((rt1.c0)OR(vt0.c0)))OR(v0.c2))))) ORDER BY ((((((((0.5843169636797244)OR(rt0.c1)))AND(rt0.c0)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))))OR(v0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt1 ON (((((rt0.c0))==((v0.c1)))) NOTNULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) NOT NULL) WHERE (((CASE x''  WHEN rt1.c0 THEN v0.c2 ELSE vt0.c0 END) BETWEEN (((((rt0.c1)OR(rt1.c4)))AND(v0.c2))) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN rt1.c0 THEN v0.c2 ELSE vt0.c0 END) BETWEEN (((((rt0.c1)OR(rt1.c4)))AND(v0.c2))) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt1 ON (((((rt0.c0))==((v0.c1)))) NOTNULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt1 ON (((((rt0.c0))==((v0.c1)))) NOTNULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) NOT NULL) WHERE (((CASE x''  WHEN rt1.c0 THEN v0.c2 ELSE vt0.c0 END) BETWEEN (((((rt0.c1)OR(rt1.c4)))AND(v0.c2))) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN rt1.c0 THEN v0.c2 ELSE vt0.c0 END) BETWEEN (((((rt0.c1)OR(rt1.c4)))AND(v0.c2))) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt1 ON (((((rt0.c0))==((v0.c1)))) NOTNULL) RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c2 END) NOT NULL));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) IS TRUE)  WHEN CASE x''  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN rt0.c0 END THEN '_&z}NIh^' END WHERE (CAST(((v0.c1)&(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)&(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) IS TRUE)  WHEN CASE x''  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN rt0.c0 END THEN '_&z}NIh^' END);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) IS TRUE)  WHEN CASE x''  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN rt0.c0 END THEN '_&z}NIh^' END WHERE (CAST(((v0.c1)&(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)&(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) IS TRUE)  WHEN CASE x''  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN rt0.c0 END THEN '_&z}NIh^' END);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) IS TRUE)  WHEN CASE x''  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN rt0.c0 END THEN '_&z}NIh^' END WHERE (CAST(((v0.c1)&(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((('0.33385509319715767' IN ()))<<((('-1090660951') NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((((v0.c1) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(CAST(v0.c2 AS NUMERIC))))OR(LTRIM('p<鄨\UY'))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) WHERE (CAST(((rt0.c2)|(v0.c1)) AS INTEGER)) ORDER BY LIKELY(((0.19141565503978608)AND(v0.c2))) ASC  NULLS LAST, (NOT (MIN(rt0.c1, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)|(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((('0.33385509319715767' IN ()))<<((('-1090660951') NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((((v0.c1) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(CAST(v0.c2 AS NUMERIC))))OR(LTRIM('p<鄨\UY'))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) ORDER BY LIKELY(((0.19141565503978608)AND(v0.c2))) ASC  NULLS LAST, (NOT (MIN(rt0.c1, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((('0.33385509319715767' IN ()))<<((('-1090660951') NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((((v0.c1) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(CAST(v0.c2 AS NUMERIC))))OR(LTRIM('p<鄨\UY'))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) WHERE (CAST(((rt0.c2)|(v0.c1)) AS INTEGER)) ORDER BY LIKELY(((0.19141565503978608)AND(v0.c2))) ASC  NULLS LAST, (NOT (MIN(rt0.c1, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)|(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((('0.33385509319715767' IN ()))<<((('-1090660951') NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((((v0.c1) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(CAST(v0.c2 AS NUMERIC))))OR(LTRIM('p<鄨\UY'))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) ORDER BY LIKELY(((0.19141565503978608)AND(v0.c2))) ASC  NULLS LAST, (NOT (MIN(rt0.c1, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((('0.33385509319715767' IN ()))<<((('-1090660951') NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((((v0.c1) ISNULL))OR(rt0.c1 COLLATE RTRIM)))AND(CAST(v0.c2 AS NUMERIC))))OR(LTRIM('p<鄨\UY'))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) WHERE (CAST(((rt0.c2)|(v0.c1)) AS INTEGER)) ORDER BY LIKELY(((0.19141565503978608)AND(v0.c2))) ASC  NULLS LAST, (NOT (MIN(rt0.c1, v0.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((rt0.c2 IN ()))IS NOT((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((''))))) RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(((v0.c0)IS NOT(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS NOT(v0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((rt0.c2 IN ()))IS NOT((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((''))))) RIGHT OUTER JOIN rt0 ON rt0.c2);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (((rt0.c2 IN ()))IS NOT((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((''))))) RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (CAST(((v0.c0)IS NOT(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS NOT(v0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((rt0.c2 IN ()))IS NOT((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((''))))) RIGHT OUTER JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))LIKE(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))LIKE(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))LIKE(SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))LIKE(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))LIKE(SQLITE_SOURCE_ID())));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE BINARY)) WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE BINARY)) WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE BINARY)) WHERE ('' COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE ((json_valid(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_valid(v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((json_valid(v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_valid(v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((json_valid(v0.c0) IN ()));
SELECT * FROM vt0, rt0, v0, rt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT * FROM vt0, rt0, v0, rt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0, rt1);
SELECT * FROM vt0, rt0, v0, rt1 WHERE (CAST(rt1.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NULL IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)|((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND ((NULL, vt0.c0, rt0.c0))))) DESC  NULLS FIRST, ((((rt0.c0)>(rt0.c2))) NOT NULL), CASE LOWER(DISTINCT rt0.c1)  WHEN rt0.c0 THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c1) BETWEEN (x'ce2f') AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)|((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND ((NULL, vt0.c0, rt0.c0))))) DESC  NULLS FIRST, ((((rt0.c0)>(rt0.c2))) NOT NULL), CASE LOWER(DISTINCT rt0.c1)  WHEN rt0.c0 THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c1) BETWEEN (x'ce2f') AND (vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NULL IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)|((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND ((NULL, vt0.c0, rt0.c0))))) DESC  NULLS FIRST, ((((rt0.c0)>(rt0.c2))) NOT NULL), CASE LOWER(DISTINCT rt0.c1)  WHEN rt0.c0 THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c1) BETWEEN (x'ce2f') AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)|((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND ((NULL, vt0.c0, rt0.c0))))) DESC  NULLS FIRST, ((((rt0.c0)>(rt0.c2))) NOT NULL), CASE LOWER(DISTINCT rt0.c1)  WHEN rt0.c0 THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c1) BETWEEN (x'ce2f') AND (vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NULL IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)|((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND ((NULL, vt0.c0, rt0.c0))))) DESC  NULLS FIRST, ((((rt0.c0)>(rt0.c2))) NOT NULL), CASE LOWER(DISTINCT rt0.c1)  WHEN rt0.c0 THEN (((rt0.c1))=((rt0.c0))) ELSE ((rt0.c1) BETWEEN (x'ce2f') AND (vt0.c0)) END ASC;
SELECT * FROM rt1, vt0, v0, rt0 WHERE (((((((rt1.c1)OR(rt0.c1)))AND(rt1.c0)))<<(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(rt0.c1)))AND(rt1.c0)))<<(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT * FROM rt1, vt0, v0, rt0 WHERE (((((((rt1.c1)OR(rt0.c1)))AND(rt1.c0)))<<(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(rt0.c1)))AND(rt1.c0)))<<(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT * FROM rt1, vt0, v0, rt0 WHERE (((((((rt1.c1)OR(rt0.c1)))AND(rt1.c0)))<<(CAST(rt1.c1 AS REAL))));
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END IN ())) ORDER BY ((v0.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c2) IS TRUE));
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END IN ())) ORDER BY ((v0.c2) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c2) IS TRUE));
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END IN ())) ORDER BY ((v0.c2) IS TRUE);
SELECT COUNT(*) FROM v0, rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (LIKELY(DISTINCT x'f2b3bff1'))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(DISTINCT x'f2b3bff1')))) IS TRUE)  as count FROM v0, rt1, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (LIKELY(DISTINCT x'f2b3bff1'))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(DISTINCT x'f2b3bff1')))) IS TRUE)  as count FROM v0, rt1, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (LIKELY(DISTINCT x'f2b3bff1'))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0)<(v0.c0)) WHEN x'bfbf' THEN CAST(v0.c2 AS TEXT) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN ((vt0.c0)-(v0.c2)) END WHERE (CASE vt0.c0  WHEN (((v0.c1))>=((v0.c1))) THEN (- (v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END) ORDER BY '974915293' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (((v0.c1))>=((v0.c1))) THEN (- (v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0)<(v0.c0)) WHEN x'bfbf' THEN CAST(v0.c2 AS TEXT) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN ((vt0.c0)-(v0.c2)) END ORDER BY '974915293' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0)<(v0.c0)) WHEN x'bfbf' THEN CAST(v0.c2 AS TEXT) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN ((vt0.c0)-(v0.c2)) END WHERE (CASE vt0.c0  WHEN (((v0.c1))>=((v0.c1))) THEN (- (v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END) ORDER BY '974915293' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN (((v0.c1))>=((v0.c1))) THEN (- (v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0)<(v0.c0)) WHEN x'bfbf' THEN CAST(v0.c2 AS TEXT) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN ((vt0.c0)-(v0.c2)) END ORDER BY '974915293' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN v0.c0 END THEN ((vt0.c0)<(v0.c0)) WHEN x'bfbf' THEN CAST(v0.c2 AS TEXT) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN ((vt0.c0)-(v0.c2)) END WHERE (CASE vt0.c0  WHEN (((v0.c1))>=((v0.c1))) THEN (- (v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)) END) ORDER BY '974915293' DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST(HEX(rt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(rt1.c0) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(HEX(rt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(rt1.c0) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(HEX(rt1.c0) AS BLOB));
SELECT ALL * FROM rt1, v0 NATURAL JOIN vt0 WHERE (json_extract(((v0.c0)=(v0.c2)), rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((v0.c0)==(v0.c2)), rt1.c3)) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN vt0);
SELECT ALL * FROM rt1, v0 NATURAL JOIN vt0 WHERE (json_extract(((v0.c0)=(v0.c2)), rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((v0.c0)==(v0.c2)), rt1.c3)) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN vt0);
SELECT ALL * FROM rt1, v0 NATURAL JOIN vt0 WHERE (json_extract(((v0.c0)=(v0.c2)), rt1.c3));
SELECT COUNT(*) FROM rt1, vt0, v0, rt0 WHERE ((((((rt1.c0) BETWEEN (rt1.c4) AND (0.5138516389150389)), ((rt1.c3) BETWEEN (v0.c0) AND (rt1.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c4 END))>((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)), (rt1.c1 IN (rt1.c1, rt1.c1)), ((v0.c2) NOT BETWEEN (0X2f2180b7) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) BETWEEN (rt1.c4) AND (0.5138516389150389)), ((rt1.c3) BETWEEN (v0.c0) AND (rt1.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c4 END))>((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)), (rt1.c1 IN (rt1.c1, rt1.c1)), ((v0.c2) NOT BETWEEN (0x2f2180b7) AND (v0.c1)))))) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT COUNT(*) FROM rt1, vt0, v0, rt0 WHERE ((((((rt1.c0) BETWEEN (rt1.c4) AND (0.5138516389150389)), ((rt1.c3) BETWEEN (v0.c0) AND (rt1.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c4 END))>((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)), (rt1.c1 IN (rt1.c1, rt1.c1)), ((v0.c2) NOT BETWEEN (0X2f2180b7) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) BETWEEN (rt1.c4) AND (0.5138516389150389)), ((rt1.c3) BETWEEN (v0.c0) AND (rt1.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c4 END))>((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)), (rt1.c1 IN (rt1.c1, rt1.c1)), ((v0.c2) NOT BETWEEN (0x2f2180b7) AND (v0.c1)))))) IS TRUE)  as count FROM rt1, vt0, v0, rt0);
SELECT COUNT(*) FROM rt1, vt0, v0, rt0 WHERE ((((((rt1.c0) BETWEEN (rt1.c4) AND (0.5138516389150389)), ((rt1.c3) BETWEEN (v0.c0) AND (rt1.c2)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c4 END))>((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c0)))OR(rt0.c2)), (rt1.c1 IN (rt1.c1, rt1.c1)), ((v0.c2) NOT BETWEEN (0X2f2180b7) AND (v0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0))))) ORDER BY TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0)) ASC, ((CAST(vt0.c0 AS INTEGER))%(((x'')>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0)) ASC, ((CAST(vt0.c0 AS INTEGER))%(((x'')>(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0))))) ORDER BY TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0)) ASC, ((CAST(vt0.c0 AS INTEGER))%(((x'')>(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0)) ASC, ((CAST(vt0.c0 AS INTEGER))%(((x'')>(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0))))) ORDER BY TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), TRIM(DISTINCT vt0.c0)) ASC, ((CAST(vt0.c0 AS INTEGER))%(((x'')>(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((~ (UNLIKELY(rt0.c1)))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL), ((((rt0.c0 COLLATE RTRIM)OR('-1047074962' COLLATE BINARY)))OR(((rt0.c1)/(0.7110684507202709)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL), ((((rt0.c0 COLLATE RTRIM)OR('-1047074962' COLLATE BINARY)))OR(((rt0.c1)/(0.7110684507202709)))) ASC);
SELECT ALL * FROM rt0 WHERE ((~ (UNLIKELY(rt0.c1)))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL), ((((rt0.c0 COLLATE RTRIM)OR('-1047074962' COLLATE BINARY)))OR(((rt0.c1)/(0.7110684507202709)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL), ((((rt0.c0 COLLATE RTRIM)OR('-1047074962' COLLATE BINARY)))OR(((rt0.c1)/(0.7110684507202709)))) ASC);
SELECT ALL * FROM rt0 WHERE ((~ (UNLIKELY(rt0.c1)))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL), ((((rt0.c0 COLLATE RTRIM)OR('-1047074962' COLLATE BINARY)))OR(((rt0.c1)/(0.7110684507202709)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE v0.c2 END COLLATE BINARY) ORDER BY CAST(((rt1.c2)GLOB(v0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE v0.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY CAST(((rt1.c2)GLOB(v0.c1)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE v0.c2 END COLLATE BINARY) ORDER BY CAST(((rt1.c2)GLOB(v0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE v0.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY CAST(((rt1.c2)GLOB(v0.c1)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE v0.c2 END COLLATE BINARY) ORDER BY CAST(((rt1.c2)GLOB(v0.c1)) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c0)))AND(x'39b8')) THEN ((rt0.c2)!=(rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)OR(rt0.c0)))AND(x'39b8')) THEN ((rt0.c2)!=(rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c0)))AND(x'39b8')) THEN ((rt0.c2)!=(rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)OR(rt0.c0)))AND(x'39b8')) THEN ((rt0.c2)!=(rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c0)))AND(x'39b8')) THEN ((rt0.c2)!=(rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (SQLITE_VERSION()) ORDER BY (NOT (((((((((v0.c2)AND('wr)<K#.')))AND(v0.c1)))OR(NULL)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (((((((((v0.c2)AND('wr)<K#.')))AND(v0.c1)))OR(NULL)))OR(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (SQLITE_VERSION()) ORDER BY (NOT (((((((((v0.c2)AND('wr)<K#.')))AND(v0.c1)))OR(NULL)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (((((((((v0.c2)AND('wr)<K#.')))AND(v0.c1)))OR(NULL)))OR(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (SQLITE_VERSION()) ORDER BY (NOT (((((((((v0.c2)AND('wr)<K#.')))AND(v0.c1)))OR(NULL)))OR(rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ('PAL') ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN '134360599' ELSE (('(Fn#') NOTNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('PAL') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN '134360599' ELSE (('(Fn#') NOTNULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('PAL') ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN '134360599' ELSE (('(Fn#') NOTNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('PAL') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN '134360599' ELSE (('(Fn#') NOTNULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('PAL') ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN '134360599' ELSE (('(Fn#') NOTNULL) END DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((~ (((v0.c2)<(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2)<(v0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((~ (((v0.c2)<(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c2)<(v0.c2))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((~ (((v0.c2)<(v0.c2)))));
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN '-1109053675' THEN x'' ELSE rt0.c0 END)-(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '-1109053675' THEN x'' ELSE rt0.c0 END)-(rt0.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN '-1109053675' THEN x'' ELSE rt0.c0 END)-(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '-1109053675' THEN x'' ELSE rt0.c0 END)-(rt0.c2))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN '-1109053675' THEN x'' ELSE rt0.c0 END)-(rt0.c2)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((~ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((~ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((~ (rt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((- (v0.c0)) IN ('pQ', CASE v0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)) CROSS JOIN vt0 ON (((rt0.c1 IN (vt0.c0))) BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) WHERE (rtreenode(((v0.c2) IS FALSE), ((rt0.c2)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((v0.c2) IS FALSE), ((rt0.c2)AND(v0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((- (v0.c0)) IN ('pQ', CASE v0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)) CROSS JOIN vt0 ON (((rt0.c1 IN (vt0.c0))) BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((- (v0.c0)) IN ('pQ', CASE v0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)) CROSS JOIN vt0 ON (((rt0.c1 IN (vt0.c0))) BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) WHERE (rtreenode(((v0.c2) IS FALSE), ((rt0.c2)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((rtreenode(((v0.c2) IS FALSE), ((rt0.c2)AND(v0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((- (v0.c0)) IN ('pQ', CASE v0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)) CROSS JOIN vt0 ON (((rt0.c1 IN (vt0.c0))) BETWEEN (((rt0.c2)-(rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (UNLIKELY((rt0.c1 IN (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((rt0.c1 IN (rt1.c2)))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (UNLIKELY((rt0.c1 IN (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((rt0.c1 IN (rt1.c2)))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (UNLIKELY((rt0.c1 IN (rt1.c2))));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 INNER JOIN vt0 ON rt1.c3 WHERE (((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c0)))LIKE(((rt1.c0) IS TRUE)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c0)))LIKE(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0, rt1 INNER JOIN vt0 ON rt1.c3 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 INNER JOIN vt0 ON rt1.c3 WHERE (((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c0)))LIKE(((rt1.c0) IS TRUE)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c0)))LIKE(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0, rt1 INNER JOIN vt0 ON rt1.c3 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 INNER JOIN vt0 ON rt1.c3 WHERE (((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c0)))LIKE(((rt1.c0) IS TRUE)))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((CASE WHEN v0.c1 THEN rt1.c4 ELSE v0.c2 END))<((((rt1.c2)>>(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c1 THEN rt1.c4 ELSE v0.c2 END))<((((rt1.c2)>>(v0.c2)))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((CASE WHEN v0.c1 THEN rt1.c4 ELSE v0.c2 END))<((((rt1.c2)>>(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c1 THEN rt1.c4 ELSE v0.c2 END))<((((rt1.c2)>>(v0.c2)))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((CASE WHEN v0.c1 THEN rt1.c4 ELSE v0.c2 END))<((((rt1.c2)>>(v0.c2))))));
SELECT * FROM v0, vt0, rt0 CROSS JOIN rt1 ON (((((rt1.c0)|(v0.c2))))=((x'b0ba'))) WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER)) ORDER BY DATE(((rt1.c2)<(v0.c1)), ((rt1.c0)+(v0.c2)), LIKELY(rt0.c2));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 CROSS JOIN rt1 ON (((((rt1.c0)|(v0.c2))))==((x'b0ba'))) ORDER BY DATE(((rt1.c2)<(v0.c1)), ((rt1.c0)+(v0.c2)), LIKELY(rt0.c2)));
SELECT * FROM v0, vt0, rt0 CROSS JOIN rt1 ON (((((rt1.c0)|(v0.c2))))=((x'b0ba'))) WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER)) ORDER BY DATE(((rt1.c2)<(v0.c1)), ((rt1.c0)+(v0.c2)), LIKELY(rt0.c2));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 CROSS JOIN rt1 ON (((((rt1.c0)|(v0.c2))))==((x'b0ba'))) ORDER BY DATE(((rt1.c2)<(v0.c1)), ((rt1.c0)+(v0.c2)), LIKELY(rt0.c2)));
SELECT * FROM v0, vt0, rt0 CROSS JOIN rt1 ON (((((rt1.c0)|(v0.c2))))=((x'b0ba'))) WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER)) ORDER BY DATE(((rt1.c2)<(v0.c1)), ((rt1.c0)+(v0.c2)), LIKELY(rt0.c2));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '0.33385509319715767' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '0.33385509319715767' DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '0.33385509319715767' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '0.33385509319715767' DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '0.33385509319715767' DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((((-294733082, vt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c0))))) WHERE ((('Ly|rr[෕i.')&(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('Ly|rr[෕i.')&(rt0.c2))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ ((((-294733082, vt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((((-294733082, vt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c0))))) WHERE ((('Ly|rr[෕i.')&(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('Ly|rr[෕i.')&(rt0.c2))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ ((((-294733082, vt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ ((((-294733082, vt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c0))))) WHERE ((('Ly|rr[෕i.')&(rt0.c2)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1 COLLATE BINARY))<=(((~ (v0.c0))))) WHERE (((vt0.c0)<(NULL)) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)  NULLS FIRST, (((+ (NULL)))IS(v0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(NULL)) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1 COLLATE BINARY))<=(((~ (v0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)  NULLS FIRST, (((+ (NULL)))IS(v0.c1))  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1 COLLATE BINARY))<=(((~ (v0.c0))))) WHERE (((vt0.c0)<(NULL)) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)  NULLS FIRST, (((+ (NULL)))IS(v0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(NULL)) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1 COLLATE BINARY))<=(((~ (v0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)  NULLS FIRST, (((+ (NULL)))IS(v0.c1))  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c1 COLLATE BINARY))<=(((~ (v0.c0))))) WHERE (((vt0.c0)<(NULL)) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1))) NOTNULL)  NULLS FIRST, (((+ (NULL)))IS(v0.c1))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON LIKE(0.7904989851538491, vt0.c0) COLLATE BINARY WHERE (((UNLIKELY(DISTINCT rt0.c1))|((((v0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c0, v0.c2, v0.c1)))))) ORDER BY rt0.c1, 0xfffffffffc0813a2, CASE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0))  WHEN (~ (v0.c2)) THEN ((x'') IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c1))|((((v0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c0, v0.c2, v0.c1)))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON LIKE(0.7904989851538491, vt0.c0) COLLATE BINARY ORDER BY rt0.c1, 0Xfffffffffc0813a2, CASE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0))  WHEN (~ (v0.c2)) THEN ((x'') IS TRUE) END);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON LIKE(0.7904989851538491, vt0.c0) COLLATE BINARY WHERE (((UNLIKELY(DISTINCT rt0.c1))|((((v0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c0, v0.c2, v0.c1)))))) ORDER BY rt0.c1, 0xfffffffffc0813a2, CASE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0))  WHEN (~ (v0.c2)) THEN ((x'') IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c1))|((((v0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c0, v0.c2, v0.c1)))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON LIKE(0.7904989851538491, vt0.c0) COLLATE BINARY ORDER BY rt0.c1, 0Xfffffffffc0813a2, CASE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0))  WHEN (~ (v0.c2)) THEN ((x'') IS TRUE) END);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON LIKE(0.7904989851538491, vt0.c0) COLLATE BINARY WHERE (((UNLIKELY(DISTINCT rt0.c1))|((((v0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c0, v0.c2, v0.c1)))))) ORDER BY rt0.c1, 0xfffffffffc0813a2, CASE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0))  WHEN (~ (v0.c2)) THEN ((x'') IS TRUE) END;
SELECT * FROM v0, rt0, vt0, rt1 WHERE ((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c2, ((v0.c0)<(rt1.c4)), ((rt0.c2)<=(vt0.c0)))) AND (((v0.c0 IN (NULL)), '-1099476410', ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt1.c4)))))) ORDER BY LIKELY(DISTINCT CAST(rt0.c2 AS REAL))  NULLS LAST, CASE WHEN (((v0.c0, rt1.c1, rt1.c3, v0.c1, rt1.c0)) NOT BETWEEN ((v0.c2, rt1.c4, rt1.c4, rt1.c0, rt0.c1)) AND ((rt1.c1, 1967745344, rt1.c2, v0.c1, v0.c1))) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(vt0.c0)))OR(rt0.c1)) END DESC  NULLS LAST, ((v0.c0) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c2, ((v0.c0)<(rt1.c4)), ((rt0.c2)<=(vt0.c0)))) AND (((v0.c0 IN (NULL)), '-1099476410', ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt1.c4)))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY LIKELY(DISTINCT CAST(rt0.c2 AS REAL))  NULLS LAST, CASE WHEN (((v0.c0, rt1.c1, rt1.c3, v0.c1, rt1.c0)) NOT BETWEEN ((v0.c2, rt1.c4, rt1.c4, rt1.c0, rt0.c1)) AND ((rt1.c1, 1967745344, rt1.c2, v0.c1, v0.c1))) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(vt0.c0)))OR(rt0.c1)) END DESC  NULLS LAST, ((v0.c0) NOT NULL) DESC);
SELECT * FROM v0, rt0, vt0, rt1 WHERE ((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c2, ((v0.c0)<(rt1.c4)), ((rt0.c2)<=(vt0.c0)))) AND (((v0.c0 IN (NULL)), '-1099476410', ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt1.c4)))))) ORDER BY LIKELY(DISTINCT CAST(rt0.c2 AS REAL))  NULLS LAST, CASE WHEN (((v0.c0, rt1.c1, rt1.c3, v0.c1, rt1.c0)) NOT BETWEEN ((v0.c2, rt1.c4, rt1.c4, rt1.c0, rt0.c1)) AND ((rt1.c1, 1967745344, rt1.c2, v0.c1, v0.c1))) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(vt0.c0)))OR(rt0.c1)) END DESC  NULLS LAST, ((v0.c0) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c2, ((v0.c0)<(rt1.c4)), ((rt0.c2)<=(vt0.c0)))) AND (((v0.c0 IN (NULL)), '-1099476410', ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt1.c4)))))) IS TRUE)  as count FROM v0, rt0, vt0, rt1 ORDER BY LIKELY(DISTINCT CAST(rt0.c2 AS REAL))  NULLS LAST, CASE WHEN (((v0.c0, rt1.c1, rt1.c3, v0.c1, rt1.c0)) NOT BETWEEN ((v0.c2, rt1.c4, rt1.c4, rt1.c0, rt0.c1)) AND ((rt1.c1, 1967745344, rt1.c2, v0.c1, v0.c1))) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(vt0.c0)))OR(rt0.c1)) END DESC  NULLS LAST, ((v0.c0) NOT NULL) DESC);
SELECT * FROM v0, rt0, vt0, rt1 WHERE ((((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c2, ((v0.c0)<(rt1.c4)), ((rt0.c2)<=(vt0.c0)))) AND (((v0.c0 IN (NULL)), '-1099476410', ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt1.c4)))))) ORDER BY LIKELY(DISTINCT CAST(rt0.c2 AS REAL))  NULLS LAST, CASE WHEN (((v0.c0, rt1.c1, rt1.c3, v0.c1, rt1.c0)) NOT BETWEEN ((v0.c2, rt1.c4, rt1.c4, rt1.c0, rt0.c1)) AND ((rt1.c1, 1967745344, rt1.c2, v0.c1, v0.c1))) THEN (rt1.c1 IN ()) ELSE ((((rt1.c2)AND(vt0.c0)))OR(rt0.c1)) END DESC  NULLS LAST, ((v0.c0) NOT NULL) DESC;
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (UNLIKELY(((((rt1.c1)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt1.c1)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (UNLIKELY(((((rt1.c1)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((rt1.c1)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0, v0);
SELECT COUNT(*) FROM rt1, vt0, v0 WHERE (UNLIKELY(((((rt1.c1)AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN (('v8')) AND ((((rt0.c0) NOTNULL)))) WHERE (CASE WHEN '' THEN v0.c1 WHEN ((rt0.c2)!=(v0.c1)) THEN ((rt1.c3)%(v0.c1)) WHEN ((((((((rt1.c3)OR(rt0.c1)))OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((NULL)&(rt1.c3)) WHEN x'' THEN ((v0.c2)IS NOT(rt1.c0)) END) ORDER BY rt1.c3 ASC  NULLS FIRST, ((((rt1.c0) NOT NULL))/((NOT (rt1.c2)))) ASC, (json_type('*') IN (0x45f56436)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN v0.c1 WHEN ((rt0.c2)<>(v0.c1)) THEN ((rt1.c3)%(v0.c1)) WHEN ((((((((rt1.c3)OR(rt0.c1)))OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((NULL)&(rt1.c3)) WHEN x'' THEN ((v0.c2)IS NOT(rt1.c0)) END) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN (('v8')) AND ((((rt0.c0) NOTNULL)))) ORDER BY rt1.c3 ASC  NULLS FIRST, ((((rt1.c0) NOT NULL))/((NOT (rt1.c2)))) ASC, (json_type('*') IN (0X45f56436)) ASC);
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN (('v8')) AND ((((rt0.c0) NOTNULL)))) WHERE (CASE WHEN '' THEN v0.c1 WHEN ((rt0.c2)!=(v0.c1)) THEN ((rt1.c3)%(v0.c1)) WHEN ((((((((rt1.c3)OR(rt0.c1)))OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((NULL)&(rt1.c3)) WHEN x'' THEN ((v0.c2)IS NOT(rt1.c0)) END) ORDER BY rt1.c3 ASC  NULLS FIRST, ((((rt1.c0) NOT NULL))/((NOT (rt1.c2)))) ASC, (json_type('*') IN (0x45f56436)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN v0.c1 WHEN ((rt0.c2)<>(v0.c1)) THEN ((rt1.c3)%(v0.c1)) WHEN ((((((((rt1.c3)OR(rt0.c1)))OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((NULL)&(rt1.c3)) WHEN x'' THEN ((v0.c2)IS NOT(rt1.c0)) END) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN (('v8')) AND ((((rt0.c0) NOTNULL)))) ORDER BY rt1.c3 ASC  NULLS FIRST, ((((rt1.c0) NOT NULL))/((NOT (rt1.c2)))) ASC, (json_type('*') IN (0X45f56436)) ASC);
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON (((rt0.c1)) BETWEEN (('v8')) AND ((((rt0.c0) NOTNULL)))) WHERE (CASE WHEN '' THEN v0.c1 WHEN ((rt0.c2)!=(v0.c1)) THEN ((rt1.c3)%(v0.c1)) WHEN ((((((((rt1.c3)OR(rt0.c1)))OR(rt1.c0)))OR(rt1.c3)))AND(rt1.c1)) THEN ((((rt1.c0)OR(rt1.c4)))AND(rt1.c1)) WHEN rt0.c2 COLLATE RTRIM THEN ((NULL)&(rt1.c3)) WHEN x'' THEN ((v0.c2)IS NOT(rt1.c0)) END) ORDER BY rt1.c3 ASC  NULLS FIRST, ((((rt1.c0) NOT NULL))/((NOT (rt1.c2)))) ASC, (json_type('*') IN (0x45f56436)) ASC;
SELECT COUNT(*) FROM rt1 WHERE (CAST((~ (rt1.c4)) AS TEXT)) ORDER BY LIKELY((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c4)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY LIKELY((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST((~ (rt1.c4)) AS TEXT)) ORDER BY LIKELY((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c4)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY LIKELY((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CAST((~ (rt1.c4)) AS TEXT)) ORDER BY LIKELY((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))|((- (rt1.c0))))) ORDER BY ((NULL COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))|((- (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))|((- (rt1.c0))))) ORDER BY ((NULL COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))|((- (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))|((- (rt1.c0))))) ORDER BY ((NULL COLLATE BINARY) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((HEX(x''))LIKE((((0.9401159348799324))<((vt0.c0)))))) ORDER BY (((((rt1.c1, rt1.c2, '-505254609'))<=((rt1.c0, rt1.c0, rt1.c3)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(x''))LIKE((((0.9401159348799324))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1, rt1.c2, '-505254609'))<=((rt1.c0, rt1.c0, rt1.c3)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((HEX(x''))LIKE((((0.9401159348799324))<((vt0.c0)))))) ORDER BY (((((rt1.c1, rt1.c2, '-505254609'))<=((rt1.c0, rt1.c0, rt1.c3)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(x''))LIKE((((0.9401159348799324))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1, rt1.c2, '-505254609'))<=((rt1.c0, rt1.c0, rt1.c3)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((HEX(x''))LIKE((((0.9401159348799324))<((vt0.c0)))))) ORDER BY (((((rt1.c1, rt1.c2, '-505254609'))<=((rt1.c0, rt1.c0, rt1.c3)))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((0xffffffffba712b22) NOT BETWEEN ((((0x4b579ae3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((rt1.c1 IN ())))) ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c2)>(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffba712b22) NOT BETWEEN ((((0X4b579ae3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c2)>(rt1.c1)) END ASC);
SELECT COUNT(*) FROM rt1 WHERE (((0xffffffffba712b22) NOT BETWEEN ((((0x4b579ae3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((rt1.c1 IN ())))) ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c2)>(rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffba712b22) NOT BETWEEN ((((0X4b579ae3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c2)>(rt1.c1)) END ASC);
SELECT COUNT(*) FROM rt1 WHERE (((0xffffffffba712b22) NOT BETWEEN ((((0x4b579ae3)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((rt1.c1 IN ())))) ORDER BY CASE WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c2)>(rt1.c1)) END ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY ((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST, CAST(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN rt0 ON CAST(((rt0.c0)>=(rt1.c3)) AS NUMERIC) INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER) WHERE (((((((rt1.c3)OR(rt1.c3)))AND(rt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (load_extension(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (load_extension(rt0.c0)))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt0 ON CAST(((rt0.c0)>=(rt1.c3)) AS NUMERIC) INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER));
SELECT COUNT(*) FROM rt1, v0 CROSS JOIN rt0 ON CAST(((rt0.c0)>=(rt1.c3)) AS NUMERIC) INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER) WHERE (((((((rt1.c3)OR(rt1.c3)))AND(rt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (load_extension(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (load_extension(rt0.c0)))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt0 ON CAST(((rt0.c0)>=(rt1.c3)) AS NUMERIC) INNER JOIN vt0 ON CAST(CAST(rt0.c2 AS TEXT) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0))))OR(((rt0.c1) NOT NULL)))) ORDER BY (((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND('-1026996672')))OR(rt0.c2)))AND(v0.c2)))OR(v0.c0)), IFNULL(v0.c0, '1532009551'), v0.c1)) AND (((('-1010541505') NOT NULL), ((v0.c0)IS NOT(rt0.c2)), rt0.c2))) DESC, (- (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND('-1026996672')))OR(rt0.c2)))AND(v0.c2)))OR(v0.c0)), IFNULL(v0.c0, '1532009551'), v0.c1)) AND (((('-1010541505') NOT NULL), ((v0.c0)IS NOT(rt0.c2)), rt0.c2))) DESC, (- (rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0))))OR(((rt0.c1) NOT NULL)))) ORDER BY (((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND('-1026996672')))OR(rt0.c2)))AND(v0.c2)))OR(v0.c0)), IFNULL(v0.c0, '1532009551'), v0.c1)) AND (((('-1010541505') NOT NULL), ((v0.c0)IS NOT(rt0.c2)), rt0.c2))) DESC, (- (rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND('-1026996672')))OR(rt0.c2)))AND(v0.c2)))OR(v0.c0)), IFNULL(v0.c0, '1532009551'), v0.c1)) AND (((('-1010541505') NOT NULL), ((v0.c0)IS NOT(rt0.c2)), rt0.c2))) DESC, (- (rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0))))OR(((rt0.c1) NOT NULL)))) ORDER BY (((v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND('-1026996672')))OR(rt0.c2)))AND(v0.c2)))OR(v0.c0)), IFNULL(v0.c0, '1532009551'), v0.c1)) AND (((('-1010541505') NOT NULL), ((v0.c0)IS NOT(rt0.c2)), rt0.c2))) DESC, (- (rt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((0xffffffffed1e9da1) NOTNULL))OR((rt1.c1 IN ()))))OR((rt1.c1 IN ())))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0)/(rt0.c0)))) DESC, '-101573945' ASC  NULLS LAST, (((- (rt1.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffed1e9da1) NOTNULL))OR((rt1.c1 IN ()))))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0)/(rt0.c0)))) DESC, '-101573945' ASC  NULLS LAST, (((- (rt1.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((0xffffffffed1e9da1) NOTNULL))OR((rt1.c1 IN ()))))OR((rt1.c1 IN ())))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0)/(rt0.c0)))) DESC, '-101573945' ASC  NULLS LAST, (((- (rt1.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffed1e9da1) NOTNULL))OR((rt1.c1 IN ()))))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0)/(rt0.c0)))) DESC, '-101573945' ASC  NULLS LAST, (((- (rt1.c1))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((0xffffffffed1e9da1) NOTNULL))OR((rt1.c1 IN ()))))OR((rt1.c1 IN ())))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END) NOT BETWEEN ((~ (rt0.c1))) AND (((rt1.c0)/(rt0.c0)))) DESC, '-101573945' ASC  NULLS LAST, (((- (rt1.c1))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0))=((json_type(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0))==((json_type(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0))=((json_type(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0))==((json_type(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0))=((json_type(rt1.c2)))));
SELECT * FROM v0, rt0, vt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE v0.c1  WHEN rt1.c3 THEN vt0.c0 ELSE vt0.c0 END) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE v0.c1  WHEN rt1.c3 THEN vt0.c0 ELSE vt0.c0 END) AND (rt1.c1))) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT * FROM v0, rt0, vt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE v0.c1  WHEN rt1.c3 THEN vt0.c0 ELSE vt0.c0 END) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE v0.c1  WHEN rt1.c3 THEN vt0.c0 ELSE vt0.c0 END) AND (rt1.c1))) IS TRUE)  as count FROM v0, rt0, vt0, rt1);
SELECT * FROM v0, rt0, vt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE v0.c1  WHEN rt1.c3 THEN vt0.c0 ELSE vt0.c0 END) AND (rt1.c1)));
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON ((0.6519931992939435 COLLATE BINARY) BETWEEN ('') AND (x'')) FULL OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))-(((rt1.c1)|(rt1.c4)))) WHERE (CASE CASE WHEN v0.c2 THEN rt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((((rt0.c1)AND(rt1.c0)))AND(rt1.c3)) THEN ((0.5110857347326289) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c2)*(rt0.c2)) WHEN (rt1.c3 IN (rt1.c0)) THEN ((((rt0.c0)OR(v0.c1)))AND(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c2 THEN rt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((((rt0.c1)AND(rt1.c0)))AND(rt1.c3)) THEN ((0.5110857347326289) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c2)*(rt0.c2)) WHEN (rt1.c3 IN (rt1.c0)) THEN ((((rt0.c0)OR(v0.c1)))AND(rt1.c4)) END) IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON ((0.6519931992939435 COLLATE BINARY) BETWEEN ('') AND (x'')) FULL OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))-(((rt1.c1)|(rt1.c4)))));
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON ((0.6519931992939435 COLLATE BINARY) BETWEEN ('') AND (x'')) FULL OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))-(((rt1.c1)|(rt1.c4)))) WHERE (CASE CASE WHEN v0.c2 THEN rt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((((rt0.c1)AND(rt1.c0)))AND(rt1.c3)) THEN ((0.5110857347326289) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c2)*(rt0.c2)) WHEN (rt1.c3 IN (rt1.c0)) THEN ((((rt0.c0)OR(v0.c1)))AND(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN v0.c2 THEN rt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((((rt0.c1)AND(rt1.c0)))AND(rt1.c3)) THEN ((0.5110857347326289) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c2)*(rt0.c2)) WHEN (rt1.c3 IN (rt1.c0)) THEN ((((rt0.c0)OR(v0.c1)))AND(rt1.c4)) END) IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON ((0.6519931992939435 COLLATE BINARY) BETWEEN ('') AND (x'')) FULL OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))-(((rt1.c1)|(rt1.c4)))));
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON ((0.6519931992939435 COLLATE BINARY) BETWEEN ('') AND (x'')) FULL OUTER JOIN v0 ON ((((rt0.c0) IS FALSE))-(((rt1.c1)|(rt1.c4)))) WHERE (CASE CASE WHEN v0.c2 THEN rt1.c0 WHEN vt0.c0 THEN v0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((((rt0.c1)AND(rt1.c0)))AND(rt1.c3)) THEN ((0.5110857347326289) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c2)*(rt0.c2)) WHEN (rt1.c3 IN (rt1.c0)) THEN ((((rt0.c0)OR(v0.c1)))AND(rt1.c4)) END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((rt1.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((rt1.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST((rt1.c1 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL)) ORDER BY (('-656272203')<=(v0.c2)) COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (('-656272203')<=(v0.c2)) COLLATE BINARY COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL)) ORDER BY (('-656272203')<=(v0.c2)) COLLATE BINARY COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (('-656272203')<=(v0.c2)) COLLATE BINARY COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))OR(v0.c2)) AS REAL)) ORDER BY (('-656272203')<=(v0.c2)) COLLATE BINARY COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, v0, rt1 WHERE (COALESCE(((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)), vt0.c0)) ORDER BY ((((v0.c2 IN ())))<((rt1.c4))) ASC  NULLS FIRST, CASE WHEN rt1.c1 THEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c1))) WHEN ((rt0.c2)&(0Xffffffff90ae3680)) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0, rt0, v0, rt1 ORDER BY ((((v0.c2 IN ())))<((rt1.c4))) ASC  NULLS FIRST, CASE WHEN rt1.c1 THEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c1))) WHEN ((rt0.c2)&(0Xffffffff90ae3680)) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, rt1 WHERE (COALESCE(((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)), vt0.c0)) ORDER BY ((((v0.c2 IN ())))<((rt1.c4))) ASC  NULLS FIRST, CASE WHEN rt1.c1 THEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c1))) WHEN ((rt0.c2)&(0Xffffffff90ae3680)) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0, rt0, v0, rt1 ORDER BY ((((v0.c2 IN ())))<((rt1.c4))) ASC  NULLS FIRST, CASE WHEN rt1.c1 THEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c1))) WHEN ((rt0.c2)&(0Xffffffff90ae3680)) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, rt1 WHERE (COALESCE(((v0.c2) NOT BETWEEN (v0.c2) AND (vt0.c0)), vt0.c0)) ORDER BY ((((v0.c2 IN ())))<((rt1.c4))) ASC  NULLS FIRST, CASE WHEN rt1.c1 THEN (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c1))) WHEN ((rt0.c2)&(0Xffffffff90ae3680)) THEN CAST(v0.c2 AS NUMERIC) WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c1 END THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0)IS(rt1.c4))) BETWEEN (TYPEOF(rt1.c2)) AND (rt1.c1 COLLATE RTRIM)) FULL OUTER JOIN v0 ON COALESCE((v0.c0 IN ()), TRIM(DISTINCT rt1.c3, rt1.c1), rt1.c2, ((rt1.c1)GLOB(rt0.c2))) WHERE ((((v0.c1)) NOT BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((((rt0.c2)OR(rt1.c2)))AND(rt1.c3)))))) ORDER BY (((NULL IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((((rt0.c2)OR(rt1.c2)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0)IS(rt1.c4))) BETWEEN (TYPEOF(rt1.c2)) AND (rt1.c1 COLLATE RTRIM)) FULL OUTER JOIN v0 ON COALESCE((v0.c0 IN ()), TRIM(DISTINCT rt1.c3, rt1.c1), rt1.c2, ((rt1.c1)GLOB(rt0.c2))) ORDER BY (((NULL IN ())) ISNULL) DESC);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0)IS(rt1.c4))) BETWEEN (TYPEOF(rt1.c2)) AND (rt1.c1 COLLATE RTRIM)) FULL OUTER JOIN v0 ON COALESCE((v0.c0 IN ()), TRIM(DISTINCT rt1.c3, rt1.c1), rt1.c2, ((rt1.c1)GLOB(rt0.c2))) WHERE ((((v0.c1)) NOT BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((((rt0.c2)OR(rt1.c2)))AND(rt1.c3)))))) ORDER BY (((NULL IN ())) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((((rt0.c2)OR(rt1.c2)))AND(rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((((v0.c0)IS(rt1.c4))) BETWEEN (TYPEOF(rt1.c2)) AND (rt1.c1 COLLATE RTRIM)) FULL OUTER JOIN v0 ON COALESCE((v0.c0 IN ()), TRIM(DISTINCT rt1.c3, rt1.c1), rt1.c2, ((rt1.c1)GLOB(rt0.c2))) ORDER BY (((NULL IN ())) ISNULL) DESC);
SELECT * FROM vt0 INNER JOIN rt1 ON ((((v0.c1)<>(rt1.c1)))GLOB(json_remove(v0.c2, v0.c2, v0.c2, v0.c0))) CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c4)) BETWEEN ((v0.c0)) AND ((rt1.c4))) ELSE ((('574982567'))=((rt1.c2))) END WHERE (((('' IN ()))LIKE(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c0) IS TRUE)) BETWEEN (((((((((v0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt1.c0))) AND (((rt1.c2) IS FALSE))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) IN ('1121929908'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('' IN ()))LIKE(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((v0.c1)!=(rt1.c1)))GLOB(json_remove(v0.c2, v0.c2, v0.c2, v0.c0))) CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c4)) BETWEEN ((v0.c0)) AND ((rt1.c4))) ELSE ((('574982567'))=((rt1.c2))) END ORDER BY ((((rt1.c0) IS TRUE)) BETWEEN (((((((((v0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt1.c0))) AND (((rt1.c2) IS FALSE))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) IN ('1121929908'))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt1 ON ((((v0.c1)<>(rt1.c1)))GLOB(json_remove(v0.c2, v0.c2, v0.c2, v0.c0))) CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c4)) BETWEEN ((v0.c0)) AND ((rt1.c4))) ELSE ((('574982567'))=((rt1.c2))) END WHERE (((('' IN ()))LIKE(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c0) IS TRUE)) BETWEEN (((((((((v0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt1.c0))) AND (((rt1.c2) IS FALSE))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) IN ('1121929908'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('' IN ()))LIKE(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((v0.c1)!=(rt1.c1)))GLOB(json_remove(v0.c2, v0.c2, v0.c2, v0.c0))) CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c4)) BETWEEN ((v0.c0)) AND ((rt1.c4))) ELSE ((('574982567'))=((rt1.c2))) END ORDER BY ((((rt1.c0) IS TRUE)) BETWEEN (((((((((v0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt1.c0))) AND (((rt1.c2) IS FALSE))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) IN ('1121929908'))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt1 ON ((((v0.c1)<>(rt1.c1)))GLOB(json_remove(v0.c2, v0.c2, v0.c2, v0.c0))) CROSS JOIN v0 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c4)) BETWEEN ((v0.c0)) AND ((rt1.c4))) ELSE ((('574982567'))=((rt1.c2))) END WHERE (((('' IN ()))LIKE(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c0) IS TRUE)) BETWEEN (((((((((v0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt1.c3)))AND(rt1.c0))) AND (((rt1.c2) IS FALSE))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) IN ('1121929908'))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))LIKE(CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))LIKE(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))LIKE(CAST(v0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))LIKE(CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))LIKE(CAST(v0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(LIKELY(vt0.c0))))OR(vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(vt0.c0)), ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(LIKELY(vt0.c0))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(vt0.c0)), ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(LIKELY(vt0.c0))))OR(vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(vt0.c0)), ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(LIKELY(vt0.c0))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(vt0.c0)), ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(LIKELY(vt0.c0))))OR(vt0.c0))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(vt0.c0)), ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, ((((vt0.c0)>(vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2)>>(v0.c1)))))AND(((((rt0.c2)OR(rt0.c2)))OR(v0.c2)))) WHERE (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt0.c0)) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt0.c0)) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2)>>(v0.c1)))))AND(((((rt0.c2)OR(rt0.c2)))OR(v0.c2)))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2)>>(v0.c1)))))AND(((((rt0.c2)OR(rt0.c2)))OR(v0.c2)))) WHERE (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt0.c0)) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt0.c0)) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2)>>(v0.c1)))))AND(((((rt0.c2)OR(rt0.c2)))OR(v0.c2)))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON ((((((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(x'')))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(((rt0.c2)>>(v0.c1)))))AND(((((rt0.c2)OR(rt0.c2)))OR(v0.c2)))) WHERE (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (vt0.c0)) THEN rt0.c2 COLLATE RTRIM END);
SELECT ALL * FROM rt1, v0, vt0 WHERE (x'ff14' COLLATE BINARY) ORDER BY (('1836647817' COLLATE BINARY)*(CAST(rt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((x'ff14' COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (('1836647817' COLLATE BINARY)*(CAST(rt1.c1 AS NUMERIC))));
SELECT ALL * FROM rt1, v0, vt0 WHERE (x'ff14' COLLATE BINARY) ORDER BY (('1836647817' COLLATE BINARY)*(CAST(rt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((x'ff14' COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, vt0 ORDER BY (('1836647817' COLLATE BINARY)*(CAST(rt1.c1 AS NUMERIC))));
SELECT ALL * FROM rt1, v0, vt0 WHERE (x'ff14' COLLATE BINARY) ORDER BY (('1836647817' COLLATE BINARY)*(CAST(rt1.c1 AS NUMERIC)));
SELECT ALL * FROM rt1, rt0, v0, vt0 WHERE (((((((v0.c1)OR(rt1.c1)))OR(v0.c0))) BETWEEN (((rt0.c2) ISNULL)) AND (((vt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)OR(rt1.c1)))OR(v0.c0))) BETWEEN (((rt0.c2) ISNULL)) AND (((vt0.c0) NOT BETWEEN (NULL) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, v0, vt0);
SELECT ALL * FROM rt1, rt0, v0, vt0 WHERE (((((((v0.c1)OR(rt1.c1)))OR(v0.c0))) BETWEEN (((rt0.c2) ISNULL)) AND (((vt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)OR(rt1.c1)))OR(v0.c0))) BETWEEN (((rt0.c2) ISNULL)) AND (((vt0.c0) NOT BETWEEN (NULL) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, v0, vt0);
SELECT ALL * FROM rt1, rt0, v0, vt0 WHERE (((((((v0.c1)OR(rt1.c1)))OR(v0.c0))) BETWEEN (((rt0.c2) ISNULL)) AND (((vt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (CASE ((((((((rt0.c2)AND(-1850021052)))OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c2))  WHEN v0.c2 COLLATE NOCASE THEN CAST(-63461724 AS BLOB) WHEN (~ (rt1.c2)) THEN ((vt0.c0)OR(rt1.c4)) WHEN (((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)AND(-1850021052)))OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c2))  WHEN v0.c2 COLLATE NOCASE THEN CAST(-63461724 AS BLOB) WHEN (~ (rt1.c2)) THEN ((vt0.c0)OR(rt1.c4)) WHEN (((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) THEN rt0.c1 END) IS TRUE)  as count FROM rt1, rt0, v0, vt0);
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (CASE ((((((((rt0.c2)AND(-1850021052)))OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c2))  WHEN v0.c2 COLLATE NOCASE THEN CAST(-63461724 AS BLOB) WHEN (~ (rt1.c2)) THEN ((vt0.c0)OR(rt1.c4)) WHEN (((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)AND(-1850021052)))OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c2))  WHEN v0.c2 COLLATE NOCASE THEN CAST(-63461724 AS BLOB) WHEN (~ (rt1.c2)) THEN ((vt0.c0)OR(rt1.c4)) WHEN (((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) THEN rt0.c1 END) IS TRUE)  as count FROM rt1, rt0, v0, vt0);
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (CASE ((((((((rt0.c2)AND(-1850021052)))OR(rt0.c2)))AND(rt1.c0)))OR(rt0.c2))  WHEN v0.c2 COLLATE NOCASE THEN CAST(-63461724 AS BLOB) WHEN (~ (rt1.c2)) THEN ((vt0.c0)OR(rt1.c4)) WHEN (((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c0))) THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c1)))%(((v0.c0)%(v0.c1))))) ORDER BY CAST(TRIM(v0.c1) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))%(((v0.c0)%(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(TRIM(v0.c1) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c1)))%(((v0.c0)%(v0.c1))))) ORDER BY CAST(TRIM(v0.c1) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c1)))OR(v0.c1)))%(((v0.c0)%(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CAST(TRIM(v0.c1) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c1)AND(v0.c1)))OR(v0.c1)))%(((v0.c0)%(v0.c1))))) ORDER BY CAST(TRIM(v0.c1) AS NUMERIC) DESC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (CAST(((rt1.c1)%(rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)%(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (CAST(((rt1.c1)%(rt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)%(rt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (CAST(((rt1.c1)%(rt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ORDER BY SQLITE_VERSION() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_VERSION() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ORDER BY SQLITE_VERSION() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_VERSION() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ORDER BY SQLITE_VERSION() ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE (((rt1.c4 COLLATE RTRIM) NOT BETWEEN (DATE('2083476514', rt1.c4, v0.c2)) AND (v0.c2))) ORDER BY ((rt1.c3)<=(TRIM(rt0.c2))) DESC  NULLS FIRST, (((rt0.c1))<((rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE RTRIM) NOT BETWEEN (DATE('2083476514', rt1.c4, v0.c2)) AND (v0.c2))) IS TRUE)  as count FROM v0, rt0, rt1, vt0 ORDER BY ((rt1.c3)<=(TRIM(rt0.c2))) DESC  NULLS FIRST, (((rt0.c1))<((rt1.c1))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE (((rt1.c4 COLLATE RTRIM) NOT BETWEEN (DATE('2083476514', rt1.c4, v0.c2)) AND (v0.c2))) ORDER BY ((rt1.c3)<=(TRIM(rt0.c2))) DESC  NULLS FIRST, (((rt0.c1))<((rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE RTRIM) NOT BETWEEN (DATE('2083476514', rt1.c4, v0.c2)) AND (v0.c2))) IS TRUE)  as count FROM v0, rt0, rt1, vt0 ORDER BY ((rt1.c3)<=(TRIM(rt0.c2))) DESC  NULLS FIRST, (((rt0.c1))<((rt1.c1))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1, vt0 WHERE (((rt1.c4 COLLATE RTRIM) NOT BETWEEN (DATE('2083476514', rt1.c4, v0.c2)) AND (v0.c2))) ORDER BY ((rt1.c3)<=(TRIM(rt0.c2))) DESC  NULLS FIRST, (((rt0.c1))<((rt1.c1)));
SELECT * FROM vt0, rt0 WHERE (x'a6cf');
SELECT SUM(count) FROM (SELECT ALL ((x'a6cf') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'a6cf');
SELECT SUM(count) FROM (SELECT ALL ((x'a6cf') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'a6cf');
SELECT COUNT(*) FROM vt0, rt1 INNER JOIN v0 ON ((((rt0.c0)AND(rt1.c3))) IS TRUE) FULL OUTER JOIN rt0 ON (((rt1.c1 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), (v0.c2 IN ())))<>(((- (v0.c1)), (((('-645474303')OR(vt0.c0)))AND(v0.c0)), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) WHERE (0.9870279782044001);
SELECT SUM(count) FROM (SELECT ((0.9870279782044001) IS TRUE)  as count FROM vt0, rt1 INNER JOIN v0 ON ((((rt0.c0)AND(rt1.c3))) IS TRUE) FULL OUTER JOIN rt0 ON (((rt1.c1 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), (v0.c2 IN ())))<>(((- (v0.c1)), (((('-645474303')OR(vt0.c0)))AND(v0.c0)), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))));
SELECT COUNT(*) FROM vt0, rt1 INNER JOIN v0 ON ((((rt0.c0)AND(rt1.c3))) IS TRUE) FULL OUTER JOIN rt0 ON (((rt1.c1 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), (v0.c2 IN ())))<>(((- (v0.c1)), (((('-645474303')OR(vt0.c0)))AND(v0.c0)), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) WHERE (0.9870279782044001);
SELECT SUM(count) FROM (SELECT ((0.9870279782044001) IS TRUE)  as count FROM vt0, rt1 INNER JOIN v0 ON ((((rt0.c0)AND(rt1.c3))) IS TRUE) FULL OUTER JOIN rt0 ON (((rt1.c1 COLLATE NOCASE, CAST(v0.c0 AS NUMERIC), (v0.c2 IN ())))<>(((- (v0.c1)), (((('-645474303')OR(vt0.c0)))AND(v0.c0)), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, rt1 WHERE (TRIM(CAST('667478888' AS TEXT), ABS(x''))) ORDER BY (((rt1.c2)IS(rt1.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST('667478888' AS TEXT), ABS(x''))) IS TRUE)  as count FROM vt0, v0, rt0, rt1 ORDER BY (((rt1.c2)IS(rt1.c4)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, rt1 WHERE (TRIM(CAST('667478888' AS TEXT), ABS(x''))) ORDER BY (((rt1.c2)IS(rt1.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST('667478888' AS TEXT), ABS(x''))) IS TRUE)  as count FROM vt0, v0, rt0, rt1 ORDER BY (((rt1.c2)IS(rt1.c4)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, rt1 WHERE (TRIM(CAST('667478888' AS TEXT), ABS(x''))) ORDER BY (((rt1.c2)IS(rt1.c4)) IN ())  NULLS FIRST;
SELECT * FROM rt1, v0, rt0 WHERE (((+ (rt1.c2)) IN (rt0.c2, rt1.c3 COLLATE NOCASE))) ORDER BY CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c2)) IN (rt0.c2, rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM rt1, v0, rt0 WHERE (((+ (rt1.c2)) IN (rt0.c2, rt1.c3 COLLATE NOCASE))) ORDER BY CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c2)) IN (rt0.c2, rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM rt1, v0, rt0 WHERE (((+ (rt1.c2)) IN (rt0.c2, rt1.c3 COLLATE NOCASE))) ORDER BY CAST(((rt0.c0)LIKE(v0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)/(v0.c2))) BETWEEN ((('xB듋efᐿ-X')OR(v0.c1))) AND (COALESCE(v0.c0, v0.c1, v0.c2, '')))) ORDER BY (((((v0.c1))>=((v0.c0))))IS(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)/(v0.c2))) BETWEEN ((('xB듋efᐿ-X')OR(v0.c1))) AND (COALESCE(v0.c0, v0.c1, v0.c2, '')))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1))>=((v0.c0))))IS(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)/(v0.c2))) BETWEEN ((('xB듋efᐿ-X')OR(v0.c1))) AND (COALESCE(v0.c0, v0.c1, v0.c2, '')))) ORDER BY (((((v0.c1))>=((v0.c0))))IS(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)/(v0.c2))) BETWEEN ((('xB듋efᐿ-X')OR(v0.c1))) AND (COALESCE(v0.c0, v0.c1, v0.c2, '')))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1))>=((v0.c0))))IS(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)/(v0.c2))) BETWEEN ((('xB듋efᐿ-X')OR(v0.c1))) AND (COALESCE(v0.c0, v0.c1, v0.c2, '')))) ORDER BY (((((v0.c1))>=((v0.c0))))IS(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN rt0 ON 0.11751305761588127 RIGHT OUTER JOIN v0 ON ((rt0.c0) ISNULL) WHERE ((((vt0.c0, rt0.c2, rt1.c4, x'fbcb', rt0.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((((rt0.c1)<(rt0.c2)), (NOT (v0.c2)), 35524045, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS REAL), ((v0.c1) NOT NULL), rt1.c4 COLLATE RTRIM)) AND ((((rt1.c1)IS(rt0.c2)), (+ (v0.c2)), NULL, (vt0.c0 IN ()), LIKELY(v0.c0), ((((rt1.c0)AND(rt1.c1)))OR(rt0.c0)), ((v0.c1)-(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt1.c4, x'fbcb', rt0.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((((rt0.c1)<(rt0.c2)), (NOT (v0.c2)), 35524045, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS REAL), ((v0.c1) NOT NULL), rt1.c4 COLLATE RTRIM)) AND ((((rt1.c1)IS(rt0.c2)), (+ (v0.c2)), NULL, (vt0.c0 IN ()), LIKELY(v0.c0), ((((rt1.c0)AND(rt1.c1)))OR(rt0.c0)), ((v0.c1)-(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON 0.11751305761588127 RIGHT OUTER JOIN v0 ON ((rt0.c0) ISNULL));
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN rt0 ON 0.11751305761588127 RIGHT OUTER JOIN v0 ON ((rt0.c0) ISNULL) WHERE ((((vt0.c0, rt0.c2, rt1.c4, x'fbcb', rt0.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((((rt0.c1)<(rt0.c2)), (NOT (v0.c2)), 35524045, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS REAL), ((v0.c1) NOT NULL), rt1.c4 COLLATE RTRIM)) AND ((((rt1.c1)IS(rt0.c2)), (+ (v0.c2)), NULL, (vt0.c0 IN ()), LIKELY(v0.c0), ((((rt1.c0)AND(rt1.c1)))OR(rt0.c0)), ((v0.c1)-(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt1.c4, x'fbcb', rt0.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((((rt0.c1)<(rt0.c2)), (NOT (v0.c2)), 35524045, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS REAL), ((v0.c1) NOT NULL), rt1.c4 COLLATE RTRIM)) AND ((((rt1.c1)IS(rt0.c2)), (+ (v0.c2)), NULL, (vt0.c0 IN ()), LIKELY(v0.c0), ((((rt1.c0)AND(rt1.c1)))OR(rt0.c0)), ((v0.c1)-(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON 0.11751305761588127 RIGHT OUTER JOIN v0 ON ((rt0.c0) ISNULL));
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN rt0 ON 0.11751305761588127 RIGHT OUTER JOIN v0 ON ((rt0.c0) ISNULL) WHERE ((((vt0.c0, rt0.c2, rt1.c4, x'fbcb', rt0.c2, rt0.c0, rt1.c1)) NOT BETWEEN ((((rt0.c1)<(rt0.c2)), (NOT (v0.c2)), 35524045, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS REAL), ((v0.c1) NOT NULL), rt1.c4 COLLATE RTRIM)) AND ((((rt1.c1)IS(rt0.c2)), (+ (v0.c2)), NULL, (vt0.c0 IN ()), LIKELY(v0.c0), ((((rt1.c0)AND(rt1.c1)))OR(rt0.c0)), ((v0.c1)-(rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c3 AS INTEGER) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE WHEN rt1.c4 THEN rt1.c1 END)) CROSS JOIN rt1 ON ((rt0.c0) ISNULL) WHERE (((((rt0.c1) NOT NULL))+(((((vt0.c0)AND(rt1.c4)))AND(NULL))))) ORDER BY (((rt0.c2))>((((((((((((((rt1.c3)AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))+(((((vt0.c0)AND(rt1.c4)))AND(NULL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE WHEN rt1.c4 THEN rt1.c1 END)) CROSS JOIN rt1 ON ((rt0.c0) ISNULL) ORDER BY (((rt0.c2))>((((((((((((((rt1.c3)AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE WHEN rt1.c4 THEN rt1.c1 END)) CROSS JOIN rt1 ON ((rt0.c0) ISNULL) WHERE (((((rt0.c1) NOT NULL))+(((((vt0.c0)AND(rt1.c4)))AND(NULL))))) ORDER BY (((rt0.c2))>((((((((((((((rt1.c3)AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))+(((((vt0.c0)AND(rt1.c4)))AND(NULL))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (CASE WHEN rt1.c4 THEN rt1.c1 END)) CROSS JOIN rt1 ON ((rt0.c0) ISNULL) ORDER BY (((rt0.c2))>((((((((((((((rt1.c3)AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('P%L⨊伥s') ORDER BY '-560002972';
SELECT SUM(count) FROM (SELECT ALL (('P%L⨊伥s') IS TRUE)  as count FROM vt0 ORDER BY '-560002972');
SELECT * FROM vt0 WHERE ('P%L⨊伥s') ORDER BY '-560002972';
SELECT SUM(count) FROM (SELECT ALL (('P%L⨊伥s') IS TRUE)  as count FROM vt0 ORDER BY '-560002972');
SELECT * FROM vt0 WHERE ('P%L⨊伥s') ORDER BY '-560002972';
SELECT ALL * FROM rt1, vt0 CROSS JOIN v0 ON ((((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)))AND(((rt1.c2)GLOB(rt0.c0)))))OR(((rt1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON ((0X36667936) BETWEEN ((((('')OR(v0.c2)))AND(rt0.c2))) AND (TYPEOF(rt1.c1))) WHERE (((((v0.c2 COLLATE BINARY)OR(((rt0.c1) BETWEEN (rt1.c3) AND ('1967868892')))))OR(CAST(rt1.c1 AS INTEGER)))) ORDER BY ((((((((((v0.c0) BETWEEN (0.6145537753878965) AND (rt1.c3)))AND(((((((((v0.c1)OR(vt0.c0)))AND(0.7026647770182044)))OR(0.7972583798699858)))AND(v0.c1)))))AND(v0.c2)))OR(CAST(vt0.c0 AS REAL))))OR(((v0.c2)!=(0xffffffffcb5a429e)))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 COLLATE BINARY)OR(((rt0.c1) BETWEEN (rt1.c3) AND ('1967868892')))))OR(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN v0 ON ((((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)))AND(((rt1.c2)GLOB(rt0.c0)))))OR(((rt1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON ((0X36667936) BETWEEN ((((('')OR(v0.c2)))AND(rt0.c2))) AND (TYPEOF(rt1.c1))) ORDER BY ((((((((((v0.c0) BETWEEN (0.6145537753878965) AND (rt1.c3)))AND(((((((((v0.c1)OR(vt0.c0)))AND(0.7026647770182044)))OR(0.7972583798699858)))AND(v0.c1)))))AND(v0.c2)))OR(CAST(vt0.c0 AS REAL))))OR(((v0.c2)!=(0xffffffffcb5a429e)))), rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 CROSS JOIN v0 ON ((((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)))AND(((rt1.c2)GLOB(rt0.c0)))))OR(((rt1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON ((0X36667936) BETWEEN ((((('')OR(v0.c2)))AND(rt0.c2))) AND (TYPEOF(rt1.c1))) WHERE (((((v0.c2 COLLATE BINARY)OR(((rt0.c1) BETWEEN (rt1.c3) AND ('1967868892')))))OR(CAST(rt1.c1 AS INTEGER)))) ORDER BY ((((((((((v0.c0) BETWEEN (0.6145537753878965) AND (rt1.c3)))AND(((((((((v0.c1)OR(vt0.c0)))AND(0.7026647770182044)))OR(0.7972583798699858)))AND(v0.c1)))))AND(v0.c2)))OR(CAST(vt0.c0 AS REAL))))OR(((v0.c2)!=(0xffffffffcb5a429e)))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 COLLATE BINARY)OR(((rt0.c1) BETWEEN (rt1.c3) AND ('1967868892')))))OR(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN v0 ON ((((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)))AND(((rt1.c2)GLOB(rt0.c0)))))OR(((rt1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON ((0X36667936) BETWEEN ((((('')OR(v0.c2)))AND(rt0.c2))) AND (TYPEOF(rt1.c1))) ORDER BY ((((((((((v0.c0) BETWEEN (0.6145537753878965) AND (rt1.c3)))AND(((((((((v0.c1)OR(vt0.c0)))AND(0.7026647770182044)))OR(0.7972583798699858)))AND(v0.c1)))))AND(v0.c2)))OR(CAST(vt0.c0 AS REAL))))OR(((v0.c2)!=(0xffffffffcb5a429e)))), rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 CROSS JOIN v0 ON ((((((rt1.c2) BETWEEN (v0.c2) AND (v0.c2)))AND(((rt1.c2)GLOB(rt0.c0)))))OR(((rt1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) CROSS JOIN rt0 ON ((0X36667936) BETWEEN ((((('')OR(v0.c2)))AND(rt0.c2))) AND (TYPEOF(rt1.c1))) WHERE (((((v0.c2 COLLATE BINARY)OR(((rt0.c1) BETWEEN (rt1.c3) AND ('1967868892')))))OR(CAST(rt1.c1 AS INTEGER)))) ORDER BY ((((((((((v0.c0) BETWEEN (0.6145537753878965) AND (rt1.c3)))AND(((((((((v0.c1)OR(vt0.c0)))AND(0.7026647770182044)))OR(0.7972583798699858)))AND(v0.c1)))))AND(v0.c2)))OR(CAST(vt0.c0 AS REAL))))OR(((v0.c2)!=(0xffffffffcb5a429e)))), rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((((v0.c1)OR(v0.c1)))AND(x'49e4')))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(NULL)))OR(((v0.c0)>=(0.9843161255266666)))))AND('0.7449678526898166')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c1)OR(v0.c1)))AND(x'49e4')))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(NULL)))OR(((v0.c0)>=(0.9843161255266666)))))AND('0.7449678526898166'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((((v0.c1)OR(v0.c1)))AND(x'49e4')))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(NULL)))OR(((v0.c0)>=(0.9843161255266666)))))AND('0.7449678526898166')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c1)OR(v0.c1)))AND(x'49e4')))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(NULL)))OR(((v0.c0)>=(0.9843161255266666)))))AND('0.7449678526898166'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((((((v0.c1)OR(v0.c1)))AND(x'49e4')))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))OR(NULL)))OR(((v0.c0)>=(0.9843161255266666)))))AND('0.7449678526898166')));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))%(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))%(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))%(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))%(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))%(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (NULL) AND ((((rt1.c3, rt1.c1, rt1.c4))=((rt0.c0, v0.c2, rt1.c3))))) RIGHT OUTER JOIN rt0 ON (((v0.c2)) NOT BETWEEN ((((rt1.c2)>(rt1.c0)))) AND ((rt1.c3 COLLATE RTRIM))) RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c1 THEN rt1.c3 WHEN 0.7607084638400291 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '' END THEN v0.c0 COLLATE BINARY END WHERE ((((((((((rt0.c0)AND(x'')))AND(vt0.c0)))AND(rt1.c4)))AND(rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)AND(x'')))AND(vt0.c0)))AND(rt1.c4)))AND(rt1.c4)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (NULL) AND ((((rt1.c3, rt1.c1, rt1.c4))==((rt0.c0, v0.c2, rt1.c3))))) RIGHT OUTER JOIN rt0 ON (((v0.c2)) NOT BETWEEN ((((rt1.c2)>(rt1.c0)))) AND ((rt1.c3 COLLATE RTRIM))) RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c1 THEN rt1.c3 WHEN 0.7607084638400291 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '' END THEN v0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (NULL) AND ((((rt1.c3, rt1.c1, rt1.c4))=((rt0.c0, v0.c2, rt1.c3))))) RIGHT OUTER JOIN rt0 ON (((v0.c2)) NOT BETWEEN ((((rt1.c2)>(rt1.c0)))) AND ((rt1.c3 COLLATE RTRIM))) RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c1 THEN rt1.c3 WHEN 0.7607084638400291 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '' END THEN v0.c0 COLLATE BINARY END WHERE ((((((((((rt0.c0)AND(x'')))AND(vt0.c0)))AND(rt1.c4)))AND(rt1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)AND(x'')))AND(vt0.c0)))AND(rt1.c4)))AND(rt1.c4)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (NULL) AND ((((rt1.c3, rt1.c1, rt1.c4))==((rt0.c0, v0.c2, rt1.c3))))) RIGHT OUTER JOIN rt0 ON (((v0.c2)) NOT BETWEEN ((((rt1.c2)>(rt1.c0)))) AND ((rt1.c3 COLLATE RTRIM))) RIGHT OUTER JOIN rt1 ON CASE WHEN CASE WHEN rt0.c1 THEN rt1.c3 WHEN 0.7607084638400291 THEN v0.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '' END THEN v0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY ((((v0.c2)<=(0.8163735431606173))) NOT BETWEEN (((rt0.c2)<(v0.c2))) AND (CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)), (((((v0.c1, '-1150744317', rt0.c2))>((v0.c2, rt0.c0, v0.c1))))IS NOT((+ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2)<=(0.8163735431606173))) NOT BETWEEN (((rt0.c2)<(v0.c2))) AND (CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)), (((((v0.c1, '-1150744317', rt0.c2))>((v0.c2, rt0.c0, v0.c1))))IS NOT((+ (v0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY ((((v0.c2)<=(0.8163735431606173))) NOT BETWEEN (((rt0.c2)<(v0.c2))) AND (CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)), (((((v0.c1, '-1150744317', rt0.c2))>((v0.c2, rt0.c0, v0.c1))))IS NOT((+ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c2)<=(0.8163735431606173))) NOT BETWEEN (((rt0.c2)<(v0.c2))) AND (CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)), (((((v0.c1, '-1150744317', rt0.c2))>((v0.c2, rt0.c0, v0.c1))))IS NOT((+ (v0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY ((((v0.c2)<=(0.8163735431606173))) NOT BETWEEN (((rt0.c2)<(v0.c2))) AND (CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END)), (((((v0.c1, '-1150744317', rt0.c2))>((v0.c2, rt0.c0, v0.c1))))IS NOT((+ (v0.c0)))) ASC;
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE ((NOT (((((rt0.c0)AND('-1099476410')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)AND('-1099476410')))OR(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1, v0);
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE ((NOT (((((rt0.c0)AND('-1099476410')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c0)AND('-1099476410')))OR(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1, v0);
SELECT ALL * FROM vt0, rt0, rt1, v0 WHERE ((NOT (((((rt0.c0)AND('-1099476410')))OR(v0.c0)))));
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN vt0 ON (+ ((((rt1.c1)) BETWEEN ((v0.c1)) AND ((rt1.c1))))) WHERE (9.18059488E8) ORDER BY json_array(((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.6920395581985954)), HEX(rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((9.18059488E8) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt0 ON (+ ((((rt1.c1)) BETWEEN ((v0.c1)) AND ((rt1.c1))))) ORDER BY json_array(((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.6920395581985954)), HEX(rt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN vt0 ON (+ ((((rt1.c1)) BETWEEN ((v0.c1)) AND ((rt1.c1))))) WHERE (9.18059488E8) ORDER BY json_array(((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.6920395581985954)), HEX(rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((9.18059488E8) IS TRUE)  as count FROM v0, rt1 INNER JOIN vt0 ON (+ ((((rt1.c1)) BETWEEN ((v0.c1)) AND ((rt1.c1))))) ORDER BY json_array(((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.6920395581985954)), HEX(rt1.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1 INNER JOIN vt0 ON (+ ((((rt1.c1)) BETWEEN ((v0.c1)) AND ((rt1.c1))))) WHERE (9.18059488E8) ORDER BY json_array(((vt0.c0) NOT BETWEEN (rt1.c0) AND (0.6920395581985954)), HEX(rt1.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))AND(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))AND(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))AND(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))AND(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY ((DATETIME(rt0.c2, rt0.c0, rt0.c1))AND(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c2 AS INTEGER));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY '154796456' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY '154796456' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY '154796456' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY '154796456' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY '154796456' ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (((CAST(rt1.c2 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, v0, vt0);
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (((CAST(rt1.c2 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, v0, vt0);
SELECT COUNT(*) FROM rt1, rt0, v0, vt0 WHERE (((CAST(rt1.c2 AS BLOB)) IS FALSE));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (x'1450')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (x'1450')) COLLATE BINARY);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (x'1450')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (x'1450')) COLLATE BINARY);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (x'1450')) COLLATE BINARY;
SELECT * FROM rt0, v0, rt1, vt0 WHERE (CASE WHEN ((rt1.c2)<>(rt0.c1)) THEN rt0.c2 COLLATE NOCASE END) ORDER BY (((rt1.c3)) BETWEEN ((vt0.c0)) AND ((v0.c2))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<>(rt0.c1)) THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0, rt1, vt0 ORDER BY (((rt1.c3)) BETWEEN ((vt0.c0)) AND ((v0.c2))) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt0, v0, rt1, vt0 WHERE (CASE WHEN ((rt1.c2)<>(rt0.c1)) THEN rt0.c2 COLLATE NOCASE END) ORDER BY (((rt1.c3)) BETWEEN ((vt0.c0)) AND ((v0.c2))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<>(rt0.c1)) THEN rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0, rt1, vt0 ORDER BY (((rt1.c3)) BETWEEN ((vt0.c0)) AND ((v0.c2))) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt0, v0, rt1, vt0 WHERE (CASE WHEN ((rt1.c2)<>(rt0.c1)) THEN rt0.c2 COLLATE NOCASE END) ORDER BY (((rt1.c3)) BETWEEN ((vt0.c0)) AND ((v0.c2))) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((((rt1.c4) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4) ISNULL)) IS TRUE)  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((((rt1.c4) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4) ISNULL)) IS TRUE)  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c3) ORDER BY ((((rt1.c4) ISNULL)) IS TRUE)  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0))) ISNULL) WHERE (' R' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((' R' COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0))) ISNULL));
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0))) ISNULL) WHERE (' R' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((' R' COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0))) ISNULL));
SELECT * FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0))) ISNULL) WHERE (' R' COLLATE NOCASE);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN -1.460216988E9 THEN ((rt1.c3)-(rt1.c2)) WHEN ((x'')*(rt1.c0)) THEN (rt1.c1 IN ()) WHEN CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END ELSE CAST(x'd659' AS TEXT) END WHERE (((((((rt1.c2)AND(rt0.c2)))OR(rt0.c0)))<<(((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt0.c2)))OR(rt0.c0)))<<(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN -1.460216988E9 THEN ((rt1.c3)-(rt1.c2)) WHEN ((x'')*(rt1.c0)) THEN (rt1.c1 IN ()) WHEN CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END ELSE CAST(x'd659' AS TEXT) END);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN -1.460216988E9 THEN ((rt1.c3)-(rt1.c2)) WHEN ((x'')*(rt1.c0)) THEN (rt1.c1 IN ()) WHEN CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END ELSE CAST(x'd659' AS TEXT) END WHERE (((((((rt1.c2)AND(rt0.c2)))OR(rt0.c0)))<<(((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt0.c2)))OR(rt0.c0)))<<(((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN -1.460216988E9 THEN ((rt1.c3)-(rt1.c2)) WHEN ((x'')*(rt1.c0)) THEN (rt1.c1 IN ()) WHEN CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END ELSE CAST(x'd659' AS TEXT) END);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN -1.460216988E9 THEN ((rt1.c3)-(rt1.c2)) WHEN ((x'')*(rt1.c0)) THEN (rt1.c1 IN ()) WHEN CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END THEN CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END ELSE CAST(x'd659' AS TEXT) END WHERE (((((((rt1.c2)AND(rt0.c2)))OR(rt0.c0)))<<(((rt0.c0)%(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (0.6279021418745688) AND (rt0.c1)))IS NOT((rt1.c4 IN ())))) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)) COLLATE NOCASE, ((rt1.c4 COLLATE BINARY)IS NOT(CAST(rt0.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (0.6279021418745688) AND (rt0.c1)))IS NOT((rt1.c4 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)) COLLATE NOCASE, ((rt1.c4 COLLATE BINARY)IS NOT(CAST(rt0.c2 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (0.6279021418745688) AND (rt0.c1)))IS NOT((rt1.c4 IN ())))) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)) COLLATE NOCASE, ((rt1.c4 COLLATE BINARY)IS NOT(CAST(rt0.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (0.6279021418745688) AND (rt0.c1)))IS NOT((rt1.c4 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)) COLLATE NOCASE, ((rt1.c4 COLLATE BINARY)IS NOT(CAST(rt0.c2 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2) NOT BETWEEN (0.6279021418745688) AND (rt0.c1)))IS NOT((rt1.c4 IN ())))) ORDER BY ((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)) COLLATE NOCASE, ((rt1.c4 COLLATE BINARY)IS NOT(CAST(rt0.c2 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))) ISNULL));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)-(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)-(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)-(vt0.c0))) NOTNULL));
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((-1.38361532E9, (v0.c0 IN ()), v0.c1))<=((((v0.c2)LIKE(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0) NOT NULL))))) ORDER BY CASE LIKELY(0.278524025325086)  WHEN CAST(NULL AS TEXT) THEN (((v0.c2, v0.c0, v0.c0))<=((v0.c2, v0.c2, v0.c1))) ELSE '154796456' END, CASE WHEN 'qj' THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST, ((v0.c2) BETWEEN (((v0.c2) IS FALSE)) AND (CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-1.38361532E9, (v0.c0 IN ()), v0.c1))<=((((v0.c2)LIKE(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0 ORDER BY CASE LIKELY(0.278524025325086)  WHEN CAST(NULL AS TEXT) THEN (((v0.c2, v0.c0, v0.c0))<=((v0.c2, v0.c2, v0.c1))) ELSE '154796456' END, CASE WHEN 'qj' THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST, ((v0.c2) BETWEEN (((v0.c2) IS FALSE)) AND (CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((-1.38361532E9, (v0.c0 IN ()), v0.c1))<=((((v0.c2)LIKE(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0) NOT NULL))))) ORDER BY CASE LIKELY(0.278524025325086)  WHEN CAST(NULL AS TEXT) THEN (((v0.c2, v0.c0, v0.c0))<=((v0.c2, v0.c2, v0.c1))) ELSE '154796456' END, CASE WHEN 'qj' THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST, ((v0.c2) BETWEEN (((v0.c2) IS FALSE)) AND (CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-1.38361532E9, (v0.c0 IN ()), v0.c1))<=((((v0.c2)LIKE(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0) NOT NULL))))) IS TRUE)  as count FROM v0 ORDER BY CASE LIKELY(0.278524025325086)  WHEN CAST(NULL AS TEXT) THEN (((v0.c2, v0.c0, v0.c0))<=((v0.c2, v0.c2, v0.c1))) ELSE '154796456' END, CASE WHEN 'qj' THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST, ((v0.c2) BETWEEN (((v0.c2) IS FALSE)) AND (CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((-1.38361532E9, (v0.c0 IN ()), v0.c1))<=((((v0.c2)LIKE(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c1)), ((v0.c0) NOT NULL))))) ORDER BY CASE LIKELY(0.278524025325086)  WHEN CAST(NULL AS TEXT) THEN (((v0.c2, v0.c0, v0.c0))<=((v0.c2, v0.c2, v0.c1))) ELSE '154796456' END, CASE WHEN 'qj' THEN (v0.c0 IN ()) ELSE (v0.c2 IN ()) END  NULLS FIRST, ((v0.c2) BETWEEN (((v0.c2) IS FALSE)) AND (CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END)) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c4);
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE (('' IN (rt0.c2 COLLATE RTRIM, CASE v0.c1  WHEN rt0.c1 THEN rt1.c3 END))) ORDER BY CAST(rt1.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((('' IN (rt0.c2 COLLATE RTRIM, CASE v0.c1  WHEN rt0.c1 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY CAST(rt1.c1 AS BLOB) DESC);
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE (('' IN (rt0.c2 COLLATE RTRIM, CASE v0.c1  WHEN rt0.c1 THEN rt1.c3 END))) ORDER BY CAST(rt1.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((('' IN (rt0.c2 COLLATE RTRIM, CASE v0.c1  WHEN rt0.c1 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, v0, rt0, vt0 ORDER BY CAST(rt1.c1 AS BLOB) DESC);
SELECT ALL * FROM rt1, v0, rt0, vt0 WHERE (('' IN (rt0.c2 COLLATE RTRIM, CASE v0.c1  WHEN rt0.c1 THEN rt1.c3 END))) ORDER BY CAST(rt1.c1 AS BLOB) DESC;
SELECT COUNT(*) FROM rt0, v0, vt0, rt1 WHERE (((((CAST(v0.c2 AS BLOB))AND('-2')))AND(0.27041286004882215))) ORDER BY ((('-1493332643')) BETWEEN ((SQLITE_SOURCE_ID())) AND ((NULL)))  NULLS LAST, (- ((((v0.c0))>=((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c2 AS BLOB))AND('-2')))AND(0.27041286004882215))) IS TRUE)  as count FROM rt0, v0, vt0, rt1 ORDER BY ((('-1493332643')) BETWEEN ((SQLITE_SOURCE_ID())) AND ((NULL)))  NULLS LAST, (- ((((v0.c0))>=((NULL)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0, rt1 WHERE (((((CAST(v0.c2 AS BLOB))AND('-2')))AND(0.27041286004882215))) ORDER BY ((('-1493332643')) BETWEEN ((SQLITE_SOURCE_ID())) AND ((NULL)))  NULLS LAST, (- ((((v0.c0))>=((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c2 AS BLOB))AND('-2')))AND(0.27041286004882215))) IS TRUE)  as count FROM rt0, v0, vt0, rt1 ORDER BY ((('-1493332643')) BETWEEN ((SQLITE_SOURCE_ID())) AND ((NULL)))  NULLS LAST, (- ((((v0.c0))>=((NULL)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0, rt1 WHERE (((((CAST(v0.c2 AS BLOB))AND('-2')))AND(0.27041286004882215))) ORDER BY ((('-1493332643')) BETWEEN ((SQLITE_SOURCE_ID())) AND ((NULL)))  NULLS LAST, (- ((((v0.c0))>=((NULL)))))  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0)IS(rt0.c2)) AS TEXT) CROSS JOIN rt0 ON ((((v0.c1)IS(0.736060148472565))) BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) NOTNULL))) WHERE ((((+ (rt1.c1))) IS FALSE)) ORDER BY (~ (((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, CAST(CASE WHEN v0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 END AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0)IS(rt0.c2)) AS TEXT) CROSS JOIN rt0 ON ((((v0.c1)IS(0.736060148472565))) BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) NOTNULL))) ORDER BY (~ (((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, CAST(CASE WHEN v0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 END AS BLOB) ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0)IS(rt0.c2)) AS TEXT) CROSS JOIN rt0 ON ((((v0.c1)IS(0.736060148472565))) BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) NOTNULL))) WHERE ((((+ (rt1.c1))) IS FALSE)) ORDER BY (~ (((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, CAST(CASE WHEN v0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 END AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt0.c0)IS(rt0.c2)) AS TEXT) CROSS JOIN rt0 ON ((((v0.c1)IS(0.736060148472565))) BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0) NOTNULL))) ORDER BY (~ (((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, CAST(CASE WHEN v0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 END AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((- (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((- (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((- (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (((rt0.c0)|(rt0.c2))))) ORDER BY (((((0.3094776373417034)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))) BETWEEN (((((vt0.c0)OR(rt1.c3)))AND(rt0.c1))) AND (((rt1.c1)<(x''))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((((0.3094776373417034)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))) BETWEEN (((((vt0.c0)OR(rt1.c3)))AND(rt0.c1))) AND (((rt1.c1)<(x'')))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (((rt0.c0)|(rt0.c2))))) ORDER BY (((((0.3094776373417034)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))) BETWEEN (((((vt0.c0)OR(rt1.c3)))AND(rt0.c1))) AND (((rt1.c1)<(x''))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((((0.3094776373417034)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))) BETWEEN (((((vt0.c0)OR(rt1.c3)))AND(rt0.c1))) AND (((rt1.c1)<(x'')))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (((rt0.c0)|(rt0.c2))))) ORDER BY (((((0.3094776373417034)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c4)))) BETWEEN (((((vt0.c0)OR(rt1.c3)))AND(rt0.c1))) AND (((rt1.c1)<(x''))));
SELECT ALL * FROM rt0, rt1, vt0, v0 WHERE (((NULL) NOT BETWEEN ('-374910093') AND ((- (rt0.c2))))) ORDER BY ((((((((((((-593785226)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c1 COLLATE RTRIM)))OR((~ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ('-374910093') AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0, v0 ORDER BY ((((((((((((-593785226)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c1 COLLATE RTRIM)))OR((~ (rt1.c3)))));
SELECT ALL * FROM rt0, rt1, vt0, v0 WHERE (((NULL) NOT BETWEEN ('-374910093') AND ((- (rt0.c2))))) ORDER BY ((((((((((((-593785226)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c1 COLLATE RTRIM)))OR((~ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ('-374910093') AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt0, v0 ORDER BY ((((((((((((-593785226)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c1 COLLATE RTRIM)))OR((~ (rt1.c3)))));
SELECT ALL * FROM rt0, rt1, vt0, v0 WHERE (((NULL) NOT BETWEEN ('-374910093') AND ((- (rt0.c2))))) ORDER BY ((((((((((((-593785226)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c1 COLLATE RTRIM)))OR((~ (rt1.c3))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0 WHERE ((NOT (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0 WHERE ((NOT (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, v0 WHERE ((NOT (rt1.c1)) COLLATE RTRIM);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3 IN (rt1.c4)))>>(rt1.c3)) WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN x'' END)OR(0.6490010389330481)))OR(rt1.c1 COLLATE RTRIM))) ORDER BY ((((((((((rt1.c3)OR(rt1.c2)))OR(highlight(rt1.c0, rt1.c1, rt1.c0, rt1.c0))))OR(((rt1.c1)>>(rt1.c0)))))AND((((rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, '-2081326251')) AND ((rt1.c1, rt1.c2, rt1.c4))))))OR(CAST(rt1.c3 AS REAL)))  NULLS FIRST, -1456536499  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN x'' END)OR(0.6490010389330481)))OR(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3 IN (rt1.c4)))>>(rt1.c3)) ORDER BY ((((((((((rt1.c3)OR(rt1.c2)))OR(highlight(rt1.c0, rt1.c1, rt1.c0, rt1.c0))))OR(((rt1.c1)>>(rt1.c0)))))AND((((rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, '-2081326251')) AND ((rt1.c1, rt1.c2, rt1.c4))))))OR(CAST(rt1.c3 AS REAL)))  NULLS FIRST, -1456536499  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3 IN (rt1.c4)))>>(rt1.c3)) WHERE (((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN x'' END)OR(0.6490010389330481)))OR(rt1.c1 COLLATE RTRIM))) ORDER BY ((((((((((rt1.c3)OR(rt1.c2)))OR(highlight(rt1.c0, rt1.c1, rt1.c0, rt1.c0))))OR(((rt1.c1)>>(rt1.c0)))))AND((((rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, '-2081326251')) AND ((rt1.c1, rt1.c2, rt1.c4))))))OR(CAST(rt1.c3 AS REAL)))  NULLS FIRST, -1456536499  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN x'' END)OR(0.6490010389330481)))OR(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c3 IN (rt1.c4)))>>(rt1.c3)) ORDER BY ((((((((((rt1.c3)OR(rt1.c2)))OR(highlight(rt1.c0, rt1.c1, rt1.c0, rt1.c0))))OR(((rt1.c1)>>(rt1.c0)))))AND((((rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c3, rt1.c4, '-2081326251')) AND ((rt1.c1, rt1.c2, rt1.c4))))))OR(CAST(rt1.c3 AS REAL)))  NULLS FIRST, -1456536499  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt1 WHERE (((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((rt1.c0)-(vt0.c0)))OR((v0.c0 IN ()))), CASE rt1.c4 COLLATE NOCASE  WHEN ((((NULL)AND(v0.c1)))OR(rt1.c2)) THEN v0.c1 WHEN ((rt1.c2) NOTNULL) THEN (rt1.c4 IN (vt0.c0, rt1.c1)) WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 ELSE v0.c2 END THEN (rt1.c3 IN (rt1.c3, NULL)) END;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((rt1.c0)-(vt0.c0)))OR((v0.c0 IN ()))), CASE rt1.c4 COLLATE NOCASE  WHEN ((((NULL)AND(v0.c1)))OR(rt1.c2)) THEN v0.c1 WHEN ((rt1.c2) NOTNULL) THEN (rt1.c4 IN (vt0.c0, rt1.c1)) WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 ELSE v0.c2 END THEN (rt1.c3 IN (rt1.c3, NULL)) END);
SELECT ALL * FROM vt0, v0, rt1 WHERE (((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((rt1.c0)-(vt0.c0)))OR((v0.c0 IN ()))), CASE rt1.c4 COLLATE NOCASE  WHEN ((((NULL)AND(v0.c1)))OR(rt1.c2)) THEN v0.c1 WHEN ((rt1.c2) NOTNULL) THEN (rt1.c4 IN (vt0.c0, rt1.c1)) WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 ELSE v0.c2 END THEN (rt1.c3 IN (rt1.c3, NULL)) END;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt1 ORDER BY ((((rt1.c0)-(vt0.c0)))OR((v0.c0 IN ()))), CASE rt1.c4 COLLATE NOCASE  WHEN ((((NULL)AND(v0.c1)))OR(rt1.c2)) THEN v0.c1 WHEN ((rt1.c2) NOTNULL) THEN (rt1.c4 IN (vt0.c0, rt1.c1)) WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 ELSE v0.c2 END THEN (rt1.c3 IN (rt1.c3, NULL)) END);
SELECT ALL * FROM vt0, v0, rt1 WHERE (((((rt1.c2)AND(rt1.c4)))OR(rt1.c4)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((rt1.c0)-(vt0.c0)))OR((v0.c0 IN ()))), CASE rt1.c4 COLLATE NOCASE  WHEN ((((NULL)AND(v0.c1)))OR(rt1.c2)) THEN v0.c1 WHEN ((rt1.c2) NOTNULL) THEN (rt1.c4 IN (vt0.c0, rt1.c1)) WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c0 THEN rt1.c3 ELSE v0.c2 END THEN (rt1.c3 IN (rt1.c3, NULL)) END;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL))/(((rt1.c4)>(rt1.c1))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))/(((rt1.c4)>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL))/(((rt1.c4)>(rt1.c1))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))/(((rt1.c4)>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT NULL))/(((rt1.c4)>(rt1.c1))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT * FROM rt0 WHERE ((('')>=(''))) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL (((('')>=(''))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(NULL)));
SELECT * FROM rt0 WHERE ((('')>=(''))) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL (((('')>=(''))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(NULL)));
SELECT * FROM rt0 WHERE ((('')>=(''))) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(NULL));
SELECT ALL * FROM rt1, v0, vt0 WHERE (NULLIF((858712039 IN (rt1.c0)), (NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF((858712039 IN (rt1.c0)), (NOT (v0.c2)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE (NULLIF((858712039 IN (rt1.c0)), (NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((NULLIF((858712039 IN (rt1.c0)), (NOT (v0.c2)))) IS TRUE)  as count FROM rt1, v0, vt0);
SELECT ALL * FROM rt1, v0, vt0 WHERE (NULLIF((858712039 IN (rt1.c0)), (NOT (v0.c2))));
SELECT ALL * FROM rt1 WHERE (((rt1.c4)/(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)/(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c4)/(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)/(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c4)/(rt1.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (0.475080397598884);
SELECT SUM(count) FROM (SELECT ((0.475080397598884) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.475080397598884);
SELECT SUM(count) FROM (SELECT ((0.475080397598884) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.475080397598884);
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN v0 ON ((rt1.c3) ISNULL) COLLATE BINARY WHERE ((((('0.7744850637034062' IN (rt1.c1))))>=((ABS(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((('0.7744850637034062' IN (rt1.c1))))>=((ABS(v0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN v0 ON ((rt1.c3) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN v0 ON ((rt1.c3) ISNULL) COLLATE BINARY WHERE ((((('0.7744850637034062' IN (rt1.c1))))>=((ABS(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((('0.7744850637034062' IN (rt1.c1))))>=((ABS(v0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN v0 ON ((rt1.c3) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN v0 ON ((rt1.c3) ISNULL) COLLATE BINARY WHERE ((((('0.7744850637034062' IN (rt1.c1))))>=((ABS(v0.c2)))));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((vt0.c0)AND(rt1.c2)))AND(0.4448007502458562))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt1.c2)))AND(0.4448007502458562))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((vt0.c0)AND(rt1.c2)))AND(0.4448007502458562))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt1.c2)))AND(0.4448007502458562))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((vt0.c0)AND(rt1.c2)))AND(0.4448007502458562))) IS FALSE));
SELECT ALL * FROM vt0, v0, rt0 FULL OUTER JOIN rt1 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) THEN CASE WHEN v0.c1 THEN rt0.c2 END END WHERE (1817516131);
SELECT SUM(count) FROM (SELECT ALL ((1817516131) IS TRUE)  as count FROM vt0, v0, rt0 FULL OUTER JOIN rt1 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) THEN CASE WHEN v0.c1 THEN rt0.c2 END END);
SELECT ALL * FROM vt0, v0, rt0 FULL OUTER JOIN rt1 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) THEN CASE WHEN v0.c1 THEN rt0.c2 END END WHERE (1817516131);
SELECT SUM(count) FROM (SELECT ALL ((1817516131) IS TRUE)  as count FROM vt0, v0, rt0 FULL OUTER JOIN rt1 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) THEN CASE WHEN v0.c1 THEN rt0.c2 END END);
SELECT ALL * FROM vt0, v0, rt0 FULL OUTER JOIN rt1 ON CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0)) THEN CASE WHEN v0.c1 THEN rt0.c2 END END WHERE (1817516131);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 FULL OUTER JOIN v0 ON -510198052 WHERE (COALESCE(CAST(rt1.c1 AS INTEGER), CASE rt1.c4  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt1.c1 AS INTEGER), CASE rt1.c4  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE v0.c2 END)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 FULL OUTER JOIN v0 ON -510198052);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 FULL OUTER JOIN v0 ON -510198052 WHERE (COALESCE(CAST(rt1.c1 AS INTEGER), CASE rt1.c4  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE v0.c2 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt1.c1 AS INTEGER), CASE rt1.c4  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE v0.c2 END)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 FULL OUTER JOIN v0 ON -510198052);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 FULL OUTER JOIN v0 ON -510198052 WHERE (COALESCE(CAST(rt1.c1 AS INTEGER), CASE rt1.c4  WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE v0.c2 END));
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON '-245425818' INNER JOIN rt1 ON v0.c2 WHERE (((((rt1.c3)>>(vt0.c0)))>=((((vt0.c0))<=((rt0.c2)))))) ORDER BY ((((rt1.c0)/(rt1.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>>(vt0.c0)))>=((((vt0.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON '-245425818' INNER JOIN rt1 ON v0.c2 ORDER BY ((((rt1.c0)/(rt1.c0))) NOT NULL) DESC);
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON '-245425818' INNER JOIN rt1 ON v0.c2 WHERE (((((rt1.c3)>>(vt0.c0)))>=((((vt0.c0))<=((rt0.c2)))))) ORDER BY ((((rt1.c0)/(rt1.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>>(vt0.c0)))>=((((vt0.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON '-245425818' INNER JOIN rt1 ON v0.c2 ORDER BY ((((rt1.c0)/(rt1.c0))) NOT NULL) DESC);
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON '-245425818' INNER JOIN rt1 ON v0.c2 WHERE (((((rt1.c3)>>(vt0.c0)))>=((((vt0.c0))<=((rt0.c2)))))) ORDER BY ((((rt1.c0)/(rt1.c0))) NOT NULL) DESC;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON (((- (v0.c1))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((v0.c0 IN ()))) WHERE (((((vt0.c0)>(rt0.c0)))||(UPPER(DISTINCT v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c0)))||(UPPER(DISTINCT v0.c2)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON (((- (v0.c1))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON (((- (v0.c1))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((v0.c0 IN ()))) WHERE (((((vt0.c0)>(rt0.c0)))||(UPPER(DISTINCT v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(rt0.c0)))||(UPPER(DISTINCT v0.c2)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON (((- (v0.c1))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON (((- (v0.c1))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((v0.c0 IN ()))) WHERE (((((vt0.c0)>(rt0.c0)))||(UPPER(DISTINCT v0.c2))));
SELECT COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt1.c4 THEN v0.c2 END) NOT BETWEEN (rt1.c2) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY (((((((('Du0 v빌L')AND(((v0.c2) NOT NULL))))AND((((((((((((('呾''kD')OR(rt1.c2)))AND(rt0.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))AND('S1.\n	')))))OR(((rt1.c4) NOT NULL))))AND(((((x'3cbf9410')AND(v0.c0)))AND(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt1.c4 THEN v0.c2 END) NOT BETWEEN (rt1.c2) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY (((((((('Du0 v빌L')AND(((v0.c2) NOT NULL))))AND((((((((((((('呾''kD')OR(rt1.c2)))AND(rt0.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))AND('S1.\n	')))))OR(((rt1.c4) NOT NULL))))AND(((((x'3cbf9410')AND(v0.c0)))AND(rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt1.c4 THEN v0.c2 END) NOT BETWEEN (rt1.c2) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY (((((((('Du0 v빌L')AND(((v0.c2) NOT NULL))))AND((((((((((((('呾''kD')OR(rt1.c2)))AND(rt0.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))AND('S1.\n	')))))OR(((rt1.c4) NOT NULL))))AND(((((x'3cbf9410')AND(v0.c0)))AND(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt1.c4 THEN v0.c2 END) NOT BETWEEN (rt1.c2) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0, rt1, v0 ORDER BY (((((((('Du0 v빌L')AND(((v0.c2) NOT NULL))))AND((((((((((((('呾''kD')OR(rt1.c2)))AND(rt0.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))AND('S1.\n	')))))OR(((rt1.c4) NOT NULL))))AND(((((x'3cbf9410')AND(v0.c0)))AND(rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, rt1, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c1 WHEN rt1.c4 THEN v0.c2 END) NOT BETWEEN (rt1.c2) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY (((((((('Du0 v빌L')AND(((v0.c2) NOT NULL))))AND((((((((((((('呾''kD')OR(rt1.c2)))AND(rt0.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c3)))AND('S1.\n	')))))OR(((rt1.c4) NOT NULL))))AND(((((x'3cbf9410')AND(v0.c0)))AND(rt1.c1))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY ((((((((((rt0.c1)||(rt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))))AND(0.5160802412347207 COLLATE NOCASE)))OR(('' IN ()))))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)||(rt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))))AND(0.5160802412347207 COLLATE NOCASE)))OR(('' IN ()))))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY ((((((((((rt0.c1)||(rt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))))AND(0.5160802412347207 COLLATE NOCASE)))OR(('' IN ()))))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)||(rt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))))AND(0.5160802412347207 COLLATE NOCASE)))OR(('' IN ()))))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (rt0.c1))) ORDER BY ((((((((((rt0.c1)||(rt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))))AND(0.5160802412347207 COLLATE NOCASE)))OR(('' IN ()))))AND(((rt0.c2)/(rt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)||(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1)||(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)||(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1)||(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1)||(v0.c0)) IN ()));
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c3)LIKE(rt0.c1))))>(((~ ('-291259479'))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)LIKE(rt0.c1))))>(((~ ('-291259479')))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c3)LIKE(rt0.c1))))>(((~ ('-291259479'))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)LIKE(rt0.c1))))>(((~ ('-291259479')))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c3)LIKE(rt0.c1))))>(((~ ('-291259479'))))));
SELECT ALL * FROM v0, rt1, vt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM v0, rt1, vt0);
SELECT ALL * FROM v0, rt1, vt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL));
