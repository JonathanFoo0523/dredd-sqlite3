-- Time: 2024/06/09 14:56:13
-- Database: database9
-- Database version: 3.40.0
-- seed value: 1668647409
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TEMP TABLE t0 (c0 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1 UNINDEXED); -- 1ms;
CREATE TABLE IF NOT EXISTS t2 (c0 INTEGER , PRIMARY KEY (c0)); -- 0ms;
UPDATE OR IGNORE t2 SET c0=1073305610 WHERE ((((t2.c0) NOT NULL))>>((+ (t2.c0)))); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 0ms;
ALTER TABLE t2 RENAME COLUMN c0 TO c82; -- 1ms;
INSERT OR IGNORE INTO t2(c82) VALUES (468), (356), (668); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1073305610);\n; -- 0ms;
UPDATE OR IGNORE t2 SET c0=1073305610 WHERE (((NOT (t2.c0)))IS NOT(1082916682)); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (NULL, -1713871407); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '9141'); -- 0ms;
ANALYZE t2; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 1ms;
INSERT OR IGNORE INTO t2(c0) VALUES (607), (329), (397); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1591412551 461406853 unordered'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 1ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR IGNORE INTO t2 VALUES (926), (129), (157); -- 0ms;
CREATE INDEX i34 ON t0(c0 COLLATE NOCASE DESC); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO t2 VALUES (329), (481), (192); -- 0ms;
INSERT OR REPLACE INTO t2 VALUES (14); -- 0ms;
INSERT OR FAIL INTO vt1(c1) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t2(c0) VALUES (651); -- 0ms;
INSERT OR ABORT INTO t2 VALUES (165); -- 0ms;
CREATE INDEX IF NOT EXISTS i51 ON t0(UNICODE(((((c0)AND(4.61406853E8)))AND(c0)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '36162'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '35563'); -- 0ms;
UPDATE t2 SET c0=-2139469896; -- 0ms;
UPDATE OR ROLLBACK t2 SET c0=1340362978 WHERE ((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))OR(t2.c0))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO t2(c0) VALUES (459); -- 0ms;
INSERT OR ROLLBACK INTO t2 VALUES (789); -- 0ms;
UPDATE OR ABORT t2 SET (c0)=(2092759711) WHERE ((t2.c0)=(t2.c0)) COLLATE BINARY; -- 0ms;
UPDATE vt1 SET (c0)=(0.3789782462882335); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE t2 SET c0=2092759711; -- 0ms;
INSERT OR REPLACE INTO t2(c0) VALUES (890), (761), (366); -- 1ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE; -- 1ms;
CREATE UNIQUE INDEX i11 ON t2(CASE ((c0) BETWEEN (c0) AND (c0))  WHEN (NULL IN (0.6096932526731395)) THEN (NOT (c0)) END COLLATE NOCASE ASC); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1945502548);\n; -- 0ms;
INSERT OR ROLLBACK INTO t2 VALUES (649); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c64; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''), (NULL), (-1591412551), (0.9189459577901311), ('485465634'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (0.9725317635153412, NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i11', ' sz=-421800403 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (-157741073), (0xffffffffae2d1452), ('C0[2K'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-157741073,9');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -815093445);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
DROP INDEX IF EXISTS "i34"; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM t2; -- 0ms;
UPDATE OR IGNORE t2 SET c0=1934279330 WHERE (((((t2.c0))<=((t2.c0)))) IS FALSE); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '51521'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.7722035426162682); -- 0ms;
INSERT OR IGNORE INTO t2(c0) VALUES (61); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '20125'); -- 0ms;
INSERT OR ABORT INTO t2 VALUES (896), (843), (450); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t2 RENAME COLUMN c0 TO c24; -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=-1782577048,2');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '50605'); -- 1ms;
INSERT OR ROLLBACK INTO t0(c64) VALUES ('C0[2K'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2034657223); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=234559953,6');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1);\n; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA recursive_triggers = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1436424030); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT OR IGNORE INTO t2 VALUES (422), (581), (88); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr2 BEFORE UPDATE OF c0 ON t0 BEGIN DELETE FROM vt1;END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 14); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x'', 'vD(('); -- 0ms;
ALTER TABLE t2 ADD COLUMN c71 INTEGER; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1953865796); -- 0ms;
PRAGMA journal_mode; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR REPLACE INTO vt1 VALUES (x'', x'e2c2'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (1934279330), (-855182755), (0x6e010c6b); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0 CROSS JOIN t2 ON (((t2.c71)) NOT BETWEEN ((t2.c0 COLLATE NOCASE)) AND (((t2.c71 IN ())))) INNER JOIN vt1 ON CAST((~ (vt1.c1)) AS BLOB) WHERE ('-2139469896');
SELECT SUM(count) FROM (SELECT (('-2139469896') IS TRUE)  as count FROM t0 CROSS JOIN t2 ON (((t2.c71)) NOT BETWEEN ((t2.c0 COLLATE NOCASE)) AND (((t2.c71 IN ())))) INNER JOIN vt1 ON CAST((~ (vt1.c1)) AS BLOB));
SELECT ALL * FROM t0 CROSS JOIN t2 ON (((t2.c71)) NOT BETWEEN ((t2.c0 COLLATE NOCASE)) AND (((t2.c71 IN ())))) INNER JOIN vt1 ON CAST((~ (vt1.c1)) AS BLOB) WHERE ('-2139469896');
SELECT SUM(count) FROM (SELECT (('-2139469896') IS TRUE)  as count FROM t0 CROSS JOIN t2 ON (((t2.c71)) NOT BETWEEN ((t2.c0 COLLATE NOCASE)) AND (((t2.c71 IN ())))) INNER JOIN vt1 ON CAST((~ (vt1.c1)) AS BLOB));
SELECT ALL * FROM t0 CROSS JOIN t2 ON (((t2.c71)) NOT BETWEEN ((t2.c0 COLLATE NOCASE)) AND (((t2.c71 IN ())))) INNER JOIN vt1 ON CAST((~ (vt1.c1)) AS BLOB) WHERE ('-2139469896');
SELECT ALL COUNT(*) FROM t2, t0 WHERE (((NULL)>(t2.c71)));
SELECT SUM(count) FROM (SELECT ((((NULL)>(t2.c71))) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (((NULL)>(t2.c71)));
SELECT SUM(count) FROM (SELECT ((((NULL)>(t2.c71))) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (((NULL)>(t2.c71)));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0xffffffffa5ceab1c)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)!=(((t0.c0)/(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0Xffffffffa5ceab1c)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)<>(((t0.c0)/(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0xffffffffa5ceab1c)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)!=(((t0.c0)/(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0Xffffffffa5ceab1c)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)<>(((t0.c0)/(t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE CAST(t0.c0 AS INTEGER) END) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, 0xffffffffa5ceab1c)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (t0.c0))))  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)!=(((t0.c0)/(t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE NOCASE) ORDER BY LIKELY(CAST(t0.c0 AS BLOB)), DATE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))) ASC, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))||(-8.55182755E8)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)/(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY LIKELY(CAST(t0.c0 AS BLOB)), DATE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))) ASC, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))||(-8.55182755E8)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE NOCASE) ORDER BY LIKELY(CAST(t0.c0 AS BLOB)), DATE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))) ASC, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))||(-8.55182755E8)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)/(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY LIKELY(CAST(t0.c0 AS BLOB)), DATE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))) ASC, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))||(-8.55182755E8)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0)/(t0.c0)) COLLATE NOCASE) ORDER BY LIKELY(CAST(t0.c0 AS BLOB)), DATE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (t0.c0 IN (t0.c0)), ((t0.c0)>>(t0.c0))) ASC, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))||(-8.55182755E8)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t2, t0 WHERE (CAST(ABS(t2.c71) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(t2.c71) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL * FROM vt1, t2, t0 WHERE (CAST(ABS(t2.c71) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(t2.c71) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL * FROM vt1, t2, t0 WHERE (CAST(ABS(t2.c71) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (CASE (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c1, 0.9189459577901311, t2.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((t2.c71, t2.c0, t2.c71))) END) ORDER BY CASE WHEN UPPER(t2.c0) THEN CASE WHEN t2.c71 THEN t2.c0 END WHEN (((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))) THEN ((t2.c71) IS FALSE) WHEN ((vt1.c1)%(t2.c71)) THEN t2.c0 COLLATE BINARY WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN STRFTIME(vt1.c1, vt1.c0, t2.c0) WHEN vt1.c0 COLLATE BINARY THEN ((t2.c71) BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c1, 0.9189459577901311, t2.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((t2.c71, t2.c0, t2.c71))) END) IS TRUE)  as count FROM vt1, t2 ORDER BY CASE WHEN UPPER(t2.c0) THEN CASE WHEN t2.c71 THEN t2.c0 END WHEN (((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))) THEN ((t2.c71) IS FALSE) WHEN ((vt1.c1)%(t2.c71)) THEN t2.c0 COLLATE BINARY WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN STRFTIME(vt1.c1, vt1.c0, t2.c0) WHEN vt1.c0 COLLATE BINARY THEN ((t2.c71) BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (CASE (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c1, 0.9189459577901311, t2.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((t2.c71, t2.c0, t2.c71))) END) ORDER BY CASE WHEN UPPER(t2.c0) THEN CASE WHEN t2.c71 THEN t2.c0 END WHEN (((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))) THEN ((t2.c71) IS FALSE) WHEN ((vt1.c1)%(t2.c71)) THEN t2.c0 COLLATE BINARY WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN STRFTIME(vt1.c1, vt1.c0, t2.c0) WHEN vt1.c0 COLLATE BINARY THEN ((t2.c71) BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c1, 0.9189459577901311, t2.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((t2.c71, t2.c0, t2.c71))) END) IS TRUE)  as count FROM vt1, t2 ORDER BY CASE WHEN UPPER(t2.c0) THEN CASE WHEN t2.c71 THEN t2.c0 END WHEN (((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))) THEN ((t2.c71) IS FALSE) WHEN ((vt1.c1)%(t2.c71)) THEN t2.c0 COLLATE BINARY WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN STRFTIME(vt1.c1, vt1.c0, t2.c0) WHEN vt1.c0 COLLATE BINARY THEN ((t2.c71) BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (CASE (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c1, 0.9189459577901311, t2.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((t2.c71, t2.c0, t2.c71))) END) ORDER BY CASE WHEN UPPER(t2.c0) THEN CASE WHEN t2.c71 THEN t2.c0 END WHEN (((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))) THEN ((t2.c71) IS FALSE) WHEN ((vt1.c1)%(t2.c71)) THEN t2.c0 COLLATE BINARY WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN STRFTIME(vt1.c1, vt1.c0, t2.c0) WHEN vt1.c0 COLLATE BINARY THEN ((t2.c71) BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (LTRIM(t0.c0)) ORDER BY ((+ (t0.c0)) IN (LIKELY(t0.c0), ((t0.c0)*(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(t0.c0)) IS TRUE)  as count FROM t0 ORDER BY ((+ (t0.c0)) IN (LIKELY(t0.c0), ((t0.c0)*(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (LTRIM(t0.c0)) ORDER BY ((+ (t0.c0)) IN (LIKELY(t0.c0), ((t0.c0)*(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(t0.c0)) IS TRUE)  as count FROM t0 ORDER BY ((+ (t0.c0)) IN (LIKELY(t0.c0), ((t0.c0)*(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (LTRIM(t0.c0)) ORDER BY ((+ (t0.c0)) IN (LIKELY(t0.c0), ((t0.c0)*(t0.c0))))  NULLS FIRST;
SELECT * FROM t0, t2, vt1 WHERE (CAST((('')GLOB(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')GLOB(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, t2, vt1);
SELECT * FROM t0, t2, vt1 WHERE (CAST((('')GLOB(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')GLOB(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, t2, vt1);
SELECT * FROM t0, t2, vt1 WHERE (CAST((('')GLOB(vt1.c0)) AS BLOB));
SELECT * FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (t2.c0);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN t2 ON CASE (((t2.c0, vt1.c0, 0.7059346183320345)) BETWEEN ((t2.c0, t2.c71, t2.c0)) AND ((vt1.c0, t2.c0, vt1.c0)))  WHEN ((vt1.c1)LIKE(vt1.c0)) THEN (t2.c71 IN ()) WHEN COALESCE(t0.c0, t0.c0) THEN ((t0.c0) IS TRUE) WHEN CAST(t2.c71 AS INTEGER) THEN ((t2.c71)&(t2.c71)) WHEN (vt1.c0 IN (0X4fe450e2, vt1.c1)) THEN (- (vt1.c0)) WHEN ((vt1.c1)IS NOT(t2.c0)) THEN t2.c0 END WHERE (CASE CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t2.c0 END  WHEN ((vt1.c1) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN '1692643241' THEN (t2.c71 IN ()) WHEN t2.c0 COLLATE RTRIM THEN ((t2.c71) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t2.c0 END  WHEN ((vt1.c1) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN '1692643241' THEN (t2.c71 IN ()) WHEN t2.c0 COLLATE RTRIM THEN ((t2.c71) NOT NULL) END) IS TRUE)  as count FROM vt1, t0 INNER JOIN t2 ON CASE (((t2.c0, vt1.c0, 0.7059346183320345)) BETWEEN ((t2.c0, t2.c71, t2.c0)) AND ((vt1.c0, t2.c0, vt1.c0)))  WHEN ((vt1.c1)LIKE(vt1.c0)) THEN (t2.c71 IN ()) WHEN COALESCE(t0.c0, t0.c0) THEN ((t0.c0) IS TRUE) WHEN CAST(t2.c71 AS INTEGER) THEN ((t2.c71)&(t2.c71)) WHEN (vt1.c0 IN (0x4fe450e2, vt1.c1)) THEN (- (vt1.c0)) WHEN ((vt1.c1)IS NOT(t2.c0)) THEN t2.c0 END);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN t2 ON CASE (((t2.c0, vt1.c0, 0.7059346183320345)) BETWEEN ((t2.c0, t2.c71, t2.c0)) AND ((vt1.c0, t2.c0, vt1.c0)))  WHEN ((vt1.c1)LIKE(vt1.c0)) THEN (t2.c71 IN ()) WHEN COALESCE(t0.c0, t0.c0) THEN ((t0.c0) IS TRUE) WHEN CAST(t2.c71 AS INTEGER) THEN ((t2.c71)&(t2.c71)) WHEN (vt1.c0 IN (0X4fe450e2, vt1.c1)) THEN (- (vt1.c0)) WHEN ((vt1.c1)IS NOT(t2.c0)) THEN t2.c0 END WHERE (CASE CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t2.c0 END  WHEN ((vt1.c1) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN '1692643241' THEN (t2.c71 IN ()) WHEN t2.c0 COLLATE RTRIM THEN ((t2.c71) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t2.c0 END  WHEN ((vt1.c1) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN '1692643241' THEN (t2.c71 IN ()) WHEN t2.c0 COLLATE RTRIM THEN ((t2.c71) NOT NULL) END) IS TRUE)  as count FROM vt1, t0 INNER JOIN t2 ON CASE (((t2.c0, vt1.c0, 0.7059346183320345)) BETWEEN ((t2.c0, t2.c71, t2.c0)) AND ((vt1.c0, t2.c0, vt1.c0)))  WHEN ((vt1.c1)LIKE(vt1.c0)) THEN (t2.c71 IN ()) WHEN COALESCE(t0.c0, t0.c0) THEN ((t0.c0) IS TRUE) WHEN CAST(t2.c71 AS INTEGER) THEN ((t2.c71)&(t2.c71)) WHEN (vt1.c0 IN (0x4fe450e2, vt1.c1)) THEN (- (vt1.c0)) WHEN ((vt1.c1)IS NOT(t2.c0)) THEN t2.c0 END);
SELECT COUNT(*) FROM vt1, t0 INNER JOIN t2 ON CASE (((t2.c0, vt1.c0, 0.7059346183320345)) BETWEEN ((t2.c0, t2.c71, t2.c0)) AND ((vt1.c0, t2.c0, vt1.c0)))  WHEN ((vt1.c1)LIKE(vt1.c0)) THEN (t2.c71 IN ()) WHEN COALESCE(t0.c0, t0.c0) THEN ((t0.c0) IS TRUE) WHEN CAST(t2.c71 AS INTEGER) THEN ((t2.c71)&(t2.c71)) WHEN (vt1.c0 IN (0X4fe450e2, vt1.c1)) THEN (- (vt1.c0)) WHEN ((vt1.c1)IS NOT(t2.c0)) THEN t2.c0 END WHERE (CASE CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE t2.c0 END  WHEN ((vt1.c1) IS FALSE) THEN vt1.c0 COLLATE BINARY WHEN '1692643241' THEN (t2.c71 IN ()) WHEN t2.c0 COLLATE RTRIM THEN ((t2.c71) NOT NULL) END);
SELECT COUNT(*) FROM t2 WHERE ((NOT (((t2.c0) IS FALSE)))) ORDER BY ((((t2.c0)AND(t2.c0)))AND(t2.c71)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0)AND(t2.c0)))AND(t2.c71)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t2 WHERE ((NOT (((t2.c0) IS FALSE)))) ORDER BY ((((t2.c0)AND(t2.c0)))AND(t2.c71)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0)AND(t2.c0)))AND(t2.c71)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t2 WHERE ((NOT (((t2.c0) IS FALSE)))) ORDER BY ((((t2.c0)AND(t2.c0)))AND(t2.c71)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (0.5229154797523818) ORDER BY ((vt1.c0 COLLATE BINARY)OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5229154797523818) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (0.5229154797523818) ORDER BY ((vt1.c0 COLLATE BINARY)OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.5229154797523818) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (0.5229154797523818) ORDER BY ((vt1.c0 COLLATE BINARY)OR((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c1)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c0)>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c1)GLOB(vt1.c0)) THEN ((NULL)+(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) ISNULL) END) ORDER BY (vt1.c0 IN ()), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c0)>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c1)GLOB(vt1.c0)) THEN ((NULL)+(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()), NULL DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c0)>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c1)GLOB(vt1.c0)) THEN ((NULL)+(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) ISNULL) END) ORDER BY (vt1.c0 IN ()), NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c0)>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c1)GLOB(vt1.c0)) THEN ((NULL)+(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()), NULL DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN ((vt1.c0)>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c1)GLOB(vt1.c0)) THEN ((NULL)+(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) ISNULL) END) ORDER BY (vt1.c0 IN ()), NULL DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((0.6502046289215316)IS(NULL)) COLLATE NOCASE) ORDER BY (('' COLLATE BINARY)==(((vt1.c1) NOT BETWEEN (-2041357717) AND (vt1.c0)))) DESC, ((vt1.c1)=(x'')) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6502046289215316)IS(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (('' COLLATE BINARY)=(((vt1.c1) NOT BETWEEN (-2041357717) AND (vt1.c0)))) DESC, ((vt1.c1)=(x'')) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((0.6502046289215316)IS(NULL)) COLLATE NOCASE) ORDER BY (('' COLLATE BINARY)==(((vt1.c1) NOT BETWEEN (-2041357717) AND (vt1.c0)))) DESC, ((vt1.c1)=(x'')) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6502046289215316)IS(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (('' COLLATE BINARY)=(((vt1.c1) NOT BETWEEN (-2041357717) AND (vt1.c0)))) DESC, ((vt1.c1)=(x'')) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((0.6502046289215316)IS(NULL)) COLLATE NOCASE) ORDER BY (('' COLLATE BINARY)==(((vt1.c1) NOT BETWEEN (-2041357717) AND (vt1.c0)))) DESC, ((vt1.c1)=(x'')) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY IFNULL((+ (t2.c0)), RTRIM(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY IFNULL((+ (t2.c0)), RTRIM(vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY IFNULL((+ (t2.c0)), RTRIM(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY IFNULL((+ (t2.c0)), RTRIM(vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY IFNULL((+ (t2.c0)), RTRIM(vt1.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((NULL)AND(t0.c0)) COLLATE RTRIM) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0, t2.c0, t2.c71)) NOT BETWEEN ((t2.c71, t2.c71, t0.c0, t0.c0, t2.c71)) AND ((x'', t2.c0, t2.c0, t0.c0, t2.c71))))) DESC  NULLS FIRST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((((NULL)AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2 ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0, t2.c0, t2.c71)) NOT BETWEEN ((t2.c71, t2.c71, t0.c0, t0.c0, t2.c71)) AND ((x'', t2.c0, t2.c0, t0.c0, t2.c71))))) DESC  NULLS FIRST, LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((NULL)AND(t0.c0)) COLLATE RTRIM) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0, t2.c0, t2.c71)) NOT BETWEEN ((t2.c71, t2.c71, t0.c0, t0.c0, t2.c71)) AND ((x'', t2.c0, t2.c0, t0.c0, t2.c71))))) DESC  NULLS FIRST, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((((NULL)AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2 ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0, t2.c0, t2.c71)) NOT BETWEEN ((t2.c71, t2.c71, t0.c0, t0.c0, t2.c71)) AND ((x'', t2.c0, t2.c0, t0.c0, t2.c71))))) DESC  NULLS FIRST, LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((NULL)AND(t0.c0)) COLLATE RTRIM) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0, t2.c0, t2.c71)) NOT BETWEEN ((t2.c71, t2.c71, t0.c0, t0.c0, t2.c71)) AND ((x'', t2.c0, t2.c0, t0.c0, t2.c71))))) DESC  NULLS FIRST, LAST_INSERT_ROWID();
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CHANGES() WHERE ((((~ (vt1.c1)))%(x''))) ORDER BY CAST((vt1.c0 IN ()) AS INTEGER)  NULLS LAST, '''旸 F9r僢N\n'  NULLS FIRST, COALESCE(((t0.c0)>>(t0.c0)), ((vt1.c1)+(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c1)))%(x''))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CHANGES() ORDER BY CAST((vt1.c0 IN ()) AS INTEGER)  NULLS LAST, '''旸 F9r僢N\n'  NULLS FIRST, COALESCE(((t0.c0)>>(t0.c0)), ((vt1.c1)+(t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CHANGES() WHERE ((((~ (vt1.c1)))%(x''))) ORDER BY CAST((vt1.c0 IN ()) AS INTEGER)  NULLS LAST, '''旸 F9r僢N\n'  NULLS FIRST, COALESCE(((t0.c0)>>(t0.c0)), ((vt1.c1)+(t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c1)))%(x''))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CHANGES() ORDER BY CAST((vt1.c0 IN ()) AS INTEGER)  NULLS LAST, '''旸 F9r僢N\n'  NULLS FIRST, COALESCE(((t0.c0)>>(t0.c0)), ((vt1.c1)+(t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CHANGES() WHERE ((((~ (vt1.c1)))%(x''))) ORDER BY CAST((vt1.c0 IN ()) AS INTEGER)  NULLS LAST, '''旸 F9r僢N\n'  NULLS FIRST, COALESCE(((t0.c0)>>(t0.c0)), ((vt1.c1)+(t0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (0.7212128693801764) ORDER BY (((t0.c0)<(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((0.7212128693801764) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)<(t0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (0.7212128693801764) ORDER BY (((t0.c0)<(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((0.7212128693801764) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)<(t0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (0.7212128693801764) ORDER BY (((t0.c0)<(t0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON (((CASE WHEN '' THEN '' WHEN t2.c71 THEN t2.c0 WHEN t0.c0 THEN t2.c71 ELSE t2.c0 END, CASE t0.c0  WHEN 0.44834735424442906 THEN t0.c0 END, ((NULL)/(t0.c0))))!=((((t0.c0) IS FALSE), CASE WHEN 'i犯y.lrt%m' THEN t2.c71 ELSE t2.c71 END, ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) WHERE (CAST(x'' AS NUMERIC)) ORDER BY HEX(DISTINCT ((((((((t2.c71)OR(t2.c71)))OR(x'')))OR(t2.c0)))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON (((CASE WHEN '' THEN '' WHEN t2.c71 THEN t2.c0 WHEN t0.c0 THEN t2.c71 ELSE t2.c0 END, CASE t0.c0  WHEN 0.44834735424442906 THEN t0.c0 END, ((NULL)/(t0.c0))))!=((((t0.c0) IS FALSE), CASE WHEN 'i犯y.lrt%m' THEN t2.c71 ELSE t2.c71 END, ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY HEX(DISTINCT ((((((((t2.c71)OR(t2.c71)))OR(x'')))OR(t2.c0)))AND(t0.c0))));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON (((CASE WHEN '' THEN '' WHEN t2.c71 THEN t2.c0 WHEN t0.c0 THEN t2.c71 ELSE t2.c0 END, CASE t0.c0  WHEN 0.44834735424442906 THEN t0.c0 END, ((NULL)/(t0.c0))))!=((((t0.c0) IS FALSE), CASE WHEN 'i犯y.lrt%m' THEN t2.c71 ELSE t2.c71 END, ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) WHERE (CAST(x'' AS NUMERIC)) ORDER BY HEX(DISTINCT ((((((((t2.c71)OR(t2.c71)))OR(x'')))OR(t2.c0)))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON (((CASE WHEN '' THEN '' WHEN t2.c71 THEN t2.c0 WHEN t0.c0 THEN t2.c71 ELSE t2.c0 END, CASE t0.c0  WHEN 0.44834735424442906 THEN t0.c0 END, ((NULL)/(t0.c0))))!=((((t0.c0) IS FALSE), CASE WHEN 'i犯y.lrt%m' THEN t2.c71 ELSE t2.c71 END, ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ORDER BY HEX(DISTINCT ((((((((t2.c71)OR(t2.c71)))OR(x'')))OR(t2.c0)))AND(t0.c0))));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON (((CASE WHEN '' THEN '' WHEN t2.c71 THEN t2.c0 WHEN t0.c0 THEN t2.c71 ELSE t2.c0 END, CASE t0.c0  WHEN 0.44834735424442906 THEN t0.c0 END, ((NULL)/(t0.c0))))!=((((t0.c0) IS FALSE), CASE WHEN 'i犯y.lrt%m' THEN t2.c71 ELSE t2.c71 END, ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) WHERE (CAST(x'' AS NUMERIC)) ORDER BY HEX(DISTINCT ((((((((t2.c71)OR(t2.c71)))OR(x'')))OR(t2.c0)))AND(t0.c0)));
SELECT ALL * FROM t0, vt1 WHERE ((NOT ((vt1.c1 IN ())))) ORDER BY (+ ((((vt1.c1)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c1 IN ())))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((vt1.c1)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((NOT ((vt1.c1 IN ())))) ORDER BY (+ ((((vt1.c1)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c1 IN ())))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((vt1.c1)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((NOT ((vt1.c1 IN ())))) ORDER BY (+ ((((vt1.c1)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN UPPER(DISTINCT vt1.c1) THEN ((0.6502046289215316)<(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT vt1.c1) THEN ((0.6502046289215316)<(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, vt1.c0) END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN UPPER(DISTINCT vt1.c1) THEN ((0.6502046289215316)<(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT vt1.c1) THEN ((0.6502046289215316)<(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, vt1.c0) END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN UPPER(DISTINCT vt1.c1) THEN ((0.6502046289215316)<(t0.c0)) ELSE IFNULL(DISTINCT t0.c0, vt1.c0) END);
SELECT COUNT(*) FROM vt1, t2 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t2.c71)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t2.c71)) AS BLOB)) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t2.c71)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t2.c71)) AS BLOB)) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t2.c71)) AS BLOB));
SELECT * FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c0 IN ()))||(t2.c71)) WHERE (MAX(((vt1.c1)IS NOT(t2.c0)), (- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((vt1.c1)IS NOT(t2.c0)), (- (t0.c0)))) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c0 IN ()))||(t2.c71)));
SELECT * FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c0 IN ()))||(t2.c71)) WHERE (MAX(((vt1.c1)IS NOT(t2.c0)), (- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((vt1.c1)IS NOT(t2.c0)), (- (t0.c0)))) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c0 IN ()))||(t2.c71)));
SELECT * FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c0 IN ()))||(t2.c71)) WHERE (MAX(((vt1.c1)IS NOT(t2.c0)), (- (t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST('-177449707' AS REAL);
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST('-177449707' AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST('-177449707' AS REAL);
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST('-177449707' AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((+ (CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST('-177449707' AS REAL);
SELECT ALL * FROM vt1 WHERE ((- (LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (LIKELY(vt1.c0))));
SELECT * FROM t0, vt1 WHERE (x'5e30');
SELECT SUM(count) FROM (SELECT ALL ((x'5e30') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (x'5e30');
SELECT SUM(count) FROM (SELECT ALL ((x'5e30') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (x'5e30');
SELECT COUNT(*) FROM vt1, t2 NATURAL JOIN t0 WHERE ((NOT ((((t2.c71, vt1.c0, t0.c0))<=((vt1.c0, '234559953', '-389334960'))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t2.c71, vt1.c0, t0.c0))<=((vt1.c0, '234559953', '-389334960')))))) IS TRUE)  as count FROM vt1, t2 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1, t2 NATURAL JOIN t0 WHERE ((NOT ((((t2.c71, vt1.c0, t0.c0))<=((vt1.c0, '234559953', '-389334960'))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t2.c71, vt1.c0, t0.c0))<=((vt1.c0, '234559953', '-389334960')))))) IS TRUE)  as count FROM vt1, t2 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt1, t2 NATURAL JOIN t0 WHERE ((NOT ((((t2.c71, vt1.c0, t0.c0))<=((vt1.c0, '234559953', '-389334960'))))));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM t2, t0, vt1);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM t2, t0, vt1);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (vt1.c0) ORDER BY UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t2 ORDER BY UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (vt1.c0) ORDER BY UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t2 ORDER BY UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (vt1.c0) ORDER BY UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CAST(0.013864999007412449 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.013864999007412449 AS INTEGER)) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CAST(0.013864999007412449 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.013864999007412449 AS INTEGER)) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (CAST(0.013864999007412449 AS INTEGER));
SELECT ALL * FROM t2 INNER JOIN t0 ON (vt1.c1 COLLATE NOCASE IN ((NOT (t2.c0)))) CROSS JOIN vt1 ON (('1082916682')OR(((t2.c0) IS TRUE))) WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM t2 INNER JOIN t0 ON (vt1.c1 COLLATE NOCASE IN ((NOT (t2.c0)))) CROSS JOIN vt1 ON (('1082916682')OR(((t2.c0) IS TRUE))));
SELECT ALL * FROM t2 INNER JOIN t0 ON (vt1.c1 COLLATE NOCASE IN ((NOT (t2.c0)))) CROSS JOIN vt1 ON (('1082916682')OR(((t2.c0) IS TRUE))) WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM t2 INNER JOIN t0 ON (vt1.c1 COLLATE NOCASE IN ((NOT (t2.c0)))) CROSS JOIN vt1 ON (('1082916682')OR(((t2.c0) IS TRUE))));
SELECT ALL * FROM t2 INNER JOIN t0 ON (vt1.c1 COLLATE NOCASE IN ((NOT (t2.c0)))) CROSS JOIN vt1 ON (('1082916682')OR(((t2.c0) IS TRUE))) WHERE ((vt1.c0 IN ()));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN t2 ON (((t2.c71, t2.c71, t0.c0)) BETWEEN ((t2.c71 COLLATE RTRIM, t0.c0, NULLIF(t2.c0, t0.c0))) AND ((t2.c0, COALESCE(DISTINCT t2.c0, t2.c71), (+ (t0.c0))))) WHERE (((t0.c0) BETWEEN (((t0.c0)<<(t0.c0))) AND (((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((t0.c0)<<(t0.c0))) AND (((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON (((t2.c71, t2.c71, t0.c0)) BETWEEN ((t2.c71 COLLATE RTRIM, t0.c0, NULLIF(t2.c0, t0.c0))) AND ((t2.c0, COALESCE(DISTINCT t2.c0, t2.c71), (+ (t0.c0))))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN t2 ON (((t2.c71, t2.c71, t0.c0)) BETWEEN ((t2.c71 COLLATE RTRIM, t0.c0, NULLIF(t2.c0, t0.c0))) AND ((t2.c0, COALESCE(DISTINCT t2.c0, t2.c71), (+ (t0.c0))))) WHERE (((t0.c0) BETWEEN (((t0.c0)<<(t0.c0))) AND (((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((t0.c0)<<(t0.c0))) AND (((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON (((t2.c71, t2.c71, t0.c0)) BETWEEN ((t2.c71 COLLATE RTRIM, t0.c0, NULLIF(t2.c0, t0.c0))) AND ((t2.c0, COALESCE(DISTINCT t2.c0, t2.c71), (+ (t0.c0))))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN t2 ON (((t2.c71, t2.c71, t0.c0)) BETWEEN ((t2.c71 COLLATE RTRIM, t0.c0, NULLIF(t2.c0, t0.c0))) AND ((t2.c0, COALESCE(DISTINCT t2.c0, t2.c71), (+ (t0.c0))))) WHERE (((t0.c0) BETWEEN (((t0.c0)<<(t0.c0))) AND (((vt1.c1) IS FALSE))));
SELECT * FROM t0 FULL OUTER JOIN t2 ON CAST((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(CAST(t2.c0 AS BLOB))))OR(((t0.c0) NOT NULL))) WHERE (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((TRIM(DISTINCT t2.c0, t2.c0)) BETWEEN (((t2.c71)LIKE(t2.c0))) AND (((((((((vt1.c0)OR(vt1.c1)))AND(t2.c71)))OR(x'')))AND(t2.c71)))) DESC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(((vt1.c0)%(vt1.c0)))))AND((((t0.c0, t2.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, 0.6157279056623863))))))AND(vt1.c1)))OR(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON CAST((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(CAST(t2.c0 AS BLOB))))OR(((t0.c0) NOT NULL))) ORDER BY ((TRIM(DISTINCT t2.c0, t2.c0)) BETWEEN (((t2.c71)LIKE(t2.c0))) AND (((((((((vt1.c0)OR(vt1.c1)))AND(t2.c71)))OR(x'')))AND(t2.c71)))) DESC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(((vt1.c0)%(vt1.c0)))))AND((((t0.c0, t2.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, 0.6157279056623863))))))AND(vt1.c1)))OR(vt1.c0)) DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN t2 ON CAST((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(CAST(t2.c0 AS BLOB))))OR(((t0.c0) NOT NULL))) WHERE (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((TRIM(DISTINCT t2.c0, t2.c0)) BETWEEN (((t2.c71)LIKE(t2.c0))) AND (((((((((vt1.c0)OR(vt1.c1)))AND(t2.c71)))OR(x'')))AND(t2.c71)))) DESC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(((vt1.c0)%(vt1.c0)))))AND((((t0.c0, t2.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, 0.6157279056623863))))))AND(vt1.c1)))OR(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON CAST((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(CAST(t2.c0 AS BLOB))))OR(((t0.c0) NOT NULL))) ORDER BY ((TRIM(DISTINCT t2.c0, t2.c0)) BETWEEN (((t2.c71)LIKE(t2.c0))) AND (((((((((vt1.c0)OR(vt1.c1)))AND(t2.c71)))OR(x'')))AND(t2.c71)))) DESC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(((vt1.c0)%(vt1.c0)))))AND((((t0.c0, t2.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, 0.6157279056623863))))))AND(vt1.c1)))OR(vt1.c0)) DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN t2 ON CAST((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))) AS NUMERIC) LEFT OUTER JOIN vt1 ON (((((vt1.c0 IN ()))AND(CAST(t2.c0 AS BLOB))))OR(((t0.c0) NOT NULL))) WHERE (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((TRIM(DISTINCT t2.c0, t2.c0)) BETWEEN (((t2.c71)LIKE(t2.c0))) AND (((((((((vt1.c0)OR(vt1.c1)))AND(t2.c71)))OR(x'')))AND(t2.c71)))) DESC  NULLS FIRST, ((((((((t0.c0 COLLATE RTRIM)OR(((vt1.c0)%(vt1.c0)))))AND((((t0.c0, t2.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, 0.6157279056623863))))))AND(vt1.c1)))OR(vt1.c0)) DESC  NULLS FIRST;
SELECT * FROM t0, t2 WHERE (CAST((~ (t0.c0)) AS TEXT)) ORDER BY ((CAST(t2.c0 AS INTEGER))|(((t2.c71)LIKE(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, t2 ORDER BY ((CAST(t2.c0 AS INTEGER))|(((t2.c71)LIKE(t0.c0)))) DESC);
SELECT * FROM t0, t2 WHERE (CAST((~ (t0.c0)) AS TEXT)) ORDER BY ((CAST(t2.c0 AS INTEGER))|(((t2.c71)LIKE(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, t2 ORDER BY ((CAST(t2.c0 AS INTEGER))|(((t2.c71)LIKE(t0.c0)))) DESC);
SELECT * FROM t0, t2 WHERE (CAST((~ (t0.c0)) AS TEXT)) ORDER BY ((CAST(t2.c0 AS INTEGER))|(((t2.c71)LIKE(t0.c0)))) DESC;
SELECT ALL * FROM vt1 WHERE (CAST(LENGTH(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(LENGTH(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(LENGTH(vt1.c0) AS BLOB));
SELECT ALL * FROM t0, t2 WHERE (((((t2.c0)|(t2.c0)))>(((t0.c0) ISNULL)))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)|(t2.c0)))>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, t2 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t0, t2 WHERE (((((t2.c0)|(t2.c0)))>(((t0.c0) ISNULL)))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)|(t2.c0)))>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, t2 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL * FROM t0, t2 WHERE (((((t2.c0)|(t2.c0)))>(((t0.c0) ISNULL)))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT * FROM t2, t0 WHERE (t0.c0) ORDER BY ((~ (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t2, t0 ORDER BY ((~ (t0.c0)) IN ()));
SELECT * FROM t2, t0 WHERE (t0.c0) ORDER BY ((~ (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t2, t0 ORDER BY ((~ (t0.c0)) IN ()));
SELECT * FROM t2, t0 WHERE (t0.c0) ORDER BY ((~ (t0.c0)) IN ());
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE (CASE 0.11732694257862464  WHEN ((t2.c0)%(vt1.c1)) THEN HEX(DISTINCT vt1.c1) WHEN ((t0.c0)AND(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((t2.c71)) AND ((t0.c0))) WHEN ((x'')&(vt1.c0)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE 0.11732694257862464  WHEN ((t2.c0)%(vt1.c1)) THEN HEX(DISTINCT vt1.c1) WHEN ((t0.c0)AND(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((t2.c71)) AND ((t0.c0))) WHEN ((x'')&(vt1.c0)) THEN NULL END) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE (CASE 0.11732694257862464  WHEN ((t2.c0)%(vt1.c1)) THEN HEX(DISTINCT vt1.c1) WHEN ((t0.c0)AND(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((t2.c71)) AND ((t0.c0))) WHEN ((x'')&(vt1.c0)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE 0.11732694257862464  WHEN ((t2.c0)%(vt1.c1)) THEN HEX(DISTINCT vt1.c1) WHEN ((t0.c0)AND(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((t2.c71)) AND ((t0.c0))) WHEN ((x'')&(vt1.c0)) THEN NULL END) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE (CASE 0.11732694257862464  WHEN ((t2.c0)%(vt1.c1)) THEN HEX(DISTINCT vt1.c1) WHEN ((t0.c0)AND(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((t2.c71)) AND ((t0.c0))) WHEN ((x'')&(vt1.c0)) THEN NULL END);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN 0X7cbcfa9f THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)+(((vt1.c1)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN 0X7cbcfa9f THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)+(((vt1.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN 0X7cbcfa9f THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)+(((vt1.c1)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN 0X7cbcfa9f THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)+(((vt1.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN 0X7cbcfa9f THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)+(((vt1.c1)<=(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('''旸 F9r僢N\n'))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('''旸 F9r僢N\n')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('''旸 F9r僢N\n'))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('''旸 F9r僢N\n')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('''旸 F9r僢N\n'))));
SELECT COUNT(*) FROM t2 WHERE ((- ((((t2.c71, t2.c71, t2.c71)) NOT BETWEEN ((t2.c71, t2.c0, t2.c71)) AND ((t2.c0, t2.c0, t2.c0)))))) ORDER BY 0x6bbb65f8  NULLS LAST, (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) IN (t2.c71 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t2.c71, t2.c71, t2.c71)) NOT BETWEEN ((t2.c71, t2.c0, t2.c71)) AND ((t2.c0, t2.c0, t2.c0)))))) IS TRUE)  as count FROM t2 ORDER BY 0X6bbb65f8  NULLS LAST, (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) IN (t2.c71 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t2 WHERE ((- ((((t2.c71, t2.c71, t2.c71)) NOT BETWEEN ((t2.c71, t2.c0, t2.c71)) AND ((t2.c0, t2.c0, t2.c0)))))) ORDER BY 0x6bbb65f8  NULLS LAST, (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) IN (t2.c71 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t2.c71, t2.c71, t2.c71)) NOT BETWEEN ((t2.c71, t2.c0, t2.c71)) AND ((t2.c0, t2.c0, t2.c0)))))) IS TRUE)  as count FROM t2 ORDER BY 0X6bbb65f8  NULLS LAST, (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) IN (t2.c71 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t2, t0, vt1 WHERE ((CASE WHEN t0.c0 THEN vt1.c0 ELSE x'' END IN ())) ORDER BY (((~ (t0.c0)))GLOB(((vt1.c1) BETWEEN (0.9958237886234071) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN vt1.c0 ELSE x'' END IN ())) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY (((~ (t0.c0)))GLOB(((vt1.c1) BETWEEN (0.9958237886234071) AND (vt1.c1))))  NULLS FIRST);
SELECT * FROM t2, t0, vt1 WHERE ((CASE WHEN t0.c0 THEN vt1.c0 ELSE x'' END IN ())) ORDER BY (((~ (t0.c0)))GLOB(((vt1.c1) BETWEEN (0.9958237886234071) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN vt1.c0 ELSE x'' END IN ())) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY (((~ (t0.c0)))GLOB(((vt1.c1) BETWEEN (0.9958237886234071) AND (vt1.c1))))  NULLS FIRST);
SELECT * FROM t2, t0, vt1 WHERE ((CASE WHEN t0.c0 THEN vt1.c0 ELSE x'' END IN ())) ORDER BY (((~ (t0.c0)))GLOB(((vt1.c1) BETWEEN (0.9958237886234071) AND (vt1.c1))))  NULLS FIRST;
SELECT * FROM t2, t0, vt1 WHERE (((CASE WHEN t2.c0 THEN t2.c0 END) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c1))) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((vt1.c0, vt1.c1, t2.c71)))))) ORDER BY CASE WHEN t2.c0 THEN ((((vt1.c1)AND(vt1.c1)))OR(0.25301216453208974)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t2.c0 THEN t2.c0 END) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c1))) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((vt1.c0, vt1.c1, t2.c71)))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY CASE WHEN t2.c0 THEN ((((vt1.c1)AND(vt1.c1)))OR(0.25301216453208974)) END  NULLS FIRST);
SELECT * FROM t2, t0, vt1 WHERE (((CASE WHEN t2.c0 THEN t2.c0 END) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c1))) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((vt1.c0, vt1.c1, t2.c71)))))) ORDER BY CASE WHEN t2.c0 THEN ((((vt1.c1)AND(vt1.c1)))OR(0.25301216453208974)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t2.c0 THEN t2.c0 END) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c1))) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((vt1.c0, vt1.c1, t2.c71)))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY CASE WHEN t2.c0 THEN ((((vt1.c1)AND(vt1.c1)))OR(0.25301216453208974)) END  NULLS FIRST);
SELECT * FROM t2, t0, vt1 WHERE (((CASE WHEN t2.c0 THEN t2.c0 END) NOT BETWEEN (((((t0.c0)OR(vt1.c0)))AND(vt1.c1))) AND ((((vt1.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t2.c71, t2.c71, vt1.c0)) AND ((vt1.c0, vt1.c1, t2.c71)))))) ORDER BY CASE WHEN t2.c0 THEN ((((vt1.c1)AND(vt1.c1)))OR(0.25301216453208974)) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, t2 WHERE (CASE t2.c71  WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) THEN ((((((((t2.c71)OR(t0.c0)))OR(t2.c71)))OR(t0.c0)))OR(t2.c71)) WHEN IFNULL(t2.c0, t2.c0) THEN ((t2.c71)>=(t0.c0)) WHEN (- (t2.c0)) THEN CASE NULL  WHEN t0.c0 THEN t2.c71 END END);
SELECT SUM(count) FROM (SELECT ((CASE t2.c71  WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) THEN ((((((((t2.c71)OR(t0.c0)))OR(t2.c71)))OR(t0.c0)))OR(t2.c71)) WHEN IFNULL(t2.c0, t2.c0) THEN ((t2.c71)>=(t0.c0)) WHEN (- (t2.c0)) THEN CASE NULL  WHEN t0.c0 THEN t2.c71 END END) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (CASE t2.c71  WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) THEN ((((((((t2.c71)OR(t0.c0)))OR(t2.c71)))OR(t0.c0)))OR(t2.c71)) WHEN IFNULL(t2.c0, t2.c0) THEN ((t2.c71)>=(t0.c0)) WHEN (- (t2.c0)) THEN CASE NULL  WHEN t0.c0 THEN t2.c71 END END);
SELECT SUM(count) FROM (SELECT ((CASE t2.c71  WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) THEN ((((((((t2.c71)OR(t0.c0)))OR(t2.c71)))OR(t0.c0)))OR(t2.c71)) WHEN IFNULL(t2.c0, t2.c0) THEN ((t2.c71)>=(t0.c0)) WHEN (- (t2.c0)) THEN CASE NULL  WHEN t0.c0 THEN t2.c71 END END) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (CASE t2.c71  WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) THEN ((((((((t2.c71)OR(t0.c0)))OR(t2.c71)))OR(t0.c0)))OR(t2.c71)) WHEN IFNULL(t2.c0, t2.c0) THEN ((t2.c71)>=(t0.c0)) WHEN (- (t2.c0)) THEN CASE NULL  WHEN t0.c0 THEN t2.c71 END END);
SELECT COUNT(*) FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 END)AND(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((((((CAST(0.7212128693801764 AS REAL))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(t0.c0)))OR(UNLIKELY(t0.c0)))  NULLS FIRST, ((0.9715270963655863) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((- (0Xffffffffae2d1452)))), (~ (json_type(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END)AND(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(0.7212128693801764 AS REAL))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(t0.c0)))OR(UNLIKELY(t0.c0)))  NULLS FIRST, ((0.9715270963655863) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((- (0xffffffffae2d1452)))), (~ (json_type(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 END)AND(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((((((CAST(0.7212128693801764 AS REAL))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(t0.c0)))OR(UNLIKELY(t0.c0)))  NULLS FIRST, ((0.9715270963655863) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((- (0Xffffffffae2d1452)))), (~ (json_type(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN t0.c0 THEN t0.c0 END)AND(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CAST(0.7212128693801764 AS REAL))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(t0.c0)))OR(UNLIKELY(t0.c0)))  NULLS FIRST, ((0.9715270963655863) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((- (0xffffffffae2d1452)))), (~ (json_type(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 END)AND(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((((((CAST(0.7212128693801764 AS REAL))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(t0.c0)))OR(UNLIKELY(t0.c0)))  NULLS FIRST, ((0.9715270963655863) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((- (0Xffffffffae2d1452)))), (~ (json_type(t0.c0)));
SELECT * FROM t2 WHERE (t2.c71);
SELECT SUM(count) FROM (SELECT ((t2.c71) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (t2.c71);
SELECT SUM(count) FROM (SELECT ((t2.c71) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (t2.c71);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((((0.3789782462882335 COLLATE RTRIM)OR(t0.c0 COLLATE RTRIM)))OR(ABS(0Xffffffffeb134355)))) ORDER BY CAST(((((t0.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.3789782462882335 COLLATE RTRIM)OR(t0.c0 COLLATE RTRIM)))OR(ABS(0xffffffffeb134355)))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY CAST(((((t0.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((((0.3789782462882335 COLLATE RTRIM)OR(t0.c0 COLLATE RTRIM)))OR(ABS(0Xffffffffeb134355)))) ORDER BY CAST(((((t0.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.3789782462882335 COLLATE RTRIM)OR(t0.c0 COLLATE RTRIM)))OR(ABS(0xffffffffeb134355)))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY CAST(((((t0.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((((0.3789782462882335 COLLATE RTRIM)OR(t0.c0 COLLATE RTRIM)))OR(ABS(0Xffffffffeb134355)))) ORDER BY CAST(((((t0.c0)OR(vt1.c0)))AND(vt1.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN t0 ON t0.c0 WHERE (((((t0.c0) IS FALSE)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(vt1.c1))) AND (((0.013864999007412449)/(t0.c0))))) ORDER BY ((((((((((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))OR(CAST(vt1.c1 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))OR(TYPEOF(t0.c0))))AND((+ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(vt1.c1))) AND (((0.013864999007412449)/(t0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON t0.c0 ORDER BY ((((((((((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))OR(CAST(vt1.c1 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))OR(TYPEOF(t0.c0))))AND((+ (vt1.c0)))) DESC);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON t0.c0 WHERE (((((t0.c0) IS FALSE)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(vt1.c1))) AND (((0.013864999007412449)/(t0.c0))))) ORDER BY ((((((((((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))OR(CAST(vt1.c1 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))OR(TYPEOF(t0.c0))))AND((+ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(vt1.c1))) AND (((0.013864999007412449)/(t0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON t0.c0 ORDER BY ((((((((((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))OR(CAST(vt1.c1 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))OR(TYPEOF(t0.c0))))AND((+ (vt1.c0)))) DESC);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON t0.c0 WHERE (((((t0.c0) IS FALSE)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(vt1.c1))) AND (((0.013864999007412449)/(t0.c0))))) ORDER BY ((((((((((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))OR(CAST(vt1.c1 AS INTEGER))))OR(((((t0.c0)AND(t0.c0)))OR(vt1.c0)))))OR(TYPEOF(t0.c0))))AND((+ (vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c1) AND ('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt1.c1) AND ('')) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c1) AND ('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt1.c1) AND ('')) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c1) AND ('')) IN ()));
SELECT ALL * FROM t0, t2, vt1 WHERE ('-1559580508');
SELECT SUM(count) FROM (SELECT (('-1559580508') IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE ('-1559580508');
SELECT SUM(count) FROM (SELECT (('-1559580508') IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE ('-1559580508');
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) ORDER BY vt1.c1  NULLS FIRST;
SELECT ALL * FROM t2 WHERE ((~ ((t2.c71 IN (t2.c0, t2.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t2.c71 IN (t2.c0, t2.c71))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((~ ((t2.c71 IN (t2.c0, t2.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t2.c71 IN (t2.c0, t2.c71))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((~ ((t2.c71 IN (t2.c0, t2.c71)))));
SELECT ALL * FROM vt1 WHERE (highlight('[퍤yw2', (vt1.c0 IN ()), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND (('vd(('))), vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((highlight('[퍤yw2', (vt1.c0 IN ()), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND (('vd(('))), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (highlight('[퍤yw2', (vt1.c0 IN ()), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND (('vd(('))), vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((highlight('[퍤yw2', (vt1.c0 IN ()), (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND (('vd(('))), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM t2, t0, vt1 WHERE (CAST(((t2.c0)%(0xffffffffd9808207)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c0)%(0Xffffffffd9808207)) AS NUMERIC)) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL * FROM t2, t0, vt1 WHERE (CAST(((t2.c0)%(0xffffffffd9808207)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c0)%(0Xffffffffd9808207)) AS NUMERIC)) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL * FROM t2, t0, vt1 WHERE (CAST(((t2.c0)%(0xffffffffd9808207)) AS NUMERIC));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM t2, t0, vt1);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM t2, t0, vt1);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN TYPEOF(vt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN TYPEOF(vt1.c1) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN TYPEOF(vt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN TYPEOF(vt1.c1) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN TYPEOF(vt1.c1) END);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)) COLLATE NOCASE) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t2.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY (((((t0.c0)OR(t0.c0)))AND(t2.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)) COLLATE NOCASE) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t2.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY (((((t0.c0)OR(t0.c0)))AND(t2.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)) COLLATE NOCASE) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t2.c0)) IN ()) ASC;
SELECT ALL * FROM vt1, t0 NOT INDEXED, t2 WHERE (t0.c0) ORDER BY ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (t2.c71 COLLATE RTRIM) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (t2.c71 COLLATE RTRIM) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 NOT INDEXED, t2 WHERE (t0.c0) ORDER BY ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (t2.c71 COLLATE RTRIM) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (t2.c71 COLLATE RTRIM) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 NOT INDEXED, t2 WHERE (t0.c0) ORDER BY ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (t2.c71 COLLATE RTRIM) AND ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)AND(((vt1.c0)>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)AND(((vt1.c0)>(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)AND(((vt1.c0)>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)AND(((vt1.c0)>(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)AND(((vt1.c0)>(vt1.c1)))));
SELECT * FROM t0, vt1, t2 WHERE (vt1.c1) ORDER BY (((t2.c71)-(vt1.c1)) IN (((vt1.c0)%(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((t2.c71)-(vt1.c1)) IN (((vt1.c0)%(vt1.c1)))) ASC);
SELECT * FROM t0, vt1, t2 WHERE (vt1.c1) ORDER BY (((t2.c71)-(vt1.c1)) IN (((vt1.c0)%(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((t2.c71)-(vt1.c1)) IN (((vt1.c0)%(vt1.c1)))) ASC);
SELECT * FROM t0, vt1, t2 WHERE (vt1.c1) ORDER BY (((t2.c71)-(vt1.c1)) IN (((vt1.c0)%(vt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((+ (((((vt1.c1)AND(t0.c0)))OR(t0.c0))))) ORDER BY 0.1670501399889307 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c1)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY 0.1670501399889307 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((+ (((((vt1.c1)AND(t0.c0)))OR(t0.c0))))) ORDER BY 0.1670501399889307 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c1)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY 0.1670501399889307 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((+ (((((vt1.c1)AND(t0.c0)))OR(t0.c0))))) ORDER BY 0.1670501399889307 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t2, t0 WHERE ((0.3104715121737318 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.3104715121737318 IN ())) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL * FROM vt1, t2, t0 WHERE ((0.3104715121737318 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.3104715121737318 IN ())) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL * FROM vt1, t2, t0 WHERE ((0.3104715121737318 IN ()));
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t2 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (x'5297') AND (t0.c0)) THEN ((vt1.c0)<>(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOT BETWEEN (x'5297') AND (t0.c0)) THEN ((vt1.c0)!=(t0.c0)) END) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t2 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (x'5297') AND (t0.c0)) THEN ((vt1.c0)<>(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOT BETWEEN (x'5297') AND (t0.c0)) THEN ((vt1.c0)!=(t0.c0)) END) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t2 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (x'5297') AND (t0.c0)) THEN ((vt1.c0)<>(t0.c0)) END);
SELECT * FROM vt1, t2 WHERE ((((((vt1.c1, t2.c0, '', t2.c0, vt1.c1))>((t2.c0, -351059115, '461406853', vt1.c0, t2.c71))))<<(((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1, t2.c0, '', t2.c0, vt1.c1))>((t2.c0, -351059115, '461406853', vt1.c0, t2.c71))))<<(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE ((((((vt1.c1, t2.c0, '', t2.c0, vt1.c1))>((t2.c0, -351059115, '461406853', vt1.c0, t2.c71))))<<(((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1, t2.c0, '', t2.c0, vt1.c1))>((t2.c0, -351059115, '461406853', vt1.c0, t2.c71))))<<(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE ((((((vt1.c1, t2.c0, '', t2.c0, vt1.c1))>((t2.c0, -351059115, '461406853', vt1.c0, t2.c71))))<<(((vt1.c1) IS FALSE))));
SELECT * FROM vt1, t2, t0 WHERE (CASE vt1.c0  WHEN t2.c71 THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)AND(vt1.c1)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN t2.c71 THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)AND(vt1.c1)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (CASE vt1.c0  WHEN t2.c71 THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)AND(vt1.c1)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN t2.c71 THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)AND(vt1.c1)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (CASE vt1.c0  WHEN t2.c71 THEN ((t0.c0) NOT NULL) ELSE ((((t0.c0)AND(vt1.c1)))OR(vt1.c0)) END);
SELECT COUNT(*) FROM vt1, t0, t2 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, t0, t2);
SELECT COUNT(*) FROM vt1, t0, t2 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, t0, t2);
SELECT COUNT(*) FROM vt1, t0, t2 WHERE ('');
SELECT ALL * FROM t2, vt1, t0 WHERE (((DATETIME(vt1.c0, t0.c0, t2.c0, vt1.c1, vt1.c0, t2.c0, t0.c0))AND(t2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt1.c0, t0.c0, t2.c0, vt1.c1, vt1.c0, t2.c0, t0.c0))AND(t2.c0))) IS TRUE)  as count FROM t2, vt1, t0);
SELECT ALL * FROM t2, vt1, t0 WHERE (((DATETIME(vt1.c0, t0.c0, t2.c0, vt1.c1, vt1.c0, t2.c0, t0.c0))AND(t2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt1.c0, t0.c0, t2.c0, vt1.c1, vt1.c0, t2.c0, t0.c0))AND(t2.c0))) IS TRUE)  as count FROM t2, vt1, t0);
SELECT ALL * FROM t2, vt1, t0 WHERE (((DATETIME(vt1.c0, t0.c0, t2.c0, vt1.c1, vt1.c0, t2.c0, t0.c0))AND(t2.c0)));
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN ('-1956901643') AND (t0.c0)))/('')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN ('-1956901643') AND (t0.c0)))/(''))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN ('-1956901643') AND (t0.c0)))/('')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN ('-1956901643') AND (t0.c0)))/(''))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN ('-1956901643') AND (t0.c0)))/('')));
SELECT ALL * FROM t2, vt1 WHERE (((((t2.c71)IS(vt1.c1))) BETWEEN (CASE t2.c71  WHEN t2.c71 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 WHEN vt1.c1 THEN NULL END) AND (COALESCE(vt1.c0, 598120861)))) ORDER BY ((((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)))-(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST, ((t2.c71 COLLATE BINARY)*(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((t2.c71)IS(vt1.c1))) BETWEEN (CASE t2.c71  WHEN t2.c71 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 WHEN vt1.c1 THEN NULL END) AND (COALESCE(vt1.c0, 598120861)))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)))-(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST, ((t2.c71 COLLATE BINARY)*(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM t2, vt1 WHERE (((((t2.c71)IS(vt1.c1))) BETWEEN (CASE t2.c71  WHEN t2.c71 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 WHEN vt1.c1 THEN NULL END) AND (COALESCE(vt1.c0, 598120861)))) ORDER BY ((((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)))-(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST, ((t2.c71 COLLATE BINARY)*(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((t2.c71)IS(vt1.c1))) BETWEEN (CASE t2.c71  WHEN t2.c71 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 WHEN vt1.c1 THEN NULL END) AND (COALESCE(vt1.c0, 598120861)))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)))-(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST, ((t2.c71 COLLATE BINARY)*(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM t2, vt1 WHERE (((((t2.c71)IS(vt1.c1))) BETWEEN (CASE t2.c71  WHEN t2.c71 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 WHEN vt1.c1 THEN NULL END) AND (COALESCE(vt1.c0, 598120861)))) ORDER BY ((((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)))-(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST, ((t2.c71 COLLATE BINARY)*(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) AS NUMERIC) DESC;
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)!=(t0.c0))) AND ((+ (-1391801551)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((t0.c0)<>(t0.c0))) AND ((+ (-1391801551))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)!=(t0.c0))) AND ((+ (-1391801551)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((t0.c0)<>(t0.c0))) AND ((+ (-1391801551))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)!=(t0.c0))) AND ((+ (-1391801551)))));
SELECT ALL COUNT(*) FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c71 IN ())) NOT BETWEEN ((((t0.c0))>=((vt1.c1)))) AND (((0.9091088581675231)<(t0.c0)))) WHERE (CAST(((t0.c0) BETWEEN (t2.c71) AND (t2.c0)) AS INTEGER)) ORDER BY ((x'7a03') NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t2.c71) AND (t2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c71 IN ())) NOT BETWEEN ((((t0.c0))>=((vt1.c1)))) AND (((0.9091088581675231)<(t0.c0)))) ORDER BY ((x'7a03') NOTNULL));
SELECT ALL COUNT(*) FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c71 IN ())) NOT BETWEEN ((((t0.c0))>=((vt1.c1)))) AND (((0.9091088581675231)<(t0.c0)))) WHERE (CAST(((t0.c0) BETWEEN (t2.c71) AND (t2.c0)) AS INTEGER)) ORDER BY ((x'7a03') NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t2.c71) AND (t2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c71 IN ())) NOT BETWEEN ((((t0.c0))>=((vt1.c1)))) AND (((0.9091088581675231)<(t0.c0)))) ORDER BY ((x'7a03') NOTNULL));
SELECT ALL COUNT(*) FROM vt1, t2 RIGHT OUTER JOIN t0 ON (((t2.c71 IN ())) NOT BETWEEN ((((t0.c0))>=((vt1.c1)))) AND (((0.9091088581675231)<(t0.c0)))) WHERE (CAST(((t0.c0) BETWEEN (t2.c71) AND (t2.c0)) AS INTEGER)) ORDER BY ((x'7a03') NOTNULL);
SELECT COUNT(*) FROM t0, vt1 WHERE (0.9958237886234071);
SELECT SUM(count) FROM (SELECT ((0.9958237886234071) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (0.9958237886234071);
SELECT SUM(count) FROM (SELECT ((0.9958237886234071) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (0.9958237886234071);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((((('1719453990')+(vt1.c1))))!=((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((('1719453990')+(vt1.c1))))!=((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((((('1719453990')+(vt1.c1))))!=((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((('1719453990')+(vt1.c1))))!=((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((((('1719453990')+(vt1.c1))))!=((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0, t0.c0, vt1.c1)) BETWEEN (((vt1.c0 IN (vt1.c0)), UPPER(x''), UNLIKELY(t0.c0))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 1.082916682E9, 0.25301216453208974))) WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0, t0.c0, vt1.c1)) BETWEEN (((vt1.c0 IN (vt1.c0)), UPPER(x''), UNLIKELY(t0.c0))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 1.082916682E9, 0.25301216453208974))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0, t0.c0, vt1.c1)) BETWEEN (((vt1.c0 IN (vt1.c0)), UPPER(x''), UNLIKELY(t0.c0))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 1.082916682E9, 0.25301216453208974))) WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0, t0.c0, vt1.c1)) BETWEEN (((vt1.c0 IN (vt1.c0)), UPPER(x''), UNLIKELY(t0.c0))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 1.082916682E9, 0.25301216453208974))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0, t0.c0, vt1.c1)) BETWEEN (((vt1.c0 IN (vt1.c0)), UPPER(x''), UNLIKELY(t0.c0))) AND ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 1.082916682E9, 0.25301216453208974))) WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE (vt1.c0) ORDER BY CAST((t2.c71 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY CAST((t2.c71 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE (vt1.c0) ORDER BY CAST((t2.c71 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY CAST((t2.c71 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE (vt1.c0) ORDER BY CAST((t2.c71 IN ()) AS TEXT);
SELECT ALL * FROM t2, t0 WHERE (CASE t2.c71  WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN t2.c71 THEN t2.c71 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t2.c71  WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN t2.c71 THEN t2.c71 END COLLATE NOCASE) IS TRUE)  as count FROM t2, t0);
SELECT ALL * FROM t2, t0 WHERE (CASE t2.c71  WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN t2.c71 THEN t2.c71 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE t2.c71  WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN t2.c71 THEN t2.c71 END COLLATE NOCASE) IS TRUE)  as count FROM t2, t0);
SELECT ALL * FROM t2, t0 WHERE (CASE t2.c71  WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN t2.c71 THEN t2.c71 END COLLATE NOCASE);
SELECT COUNT(*) FROM t2 WHERE ((((+ (t2.c71)))GLOB(((t2.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((+ (t2.c71)))GLOB(((t2.c0) IS TRUE)))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((((+ (t2.c71)))GLOB(((t2.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((+ (t2.c71)))GLOB(((t2.c0) IS TRUE)))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((((+ (t2.c71)))GLOB(((t2.c0) IS TRUE))));
SELECT * FROM t0 WHERE (CASE UNLIKELY(DISTINCT t0.c0)  WHEN NULL THEN (('0.44834735424442906') ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((1340362978)>(t0.c0)) ELSE (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT t0.c0)  WHEN NULL THEN (('0.44834735424442906') ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((1340362978)>(t0.c0)) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE UNLIKELY(DISTINCT t0.c0)  WHEN NULL THEN (('0.44834735424442906') ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((1340362978)>(t0.c0)) ELSE (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT t0.c0)  WHEN NULL THEN (('0.44834735424442906') ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((1340362978)>(t0.c0)) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE UNLIKELY(DISTINCT t0.c0)  WHEN NULL THEN (('0.44834735424442906') ISNULL) WHEN ((t0.c0)AND(t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((1340362978)>(t0.c0)) ELSE (NOT (t0.c0)) END);
SELECT * FROM vt1, t2 WHERE (CAST(UPPER(DISTINCT t2.c71) AS NUMERIC)) ORDER BY (((((((((((((t2.c71 IN ()))OR(((0.9034785695831399) NOT BETWEEN (t2.c0) AND (t2.c0)))))AND(((vt1.c1)>(vt1.c1)))))OR(t2.c71)))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)))))OR('')) ASC, ((NULLIF(t2.c0, vt1.c1)) BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (t2.c0) AND (vt1.c0)))), vt1.c0 DESC, (- (vt1.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT t2.c71) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2 ORDER BY (((((((((((((t2.c71 IN ()))OR(((0.9034785695831399) NOT BETWEEN (t2.c0) AND (t2.c0)))))AND(((vt1.c1)>(vt1.c1)))))OR(t2.c71)))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)))))OR('')) ASC, ((NULLIF(t2.c0, vt1.c1)) BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (t2.c0) AND (vt1.c0)))), vt1.c0 DESC, (- (vt1.c1 COLLATE BINARY)) DESC);
SELECT * FROM vt1, t2 WHERE (CAST(UPPER(DISTINCT t2.c71) AS NUMERIC)) ORDER BY (((((((((((((t2.c71 IN ()))OR(((0.9034785695831399) NOT BETWEEN (t2.c0) AND (t2.c0)))))AND(((vt1.c1)>(vt1.c1)))))OR(t2.c71)))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)))))OR('')) ASC, ((NULLIF(t2.c0, vt1.c1)) BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (t2.c0) AND (vt1.c0)))), vt1.c0 DESC, (- (vt1.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT t2.c71) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2 ORDER BY (((((((((((((t2.c71 IN ()))OR(((0.9034785695831399) NOT BETWEEN (t2.c0) AND (t2.c0)))))AND(((vt1.c1)>(vt1.c1)))))OR(t2.c71)))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)))))OR('')) ASC, ((NULLIF(t2.c0, vt1.c1)) BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (t2.c0) AND (vt1.c0)))), vt1.c0 DESC, (- (vt1.c1 COLLATE BINARY)) DESC);
SELECT * FROM vt1, t2 WHERE (CAST(UPPER(DISTINCT t2.c71) AS NUMERIC)) ORDER BY (((((((((((((t2.c71 IN ()))OR(((0.9034785695831399) NOT BETWEEN (t2.c0) AND (t2.c0)))))AND(((vt1.c1)>(vt1.c1)))))OR(t2.c71)))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c0)))))OR('')) ASC, ((NULLIF(t2.c0, vt1.c1)) BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (t2.c0) AND (vt1.c0)))), vt1.c0 DESC, (- (vt1.c1 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN t2 ON (((t2.c71)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) ISNULL)))) WHERE (((0.25301216453208974) NOT BETWEEN (((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) AND (((vt1.c0)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.25301216453208974) NOT BETWEEN (((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) AND (((vt1.c0)-(t0.c0))))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN t2 ON (((t2.c71)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN t2 ON (((t2.c71)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) ISNULL)))) WHERE (((0.25301216453208974) NOT BETWEEN (((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) AND (((vt1.c0)-(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.25301216453208974) NOT BETWEEN (((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) AND (((vt1.c0)-(t0.c0))))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN t2 ON (((t2.c71)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM t0, vt1 CROSS JOIN t2 ON (((t2.c71)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) ISNULL)))) WHERE (((0.25301216453208974) NOT BETWEEN (((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) AND (((vt1.c0)-(t0.c0)))));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((((CASE WHEN '/2183 C' THEN t2.c71 END)OR((~ (t2.c71)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN '/2183 C' THEN t2.c71 END)OR((~ (t2.c71)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((((CASE WHEN '/2183 C' THEN t2.c71 END)OR((~ (t2.c71)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN '/2183 C' THEN t2.c71 END)OR((~ (t2.c71)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((((CASE WHEN '/2183 C' THEN t2.c71 END)OR((~ (t2.c71)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)GLOB(LOWER(DISTINCT vt1.c0))) WHERE ((((((t2.c0 IN ()))AND((- (t2.c0)))))AND(CASE WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN vt1.c0 WHEN 0.9725317635153412 THEN t2.c71 END))) ORDER BY ((((vt1.c1)IS NOT(vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0 IN ()))AND((- (t2.c0)))))AND(CASE WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN vt1.c0 WHEN 0.9725317635153412 THEN t2.c71 END))) IS TRUE)  as count FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)GLOB(LOWER(DISTINCT vt1.c0))) ORDER BY ((((vt1.c1)IS NOT(vt1.c0))) ISNULL) DESC);
SELECT COUNT(*) FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)GLOB(LOWER(DISTINCT vt1.c0))) WHERE ((((((t2.c0 IN ()))AND((- (t2.c0)))))AND(CASE WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN vt1.c0 WHEN 0.9725317635153412 THEN t2.c71 END))) ORDER BY ((((vt1.c1)IS NOT(vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0 IN ()))AND((- (t2.c0)))))AND(CASE WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN vt1.c0 WHEN 0.9725317635153412 THEN t2.c71 END))) IS TRUE)  as count FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)GLOB(LOWER(DISTINCT vt1.c0))) ORDER BY ((((vt1.c1)IS NOT(vt1.c0))) ISNULL) DESC);
SELECT COUNT(*) FROM t2, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)GLOB(LOWER(DISTINCT vt1.c0))) WHERE ((((((t2.c0 IN ()))AND((- (t2.c0)))))AND(CASE WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN vt1.c0 WHEN 0.9725317635153412 THEN t2.c71 END))) ORDER BY ((((vt1.c1)IS NOT(vt1.c0))) ISNULL) DESC;
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t2.c0 COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t2.c0 COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (t2.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t2 CROSS JOIN vt1 ON ((((vt1.c1) NOTNULL))LIKE((('')>(t0.c0)))) FULL OUTER JOIN t0 ON ((((((((((t2.c0) BETWEEN (t2.c71) AND (x'')))OR(t2.c0)))AND((((t0.c0))<((t2.c0))))))OR(CAST(t2.c0 AS INTEGER))))AND(t0.c0 COLLATE RTRIM)) WHERE (t2.c71) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c71) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON ((((vt1.c1) NOTNULL))LIKE((('')>(t0.c0)))) FULL OUTER JOIN t0 ON ((((((((((t2.c0) BETWEEN (t2.c71) AND (x'')))OR(t2.c0)))AND((((t0.c0))<((t2.c0))))))OR(CAST(t2.c0 AS INTEGER))))AND(t0.c0 COLLATE RTRIM)) ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM t2 CROSS JOIN vt1 ON ((((vt1.c1) NOTNULL))LIKE((('')>(t0.c0)))) FULL OUTER JOIN t0 ON ((((((((((t2.c0) BETWEEN (t2.c71) AND (x'')))OR(t2.c0)))AND((((t0.c0))<((t2.c0))))))OR(CAST(t2.c0 AS INTEGER))))AND(t0.c0 COLLATE RTRIM)) WHERE (t2.c71) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c71) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON ((((vt1.c1) NOTNULL))LIKE((('')>(t0.c0)))) FULL OUTER JOIN t0 ON ((((((((((t2.c0) BETWEEN (t2.c71) AND (x'')))OR(t2.c0)))AND((((t0.c0))<((t2.c0))))))OR(CAST(t2.c0 AS INTEGER))))AND(t0.c0 COLLATE RTRIM)) ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((UNLIKELY(vt1.c0)) NOT BETWEEN (((vt1.c1) ISNULL)) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) AS INTEGER)  NULLS LAST;
SELECT * FROM t0, vt1, t2 WHERE (SUBSTR(vt1.c0, vt1.c1) COLLATE NOCASE) ORDER BY 'c0[2k';
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(vt1.c0, vt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, t2 NOT INDEXED ORDER BY 'c0[2k');
SELECT * FROM t0, vt1, t2 WHERE (SUBSTR(vt1.c0, vt1.c1) COLLATE NOCASE) ORDER BY 'c0[2k';
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(vt1.c0, vt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, t2 NOT INDEXED ORDER BY 'c0[2k');
SELECT * FROM t0, vt1, t2 WHERE (SUBSTR(vt1.c0, vt1.c1) COLLATE NOCASE) ORDER BY 'c0[2k';
SELECT ALL * FROM t0, vt1, t2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL * FROM t0, vt1, t2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL * FROM t0, vt1, t2 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (((((NOT (vt1.c0))))>=((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))>=((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t2);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (((((NOT (vt1.c0))))>=((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0))))>=((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t2);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (((((NOT (vt1.c0))))>=((vt1.c0 COLLATE NOCASE))));
SELECT * FROM t0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c1)))OR(t0.c0)) THEN (t0.c0 IN ()) END) ORDER BY (((vt1.c1)=(t0.c0)) IN (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)AND(vt1.c1)))OR(t0.c0)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((vt1.c1)=(t0.c0)) IN (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c1)))OR(t0.c0)) THEN (t0.c0 IN ()) END) ORDER BY (((vt1.c1)=(t0.c0)) IN (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)AND(vt1.c1)))OR(t0.c0)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((vt1.c1)=(t0.c0)) IN (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM t0 INNER JOIN vt1 ON (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c1)))OR(t0.c0)) THEN (t0.c0 IN ()) END) ORDER BY (((vt1.c1)=(t0.c0)) IN (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM t2, t0 WHERE (((((t0.c0)<=(t2.c0)))IS(((t2.c0)!=(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t2.c0)))IS(((t2.c0)!=(t2.c0))))) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (((((t0.c0)<=(t2.c0)))IS(((t2.c0)!=(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(t2.c0)))IS(((t2.c0)!=(t2.c0))))) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (((((t0.c0)<=(t2.c0)))IS(((t2.c0)!=(t2.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)|(vt1.c1))))<=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)|(vt1.c1))))<=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)|(vt1.c1))))<=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)|(vt1.c1))))<=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)|(vt1.c1))))<=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END))));
SELECT * FROM vt1, t2, t0 WHERE ((((((((t2.c0, t2.c0, t2.c71))<((t0.c0, t2.c71, '-354524863'))))OR((- (t2.c0)))))AND(((vt1.c0)<<(t2.c71))))) ORDER BY (CAST(t2.c71 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT (((((((((t2.c0, t2.c0, t2.c71))<((t0.c0, t2.c71, '-354524863'))))OR((- (t2.c0)))))AND(((vt1.c0)<<(t2.c71))))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY (CAST(t2.c71 AS INTEGER) IN ()));
SELECT * FROM vt1, t2, t0 WHERE ((((((((t2.c0, t2.c0, t2.c71))<((t0.c0, t2.c71, '-354524863'))))OR((- (t2.c0)))))AND(((vt1.c0)<<(t2.c71))))) ORDER BY (CAST(t2.c71 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT (((((((((t2.c0, t2.c0, t2.c71))<((t0.c0, t2.c71, '-354524863'))))OR((- (t2.c0)))))AND(((vt1.c0)<<(t2.c71))))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY (CAST(t2.c71 AS INTEGER) IN ()));
SELECT * FROM vt1, t2, t0 WHERE ((((((((t2.c0, t2.c0, t2.c71))<((t0.c0, t2.c71, '-354524863'))))OR((- (t2.c0)))))AND(((vt1.c0)<<(t2.c71))))) ORDER BY (CAST(t2.c71 AS INTEGER) IN ());
SELECT COUNT(*) FROM t2 WHERE (NULL) ORDER BY ((((t2.c0 COLLATE RTRIM)AND(((t2.c0)-(t2.c0)))))AND(((((((((t2.c0)AND(t2.c71)))OR(-1648837631)))AND(t2.c71)))AND(t2.c71)))), (((((t2.c71) ISNULL), ((NULL)=(t2.c71)), ((t2.c0) IS FALSE), CASE WHEN t2.c71 THEN -6.45889529E8 WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, NULL))>((CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END, ((t2.c71) IS TRUE), ((((t2.c0)AND(t2.c0)))AND(t2.c0)), ('' IN (t2.c0)), CAST(t2.c71 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0 COLLATE RTRIM)AND(((t2.c0)-(t2.c0)))))AND(((((((((t2.c0)AND(t2.c71)))OR(-1648837631)))AND(t2.c71)))AND(t2.c71)))), (((((t2.c71) ISNULL), ((NULL)==(t2.c71)), ((t2.c0) IS FALSE), CASE WHEN t2.c71 THEN -6.45889529E8 WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, NULL))>((CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END, ((t2.c71) IS TRUE), ((((t2.c0)AND(t2.c0)))AND(t2.c0)), ('' IN (t2.c0)), CAST(t2.c71 AS REAL)))) ASC);
SELECT COUNT(*) FROM t2 WHERE (NULL) ORDER BY ((((t2.c0 COLLATE RTRIM)AND(((t2.c0)-(t2.c0)))))AND(((((((((t2.c0)AND(t2.c71)))OR(-1648837631)))AND(t2.c71)))AND(t2.c71)))), (((((t2.c71) ISNULL), ((NULL)=(t2.c71)), ((t2.c0) IS FALSE), CASE WHEN t2.c71 THEN -6.45889529E8 WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, NULL))>((CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END, ((t2.c71) IS TRUE), ((((t2.c0)AND(t2.c0)))AND(t2.c0)), ('' IN (t2.c0)), CAST(t2.c71 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0 COLLATE RTRIM)AND(((t2.c0)-(t2.c0)))))AND(((((((((t2.c0)AND(t2.c71)))OR(-1648837631)))AND(t2.c71)))AND(t2.c71)))), (((((t2.c71) ISNULL), ((NULL)==(t2.c71)), ((t2.c0) IS FALSE), CASE WHEN t2.c71 THEN -6.45889529E8 WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, NULL))>((CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END, ((t2.c71) IS TRUE), ((((t2.c0)AND(t2.c0)))AND(t2.c0)), ('' IN (t2.c0)), CAST(t2.c71 AS REAL)))) ASC);
SELECT COUNT(*) FROM t2 WHERE (NULL) ORDER BY ((((t2.c0 COLLATE RTRIM)AND(((t2.c0)-(t2.c0)))))AND(((((((((t2.c0)AND(t2.c71)))OR(-1648837631)))AND(t2.c71)))AND(t2.c71)))), (((((t2.c71) ISNULL), ((NULL)=(t2.c71)), ((t2.c0) IS FALSE), CASE WHEN t2.c71 THEN -6.45889529E8 WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, NULL))>((CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END, ((t2.c71) IS TRUE), ((((t2.c0)AND(t2.c0)))AND(t2.c0)), ('' IN (t2.c0)), CAST(t2.c71 AS REAL)))) ASC;
SELECT * FROM t0, t2 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC)) ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT) ASC);
SELECT * FROM t0, t2 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC)) ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0, t2 ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT) ASC);
SELECT * FROM t0, t2 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC)) ORDER BY CAST(t0.c0 COLLATE RTRIM AS TEXT) ASC;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t2 ON ((((t2.c71)-(t0.c0))) NOT BETWEEN (0xffffffffae2d1452) AND (t2.c0 COLLATE NOCASE)) WHERE (((((t2.c0)IS(t2.c71)))>((t2.c71 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)IS(t2.c71)))>((t2.c71 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN t2 ON ((((t2.c71)-(t0.c0))) NOT BETWEEN (0xffffffffae2d1452) AND (t2.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t2 ON ((((t2.c71)-(t0.c0))) NOT BETWEEN (0xffffffffae2d1452) AND (t2.c0 COLLATE NOCASE)) WHERE (((((t2.c0)IS(t2.c71)))>((t2.c71 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)IS(t2.c71)))>((t2.c71 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN t2 ON ((((t2.c71)-(t0.c0))) NOT BETWEEN (0xffffffffae2d1452) AND (t2.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN t2 ON ((((t2.c71)-(t0.c0))) NOT BETWEEN (0xffffffffae2d1452) AND (t2.c0 COLLATE NOCASE)) WHERE (((((t2.c0)IS(t2.c71)))>((t2.c71 IN ()))));
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (CAST(((t0.c0)&(t2.c0)) AS INTEGER)) ORDER BY (((t2.c71, CAST(t2.c0 AS TEXT), (t2.c71 IN ())))<=((693498274, CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END, 0.37154756287265855))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)&(t2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY (((t2.c71, CAST(t2.c0 AS TEXT), (t2.c71 IN ())))<=((693498274, CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END, 0.37154756287265855))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (CAST(((t0.c0)&(t2.c0)) AS INTEGER)) ORDER BY (((t2.c71, CAST(t2.c0 AS TEXT), (t2.c71 IN ())))<=((693498274, CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END, 0.37154756287265855))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)&(t2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY (((t2.c71, CAST(t2.c0 AS TEXT), (t2.c71 IN ())))<=((693498274, CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END, 0.37154756287265855))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (CAST(((t0.c0)&(t2.c0)) AS INTEGER)) ORDER BY (((t2.c71, CAST(t2.c0 AS TEXT), (t2.c71 IN ())))<=((693498274, CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END, 0.37154756287265855))) ASC  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN t2 ON CAST(((t2.c71) IS TRUE) AS INTEGER) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON CAST(((t2.c71) IS TRUE) AS INTEGER));
SELECT * FROM t0 LEFT OUTER JOIN t2 ON CAST(((t2.c71) IS TRUE) AS INTEGER) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON CAST(((t2.c71) IS TRUE) AS INTEGER));
SELECT * FROM t0 LEFT OUTER JOIN t2 ON CAST(((t2.c71) IS TRUE) AS INTEGER) WHERE (t0.c0);
SELECT * FROM vt1, t2, t0 WHERE (CAST(((((((((NULL)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t2.c71)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((NULL)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t2.c71)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (CAST(((((((((NULL)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t2.c71)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((NULL)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t2.c71)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (CAST(((((((((NULL)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))AND(t2.c71)) AS NUMERIC));
SELECT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END, HEX(vt1.c1)))>((0Xffffffffe6002142, vt1.c0, vt1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) IS TRUE), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END, HEX(vt1.c1)))>((0xffffffffe6002142, vt1.c0, vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END, HEX(vt1.c1)))>((0Xffffffffe6002142, vt1.c0, vt1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) IS TRUE), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END, HEX(vt1.c1)))>((0xffffffffe6002142, vt1.c0, vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0) IS TRUE), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END, HEX(vt1.c1)))>((0Xffffffffe6002142, vt1.c0, vt1.c1 COLLATE RTRIM))));
SELECT * FROM t0 WHERE (ROUND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)*(t0.c0)))) ORDER BY ((CAST(t0.c0 AS INTEGER))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((ROUND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)*(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOTNULL));
SELECT * FROM t0 WHERE (ROUND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)*(t0.c0)))) ORDER BY ((CAST(t0.c0 AS INTEGER))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((ROUND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)*(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOTNULL));
SELECT * FROM t0 WHERE (ROUND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)*(t0.c0)))) ORDER BY ((CAST(t0.c0 AS INTEGER))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS LAST, ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOTNULL);
SELECT ALL COUNT(*) FROM t2 WHERE (((((((t2.c0)AND(t2.c0)))AND(t2.c0)))LIKE(((t2.c71)&(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))LIKE(((t2.c71)&(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((((t2.c0)AND(t2.c0)))AND(t2.c0)))LIKE(((t2.c71)&(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))LIKE(((t2.c71)&(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((((t2.c0)AND(t2.c0)))AND(t2.c0)))LIKE(((t2.c71)&(t2.c0)))));
SELECT ALL * FROM vt1, t2, t0 WHERE (((((''))<((t0.c0))) IN ())) ORDER BY ((((vt1.c0)|(t2.c0)))>((vt1.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((''))<((t0.c0))) IN ())) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((((vt1.c0)|(t2.c0)))>((vt1.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1, t2, t0 WHERE (((((''))<((t0.c0))) IN ())) ORDER BY ((((vt1.c0)|(t2.c0)))>((vt1.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((''))<((t0.c0))) IN ())) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((((vt1.c0)|(t2.c0)))>((vt1.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM vt1, t2, t0 WHERE (((((''))<((t0.c0))) IN ())) ORDER BY ((((vt1.c0)|(t2.c0)))>((vt1.c1 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN RTRIM(vt1.c0) THEN LIKELY(DISTINCT vt1.c1) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c1 WHEN ((vt1.c0)IS(vt1.c1)) THEN vt1.c1 COLLATE BINARY END) ORDER BY (((((vt1.c1, t0.c0, 'i犯y.lrt%m')) NOT BETWEEN ((-8.15093445E8, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) BETWEEN (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (vt1.c1)) ASC  NULLS FIRST, ((CAST(NULL AS INTEGER))=(((t0.c0)%(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN RTRIM(vt1.c0) THEN LIKELY(DISTINCT vt1.c1) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c1 WHEN ((vt1.c0)IS(vt1.c1)) THEN vt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c1, t0.c0, 'i犯y.lrt%m')) NOT BETWEEN ((-8.15093445E8, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) BETWEEN (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (vt1.c1)) ASC  NULLS FIRST, ((CAST(NULL AS INTEGER))==(((t0.c0)%(vt1.c1)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN RTRIM(vt1.c0) THEN LIKELY(DISTINCT vt1.c1) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c1 WHEN ((vt1.c0)IS(vt1.c1)) THEN vt1.c1 COLLATE BINARY END) ORDER BY (((((vt1.c1, t0.c0, 'i犯y.lrt%m')) NOT BETWEEN ((-8.15093445E8, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) BETWEEN (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (vt1.c1)) ASC  NULLS FIRST, ((CAST(NULL AS INTEGER))=(((t0.c0)%(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN RTRIM(vt1.c0) THEN LIKELY(DISTINCT vt1.c1) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c1 WHEN ((vt1.c0)IS(vt1.c1)) THEN vt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((vt1.c1, t0.c0, 'i犯y.lrt%m')) NOT BETWEEN ((-8.15093445E8, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) BETWEEN (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (vt1.c1)) ASC  NULLS FIRST, ((CAST(NULL AS INTEGER))==(((t0.c0)%(vt1.c1)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CASE WHEN RTRIM(vt1.c0) THEN LIKELY(DISTINCT vt1.c1) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c1 WHEN ((vt1.c0)IS(vt1.c1)) THEN vt1.c1 COLLATE BINARY END) ORDER BY (((((vt1.c1, t0.c0, 'i犯y.lrt%m')) NOT BETWEEN ((-8.15093445E8, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0)))) BETWEEN (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0))) AND (vt1.c1)) ASC  NULLS FIRST, ((CAST(NULL AS INTEGER))=(((t0.c0)%(vt1.c1))));
SELECT ALL * FROM vt1, t2, t0 WHERE (((CAST(t2.c0 AS NUMERIC))/(((t2.c0)IS(t0.c0))))) ORDER BY (((t2.c0)) NOT BETWEEN ((CASE WHEN 0.7695339905076249 THEN vt1.c1 END)) AND ((((((((((t0.c0)OR('507756816')))AND(t2.c71)))OR('1945502548')))AND(t2.c71))))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c0 AS NUMERIC))/(((t2.c0)IS(t0.c0))))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY (((t2.c0)) NOT BETWEEN ((CASE WHEN 0.7695339905076249 THEN vt1.c1 END)) AND ((((((((((t0.c0)OR('507756816')))AND(t2.c71)))OR('1945502548')))AND(t2.c71))))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM vt1, t2, t0 WHERE (((CAST(t2.c0 AS NUMERIC))/(((t2.c0)IS(t0.c0))))) ORDER BY (((t2.c0)) NOT BETWEEN ((CASE WHEN 0.7695339905076249 THEN vt1.c1 END)) AND ((((((((((t0.c0)OR('507756816')))AND(t2.c71)))OR('1945502548')))AND(t2.c71))))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c0 AS NUMERIC))/(((t2.c0)IS(t0.c0))))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY (((t2.c0)) NOT BETWEEN ((CASE WHEN 0.7695339905076249 THEN vt1.c1 END)) AND ((((((((((t0.c0)OR('507756816')))AND(t2.c71)))OR('1945502548')))AND(t2.c71))))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM vt1, t2, t0 WHERE (((CAST(t2.c0 AS NUMERIC))/(((t2.c0)IS(t0.c0))))) ORDER BY (((t2.c0)) NOT BETWEEN ((CASE WHEN 0.7695339905076249 THEN vt1.c1 END)) AND ((((((((((t0.c0)OR('507756816')))AND(t2.c71)))OR('1945502548')))AND(t2.c71))))) DESC, (CAST(vt1.c0 AS NUMERIC) IN ());
SELECT ALL * FROM vt1, t2, t0 WHERE ((((t2.c71)&(NULL)) IN ())) ORDER BY ((((((t2.c0)IS NOT(t0.c0)))AND((((('}BydCa\Dh')AND(vt1.c0)))OR(t0.c0)))))OR(((((t2.c0)OR(vt1.c1)))AND(t2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c71)&(NULL)) IN ())) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((((((t2.c0)IS NOT(t0.c0)))AND((((('}BydCa\Dh')AND(vt1.c0)))OR(t0.c0)))))OR(((((t2.c0)OR(vt1.c1)))AND(t2.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t2, t0 WHERE ((((t2.c71)&(NULL)) IN ())) ORDER BY ((((((t2.c0)IS NOT(t0.c0)))AND((((('}BydCa\Dh')AND(vt1.c0)))OR(t0.c0)))))OR(((((t2.c0)OR(vt1.c1)))AND(t2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c71)&(NULL)) IN ())) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((((((t2.c0)IS NOT(t0.c0)))AND((((('}BydCa\Dh')AND(vt1.c0)))OR(t0.c0)))))OR(((((t2.c0)OR(vt1.c1)))AND(t2.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t2, t0 WHERE ((((t2.c71)&(NULL)) IN ())) ORDER BY ((((((t2.c0)IS NOT(t0.c0)))AND((((('}BydCa\Dh')AND(vt1.c0)))OR(t0.c0)))))OR(((((t2.c0)OR(vt1.c1)))AND(t2.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t2, t0 WHERE (((((t2.c0)GLOB(t2.c71))) NOTNULL)) ORDER BY (0.7044617527849253 IN ());
SELECT SUM(count) FROM (SELECT ((((((t2.c0)GLOB(t2.c71))) NOTNULL)) IS TRUE)  as count FROM t2, t0 ORDER BY (0.7044617527849253 IN ()));
SELECT ALL * FROM t2, t0 WHERE (((((t2.c0)GLOB(t2.c71))) NOTNULL)) ORDER BY (0.7044617527849253 IN ());
SELECT SUM(count) FROM (SELECT ((((((t2.c0)GLOB(t2.c71))) NOTNULL)) IS TRUE)  as count FROM t2, t0 ORDER BY (0.7044617527849253 IN ()));
SELECT ALL * FROM t2, t0 WHERE (((((t2.c0)GLOB(t2.c71))) NOTNULL)) ORDER BY (0.7044617527849253 IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN (+ (vt1.c1)) THEN (vt1.c1 IN ()) END) ORDER BY (((NULL))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))  NULLS LAST, ((((vt1.c1 IN ()), ((vt1.c0) ISNULL), CAST(vt1.c0 AS NUMERIC), vt1.c1, (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((0.7262010947669906)))))<((CAST(vt1.c0 AS REAL), ((vt1.c1)>=(vt1.c0)), vt1.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN (+ (vt1.c1)) THEN (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (((NULL))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))  NULLS LAST, ((((vt1.c1 IN ()), ((vt1.c0) ISNULL), CAST(vt1.c0 AS NUMERIC), vt1.c1, (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((0.7262010947669906)))))<((CAST(vt1.c0 AS REAL), ((vt1.c1)>=(vt1.c0)), vt1.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN (+ (vt1.c1)) THEN (vt1.c1 IN ()) END) ORDER BY (((NULL))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))  NULLS LAST, ((((vt1.c1 IN ()), ((vt1.c0) ISNULL), CAST(vt1.c0 AS NUMERIC), vt1.c1, (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((0.7262010947669906)))))<((CAST(vt1.c0 AS REAL), ((vt1.c1)>=(vt1.c0)), vt1.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN (+ (vt1.c1)) THEN (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (((NULL))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))  NULLS LAST, ((((vt1.c1 IN ()), ((vt1.c0) ISNULL), CAST(vt1.c0 AS NUMERIC), vt1.c1, (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((0.7262010947669906)))))<((CAST(vt1.c0 AS REAL), ((vt1.c1)>=(vt1.c0)), vt1.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN (+ (vt1.c1)) THEN (vt1.c1 IN ()) END) ORDER BY (((NULL))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))  NULLS LAST, ((((vt1.c1 IN ()), ((vt1.c0) ISNULL), CAST(vt1.c0 AS NUMERIC), vt1.c1, (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((0.7262010947669906)))))<((CAST(vt1.c0 AS REAL), ((vt1.c1)>=(vt1.c0)), vt1.c1, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)), ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))))  NULLS FIRST;
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON t0.c0 WHERE ((((LIKELY(t2.c0)))<=((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((LIKELY(t2.c0)))<=((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON t0.c0);
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON t0.c0 WHERE ((((LIKELY(t2.c0)))<=((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((LIKELY(t2.c0)))<=((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON t0.c0);
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON t0.c0 WHERE ((((LIKELY(t2.c0)))<=((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))));
SELECT ALL * FROM t2 WHERE ('-1110468640') ORDER BY ((CAST(t2.c71 AS REAL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1110468640') IS TRUE)  as count FROM t2 ORDER BY ((CAST(t2.c71 AS REAL)) NOT NULL) DESC);
SELECT ALL * FROM t2 WHERE ('-1110468640') ORDER BY ((CAST(t2.c71 AS REAL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1110468640') IS TRUE)  as count FROM t2 ORDER BY ((CAST(t2.c71 AS REAL)) NOT NULL) DESC);
SELECT ALL * FROM t2 WHERE ('-1110468640') ORDER BY ((CAST(t2.c71 AS REAL)) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt1, t2, t0 NOT INDEXED WHERE ((- ((- (vt1.c1))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt1.c0)||(0.7995392266657833))) AND ((((x'2896')) BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS LAST, ROUND(NULLIF(t0.c0, t2.c71), CASE t2.c0  WHEN vt1.c1 THEN t2.c0 ELSE t2.c71 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt1.c1))))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt1.c0)||(0.7995392266657833))) AND ((((x'2896')) BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS LAST, ROUND(NULLIF(t0.c0, t2.c71), CASE t2.c0  WHEN vt1.c1 THEN t2.c0 ELSE t2.c71 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2, t0 NOT INDEXED WHERE ((- ((- (vt1.c1))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt1.c0)||(0.7995392266657833))) AND ((((x'2896')) BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS LAST, ROUND(NULLIF(t0.c0, t2.c71), CASE t2.c0  WHEN vt1.c1 THEN t2.c0 ELSE t2.c71 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt1.c1))))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt1.c0)||(0.7995392266657833))) AND ((((x'2896')) BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS LAST, ROUND(NULLIF(t0.c0, t2.c71), CASE t2.c0  WHEN vt1.c1 THEN t2.c0 ELSE t2.c71 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2, t0 NOT INDEXED WHERE ((- ((- (vt1.c1))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c1 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt1.c0)||(0.7995392266657833))) AND ((((x'2896')) BETWEEN ((t2.c0)) AND ((t2.c0))))) DESC  NULLS LAST, ROUND(NULLIF(t0.c0, t2.c71), CASE t2.c0  WHEN vt1.c1 THEN t2.c0 ELSE t2.c71 END)  NULLS FIRST;
SELECT ALL * FROM t2 WHERE (CASE WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN ((t2.c71)<=(x'')) ELSE CAST(NULL AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN ((t2.c71)<=(x'')) ELSE CAST(NULL AS REAL) END) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (CASE WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN ((t2.c71)<=(x'')) ELSE CAST(NULL AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN ((t2.c71)<=(x'')) ELSE CAST(NULL AS REAL) END) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (CASE WHEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 END THEN ((t2.c71)<=(x'')) ELSE CAST(NULL AS REAL) END);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (CAST(json_insert(vt1.c0, t2.c71, t2.c0, vt1.c0, vt1.c0) AS REAL)) ORDER BY ((((t2.c71) IS FALSE))<(CASE WHEN t2.c71 THEN vt1.c1 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_insert(vt1.c0, t2.c71, t2.c0, vt1.c0, vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1 NATURAL JOIN t2 ORDER BY ((((t2.c71) IS FALSE))<(CASE WHEN t2.c71 THEN vt1.c1 ELSE vt1.c0 END)) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (CAST(json_insert(vt1.c0, t2.c71, t2.c0, vt1.c0, vt1.c0) AS REAL)) ORDER BY ((((t2.c71) IS FALSE))<(CASE WHEN t2.c71 THEN vt1.c1 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_insert(vt1.c0, t2.c71, t2.c0, vt1.c0, vt1.c0) AS REAL)) IS TRUE)  as count FROM vt1 NATURAL JOIN t2 ORDER BY ((((t2.c71) IS FALSE))<(CASE WHEN t2.c71 THEN vt1.c1 ELSE vt1.c0 END)) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (CAST(json_insert(vt1.c0, t2.c71, t2.c0, vt1.c0, vt1.c0) AS REAL)) ORDER BY ((((t2.c71) IS FALSE))<(CASE WHEN t2.c71 THEN vt1.c1 ELSE vt1.c0 END)) ASC;
SELECT * FROM t2, t0, vt1 WHERE (((((t2.c0) NOT BETWEEN (t0.c0) AND (NULL))) BETWEEN (((t2.c0) ISNULL)) AND (((vt1.c1)<=(t0.c0))))) ORDER BY ((((((((0.011388948042006963)AND(TRIM(t2.c0, t2.c0))))AND((('b wGnQ\r') BETWEEN (0.8811260834417434) AND (t2.c71)))))AND((t2.c71 IN (t2.c0, t2.c71)))))OR((t2.c71 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (t0.c0) AND (NULL))) BETWEEN (((t2.c0) ISNULL)) AND (((vt1.c1)<=(t0.c0))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((((((((0.011388948042006963)AND(TRIM(t2.c0, t2.c0))))AND((('b wGnQ\r') BETWEEN (0.8811260834417434) AND (t2.c71)))))AND((t2.c71 IN (t2.c0, t2.c71)))))OR((t2.c71 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t2, t0, vt1 WHERE (((((t2.c0) NOT BETWEEN (t0.c0) AND (NULL))) BETWEEN (((t2.c0) ISNULL)) AND (((vt1.c1)<=(t0.c0))))) ORDER BY ((((((((0.011388948042006963)AND(TRIM(t2.c0, t2.c0))))AND((('b wGnQ\r') BETWEEN (0.8811260834417434) AND (t2.c71)))))AND((t2.c71 IN (t2.c0, t2.c71)))))OR((t2.c71 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (t0.c0) AND (NULL))) BETWEEN (((t2.c0) ISNULL)) AND (((vt1.c1)<=(t0.c0))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((((((((0.011388948042006963)AND(TRIM(t2.c0, t2.c0))))AND((('b wGnQ\r') BETWEEN (0.8811260834417434) AND (t2.c71)))))AND((t2.c71 IN (t2.c0, t2.c71)))))OR((t2.c71 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t2, t0, vt1 WHERE (((((t2.c0) NOT BETWEEN (t0.c0) AND (NULL))) BETWEEN (((t2.c0) ISNULL)) AND (((vt1.c1)<=(t0.c0))))) ORDER BY ((((((((0.011388948042006963)AND(TRIM(t2.c0, t2.c0))))AND((('b wGnQ\r') BETWEEN (0.8811260834417434) AND (t2.c71)))))AND((t2.c71 IN (t2.c0, t2.c71)))))OR((t2.c71 IN ()))) DESC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE ((- (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((- (CAST(NULL AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(NULL AS TEXT)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((- (CAST(NULL AS TEXT))));
SELECT * FROM t2 WHERE (((((((t2.c71)|(t2.c71)))AND(t2.c0)))AND(((((((((t2.c71)OR(t2.c0)))OR(t2.c0)))AND(0.3789782462882335)))OR(t2.c0))))) ORDER BY t2.c71 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t2.c71)|(t2.c71)))AND(t2.c0)))AND(((((((((t2.c71)OR(t2.c0)))OR(t2.c0)))AND(0.3789782462882335)))OR(t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY t2.c71 ASC);
SELECT * FROM t2 WHERE (((((((t2.c71)|(t2.c71)))AND(t2.c0)))AND(((((((((t2.c71)OR(t2.c0)))OR(t2.c0)))AND(0.3789782462882335)))OR(t2.c0))))) ORDER BY t2.c71 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t2.c71)|(t2.c71)))AND(t2.c0)))AND(((((((((t2.c71)OR(t2.c0)))OR(t2.c0)))AND(0.3789782462882335)))OR(t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY t2.c71 ASC);
SELECT * FROM t2 WHERE (((((((t2.c71)|(t2.c71)))AND(t2.c0)))AND(((((((((t2.c71)OR(t2.c0)))OR(t2.c0)))AND(0.3789782462882335)))OR(t2.c0))))) ORDER BY t2.c71 ASC;
SELECT * FROM t2 NOT INDEXED, t0 LEFT OUTER JOIN vt1 ON ((UPPER(t2.c71)) NOT BETWEEN (load_extension(vt1.c0, vt1.c0)) AND (CAST(t2.c0 AS REAL))) WHERE ((((t2.c71, t2.c0, t2.c0)) NOT BETWEEN (((((t2.c71, t2.c71, '1719453990')) NOT BETWEEN ((t0.c0, t2.c0, x'f0fc4a7e')) AND ((t0.c0, t0.c0, t2.c71))), t0.c0 COLLATE RTRIM, ((t2.c0)<=(t2.c0)))) AND ((CAST(t0.c0 AS TEXT), ((vt1.c1)-(t2.c71)), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t2.c71, t2.c0, t2.c0)) NOT BETWEEN (((((t2.c71, t2.c71, '1719453990')) NOT BETWEEN ((t0.c0, t2.c0, x'f0fc4a7e')) AND ((t0.c0, t0.c0, t2.c71))), t0.c0 COLLATE RTRIM, ((t2.c0)<=(t2.c0)))) AND ((CAST(t0.c0 AS TEXT), ((vt1.c1)-(t2.c71)), (vt1.c0 IN ()))))) IS TRUE)  as count FROM t2, t0 LEFT OUTER JOIN vt1 ON ((UPPER(t2.c71)) NOT BETWEEN (load_extension(vt1.c0, vt1.c0)) AND (CAST(t2.c0 AS REAL))));
SELECT * FROM t2 NOT INDEXED, t0 LEFT OUTER JOIN vt1 ON ((UPPER(t2.c71)) NOT BETWEEN (load_extension(vt1.c0, vt1.c0)) AND (CAST(t2.c0 AS REAL))) WHERE ((((t2.c71, t2.c0, t2.c0)) NOT BETWEEN (((((t2.c71, t2.c71, '1719453990')) NOT BETWEEN ((t0.c0, t2.c0, x'f0fc4a7e')) AND ((t0.c0, t0.c0, t2.c71))), t0.c0 COLLATE RTRIM, ((t2.c0)<=(t2.c0)))) AND ((CAST(t0.c0 AS TEXT), ((vt1.c1)-(t2.c71)), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t2.c71, t2.c0, t2.c0)) NOT BETWEEN (((((t2.c71, t2.c71, '1719453990')) NOT BETWEEN ((t0.c0, t2.c0, x'f0fc4a7e')) AND ((t0.c0, t0.c0, t2.c71))), t0.c0 COLLATE RTRIM, ((t2.c0)<=(t2.c0)))) AND ((CAST(t0.c0 AS TEXT), ((vt1.c1)-(t2.c71)), (vt1.c0 IN ()))))) IS TRUE)  as count FROM t2, t0 LEFT OUTER JOIN vt1 ON ((UPPER(t2.c71)) NOT BETWEEN (load_extension(vt1.c0, vt1.c0)) AND (CAST(t2.c0 AS REAL))));
SELECT ALL * FROM t2 WHERE (CAST((t2.c71 IN (t2.c0)) AS INTEGER)) ORDER BY UNICODE(((t2.c71) BETWEEN (t2.c71) AND (t2.c71))) DESC  NULLS FIRST, ((LIKELY(t2.c0))*((t2.c71 IN (t2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t2.c71 IN (t2.c0)) AS INTEGER)) IS TRUE)  as count FROM t2 ORDER BY UNICODE(((t2.c71) BETWEEN (t2.c71) AND (t2.c71))) DESC  NULLS FIRST, ((LIKELY(t2.c0))*((t2.c71 IN (t2.c0))))  NULLS LAST);
SELECT ALL * FROM t2 WHERE (CAST((t2.c71 IN (t2.c0)) AS INTEGER)) ORDER BY UNICODE(((t2.c71) BETWEEN (t2.c71) AND (t2.c71))) DESC  NULLS FIRST, ((LIKELY(t2.c0))*((t2.c71 IN (t2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t2.c71 IN (t2.c0)) AS INTEGER)) IS TRUE)  as count FROM t2 ORDER BY UNICODE(((t2.c71) BETWEEN (t2.c71) AND (t2.c71))) DESC  NULLS FIRST, ((LIKELY(t2.c0))*((t2.c71 IN (t2.c0))))  NULLS LAST);
SELECT ALL * FROM t2 WHERE (CAST((t2.c71 IN (t2.c0)) AS INTEGER)) ORDER BY UNICODE(((t2.c71) BETWEEN (t2.c71) AND (t2.c71))) DESC  NULLS FIRST, ((LIKELY(t2.c0))*((t2.c71 IN (t2.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0, t2 WHERE (t0.c0) ORDER BY ((-1.648837631E9) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t2 ORDER BY ((-1.648837631E9) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (t0.c0) ORDER BY ((-1.648837631E9) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t2 ORDER BY ((-1.648837631E9) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (t0.c0) ORDER BY ((-1.648837631E9) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON ((((t2.c0) NOTNULL))GLOB(((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) WHERE (((TYPEOF(DISTINCT '507756816')) NOT BETWEEN (0.46420178696051884) AND (CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT '507756816')) NOT BETWEEN (0.46420178696051884) AND (CAST(NULL AS REAL)))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((((t2.c0) NOTNULL))GLOB(((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON ((((t2.c0) NOTNULL))GLOB(((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) WHERE (((TYPEOF(DISTINCT '507756816')) NOT BETWEEN (0.46420178696051884) AND (CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT '507756816')) NOT BETWEEN (0.46420178696051884) AND (CAST(NULL AS REAL)))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((((t2.c0) NOTNULL))GLOB(((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON ((((t2.c0) NOTNULL))GLOB(((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) WHERE (((TYPEOF(DISTINCT '507756816')) NOT BETWEEN (0.46420178696051884) AND (CAST(NULL AS REAL))));
SELECT COUNT(*) FROM t2 WHERE (CAST(TYPEOF(DISTINCT t2.c71) AS INTEGER)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT t2.c71) AS INTEGER)) IS TRUE)  as count FROM t2 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM t2 WHERE (CAST(TYPEOF(DISTINCT t2.c71) AS INTEGER)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT t2.c71) AS INTEGER)) IS TRUE)  as count FROM t2 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM t2 WHERE (CAST(TYPEOF(DISTINCT t2.c71) AS INTEGER)) ORDER BY x''  NULLS LAST;
SELECT ALL COUNT(*) FROM t2 WHERE (NULLIF(DISTINCT ((x'') IS FALSE), (t2.c71 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((x'') IS FALSE), (t2.c71 IN ()))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (NULLIF(DISTINCT ((x'') IS FALSE), (t2.c71 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((x'') IS FALSE), (t2.c71 IN ()))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (NULLIF(DISTINCT ((x'') IS FALSE), (t2.c71 IN ())));
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c1))IS NOT(UNLIKELY(vt1.c0)))) ORDER BY CAST('櫥堊YRKK' AS REAL)  NULLS LAST, CASE WHEN (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, 0xffffffffeb134355, vt1.c1)) AND ((vt1.c1, vt1.c1, vt1.c1))) THEN COALESCE(vt1.c0, vt1.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c1))IS NOT(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST('櫥堊YRKK' AS REAL)  NULLS LAST, CASE WHEN (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, 0xffffffffeb134355, vt1.c1)) AND ((vt1.c1, vt1.c1, vt1.c1))) THEN COALESCE(vt1.c0, vt1.c0) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c1))IS NOT(UNLIKELY(vt1.c0)))) ORDER BY CAST('櫥堊YRKK' AS REAL)  NULLS LAST, CASE WHEN (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, 0xffffffffeb134355, vt1.c1)) AND ((vt1.c1, vt1.c1, vt1.c1))) THEN COALESCE(vt1.c0, vt1.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c1))IS NOT(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST('櫥堊YRKK' AS REAL)  NULLS LAST, CASE WHEN (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, 0xffffffffeb134355, vt1.c1)) AND ((vt1.c1, vt1.c1, vt1.c1))) THEN COALESCE(vt1.c0, vt1.c0) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c1))IS NOT(UNLIKELY(vt1.c0)))) ORDER BY CAST('櫥堊YRKK' AS REAL)  NULLS LAST, CASE WHEN (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, 0xffffffffeb134355, vt1.c1)) AND ((vt1.c1, vt1.c1, vt1.c1))) THEN COALESCE(vt1.c0, vt1.c0) END  NULLS LAST;
SELECT * FROM t2 CROSS JOIN t0 ON CAST((t2.c71 IN ()) AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0)) BETWEEN (((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))) AND ((+ (t2.c0)))) WHERE (json_array_length(((((((((x'')AND(t2.c0)))AND(0.2227582107907471)))OR('')))AND(t2.c0)))) ORDER BY ((0x3ff9580a)!=(((t0.c0)IS NOT(vt1.c0))))  NULLS LAST, ((((t0.c0)!=(t2.c0)))/(json_array_length(t0.c0)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((((((x'')AND(t2.c0)))AND(0.2227582107907471)))OR('')))AND(t2.c0)))) IS TRUE)  as count FROM t2 CROSS JOIN t0 ON CAST((t2.c71 IN ()) AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0)) BETWEEN (((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))) AND ((+ (t2.c0)))) ORDER BY ((0X3ff9580a)<>(((t0.c0)IS NOT(vt1.c0))))  NULLS LAST, ((((t0.c0)!=(t2.c0)))/(json_array_length(t0.c0))));
SELECT * FROM t2 CROSS JOIN t0 ON CAST((t2.c71 IN ()) AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0)) BETWEEN (((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))) AND ((+ (t2.c0)))) WHERE (json_array_length(((((((((x'')AND(t2.c0)))AND(0.2227582107907471)))OR('')))AND(t2.c0)))) ORDER BY ((0x3ff9580a)!=(((t0.c0)IS NOT(vt1.c0))))  NULLS LAST, ((((t0.c0)!=(t2.c0)))/(json_array_length(t0.c0)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((((((((x'')AND(t2.c0)))AND(0.2227582107907471)))OR('')))AND(t2.c0)))) IS TRUE)  as count FROM t2 CROSS JOIN t0 ON CAST((t2.c71 IN ()) AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0)) BETWEEN (((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))) AND ((+ (t2.c0)))) ORDER BY ((0X3ff9580a)<>(((t0.c0)IS NOT(vt1.c0))))  NULLS LAST, ((((t0.c0)!=(t2.c0)))/(json_array_length(t0.c0))));
SELECT * FROM t2 CROSS JOIN t0 ON CAST((t2.c71 IN ()) AS NUMERIC) LEFT OUTER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0)) BETWEEN (((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))) AND ((+ (t2.c0)))) WHERE (json_array_length(((((((((x'')AND(t2.c0)))AND(0.2227582107907471)))OR('')))AND(t2.c0)))) ORDER BY ((0x3ff9580a)!=(((t0.c0)IS NOT(vt1.c0))))  NULLS LAST, ((((t0.c0)!=(t2.c0)))/(json_array_length(t0.c0)));
SELECT ALL * FROM t2, vt1 NATURAL JOIN t0 WHERE ((~ (t0.c0 COLLATE RTRIM))) ORDER BY RTRIM(((x'0fc0')>(vt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2, vt1 NATURAL JOIN t0 ORDER BY RTRIM(((x'0fc0')>(vt1.c1))) DESC  NULLS LAST);
SELECT ALL * FROM t2, vt1 NATURAL JOIN t0 WHERE ((~ (t0.c0 COLLATE RTRIM))) ORDER BY RTRIM(((x'0fc0')>(vt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2, vt1 NATURAL JOIN t0 ORDER BY RTRIM(((x'0fc0')>(vt1.c1))) DESC  NULLS LAST);
SELECT ALL * FROM t2, vt1 NATURAL JOIN t0 WHERE ((~ (t0.c0 COLLATE RTRIM))) ORDER BY RTRIM(((x'0fc0')>(vt1.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((t2.c0) ISNULL))OR(t2.c0)))AND(vt1.c1))) ORDER BY ((((t2.c71)%(vt1.c0))) IS TRUE) ASC, ((((t2.c71) NOT BETWEEN ('') AND (vt1.c1)))||(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c0) ISNULL))OR(t2.c0)))AND(vt1.c1))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((t2.c71)%(vt1.c0))) IS TRUE) ASC, ((((t2.c71) NOT BETWEEN ('') AND (vt1.c1)))||(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((t2.c0) ISNULL))OR(t2.c0)))AND(vt1.c1))) ORDER BY ((((t2.c71)%(vt1.c0))) IS TRUE) ASC, ((((t2.c71) NOT BETWEEN ('') AND (vt1.c1)))||(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c0) ISNULL))OR(t2.c0)))AND(vt1.c1))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((t2.c71)%(vt1.c0))) IS TRUE) ASC, ((((t2.c71) NOT BETWEEN ('') AND (vt1.c1)))||(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((t2.c0) ISNULL))OR(t2.c0)))AND(vt1.c1))) ORDER BY ((((t2.c71)%(vt1.c0))) IS TRUE) ASC, ((((t2.c71) NOT BETWEEN ('') AND (vt1.c1)))||(vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(t2.c0))  WHEN (vt1.c0 IN ()) THEN ((0.5054285305001239) IS FALSE) ELSE 'KP' END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(t0.c0)))OR(t2.c0))  WHEN (vt1.c0 IN ()) THEN ((0.5054285305001239) IS FALSE) ELSE 'KP' END) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(t2.c0))  WHEN (vt1.c0 IN ()) THEN ((0.5054285305001239) IS FALSE) ELSE 'KP' END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(t0.c0)))OR(t2.c0))  WHEN (vt1.c0 IN ()) THEN ((0.5054285305001239) IS FALSE) ELSE 'KP' END) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE ((((t0.c0)AND(t0.c0)))OR(t2.c0))  WHEN (vt1.c0 IN ()) THEN ((0.5054285305001239) IS FALSE) ELSE 'KP' END);
SELECT * FROM t0, t2, vt1 NOT INDEXED WHERE (0.6419365750041871) ORDER BY ((((((((t0.c0)OR(t2.c0)))AND(t0.c0)))OR(vt1.c1)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6419365750041871) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((((((((t0.c0)OR(t2.c0)))AND(t0.c0)))OR(vt1.c1)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, t2, vt1 NOT INDEXED WHERE (0.6419365750041871) ORDER BY ((((((((t0.c0)OR(t2.c0)))AND(t0.c0)))OR(vt1.c1)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6419365750041871) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((((((((t0.c0)OR(t2.c0)))AND(t0.c0)))OR(vt1.c1)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0, t2, vt1 NOT INDEXED WHERE (0.6419365750041871) ORDER BY ((((((((t0.c0)OR(t2.c0)))AND(t0.c0)))OR(vt1.c1)))OR(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2 WHERE ((~ (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)))));
SELECT SUM(count) FROM (SELECT (((~ (((t2.c0) BETWEEN (t2.c71) AND (t2.c71))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((~ (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)))));
SELECT SUM(count) FROM (SELECT (((~ (((t2.c0) BETWEEN (t2.c71) AND (t2.c71))))) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((~ (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)))));
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((('?m~뷽\ni ')+(CAST('-1364665688' AS TEXT)))) ORDER BY ((((((vt1.c1)>(-1.57741073E8)))OR(((t0.c0)OR(vt1.c0)))))OR(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS LAST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('?m~뷽\ni ')+(CAST('-1364665688' AS TEXT)))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((((((vt1.c1)>(-1.57741073E8)))OR(((t0.c0)OR(vt1.c0)))))OR(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS LAST, t0.c0  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((('?m~뷽\ni ')+(CAST('-1364665688' AS TEXT)))) ORDER BY ((((((vt1.c1)>(-1.57741073E8)))OR(((t0.c0)OR(vt1.c0)))))OR(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS LAST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('?m~뷽\ni ')+(CAST('-1364665688' AS TEXT)))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((((((vt1.c1)>(-1.57741073E8)))OR(((t0.c0)OR(vt1.c0)))))OR(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS LAST, t0.c0  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN t0 WHERE ((('?m~뷽\ni ')+(CAST('-1364665688' AS TEXT)))) ORDER BY ((((((vt1.c1)>(-1.57741073E8)))OR(((t0.c0)OR(vt1.c0)))))OR(((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS LAST, t0.c0  NULLS FIRST;
SELECT ALL * FROM t2, t0, vt1 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM t2, t0, vt1 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM t2, t0, vt1 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY)>(CAST(vt1.c0 AS REAL)));
SELECT ALL * FROM vt1, t2 WHERE ((((-1987266179)) BETWEEN ((HEX(DISTINCT x''))) AND ((1668076816))));
SELECT SUM(count) FROM (SELECT (((((-1987266179)) BETWEEN ((HEX(DISTINCT x''))) AND ((1668076816)))) IS TRUE)  as count FROM vt1, t2);
SELECT ALL * FROM vt1, t2 WHERE ((((-1987266179)) BETWEEN ((HEX(DISTINCT x''))) AND ((1668076816))));
SELECT SUM(count) FROM (SELECT (((((-1987266179)) BETWEEN ((HEX(DISTINCT x''))) AND ((1668076816)))) IS TRUE)  as count FROM vt1, t2);
SELECT ALL * FROM vt1, t2 WHERE ((((-1987266179)) BETWEEN ((HEX(DISTINCT x''))) AND ((1668076816))));
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE ((- (NULL))) ORDER BY load_extension(CAST(t2.c0 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY load_extension(CAST(t2.c0 AS BLOB))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE ((- (NULL))) ORDER BY load_extension(CAST(t2.c0 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY load_extension(CAST(t2.c0 AS BLOB))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c1)))&(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c1)))&(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c1)))&(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c1)))&(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c1)))&(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM t2, t0 NATURAL JOIN vt1 WHERE (CAST(((((vt1.c1)AND(t0.c0)))OR(t2.c71)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)AND(t0.c0)))OR(t2.c71)) AS NUMERIC)) IS TRUE)  as count FROM t2, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t2, t0 NATURAL JOIN vt1 WHERE (CAST(((((vt1.c1)AND(t0.c0)))OR(t2.c71)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)AND(t0.c0)))OR(t2.c71)) AS NUMERIC)) IS TRUE)  as count FROM t2, t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t2, t0 NATURAL JOIN vt1 WHERE (CAST(((((vt1.c1)AND(t0.c0)))OR(t2.c71)) AS NUMERIC));
SELECT ALL * FROM vt1, t2 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE ((((((((t2.c0)AND(vt1.c1)))AND(vt1.c1))))<>((('' IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((t2.c0)AND(vt1.c1)))AND(vt1.c1))))<>((('' IN ()))))) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID());
SELECT ALL * FROM vt1, t2 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE ((((((((t2.c0)AND(vt1.c1)))AND(vt1.c1))))<>((('' IN ())))));
SELECT SUM(count) FROM (SELECT (((((((((t2.c0)AND(vt1.c1)))AND(vt1.c1))))<>((('' IN ()))))) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID());
SELECT ALL * FROM vt1, t2 RIGHT OUTER JOIN t0 ON LAST_INSERT_ROWID() WHERE ((((((((t2.c0)AND(vt1.c1)))AND(vt1.c1))))<>((('' IN ())))));
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.5307757597826464))<>(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c1, 0.5307757597826464))<>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.5307757597826464))<>(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c1, 0.5307757597826464))<>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.5307757597826464))<>(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1, t2 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 COLLATE BINARY END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t2 ORDER BY NULL);
SELECT ALL * FROM vt1, t2 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 COLLATE BINARY END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t2 ORDER BY NULL);
SELECT ALL * FROM vt1, t2 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 COLLATE BINARY END) ORDER BY NULL;
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(t0.c0, t0.c0)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(0.16824561972855268)))AND('''旸 D9r僢N\n')))AND(NULL)))*(((t0.c0)-(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c0, t0.c0)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(0.16824561972855268)))AND('''旸 D9r僢N\n')))AND(NULL)))*(((t0.c0)-(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(t0.c0, t0.c0)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(0.16824561972855268)))AND('''旸 D9r僢N\n')))AND(NULL)))*(((t0.c0)-(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t0.c0, t0.c0)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(0.16824561972855268)))AND('''旸 D9r僢N\n')))AND(NULL)))*(((t0.c0)-(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULLIF(t0.c0, t0.c0)) BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ())))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))AND(0.16824561972855268)))AND('''旸 D9r僢N\n')))AND(NULL)))*(((t0.c0)-(t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt1 ON TRIM(((((vt1.c0)OR(vt1.c1)))OR(t2.c0))) WHERE (TRIM(((vt1.c0)GLOB(t2.c71)), ((vt1.c1)*(''))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt1.c0)GLOB(t2.c71)), ((vt1.c1)*('')))) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt1 ON TRIM(((((vt1.c0)OR(vt1.c1)))OR(t2.c0))));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt1 ON TRIM(((((vt1.c0)OR(vt1.c1)))OR(t2.c0))) WHERE (TRIM(((vt1.c0)GLOB(t2.c71)), ((vt1.c1)*(''))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt1.c0)GLOB(t2.c71)), ((vt1.c1)*('')))) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt1 ON TRIM(((((vt1.c0)OR(vt1.c1)))OR(t2.c0))));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt1 ON TRIM(((((vt1.c0)OR(vt1.c1)))OR(t2.c0))) WHERE (TRIM(((vt1.c0)GLOB(t2.c71)), ((vt1.c1)*(''))));
SELECT * FROM t2, vt1 WHERE (((NULL COLLATE BINARY)|(((vt1.c0) BETWEEN ('-1973061351') AND (t2.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE BINARY)|(((vt1.c0) BETWEEN ('-1973061351') AND (t2.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB) ASC);
SELECT * FROM t2, vt1 WHERE (((NULL COLLATE BINARY)|(((vt1.c0) BETWEEN ('-1973061351') AND (t2.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE BINARY)|(((vt1.c0) BETWEEN ('-1973061351') AND (t2.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB) ASC);
SELECT * FROM t2, vt1 WHERE (((NULL COLLATE BINARY)|(((vt1.c0) BETWEEN ('-1973061351') AND (t2.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS BLOB) ASC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON (NULL IN (t2.c0)) COLLATE NOCASE WHERE (((t2.c71 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON (NULL IN (t2.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON (NULL IN (t2.c0)) COLLATE NOCASE WHERE (((t2.c71 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON (NULL IN (t2.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON (NULL IN (t2.c0)) COLLATE NOCASE WHERE (((t2.c71 COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT (vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (x'') ORDER BY (((t2.c0)) NOT BETWEEN ((((((((((((((((((t2.c0)AND(vt1.c1)))OR('-990045713')))OR(t2.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(NULL)))OR(-3.54524863E8)))OR(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t2 ORDER BY (((t2.c0)) NOT BETWEEN ((((((((((((((((((t2.c0)AND(vt1.c1)))OR('-990045713')))OR(t2.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(NULL)))OR(-3.54524863E8)))OR(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (x'') ORDER BY (((t2.c0)) NOT BETWEEN ((((((((((((((((((t2.c0)AND(vt1.c1)))OR('-990045713')))OR(t2.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(NULL)))OR(-3.54524863E8)))OR(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t2 ORDER BY (((t2.c0)) NOT BETWEEN ((((((((((((((((((t2.c0)AND(vt1.c1)))OR('-990045713')))OR(t2.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(NULL)))OR(-3.54524863E8)))OR(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (x'') ORDER BY (((t2.c0)) NOT BETWEEN ((((((((((((((((((t2.c0)AND(vt1.c1)))OR('-990045713')))OR(t2.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(NULL)))OR(-3.54524863E8)))OR(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT)))) ASC  NULLS FIRST;
SELECT ALL * FROM t2, t0, vt1 WHERE ((((((t2.c71) NOTNULL)))<>(((- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c71) NOTNULL)))<>(((- (vt1.c0)))))) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL * FROM t2, t0, vt1 WHERE ((((((t2.c71) NOTNULL)))<>(((- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c71) NOTNULL)))<>(((- (vt1.c0)))))) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL * FROM t2, t0, vt1 WHERE ((((((t2.c71) NOTNULL)))<>(((- (vt1.c0))))));
SELECT * FROM vt1 WHERE ((((~ (vt1.c1)))IS NOT(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1)))IS NOT(x'' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((~ (vt1.c1)))IS NOT(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1)))IS NOT(x'' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((~ (vt1.c1)))IS NOT(x'' COLLATE NOCASE)));
SELECT ALL * FROM t0, t2 WHERE ((((((t0.c0 IN ()))OR(((t2.c0)GLOB(t0.c0)))))OR(((t2.c0) NOT BETWEEN (t2.c71) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))OR(((t2.c0)GLOB(t0.c0)))))OR(((t2.c0) NOT BETWEEN (t2.c71) AND (t0.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL * FROM t0, t2 WHERE ((((((t0.c0 IN ()))OR(((t2.c0)GLOB(t0.c0)))))OR(((t2.c0) NOT BETWEEN (t2.c71) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))OR(((t2.c0)GLOB(t0.c0)))))OR(((t2.c0) NOT BETWEEN (t2.c71) AND (t0.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL * FROM t0, t2 WHERE ((((((t0.c0 IN ()))OR(((t2.c0)GLOB(t0.c0)))))OR(((t2.c0) NOT BETWEEN (t2.c71) AND (t0.c0)))));
SELECT * FROM t0, vt1, t2 WHERE (((((LIKELY(DISTINCT t2.c71))AND((NULL IN ()))))AND(CAST(t2.c71 AS BLOB)))) ORDER BY (((vt1.c1)) BETWEEN ((((t2.c71)OR(t2.c71)))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT t2.c71))AND((NULL IN ()))))AND(CAST(t2.c71 AS BLOB)))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((vt1.c1)) BETWEEN ((((t2.c71)OR(t2.c71)))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST, x'');
SELECT * FROM t0, vt1, t2 WHERE (((((LIKELY(DISTINCT t2.c71))AND((NULL IN ()))))AND(CAST(t2.c71 AS BLOB)))) ORDER BY (((vt1.c1)) BETWEEN ((((t2.c71)OR(t2.c71)))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ((((((LIKELY(DISTINCT t2.c71))AND((NULL IN ()))))AND(CAST(t2.c71 AS BLOB)))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((vt1.c1)) BETWEEN ((((t2.c71)OR(t2.c71)))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST, x'');
SELECT * FROM t0, vt1, t2 WHERE (((((LIKELY(DISTINCT t2.c71))AND((NULL IN ()))))AND(CAST(t2.c71 AS BLOB)))) ORDER BY (((vt1.c1)) BETWEEN ((((t2.c71)OR(t2.c71)))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST, x'';
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), 2.34559953E8;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), 2.34559953E8);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), 2.34559953E8;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), 2.34559953E8);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), 2.34559953E8;
SELECT ALL COUNT(*) FROM vt1, t2 NATURAL JOIN t0 WHERE (((((vt1.c0) NOT BETWEEN (t2.c71) AND (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (t2.c71) AND (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, t2 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, t2 NATURAL JOIN t0 WHERE (((((vt1.c0) NOT BETWEEN (t2.c71) AND (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (t2.c71) AND (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, t2 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, t2 NATURAL JOIN t0 WHERE (((((vt1.c0) NOT BETWEEN (t2.c71) AND (vt1.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (((CHANGES())|((((t0.c0, t0.c0, t2.c0))=((t0.c0, vt1.c0, t2.c0)))))) ORDER BY (+ (CASE WHEN vt1.c1 THEN t2.c0 ELSE vt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES())|((((t0.c0, t0.c0, t2.c0))=((t0.c0, vt1.c0, t2.c0)))))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY (+ (CASE WHEN vt1.c1 THEN t2.c0 ELSE vt1.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (((CHANGES())|((((t0.c0, t0.c0, t2.c0))=((t0.c0, vt1.c0, t2.c0)))))) ORDER BY (+ (CASE WHEN vt1.c1 THEN t2.c0 ELSE vt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES())|((((t0.c0, t0.c0, t2.c0))=((t0.c0, vt1.c0, t2.c0)))))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY (+ (CASE WHEN vt1.c1 THEN t2.c0 ELSE vt1.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (((CHANGES())|((((t0.c0, t0.c0, t2.c0))=((t0.c0, vt1.c0, t2.c0)))))) ORDER BY (+ (CASE WHEN vt1.c1 THEN t2.c0 ELSE vt1.c0 END)) DESC  NULLS LAST;
SELECT * FROM vt1, t2, t0 WHERE ((((CAST(vt1.c1 AS BLOB)))<>((LIKE(t2.c0, 0.07251899112511129, '1')))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c1 AS BLOB)))!=((LIKE(t2.c0, 0.07251899112511129, '1'))))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE ((((CAST(vt1.c1 AS BLOB)))<>((LIKE(t2.c0, 0.07251899112511129, '1')))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c1 AS BLOB)))!=((LIKE(t2.c0, 0.07251899112511129, '1'))))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE ((((CAST(vt1.c1 AS BLOB)))<>((LIKE(t2.c0, 0.07251899112511129, '1')))));
SELECT * FROM t2 RIGHT OUTER JOIN vt1 ON (((((t2.c0)==(vt1.c1))))<((((((((((vt1.c1)AND(t2.c0)))OR(vt1.c1)))OR(t2.c71)))OR(vt1.c1))))) WHERE (vt1.c1) ORDER BY RTRIM((+ (vt1.c0))), ((TRIM(NULL)) NOT BETWEEN (t2.c71) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON (((((t2.c0)==(vt1.c1))))<((((((((((vt1.c1)AND(t2.c0)))OR(vt1.c1)))OR(t2.c71)))OR(vt1.c1))))) ORDER BY RTRIM((+ (vt1.c0))), ((TRIM(NULL)) NOT BETWEEN (t2.c71) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t2 RIGHT OUTER JOIN vt1 ON (((((t2.c0)==(vt1.c1))))<((((((((((vt1.c1)AND(t2.c0)))OR(vt1.c1)))OR(t2.c71)))OR(vt1.c1))))) WHERE (vt1.c1) ORDER BY RTRIM((+ (vt1.c0))), ((TRIM(NULL)) NOT BETWEEN (t2.c71) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON (((((t2.c0)==(vt1.c1))))<((((((((((vt1.c1)AND(t2.c0)))OR(vt1.c1)))OR(t2.c71)))OR(vt1.c1))))) ORDER BY RTRIM((+ (vt1.c0))), ((TRIM(NULL)) NOT BETWEEN (t2.c71) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t2 RIGHT OUTER JOIN vt1 ON (((((t2.c0)==(vt1.c1))))<((((((((((vt1.c1)AND(t2.c0)))OR(vt1.c1)))OR(t2.c71)))OR(vt1.c1))))) WHERE (vt1.c1) ORDER BY RTRIM((+ (vt1.c0))), ((TRIM(NULL)) NOT BETWEEN (t2.c71) AND ((vt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY (NOT ((+ (t0.c0)))) DESC  NULLS LAST, TRIM(((t0.c0)+(t0.c0))), NULL DESC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (NOT ((+ (t0.c0)))) DESC  NULLS LAST, TRIM(((t0.c0)+(t0.c0))), NULL DESC);
SELECT * FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY (NOT ((+ (t0.c0)))) DESC  NULLS LAST, TRIM(((t0.c0)+(t0.c0))), NULL DESC;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (NOT ((+ (t0.c0)))) DESC  NULLS LAST, TRIM(((t0.c0)+(t0.c0))), NULL DESC);
SELECT * FROM t0 WHERE ((- (t0.c0)) COLLATE RTRIM) ORDER BY (NOT ((+ (t0.c0)))) DESC  NULLS LAST, TRIM(((t0.c0)+(t0.c0))), NULL DESC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(vt1.c1 AS NUMERIC)))<((((vt1.c1)IS(vt1.c1)), TYPEOF(vt1.c1), CAST(vt1.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) IS FALSE) IN ((vt1.c1 IN ()))) DESC, (((vt1.c1))==((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(vt1.c1 AS NUMERIC)))<((((vt1.c1)IS(vt1.c1)), TYPEOF(vt1.c1), CAST(vt1.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) IS FALSE) IN ((vt1.c1 IN ()))) DESC, (((vt1.c1))=((vt1.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(vt1.c1 AS NUMERIC)))<((((vt1.c1)IS(vt1.c1)), TYPEOF(vt1.c1), CAST(vt1.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) IS FALSE) IN ((vt1.c1 IN ()))) DESC, (((vt1.c1))==((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(vt1.c1 AS NUMERIC)))<((((vt1.c1)IS(vt1.c1)), TYPEOF(vt1.c1), CAST(vt1.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) IS FALSE) IN ((vt1.c1 IN ()))) DESC, (((vt1.c1))=((vt1.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c1 COLLATE NOCASE, ((vt1.c1) ISNULL), CAST(vt1.c1 AS NUMERIC)))<((((vt1.c1)IS(vt1.c1)), TYPEOF(vt1.c1), CAST(vt1.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt1.c0) IS FALSE) IN ((vt1.c1 IN ()))) DESC, (((vt1.c1))==((vt1.c0))) COLLATE RTRIM;
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY vt1.c0, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS NOT(((vt1.c0)<=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS NOT(((vt1.c0)<=(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY vt1.c0, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS NOT(((vt1.c0)<=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS NOT(((vt1.c0)<=(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY vt1.c0, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))IS NOT(((vt1.c0)<=(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON CAST(vt1.c0 AS NUMERIC) COLLATE BINARY INNER JOIN t2 ON 0.9725317635153412 WHERE (((((((((CAST(t2.c0 AS NUMERIC))OR(TYPEOF(vt1.c0))))OR(((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))AND((vt1.c1 IN ()))))AND(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t2.c0 AS NUMERIC))OR(TYPEOF(vt1.c0))))OR(((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))AND((vt1.c1 IN ()))))AND(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(vt1.c0 AS NUMERIC) COLLATE BINARY INNER JOIN t2 ON 0.9725317635153412);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON CAST(vt1.c0 AS NUMERIC) COLLATE BINARY INNER JOIN t2 ON 0.9725317635153412 WHERE (((((((((CAST(t2.c0 AS NUMERIC))OR(TYPEOF(vt1.c0))))OR(((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))AND((vt1.c1 IN ()))))AND(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t2.c0 AS NUMERIC))OR(TYPEOF(vt1.c0))))OR(((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))AND((vt1.c1 IN ()))))AND(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CAST(vt1.c0 AS NUMERIC) COLLATE BINARY INNER JOIN t2 ON 0.9725317635153412);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON CAST(vt1.c0 AS NUMERIC) COLLATE BINARY INNER JOIN t2 ON 0.9725317635153412 WHERE (((((((((CAST(t2.c0 AS NUMERIC))OR(TYPEOF(vt1.c0))))OR(((t2.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))))AND((vt1.c1 IN ()))))AND(CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM vt1, t2 WHERE ((+ (vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t2 NOT INDEXED);
SELECT ALL * FROM vt1, t2 WHERE ((+ (vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t2 NOT INDEXED);
SELECT ALL * FROM vt1, t2 WHERE ((+ (vt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (load_extension(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((vt1.c0) ISNULL))) ORDER BY 'X2F<Tr'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((vt1.c0) ISNULL))) IS TRUE)  as count FROM t0, vt1 ORDER BY 'X2F<Tr'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (load_extension(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((vt1.c0) ISNULL))) ORDER BY 'X2F<Tr'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((vt1.c0) ISNULL))) IS TRUE)  as count FROM t0, vt1 ORDER BY 'X2F<Tr'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE (627122995);
SELECT SUM(count) FROM (SELECT ALL ((627122995) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE (627122995);
SELECT SUM(count) FROM (SELECT ALL ((627122995) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE (627122995);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (x'');
SELECT * FROM t2, vt1, t0 WHERE (((t2.c0)AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt1, t0);
SELECT * FROM t2, vt1, t0 WHERE (((t2.c0)AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt1, t0);
SELECT * FROM t2, vt1, t0 WHERE (((t2.c0)AND(vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE ('-389334960') ORDER BY (LIKE('7L', t0.c0, '-') IN ()) DESC  NULLS LAST, SQLITE_VERSION()  NULLS FIRST, ((CAST(t0.c0 AS BLOB))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT (('-389334960') IS TRUE)  as count FROM t0 ORDER BY (LIKE('7L', t0.c0, '-') IN ()) DESC  NULLS LAST, SQLITE_VERSION()  NULLS FIRST, ((CAST(t0.c0 AS BLOB))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE ('-389334960') ORDER BY (LIKE('7L', t0.c0, '-') IN ()) DESC  NULLS LAST, SQLITE_VERSION()  NULLS FIRST, ((CAST(t0.c0 AS BLOB))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT (('-389334960') IS TRUE)  as count FROM t0 ORDER BY (LIKE('7L', t0.c0, '-') IN ()) DESC  NULLS LAST, SQLITE_VERSION()  NULLS FIRST, ((CAST(t0.c0 AS BLOB))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE ('-389334960') ORDER BY (LIKE('7L', t0.c0, '-') IN ()) DESC  NULLS LAST, SQLITE_VERSION()  NULLS FIRST, ((CAST(t0.c0 AS BLOB))/(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON '-1372777390' WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((0Xffffffffe569d9d8)OR('')))OR(vt1.c1)))AND(vt1.c1)))AND(t2.c0))))) ORDER BY ((((((((CASE WHEN NULL THEN vt1.c0 END)AND(NULL)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(t2.c71)))AND(t2.c71)))OR(vt1.c1)))))OR(((vt1.c1) NOTNULL))))OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((0Xffffffffe569d9d8)OR('')))OR(vt1.c1)))AND(vt1.c1)))AND(t2.c0))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt1 ON '-1372777390' ORDER BY ((((((((CASE WHEN NULL THEN vt1.c0 END)AND(NULL)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(t2.c71)))AND(t2.c71)))OR(vt1.c1)))))OR(((vt1.c1) NOTNULL))))OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON '-1372777390' WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((0Xffffffffe569d9d8)OR('')))OR(vt1.c1)))AND(vt1.c1)))AND(t2.c0))))) ORDER BY ((((((((CASE WHEN NULL THEN vt1.c0 END)AND(NULL)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(t2.c71)))AND(t2.c71)))OR(vt1.c1)))))OR(((vt1.c1) NOTNULL))))OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((0Xffffffffe569d9d8)OR('')))OR(vt1.c1)))AND(vt1.c1)))AND(t2.c0))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt1 ON '-1372777390' ORDER BY ((((((((CASE WHEN NULL THEN vt1.c0 END)AND(NULL)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(t2.c71)))AND(t2.c71)))OR(vt1.c1)))))OR(((vt1.c1) NOTNULL))))OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON '-1372777390' WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((0Xffffffffe569d9d8)OR('')))OR(vt1.c1)))AND(vt1.c1)))AND(t2.c0))))) ORDER BY ((((((((CASE WHEN NULL THEN vt1.c0 END)AND(NULL)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(t2.c71)))AND(t2.c71)))OR(vt1.c1)))))OR(((vt1.c1) NOTNULL))))OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END));
SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON CASE CASE WHEN t2.c0 THEN t2.c0 WHEN 0.14327359433906972 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END  WHEN (((NULL))<((0.6881485463234142))) THEN (NOT (vt1.c0)) ELSE ((x'42a4') ISNULL) END WHERE (((((t2.c71) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t2.c71) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt1 ON CASE CASE WHEN t2.c0 THEN t2.c0 WHEN 0.14327359433906972 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END  WHEN (((NULL))<((0.6881485463234142))) THEN (NOT (vt1.c0)) ELSE ((x'42a4') ISNULL) END);
SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON CASE CASE WHEN t2.c0 THEN t2.c0 WHEN 0.14327359433906972 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END  WHEN (((NULL))<((0.6881485463234142))) THEN (NOT (vt1.c0)) ELSE ((x'42a4') ISNULL) END WHERE (((((t2.c71) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t2.c71) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt1 ON CASE CASE WHEN t2.c0 THEN t2.c0 WHEN 0.14327359433906972 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END  WHEN (((NULL))<((0.6881485463234142))) THEN (NOT (vt1.c0)) ELSE ((x'42a4') ISNULL) END);
SELECT ALL * FROM t2 FULL OUTER JOIN vt1 ON CASE CASE WHEN t2.c0 THEN t2.c0 WHEN 0.14327359433906972 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END  WHEN (((NULL))<((0.6881485463234142))) THEN (NOT (vt1.c0)) ELSE ((x'42a4') ISNULL) END WHERE (((((t2.c71) NOT NULL)) NOTNULL));
SELECT * FROM vt1, t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN (TRIM(DISTINCT vt1.c0), vt1.c1 COLLATE NOCASE))) ORDER BY HEX(t2.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((x'873b') ISNULL), ((t2.c71) BETWEEN (t2.c0) AND (t2.c71)), 0.5721279064674197))>=((t2.c0 COLLATE BINARY, t2.c0 COLLATE BINARY, CASE WHEN t2.c71 THEN vt1.c0 END))), ((-644415666) NOT BETWEEN ((~ (t2.c71))) AND (((vt1.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c0 AS NUMERIC) IN (TRIM(DISTINCT vt1.c0), vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t2 ORDER BY HEX(t2.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((x'873b') ISNULL), ((t2.c71) BETWEEN (t2.c0) AND (t2.c71)), 0.5721279064674197))>=((t2.c0 COLLATE BINARY, t2.c0 COLLATE BINARY, CASE WHEN t2.c71 THEN vt1.c0 END))), ((-644415666) NOT BETWEEN ((~ (t2.c71))) AND (((vt1.c0) NOTNULL))) ASC);
SELECT * FROM vt1, t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN (TRIM(DISTINCT vt1.c0), vt1.c1 COLLATE NOCASE))) ORDER BY HEX(t2.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((x'873b') ISNULL), ((t2.c71) BETWEEN (t2.c0) AND (t2.c71)), 0.5721279064674197))>=((t2.c0 COLLATE BINARY, t2.c0 COLLATE BINARY, CASE WHEN t2.c71 THEN vt1.c0 END))), ((-644415666) NOT BETWEEN ((~ (t2.c71))) AND (((vt1.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c0 AS NUMERIC) IN (TRIM(DISTINCT vt1.c0), vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t2 ORDER BY HEX(t2.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((x'873b') ISNULL), ((t2.c71) BETWEEN (t2.c0) AND (t2.c71)), 0.5721279064674197))>=((t2.c0 COLLATE BINARY, t2.c0 COLLATE BINARY, CASE WHEN t2.c71 THEN vt1.c0 END))), ((-644415666) NOT BETWEEN ((~ (t2.c71))) AND (((vt1.c0) NOTNULL))) ASC);
SELECT * FROM vt1, t2 WHERE ((CAST(t2.c0 AS NUMERIC) IN (TRIM(DISTINCT vt1.c0), vt1.c1 COLLATE NOCASE))) ORDER BY HEX(t2.c0 COLLATE RTRIM) ASC  NULLS LAST, (((((x'873b') ISNULL), ((t2.c71) BETWEEN (t2.c0) AND (t2.c71)), 0.5721279064674197))>=((t2.c0 COLLATE BINARY, t2.c0 COLLATE BINARY, CASE WHEN t2.c71 THEN vt1.c0 END))), ((-644415666) NOT BETWEEN ((~ (t2.c71))) AND (((vt1.c0) NOTNULL))) ASC;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t2 LEFT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS TEXT) WHERE ((((((t0.c0)OR(t2.c71)))OR(t2.c0)) IN ())) ORDER BY ((((COALESCE(t2.c0, t2.c0, t0.c0, t0.c0))AND((t2.c0 IN ()))))AND((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t2.c71)))OR(t2.c0)) IN ())) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS TEXT) ORDER BY ((((COALESCE(t2.c0, t2.c0, t0.c0, t0.c0))AND((t2.c0 IN ()))))AND((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM t2 LEFT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS TEXT) WHERE ((((((t0.c0)OR(t2.c71)))OR(t2.c0)) IN ())) ORDER BY ((((COALESCE(t2.c0, t2.c0, t0.c0, t0.c0))AND((t2.c0 IN ()))))AND((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t2.c71)))OR(t2.c0)) IN ())) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS TEXT) ORDER BY ((((COALESCE(t2.c0, t2.c0, t0.c0, t0.c0))AND((t2.c0 IN ()))))AND((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((t2.c71) NOTNULL) THEN '1934279330' WHEN (((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (NOT (t2.c71)) WHEN ((vt1.c0)<<(t2.c0)) THEN ((t2.c0) NOTNULL) WHEN ((NULL) BETWEEN (t2.c0) AND (t2.c71)) THEN ((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)) WHEN CASE t2.c0  WHEN t2.c71 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END THEN json_patch(t2.c0, t2.c71) ELSE CASE WHEN NULL THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c71) NOTNULL) THEN '1934279330' WHEN (((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (NOT (t2.c71)) WHEN ((vt1.c0)<<(t2.c0)) THEN ((t2.c0) NOTNULL) WHEN ((NULL) BETWEEN (t2.c0) AND (t2.c71)) THEN ((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)) WHEN CASE t2.c0  WHEN t2.c71 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END THEN json_patch(t2.c0, t2.c71) ELSE CASE WHEN NULL THEN vt1.c0 END END) IS TRUE)  as count FROM t2, vt1);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((t2.c71) NOTNULL) THEN '1934279330' WHEN (((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (NOT (t2.c71)) WHEN ((vt1.c0)<<(t2.c0)) THEN ((t2.c0) NOTNULL) WHEN ((NULL) BETWEEN (t2.c0) AND (t2.c71)) THEN ((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)) WHEN CASE t2.c0  WHEN t2.c71 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END THEN json_patch(t2.c0, t2.c71) ELSE CASE WHEN NULL THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c71) NOTNULL) THEN '1934279330' WHEN (((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (NOT (t2.c71)) WHEN ((vt1.c0)<<(t2.c0)) THEN ((t2.c0) NOTNULL) WHEN ((NULL) BETWEEN (t2.c0) AND (t2.c71)) THEN ((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)) WHEN CASE t2.c0  WHEN t2.c71 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END THEN json_patch(t2.c0, t2.c71) ELSE CASE WHEN NULL THEN vt1.c0 END END) IS TRUE)  as count FROM t2, vt1);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((t2.c71) NOTNULL) THEN '1934279330' WHEN (((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN (NOT (t2.c71)) WHEN ((vt1.c0)<<(t2.c0)) THEN ((t2.c0) NOTNULL) WHEN ((NULL) BETWEEN (t2.c0) AND (t2.c71)) THEN ((vt1.c1) BETWEEN (t2.c0) AND (t2.c0)) WHEN CASE t2.c0  WHEN t2.c71 THEN t2.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t2.c0 THEN vt1.c0 ELSE vt1.c1 END THEN json_patch(t2.c0, t2.c71) ELSE CASE WHEN NULL THEN vt1.c0 END END);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((NULL)&((+ (t0.c0))))) ORDER BY ((t2.c0)AND(vt1.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&((+ (t0.c0))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((t2.c0)AND(vt1.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((NULL)&((+ (t0.c0))))) ORDER BY ((t2.c0)AND(vt1.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&((+ (t0.c0))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((t2.c0)AND(vt1.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((NULL)&((+ (t0.c0))))) ORDER BY ((t2.c0)AND(vt1.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0))) BETWEEN (((t0.c0)>('(_'))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(t0.c0))) BETWEEN (((t0.c0)>('(_'))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0))) BETWEEN (((t0.c0)>('(_'))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(t0.c0))) BETWEEN (((t0.c0)>('(_'))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)GLOB(t0.c0))) BETWEEN (((t0.c0)>('(_'))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM vt1, t0, t2 WHERE ((((t0.c0) IS TRUE) IN ())) ORDER BY 'X2F<Tr'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY 'X2F<Tr'  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, t2 WHERE ((((t0.c0) IS TRUE) IN ())) ORDER BY 'X2F<Tr'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY 'X2F<Tr'  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, t2 WHERE ((((t0.c0) IS TRUE) IN ())) ORDER BY 'X2F<Tr'  NULLS FIRST;
SELECT ALL * FROM vt1, t2, t0 WHERE (((((t2.c0)||(t2.c71)))<<(((((vt1.c1)OR('-549307056')))AND('')))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0)||(t2.c71)))<<(((((vt1.c1)OR('-549307056')))AND(''))))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL * FROM vt1, t2, t0 WHERE (((((t2.c0)||(t2.c71)))<<(((((vt1.c1)OR('-549307056')))AND('')))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0)||(t2.c71)))<<(((((vt1.c1)OR('-549307056')))AND(''))))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL * FROM vt1, t2, t0 WHERE (((((t2.c0)||(t2.c71)))<<(((((vt1.c1)OR('-549307056')))AND('')))));
SELECT ALL * FROM t2 WHERE (((x'1453') NOT BETWEEN (CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END) AND (json_patch(t2.c0, t2.c0)))) ORDER BY (- ((NOT (t2.c71)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'1453') NOT BETWEEN (CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END) AND (json_patch(t2.c0, t2.c0)))) IS TRUE)  as count FROM t2 ORDER BY (- ((NOT (t2.c71)))) ASC  NULLS LAST);
SELECT ALL * FROM t2 WHERE (((x'1453') NOT BETWEEN (CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END) AND (json_patch(t2.c0, t2.c0)))) ORDER BY (- ((NOT (t2.c71)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'1453') NOT BETWEEN (CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END) AND (json_patch(t2.c0, t2.c0)))) IS TRUE)  as count FROM t2 ORDER BY (- ((NOT (t2.c71)))) ASC  NULLS LAST);
SELECT ALL * FROM t2 WHERE (((x'1453') NOT BETWEEN (CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END) AND (json_patch(t2.c0, t2.c0)))) ORDER BY (- ((NOT (t2.c71)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((598120861) ISNULL)) ORDER BY x'd9ab'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((598120861) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY x'd9ab'  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((598120861) ISNULL)) ORDER BY x'd9ab'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((598120861) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY x'd9ab'  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((598120861) ISNULL)) ORDER BY x'd9ab'  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS TEXT));
SELECT * FROM t0, vt1, t2 WHERE ((((((((((+ (vt1.c1)))OR((((t2.c71, vt1.c0, vt1.c1))>=((t2.c0, vt1.c1, vt1.c0))))))OR(t0.c0 COLLATE NOCASE)))OR(CASE t0.c0  WHEN 0.7904597497195817 THEN vt1.c1 END)))AND(t2.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt1.c1)))OR((((t2.c71, vt1.c0, vt1.c1))>=((t2.c0, vt1.c1, vt1.c0))))))OR(t0.c0 COLLATE NOCASE)))OR(CASE t0.c0  WHEN 0.7904597497195817 THEN vt1.c1 END)))AND(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT * FROM t0, vt1, t2 WHERE ((((((((((+ (vt1.c1)))OR((((t2.c71, vt1.c0, vt1.c1))>=((t2.c0, vt1.c1, vt1.c0))))))OR(t0.c0 COLLATE NOCASE)))OR(CASE t0.c0  WHEN 0.7904597497195817 THEN vt1.c1 END)))AND(t2.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt1.c1)))OR((((t2.c71, vt1.c0, vt1.c1))>=((t2.c0, vt1.c1, vt1.c0))))))OR(t0.c0 COLLATE NOCASE)))OR(CASE t0.c0  WHEN 0.7904597497195817 THEN vt1.c1 END)))AND(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT * FROM t0, vt1, t2 WHERE ((((((((((+ (vt1.c1)))OR((((t2.c71, vt1.c0, vt1.c1))>=((t2.c0, vt1.c1, vt1.c0))))))OR(t0.c0 COLLATE NOCASE)))OR(CASE t0.c0  WHEN 0.7904597497195817 THEN vt1.c1 END)))AND(t2.c0 COLLATE RTRIM)));
SELECT ALL * FROM t2 WHERE (((((t2.c71) BETWEEN (t2.c71) AND (t2.c0)))||(1340362978))) ORDER BY json_remove(((t2.c71)IS(t2.c0)), t2.c71 COLLATE RTRIM)  NULLS LAST, ((((((t2.c71)+(t2.c71)))AND(((-1.713871407E9) ISNULL))))OR(((t2.c0)==(t2.c71)))), t2.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71) BETWEEN (t2.c71) AND (t2.c0)))||(1340362978))) IS TRUE)  as count FROM t2 ORDER BY json_remove(((t2.c71)IS(t2.c0)), t2.c71 COLLATE RTRIM)  NULLS LAST, ((((((t2.c71)+(t2.c71)))AND(((-1.713871407E9) ISNULL))))OR(((t2.c0)=(t2.c71)))), t2.c0 ASC);
SELECT ALL * FROM t2 WHERE (((((t2.c71) BETWEEN (t2.c71) AND (t2.c0)))||(1340362978))) ORDER BY json_remove(((t2.c71)IS(t2.c0)), t2.c71 COLLATE RTRIM)  NULLS LAST, ((((((t2.c71)+(t2.c71)))AND(((-1.713871407E9) ISNULL))))OR(((t2.c0)==(t2.c71)))), t2.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71) BETWEEN (t2.c71) AND (t2.c0)))||(1340362978))) IS TRUE)  as count FROM t2 ORDER BY json_remove(((t2.c71)IS(t2.c0)), t2.c71 COLLATE RTRIM)  NULLS LAST, ((((((t2.c71)+(t2.c71)))AND(((-1.713871407E9) ISNULL))))OR(((t2.c0)=(t2.c71)))), t2.c0 ASC);
SELECT ALL * FROM t2 WHERE (((((t2.c71) BETWEEN (t2.c71) AND (t2.c0)))||(1340362978))) ORDER BY json_remove(((t2.c71)IS(t2.c0)), t2.c71 COLLATE RTRIM)  NULLS LAST, ((((((t2.c71)+(t2.c71)))AND(((-1.713871407E9) ISNULL))))OR(((t2.c0)==(t2.c71)))), t2.c0 ASC;
SELECT COUNT(*) FROM t2, t0 NATURAL JOIN vt1 WHERE ((((CAST(t2.c71 AS REAL), UNLIKELY(0.8489054721455056), ((((t2.c0)OR(0.33352243499660494)))OR(t2.c71)), json_remove(t2.c71, vt1.c1), (t2.c0 IN (t2.c0, t0.c0))))<>((t2.c0 COLLATE NOCASE, t0.c0, t0.c0 COLLATE RTRIM, ((x'b5c5') IS TRUE), (((t2.c0, t0.c0, vt1.c1))==((vt1.c1, vt1.c1, t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t2.c71 AS REAL), UNLIKELY(0.8489054721455056), ((((t2.c0)OR(0.33352243499660494)))OR(t2.c71)), json_remove(t2.c71, vt1.c1), (t2.c0 IN (t2.c0, t0.c0))))!=((t2.c0 COLLATE NOCASE, t0.c0, t0.c0 COLLATE RTRIM, ((x'b5c5') IS TRUE), (((t2.c0, t0.c0, vt1.c1))==((vt1.c1, vt1.c1, t0.c0))))))) IS TRUE)  as count FROM t2, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t2, t0 NATURAL JOIN vt1 WHERE ((((CAST(t2.c71 AS REAL), UNLIKELY(0.8489054721455056), ((((t2.c0)OR(0.33352243499660494)))OR(t2.c71)), json_remove(t2.c71, vt1.c1), (t2.c0 IN (t2.c0, t0.c0))))<>((t2.c0 COLLATE NOCASE, t0.c0, t0.c0 COLLATE RTRIM, ((x'b5c5') IS TRUE), (((t2.c0, t0.c0, vt1.c1))==((vt1.c1, vt1.c1, t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t2.c71 AS REAL), UNLIKELY(0.8489054721455056), ((((t2.c0)OR(0.33352243499660494)))OR(t2.c71)), json_remove(t2.c71, vt1.c1), (t2.c0 IN (t2.c0, t0.c0))))!=((t2.c0 COLLATE NOCASE, t0.c0, t0.c0 COLLATE RTRIM, ((x'b5c5') IS TRUE), (((t2.c0, t0.c0, vt1.c1))==((vt1.c1, vt1.c1, t0.c0))))))) IS TRUE)  as count FROM t2, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t2, t0 NATURAL JOIN vt1 WHERE ((((CAST(t2.c71 AS REAL), UNLIKELY(0.8489054721455056), ((((t2.c0)OR(0.33352243499660494)))OR(t2.c71)), json_remove(t2.c71, vt1.c1), (t2.c0 IN (t2.c0, t0.c0))))<>((t2.c0 COLLATE NOCASE, t0.c0, t0.c0 COLLATE RTRIM, ((x'b5c5') IS TRUE), (((t2.c0, t0.c0, vt1.c1))==((vt1.c1, vt1.c1, t0.c0)))))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN t2 ON CASE (t2.c0 IN ())  WHEN CAST(vt1.c1 AS REAL) THEN t0.c0 COLLATE RTRIM END WHERE (t2.c0) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON CASE (t2.c0 IN ())  WHEN CAST(vt1.c1 AS REAL) THEN t0.c0 COLLATE RTRIM END ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT * FROM vt1, t0 LEFT OUTER JOIN t2 ON CASE (t2.c0 IN ())  WHEN CAST(vt1.c1 AS REAL) THEN t0.c0 COLLATE RTRIM END WHERE (t2.c0) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON CASE (t2.c0 IN ())  WHEN CAST(vt1.c1 AS REAL) THEN t0.c0 COLLATE RTRIM END ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT * FROM vt1, t0 LEFT OUTER JOIN t2 ON CASE (t2.c0 IN ())  WHEN CAST(vt1.c1 AS REAL) THEN t0.c0 COLLATE RTRIM END WHERE (t2.c0) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TIME(NULL, vt1.c0, ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) ORDER BY json_extract(CAST(vt1.c1 AS BLOB), vt1.c1), (((vt1.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((NOT ('[['))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL, vt1.c0, ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY json_extract(CAST(vt1.c1 AS BLOB), vt1.c1), (((vt1.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((NOT ('[['))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TIME(NULL, vt1.c0, ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) ORDER BY json_extract(CAST(vt1.c1 AS BLOB), vt1.c1), (((vt1.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((NOT ('[['))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL, vt1.c0, ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY json_extract(CAST(vt1.c1 AS BLOB), vt1.c1), (((vt1.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((NOT ('[['))))  NULLS LAST);
SELECT COUNT(*) FROM t2 CROSS JOIN vt1 ON CASE (t2.c0 IN ())  WHEN ((1.07330561E9)*(vt1.c1)) THEN (+ (vt1.c1)) ELSE ((((vt1.c1)OR(t2.c71)))OR(vt1.c1)) END WHERE (RTRIM(TYPEOF(DISTINCT vt1.c0))) ORDER BY (((NOT (vt1.c0)))=(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(TYPEOF(DISTINCT vt1.c0))) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON CASE (t2.c0 IN ())  WHEN ((1.07330561E9)*(vt1.c1)) THEN (+ (vt1.c1)) ELSE ((((vt1.c1)OR(t2.c71)))OR(vt1.c1)) END ORDER BY (((NOT (vt1.c0)))=(vt1.c1)) DESC);
SELECT COUNT(*) FROM t2 CROSS JOIN vt1 ON CASE (t2.c0 IN ())  WHEN ((1.07330561E9)*(vt1.c1)) THEN (+ (vt1.c1)) ELSE ((((vt1.c1)OR(t2.c71)))OR(vt1.c1)) END WHERE (RTRIM(TYPEOF(DISTINCT vt1.c0))) ORDER BY (((NOT (vt1.c0)))=(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(TYPEOF(DISTINCT vt1.c0))) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON CASE (t2.c0 IN ())  WHEN ((1.07330561E9)*(vt1.c1)) THEN (+ (vt1.c1)) ELSE ((((vt1.c1)OR(t2.c71)))OR(vt1.c1)) END ORDER BY (((NOT (vt1.c0)))=(vt1.c1)) DESC);
SELECT COUNT(*) FROM t2 CROSS JOIN vt1 ON CASE (t2.c0 IN ())  WHEN ((1.07330561E9)*(vt1.c1)) THEN (+ (vt1.c1)) ELSE ((((vt1.c1)OR(t2.c71)))OR(vt1.c1)) END WHERE (RTRIM(TYPEOF(DISTINCT vt1.c0))) ORDER BY (((NOT (vt1.c0)))=(vt1.c1)) DESC;
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)||(NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)||(NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)||(NULL)))));
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE ((+ ((((-1.956901643E9))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((-1.956901643E9))<=((vt1.c1)))))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE ((+ ((((-1.956901643E9))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((-1.956901643E9))<=((vt1.c1)))))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE ((+ ((((-1.956901643E9))<=((vt1.c1))))));
SELECT * FROM t2, vt1 INNER JOIN t0 ON ((((0.4938716485382171)==(t2.c71))) NOT BETWEEN ((((vt1.c0))<((vt1.c0)))) AND (((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((+ (((((t2.c71)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY CASE WHEN ((t0.c0)IS(t2.c0)) THEN vt1.c0 COLLATE NOCASE ELSE (('2049597090') IS FALSE) END  NULLS LAST, ((((((((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(((t2.c0)&(vt1.c1)))))AND(t0.c0 COLLATE RTRIM)))AND(((((((((vt1.c0)AND(352841002)))OR(t2.c71)))OR(t0.c0)))OR(vt1.c1)))))AND(((t2.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((+ (((((t2.c71)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM t2, vt1 INNER JOIN t0 ON ((((0.4938716485382171)==(t2.c71))) NOT BETWEEN ((((vt1.c0))<((vt1.c0)))) AND (((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CASE WHEN ((t0.c0)IS(t2.c0)) THEN vt1.c0 COLLATE NOCASE ELSE (('2049597090') IS FALSE) END  NULLS LAST, ((((((((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(((t2.c0)&(vt1.c1)))))AND(t0.c0 COLLATE RTRIM)))AND(((((((((vt1.c0)AND(352841002)))OR(t2.c71)))OR(t0.c0)))OR(vt1.c1)))))AND(((t2.c0) IS FALSE))));
SELECT * FROM t2, vt1 INNER JOIN t0 ON ((((0.4938716485382171)==(t2.c71))) NOT BETWEEN ((((vt1.c0))<((vt1.c0)))) AND (((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((+ (((((t2.c71)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY CASE WHEN ((t0.c0)IS(t2.c0)) THEN vt1.c0 COLLATE NOCASE ELSE (('2049597090') IS FALSE) END  NULLS LAST, ((((((((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(((t2.c0)&(vt1.c1)))))AND(t0.c0 COLLATE RTRIM)))AND(((((((((vt1.c0)AND(352841002)))OR(t2.c71)))OR(t0.c0)))OR(vt1.c1)))))AND(((t2.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((+ (((((t2.c71)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM t2, vt1 INNER JOIN t0 ON ((((0.4938716485382171)==(t2.c71))) NOT BETWEEN ((((vt1.c0))<((vt1.c0)))) AND (((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CASE WHEN ((t0.c0)IS(t2.c0)) THEN vt1.c0 COLLATE NOCASE ELSE (('2049597090') IS FALSE) END  NULLS LAST, ((((((((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(((t2.c0)&(vt1.c1)))))AND(t0.c0 COLLATE RTRIM)))AND(((((((((vt1.c0)AND(352841002)))OR(t2.c71)))OR(t0.c0)))OR(vt1.c1)))))AND(((t2.c0) IS FALSE))));
SELECT * FROM t2, vt1 INNER JOIN t0 ON ((((0.4938716485382171)==(t2.c71))) NOT BETWEEN ((((vt1.c0))<((vt1.c0)))) AND (((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((+ (((((t2.c71)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY CASE WHEN ((t0.c0)IS(t2.c0)) THEN vt1.c0 COLLATE NOCASE ELSE (('2049597090') IS FALSE) END  NULLS LAST, ((((((((((NULL) NOT BETWEEN (t0.c0) AND (vt1.c0)))OR(((t2.c0)&(vt1.c1)))))AND(t0.c0 COLLATE RTRIM)))AND(((((((((vt1.c0)AND(352841002)))OR(t2.c71)))OR(t0.c0)))OR(vt1.c1)))))AND(((t2.c0) IS FALSE)));
SELECT * FROM t0, t2, vt1 WHERE (((((((t2.c71)*(vt1.c1)))AND(((vt1.c1)>(t2.c0)))))OR(((t2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY (((CASE '퓮J'  WHEN t2.c71 THEN t0.c0 END, (vt1.c0 IN ()), CASE WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c71 WHEN t0.c0 THEN vt1.c0 END, (- (vt1.c0)), ((vt1.c0)AND(vt1.c1))))<=(((- (t2.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('') AND (t0.c0)), ((t2.c0)||(0.3769025154240381)), CASE WHEN t2.c71 THEN t2.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c71)*(vt1.c1)))AND(((vt1.c1)>(t2.c0)))))OR(((t2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY (((CASE '퓮J'  WHEN t2.c71 THEN t0.c0 END, (vt1.c0 IN ()), CASE WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c71 WHEN t0.c0 THEN vt1.c0 END, (- (vt1.c0)), ((vt1.c0)AND(vt1.c1))))<=(((- (t2.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('') AND (t0.c0)), ((t2.c0)||(0.3769025154240381)), CASE WHEN t2.c71 THEN t2.c0 END))) DESC);
SELECT * FROM t0, t2, vt1 WHERE (((((((t2.c71)*(vt1.c1)))AND(((vt1.c1)>(t2.c0)))))OR(((t2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY (((CASE '퓮J'  WHEN t2.c71 THEN t0.c0 END, (vt1.c0 IN ()), CASE WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c71 WHEN t0.c0 THEN vt1.c0 END, (- (vt1.c0)), ((vt1.c0)AND(vt1.c1))))<=(((- (t2.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('') AND (t0.c0)), ((t2.c0)||(0.3769025154240381)), CASE WHEN t2.c71 THEN t2.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c71)*(vt1.c1)))AND(((vt1.c1)>(t2.c0)))))OR(((t2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY (((CASE '퓮J'  WHEN t2.c71 THEN t0.c0 END, (vt1.c0 IN ()), CASE WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c71 WHEN t0.c0 THEN vt1.c0 END, (- (vt1.c0)), ((vt1.c0)AND(vt1.c1))))<=(((- (t2.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('') AND (t0.c0)), ((t2.c0)||(0.3769025154240381)), CASE WHEN t2.c71 THEN t2.c0 END))) DESC);
SELECT * FROM t0, t2, vt1 WHERE (((((((t2.c71)*(vt1.c1)))AND(((vt1.c1)>(t2.c0)))))OR(((t2.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY (((CASE '퓮J'  WHEN t2.c71 THEN t0.c0 END, (vt1.c0 IN ()), CASE WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c71 WHEN t0.c0 THEN vt1.c0 END, (- (vt1.c0)), ((vt1.c0)AND(vt1.c1))))<=(((- (t2.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN ('') AND (t0.c0)), ((t2.c0)||(0.3769025154240381)), CASE WHEN t2.c71 THEN t2.c0 END))) DESC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t2 ON t2.c71 WHERE (((((vt1.c0)AND('522441317')))AND(t2.c0)) COLLATE NOCASE) ORDER BY (NOT (t2.c71 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND('522441317')))AND(t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON t2.c71 ORDER BY (NOT (t2.c71 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t2 ON t2.c71 WHERE (((((vt1.c0)AND('522441317')))AND(t2.c0)) COLLATE NOCASE) ORDER BY (NOT (t2.c71 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND('522441317')))AND(t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON t2.c71 ORDER BY (NOT (t2.c71 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t2 ON t2.c71 WHERE (((((vt1.c0)AND('522441317')))AND(t2.c0)) COLLATE NOCASE) ORDER BY (NOT (t2.c71 COLLATE RTRIM)) DESC;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY CAST(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT ALL * FROM t2 NATURAL JOIN t0 WHERE (((((t2.c0 IN ()), (- (t0.c0)), t2.c71))==((t2.c71 COLLATE RTRIM, ((((t2.c0)OR(t2.c0)))OR(t2.c71)), CASE t0.c0  WHEN t0.c0 THEN t2.c71 ELSE t0.c0 END)))) ORDER BY ((t2.c71)|(t2.c71));
SELECT SUM(count) FROM (SELECT ((((((t2.c0 IN ()), (- (t0.c0)), t2.c71))==((t2.c71 COLLATE RTRIM, ((((t2.c0)OR(t2.c0)))OR(t2.c71)), CASE t0.c0  WHEN t0.c0 THEN t2.c71 ELSE t0.c0 END)))) IS TRUE)  as count FROM t2 NATURAL JOIN t0 ORDER BY ((t2.c71)|(t2.c71)));
SELECT ALL * FROM t2 NATURAL JOIN t0 WHERE (((((t2.c0 IN ()), (- (t0.c0)), t2.c71))==((t2.c71 COLLATE RTRIM, ((((t2.c0)OR(t2.c0)))OR(t2.c71)), CASE t0.c0  WHEN t0.c0 THEN t2.c71 ELSE t0.c0 END)))) ORDER BY ((t2.c71)|(t2.c71));
SELECT SUM(count) FROM (SELECT ((((((t2.c0 IN ()), (- (t0.c0)), t2.c71))==((t2.c71 COLLATE RTRIM, ((((t2.c0)OR(t2.c0)))OR(t2.c71)), CASE t0.c0  WHEN t0.c0 THEN t2.c71 ELSE t0.c0 END)))) IS TRUE)  as count FROM t2 NATURAL JOIN t0 ORDER BY ((t2.c71)|(t2.c71)));
SELECT ALL * FROM t2 NATURAL JOIN t0 WHERE (((((t2.c0 IN ()), (- (t0.c0)), t2.c71))==((t2.c71 COLLATE RTRIM, ((((t2.c0)OR(t2.c0)))OR(t2.c71)), CASE t0.c0  WHEN t0.c0 THEN t2.c71 ELSE t0.c0 END)))) ORDER BY ((t2.c71)|(t2.c71));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (((t0.c0) NOT NULL)))) ORDER BY CASE NULL  WHEN CAST('ڤw' AS TEXT) THEN ((((vt1.c1)OR(vt1.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE NULL  WHEN CAST('ڤw' AS TEXT) THEN ((((vt1.c1)OR(vt1.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (((t0.c0) NOT NULL)))) ORDER BY CASE NULL  WHEN CAST('ڤw' AS TEXT) THEN ((((vt1.c1)OR(vt1.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE NULL  WHEN CAST('ڤw' AS TEXT) THEN ((((vt1.c1)OR(vt1.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (((t0.c0) NOT NULL)))) ORDER BY CASE NULL  WHEN CAST('ڤw' AS TEXT) THEN ((((vt1.c1)OR(vt1.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) END;
SELECT * FROM vt1, t0, t2 WHERE (CAST(((((t2.c71)AND(vt1.c1)))OR(t0.c0)) AS REAL)) ORDER BY t2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t2.c71)AND(vt1.c1)))OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY t2.c0  NULLS LAST);
SELECT * FROM vt1, t0, t2 WHERE (CAST(((((t2.c71)AND(vt1.c1)))OR(t0.c0)) AS REAL)) ORDER BY t2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t2.c71)AND(vt1.c1)))OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY t2.c0  NULLS LAST);
SELECT * FROM vt1, t0, t2 WHERE (CAST(((((t2.c71)AND(vt1.c1)))OR(t0.c0)) AS REAL)) ORDER BY t2.c0  NULLS LAST;
SELECT ALL * FROM t2 NOT INDEXED, vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t2, vt1, t0);
SELECT ALL * FROM t2 NOT INDEXED, vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t2, vt1, t0);
SELECT ALL * FROM t2 NOT INDEXED, vt1, t0 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TRIM((vt1.c1 IN ()))) ORDER BY (~ (((((NULL)OR(vt1.c1)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c1 IN ()))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (((((NULL)OR(vt1.c1)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TRIM((vt1.c1 IN ()))) ORDER BY (~ (((((NULL)OR(vt1.c1)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c1 IN ()))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (((((NULL)OR(vt1.c1)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (TRIM((vt1.c1 IN ()))) ORDER BY (~ (((((NULL)OR(vt1.c1)))OR(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((- (t0.c0)))%(LIKELIHOOD(t0.c0, 0.14096464761136762))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))%(LIKELIHOOD(t0.c0, 0.14096464761136762)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((- (t0.c0)))%(LIKELIHOOD(t0.c0, 0.14096464761136762))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))%(LIKELIHOOD(t0.c0, 0.14096464761136762)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((- (t0.c0)))%(LIKELIHOOD(t0.c0, 0.14096464761136762))));
SELECT ALL COUNT(*) FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, NULL)) NOT BETWEEN (((- (-1.713871407E9)), (NOT (t0.c0)), ((((t0.c0)AND(t2.c0)))AND(NULL)))) AND ((t0.c0 COLLATE RTRIM, CAST(t2.c71 AS TEXT), (+ (t2.c0))))) WHERE (CASE WHEN CAST(t2.c71 AS TEXT) THEN (t0.c0 IN (t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t2.c71 AS TEXT) THEN (t0.c0 IN (t2.c71)) END) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, NULL)) NOT BETWEEN (((- (-1.713871407E9)), (NOT (t0.c0)), ((((t0.c0)AND(t2.c0)))AND(NULL)))) AND ((t0.c0 COLLATE RTRIM, CAST(t2.c71 AS TEXT), (+ (t2.c0))))));
SELECT ALL COUNT(*) FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, NULL)) NOT BETWEEN (((- (-1.713871407E9)), (NOT (t0.c0)), ((((t0.c0)AND(t2.c0)))AND(NULL)))) AND ((t0.c0 COLLATE RTRIM, CAST(t2.c71 AS TEXT), (+ (t2.c0))))) WHERE (CASE WHEN CAST(t2.c71 AS TEXT) THEN (t0.c0 IN (t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t2.c71 AS TEXT) THEN (t0.c0 IN (t2.c71)) END) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, NULL)) NOT BETWEEN (((- (-1.713871407E9)), (NOT (t0.c0)), ((((t0.c0)AND(t2.c0)))AND(NULL)))) AND ((t0.c0 COLLATE RTRIM, CAST(t2.c71 AS TEXT), (+ (t2.c0))))));
SELECT ALL COUNT(*) FROM t2 RIGHT OUTER JOIN t0 ON (((t0.c0, t0.c0, NULL)) NOT BETWEEN (((- (-1.713871407E9)), (NOT (t0.c0)), ((((t0.c0)AND(t2.c0)))AND(NULL)))) AND ((t0.c0 COLLATE RTRIM, CAST(t2.c71 AS TEXT), (+ (t2.c0))))) WHERE (CASE WHEN CAST(t2.c71 AS TEXT) THEN (t0.c0 IN (t2.c71)) END);
SELECT COUNT(*) FROM t2 WHERE ((((NOT (t2.c0))) IS FALSE)) ORDER BY CAST(((t2.c0)<>(t2.c0)) AS INTEGER)  NULLS FIRST, ((((t2.c71) IS TRUE))IS NOT(((t2.c0)IS NOT(x''))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t2.c0))) IS FALSE)) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c0)<>(t2.c0)) AS INTEGER)  NULLS FIRST, ((((t2.c71) IS TRUE))IS NOT(((t2.c0)IS NOT(x'')))));
SELECT COUNT(*) FROM t2 WHERE ((((NOT (t2.c0))) IS FALSE)) ORDER BY CAST(((t2.c0)<>(t2.c0)) AS INTEGER)  NULLS FIRST, ((((t2.c71) IS TRUE))IS NOT(((t2.c0)IS NOT(x''))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t2.c0))) IS FALSE)) IS TRUE)  as count FROM t2 ORDER BY CAST(((t2.c0)<>(t2.c0)) AS INTEGER)  NULLS FIRST, ((((t2.c71) IS TRUE))IS NOT(((t2.c0)IS NOT(x'')))));
SELECT COUNT(*) FROM t2 WHERE ((((NOT (t2.c0))) IS FALSE)) ORDER BY CAST(((t2.c0)<>(t2.c0)) AS INTEGER)  NULLS FIRST, ((((t2.c71) IS TRUE))IS NOT(((t2.c0)IS NOT(x''))));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE ((rtreenode(vt1.c0, t0.c0) IN ())) ORDER BY (((t0.c0, t0.c0, t2.c71)) BETWEEN ((((t0.c0)>>(vt1.c1)), ((t2.c0) NOTNULL), CASE WHEN vt1.c0 THEN 0.4367235516879686 END)) AND ((((((-2054617436)AND(t0.c0)))OR(t2.c0)), ((vt1.c0)>=(vt1.c1)), ((2041374122) NOTNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rtreenode(vt1.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((t0.c0, t0.c0, t2.c71)) BETWEEN ((((t0.c0)>>(vt1.c1)), ((t2.c0) NOTNULL), CASE WHEN vt1.c0 THEN 0.4367235516879686 END)) AND ((((((-2054617436)AND(t0.c0)))OR(t2.c0)), ((vt1.c0)>=(vt1.c1)), ((2041374122) NOTNULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE ((rtreenode(vt1.c0, t0.c0) IN ())) ORDER BY (((t0.c0, t0.c0, t2.c71)) BETWEEN ((((t0.c0)>>(vt1.c1)), ((t2.c0) NOTNULL), CASE WHEN vt1.c0 THEN 0.4367235516879686 END)) AND ((((((-2054617436)AND(t0.c0)))OR(t2.c0)), ((vt1.c0)>=(vt1.c1)), ((2041374122) NOTNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rtreenode(vt1.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((t0.c0, t0.c0, t2.c71)) BETWEEN ((((t0.c0)>>(vt1.c1)), ((t2.c0) NOTNULL), CASE WHEN vt1.c0 THEN 0.4367235516879686 END)) AND ((((((-2054617436)AND(t0.c0)))OR(t2.c0)), ((vt1.c0)>=(vt1.c1)), ((2041374122) NOTNULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE ((rtreenode(vt1.c0, t0.c0) IN ())) ORDER BY (((t0.c0, t0.c0, t2.c71)) BETWEEN ((((t0.c0)>>(vt1.c1)), ((t2.c0) NOTNULL), CASE WHEN vt1.c0 THEN 0.4367235516879686 END)) AND ((((((-2054617436)AND(t0.c0)))OR(t2.c0)), ((vt1.c0)>=(vt1.c1)), ((2041374122) NOTNULL)))) ASC  NULLS FIRST;
SELECT * FROM vt1, t0, t2 WHERE ((NOT (t2.c71 COLLATE BINARY))) ORDER BY (vt1.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t2.c71 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY (vt1.c0 IN ()) ASC);
SELECT * FROM vt1, t0, t2 WHERE ((NOT (t2.c71 COLLATE BINARY))) ORDER BY (vt1.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t2.c71 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY (vt1.c0 IN ()) ASC);
SELECT * FROM vt1, t0, t2 WHERE ((NOT (t2.c71 COLLATE BINARY))) ORDER BY (vt1.c0 IN ()) ASC;
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE ((((vt1.c0, t2.c0, vt1.c0, vt1.c0, t2.c0)) NOT BETWEEN (((t2.c0 IN ()), ((t2.c71) NOT NULL), (NOT (t0.c0)), CAST(t2.c0 AS TEXT), CAST(vt1.c1 AS NUMERIC))) AND (('', QUOTE(t2.c0), ((t0.c0) IS FALSE), ((t2.c0)<(t2.c71)), HEX(t2.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, t2.c0, vt1.c0, vt1.c0, t2.c0)) NOT BETWEEN (((t2.c0 IN ()), ((t2.c71) NOT NULL), (NOT (t0.c0)), CAST(t2.c0 AS TEXT), CAST(vt1.c1 AS NUMERIC))) AND (('', QUOTE(t2.c0), ((t0.c0) IS FALSE), ((t2.c0)<(t2.c71)), HEX(t2.c71))))) IS TRUE)  as count FROM t2, vt1, t0);
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE ((((vt1.c0, t2.c0, vt1.c0, vt1.c0, t2.c0)) NOT BETWEEN (((t2.c0 IN ()), ((t2.c71) NOT NULL), (NOT (t0.c0)), CAST(t2.c0 AS TEXT), CAST(vt1.c1 AS NUMERIC))) AND (('', QUOTE(t2.c0), ((t0.c0) IS FALSE), ((t2.c0)<(t2.c71)), HEX(t2.c71)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, t2.c0, vt1.c0, vt1.c0, t2.c0)) NOT BETWEEN (((t2.c0 IN ()), ((t2.c71) NOT NULL), (NOT (t0.c0)), CAST(t2.c0 AS TEXT), CAST(vt1.c1 AS NUMERIC))) AND (('', QUOTE(t2.c0), ((t0.c0) IS FALSE), ((t2.c0)<(t2.c71)), HEX(t2.c71))))) IS TRUE)  as count FROM t2, vt1, t0);
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE ((((vt1.c0, t2.c0, vt1.c0, vt1.c0, t2.c0)) NOT BETWEEN (((t2.c0 IN ()), ((t2.c71) NOT NULL), (NOT (t0.c0)), CAST(t2.c0 AS TEXT), CAST(vt1.c1 AS NUMERIC))) AND (('', QUOTE(t2.c0), ((t0.c0) IS FALSE), ((t2.c0)<(t2.c71)), HEX(t2.c71)))));
SELECT ALL * FROM vt1 WHERE (json(CASE WHEN vt1.c1 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((json(CASE WHEN vt1.c1 THEN vt1.c1 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json(CASE WHEN vt1.c1 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((json(CASE WHEN vt1.c1 THEN vt1.c1 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json(CASE WHEN vt1.c1 THEN vt1.c1 END));
SELECT ALL * FROM t0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (vt1.c1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))IS NOT(((vt1.c1)*(vt1.c1))))) ORDER BY ((+ (0X44b6d609)) IN ()), CASE WHEN ((vt1.c1) ISNULL) THEN (vt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))IS NOT(((vt1.c1)*(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((+ (0x44b6d609)) IN ()), CASE WHEN ((vt1.c1) ISNULL) THEN (vt1.c0 IN ()) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))IS NOT(((vt1.c1)*(vt1.c1))))) ORDER BY ((+ (0X44b6d609)) IN ()), CASE WHEN ((vt1.c1) ISNULL) THEN (vt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))IS NOT(((vt1.c1)*(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((+ (0x44b6d609)) IN ()), CASE WHEN ((vt1.c1) ISNULL) THEN (vt1.c0 IN ()) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))IS NOT(((vt1.c1)*(vt1.c1))))) ORDER BY ((+ (0X44b6d609)) IN ()), CASE WHEN ((vt1.c1) ISNULL) THEN (vt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT ALL * FROM t2 WHERE ((('0.7059346183320345')<<(0Xfffffffff6990fef COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((('0.7059346183320345')<<(0Xfffffffff6990fef COLLATE BINARY))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((('0.7059346183320345')<<(0Xfffffffff6990fef COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((('0.7059346183320345')<<(0Xfffffffff6990fef COLLATE BINARY))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((('0.7059346183320345')<<(0Xfffffffff6990fef COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))));
SELECT * FROM vt1 WHERE (((((NULL) IS TRUE))GLOB(((vt1.c0) NOTNULL)))) ORDER BY (((((((((((vt1.c0))!=((vt1.c1))))AND(((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))))AND((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND(((vt1.c1)IS(vt1.c1)))))AND((vt1.c1 IN ())))  NULLS LAST, x'' ASC, (((vt1.c0)) BETWEEN (((('-1049264575') BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((CAST(vt1.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE))GLOB(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c0))<>((vt1.c1))))AND(((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))))AND((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND(((vt1.c1)IS(vt1.c1)))))AND((vt1.c1 IN ())))  NULLS LAST, x'' ASC, (((vt1.c0)) BETWEEN (((('-1049264575') BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((CAST(vt1.c0 AS BLOB)))) DESC);
SELECT * FROM vt1 WHERE (((((NULL) IS TRUE))GLOB(((vt1.c0) NOTNULL)))) ORDER BY (((((((((((vt1.c0))!=((vt1.c1))))AND(((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))))AND((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND(((vt1.c1)IS(vt1.c1)))))AND((vt1.c1 IN ())))  NULLS LAST, x'' ASC, (((vt1.c0)) BETWEEN (((('-1049264575') BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((CAST(vt1.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE))GLOB(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c0))<>((vt1.c1))))AND(((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))))AND((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND(((vt1.c1)IS(vt1.c1)))))AND((vt1.c1 IN ())))  NULLS LAST, x'' ASC, (((vt1.c0)) BETWEEN (((('-1049264575') BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((CAST(vt1.c0 AS BLOB)))) DESC);
SELECT * FROM t2 WHERE ((((t2.c0)) BETWEEN (((- (t2.c71)))) AND ((((t2.c71) NOTNULL))))) ORDER BY ((((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) BETWEEN (((- (t2.c71)))) AND ((((t2.c71) NOTNULL))))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM t2 WHERE ((((t2.c0)) BETWEEN (((- (t2.c71)))) AND ((((t2.c71) NOTNULL))))) ORDER BY ((((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) BETWEEN (((- (t2.c71)))) AND ((((t2.c71) NOTNULL))))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM t2 WHERE ((((t2.c0)) BETWEEN (((- (t2.c71)))) AND ((((t2.c71) NOTNULL))))) ORDER BY ((((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c71))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM t0, t2, vt1 WHERE (((((('F䍱pf1쮝')) NOT BETWEEN ((vt1.c1)) AND ((t2.c0)))) BETWEEN (-2018635202) AND (NULLIF(t0.c0, t2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((('F䍱pf1쮝')) NOT BETWEEN ((vt1.c1)) AND ((t2.c0)))) BETWEEN (-2018635202) AND (NULLIF(t0.c0, t2.c0)))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE (((((('F䍱pf1쮝')) NOT BETWEEN ((vt1.c1)) AND ((t2.c0)))) BETWEEN (-2018635202) AND (NULLIF(t0.c0, t2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((('F䍱pf1쮝')) NOT BETWEEN ((vt1.c1)) AND ((t2.c0)))) BETWEEN (-2018635202) AND (NULLIF(t0.c0, t2.c0)))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE (((((('F䍱pf1쮝')) NOT BETWEEN ((vt1.c1)) AND ((t2.c0)))) BETWEEN (-2018635202) AND (NULLIF(t0.c0, t2.c0))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (json_array(t2.c0, vt1.c1) IN (((t2.c71)<>(vt1.c1)), ((vt1.c0)<(vt1.c1)))) RIGHT OUTER JOIN t2 ON (((vt1.c1)) BETWEEN (((~ (vt1.c1)))) AND ((rtreenode(t2.c0, vt1.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (t2.c0) AND (t0.c0)))LIKE(CAST(vt1.c1 AS REAL)))) ORDER BY (((0x20c87887 IN (t0.c0)))IS NOT((+ (t2.c71))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (t2.c0) AND (t0.c0)))LIKE(CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (json_array(t2.c0, vt1.c1) IN (((t2.c71)<>(vt1.c1)), ((vt1.c0)<(vt1.c1)))) RIGHT OUTER JOIN t2 ON (((vt1.c1)) BETWEEN (((~ (vt1.c1)))) AND ((rtreenode(t2.c0, vt1.c0)))) ORDER BY (((0X20c87887 IN (t0.c0)))IS NOT((+ (t2.c71))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (json_array(t2.c0, vt1.c1) IN (((t2.c71)<>(vt1.c1)), ((vt1.c0)<(vt1.c1)))) RIGHT OUTER JOIN t2 ON (((vt1.c1)) BETWEEN (((~ (vt1.c1)))) AND ((rtreenode(t2.c0, vt1.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (t2.c0) AND (t0.c0)))LIKE(CAST(vt1.c1 AS REAL)))) ORDER BY (((0x20c87887 IN (t0.c0)))IS NOT((+ (t2.c71))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (t2.c0) AND (t0.c0)))LIKE(CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (json_array(t2.c0, vt1.c1) IN (((t2.c71)<>(vt1.c1)), ((vt1.c0)<(vt1.c1)))) RIGHT OUTER JOIN t2 ON (((vt1.c1)) BETWEEN (((~ (vt1.c1)))) AND ((rtreenode(t2.c0, vt1.c0)))) ORDER BY (((0X20c87887 IN (t0.c0)))IS NOT((+ (t2.c71))))  NULLS LAST);
SELECT * FROM t2, t0 WHERE ((((((t2.c0))=((t0.c0))))*((+ (0.9247323056839212)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0))==((t0.c0))))*((+ (0.9247323056839212))))) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE ((((((t2.c0))=((t0.c0))))*((+ (0.9247323056839212)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0))==((t0.c0))))*((+ (0.9247323056839212))))) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE ((((((t2.c0))=((t0.c0))))*((+ (0.9247323056839212)))));
SELECT COUNT(*) FROM t2 INNER JOIN t0 ON 0.9080301184866465 FULL OUTER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)OR(((((((((vt1.c1)OR(vt1.c1)))AND(t2.c71)))OR(t2.c0)))OR(t2.c71)))))AND(CAST(vt1.c1 AS BLOB))) WHERE (((vt1.c0 COLLATE NOCASE)-(RTRIM(vt1.c0)))) ORDER BY t2.c71, ((CASE WHEN t2.c71 THEN t2.c0 END) NOT BETWEEN ((((vt1.c0, vt1.c0, t2.c0)) BETWEEN ((t2.c71, vt1.c0, t0.c0)) AND ((NULL, vt1.c0, 0.5925198088957471)))) AND ('V!F曮mFk>鮒')), ((rtreenode(t2.c0, vt1.c1)) BETWEEN (((((vt1.c1)OR(t2.c0)))AND(vt1.c0))) AND (t2.c71))  NULLS LAST, ((CASE WHEN t0.c0 THEN vt1.c1 END)GLOB((~ (t2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)-(RTRIM(vt1.c0)))) IS TRUE)  as count FROM t2 INNER JOIN t0 ON 0.9080301184866465 FULL OUTER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)OR(((((((((vt1.c1)OR(vt1.c1)))AND(t2.c71)))OR(t2.c0)))OR(t2.c71)))))AND(CAST(vt1.c1 AS BLOB))) ORDER BY t2.c71, ((CASE WHEN t2.c71 THEN t2.c0 END) NOT BETWEEN ((((vt1.c0, vt1.c0, t2.c0)) BETWEEN ((t2.c71, vt1.c0, t0.c0)) AND ((NULL, vt1.c0, 0.5925198088957471)))) AND ('V!F曮mFk>鮒')), ((rtreenode(t2.c0, vt1.c1)) BETWEEN (((((vt1.c1)OR(t2.c0)))AND(vt1.c0))) AND (t2.c71))  NULLS LAST, ((CASE WHEN t0.c0 THEN vt1.c1 END)GLOB((~ (t2.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2 INNER JOIN t0 ON 0.9080301184866465 FULL OUTER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)OR(((((((((vt1.c1)OR(vt1.c1)))AND(t2.c71)))OR(t2.c0)))OR(t2.c71)))))AND(CAST(vt1.c1 AS BLOB))) WHERE (((vt1.c0 COLLATE NOCASE)-(RTRIM(vt1.c0)))) ORDER BY t2.c71, ((CASE WHEN t2.c71 THEN t2.c0 END) NOT BETWEEN ((((vt1.c0, vt1.c0, t2.c0)) BETWEEN ((t2.c71, vt1.c0, t0.c0)) AND ((NULL, vt1.c0, 0.5925198088957471)))) AND ('V!F曮mFk>鮒')), ((rtreenode(t2.c0, vt1.c1)) BETWEEN (((((vt1.c1)OR(t2.c0)))AND(vt1.c0))) AND (t2.c71))  NULLS LAST, ((CASE WHEN t0.c0 THEN vt1.c1 END)GLOB((~ (t2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)-(RTRIM(vt1.c0)))) IS TRUE)  as count FROM t2 INNER JOIN t0 ON 0.9080301184866465 FULL OUTER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)OR(((((((((vt1.c1)OR(vt1.c1)))AND(t2.c71)))OR(t2.c0)))OR(t2.c71)))))AND(CAST(vt1.c1 AS BLOB))) ORDER BY t2.c71, ((CASE WHEN t2.c71 THEN t2.c0 END) NOT BETWEEN ((((vt1.c0, vt1.c0, t2.c0)) BETWEEN ((t2.c71, vt1.c0, t0.c0)) AND ((NULL, vt1.c0, 0.5925198088957471)))) AND ('V!F曮mFk>鮒')), ((rtreenode(t2.c0, vt1.c1)) BETWEEN (((((vt1.c1)OR(t2.c0)))AND(vt1.c0))) AND (t2.c71))  NULLS LAST, ((CASE WHEN t0.c0 THEN vt1.c1 END)GLOB((~ (t2.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2 INNER JOIN t0 ON 0.9080301184866465 FULL OUTER JOIN vt1 ON ((((vt1.c0 COLLATE NOCASE)OR(((((((((vt1.c1)OR(vt1.c1)))AND(t2.c71)))OR(t2.c0)))OR(t2.c71)))))AND(CAST(vt1.c1 AS BLOB))) WHERE (((vt1.c0 COLLATE NOCASE)-(RTRIM(vt1.c0)))) ORDER BY t2.c71, ((CASE WHEN t2.c71 THEN t2.c0 END) NOT BETWEEN ((((vt1.c0, vt1.c0, t2.c0)) BETWEEN ((t2.c71, vt1.c0, t0.c0)) AND ((NULL, vt1.c0, 0.5925198088957471)))) AND ('V!F曮mFk>鮒')), ((rtreenode(t2.c0, vt1.c1)) BETWEEN (((((vt1.c1)OR(t2.c0)))AND(vt1.c0))) AND (t2.c71))  NULLS LAST, ((CASE WHEN t0.c0 THEN vt1.c1 END)GLOB((~ (t2.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((CAST(0.644462139057947 AS REAL) IN (CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.644462139057947 AS REAL) IN (CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((CAST(0.644462139057947 AS REAL) IN (CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.644462139057947 AS REAL) IN (CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((CAST(0.644462139057947 AS REAL) IN (CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON LIKE((- (t0.c0)), ((t0.c0) IS TRUE), '5') WHERE ((~ ((((t2.c0, t2.c71, t2.c71))<((t2.c71, t2.c0, t2.c71))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t2.c0, t2.c71, t2.c71))<((t2.c71, t2.c0, t2.c71)))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON LIKE((- (t0.c0)), ((t0.c0) IS TRUE), '5'));
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON LIKE((- (t0.c0)), ((t0.c0) IS TRUE), '5') WHERE ((~ ((((t2.c0, t2.c71, t2.c71))<((t2.c71, t2.c0, t2.c71))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t2.c0, t2.c71, t2.c71))<((t2.c71, t2.c0, t2.c71)))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON LIKE((- (t0.c0)), ((t0.c0) IS TRUE), '5'));
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON LIKE((- (t0.c0)), ((t0.c0) IS TRUE), '5') WHERE ((~ ((((t2.c0, t2.c71, t2.c71))<((t2.c71, t2.c0, t2.c71))))));
SELECT ALL * FROM vt1, t0, t2 WHERE ('7}JBX.⌳') ORDER BY ((4.61406853E8)/(vt1.c1)) COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (('7}JBX.⌳') IS TRUE)  as count FROM vt1, t0, t2 ORDER BY ((4.61406853E8)/(vt1.c1)) COLLATE RTRIM COLLATE BINARY ASC);
SELECT ALL * FROM vt1, t0, t2 WHERE ('7}JBX.⌳') ORDER BY ((4.61406853E8)/(vt1.c1)) COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (('7}JBX.⌳') IS TRUE)  as count FROM vt1, t0, t2 ORDER BY ((4.61406853E8)/(vt1.c1)) COLLATE RTRIM COLLATE BINARY ASC);
SELECT ALL * FROM vt1, t0, t2 WHERE ('7}JBX.⌳') ORDER BY ((4.61406853E8)/(vt1.c1)) COLLATE RTRIM COLLATE BINARY ASC;
SELECT ALL * FROM t2 WHERE ((- (0.3104715121737318)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (0.3104715121737318)) COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((- (0.3104715121737318)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (0.3104715121737318)) COLLATE NOCASE) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((- (0.3104715121737318)) COLLATE NOCASE);
SELECT * FROM vt1, t2 WHERE (CASE vt1.c0  WHEN json_array_length(vt1.c0, t2.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN json_array_length(vt1.c0, t2.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE (CASE vt1.c0  WHEN json_array_length(vt1.c0, t2.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN json_array_length(vt1.c0, t2.c0) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t0.c0 AS NUMERIC)) IS TRUE) WHERE ((((t0.c0 IN ()))>=(CAST(t2.c71 AS BLOB)))) ORDER BY (((t0.c0)!=(t2.c71)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))>=(CAST(t2.c71 AS BLOB)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t0.c0 AS NUMERIC)) IS TRUE) ORDER BY (((t0.c0)!=(t2.c71)) IN ()) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t0.c0 AS NUMERIC)) IS TRUE) WHERE ((((t0.c0 IN ()))>=(CAST(t2.c71 AS BLOB)))) ORDER BY (((t0.c0)!=(t2.c71)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))>=(CAST(t2.c71 AS BLOB)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t0.c0 AS NUMERIC)) IS TRUE) ORDER BY (((t0.c0)!=(t2.c71)) IN ()) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON ((CAST(t0.c0 AS NUMERIC)) IS TRUE) WHERE ((((t0.c0 IN ()))>=(CAST(t2.c71 AS BLOB)))) ORDER BY (((t0.c0)!=(t2.c71)) IN ()) ASC;
SELECT * FROM t2 WHERE (((t2.c71 COLLATE BINARY)>>((('')<(''))))) ORDER BY NULLIF(DISTINCT HEX(t2.c71), CAST(t2.c0 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71 COLLATE BINARY)>>((('')<(''))))) IS TRUE)  as count FROM t2 ORDER BY NULLIF(DISTINCT HEX(t2.c71), CAST(t2.c0 AS BLOB))  NULLS LAST);
SELECT * FROM t2 WHERE (((t2.c71 COLLATE BINARY)>>((('')<(''))))) ORDER BY NULLIF(DISTINCT HEX(t2.c71), CAST(t2.c0 AS BLOB))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71 COLLATE BINARY)>>((('')<(''))))) IS TRUE)  as count FROM t2 ORDER BY NULLIF(DISTINCT HEX(t2.c71), CAST(t2.c0 AS BLOB))  NULLS LAST);
SELECT * FROM t2 WHERE (((t2.c71 COLLATE BINARY)>>((('')<(''))))) ORDER BY NULLIF(DISTINCT HEX(t2.c71), CAST(t2.c0 AS BLOB))  NULLS LAST;
SELECT ALL * FROM t2 WHERE (CASE WHEN ((t2.c0)<=(t2.c71)) THEN t2.c0 COLLATE RTRIM ELSE t2.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c0)<=(t2.c71)) THEN t2.c0 COLLATE RTRIM ELSE t2.c0 END) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (CASE WHEN ((t2.c0)<=(t2.c71)) THEN t2.c0 COLLATE RTRIM ELSE t2.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c0)<=(t2.c71)) THEN t2.c0 COLLATE RTRIM ELSE t2.c0 END) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (CASE WHEN ((t2.c0)<=(t2.c71)) THEN t2.c0 COLLATE RTRIM ELSE t2.c0 END);
SELECT COUNT(*) FROM t2, t0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT t0.c0 COLLATE NOCASE, vt1.c1 COLLATE RTRIM) WHERE ((((((x'ab63', t2.c0, vt1.c0))==((vt1.c0, t2.c71, t2.c0))))AND(CAST(vt1.c1 AS BLOB)))) ORDER BY ((((vt1.c0))!=((t2.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'ab63', t2.c0, vt1.c0))=((vt1.c0, t2.c71, t2.c0))))AND(CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM t2, t0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT t0.c0 COLLATE NOCASE, vt1.c1 COLLATE RTRIM) ORDER BY ((((vt1.c0))<>((t2.c0))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t2, t0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT t0.c0 COLLATE NOCASE, vt1.c1 COLLATE RTRIM) WHERE ((((((x'ab63', t2.c0, vt1.c0))==((vt1.c0, t2.c71, t2.c0))))AND(CAST(vt1.c1 AS BLOB)))) ORDER BY ((((vt1.c0))!=((t2.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'ab63', t2.c0, vt1.c0))=((vt1.c0, t2.c71, t2.c0))))AND(CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM t2, t0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT t0.c0 COLLATE NOCASE, vt1.c1 COLLATE RTRIM) ORDER BY ((((vt1.c0))<>((t2.c0))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t2, t0 LEFT OUTER JOIN vt1 ON NULLIF(DISTINCT t0.c0 COLLATE NOCASE, vt1.c1 COLLATE RTRIM) WHERE ((((((x'ab63', t2.c0, vt1.c0))==((vt1.c0, t2.c71, t2.c0))))AND(CAST(vt1.c1 AS BLOB)))) ORDER BY ((((vt1.c0))!=((t2.c0))) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((UPPER(DISTINCT NULL))==(load_extension(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT NULL))=(load_extension(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((UPPER(DISTINCT NULL))==(load_extension(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT NULL))=(load_extension(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM vt1 INNER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN -1559580508 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE BINARY COLLATE BINARY WHERE (CAST(((vt1.c1) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) IS TRUE) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN -1559580508 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt1 INNER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN -1559580508 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE BINARY COLLATE BINARY WHERE (CAST(((vt1.c1) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) IS TRUE) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN -1559580508 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt1 INNER JOIN t0 ON CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN -1559580508 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END COLLATE BINARY COLLATE BINARY WHERE (CAST(((vt1.c1) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c0) AND (t2.c71)))*(t2.c0 COLLATE RTRIM))) ORDER BY (((t2.c71))!=((LIKE(t2.c71, t2.c0, '?')))) ASC  NULLS FIRST, 0.8276971216134666;
SELECT SUM(count) FROM (SELECT ((((((t2.c0) BETWEEN (t2.c0) AND (t2.c71)))*(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c71))!=((LIKE(t2.c71, t2.c0, '?')))) ASC  NULLS FIRST, 0.8276971216134666);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c0) AND (t2.c71)))*(t2.c0 COLLATE RTRIM))) ORDER BY (((t2.c71))!=((LIKE(t2.c71, t2.c0, '?')))) ASC  NULLS FIRST, 0.8276971216134666;
SELECT SUM(count) FROM (SELECT ((((((t2.c0) BETWEEN (t2.c0) AND (t2.c71)))*(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c71))!=((LIKE(t2.c71, t2.c0, '?')))) ASC  NULLS FIRST, 0.8276971216134666);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c0) AND (t2.c71)))*(t2.c0 COLLATE RTRIM))) ORDER BY (((t2.c71))!=((LIKE(t2.c71, t2.c0, '?')))) ASC  NULLS FIRST, 0.8276971216134666;
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN t2 ON (((~ (vt1.c1)))IS(((vt1.c1) NOT NULL))) WHERE (((((x'') NOT NULL))*((t0.c0 IN (t0.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL))*((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON (((~ (vt1.c1)))IS(((vt1.c1) NOT NULL))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN t2 ON (((~ (vt1.c1)))IS(((vt1.c1) NOT NULL))) WHERE (((((x'') NOT NULL))*((t0.c0 IN (t0.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL))*((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON (((~ (vt1.c1)))IS(((vt1.c1) NOT NULL))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN t2 ON (((~ (vt1.c1)))IS(((vt1.c1) NOT NULL))) WHERE (((((x'') NOT NULL))*((t0.c0 IN (t0.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE NOCASE DESC;
SELECT ALL * FROM t2 INNER JOIN t0 ON ((((((t2.c0)/(t2.c0)))AND(TRIM(DISTINCT t2.c71, t2.c0))))OR(((t2.c0)>(t0.c0)))) WHERE (CASE CAST(t0.c0 AS REAL)  WHEN CAST(NULL AS NUMERIC) THEN '' WHEN ((t0.c0)<>(t0.c0)) THEN t2.c0 WHEN (+ (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (t2.c71 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS REAL)  WHEN CAST(NULL AS NUMERIC) THEN '' WHEN ((t0.c0)!=(t0.c0)) THEN t2.c0 WHEN (+ (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (t2.c71 IN ()) END) IS TRUE)  as count FROM t2 INNER JOIN t0 ON ((((((t2.c0)/(t2.c0)))AND(TRIM(DISTINCT t2.c71, t2.c0))))OR(((t2.c0)>(t0.c0)))));
SELECT ALL * FROM t2 INNER JOIN t0 ON ((((((t2.c0)/(t2.c0)))AND(TRIM(DISTINCT t2.c71, t2.c0))))OR(((t2.c0)>(t0.c0)))) WHERE (CASE CAST(t0.c0 AS REAL)  WHEN CAST(NULL AS NUMERIC) THEN '' WHEN ((t0.c0)<>(t0.c0)) THEN t2.c0 WHEN (+ (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (t2.c71 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS REAL)  WHEN CAST(NULL AS NUMERIC) THEN '' WHEN ((t0.c0)!=(t0.c0)) THEN t2.c0 WHEN (+ (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (t2.c71 IN ()) END) IS TRUE)  as count FROM t2 INNER JOIN t0 ON ((((((t2.c0)/(t2.c0)))AND(TRIM(DISTINCT t2.c71, t2.c0))))OR(((t2.c0)>(t0.c0)))));
SELECT ALL * FROM t2 INNER JOIN t0 ON ((((((t2.c0)/(t2.c0)))AND(TRIM(DISTINCT t2.c71, t2.c0))))OR(((t2.c0)>(t0.c0)))) WHERE (CASE CAST(t0.c0 AS REAL)  WHEN CAST(NULL AS NUMERIC) THEN '' WHEN ((t0.c0)<>(t0.c0)) THEN t2.c0 WHEN (+ (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (t2.c71 IN ()) END);
SELECT ALL * FROM t2, vt1 CROSS JOIN t0 ON vt1.c1 WHERE (0.28748835224351943 COLLATE BINARY) ORDER BY ((('-389334960')) NOT BETWEEN ((t2.c71 COLLATE RTRIM)) AND ((t2.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.28748835224351943 COLLATE BINARY) IS TRUE)  as count FROM t2, vt1 CROSS JOIN t0 ON vt1.c1 ORDER BY ((('-389334960')) NOT BETWEEN ((t2.c71 COLLATE RTRIM)) AND ((t2.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 CROSS JOIN t0 ON vt1.c1 WHERE (0.28748835224351943 COLLATE BINARY) ORDER BY ((('-389334960')) NOT BETWEEN ((t2.c71 COLLATE RTRIM)) AND ((t2.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.28748835224351943 COLLATE BINARY) IS TRUE)  as count FROM t2, vt1 CROSS JOIN t0 ON vt1.c1 ORDER BY ((('-389334960')) NOT BETWEEN ((t2.c71 COLLATE RTRIM)) AND ((t2.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 CROSS JOIN t0 ON vt1.c1 WHERE (0.28748835224351943 COLLATE BINARY) ORDER BY ((('-389334960')) NOT BETWEEN ((t2.c71 COLLATE RTRIM)) AND ((t2.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (t2.c71) ORDER BY ((t2.c71)<<(0.7044617527849253)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c71) IS TRUE)  as count FROM vt1, t2 ORDER BY ((t2.c71)<<(0.7044617527849253)) ASC);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (t2.c71) ORDER BY ((t2.c71)<<(0.7044617527849253)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c71) IS TRUE)  as count FROM vt1, t2 ORDER BY ((t2.c71)<<(0.7044617527849253)) ASC);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (t2.c71) ORDER BY ((t2.c71)<<(0.7044617527849253)) ASC;
SELECT COUNT(*) FROM vt1, t2 WHERE (((((CASE t2.c71  WHEN t2.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c1 THEN t2.c71 ELSE vt1.c0 END)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((CASE t2.c71  WHEN t2.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c1 THEN t2.c71 ELSE vt1.c0 END)))AND(x''))) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 WHERE (((((CASE t2.c71  WHEN t2.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c1 THEN t2.c71 ELSE vt1.c0 END)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((CASE t2.c71  WHEN t2.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c1 THEN t2.c71 ELSE vt1.c0 END)))AND(x''))) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 WHERE (((((CASE t2.c71  WHEN t2.c0 THEN vt1.c0 END)OR(CASE WHEN vt1.c1 THEN t2.c71 ELSE vt1.c0 END)))AND(x'')));
SELECT * FROM t2 FULL OUTER JOIN t0 ON (CAST(t2.c0 AS BLOB) IN ()) WHERE (((((((((((((t2.c71)AND(t0.c0)))OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR((+ (t0.c0)))))OR((t0.c0 IN ()))))AND(CAST(t2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t2.c71)AND(t0.c0)))OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR((+ (t0.c0)))))OR((t0.c0 IN ()))))AND(CAST(t2.c0 AS TEXT)))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON (CAST(t2.c0 AS BLOB) IN ()));
SELECT * FROM t2 FULL OUTER JOIN t0 ON (CAST(t2.c0 AS BLOB) IN ()) WHERE (((((((((((((t2.c71)AND(t0.c0)))OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR((+ (t0.c0)))))OR((t0.c0 IN ()))))AND(CAST(t2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t2.c71)AND(t0.c0)))OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR((+ (t0.c0)))))OR((t0.c0 IN ()))))AND(CAST(t2.c0 AS TEXT)))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON (CAST(t2.c0 AS BLOB) IN ()));
SELECT * FROM t2 FULL OUTER JOIN t0 ON (CAST(t2.c0 AS BLOB) IN ()) WHERE (((((((((((((t2.c71)AND(t0.c0)))OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR((+ (t0.c0)))))OR((t0.c0 IN ()))))AND(CAST(t2.c0 AS TEXT))));
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN 'PB' THEN t0.c0 ELSE 1138612740 END) ISNULL)) ORDER BY x'ab88' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN 'PB' THEN t0.c0 ELSE 1138612740 END) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY x'ab88' DESC);
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN 'PB' THEN t0.c0 ELSE 1138612740 END) ISNULL)) ORDER BY x'ab88' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN 'PB' THEN t0.c0 ELSE 1138612740 END) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY x'ab88' DESC);
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN 'PB' THEN t0.c0 ELSE 1138612740 END) ISNULL)) ORDER BY x'ab88' DESC;
SELECT COUNT(*) FROM vt1, t2, t0 WHERE (((((vt1.c0)+(t2.c71)))>=(UPPER(t2.c71))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(t2.c71)))>=(UPPER(t2.c71)))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT COUNT(*) FROM vt1, t2, t0 WHERE (((((vt1.c0)+(t2.c71)))>=(UPPER(t2.c71))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(t2.c71)))>=(UPPER(t2.c71)))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT COUNT(*) FROM vt1, t2, t0 WHERE (((((vt1.c0)+(t2.c71)))>=(UPPER(t2.c71))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((((t0.c0)*(t0.c0))) IS TRUE) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((((t0.c0)*(t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((((t0.c0)*(t0.c0))) IS TRUE) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((((t0.c0)*(t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((((t0.c0)*(t0.c0))) IS TRUE) WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))GLOB(NULL))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))GLOB(NULL))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))GLOB(NULL)));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE ((- ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))))));
SELECT * FROM t2 WHERE (CASE ('2107248135' IN ())  WHEN t2.c0 COLLATE NOCASE THEN (+ (t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ('2107248135' IN ())  WHEN t2.c0 COLLATE NOCASE THEN (+ (t2.c71)) END) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE ('2107248135' IN ())  WHEN t2.c0 COLLATE NOCASE THEN (+ (t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ('2107248135' IN ())  WHEN t2.c0 COLLATE NOCASE THEN (+ (t2.c71)) END) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE ('2107248135' IN ())  WHEN t2.c0 COLLATE NOCASE THEN (+ (t2.c71)) END);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (CASE ((t0.c0) BETWEEN ('ڤW') AND (t2.c0))  WHEN (('')||(vt1.c0)) THEN (((vt1.c1))!=((t2.c0))) ELSE ((vt1.c0)%(t2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) BETWEEN ('ڤW') AND (t2.c0))  WHEN (('')||(vt1.c0)) THEN (((vt1.c1))<>((t2.c0))) ELSE ((vt1.c0)%(t2.c0)) END) IS TRUE)  as count FROM t0, t2, vt1);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (CASE ((t0.c0) BETWEEN ('ڤW') AND (t2.c0))  WHEN (('')||(vt1.c0)) THEN (((vt1.c1))!=((t2.c0))) ELSE ((vt1.c0)%(t2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) BETWEEN ('ڤW') AND (t2.c0))  WHEN (('')||(vt1.c0)) THEN (((vt1.c1))<>((t2.c0))) ELSE ((vt1.c0)%(t2.c0)) END) IS TRUE)  as count FROM t0, t2, vt1);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (CASE ((t0.c0) BETWEEN ('ڤW') AND (t2.c0))  WHEN (('')||(vt1.c0)) THEN (((vt1.c1))!=((t2.c0))) ELSE ((vt1.c0)%(t2.c0)) END);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) NOTNULL)) ORDER BY ((((vt1.c0)OR(1.255593198E9)))OR(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(1.255593198E9)))OR(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) NOTNULL)) ORDER BY ((((vt1.c0)OR(1.255593198E9)))OR(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(1.255593198E9)))OR(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) NOTNULL)) ORDER BY ((((vt1.c0)OR(1.255593198E9)))OR(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN t2 ON (- (((vt1.c1) ISNULL))) WHERE (((- (vt1.c1)) IN ())) ORDER BY (CAST(t2.c0 AS BLOB) IN (((t2.c71) NOT NULL))), CASE WHEN (((vt1.c1, vt1.c0, t2.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c1)) AND ((vt1.c0, t2.c71, t2.c0))) THEN ((t2.c0)>(vt1.c0)) END, ((((vt1.c1)AND(vt1.c1)))OR(t2.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t2 ON (- (((vt1.c1) ISNULL))) ORDER BY (CAST(t2.c0 AS BLOB) IN (((t2.c71) NOT NULL))), CASE WHEN (((vt1.c1, vt1.c0, t2.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c1)) AND ((vt1.c0, t2.c71, t2.c0))) THEN ((t2.c0)>(vt1.c0)) END, ((((vt1.c1)AND(vt1.c1)))OR(t2.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN t2 ON (- (((vt1.c1) ISNULL))) WHERE (((- (vt1.c1)) IN ())) ORDER BY (CAST(t2.c0 AS BLOB) IN (((t2.c71) NOT NULL))), CASE WHEN (((vt1.c1, vt1.c0, t2.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c1)) AND ((vt1.c0, t2.c71, t2.c0))) THEN ((t2.c0)>(vt1.c0)) END, ((((vt1.c1)AND(vt1.c1)))OR(t2.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN t2 ON (- (((vt1.c1) ISNULL))) ORDER BY (CAST(t2.c0 AS BLOB) IN (((t2.c71) NOT NULL))), CASE WHEN (((vt1.c1, vt1.c0, t2.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c1)) AND ((vt1.c0, t2.c71, t2.c0))) THEN ((t2.c0)>(vt1.c0)) END, ((((vt1.c1)AND(vt1.c1)))OR(t2.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN t2 ON (- (((vt1.c1) ISNULL))) WHERE (((- (vt1.c1)) IN ())) ORDER BY (CAST(t2.c0 AS BLOB) IN (((t2.c71) NOT NULL))), CASE WHEN (((vt1.c1, vt1.c0, t2.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c1)) AND ((vt1.c0, t2.c71, t2.c0))) THEN ((t2.c0)>(vt1.c0)) END, ((((vt1.c1)AND(vt1.c1)))OR(t2.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt1 ON (((t2.c71)) NOT BETWEEN ((((vt1.c0)>>(vt1.c1)))) AND ((CAST(vt1.c1 AS BLOB)))) WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(t2.c71)))AND(0.5519768953406258)))OR(vt1.c1)))OR(1039780676)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(t2.c71)))AND(0.5519768953406258)))OR(vt1.c1)))OR(1039780676))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt1 ON (((t2.c71)) NOT BETWEEN ((((vt1.c0)>>(vt1.c1)))) AND ((CAST(vt1.c1 AS BLOB)))));
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt1 ON (((t2.c71)) NOT BETWEEN ((((vt1.c0)>>(vt1.c1)))) AND ((CAST(vt1.c1 AS BLOB)))) WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(t2.c71)))AND(0.5519768953406258)))OR(vt1.c1)))OR(1039780676)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(t2.c71)))AND(0.5519768953406258)))OR(vt1.c1)))OR(1039780676))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt1 ON (((t2.c71)) NOT BETWEEN ((((vt1.c0)>>(vt1.c1)))) AND ((CAST(vt1.c1 AS BLOB)))));
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt1 ON (((t2.c71)) NOT BETWEEN ((((vt1.c0)>>(vt1.c1)))) AND ((CAST(vt1.c1 AS BLOB)))) WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(t2.c71)))AND(0.5519768953406258)))OR(vt1.c1)))OR(1039780676)));
SELECT ALL * FROM t2, vt1 WHERE (UPPER(((vt1.c1) IS FALSE))) ORDER BY (((vt1.c1 IN ()))<=(((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c1) IS FALSE))) IS TRUE)  as count FROM t2, vt1 ORDER BY (((vt1.c1 IN ()))<=(((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1)))));
SELECT ALL * FROM t2, vt1 WHERE (UPPER(((vt1.c1) IS FALSE))) ORDER BY (((vt1.c1 IN ()))<=(((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c1) IS FALSE))) IS TRUE)  as count FROM t2, vt1 ORDER BY (((vt1.c1 IN ()))<=(((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1)))));
SELECT ALL * FROM t2, vt1 WHERE (UPPER(((vt1.c1) IS FALSE))) ORDER BY (((vt1.c1 IN ()))<=(((t2.c71) NOT BETWEEN (t2.c0) AND (vt1.c1))));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))*((- (t0.c0))))) ORDER BY ((((vt1.c1) IS FALSE))IS(t2.c71));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))*((- (t0.c0))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((((vt1.c1) IS FALSE))IS(t2.c71)));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))*((- (t0.c0))))) ORDER BY ((((vt1.c1) IS FALSE))IS(t2.c71));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))*((- (t0.c0))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((((vt1.c1) IS FALSE))IS(t2.c71)));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))*((- (t0.c0))))) ORDER BY ((((vt1.c1) IS FALSE))IS(t2.c71));
SELECT * FROM t2 WHERE (CASE WHEN ((t2.c0)<<(t2.c71)) THEN (~ (t2.c71)) ELSE ((t2.c71) BETWEEN (t2.c71) AND (0xffffffffe240c164)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t2.c0)<<(t2.c71)) THEN (~ (t2.c71)) ELSE ((t2.c71) BETWEEN (t2.c71) AND (0xffffffffe240c164)) END) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE WHEN ((t2.c0)<<(t2.c71)) THEN (~ (t2.c71)) ELSE ((t2.c71) BETWEEN (t2.c71) AND (0xffffffffe240c164)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t2.c0)<<(t2.c71)) THEN (~ (t2.c71)) ELSE ((t2.c71) BETWEEN (t2.c71) AND (0xffffffffe240c164)) END) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE WHEN ((t2.c0)<<(t2.c71)) THEN (~ (t2.c71)) ELSE ((t2.c71) BETWEEN (t2.c71) AND (0xffffffffe240c164)) END);
SELECT COUNT(*) FROM t2 WHERE ((((x'')) BETWEEN ((t2.c71 COLLATE NOCASE)) AND (((NOT (NULL)))))) ORDER BY CAST(IFNULL(t2.c0, t2.c0) AS NUMERIC), ((CAST(t2.c71 AS INTEGER))<=(t2.c0)) DESC  NULLS LAST, LIKELIHOOD((((0.578812116616712)) BETWEEN ((t2.c0)) AND (('1845562475'))), 0.4322215864546889);
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((t2.c71 COLLATE NOCASE)) AND (((NOT (NULL)))))) IS TRUE)  as count FROM t2 ORDER BY CAST(IFNULL(t2.c0, t2.c0) AS NUMERIC), ((CAST(t2.c71 AS INTEGER))<=(t2.c0)) DESC  NULLS LAST, LIKELIHOOD((((0.578812116616712)) BETWEEN ((t2.c0)) AND (('1845562475'))), 0.4322215864546889));
SELECT COUNT(*) FROM t2 WHERE ((((x'')) BETWEEN ((t2.c71 COLLATE NOCASE)) AND (((NOT (NULL)))))) ORDER BY CAST(IFNULL(t2.c0, t2.c0) AS NUMERIC), ((CAST(t2.c71 AS INTEGER))<=(t2.c0)) DESC  NULLS LAST, LIKELIHOOD((((0.578812116616712)) BETWEEN ((t2.c0)) AND (('1845562475'))), 0.4322215864546889);
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((t2.c71 COLLATE NOCASE)) AND (((NOT (NULL)))))) IS TRUE)  as count FROM t2 ORDER BY CAST(IFNULL(t2.c0, t2.c0) AS NUMERIC), ((CAST(t2.c71 AS INTEGER))<=(t2.c0)) DESC  NULLS LAST, LIKELIHOOD((((0.578812116616712)) BETWEEN ((t2.c0)) AND (('1845562475'))), 0.4322215864546889));
SELECT COUNT(*) FROM t2 WHERE ((((x'')) BETWEEN ((t2.c71 COLLATE NOCASE)) AND (((NOT (NULL)))))) ORDER BY CAST(IFNULL(t2.c0, t2.c0) AS NUMERIC), ((CAST(t2.c71 AS INTEGER))<=(t2.c0)) DESC  NULLS LAST, LIKELIHOOD((((0.578812116616712)) BETWEEN ((t2.c0)) AND (('1845562475'))), 0.4322215864546889);
SELECT ALL * FROM t2 NOT INDEXED, vt1 WHERE ((('0.14327359433906972') BETWEEN (((((vt1.c0)OR(t2.c71)))OR(x'38f7'))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((('0.14327359433906972') BETWEEN (((((vt1.c0)OR(t2.c71)))OR(x'38f7'))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t2, vt1);
SELECT ALL * FROM t2 NOT INDEXED, vt1 WHERE ((('0.14327359433906972') BETWEEN (((((vt1.c0)OR(t2.c71)))OR(x'38f7'))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((('0.14327359433906972') BETWEEN (((((vt1.c0)OR(t2.c71)))OR(x'38f7'))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t2, vt1);
SELECT ALL * FROM t2 NOT INDEXED, vt1 WHERE ((('0.14327359433906972') BETWEEN (((((vt1.c0)OR(t2.c71)))OR(x'38f7'))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)||(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)||(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)||(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)||(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)||(vt1.c0)) AS NUMERIC));
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t2, vt1, t0 WHERE ((((((((t2.c71)OR(t2.c0)))AND(t2.c71)), 0x6f66bd45, ((t0.c0) NOTNULL)))=((((t0.c0)LIKE(t2.c71)), LENGTH(t2.c71), CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 WHEN t2.c71 THEN t2.c0 END)))) ORDER BY CAST(t2.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t2.c71)OR(t2.c0)))AND(t2.c71)), 0X6f66bd45, ((t0.c0) NOTNULL)))=((((t0.c0)LIKE(t2.c71)), LENGTH(t2.c71), CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 WHEN t2.c71 THEN t2.c0 END)))) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY CAST(t2.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT * FROM t2, vt1, t0 WHERE ((((((((t2.c71)OR(t2.c0)))AND(t2.c71)), 0x6f66bd45, ((t0.c0) NOTNULL)))=((((t0.c0)LIKE(t2.c71)), LENGTH(t2.c71), CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 WHEN t2.c71 THEN t2.c0 END)))) ORDER BY CAST(t2.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t2.c71)OR(t2.c0)))AND(t2.c71)), 0X6f66bd45, ((t0.c0) NOTNULL)))=((((t0.c0)LIKE(t2.c71)), LENGTH(t2.c71), CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 WHEN t2.c71 THEN t2.c0 END)))) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY CAST(t2.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST);
SELECT * FROM t2, vt1, t0 WHERE ((((((((t2.c71)OR(t2.c0)))AND(t2.c71)), 0x6f66bd45, ((t0.c0) NOTNULL)))=((((t0.c0)LIKE(t2.c71)), LENGTH(t2.c71), CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 WHEN t2.c71 THEN t2.c0 END)))) ORDER BY CAST(t2.c0 COLLATE BINARY AS INTEGER)  NULLS FIRST;
SELECT * FROM vt1, t0, t2 WHERE (vt1.c1) ORDER BY x'' ASC, CAST(((vt1.c1) BETWEEN (t2.c0) AND (t2.c71)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY x'' ASC, CAST(((vt1.c1) BETWEEN (t2.c0) AND (t2.c71)) AS TEXT) DESC);
SELECT * FROM vt1, t0, t2 WHERE (vt1.c1) ORDER BY x'' ASC, CAST(((vt1.c1) BETWEEN (t2.c0) AND (t2.c71)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY x'' ASC, CAST(((vt1.c1) BETWEEN (t2.c0) AND (t2.c71)) AS TEXT) DESC);
SELECT * FROM vt1, t0, t2 WHERE (vt1.c1) ORDER BY x'' ASC, CAST(((vt1.c1) BETWEEN (t2.c0) AND (t2.c71)) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t2 WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY (((t2.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) AND ((((((t2.c0)AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((t2.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) AND ((((((t2.c0)AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t2 WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY (((t2.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) AND ((((((t2.c0)AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((t2.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) AND ((((((t2.c0)AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t2 WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY (((t2.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))) AND ((((((t2.c0)AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 ASC, ((0.8268904716294359) BETWEEN (((vt1.c1) IS TRUE)) AND (SQLITE_COMPILEOPTION_GET(vt1.c1))) ASC  NULLS LAST, (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((0.8268904716294359) BETWEEN (((vt1.c1) IS TRUE)) AND (SQLITE_COMPILEOPTION_GET(vt1.c1))) ASC  NULLS LAST, (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 ASC, ((0.8268904716294359) BETWEEN (((vt1.c1) IS TRUE)) AND (SQLITE_COMPILEOPTION_GET(vt1.c1))) ASC  NULLS LAST, (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, ((0.8268904716294359) BETWEEN (((vt1.c1) IS TRUE)) AND (SQLITE_COMPILEOPTION_GET(vt1.c1))) ASC  NULLS LAST, (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 ASC, ((0.8268904716294359) BETWEEN (((vt1.c1) IS TRUE)) AND (SQLITE_COMPILEOPTION_GET(vt1.c1))) ASC  NULLS LAST, (vt1.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT * FROM t2, t0 WHERE (COALESCE(0.8408294855865028, t2.c71 COLLATE NOCASE)) ORDER BY LIKELY(CAST(t2.c71 AS NUMERIC))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(0.8408294855865028, t2.c71 COLLATE NOCASE)) IS TRUE)  as count FROM t2, t0 ORDER BY LIKELY(CAST(t2.c71 AS NUMERIC))  NULLS FIRST);
SELECT * FROM t2, t0 WHERE (COALESCE(0.8408294855865028, t2.c71 COLLATE NOCASE)) ORDER BY LIKELY(CAST(t2.c71 AS NUMERIC))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(0.8408294855865028, t2.c71 COLLATE NOCASE)) IS TRUE)  as count FROM t2, t0 ORDER BY LIKELY(CAST(t2.c71 AS NUMERIC))  NULLS FIRST);
SELECT * FROM t2, t0 WHERE (COALESCE(0.8408294855865028, t2.c71 COLLATE NOCASE)) ORDER BY LIKELY(CAST(t2.c71 AS NUMERIC))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((((CASE WHEN t2.c0 THEN t2.c71 END))<((((t0.c0)<(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t2.c0 THEN t2.c71 END))<((((t0.c0)<(t0.c0)))))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((((CASE WHEN t2.c0 THEN t2.c71 END))<((((t0.c0)<(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN t2.c0 THEN t2.c71 END))<((((t0.c0)<(t0.c0)))))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((((CASE WHEN t2.c0 THEN t2.c71 END))<((((t0.c0)<(t0.c0))))));
SELECT * FROM vt1, t0 WHERE ((((((((vt1.c0))<=((t0.c0))))AND(CASE -904995134  WHEN vt1.c0 THEN vt1.c1 END)))AND((((vt1.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c1, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))<=((t0.c0))))AND(CASE -904995134  WHEN vt1.c0 THEN vt1.c1 END)))AND((((vt1.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c1, t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((((((vt1.c0))<=((t0.c0))))AND(CASE -904995134  WHEN vt1.c0 THEN vt1.c1 END)))AND((((vt1.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c1, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))<=((t0.c0))))AND(CASE -904995134  WHEN vt1.c0 THEN vt1.c1 END)))AND((((vt1.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c1, t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((((((vt1.c0))<=((t0.c0))))AND(CASE -904995134  WHEN vt1.c0 THEN vt1.c1 END)))AND((((vt1.c0, vt1.c0, t0.c0))>((vt1.c0, vt1.c1, t0.c0))))));
SELECT * FROM t2, vt1, t0 WHERE (IFNULL(t0.c0, vt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t0.c0, vt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt1, t0);
SELECT * FROM t2, vt1, t0 WHERE (IFNULL(t0.c0, vt1.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t0.c0, vt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM t2, vt1, t0);
SELECT * FROM t2, vt1, t0 WHERE (IFNULL(t0.c0, vt1.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (CASE WHEN (~ (vt1.c1)) THEN t2.c71 ELSE ((((vt1.c1)OR(t2.c71)))AND(t2.c71)) END) ORDER BY CASE WHEN ((t2.c0) ISNULL) THEN '' ELSE ((vt1.c1)!=(t2.c0)) END, CASE WHEN (- (t2.c0)) THEN CASE vt1.c1  WHEN NULL THEN t2.c0 ELSE vt1.c1 END WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c71 ELSE vt1.c1 END WHEN ((t2.c0) NOT BETWEEN (vt1.c0) AND (1.453640605E9)) THEN ((((vt1.c0)AND(-1.559580508E9)))OR(t2.c71)) ELSE vt1.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt1.c1)) THEN t2.c71 ELSE ((((vt1.c1)OR(t2.c71)))AND(t2.c71)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t2 ORDER BY CASE WHEN ((t2.c0) ISNULL) THEN '' ELSE ((vt1.c1)<>(t2.c0)) END, CASE WHEN (- (t2.c0)) THEN CASE vt1.c1  WHEN NULL THEN t2.c0 ELSE vt1.c1 END WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c71 ELSE vt1.c1 END WHEN ((t2.c0) NOT BETWEEN (vt1.c0) AND (1.453640605E9)) THEN ((((vt1.c0)AND(-1.559580508E9)))OR(t2.c71)) ELSE vt1.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (CASE WHEN (~ (vt1.c1)) THEN t2.c71 ELSE ((((vt1.c1)OR(t2.c71)))AND(t2.c71)) END) ORDER BY CASE WHEN ((t2.c0) ISNULL) THEN '' ELSE ((vt1.c1)!=(t2.c0)) END, CASE WHEN (- (t2.c0)) THEN CASE vt1.c1  WHEN NULL THEN t2.c0 ELSE vt1.c1 END WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c71 ELSE vt1.c1 END WHEN ((t2.c0) NOT BETWEEN (vt1.c0) AND (1.453640605E9)) THEN ((((vt1.c0)AND(-1.559580508E9)))OR(t2.c71)) ELSE vt1.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt1.c1)) THEN t2.c71 ELSE ((((vt1.c1)OR(t2.c71)))AND(t2.c71)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t2 ORDER BY CASE WHEN ((t2.c0) ISNULL) THEN '' ELSE ((vt1.c1)<>(t2.c0)) END, CASE WHEN (- (t2.c0)) THEN CASE vt1.c1  WHEN NULL THEN t2.c0 ELSE vt1.c1 END WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c71 ELSE vt1.c1 END WHEN ((t2.c0) NOT BETWEEN (vt1.c0) AND (1.453640605E9)) THEN ((((vt1.c0)AND(-1.559580508E9)))OR(t2.c71)) ELSE vt1.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (CASE WHEN (~ (vt1.c1)) THEN t2.c71 ELSE ((((vt1.c1)OR(t2.c71)))AND(t2.c71)) END) ORDER BY CASE WHEN ((t2.c0) ISNULL) THEN '' ELSE ((vt1.c1)!=(t2.c0)) END, CASE WHEN (- (t2.c0)) THEN CASE vt1.c1  WHEN NULL THEN t2.c0 ELSE vt1.c1 END WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c71 ELSE vt1.c1 END WHEN ((t2.c0) NOT BETWEEN (vt1.c0) AND (1.453640605E9)) THEN ((((vt1.c0)AND(-1.559580508E9)))OR(t2.c71)) ELSE vt1.c0 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (~ (t0.c0)) ELSE (~ (t0.c0)) END) ORDER BY CAST(((t0.c0) NOT NULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN (~ (t0.c0)) ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT NULL) AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (~ (t0.c0)) ELSE (~ (t0.c0)) END) ORDER BY CAST(((t0.c0) NOT NULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN (~ (t0.c0)) ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT NULL) AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (~ (t0.c0)) ELSE (~ (t0.c0)) END) ORDER BY CAST(((t0.c0) NOT NULL) AS INTEGER);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((((t2.c0)AND(((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR((((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND((((t2.c0))>((x''))))))AND(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((t2.c0)AND(((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR((((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND((((t2.c0))>((x''))))))AND(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM t2, vt1);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((((t2.c0)AND(((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR((((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND((((t2.c0))>((x''))))))AND(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((t2.c0)AND(((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR((((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND((((t2.c0))>((x''))))))AND(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM t2, vt1);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((((t2.c0)AND(((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR((((t2.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))AND((((t2.c0))>((x''))))))AND(CASE t2.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT * FROM t2 LEFT OUTER JOIN t0 ON (('-1900375559')/((vt1.c1 IN ()))) FULL OUTER JOIN vt1 ON (((- (t2.c0)))<<(((t0.c0)!=(vt1.c0)))) WHERE ((+ ((vt1.c1 IN ())))) ORDER BY (((t2.c0 IN ())) BETWEEN (vt1.c1) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN ())))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON (('-1900375559')/((vt1.c1 IN ()))) FULL OUTER JOIN vt1 ON (((- (t2.c0)))<<(((t0.c0)<>(vt1.c0)))) ORDER BY (((t2.c0 IN ())) BETWEEN (vt1.c1) AND (NULL))  NULLS LAST);
SELECT * FROM t2 LEFT OUTER JOIN t0 ON (('-1900375559')/((vt1.c1 IN ()))) FULL OUTER JOIN vt1 ON (((- (t2.c0)))<<(((t0.c0)!=(vt1.c0)))) WHERE ((+ ((vt1.c1 IN ())))) ORDER BY (((t2.c0 IN ())) BETWEEN (vt1.c1) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN ())))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON (('-1900375559')/((vt1.c1 IN ()))) FULL OUTER JOIN vt1 ON (((- (t2.c0)))<<(((t0.c0)<>(vt1.c0)))) ORDER BY (((t2.c0 IN ())) BETWEEN (vt1.c1) AND (NULL))  NULLS LAST);
SELECT * FROM t2 LEFT OUTER JOIN t0 ON (('-1900375559')/((vt1.c1 IN ()))) FULL OUTER JOIN vt1 ON (((- (t2.c0)))<<(((t0.c0)!=(vt1.c0)))) WHERE ((+ ((vt1.c1 IN ())))) ORDER BY (((t2.c0 IN ())) BETWEEN (vt1.c1) AND (NULL))  NULLS LAST;
SELECT ALL * FROM t2 WHERE (((((NOT (t2.c0)), t2.c71, ((t2.c71) BETWEEN (t2.c0) AND (t2.c0))))>=((((t2.c71)IS(t2.c71)), ((t2.c71)IS NOT(t2.c0)), (NOT (x'')))))) ORDER BY (((t2.c0)>(t2.c0)) IN (((t2.c0) BETWEEN (x'') AND (t2.c0))))  NULLS LAST, t2.c71 DESC  NULLS FIRST, (((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) NOT BETWEEN (((((t2.c0)AND(t2.c0)))AND(0.6663309574953733))) AND ((((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t2.c0)), t2.c71, ((t2.c71) BETWEEN (t2.c0) AND (t2.c0))))>=((((t2.c71)IS(t2.c71)), ((t2.c71)IS NOT(t2.c0)), (NOT (x'')))))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c0)>(t2.c0)) IN (((t2.c0) BETWEEN (x'') AND (t2.c0))))  NULLS LAST, t2.c71 DESC  NULLS FIRST, (((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) NOT BETWEEN (((((t2.c0)AND(t2.c0)))AND(0.6663309574953733))) AND ((((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))))) ASC  NULLS LAST);
SELECT ALL * FROM t2 WHERE (((((NOT (t2.c0)), t2.c71, ((t2.c71) BETWEEN (t2.c0) AND (t2.c0))))>=((((t2.c71)IS(t2.c71)), ((t2.c71)IS NOT(t2.c0)), (NOT (x'')))))) ORDER BY (((t2.c0)>(t2.c0)) IN (((t2.c0) BETWEEN (x'') AND (t2.c0))))  NULLS LAST, t2.c71 DESC  NULLS FIRST, (((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) NOT BETWEEN (((((t2.c0)AND(t2.c0)))AND(0.6663309574953733))) AND ((((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t2.c0)), t2.c71, ((t2.c71) BETWEEN (t2.c0) AND (t2.c0))))>=((((t2.c71)IS(t2.c71)), ((t2.c71)IS NOT(t2.c0)), (NOT (x'')))))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c0)>(t2.c0)) IN (((t2.c0) BETWEEN (x'') AND (t2.c0))))  NULLS LAST, t2.c71 DESC  NULLS FIRST, (((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) NOT BETWEEN (((((t2.c0)AND(t2.c0)))AND(0.6663309574953733))) AND ((((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))))) ASC  NULLS LAST);
SELECT ALL * FROM t2 WHERE (((((NOT (t2.c0)), t2.c71, ((t2.c71) BETWEEN (t2.c0) AND (t2.c0))))>=((((t2.c71)IS(t2.c71)), ((t2.c71)IS NOT(t2.c0)), (NOT (x'')))))) ORDER BY (((t2.c0)>(t2.c0)) IN (((t2.c0) BETWEEN (x'') AND (t2.c0))))  NULLS LAST, t2.c71 DESC  NULLS FIRST, (((((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c0)))) NOT BETWEEN (((((t2.c0)AND(t2.c0)))AND(0.6663309574953733))) AND ((((t2.c71)) BETWEEN ((t2.c0)) AND ((t2.c71))))) ASC  NULLS LAST;
SELECT * FROM vt1, t2, t0 WHERE ('-1110468640') ORDER BY ((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c71 THEN '-528362376' WHEN vt1.c0 THEN t2.c0 END)>>((((t0.c0, vt1.c1, NULL))<=((vt1.c1, t0.c0, 'Ae')))));
SELECT SUM(count) FROM (SELECT (('-1110468640') IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c71 THEN '-528362376' WHEN vt1.c0 THEN t2.c0 END)>>((((t0.c0, vt1.c1, NULL))<=((vt1.c1, t0.c0, 'Ae'))))));
SELECT * FROM vt1, t2, t0 WHERE ('-1110468640') ORDER BY ((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c71 THEN '-528362376' WHEN vt1.c0 THEN t2.c0 END)>>((((t0.c0, vt1.c1, NULL))<=((vt1.c1, t0.c0, 'Ae')))));
SELECT SUM(count) FROM (SELECT (('-1110468640') IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c71 THEN '-528362376' WHEN vt1.c0 THEN t2.c0 END)>>((((t0.c0, vt1.c1, NULL))<=((vt1.c1, t0.c0, 'Ae'))))));
SELECT * FROM vt1, t2, t0 WHERE ('-1110468640') ORDER BY ((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c71 THEN '-528362376' WHEN vt1.c0 THEN t2.c0 END)>>((((t0.c0, vt1.c1, NULL))<=((vt1.c1, t0.c0, 'Ae')))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t2 ON CASE WHEN (((vt1.c0))>((vt1.c0))) THEN ((t2.c71) NOT BETWEEN ('퓮j') AND (-1.900375559E9)) END FULL OUTER JOIN t0 ON ((((vt1.c1) BETWEEN (vt1.c0) AND ('-755050239')))>=(((t2.c71)||('')))) WHERE (CAST(((((t0.c0)AND(t2.c71)))AND(0.6003422244085477)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(t2.c71)))AND(0.6003422244085477)) AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t2 ON CASE WHEN (((vt1.c0))>((vt1.c0))) THEN ((t2.c71) NOT BETWEEN ('퓮j') AND (-1.900375559E9)) END FULL OUTER JOIN t0 ON ((((vt1.c1) BETWEEN (vt1.c0) AND ('-755050239')))>=(((t2.c71)||('')))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t2 ON CASE WHEN (((vt1.c0))>((vt1.c0))) THEN ((t2.c71) NOT BETWEEN ('퓮j') AND (-1.900375559E9)) END FULL OUTER JOIN t0 ON ((((vt1.c1) BETWEEN (vt1.c0) AND ('-755050239')))>=(((t2.c71)||('')))) WHERE (CAST(((((t0.c0)AND(t2.c71)))AND(0.6003422244085477)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(t2.c71)))AND(0.6003422244085477)) AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t2 ON CASE WHEN (((vt1.c0))>((vt1.c0))) THEN ((t2.c71) NOT BETWEEN ('퓮j') AND (-1.900375559E9)) END FULL OUTER JOIN t0 ON ((((vt1.c1) BETWEEN (vt1.c0) AND ('-755050239')))>=(((t2.c71)||('')))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t2 ON CASE WHEN (((vt1.c0))>((vt1.c0))) THEN ((t2.c71) NOT BETWEEN ('퓮j') AND (-1.900375559E9)) END FULL OUTER JOIN t0 ON ((((vt1.c1) BETWEEN (vt1.c0) AND ('-755050239')))>=(((t2.c71)||('')))) WHERE (CAST(((((t0.c0)AND(t2.c71)))AND(0.6003422244085477)) AS NUMERIC));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) NOTNULL)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))&(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))&(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) NOTNULL)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))&(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))&(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) NOTNULL)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))&(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (RTRIM((((0.3743025786552604))<((vt1.c0))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((((0.3743025786552604))<((vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY '' DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (RTRIM((((0.3743025786552604))<((vt1.c0))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((((0.3743025786552604))<((vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY '' DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (RTRIM((((0.3743025786552604))<((vt1.c0))))) ORDER BY '' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t2 NOT INDEXED WHERE (((vt1.c1) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (CAST('1719453990' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (CAST('1719453990' AS BLOB)))) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 NOT INDEXED WHERE (((vt1.c1) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (CAST('1719453990' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (CAST('1719453990' AS BLOB)))) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 NOT INDEXED WHERE (((vt1.c1) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (CAST('1719453990' AS BLOB))));
SELECT ALL * FROM t2 INNER JOIN vt1 ON CAST(t0.c0 COLLATE RTRIM AS BLOB) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) WHERE (CASE ((t2.c71)-(vt1.c1))  WHEN (~ (vt1.c0)) THEN COALESCE(vt1.c0, t2.c71) WHEN (((vt1.c1))>((t0.c0))) THEN ((vt1.c0) IS FALSE) WHEN COALESCE(DISTINCT t0.c0, t2.c0, vt1.c0, '扝wgeP>BI') THEN CAST(0.41846928463653676 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c71)-(vt1.c1))  WHEN (~ (vt1.c0)) THEN COALESCE(vt1.c0, t2.c71) WHEN (((vt1.c1))>((t0.c0))) THEN ((vt1.c0) IS FALSE) WHEN COALESCE(DISTINCT t0.c0, t2.c0, vt1.c0, '扝wgeP>BI') THEN CAST(0.41846928463653676 AS NUMERIC) END) IS TRUE)  as count FROM t2 INNER JOIN vt1 ON CAST(t0.c0 COLLATE RTRIM AS BLOB) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT));
SELECT ALL * FROM t2 INNER JOIN vt1 ON CAST(t0.c0 COLLATE RTRIM AS BLOB) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) WHERE (CASE ((t2.c71)-(vt1.c1))  WHEN (~ (vt1.c0)) THEN COALESCE(vt1.c0, t2.c71) WHEN (((vt1.c1))>((t0.c0))) THEN ((vt1.c0) IS FALSE) WHEN COALESCE(DISTINCT t0.c0, t2.c0, vt1.c0, '扝wgeP>BI') THEN CAST(0.41846928463653676 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t2.c71)-(vt1.c1))  WHEN (~ (vt1.c0)) THEN COALESCE(vt1.c0, t2.c71) WHEN (((vt1.c1))>((t0.c0))) THEN ((vt1.c0) IS FALSE) WHEN COALESCE(DISTINCT t0.c0, t2.c0, vt1.c0, '扝wgeP>BI') THEN CAST(0.41846928463653676 AS NUMERIC) END) IS TRUE)  as count FROM t2 INNER JOIN vt1 ON CAST(t0.c0 COLLATE RTRIM AS BLOB) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT));
SELECT ALL * FROM t2 INNER JOIN vt1 ON CAST(t0.c0 COLLATE RTRIM AS BLOB) CROSS JOIN t0 ON CAST(t0.c0 AS TEXT) WHERE (CASE ((t2.c71)-(vt1.c1))  WHEN (~ (vt1.c0)) THEN COALESCE(vt1.c0, t2.c71) WHEN (((vt1.c1))>((t0.c0))) THEN ((vt1.c0) IS FALSE) WHEN COALESCE(DISTINCT t0.c0, t2.c0, vt1.c0, '扝wgeP>BI') THEN CAST(0.41846928463653676 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t2.c71))) BETWEEN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c1))>((vt1.c0)))))) ORDER BY (((- (-1))) IS TRUE)  NULLS LAST, ((SUBSTR(t2.c0, vt1.c0))AND(((t2.c0)>('-1973061351')))), CASE t2.c71  WHEN t2.c0 COLLATE BINARY THEN (t2.c0 IN (vt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t2.c71))) BETWEEN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c1))>((vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t2 ORDER BY (((- (-1))) IS TRUE)  NULLS LAST, ((SUBSTR(t2.c0, vt1.c0))AND(((t2.c0)>('-1973061351')))), CASE t2.c71  WHEN t2.c0 COLLATE BINARY THEN (t2.c0 IN (vt1.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t2.c71))) BETWEEN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c1))>((vt1.c0)))))) ORDER BY (((- (-1))) IS TRUE)  NULLS LAST, ((SUBSTR(t2.c0, vt1.c0))AND(((t2.c0)>('-1973061351')))), CASE t2.c71  WHEN t2.c0 COLLATE BINARY THEN (t2.c0 IN (vt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t2.c71))) BETWEEN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c1))>((vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t2 ORDER BY (((- (-1))) IS TRUE)  NULLS LAST, ((SUBSTR(t2.c0, vt1.c0))AND(((t2.c0)>('-1973061351')))), CASE t2.c71  WHEN t2.c0 COLLATE BINARY THEN (t2.c0 IN (vt1.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t2 WHERE (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t2.c71))) BETWEEN (((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) AND ((((vt1.c1))>((vt1.c0)))))) ORDER BY (((- (-1))) IS TRUE)  NULLS LAST, ((SUBSTR(t2.c0, vt1.c0))AND(((t2.c0)>('-1973061351')))), CASE t2.c71  WHEN t2.c0 COLLATE BINARY THEN (t2.c0 IN (vt1.c1)) END  NULLS FIRST;
SELECT ALL * FROM t2, vt1, t0 WHERE ((((vt1.c1) NOT NULL) IN ())) ORDER BY (((((((((('')AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))>>((((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t2.c71, t2.c71)) AND ((vt1.c0, -1900375559, vt1.c1))))) ASC  NULLS FIRST, ((CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 END)&(((t2.c71) BETWEEN (vt1.c0) AND (t2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY (((((((((('')AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))>>((((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t2.c71, t2.c71)) AND ((vt1.c0, -1900375559, vt1.c1))))) ASC  NULLS FIRST, ((CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 END)&(((t2.c71) BETWEEN (vt1.c0) AND (t2.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t2, vt1, t0 WHERE ((((vt1.c1) NOT NULL) IN ())) ORDER BY (((((((((('')AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))>>((((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t2.c71, t2.c71)) AND ((vt1.c0, -1900375559, vt1.c1))))) ASC  NULLS FIRST, ((CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 END)&(((t2.c71) BETWEEN (vt1.c0) AND (t2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY (((((((((('')AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))>>((((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t2.c71, t2.c71)) AND ((vt1.c0, -1900375559, vt1.c1))))) ASC  NULLS FIRST, ((CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 END)&(((t2.c71) BETWEEN (vt1.c0) AND (t2.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t2, vt1, t0 WHERE ((((vt1.c1) NOT NULL) IN ())) ORDER BY (((((((((('')AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))>>((((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t2.c71, t2.c71)) AND ((vt1.c0, -1900375559, vt1.c1))))) ASC  NULLS FIRST, ((CASE t2.c0  WHEN vt1.c0 THEN vt1.c1 END)&(((t2.c71) BETWEEN (vt1.c0) AND (t2.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, t2, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE (t0.c0);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(t2.c0)))OR(vt1.c0)) THEN CASE WHEN t2.c71 THEN vt1.c0 WHEN t2.c0 THEN vt1.c1 WHEN vt1.c0 THEN '-157741073' END END) ORDER BY ((vt1.c1) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(t2.c0)))OR(vt1.c0)) THEN CASE WHEN t2.c71 THEN vt1.c0 WHEN t2.c0 THEN vt1.c1 WHEN vt1.c0 THEN '-157741073' END END) IS TRUE)  as count FROM t2, vt1 ORDER BY ((vt1.c1) IS FALSE) COLLATE BINARY ASC);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(t2.c0)))OR(vt1.c0)) THEN CASE WHEN t2.c71 THEN vt1.c0 WHEN t2.c0 THEN vt1.c1 WHEN vt1.c0 THEN '-157741073' END END) ORDER BY ((vt1.c1) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(t2.c0)))OR(vt1.c0)) THEN CASE WHEN t2.c71 THEN vt1.c0 WHEN t2.c0 THEN vt1.c1 WHEN vt1.c0 THEN '-157741073' END END) IS TRUE)  as count FROM t2, vt1 ORDER BY ((vt1.c1) IS FALSE) COLLATE BINARY ASC);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(t2.c0)))OR(vt1.c0)) THEN CASE WHEN t2.c71 THEN vt1.c0 WHEN t2.c0 THEN vt1.c1 WHEN vt1.c0 THEN '-157741073' END END) ORDER BY ((vt1.c1) IS FALSE) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM t2, vt1 FULL OUTER JOIN t0 ON ((((vt1.c1)%(t0.c0))) NOT NULL) WHERE (CASE WHEN t2.c71 THEN ((((((((t2.c71)AND(t0.c0)))AND(vt1.c1)))AND(x'6f10')))AND(t2.c71)) WHEN 1510806787 THEN (NOT (t2.c0)) WHEN ((((t2.c0)AND(t0.c0)))AND(t0.c0)) THEN CAST(t2.c0 AS REAL) END) ORDER BY CASE WHEN '-1042950806' THEN '' WHEN ((t0.c0)&(t0.c0)) THEN CASE vt1.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c71 END WHEN ((t0.c0)<=(t2.c0)) THEN ((t2.c0)AND(vt1.c0)) ELSE vt1.c1 END DESC  NULLS FIRST, ((((NULL) BETWEEN (t0.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST, (((((1.319256945E9 IN (t2.c71)))OR(x'' COLLATE BINARY)))OR(((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c71 THEN ((((((((t2.c71)AND(t0.c0)))AND(vt1.c1)))AND(x'6f10')))AND(t2.c71)) WHEN 1510806787 THEN (NOT (t2.c0)) WHEN ((((t2.c0)AND(t0.c0)))AND(t0.c0)) THEN CAST(t2.c0 AS REAL) END) IS TRUE)  as count FROM t2, vt1 FULL OUTER JOIN t0 ON ((((vt1.c1)%(t0.c0))) NOT NULL) ORDER BY CASE WHEN '-1042950806' THEN '' WHEN ((t0.c0)&(t0.c0)) THEN CASE vt1.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c71 END WHEN ((t0.c0)<=(t2.c0)) THEN ((t2.c0)AND(vt1.c0)) ELSE vt1.c1 END DESC  NULLS FIRST, ((((NULL) BETWEEN (t0.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST, (((((1.319256945E9 IN (t2.c71)))OR(x'' COLLATE BINARY)))OR(((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM t2, vt1 FULL OUTER JOIN t0 ON ((((vt1.c1)%(t0.c0))) NOT NULL) WHERE (CASE WHEN t2.c71 THEN ((((((((t2.c71)AND(t0.c0)))AND(vt1.c1)))AND(x'6f10')))AND(t2.c71)) WHEN 1510806787 THEN (NOT (t2.c0)) WHEN ((((t2.c0)AND(t0.c0)))AND(t0.c0)) THEN CAST(t2.c0 AS REAL) END) ORDER BY CASE WHEN '-1042950806' THEN '' WHEN ((t0.c0)&(t0.c0)) THEN CASE vt1.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c71 END WHEN ((t0.c0)<=(t2.c0)) THEN ((t2.c0)AND(vt1.c0)) ELSE vt1.c1 END DESC  NULLS FIRST, ((((NULL) BETWEEN (t0.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST, (((((1.319256945E9 IN (t2.c71)))OR(x'' COLLATE BINARY)))OR(((vt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c71 THEN ((((((((t2.c71)AND(t0.c0)))AND(vt1.c1)))AND(x'6f10')))AND(t2.c71)) WHEN 1510806787 THEN (NOT (t2.c0)) WHEN ((((t2.c0)AND(t0.c0)))AND(t0.c0)) THEN CAST(t2.c0 AS REAL) END) IS TRUE)  as count FROM t2, vt1 FULL OUTER JOIN t0 ON ((((vt1.c1)%(t0.c0))) NOT NULL) ORDER BY CASE WHEN '-1042950806' THEN '' WHEN ((t0.c0)&(t0.c0)) THEN CASE vt1.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c71 END WHEN ((t0.c0)<=(t2.c0)) THEN ((t2.c0)AND(vt1.c0)) ELSE vt1.c1 END DESC  NULLS FIRST, ((((NULL) BETWEEN (t0.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST, (((((1.319256945E9 IN (t2.c71)))OR(x'' COLLATE BINARY)))OR(((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM t2, vt1 FULL OUTER JOIN t0 ON ((((vt1.c1)%(t0.c0))) NOT NULL) WHERE (CASE WHEN t2.c71 THEN ((((((((t2.c71)AND(t0.c0)))AND(vt1.c1)))AND(x'6f10')))AND(t2.c71)) WHEN 1510806787 THEN (NOT (t2.c0)) WHEN ((((t2.c0)AND(t0.c0)))AND(t0.c0)) THEN CAST(t2.c0 AS REAL) END) ORDER BY CASE WHEN '-1042950806' THEN '' WHEN ((t0.c0)&(t0.c0)) THEN CASE vt1.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c71 END WHEN ((t0.c0)<=(t2.c0)) THEN ((t2.c0)AND(vt1.c0)) ELSE vt1.c1 END DESC  NULLS FIRST, ((((NULL) BETWEEN (t0.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST, (((((1.319256945E9 IN (t2.c71)))OR(x'' COLLATE BINARY)))OR(((vt1.c0) IS TRUE)));
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON ((LTRIM(t0.c0)) NOT BETWEEN (CASE t2.c71  WHEN t0.c0 THEN t2.c0 END) AND (t2.c0)) WHERE (json_insert(json_patch(t2.c71, t2.c71), t0.c0 COLLATE RTRIM, ((t2.c0)>>(t2.c71)))) ORDER BY ((JULIANDAY(t2.c0, t0.c0, t0.c0))<<(0.4823679706740436)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(json_patch(t2.c71, t2.c71), t0.c0 COLLATE RTRIM, ((t2.c0)>>(t2.c71)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((LTRIM(t0.c0)) NOT BETWEEN (CASE t2.c71  WHEN t0.c0 THEN t2.c0 END) AND (t2.c0)) ORDER BY ((JULIANDAY(t2.c0, t0.c0, t0.c0))<<(0.4823679706740436)) ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON ((LTRIM(t0.c0)) NOT BETWEEN (CASE t2.c71  WHEN t0.c0 THEN t2.c0 END) AND (t2.c0)) WHERE (json_insert(json_patch(t2.c71, t2.c71), t0.c0 COLLATE RTRIM, ((t2.c0)>>(t2.c71)))) ORDER BY ((JULIANDAY(t2.c0, t0.c0, t0.c0))<<(0.4823679706740436)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(json_patch(t2.c71, t2.c71), t0.c0 COLLATE RTRIM, ((t2.c0)>>(t2.c71)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((LTRIM(t0.c0)) NOT BETWEEN (CASE t2.c71  WHEN t0.c0 THEN t2.c0 END) AND (t2.c0)) ORDER BY ((JULIANDAY(t2.c0, t0.c0, t0.c0))<<(0.4823679706740436)) ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN t2 ON ((LTRIM(t0.c0)) NOT BETWEEN (CASE t2.c71  WHEN t0.c0 THEN t2.c0 END) AND (t2.c0)) WHERE (json_insert(json_patch(t2.c71, t2.c71), t0.c0 COLLATE RTRIM, ((t2.c0)>>(t2.c71)))) ORDER BY ((JULIANDAY(t2.c0, t0.c0, t0.c0))<<(0.4823679706740436)) ASC;
SELECT ALL * FROM t2, vt1 WHERE (x'1d79f863');
SELECT SUM(count) FROM (SELECT ALL ((x'1d79f863') IS TRUE)  as count FROM t2, vt1);
SELECT ALL * FROM t2, vt1 WHERE (x'1d79f863');
SELECT SUM(count) FROM (SELECT ALL ((x'1d79f863') IS TRUE)  as count FROM t2, vt1);
SELECT ALL * FROM t2, vt1 WHERE (x'1d79f863');
SELECT ALL * FROM t0 WHERE (CASE WHEN ((0x628dd364)AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c0)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN NULL ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0x628dd364)AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c0)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN NULL ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((0x628dd364)AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c0)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN NULL ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0x628dd364)AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c0)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN NULL ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((0x628dd364)AND(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)>=(t0.c0)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN NULL ELSE t0.c0 END);
SELECT ALL COUNT(*) FROM t2 WHERE ((- (t2.c0 COLLATE NOCASE))) ORDER BY ((((t2.c0)LIKE(t2.c0)))IS(((t2.c71) NOT BETWEEN (t2.c0) AND (t2.c0))))  NULLS LAST, '0x_)_yj' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0)LIKE(t2.c0)))IS(((t2.c71) NOT BETWEEN (t2.c0) AND (t2.c0))))  NULLS LAST, '0x_)_yj' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2 WHERE ((- (t2.c0 COLLATE NOCASE))) ORDER BY ((((t2.c0)LIKE(t2.c0)))IS(((t2.c71) NOT BETWEEN (t2.c0) AND (t2.c0))))  NULLS LAST, '0x_)_yj' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t2 ORDER BY ((((t2.c0)LIKE(t2.c0)))IS(((t2.c71) NOT BETWEEN (t2.c0) AND (t2.c0))))  NULLS LAST, '0x_)_yj' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2 WHERE ((- (t2.c0 COLLATE NOCASE))) ORDER BY ((((t2.c0)LIKE(t2.c0)))IS(((t2.c71) NOT BETWEEN (t2.c0) AND (t2.c0))))  NULLS LAST, '0x_)_yj' DESC  NULLS FIRST;
SELECT ALL * FROM t0, t2 RIGHT OUTER JOIN vt1 ON CASE WHEN t2.c0 THEN CAST(x'' AS BLOB) END WHERE (((((((((((((NULL)OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 END)))AND(((-4.36199102E8)<>(t2.c71)))))OR(((vt1.c1)IS NOT(0xffffffffe081d478)))))AND(((t0.c0)>>(t0.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) ISNULL)))) ORDER BY CAST(((t2.c71) NOT BETWEEN (t0.c0) AND (t2.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 END)))AND(((-4.36199102E8)<>(t2.c71)))))OR(((vt1.c1)IS NOT(0Xffffffffe081d478)))))AND(((t0.c0)>>(t0.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt1 ON CASE WHEN t2.c0 THEN CAST(x'' AS BLOB) END ORDER BY CAST(((t2.c71) NOT BETWEEN (t0.c0) AND (t2.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM t0, t2 RIGHT OUTER JOIN vt1 ON CASE WHEN t2.c0 THEN CAST(x'' AS BLOB) END WHERE (((((((((((((NULL)OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 END)))AND(((-4.36199102E8)<>(t2.c71)))))OR(((vt1.c1)IS NOT(0xffffffffe081d478)))))AND(((t0.c0)>>(t0.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) ISNULL)))) ORDER BY CAST(((t2.c71) NOT BETWEEN (t0.c0) AND (t2.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 END)))AND(((-4.36199102E8)<>(t2.c71)))))OR(((vt1.c1)IS NOT(0Xffffffffe081d478)))))AND(((t0.c0)>>(t0.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt1 ON CASE WHEN t2.c0 THEN CAST(x'' AS BLOB) END ORDER BY CAST(((t2.c71) NOT BETWEEN (t0.c0) AND (t2.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM t0, t2 RIGHT OUTER JOIN vt1 ON CASE WHEN t2.c0 THEN CAST(x'' AS BLOB) END WHERE (((((((((((((NULL)OR(CASE vt1.c0  WHEN t2.c0 THEN vt1.c0 END)))AND(((-4.36199102E8)<>(t2.c71)))))OR(((vt1.c1)IS NOT(0xffffffffe081d478)))))AND(((t0.c0)>>(t0.c0)))))AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) ISNULL)))) ORDER BY CAST(((t2.c71) NOT BETWEEN (t0.c0) AND (t2.c0)) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt1, t0, t2 WHERE (((((((vt1.c1)%(t2.c71)))OR((NOT (vt1.c0)))))OR(CASE WHEN t2.c71 THEN vt1.c1 WHEN vt1.c0 THEN t2.c0 WHEN t0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)%(t2.c71)))OR((NOT (vt1.c0)))))OR(CASE WHEN t2.c71 THEN vt1.c1 WHEN vt1.c0 THEN t2.c0 WHEN t0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL * FROM vt1, t0, t2 WHERE (((((((vt1.c1)%(t2.c71)))OR((NOT (vt1.c0)))))OR(CASE WHEN t2.c71 THEN vt1.c1 WHEN vt1.c0 THEN t2.c0 WHEN t0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)%(t2.c71)))OR((NOT (vt1.c0)))))OR(CASE WHEN t2.c71 THEN vt1.c1 WHEN vt1.c0 THEN t2.c0 WHEN t0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL * FROM vt1, t0, t2 WHERE (((((((vt1.c1)%(t2.c71)))OR((NOT (vt1.c0)))))OR(CASE WHEN t2.c71 THEN vt1.c1 WHEN vt1.c0 THEN t2.c0 WHEN t0.c0 THEN vt1.c1 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (~ (vt1.c0)), ((vt1.c1)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (vt1.c0)), ((vt1.c1)-(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (~ (vt1.c0)), ((vt1.c1)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (vt1.c0)), ((vt1.c1)-(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (~ (vt1.c0)), ((vt1.c1)-(vt1.c0))));
SELECT ALL * FROM t0, vt1, t2 WHERE (((CAST(0Xffffffffd31f38dc AS TEXT)) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(0Xffffffffd31f38dc AS TEXT)) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (t2.c0))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL * FROM t0, vt1, t2 WHERE (((CAST(0Xffffffffd31f38dc AS TEXT)) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (t2.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(0Xffffffffd31f38dc AS TEXT)) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (t2.c0))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL * FROM t0, vt1, t2 WHERE (((CAST(0Xffffffffd31f38dc AS TEXT)) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (t2.c0)));
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0)AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0)AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0)AND(vt1.c1)) COLLATE NOCASE);
SELECT * FROM t0, vt1, t2 WHERE ((- (((t2.c0)<>('-981507491'))))) ORDER BY ((~ (vt1.c0)) IN ())  NULLS FIRST, CASE WHEN CASE WHEN 'W9xAU' THEN t0.c0 ELSE vt1.c0 END THEN ((x'') ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t2.c0)<>('-981507491'))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY ((~ (vt1.c0)) IN ())  NULLS FIRST, CASE WHEN CASE WHEN 'W9xAU' THEN t0.c0 ELSE vt1.c0 END THEN ((x'') ISNULL) END);
SELECT * FROM t0, vt1, t2 WHERE ((- (((t2.c0)<>('-981507491'))))) ORDER BY ((~ (vt1.c0)) IN ())  NULLS FIRST, CASE WHEN CASE WHEN 'W9xAU' THEN t0.c0 ELSE vt1.c0 END THEN ((x'') ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t2.c0)<>('-981507491'))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY ((~ (vt1.c0)) IN ())  NULLS FIRST, CASE WHEN CASE WHEN 'W9xAU' THEN t0.c0 ELSE vt1.c0 END THEN ((x'') ISNULL) END);
SELECT * FROM t0, vt1, t2 WHERE ((- (((t2.c0)<>('-981507491'))))) ORDER BY ((~ (vt1.c0)) IN ())  NULLS FIRST, CASE WHEN CASE WHEN 'W9xAU' THEN t0.c0 ELSE vt1.c0 END THEN ((x'') ISNULL) END;
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((vt1.c1, vt1.c1, t2.c71))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END)))OR(((t2.c71)LIKE(t2.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((vt1.c1, vt1.c1, t2.c71))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END)))OR(((t2.c71)LIKE(t2.c0))))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((vt1.c1, vt1.c1, t2.c71))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END)))OR(((t2.c71)LIKE(t2.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((vt1.c1, vt1.c1, t2.c71))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END)))OR(((t2.c71)LIKE(t2.c0))))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((t2.c0, t0.c0, t2.c0)) AND ((vt1.c1, vt1.c1, t2.c71))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END)))OR(((t2.c71)LIKE(t2.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM t0 WHERE ((('-721430562' IN ()) IN (MAX(t0.c0, t0.c0, t0.c0, t0.c0), -1746282844)));
SELECT SUM(count) FROM (SELECT (((('-721430562' IN ()) IN (MAX(t0.c0, t0.c0, t0.c0, t0.c0), -1746282844))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('-721430562' IN ()) IN (MAX(t0.c0, t0.c0, t0.c0, t0.c0), -1746282844)));
SELECT SUM(count) FROM (SELECT (((('-721430562' IN ()) IN (MAX(t0.c0, t0.c0, t0.c0, t0.c0), -1746282844))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('-721430562' IN ()) IN (MAX(t0.c0, t0.c0, t0.c0, t0.c0), -1746282844)));
SELECT * FROM t2, vt1, t0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END) IS TRUE)) ORDER BY ((((((((((t2.c71)IS NOT(t2.c0)))AND(0.004943370412386572)))OR(((t0.c0) NOTNULL))))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(NULL)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END) IS TRUE)) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY ((((((((((t2.c71)IS NOT(t2.c0)))AND(0.004943370412386572)))OR(((t0.c0) NOTNULL))))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(NULL)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c1 END)));
SELECT * FROM t2, vt1, t0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END) IS TRUE)) ORDER BY ((((((((((t2.c71)IS NOT(t2.c0)))AND(0.004943370412386572)))OR(((t0.c0) NOTNULL))))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(NULL)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END) IS TRUE)) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY ((((((((((t2.c71)IS NOT(t2.c0)))AND(0.004943370412386572)))OR(((t0.c0) NOTNULL))))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(NULL)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c1 END)));
SELECT * FROM t2, vt1, t0 WHERE (((CASE vt1.c0  WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END) IS TRUE)) ORDER BY ((((((((((t2.c71)IS NOT(t2.c0)))AND(0.004943370412386572)))OR(((t0.c0) NOTNULL))))AND(((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))OR(NULL)))AND(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c1 END));
SELECT ALL * FROM t0 WHERE (((NOT ('')) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT ('')) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NOT ('')) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT ('')) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NOT ('')) IN ()));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((((NOT (vt1.c0)))<<(((t2.c0) NOT NULL)))) ORDER BY CAST((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<<(((t2.c0) NOT NULL)))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY CAST((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) AS INTEGER));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((((NOT (vt1.c0)))<<(((t2.c0) NOT NULL)))) ORDER BY CAST((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<<(((t2.c0) NOT NULL)))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY CAST((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) AS INTEGER));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE ((((NOT (vt1.c0)))<<(((t2.c0) NOT NULL)))) ORDER BY CAST((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) AS INTEGER);
SELECT COUNT(*) FROM vt1, t0 WHERE (PRINTF(((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))) ORDER BY rtreenode(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c1 THEN t0.c0 END, (vt1.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY rtreenode(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c1 THEN t0.c0 END, (vt1.c0 IN ())) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (PRINTF(((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))) ORDER BY rtreenode(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c1 THEN t0.c0 END, (vt1.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY rtreenode(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c1 THEN t0.c0 END, (vt1.c0 IN ())) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (PRINTF(((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))) ORDER BY rtreenode(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN vt1.c1 THEN t0.c0 END, (vt1.c0 IN ())) ASC;
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN t2 ON ((vt1.c1) NOTNULL) COLLATE RTRIM WHERE (((NULL) BETWEEN (LIKELY(vt1.c0)) AND ((t2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (LIKELY(vt1.c0)) AND ((t2.c0 IN ())))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON ((vt1.c1) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN t2 ON ((vt1.c1) NOTNULL) COLLATE RTRIM WHERE (((NULL) BETWEEN (LIKELY(vt1.c0)) AND ((t2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (LIKELY(vt1.c0)) AND ((t2.c0 IN ())))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN t2 ON ((vt1.c1) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM vt1, t0 LEFT OUTER JOIN t2 ON ((vt1.c1) NOTNULL) COLLATE RTRIM WHERE (((NULL) BETWEEN (LIKELY(vt1.c0)) AND ((t2.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CAST(((((vt1.c1)OR(vt1.c1)))AND(t2.c71)) AS NUMERIC)) ORDER BY (((((vt1.c1, x'', t2.c0))<=((t0.c0, vt1.c0, '352841002'))))IS(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)OR(vt1.c1)))AND(t2.c71)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((((vt1.c1, x'', t2.c0))<=((t0.c0, vt1.c0, '352841002'))))IS(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CAST(((((vt1.c1)OR(vt1.c1)))AND(t2.c71)) AS NUMERIC)) ORDER BY (((((vt1.c1, x'', t2.c0))<=((t0.c0, vt1.c0, '352841002'))))IS(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)OR(vt1.c1)))AND(t2.c71)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((((vt1.c1, x'', t2.c0))<=((t0.c0, vt1.c0, '352841002'))))IS(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CAST(((((vt1.c1)OR(vt1.c1)))AND(t2.c71)) AS NUMERIC)) ORDER BY (((((vt1.c1, x'', t2.c0))<=((t0.c0, vt1.c0, '352841002'))))IS(NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))IS(((t0.c0)>=(t0.c0))))) ORDER BY (((((((t0.c0))>(('-1042950806'))))OR(((t0.c0)-(t0.c0)))))AND((('{d>oZ[')!=(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER))IS(((t0.c0)>=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c0))>(('-1042950806'))))OR(((t0.c0)-(t0.c0)))))AND((('{d>oZ[')<>(t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))IS(((t0.c0)>=(t0.c0))))) ORDER BY (((((((t0.c0))>(('-1042950806'))))OR(((t0.c0)-(t0.c0)))))AND((('{d>oZ[')!=(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER))IS(((t0.c0)>=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c0))>(('-1042950806'))))OR(((t0.c0)-(t0.c0)))))AND((('{d>oZ[')<>(t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER))IS(((t0.c0)>=(t0.c0))))) ORDER BY (((((((t0.c0))>(('-1042950806'))))OR(((t0.c0)-(t0.c0)))))AND((('{d>oZ[')!=(t0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) BETWEEN (0.14675008942859435) AND (vt1.c1))) BETWEEN (vt1.c1 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (0.14675008942859435) AND (vt1.c1))) BETWEEN (vt1.c1 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) BETWEEN (0.14675008942859435) AND (vt1.c1))) BETWEEN (vt1.c1 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (0.14675008942859435) AND (vt1.c1))) BETWEEN (vt1.c1 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) BETWEEN (0.14675008942859435) AND (vt1.c1))) BETWEEN (vt1.c1 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN t2 ON CASE WHEN t2.c0 THEN t0.c0 END COLLATE RTRIM WHERE (((t0.c0)||(((vt1.c0)<=(vt1.c1))))) ORDER BY (((vt1.c1, 0.6854031445197679, t2.c0, t2.c0, vt1.c0)) NOT BETWEEN ((x'', t2.c0 COLLATE RTRIM, ((t2.c71)==(t2.c71)), (+ (t2.c0)), LIKELY(t2.c0))) AND (((-499072668 IN ()), ((vt1.c1) NOTNULL), ((t2.c0) IS TRUE), ((vt1.c0) BETWEEN (0.804434264817308) AND (t2.c0)), (0.22190660675671592 IN (t2.c71))))), CAST(0.6481237572050779 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)||(((vt1.c0)<=(vt1.c1))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN t2 ON CASE WHEN t2.c0 THEN t0.c0 END COLLATE RTRIM ORDER BY (((vt1.c1, 0.6854031445197679, t2.c0, t2.c0, vt1.c0)) NOT BETWEEN ((x'', t2.c0 COLLATE RTRIM, ((t2.c71)=(t2.c71)), (+ (t2.c0)), LIKELY(t2.c0))) AND (((-499072668 IN ()), ((vt1.c1) NOTNULL), ((t2.c0) IS TRUE), ((vt1.c0) BETWEEN (0.804434264817308) AND (t2.c0)), (0.22190660675671592 IN (t2.c71))))), CAST(0.6481237572050779 AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN t2 ON CASE WHEN t2.c0 THEN t0.c0 END COLLATE RTRIM WHERE (((t0.c0)||(((vt1.c0)<=(vt1.c1))))) ORDER BY (((vt1.c1, 0.6854031445197679, t2.c0, t2.c0, vt1.c0)) NOT BETWEEN ((x'', t2.c0 COLLATE RTRIM, ((t2.c71)==(t2.c71)), (+ (t2.c0)), LIKELY(t2.c0))) AND (((-499072668 IN ()), ((vt1.c1) NOTNULL), ((t2.c0) IS TRUE), ((vt1.c0) BETWEEN (0.804434264817308) AND (t2.c0)), (0.22190660675671592 IN (t2.c71))))), CAST(0.6481237572050779 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)||(((vt1.c0)<=(vt1.c1))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN t2 ON CASE WHEN t2.c0 THEN t0.c0 END COLLATE RTRIM ORDER BY (((vt1.c1, 0.6854031445197679, t2.c0, t2.c0, vt1.c0)) NOT BETWEEN ((x'', t2.c0 COLLATE RTRIM, ((t2.c71)=(t2.c71)), (+ (t2.c0)), LIKELY(t2.c0))) AND (((-499072668 IN ()), ((vt1.c1) NOTNULL), ((t2.c0) IS TRUE), ((vt1.c0) BETWEEN (0.804434264817308) AND (t2.c0)), (0.22190660675671592 IN (t2.c71))))), CAST(0.6481237572050779 AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN t2 ON CASE WHEN t2.c0 THEN t0.c0 END COLLATE RTRIM WHERE (((t0.c0)||(((vt1.c0)<=(vt1.c1))))) ORDER BY (((vt1.c1, 0.6854031445197679, t2.c0, t2.c0, vt1.c0)) NOT BETWEEN ((x'', t2.c0 COLLATE RTRIM, ((t2.c71)==(t2.c71)), (+ (t2.c0)), LIKELY(t2.c0))) AND (((-499072668 IN ()), ((vt1.c1) NOTNULL), ((t2.c0) IS TRUE), ((vt1.c0) BETWEEN (0.804434264817308) AND (t2.c0)), (0.22190660675671592 IN (t2.c71))))), CAST(0.6481237572050779 AS TEXT) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON CASE ((t0.c0)>=(vt1.c0))  WHEN (((vt1.c0)) NOT BETWEEN ((t2.c0)) AND ((vt1.c1))) THEN UPPER(vt1.c1) ELSE COALESCE(t2.c71, t0.c0) END WHERE (((((t0.c0) BETWEEN (vt1.c1) AND (t2.c0))) BETWEEN (((1.845562475E9)GLOB(vt1.c0))) AND (CAST(t2.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (vt1.c1) AND (t2.c0))) BETWEEN (((1.845562475E9)GLOB(vt1.c0))) AND (CAST(t2.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON CASE ((t0.c0)>=(vt1.c0))  WHEN (((vt1.c0)) NOT BETWEEN ((t2.c0)) AND ((vt1.c1))) THEN UPPER(vt1.c1) ELSE COALESCE(t2.c71, t0.c0) END);
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON CASE ((t0.c0)>=(vt1.c0))  WHEN (((vt1.c0)) NOT BETWEEN ((t2.c0)) AND ((vt1.c1))) THEN UPPER(vt1.c1) ELSE COALESCE(t2.c71, t0.c0) END WHERE (((((t0.c0) BETWEEN (vt1.c1) AND (t2.c0))) BETWEEN (((1.845562475E9)GLOB(vt1.c0))) AND (CAST(t2.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (vt1.c1) AND (t2.c0))) BETWEEN (((1.845562475E9)GLOB(vt1.c0))) AND (CAST(t2.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON CASE ((t0.c0)>=(vt1.c0))  WHEN (((vt1.c0)) NOT BETWEEN ((t2.c0)) AND ((vt1.c1))) THEN UPPER(vt1.c1) ELSE COALESCE(t2.c71, t0.c0) END);
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON CASE ((t0.c0)>=(vt1.c0))  WHEN (((vt1.c0)) NOT BETWEEN ((t2.c0)) AND ((vt1.c1))) THEN UPPER(vt1.c1) ELSE COALESCE(t2.c71, t0.c0) END WHERE (((((t0.c0) BETWEEN (vt1.c1) AND (t2.c0))) BETWEEN (((1.845562475E9)GLOB(vt1.c0))) AND (CAST(t2.c0 AS BLOB))));
SELECT COUNT(*) FROM t2 WHERE (CASE ((((t2.c71)OR(t2.c0)))AND(t2.c0))  WHEN ((((t2.c71)AND(t2.c0)))AND(t2.c0)) THEN (((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t2.c71)OR(t2.c0)))AND(t2.c0))  WHEN ((((t2.c71)AND(t2.c0)))AND(t2.c0)) THEN (((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) END) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (CASE ((((t2.c71)OR(t2.c0)))AND(t2.c0))  WHEN ((((t2.c71)AND(t2.c0)))AND(t2.c0)) THEN (((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t2.c71)OR(t2.c0)))AND(t2.c0))  WHEN ((((t2.c71)AND(t2.c0)))AND(t2.c0)) THEN (((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) END) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (CASE ((((t2.c71)OR(t2.c0)))AND(t2.c0))  WHEN ((((t2.c71)AND(t2.c0)))AND(t2.c0)) THEN (((t2.c0)) BETWEEN ((t2.c0)) AND ((t2.c71))) END);
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt1 ON NULL WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt1 ON NULL);
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt1 ON NULL WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM t2 FULL OUTER JOIN vt1 ON NULL);
SELECT COUNT(*) FROM t2 FULL OUTER JOIN vt1 ON NULL WHERE (CAST(NULL AS BLOB));
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((('/ 慁m|0b\r')) NOT BETWEEN ((CASE WHEN -9223372036854775808 THEN vt1.c0 END)) AND ((((vt1.c0)|(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('/ 慁m|0b\r')) NOT BETWEEN ((CASE WHEN -9223372036854775808 THEN vt1.c0 END)) AND ((((vt1.c0)|(t2.c0)))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((('/ 慁m|0b\r')) NOT BETWEEN ((CASE WHEN -9223372036854775808 THEN vt1.c0 END)) AND ((((vt1.c0)|(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('/ 慁m|0b\r')) NOT BETWEEN ((CASE WHEN -9223372036854775808 THEN vt1.c0 END)) AND ((((vt1.c0)|(t2.c0)))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((('/ 慁m|0b\r')) NOT BETWEEN ((CASE WHEN -9223372036854775808 THEN vt1.c0 END)) AND ((((vt1.c0)|(t2.c0))))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0))) ORDER BY ((((t0.c0 IN (t0.c0)), ((t0.c0)&(t0.c0)), LIKELY(t0.c0)))<=(('FALSE', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ASC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 IN (t0.c0)), ((t0.c0)&(t0.c0)), LIKELY(t0.c0)))<=(('FALSE', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ASC  NULLS FIRST, t0.c0  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0))) ORDER BY ((((t0.c0 IN (t0.c0)), ((t0.c0)&(t0.c0)), LIKELY(t0.c0)))<=(('FALSE', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ASC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 IN (t0.c0)), ((t0.c0)&(t0.c0)), LIKELY(t0.c0)))<=(('FALSE', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ASC  NULLS FIRST, t0.c0  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(t0.c0))) ORDER BY ((((t0.c0 IN (t0.c0)), ((t0.c0)&(t0.c0)), LIKELY(t0.c0)))<=(('FALSE', ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ASC  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE (((((vt1.c0)%(t2.c71))) BETWEEN (vt1.c0) AND ((NOT (vt1.c1))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c71)))%((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(t2.c71))) BETWEEN (vt1.c0) AND ((NOT (vt1.c1))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c71)))%((- (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE (((((vt1.c0)%(t2.c71))) BETWEEN (vt1.c0) AND ((NOT (vt1.c1))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c71)))%((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(t2.c71))) BETWEEN (vt1.c0) AND ((NOT (vt1.c1))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c71)))%((- (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE (((((vt1.c0)%(t2.c71))) BETWEEN (vt1.c0) AND ((NOT (vt1.c1))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c71)))%((- (vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt1, t2 FULL OUTER JOIN t0 ON t0.c0 WHERE (CAST(((vt1.c1)-(t2.c0)) AS REAL)) ORDER BY t2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)-(t2.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t2 FULL OUTER JOIN t0 ON t0.c0 ORDER BY t2.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, t2 FULL OUTER JOIN t0 ON t0.c0 WHERE (CAST(((vt1.c1)-(t2.c0)) AS REAL)) ORDER BY t2.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)-(t2.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t2 FULL OUTER JOIN t0 ON t0.c0 ORDER BY t2.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, t2 FULL OUTER JOIN t0 ON t0.c0 WHERE (CAST(((vt1.c1)-(t2.c0)) AS REAL)) ORDER BY t2.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (json_valid(MIN(t0.c0, t0.c0))) ORDER BY (GLOB(vt1.c0, vt1.c0) IN ((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((json_valid(MIN(t0.c0, t0.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY (GLOB(vt1.c0, vt1.c0) IN ((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (json_valid(MIN(t0.c0, t0.c0))) ORDER BY (GLOB(vt1.c0, vt1.c0) IN ((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((json_valid(MIN(t0.c0, t0.c0))) IS TRUE)  as count FROM t0, vt1 ORDER BY (GLOB(vt1.c0, vt1.c0) IN ((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (json_valid(MIN(t0.c0, t0.c0))) ORDER BY (GLOB(vt1.c0, vt1.c0) IN ((vt1.c1 IN ())));
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT NULLIF(vt1.c1, t0.c0));
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY UNLIKELY(DISTINCT NULLIF(vt1.c1, t0.c0)));
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT NULLIF(vt1.c1, t0.c0));
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t0 NATURAL JOIN vt1 ORDER BY UNLIKELY(DISTINCT NULLIF(vt1.c1, t0.c0)));
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END COLLATE RTRIM) ORDER BY UNLIKELY(DISTINCT NULLIF(vt1.c1, t0.c0));
SELECT ALL * FROM vt1, t2 FULL OUTER JOIN t0 ON CAST(((t2.c0)<(vt1.c1)) AS INTEGER) WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)OR(vt1.c0))) AND (ABS(t2.c0)))) ORDER BY t2.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)OR(vt1.c0))) AND (ABS(t2.c0)))) IS TRUE)  as count FROM vt1, t2 FULL OUTER JOIN t0 ON CAST(((t2.c0)<(vt1.c1)) AS INTEGER) ORDER BY t2.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, t2 FULL OUTER JOIN t0 ON CAST(((t2.c0)<(vt1.c1)) AS INTEGER) WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)OR(vt1.c0))) AND (ABS(t2.c0)))) ORDER BY t2.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)OR(vt1.c0))) AND (ABS(t2.c0)))) IS TRUE)  as count FROM vt1, t2 FULL OUTER JOIN t0 ON CAST(((t2.c0)<(vt1.c1)) AS INTEGER) ORDER BY t2.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt1, t2 FULL OUTER JOIN t0 ON CAST(((t2.c0)<(vt1.c1)) AS INTEGER) WHERE (((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0)OR(vt1.c0))) AND (ABS(t2.c0)))) ORDER BY t2.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL)) ORDER BY (((t0.c0)&('E')) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)&('E')) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL)) ORDER BY (((t0.c0)&('E')) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)&('E')) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL)) ORDER BY (((t0.c0)&('E')) IN ()) ASC;
SELECT COUNT(*) FROM t2 WHERE ((+ (CAST(t2.c71 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t2.c71 AS REAL)))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((+ (CAST(t2.c71 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t2.c71 AS REAL)))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((+ (CAST(t2.c71 AS REAL))));
SELECT ALL * FROM t0, t2, vt1 WHERE (((((vt1.c1)>>(t2.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(t2.c0))) IS FALSE)) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE (((((vt1.c1)>>(t2.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>>(t2.c0))) IS FALSE)) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE (((((vt1.c1)>>(t2.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (CASE (t2.c0 IN ())  WHEN t0.c0 COLLATE BINARY THEN ((((t2.c71)AND(t0.c0)))OR(t2.c0)) ELSE ((t2.c71) IS TRUE) END) ORDER BY t2.c71 COLLATE NOCASE, (((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0 COLLATE BINARY, t2.c71, ((t0.c0)-(t2.c71)))) AND (((t0.c0 IN (t2.c71, t0.c0)), ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)), t2.c71 COLLATE NOCASE))), (((((0.13957350329865714)OR(t0.c0)), '-499072668' COLLATE RTRIM, (NOT (t2.c71))))<=((((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)), CAST(t0.c0 AS TEXT), ((t2.c71) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((CASE (t2.c0 IN ())  WHEN t0.c0 COLLATE BINARY THEN ((((t2.c71)AND(t0.c0)))OR(t2.c0)) ELSE ((t2.c71) IS TRUE) END) IS TRUE)  as count FROM t0, t2 ORDER BY t2.c71 COLLATE NOCASE, (((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0 COLLATE BINARY, t2.c71, ((t0.c0)-(t2.c71)))) AND (((t0.c0 IN (t2.c71, t0.c0)), ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)), t2.c71 COLLATE NOCASE))), (((((0.13957350329865714)OR(t0.c0)), '-499072668' COLLATE RTRIM, (NOT (t2.c71))))<=((((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)), CAST(t0.c0 AS TEXT), ((t2.c71) IS TRUE)))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (CASE (t2.c0 IN ())  WHEN t0.c0 COLLATE BINARY THEN ((((t2.c71)AND(t0.c0)))OR(t2.c0)) ELSE ((t2.c71) IS TRUE) END) ORDER BY t2.c71 COLLATE NOCASE, (((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0 COLLATE BINARY, t2.c71, ((t0.c0)-(t2.c71)))) AND (((t0.c0 IN (t2.c71, t0.c0)), ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)), t2.c71 COLLATE NOCASE))), (((((0.13957350329865714)OR(t0.c0)), '-499072668' COLLATE RTRIM, (NOT (t2.c71))))<=((((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)), CAST(t0.c0 AS TEXT), ((t2.c71) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((CASE (t2.c0 IN ())  WHEN t0.c0 COLLATE BINARY THEN ((((t2.c71)AND(t0.c0)))OR(t2.c0)) ELSE ((t2.c71) IS TRUE) END) IS TRUE)  as count FROM t0, t2 ORDER BY t2.c71 COLLATE NOCASE, (((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0 COLLATE BINARY, t2.c71, ((t0.c0)-(t2.c71)))) AND (((t0.c0 IN (t2.c71, t0.c0)), ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)), t2.c71 COLLATE NOCASE))), (((((0.13957350329865714)OR(t0.c0)), '-499072668' COLLATE RTRIM, (NOT (t2.c71))))<=((((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)), CAST(t0.c0 AS TEXT), ((t2.c71) IS TRUE)))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (CASE (t2.c0 IN ())  WHEN t0.c0 COLLATE BINARY THEN ((((t2.c71)AND(t0.c0)))OR(t2.c0)) ELSE ((t2.c71) IS TRUE) END) ORDER BY t2.c71 COLLATE NOCASE, (((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0 COLLATE BINARY, t2.c71, ((t0.c0)-(t2.c71)))) AND (((t0.c0 IN (t2.c71, t0.c0)), ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)), t2.c71 COLLATE NOCASE))), (((((0.13957350329865714)OR(t0.c0)), '-499072668' COLLATE RTRIM, (NOT (t2.c71))))<=((((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)), CAST(t0.c0 AS TEXT), ((t2.c71) IS TRUE))));
SELECT ALL COUNT(*) FROM t2, vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) ORDER BY ('0.6096932526731395' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM t2, vt1 ORDER BY ('0.6096932526731395' IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) ORDER BY ('0.6096932526731395' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM t2, vt1 ORDER BY ('0.6096932526731395' IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) ORDER BY ('0.6096932526731395' IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t2, t0 WHERE ((NOT (t2.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN t2.c71 THEN t0.c0 ELSE vt1.c0 END) NOT NULL)  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c1 COLLATE NOCASE)), ((CAST(vt1.c1 AS BLOB))/(((((vt1.c0)OR('1668076816')))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((CASE WHEN t2.c71 THEN t0.c0 ELSE vt1.c0 END) NOT NULL)  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c1 COLLATE NOCASE)), ((CAST(vt1.c1 AS BLOB))/(((((vt1.c0)OR('1668076816')))AND(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t2, t0 WHERE ((NOT (t2.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN t2.c71 THEN t0.c0 ELSE vt1.c0 END) NOT NULL)  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c1 COLLATE NOCASE)), ((CAST(vt1.c1 AS BLOB))/(((((vt1.c0)OR('1668076816')))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t2.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((CASE WHEN t2.c71 THEN t0.c0 ELSE vt1.c0 END) NOT NULL)  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c1 COLLATE NOCASE)), ((CAST(vt1.c1 AS BLOB))/(((((vt1.c0)OR('1668076816')))AND(vt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t2, t0 WHERE ((NOT (t2.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN t2.c71 THEN t0.c0 ELSE vt1.c0 END) NOT NULL)  NULLS LAST, ((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c1)))OR(vt1.c1))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c1 COLLATE NOCASE)), ((CAST(vt1.c1 AS BLOB))/(((((vt1.c0)OR('1668076816')))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t2 RIGHT OUTER JOIN vt1 ON (NOT ((+ (vt1.c1)))) WHERE ((~ (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 END))) ORDER BY ((((vt1.c0)*('-981507491')))*(CASE WHEN vt1.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 END))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON (NOT ((+ (vt1.c1)))) ORDER BY ((((vt1.c0)*('-981507491')))*(CASE WHEN vt1.c0 THEN NULL END)) ASC  NULLS LAST);
SELECT ALL * FROM t2 RIGHT OUTER JOIN vt1 ON (NOT ((+ (vt1.c1)))) WHERE ((~ (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 END))) ORDER BY ((((vt1.c0)*('-981507491')))*(CASE WHEN vt1.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 END))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON (NOT ((+ (vt1.c1)))) ORDER BY ((((vt1.c0)*('-981507491')))*(CASE WHEN vt1.c0 THEN NULL END)) ASC  NULLS LAST);
SELECT ALL * FROM t2 RIGHT OUTER JOIN vt1 ON (NOT ((+ (vt1.c1)))) WHERE ((~ (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 END))) ORDER BY ((((vt1.c0)*('-981507491')))*(CASE WHEN vt1.c0 THEN NULL END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (UNICODE(0.9730617701737097)) ORDER BY ((vt1.c1)%(vt1.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(0.9730617701737097)) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY ((vt1.c1)%(vt1.c1 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (UNICODE(0.9730617701737097)) ORDER BY ((vt1.c1)%(vt1.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE(0.9730617701737097)) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY ((vt1.c1)%(vt1.c1 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (UNICODE(0.9730617701737097)) ORDER BY ((vt1.c1)%(vt1.c1 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 WHERE (1.255593198E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.255593198E9 COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (1.255593198E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.255593198E9 COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (1.255593198E9 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE RTRIM) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t2, t0 WHERE (((vt1.c0 COLLATE RTRIM)IS(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)IS(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT COUNT(*) FROM vt1, t2, t0 WHERE (((vt1.c0 COLLATE RTRIM)IS(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)IS(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT COUNT(*) FROM vt1, t2, t0 WHERE (((vt1.c0 COLLATE RTRIM)IS(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t2, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE t2.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (((('')<(0Xffffffffecafe246)))AND(((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))OR(t2.c71)))OR(t2.c0)))) ASC  NULLS FIRST, (((vt1.c1, t2.c0, vt1.c0, t2.c71, vt1.c0)) BETWEEN ((((vt1.c1)GLOB(t2.c0)), (t2.c0 IN ()), (t2.c71 IN ()), (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))), ((t2.c0) BETWEEN (t2.c71) AND (vt1.c1)))) AND (((vt1.c1 IN (vt1.c0)), (~ (vt1.c1)), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c0)), CAST(t2.c71 AS REAL), (((t2.c0)) BETWEEN ((vt1.c0)) AND ((x'4bd2')))))), t2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CASE t2.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY (((('')<(0Xffffffffecafe246)))AND(((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))OR(t2.c71)))OR(t2.c0)))) ASC  NULLS FIRST, (((vt1.c1, t2.c0, vt1.c0, t2.c71, vt1.c0)) BETWEEN ((((vt1.c1)GLOB(t2.c0)), (t2.c0 IN ()), (t2.c71 IN ()), (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))), ((t2.c0) BETWEEN (t2.c71) AND (vt1.c1)))) AND (((vt1.c1 IN (vt1.c0)), (~ (vt1.c1)), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c0)), CAST(t2.c71 AS REAL), (((t2.c0)) BETWEEN ((vt1.c0)) AND ((x'4bd2')))))), t2.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE t2.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (((('')<(0Xffffffffecafe246)))AND(((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))OR(t2.c71)))OR(t2.c0)))) ASC  NULLS FIRST, (((vt1.c1, t2.c0, vt1.c0, t2.c71, vt1.c0)) BETWEEN ((((vt1.c1)GLOB(t2.c0)), (t2.c0 IN ()), (t2.c71 IN ()), (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))), ((t2.c0) BETWEEN (t2.c71) AND (vt1.c1)))) AND (((vt1.c1 IN (vt1.c0)), (~ (vt1.c1)), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c0)), CAST(t2.c71 AS REAL), (((t2.c0)) BETWEEN ((vt1.c0)) AND ((x'4bd2')))))), t2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CASE t2.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY (((('')<(0Xffffffffecafe246)))AND(((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))OR(t2.c71)))OR(t2.c0)))) ASC  NULLS FIRST, (((vt1.c1, t2.c0, vt1.c0, t2.c71, vt1.c0)) BETWEEN ((((vt1.c1)GLOB(t2.c0)), (t2.c0 IN ()), (t2.c71 IN ()), (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))), ((t2.c0) BETWEEN (t2.c71) AND (vt1.c1)))) AND (((vt1.c1 IN (vt1.c0)), (~ (vt1.c1)), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c0)), CAST(t2.c71 AS REAL), (((t2.c0)) BETWEEN ((vt1.c0)) AND ((x'4bd2')))))), t2.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE t2.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t2.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (((('')<(0Xffffffffecafe246)))AND(((((((((t2.c0)OR(t2.c71)))OR(t2.c71)))OR(t2.c71)))OR(t2.c0)))) ASC  NULLS FIRST, (((vt1.c1, t2.c0, vt1.c0, t2.c71, vt1.c0)) BETWEEN ((((vt1.c1)GLOB(t2.c0)), (t2.c0 IN ()), (t2.c71 IN ()), (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))), ((t2.c0) BETWEEN (t2.c71) AND (vt1.c1)))) AND (((vt1.c1 IN (vt1.c0)), (~ (vt1.c1)), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t2.c0)), CAST(t2.c71 AS REAL), (((t2.c0)) BETWEEN ((vt1.c0)) AND ((x'4bd2')))))), t2.c0  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((((vt1.c1, vt1.c0, vt1.c1))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((((vt1.c1, vt1.c0, vt1.c1))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((((vt1.c1, vt1.c0, vt1.c1))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((((vt1.c1, vt1.c0, vt1.c1))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 END)) AND (((((vt1.c1, vt1.c0, vt1.c1))==((vt1.c1, vt1.c0, vt1.c0)))))) ASC;
SELECT ALL * FROM t0 CROSS JOIN vt1 ON vt1.c1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((x'') IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((x'') IS FALSE))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON vt1.c1);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON vt1.c1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((x'') IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((x'') IS FALSE))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON vt1.c1);
SELECT ALL * FROM t0 CROSS JOIN vt1 ON vt1.c1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((x'') IS FALSE)))));
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN t2 WHERE (CASE WHEN t2.c71 THEN x'' ELSE t2.c71 END COLLATE RTRIM) ORDER BY ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c71 THEN x'' ELSE t2.c71 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN t2 ORDER BY ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN t2 WHERE (CASE WHEN t2.c71 THEN x'' ELSE t2.c71 END COLLATE RTRIM) ORDER BY ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c71 THEN x'' ELSE t2.c71 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN t2 ORDER BY ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM t0, vt1 NATURAL JOIN t2 WHERE (CASE WHEN t2.c71 THEN x'' ELSE t2.c71 END COLLATE RTRIM) ORDER BY ((((((t0.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) DESC;
SELECT COUNT(*) FROM vt1, t2 WHERE ((((vt1.c0 COLLATE BINARY))=(((((vt1.c0)) BETWEEN ((t2.c71)) AND ((vt1.c1))))))) ORDER BY ((((((vt1.c0)+(t2.c71)))AND(((t2.c71)LIKE(t2.c71)))))AND((((t2.c71, vt1.c0, vt1.c1)) BETWEEN ((t2.c0, 0.5394416690200257, t2.c0)) AND ((vt1.c0, vt1.c0, 1.945502548E9))))) ASC  NULLS FIRST, CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END DESC  NULLS LAST, ((((t2.c0)GLOB(t2.c0)))OR(((t2.c71)>(-857736751))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE BINARY))=(((((vt1.c0)) BETWEEN ((t2.c71)) AND ((vt1.c1))))))) IS TRUE)  as count FROM vt1, t2 ORDER BY ((((((vt1.c0)+(t2.c71)))AND(((t2.c71)LIKE(t2.c71)))))AND((((t2.c71, vt1.c0, vt1.c1)) BETWEEN ((t2.c0, 0.5394416690200257, t2.c0)) AND ((vt1.c0, vt1.c0, 1.945502548E9))))) ASC  NULLS FIRST, CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END DESC  NULLS LAST, ((((t2.c0)GLOB(t2.c0)))OR(((t2.c71)>(-857736751)))));
SELECT COUNT(*) FROM vt1, t2 WHERE ((((vt1.c0 COLLATE BINARY))=(((((vt1.c0)) BETWEEN ((t2.c71)) AND ((vt1.c1))))))) ORDER BY ((((((vt1.c0)+(t2.c71)))AND(((t2.c71)LIKE(t2.c71)))))AND((((t2.c71, vt1.c0, vt1.c1)) BETWEEN ((t2.c0, 0.5394416690200257, t2.c0)) AND ((vt1.c0, vt1.c0, 1.945502548E9))))) ASC  NULLS FIRST, CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END DESC  NULLS LAST, ((((t2.c0)GLOB(t2.c0)))OR(((t2.c71)>(-857736751))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE BINARY))=(((((vt1.c0)) BETWEEN ((t2.c71)) AND ((vt1.c1))))))) IS TRUE)  as count FROM vt1, t2 ORDER BY ((((((vt1.c0)+(t2.c71)))AND(((t2.c71)LIKE(t2.c71)))))AND((((t2.c71, vt1.c0, vt1.c1)) BETWEEN ((t2.c0, 0.5394416690200257, t2.c0)) AND ((vt1.c0, vt1.c0, 1.945502548E9))))) ASC  NULLS FIRST, CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END DESC  NULLS LAST, ((((t2.c0)GLOB(t2.c0)))OR(((t2.c71)>(-857736751)))));
SELECT COUNT(*) FROM vt1, t2 WHERE ((((vt1.c0 COLLATE BINARY))=(((((vt1.c0)) BETWEEN ((t2.c71)) AND ((vt1.c1))))))) ORDER BY ((((((vt1.c0)+(t2.c71)))AND(((t2.c71)LIKE(t2.c71)))))AND((((t2.c71, vt1.c0, vt1.c1)) BETWEEN ((t2.c0, 0.5394416690200257, t2.c0)) AND ((vt1.c0, vt1.c0, 1.945502548E9))))) ASC  NULLS FIRST, CASE WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c1 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END DESC  NULLS LAST, ((((t2.c0)GLOB(t2.c0)))OR(((t2.c71)>(-857736751))));
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE (CAST((+ (t0.c0)) AS NUMERIC)) ORDER BY (((((((((t0.c0 IN (vt1.c1)))OR((t2.c0 IN ()))))OR(CASE '3}R3Dd!)'  WHEN t2.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(x''));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY (((((((((t0.c0 IN (vt1.c1)))OR((t2.c0 IN ()))))OR(CASE '3}R3Dd!)'  WHEN t2.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(x'')));
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE (CAST((+ (t0.c0)) AS NUMERIC)) ORDER BY (((((((((t0.c0 IN (vt1.c1)))OR((t2.c0 IN ()))))OR(CASE '3}R3Dd!)'  WHEN t2.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(x''));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY (((((((((t0.c0 IN (vt1.c1)))OR((t2.c0 IN ()))))OR(CASE '3}R3Dd!)'  WHEN t2.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(x'')));
SELECT ALL COUNT(*) FROM t2, vt1, t0 WHERE (CAST((+ (t0.c0)) AS NUMERIC)) ORDER BY (((((((((t0.c0 IN (vt1.c1)))OR((t2.c0 IN ()))))OR(CASE '3}R3Dd!)'  WHEN t2.c0 THEN t0.c0 END)))OR((+ (t0.c0)))))AND(x''));
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (-721430562) ORDER BY ((((0.0672311172806912)<(t2.c71))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-721430562) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((((0.0672311172806912)<(t2.c71))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (-721430562) ORDER BY ((((0.0672311172806912)<(t2.c71))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-721430562) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((((0.0672311172806912)<(t2.c71))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (-721430562) ORDER BY ((((0.0672311172806912)<(t2.c71))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'008e' END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '\Q' THEN t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'008e' END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '\Q' THEN t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'008e' END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '\Q' THEN t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'008e' END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '\Q' THEN t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN x'008e' END) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '\Q' THEN t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC;
SELECT * FROM vt1 WHERE ((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN '2071678768' WHEN vt1.c1 THEN vt1.c1 WHEN 'D1*W&}Sc' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END, CAST(x'eaaf' AS REAL), ((vt1.c1)*(vt1.c0)))) AND (('', CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE RTRIM)))) ORDER BY (((((vt1.c0 IN (vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN '2071678768' WHEN vt1.c1 THEN vt1.c1 WHEN 'D1*W&}Sc' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END, CAST(x'eaaf' AS REAL), ((vt1.c1)*(vt1.c0)))) AND (('', CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN (vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN '2071678768' WHEN vt1.c1 THEN vt1.c1 WHEN 'D1*W&}Sc' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END, CAST(x'eaaf' AS REAL), ((vt1.c1)*(vt1.c0)))) AND (('', CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE RTRIM)))) ORDER BY (((((vt1.c0 IN (vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN '2071678768' WHEN vt1.c1 THEN vt1.c1 WHEN 'D1*W&}Sc' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END, CAST(x'eaaf' AS REAL), ((vt1.c1)*(vt1.c0)))) AND (('', CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN (vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN '2071678768' WHEN vt1.c1 THEN vt1.c1 WHEN 'D1*W&}Sc' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END, CAST(x'eaaf' AS REAL), ((vt1.c1)*(vt1.c0)))) AND (('', CAST(vt1.c0 AS BLOB), vt1.c0 COLLATE RTRIM)))) ORDER BY (((((vt1.c0 IN (vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM t2 WHERE ((NOT ((((0X2c19e705)) NOT BETWEEN ((t2.c71)) AND ((t2.c71)))))) ORDER BY (((t2.c71)LIKE(t2.c0)) IN (SQLITE_COMPILEOPTION_USED(t2.c71))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((0X2c19e705)) NOT BETWEEN ((t2.c71)) AND ((t2.c71)))))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c71)LIKE(t2.c0)) IN (SQLITE_COMPILEOPTION_USED(t2.c71))) DESC);
SELECT ALL * FROM t2 WHERE ((NOT ((((0X2c19e705)) NOT BETWEEN ((t2.c71)) AND ((t2.c71)))))) ORDER BY (((t2.c71)LIKE(t2.c0)) IN (SQLITE_COMPILEOPTION_USED(t2.c71))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((0X2c19e705)) NOT BETWEEN ((t2.c71)) AND ((t2.c71)))))) IS TRUE)  as count FROM t2 ORDER BY (((t2.c71)LIKE(t2.c0)) IN (SQLITE_COMPILEOPTION_USED(t2.c71))) DESC);
SELECT ALL * FROM t2 WHERE ((NOT ((((0X2c19e705)) NOT BETWEEN ((t2.c71)) AND ((t2.c71)))))) ORDER BY (((t2.c71)LIKE(t2.c0)) IN (SQLITE_COMPILEOPTION_USED(t2.c71))) DESC;
SELECT COUNT(*) FROM vt1, t0, t2 WHERE (((CASE WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END)>=((t0.c0 IN ())))) ORDER BY ((((((((((t2.c71)LIKE(NULL)))AND(t0.c0)))AND(CASE WHEN t2.c0 THEN vt1.c0 WHEN t0.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c0 ELSE t0.c0 END)))OR(t2.c71 COLLATE NOCASE)))OR(((t2.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END)>=((t0.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY ((((((((((t2.c71)LIKE(NULL)))AND(t0.c0)))AND(CASE WHEN t2.c0 THEN vt1.c0 WHEN t0.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c0 ELSE t0.c0 END)))OR(t2.c71 COLLATE NOCASE)))OR(((t2.c0) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, t2 WHERE (((CASE WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END)>=((t0.c0 IN ())))) ORDER BY ((((((((((t2.c71)LIKE(NULL)))AND(t0.c0)))AND(CASE WHEN t2.c0 THEN vt1.c0 WHEN t0.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c0 ELSE t0.c0 END)))OR(t2.c71 COLLATE NOCASE)))OR(((t2.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END)>=((t0.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY ((((((((((t2.c71)LIKE(NULL)))AND(t0.c0)))AND(CASE WHEN t2.c0 THEN vt1.c0 WHEN t0.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c0 ELSE t0.c0 END)))OR(t2.c71 COLLATE NOCASE)))OR(((t2.c0) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, t2 WHERE (((CASE WHEN t0.c0 THEN t2.c71 ELSE t2.c71 END)>=((t0.c0 IN ())))) ORDER BY ((((((((((t2.c71)LIKE(NULL)))AND(t0.c0)))AND(CASE WHEN t2.c0 THEN vt1.c0 WHEN t0.c0 THEN t2.c0 WHEN vt1.c1 THEN t2.c0 ELSE t0.c0 END)))OR(t2.c71 COLLATE NOCASE)))OR(((t2.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM t2, t0, vt1 WHERE ((((((t2.c71, t0.c0, vt1.c1))<((t0.c0, t2.c71, t2.c0)))) BETWEEN (t2.c71 COLLATE RTRIM) AND ((vt1.c0 IN (-4.99072668E8)))));
SELECT SUM(count) FROM (SELECT (((((((t2.c71, t0.c0, vt1.c1))<((t0.c0, t2.c71, t2.c0)))) BETWEEN (t2.c71 COLLATE RTRIM) AND ((vt1.c0 IN (-4.99072668E8))))) IS TRUE)  as count FROM t2, t0, vt1 NOT INDEXED);
SELECT ALL * FROM t2, t0, vt1 WHERE ((((((t2.c71, t0.c0, vt1.c1))<((t0.c0, t2.c71, t2.c0)))) BETWEEN (t2.c71 COLLATE RTRIM) AND ((vt1.c0 IN (-4.99072668E8)))));
SELECT SUM(count) FROM (SELECT (((((((t2.c71, t0.c0, vt1.c1))<((t0.c0, t2.c71, t2.c0)))) BETWEEN (t2.c71 COLLATE RTRIM) AND ((vt1.c0 IN (-4.99072668E8))))) IS TRUE)  as count FROM t2, t0, vt1 NOT INDEXED);
SELECT ALL * FROM t2, t0, vt1 WHERE ((((((t2.c71, t0.c0, vt1.c1))<((t0.c0, t2.c71, t2.c0)))) BETWEEN (t2.c71 COLLATE RTRIM) AND ((vt1.c0 IN (-4.99072668E8)))));
SELECT * FROM t0, vt1 NOT INDEXED WHERE (CAST(LTRIM(NULL, t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(NULL, t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 NOT INDEXED WHERE (CAST(LTRIM(NULL, t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LTRIM(NULL, t0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 NOT INDEXED WHERE (CAST(LTRIM(NULL, t0.c0) AS TEXT));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((t2.c0) BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (t2.c0))) AND (t2.c71)));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0) BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (t2.c0))) AND (t2.c71))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((t2.c0) BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (t2.c0))) AND (t2.c71)));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0) BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (t2.c0))) AND (t2.c71))) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((t2.c0) BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (t2.c0))) AND (t2.c71)));
SELECT ALL * FROM vt1, t0 WHERE ((+ (((((t0.c0)OR(vt1.c0)))OR(t0.c0))))) ORDER BY (((~ (t0.c0)))<<(CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)OR(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED ORDER BY (((~ (t0.c0)))<<(CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((+ (((((t0.c0)OR(vt1.c0)))OR(t0.c0))))) ORDER BY (((~ (t0.c0)))<<(CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)OR(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt1, t0 NOT INDEXED ORDER BY (((~ (t0.c0)))<<(CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((+ (((((t0.c0)OR(vt1.c0)))OR(t0.c0))))) ORDER BY (((~ (t0.c0)))<<(CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT ALL * FROM t0, vt1, t2 WHERE ((((TRIM(x'1f4130f5')))>=((((vt1.c1)GLOB(vt1.c1)))))) ORDER BY (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 ELSE '-1' END IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((TRIM(x'1f4130f5')))>=((((vt1.c1)GLOB(vt1.c1)))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 ELSE '-1' END IN ()) ASC);
SELECT ALL * FROM t0, vt1, t2 WHERE ((((TRIM(x'1f4130f5')))>=((((vt1.c1)GLOB(vt1.c1)))))) ORDER BY (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 ELSE '-1' END IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((TRIM(x'1f4130f5')))>=((((vt1.c1)GLOB(vt1.c1)))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 ELSE '-1' END IN ()) ASC);
SELECT ALL * FROM t0, vt1, t2 WHERE ((((TRIM(x'1f4130f5')))>=((((vt1.c1)GLOB(vt1.c1)))))) ORDER BY (CASE t2.c0  WHEN vt1.c1 THEN t2.c71 ELSE '-1' END IN ()) ASC;
SELECT * FROM t0, t2 WHERE ((((((((((- (t2.c0)))AND(CHAR(t2.c0, t2.c0, t0.c0))))AND((- (t2.c71)))))AND(((t2.c71) BETWEEN (t2.c0) AND (0.322911526027719)))))AND(NULL))) ORDER BY (t2.c71 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (t2.c0)))AND(CHAR(t2.c0, t2.c0, t0.c0))))AND((- (t2.c71)))))AND(((t2.c71) BETWEEN (t2.c0) AND (0.322911526027719)))))AND(NULL))) IS TRUE)  as count FROM t0, t2 ORDER BY (t2.c71 COLLATE RTRIM IN ()));
SELECT * FROM t0, t2 WHERE ((((((((((- (t2.c0)))AND(CHAR(t2.c0, t2.c0, t0.c0))))AND((- (t2.c71)))))AND(((t2.c71) BETWEEN (t2.c0) AND (0.322911526027719)))))AND(NULL))) ORDER BY (t2.c71 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (t2.c0)))AND(CHAR(t2.c0, t2.c0, t0.c0))))AND((- (t2.c71)))))AND(((t2.c71) BETWEEN (t2.c0) AND (0.322911526027719)))))AND(NULL))) IS TRUE)  as count FROM t0, t2 ORDER BY (t2.c71 COLLATE RTRIM IN ()));
SELECT * FROM t0, t2 WHERE ((((((((((- (t2.c0)))AND(CHAR(t2.c0, t2.c0, t0.c0))))AND((- (t2.c71)))))AND(((t2.c71) BETWEEN (t2.c0) AND (0.322911526027719)))))AND(NULL))) ORDER BY (t2.c71 COLLATE RTRIM IN ());
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1)<(vt1.c1)) AS BLOB)) ORDER BY CAST((vt1.c1 IN ()) AS BLOB) ASC, CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c0)*(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)<(vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN ()) AS BLOB) ASC, CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c0)*(vt1.c0)) AS TEXT));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1)<(vt1.c1)) AS BLOB)) ORDER BY CAST((vt1.c1 IN ()) AS BLOB) ASC, CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c0)*(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)<(vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN ()) AS BLOB) ASC, CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c0)*(vt1.c0)) AS TEXT));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1)<(vt1.c1)) AS BLOB)) ORDER BY CAST((vt1.c1 IN ()) AS BLOB) ASC, CAST(((vt1.c0)GLOB(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c0)*(vt1.c0)) AS TEXT);
SELECT * FROM t2 WHERE (((t2.c0 IN ()) IN ())) ORDER BY CASE (('.2.,wX\r') NOT BETWEEN (t2.c0) AND (t2.c71))  WHEN CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END THEN t2.c0 COLLATE NOCASE WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END WHEN ((t2.c71)IS NOT(t2.c71)) THEN t2.c71 COLLATE NOCASE ELSE ((t2.c0)|(t2.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0 IN ()) IN ())) IS TRUE)  as count FROM t2 ORDER BY CASE (('.2.,wX\r') NOT BETWEEN (t2.c0) AND (t2.c71))  WHEN CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END THEN t2.c0 COLLATE NOCASE WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END WHEN ((t2.c71)IS NOT(t2.c71)) THEN t2.c71 COLLATE NOCASE ELSE ((t2.c0)|(t2.c0)) END ASC);
SELECT * FROM t2 WHERE (((t2.c0 IN ()) IN ())) ORDER BY CASE (('.2.,wX\r') NOT BETWEEN (t2.c0) AND (t2.c71))  WHEN CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END THEN t2.c0 COLLATE NOCASE WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END WHEN ((t2.c71)IS NOT(t2.c71)) THEN t2.c71 COLLATE NOCASE ELSE ((t2.c0)|(t2.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0 IN ()) IN ())) IS TRUE)  as count FROM t2 ORDER BY CASE (('.2.,wX\r') NOT BETWEEN (t2.c0) AND (t2.c71))  WHEN CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END THEN t2.c0 COLLATE NOCASE WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END WHEN ((t2.c71)IS NOT(t2.c71)) THEN t2.c71 COLLATE NOCASE ELSE ((t2.c0)|(t2.c0)) END ASC);
SELECT * FROM t2 WHERE (((t2.c0 IN ()) IN ())) ORDER BY CASE (('.2.,wX\r') NOT BETWEEN (t2.c0) AND (t2.c71))  WHEN CASE t2.c71  WHEN t2.c71 THEN t2.c0 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END THEN t2.c0 COLLATE NOCASE WHEN ((t2.c0)>(t2.c0)) THEN CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END WHEN ((t2.c71)IS NOT(t2.c71)) THEN t2.c71 COLLATE NOCASE ELSE ((t2.c0)|(t2.c0)) END ASC;
SELECT * FROM t2 WHERE (CASE WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c0)) THEN (('')<<(t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c0)) THEN (('')<<(t2.c71)) END) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c0)) THEN (('')<<(t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c0)) THEN (('')<<(t2.c71)) END) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (CASE WHEN ((t2.c71) BETWEEN (t2.c71) AND (t2.c0)) THEN (('')<<(t2.c71)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((t0.c0)AND(vt1.c1)))OR(vt1.c0))))) ASC  NULLS LAST, ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)>=(((vt1.c1)OR(vt1.c1)))), CASE t0.c0  WHEN (~ (t0.c0)) THEN ((vt1.c1) NOT BETWEEN (x'e0b504b8') AND (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((t0.c0)AND(vt1.c1)))OR(vt1.c0))))) ASC  NULLS LAST, ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)>=(((vt1.c1)OR(vt1.c1)))), CASE t0.c0  WHEN (~ (t0.c0)) THEN ((vt1.c1) NOT BETWEEN (x'e0b504b8') AND (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((t0.c0)AND(vt1.c1)))OR(vt1.c0))))) ASC  NULLS LAST, ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)>=(((vt1.c1)OR(vt1.c1)))), CASE t0.c0  WHEN (~ (t0.c0)) THEN ((vt1.c1) NOT BETWEEN (x'e0b504b8') AND (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((t0.c0)AND(vt1.c1)))OR(vt1.c0))))) ASC  NULLS LAST, ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)>=(((vt1.c1)OR(vt1.c1)))), CASE t0.c0  WHEN (~ (t0.c0)) THEN ((vt1.c1) NOT BETWEEN (x'e0b504b8') AND (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((t0.c0)AND(vt1.c1)))OR(vt1.c0))))) ASC  NULLS LAST, ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)>=(((vt1.c1)OR(vt1.c1)))), CASE t0.c0  WHEN (~ (t0.c0)) THEN ((vt1.c1) NOT BETWEEN (x'e0b504b8') AND (vt1.c1)) END;
SELECT ALL * FROM t2, vt1 FULL OUTER JOIN t0 ON (((((- (t2.c0)))OR(CAST(t2.c71 AS INTEGER))))OR(((t0.c0)<=(vt1.c0)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t2, vt1 FULL OUTER JOIN t0 ON (((((- (t2.c0)))OR(CAST(t2.c71 AS INTEGER))))OR(((t0.c0)<=(vt1.c0)))));
SELECT ALL * FROM t2, vt1 FULL OUTER JOIN t0 ON (((((- (t2.c0)))OR(CAST(t2.c71 AS INTEGER))))OR(((t0.c0)<=(vt1.c0)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t2, vt1 FULL OUTER JOIN t0 ON (((((- (t2.c0)))OR(CAST(t2.c71 AS INTEGER))))OR(((t0.c0)<=(vt1.c0)))));
SELECT ALL * FROM t2, vt1 FULL OUTER JOIN t0 ON (((((- (t2.c0)))OR(CAST(t2.c71 AS INTEGER))))OR(((t0.c0)<=(vt1.c0)))) WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1))))<((((vt1.c1)&(NULL)))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1))))<((((vt1.c1)&(NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1))))<((((vt1.c1)&(NULL)))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1))))<((((vt1.c1)&(NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1))))<((((vt1.c1)&(NULL)))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN t2 ON CASE WHEN ((t0.c0)OR(vt1.c1)) THEN ((t0.c0) NOTNULL) ELSE CAST(vt1.c1 AS NUMERIC) END WHERE (CAST(((t2.c71) BETWEEN (t2.c71) AND ('-1752448093')) AS NUMERIC)) ORDER BY CASE (~ (t0.c0))  WHEN t2.c0 THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t2.c71))) END  NULLS FIRST, t0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c71) BETWEEN (t2.c71) AND ('-1752448093')) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t2 ON CASE WHEN ((t0.c0)OR(vt1.c1)) THEN ((t0.c0) NOTNULL) ELSE CAST(vt1.c1 AS NUMERIC) END ORDER BY CASE (~ (t0.c0))  WHEN t2.c0 THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t2.c71))) END  NULLS FIRST, t0.c0);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN t2 ON CASE WHEN ((t0.c0)OR(vt1.c1)) THEN ((t0.c0) NOTNULL) ELSE CAST(vt1.c1 AS NUMERIC) END WHERE (CAST(((t2.c71) BETWEEN (t2.c71) AND ('-1752448093')) AS NUMERIC)) ORDER BY CASE (~ (t0.c0))  WHEN t2.c0 THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t2.c71))) END  NULLS FIRST, t0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((t2.c71) BETWEEN (t2.c71) AND ('-1752448093')) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t2 ON CASE WHEN ((t0.c0)OR(vt1.c1)) THEN ((t0.c0) NOTNULL) ELSE CAST(vt1.c1 AS NUMERIC) END ORDER BY CASE (~ (t0.c0))  WHEN t2.c0 THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t2.c71))) END  NULLS FIRST, t0.c0);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN t2 ON CASE WHEN ((t0.c0)OR(vt1.c1)) THEN ((t0.c0) NOTNULL) ELSE CAST(vt1.c1 AS NUMERIC) END WHERE (CAST(((t2.c71) BETWEEN (t2.c71) AND ('-1752448093')) AS NUMERIC)) ORDER BY CASE (~ (t0.c0))  WHEN t2.c0 THEN (vt1.c1 IN ()) ELSE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t2.c71))) END  NULLS FIRST, t0.c0;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) IN ())) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) IN ())) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) IN ())) ORDER BY vt1.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c1)|(vt1.c1)) END) ORDER BY ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CAST(x'' AS TEXT) ASC, NULL;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c1)|(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CAST(x'' AS TEXT) ASC, NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c1)|(vt1.c1)) END) ORDER BY ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CAST(x'' AS TEXT) ASC, NULL;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c1)|(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CAST(x'' AS TEXT) ASC, NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END  WHEN vt1.c0 THEN ((vt1.c1)|(vt1.c1)) END) ORDER BY ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, CAST(x'' AS TEXT) ASC, NULL;
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c0) ISNULL))GLOB((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))GLOB((~ (t0.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c0) ISNULL))GLOB((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))GLOB((~ (t0.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c0) ISNULL))GLOB((~ (t0.c0)))));
SELECT * FROM t0, t2, vt1 WHERE ((((vt1.c0))>=((t2.c71))) COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (HEX(t2.c71)) AND (x'4b207ef90eaa'));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((t2.c71))) COLLATE BINARY) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((vt1.c0) BETWEEN (HEX(t2.c71)) AND (x'4b207ef90eaa')));
SELECT * FROM t0, t2, vt1 WHERE ((((vt1.c0))>=((t2.c71))) COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (HEX(t2.c71)) AND (x'4b207ef90eaa'));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((t2.c71))) COLLATE BINARY) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((vt1.c0) BETWEEN (HEX(t2.c71)) AND (x'4b207ef90eaa')));
SELECT * FROM t0, t2, vt1 WHERE ((((vt1.c0))>=((t2.c71))) COLLATE BINARY) ORDER BY ((vt1.c0) BETWEEN (HEX(t2.c71)) AND (x'4b207ef90eaa'));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON HEX(((t0.c0) NOT NULL)) WHERE ((- ((('2071678768')==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((('2071678768')==(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON HEX(((t0.c0) NOT NULL)));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON HEX(((t0.c0) NOT NULL)) WHERE ((- ((('2071678768')==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((('2071678768')==(t0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON HEX(((t0.c0) NOT NULL)));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON HEX(((t0.c0) NOT NULL)) WHERE ((- ((('2071678768')==(t0.c0)))));
SELECT * FROM vt1, t2 WHERE ((((((vt1.c0))<=(('585088509'))))|(0.8514898694660883)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=(('585088509'))))|(0.8514898694660883))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE ((((((vt1.c0))<=(('585088509'))))|(0.8514898694660883)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=(('585088509'))))|(0.8514898694660883))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE ((((((vt1.c0))<=(('585088509'))))|(0.8514898694660883)));
SELECT * FROM t2, t0, vt1 WHERE (((((json_quote(vt1.c1))AND((t0.c0 IN (vt1.c0)))))AND(((t2.c71) ISNULL)))) ORDER BY ((((t0.c0) NOT BETWEEN (0.5218305304221572) AND ('0.13957350329865714'))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(vt1.c1))AND((t0.c0 IN (vt1.c0)))))AND(((t2.c71) ISNULL)))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((((t0.c0) NOT BETWEEN (0.5218305304221572) AND ('0.13957350329865714'))) NOTNULL));
SELECT * FROM t2, t0, vt1 WHERE (((((json_quote(vt1.c1))AND((t0.c0 IN (vt1.c0)))))AND(((t2.c71) ISNULL)))) ORDER BY ((((t0.c0) NOT BETWEEN (0.5218305304221572) AND ('0.13957350329865714'))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(vt1.c1))AND((t0.c0 IN (vt1.c0)))))AND(((t2.c71) ISNULL)))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((((t0.c0) NOT BETWEEN (0.5218305304221572) AND ('0.13957350329865714'))) NOTNULL));
SELECT * FROM t0, t2, vt1 WHERE (((t2.c71)OR(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t2.c71)OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, vt1);
SELECT * FROM t0, t2, vt1 WHERE (((t2.c71)OR(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t2.c71)OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, vt1);
SELECT * FROM t0, t2, vt1 WHERE (((t2.c71)OR(t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t2 WHERE ((+ (t2.c71)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t2.c71)) COLLATE BINARY) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((+ (t2.c71)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t2.c71)) COLLATE BINARY) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE ((+ (t2.c71)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t2, t0 WHERE (LIKELIHOOD(DISTINCT '288463428', 0.536835554743952));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT '288463428', 0.536835554743952)) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (LIKELIHOOD(DISTINCT '288463428', 0.536835554743952));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT '288463428', 0.536835554743952)) IS TRUE)  as count FROM t2, t0);
SELECT ALL COUNT(*) FROM t2, t0 WHERE (LIKELIHOOD(DISTINCT '288463428', 0.536835554743952));
SELECT * FROM t0, t2 WHERE ((t0.c0 IN ()) COLLATE NOCASE) ORDER BY (- (((t2.c71)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, t2 ORDER BY (- (((t2.c71)<<(t0.c0)))));
SELECT * FROM t0, t2 WHERE ((t0.c0 IN ()) COLLATE NOCASE) ORDER BY (- (((t2.c71)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, t2 ORDER BY (- (((t2.c71)<<(t0.c0)))));
SELECT * FROM t0, t2 WHERE ((t0.c0 IN ()) COLLATE NOCASE) ORDER BY (- (((t2.c71)<<(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE ((((x''))==((t2.c0)))) ORDER BY CASE vt1.c1  WHEN json_array_length(t0.c0) THEN -1342894287 END  NULLS LAST, (((t2.c71 COLLATE BINARY))!=((((vt1.c1)-(t2.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((t2.c0)))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY CASE vt1.c1  WHEN json_array_length(t0.c0) THEN -1342894287 END  NULLS LAST, (((t2.c71 COLLATE BINARY))<>((((vt1.c1)-(t2.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE ((((x''))==((t2.c0)))) ORDER BY CASE vt1.c1  WHEN json_array_length(t0.c0) THEN -1342894287 END  NULLS LAST, (((t2.c71 COLLATE BINARY))!=((((vt1.c1)-(t2.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((t2.c0)))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY CASE vt1.c1  WHEN json_array_length(t0.c0) THEN -1342894287 END  NULLS LAST, (((t2.c71 COLLATE BINARY))<>((((vt1.c1)-(t2.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE ((((x''))==((t2.c0)))) ORDER BY CASE vt1.c1  WHEN json_array_length(t0.c0) THEN -1342894287 END  NULLS LAST, (((t2.c71 COLLATE BINARY))!=((((vt1.c1)-(t2.c0))))) ASC;
SELECT ALL * FROM vt1, t0, t2 WHERE (json_patch(((((t2.c0)AND(NULL)))OR(t0.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c71 END)) ORDER BY LIKELY((vt1.c1 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch(((((t2.c0)AND(NULL)))OR(t0.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c71 END)) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY LIKELY((vt1.c1 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, t2 WHERE (json_patch(((((t2.c0)AND(NULL)))OR(t0.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c71 END)) ORDER BY LIKELY((vt1.c1 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch(((((t2.c0)AND(NULL)))OR(t0.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c71 END)) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY LIKELY((vt1.c1 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, t2 WHERE (json_patch(((((t2.c0)AND(NULL)))OR(t0.c0)), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE t2.c71 END)) ORDER BY LIKELY((vt1.c1 IN ()))  NULLS FIRST;
SELECT ALL * FROM t0, t2, vt1 WHERE ((~ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE ((~ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((~ (x''))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE ((~ (x'')));
SELECT ALL * FROM vt1, t0 WHERE (rtreenode(vt1.c1, ((t0.c0)AND(t0.c0)))) ORDER BY ((((LTRIM(vt1.c0))OR(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) ISNULL))), 'nj%AInfinityE&K';
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(vt1.c1, ((t0.c0)AND(t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((LTRIM(vt1.c0))OR(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) ISNULL))), 'nj%AInfinityE&K');
SELECT ALL * FROM vt1, t0 WHERE (rtreenode(vt1.c1, ((t0.c0)AND(t0.c0)))) ORDER BY ((((LTRIM(vt1.c0))OR(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) ISNULL))), 'nj%AInfinityE&K';
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(vt1.c1, ((t0.c0)AND(t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((LTRIM(vt1.c0))OR(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) ISNULL))), 'nj%AInfinityE&K');
SELECT ALL * FROM vt1, t0 WHERE (rtreenode(vt1.c1, ((t0.c0)AND(t0.c0)))) ORDER BY ((((LTRIM(vt1.c0))OR(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) ISNULL))), 'nj%AInfinityE&K';
SELECT * FROM vt1, t2, t0 WHERE (CASE (((t2.c71))<=((vt1.c1)))  WHEN ((vt1.c1) NOT BETWEEN (x'2d92') AND (vt1.c0)) THEN ((((t0.c0)AND(t2.c0)))AND(vt1.c1)) WHEN ((t2.c71) NOT NULL) THEN CASE t2.c0  WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END WHEN ((((t0.c0)AND(t0.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t2.c71))<=((vt1.c1)))  WHEN ((vt1.c1) NOT BETWEEN (x'2d92') AND (vt1.c0)) THEN ((((t0.c0)AND(t2.c0)))AND(vt1.c1)) WHEN ((t2.c71) NOT NULL) THEN CASE t2.c0  WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END WHEN ((((t0.c0)AND(t0.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (CASE (((t2.c71))<=((vt1.c1)))  WHEN ((vt1.c1) NOT BETWEEN (x'2d92') AND (vt1.c0)) THEN ((((t0.c0)AND(t2.c0)))AND(vt1.c1)) WHEN ((t2.c71) NOT NULL) THEN CASE t2.c0  WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END WHEN ((((t0.c0)AND(t0.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t2.c71))<=((vt1.c1)))  WHEN ((vt1.c1) NOT BETWEEN (x'2d92') AND (vt1.c0)) THEN ((((t0.c0)AND(t2.c0)))AND(vt1.c1)) WHEN ((t2.c71) NOT NULL) THEN CASE t2.c0  WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END WHEN ((((t0.c0)AND(t0.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (CASE (((t2.c71))<=((vt1.c1)))  WHEN ((vt1.c1) NOT BETWEEN (x'2d92') AND (vt1.c0)) THEN ((((t0.c0)AND(t2.c0)))AND(vt1.c1)) WHEN ((t2.c71) NOT NULL) THEN CASE t2.c0  WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END WHEN ((((t0.c0)AND(t0.c0)))OR(vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE CAST(vt1.c1 AS BLOB) END);
SELECT COUNT(*) FROM t2, t0 WHERE (CASE CAST(t2.c0 AS TEXT)  WHEN (~ (t2.c0)) THEN SQLITE_VERSION() END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t2.c0 AS TEXT)  WHEN (~ (t2.c0)) THEN SQLITE_VERSION() END) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (CASE CAST(t2.c0 AS TEXT)  WHEN (~ (t2.c0)) THEN SQLITE_VERSION() END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t2.c0 AS TEXT)  WHEN (~ (t2.c0)) THEN SQLITE_VERSION() END) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (CASE CAST(t2.c0 AS TEXT)  WHEN (~ (t2.c0)) THEN SQLITE_VERSION() END);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t2 WHERE ((((t2.c0)) NOT BETWEEN ((((t2.c0)|(t2.c71)))) AND ((((t2.c71) BETWEEN (t2.c0) AND (0xffffffffdb127ca1)))))) ORDER BY (- (((t2.c71) BETWEEN (t2.c71) AND ('953624537')))), ((SUBSTR(t2.c0, t2.c0)) IS FALSE), (((t2.c71, t2.c71, 0.11659112701412955)) NOT BETWEEN (((t2.c71 IN (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, (~ (t2.c0)))) AND ((TRIM(NULL, t2.c0), t2.c0 COLLATE RTRIM, t2.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) NOT BETWEEN ((((t2.c0)|(t2.c71)))) AND ((((t2.c71) BETWEEN (t2.c0) AND (0Xffffffffdb127ca1)))))) IS TRUE)  as count FROM t2 ORDER BY (- (((t2.c71) BETWEEN (t2.c71) AND ('953624537')))), ((SUBSTR(t2.c0, t2.c0)) IS FALSE), (((t2.c71, t2.c71, 0.11659112701412955)) NOT BETWEEN (((t2.c71 IN (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, (~ (t2.c0)))) AND ((TRIM(NULL, t2.c0), t2.c0 COLLATE RTRIM, t2.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE ((((t2.c0)) NOT BETWEEN ((((t2.c0)|(t2.c71)))) AND ((((t2.c71) BETWEEN (t2.c0) AND (0xffffffffdb127ca1)))))) ORDER BY (- (((t2.c71) BETWEEN (t2.c71) AND ('953624537')))), ((SUBSTR(t2.c0, t2.c0)) IS FALSE), (((t2.c71, t2.c71, 0.11659112701412955)) NOT BETWEEN (((t2.c71 IN (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, (~ (t2.c0)))) AND ((TRIM(NULL, t2.c0), t2.c0 COLLATE RTRIM, t2.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) NOT BETWEEN ((((t2.c0)|(t2.c71)))) AND ((((t2.c71) BETWEEN (t2.c0) AND (0Xffffffffdb127ca1)))))) IS TRUE)  as count FROM t2 ORDER BY (- (((t2.c71) BETWEEN (t2.c71) AND ('953624537')))), ((SUBSTR(t2.c0, t2.c0)) IS FALSE), (((t2.c71, t2.c71, 0.11659112701412955)) NOT BETWEEN (((t2.c71 IN (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, (~ (t2.c0)))) AND ((TRIM(NULL, t2.c0), t2.c0 COLLATE RTRIM, t2.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE ((((t2.c0)) NOT BETWEEN ((((t2.c0)|(t2.c71)))) AND ((((t2.c71) BETWEEN (t2.c0) AND (0xffffffffdb127ca1)))))) ORDER BY (- (((t2.c71) BETWEEN (t2.c71) AND ('953624537')))), ((SUBSTR(t2.c0, t2.c0)) IS FALSE), (((t2.c71, t2.c71, 0.11659112701412955)) NOT BETWEEN (((t2.c71 IN (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c71 END, (~ (t2.c0)))) AND ((TRIM(NULL, t2.c0), t2.c0 COLLATE RTRIM, t2.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t2, vt1, t0 WHERE (((('4卅pA'))!=((CAST(vt1.c1 AS REAL))))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c0)) AND ((vt1.c0, t2.c71, vt1.c1))) COLLATE NOCASE DESC, (+ (((((vt1.c0)AND(vt1.c0)))OR(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((('4卅pA'))<>((CAST(vt1.c1 AS REAL))))) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c0)) AND ((vt1.c0, t2.c71, vt1.c1))) COLLATE NOCASE DESC, (+ (((((vt1.c0)AND(vt1.c0)))OR(x'')))) DESC);
SELECT ALL * FROM t2, vt1, t0 WHERE (((('4卅pA'))!=((CAST(vt1.c1 AS REAL))))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c0)) AND ((vt1.c0, t2.c71, vt1.c1))) COLLATE NOCASE DESC, (+ (((((vt1.c0)AND(vt1.c0)))OR(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((('4卅pA'))<>((CAST(vt1.c1 AS REAL))))) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c0)) AND ((vt1.c0, t2.c71, vt1.c1))) COLLATE NOCASE DESC, (+ (((((vt1.c0)AND(vt1.c0)))OR(x'')))) DESC);
SELECT ALL * FROM t2, vt1, t0 WHERE (((('4卅pA'))!=((CAST(vt1.c1 AS REAL))))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c71, vt1.c0, vt1.c0)) AND ((vt1.c0, t2.c71, vt1.c1))) COLLATE NOCASE DESC, (+ (((((vt1.c0)AND(vt1.c0)))OR(x'')))) DESC;
SELECT ALL COUNT(*) FROM t2 CROSS JOIN vt1 ON ((((t2.c71))>=((vt1.c1))) IN (((t2.c0)IS NOT(vt1.c0)))) WHERE (((((((vt1.c0)<<(vt1.c1)))AND(((((t2.c71)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN vt1.c1 THEN t2.c71 WHEN vt1.c1 THEN t2.c71 WHEN t2.c71 THEN t2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)<<(vt1.c1)))AND(((((t2.c71)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN vt1.c1 THEN t2.c71 WHEN vt1.c1 THEN t2.c71 WHEN t2.c71 THEN t2.c0 END))) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON ((((t2.c71))>=((vt1.c1))) IN (((t2.c0)IS NOT(vt1.c0)))));
SELECT ALL COUNT(*) FROM t2 CROSS JOIN vt1 ON ((((t2.c71))>=((vt1.c1))) IN (((t2.c0)IS NOT(vt1.c0)))) WHERE (((((((vt1.c0)<<(vt1.c1)))AND(((((t2.c71)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN vt1.c1 THEN t2.c71 WHEN vt1.c1 THEN t2.c71 WHEN t2.c71 THEN t2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)<<(vt1.c1)))AND(((((t2.c71)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN vt1.c1 THEN t2.c71 WHEN vt1.c1 THEN t2.c71 WHEN t2.c71 THEN t2.c0 END))) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON ((((t2.c71))>=((vt1.c1))) IN (((t2.c0)IS NOT(vt1.c0)))));
SELECT ALL COUNT(*) FROM t2 CROSS JOIN vt1 ON ((((t2.c71))>=((vt1.c1))) IN (((t2.c0)IS NOT(vt1.c0)))) WHERE (((((((vt1.c0)<<(vt1.c1)))AND(((((t2.c71)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN vt1.c1 THEN t2.c71 WHEN vt1.c1 THEN t2.c71 WHEN t2.c71 THEN t2.c0 END)));
SELECT ALL * FROM t2, t0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL)) ORDER BY CAST(vt1.c0 AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t2, t0 NOT INDEXED, vt1 ORDER BY CAST(vt1.c0 AS TEXT)  NULLS LAST);
SELECT ALL * FROM t2, t0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL)) ORDER BY CAST(vt1.c0 AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t2, t0 NOT INDEXED, vt1 ORDER BY CAST(vt1.c0 AS TEXT)  NULLS LAST);
SELECT ALL * FROM t2, t0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL)) ORDER BY CAST(vt1.c0 AS TEXT)  NULLS LAST;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>>(vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))>>(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>>(vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))>>(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>>(vt1.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE (TRIM(((((vt1.c1)OR(0.29259107156036046)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt1.c1)OR(0.29259107156036046)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TRIM(((((vt1.c1)OR(0.29259107156036046)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(((((vt1.c1)OR(0.29259107156036046)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TRIM(((((vt1.c1)OR(0.29259107156036046)))OR(vt1.c1))));
SELECT * FROM vt1, t0 WHERE (((((vt1.c1)GLOB(vt1.c0)))==(((t0.c0) IS FALSE)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 END)), (+ (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)GLOB(vt1.c0)))=(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 END)), (+ (vt1.c0)) DESC);
SELECT * FROM vt1, t0 WHERE (((((vt1.c1)GLOB(vt1.c0)))==(((t0.c0) IS FALSE)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 END)), (+ (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)GLOB(vt1.c0)))=(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 END)), (+ (vt1.c0)) DESC);
SELECT * FROM vt1, t0 WHERE (((((vt1.c1)GLOB(vt1.c0)))==(((t0.c0) IS FALSE)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 END)), (+ (vt1.c0)) DESC;
SELECT COUNT(*) FROM t0 WHERE ((+ (LOWER(DISTINCT t0.c0)))) ORDER BY (+ (t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (LOWER(DISTINCT t0.c0)))) ORDER BY (+ (t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((+ (LOWER(DISTINCT t0.c0)))) ORDER BY (+ (t0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((0.3812153108872255) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.3812153108872255) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((0.3812153108872255) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.3812153108872255) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((0.3812153108872255) IS TRUE));
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (0.23376235556780933) AND (t0.c0 COLLATE BINARY))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT BETWEEN (0.23376235556780933) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (0.23376235556780933) AND (t0.c0 COLLATE BINARY))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT BETWEEN (0.23376235556780933) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (0.23376235556780933) AND (t0.c0 COLLATE BINARY))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN t2 ON LTRIM(t2.c71, ((vt1.c1)LIKE(vt1.c0))) WHERE ((NOT (((((t2.c71)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY CASE ((vt1.c1) IS FALSE)  WHEN NULL THEN ((t2.c71)AND(t2.c71)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END;
SELECT SUM(count) FROM (SELECT (((NOT (((((t2.c71)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN t2 ON LTRIM(t2.c71, ((vt1.c1)LIKE(vt1.c0))) ORDER BY CASE ((vt1.c1) IS FALSE)  WHEN NULL THEN ((t2.c71)AND(t2.c71)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN t2 ON LTRIM(t2.c71, ((vt1.c1)LIKE(vt1.c0))) WHERE ((NOT (((((t2.c71)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY CASE ((vt1.c1) IS FALSE)  WHEN NULL THEN ((t2.c71)AND(t2.c71)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END;
SELECT SUM(count) FROM (SELECT (((NOT (((((t2.c71)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM t0, vt1 INNER JOIN t2 ON LTRIM(t2.c71, ((vt1.c1)LIKE(vt1.c0))) ORDER BY CASE ((vt1.c1) IS FALSE)  WHEN NULL THEN ((t2.c71)AND(t2.c71)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT ALL COUNT(*) FROM t0, vt1 INNER JOIN t2 ON LTRIM(t2.c71, ((vt1.c1)LIKE(vt1.c0))) WHERE ((NOT (((((t2.c71)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY CASE ((vt1.c1) IS FALSE)  WHEN NULL THEN ((t2.c71)AND(t2.c71)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END;
SELECT * FROM t0 WHERE ('(');
SELECT SUM(count) FROM (SELECT ALL (('(') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('(');
SELECT SUM(count) FROM (SELECT ALL (('(') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('(');
SELECT ALL * FROM t2 WHERE (TRIM(DISTINCT ((((((((t2.c71)AND(t2.c71)))AND(t2.c71)))OR(t2.c0)))AND(t2.c0)))) ORDER BY (+ (t2.c71)) COLLATE BINARY, ((- (t2.c71)) IN ((((t2.c71))==((t2.c71)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((t2.c71)AND(t2.c71)))AND(t2.c71)))OR(t2.c0)))AND(t2.c0)))) IS TRUE)  as count FROM t2 ORDER BY (+ (t2.c71)) COLLATE BINARY, ((- (t2.c71)) IN ((((t2.c71))==((t2.c71)))))  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (TRIM(DISTINCT ((((((((t2.c71)AND(t2.c71)))AND(t2.c71)))OR(t2.c0)))AND(t2.c0)))) ORDER BY (+ (t2.c71)) COLLATE BINARY, ((- (t2.c71)) IN ((((t2.c71))==((t2.c71)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((t2.c71)AND(t2.c71)))AND(t2.c71)))OR(t2.c0)))AND(t2.c0)))) IS TRUE)  as count FROM t2 ORDER BY (+ (t2.c71)) COLLATE BINARY, ((- (t2.c71)) IN ((((t2.c71))==((t2.c71)))))  NULLS FIRST);
SELECT ALL * FROM t2 WHERE (TRIM(DISTINCT ((((((((t2.c71)AND(t2.c71)))AND(t2.c71)))OR(t2.c0)))AND(t2.c0)))) ORDER BY (+ (t2.c71)) COLLATE BINARY, ((- (t2.c71)) IN ((((t2.c71))==((t2.c71)))))  NULLS FIRST;
SELECT * FROM t2, vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (NOT (t2.c71))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM t2, vt1 ORDER BY (NOT (t2.c71))  NULLS FIRST);
SELECT * FROM t2, vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (NOT (t2.c71))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM t2, vt1 ORDER BY (NOT (t2.c71))  NULLS FIRST);
SELECT * FROM t2, vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (NOT (t2.c71))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (((((t2.c0)OR(CASE vt1.c1  WHEN t2.c71 THEN vt1.c1 END)))AND((((t2.c71))>((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0)OR(CASE vt1.c1  WHEN t2.c71 THEN vt1.c1 END)))AND((((t2.c71))>((vt1.c1)))))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (((((t2.c0)OR(CASE vt1.c1  WHEN t2.c71 THEN vt1.c1 END)))AND((((t2.c71))>((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0)OR(CASE vt1.c1  WHEN t2.c71 THEN vt1.c1 END)))AND((((t2.c71))>((vt1.c1)))))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (((((t2.c0)OR(CASE vt1.c1  WHEN t2.c71 THEN vt1.c1 END)))AND((((t2.c71))>((vt1.c1))))));
SELECT ALL * FROM t2, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN '0.7044617527849253' WHEN t2.c71 THEN t2.c71 END)<=(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) ORDER BY 0Xffffffffcd06f25d DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN '0.7044617527849253' WHEN t2.c71 THEN t2.c71 END)<=(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY 0Xffffffffcd06f25d DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN '0.7044617527849253' WHEN t2.c71 THEN t2.c71 END)<=(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) ORDER BY 0Xffffffffcd06f25d DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN '0.7044617527849253' WHEN t2.c71 THEN t2.c71 END)<=(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY 0Xffffffffcd06f25d DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN t2.c0 WHEN vt1.c0 THEN '0.7044617527849253' WHEN t2.c71 THEN t2.c71 END)<=(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) ORDER BY 0Xffffffffcd06f25d DESC  NULLS FIRST;
SELECT * FROM t2, vt1 WHERE (LIKELY(DISTINCT t2.c0));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT t2.c0)) IS TRUE)  as count FROM t2, vt1);
SELECT * FROM t2, vt1 WHERE (LIKELY(DISTINCT t2.c0));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT t2.c0)) IS TRUE)  as count FROM t2, vt1);
SELECT * FROM t2, vt1 WHERE (LIKELY(DISTINCT t2.c0));
SELECT ALL * FROM t0, vt1 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (0Xffffffffe3f4647b);
SELECT SUM(count) FROM (SELECT ((0Xffffffffe3f4647b) IS TRUE)  as count FROM vt1, t2);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (0Xffffffffe3f4647b);
SELECT SUM(count) FROM (SELECT ((0Xffffffffe3f4647b) IS TRUE)  as count FROM vt1, t2);
SELECT ALL COUNT(*) FROM vt1, t2 WHERE (0Xffffffffe3f4647b);
SELECT ALL * FROM t2 WHERE (CASE (t2.c71 IN ())  WHEN t2.c71 COLLATE NOCASE THEN ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t2.c71 IN ())  WHEN t2.c71 COLLATE NOCASE THEN ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)) END) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (CASE (t2.c71 IN ())  WHEN t2.c71 COLLATE NOCASE THEN ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (t2.c71 IN ())  WHEN t2.c71 COLLATE NOCASE THEN ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)) END) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (CASE (t2.c71 IN ())  WHEN t2.c71 COLLATE NOCASE THEN ((t2.c71) NOT BETWEEN (t2.c71) AND (t2.c0)) END);
SELECT * FROM t0, vt1, t2 WHERE (0Xffffffffecafe246) ORDER BY ((((t0.c0)<<(t0.c0)))&(vt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((0xffffffffecafe246) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY ((((t0.c0)<<(t0.c0)))&(vt1.c1 COLLATE RTRIM)));
SELECT * FROM t0, vt1, t2 WHERE (0Xffffffffecafe246) ORDER BY ((((t0.c0)<<(t0.c0)))&(vt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((0xffffffffecafe246) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY ((((t0.c0)<<(t0.c0)))&(vt1.c1 COLLATE RTRIM)));
SELECT * FROM t0, vt1, t2 WHERE (0Xffffffffecafe246) ORDER BY ((((t0.c0)<<(t0.c0)))&(vt1.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((((vt1.c0) NOT NULL))+(((vt1.c1)LIKE(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))+(((vt1.c1)LIKE(t2.c0))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((((vt1.c0) NOT NULL))+(((vt1.c1)LIKE(t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))+(((vt1.c1)LIKE(t2.c0))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (((((vt1.c0) NOT NULL))+(((vt1.c1)LIKE(t2.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=((- (-5.28362376E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=((- (-5.28362376E8))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=((- (-5.28362376E8)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=((- (-5.28362376E8))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))>=((- (-5.28362376E8)))));
SELECT ALL * FROM t0, vt1, t2 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN (((t2.c71, x'', t0.c0, t2.c0, t2.c71))>=(('-920898150', 0.2404443572257302, t2.c0, vt1.c1, vt1.c0))) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) WHEN ((t2.c0) IS FALSE) THEN (NOT (t2.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((0.4338484601832814, vt1.c0, t2.c0))!=((vt1.c0, t2.c0, t2.c0))) ELSE ((vt1.c1)GLOB(t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS TEXT)  WHEN (((t2.c71, x'', t0.c0, t2.c0, t2.c71))>=(('-920898150', 0.2404443572257302, t2.c0, vt1.c1, vt1.c0))) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) WHEN ((t2.c0) IS FALSE) THEN (NOT (t2.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((0.4338484601832814, vt1.c0, t2.c0))<>((vt1.c0, t2.c0, t2.c0))) ELSE ((vt1.c1)GLOB(t2.c71)) END) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL * FROM t0, vt1, t2 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN (((t2.c71, x'', t0.c0, t2.c0, t2.c71))>=(('-920898150', 0.2404443572257302, t2.c0, vt1.c1, vt1.c0))) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) WHEN ((t2.c0) IS FALSE) THEN (NOT (t2.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((0.4338484601832814, vt1.c0, t2.c0))!=((vt1.c0, t2.c0, t2.c0))) ELSE ((vt1.c1)GLOB(t2.c71)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c0 AS TEXT)  WHEN (((t2.c71, x'', t0.c0, t2.c0, t2.c71))>=(('-920898150', 0.2404443572257302, t2.c0, vt1.c1, vt1.c0))) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) WHEN ((t2.c0) IS FALSE) THEN (NOT (t2.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((0.4338484601832814, vt1.c0, t2.c0))<>((vt1.c0, t2.c0, t2.c0))) ELSE ((vt1.c1)GLOB(t2.c71)) END) IS TRUE)  as count FROM t0, vt1, t2);
SELECT ALL * FROM t0, vt1, t2 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN (((t2.c71, x'', t0.c0, t2.c0, t2.c71))>=(('-920898150', 0.2404443572257302, t2.c0, vt1.c1, vt1.c0))) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))) WHEN ((t2.c0) IS FALSE) THEN (NOT (t2.c0)) WHEN t0.c0 COLLATE NOCASE THEN (((0.4338484601832814, vt1.c0, t2.c0))!=((vt1.c0, t2.c0, t2.c0))) ELSE ((vt1.c1)GLOB(t2.c71)) END);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((((((vt1.c1)<=(vt1.c1)))OR(SQLITE_VERSION())))OR(((t0.c0)|(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)<=(vt1.c1)))OR(SQLITE_VERSION())))OR(((t0.c0)|(t2.c0))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((((((vt1.c1)<=(vt1.c1)))OR(SQLITE_VERSION())))OR(((t0.c0)|(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)<=(vt1.c1)))OR(SQLITE_VERSION())))OR(((t0.c0)|(t2.c0))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((((((vt1.c1)<=(vt1.c1)))OR(SQLITE_VERSION())))OR(((t0.c0)|(t2.c0)))));
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON ((CASE WHEN t2.c71 THEN vt1.c1 END)<<((((vt1.c0)) BETWEEN ((t2.c0)) AND ((vt1.c1))))) WHERE (UNLIKELY(((((t2.c71)AND(vt1.c0)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((t2.c71)AND(vt1.c0)))AND(vt1.c1)))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt1 ON ((CASE WHEN t2.c71 THEN vt1.c1 END)<<((((vt1.c0)) BETWEEN ((t2.c0)) AND ((vt1.c1))))));
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON ((CASE WHEN t2.c71 THEN vt1.c1 END)<<((((vt1.c0)) BETWEEN ((t2.c0)) AND ((vt1.c1))))) WHERE (UNLIKELY(((((t2.c71)AND(vt1.c0)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((t2.c71)AND(vt1.c0)))AND(vt1.c1)))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt1 ON ((CASE WHEN t2.c71 THEN vt1.c1 END)<<((((vt1.c0)) BETWEEN ((t2.c0)) AND ((vt1.c1))))));
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON ((CASE WHEN t2.c71 THEN vt1.c1 END)<<((((vt1.c0)) BETWEEN ((t2.c0)) AND ((vt1.c1))))) WHERE (UNLIKELY(((((t2.c71)AND(vt1.c0)))AND(vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))==((- (vt1.c0)))) WHERE ('') ORDER BY ((CAST(vt1.c1 AS INTEGER))IS NOT(vt1.c0)) DESC  NULLS FIRST, ((((vt1.c1)OR(t0.c0 COLLATE RTRIM)))OR('-1110468640')) DESC, ((((t0.c0) NOT BETWEEN (t0.c0) AND ('-206650829'))) BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))=((- (vt1.c0)))) ORDER BY ((CAST(vt1.c1 AS INTEGER))IS NOT(vt1.c0)) DESC  NULLS FIRST, ((((vt1.c1)OR(t0.c0 COLLATE RTRIM)))OR('-1110468640')) DESC, ((((t0.c0) NOT BETWEEN (t0.c0) AND ('-206650829'))) BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))==((- (vt1.c0)))) WHERE ('') ORDER BY ((CAST(vt1.c1 AS INTEGER))IS NOT(vt1.c0)) DESC  NULLS FIRST, ((((vt1.c1)OR(t0.c0 COLLATE RTRIM)))OR('-1110468640')) DESC, ((((t0.c0) NOT BETWEEN (t0.c0) AND ('-206650829'))) BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))=((- (vt1.c0)))) ORDER BY ((CAST(vt1.c1 AS INTEGER))IS NOT(vt1.c0)) DESC  NULLS FIRST, ((((vt1.c1)OR(t0.c0 COLLATE RTRIM)))OR('-1110468640')) DESC, ((((t0.c0) NOT BETWEEN (t0.c0) AND ('-206650829'))) BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((vt1.c0 IN ()))==((- (vt1.c0)))) WHERE ('') ORDER BY ((CAST(vt1.c1 AS INTEGER))IS NOT(vt1.c0)) DESC  NULLS FIRST, ((((vt1.c1)OR(t0.c0 COLLATE RTRIM)))OR('-1110468640')) DESC, ((((t0.c0) NOT BETWEEN (t0.c0) AND ('-206650829'))) BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((((((((t2.c0)AND(t0.c0)))AND(t2.c71)))OR(t2.c0)))OR(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((((((((t2.c0)OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c0)AND(t0.c0)))AND(t2.c71)))OR(t2.c0)))OR(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((((((((t2.c0)OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((((((((t2.c0)AND(t0.c0)))AND(t2.c71)))OR(t2.c0)))OR(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((((((((t2.c0)OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c0)AND(t0.c0)))AND(t2.c71)))OR(t2.c0)))OR(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((((((((t2.c0)OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((((((((t2.c0)AND(t0.c0)))AND(t2.c71)))OR(t2.c0)))OR(t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((((((((t2.c0)OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((NULLIF(DISTINCT t0.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (((t2.c71) ISNULL)))) ORDER BY ((COALESCE(t2.c0, vt1.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (vt1.c0) AND (t2.c0))))  NULLS FIRST, CASE CASE 3.52841002E8  WHEN t0.c0 THEN t2.c0 END  WHEN ((vt1.c1) NOT NULL) THEN (t2.c71 IN (t0.c0)) ELSE t2.c71 END;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT t0.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (((t2.c71) ISNULL)))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((COALESCE(t2.c0, vt1.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (vt1.c0) AND (t2.c0))))  NULLS FIRST, CASE CASE 3.52841002E8  WHEN t0.c0 THEN t2.c0 END  WHEN ((vt1.c1) NOT NULL) THEN (t2.c71 IN (t0.c0)) ELSE t2.c71 END);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((NULLIF(DISTINCT t0.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (((t2.c71) ISNULL)))) ORDER BY ((COALESCE(t2.c0, vt1.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (vt1.c0) AND (t2.c0))))  NULLS FIRST, CASE CASE 3.52841002E8  WHEN t0.c0 THEN t2.c0 END  WHEN ((vt1.c1) NOT NULL) THEN (t2.c71 IN (t0.c0)) ELSE t2.c71 END;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT t0.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (((t2.c71) ISNULL)))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY ((COALESCE(t2.c0, vt1.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (vt1.c0) AND (t2.c0))))  NULLS FIRST, CASE CASE 3.52841002E8  WHEN t0.c0 THEN t2.c0 END  WHEN ((vt1.c1) NOT NULL) THEN (t2.c71 IN (t0.c0)) ELSE t2.c71 END);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((NULLIF(DISTINCT t0.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))) AND (((t2.c71) ISNULL)))) ORDER BY ((COALESCE(t2.c0, vt1.c1)) NOT BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (vt1.c0) AND (t2.c0))))  NULLS FIRST, CASE CASE 3.52841002E8  WHEN t0.c0 THEN t2.c0 END  WHEN ((vt1.c1) NOT NULL) THEN (t2.c71 IN (t0.c0)) ELSE t2.c71 END;
SELECT ALL * FROM vt1, t2 WHERE (((((t2.c71)AND(t2.c71)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71)AND(t2.c71)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t2);
SELECT ALL * FROM vt1, t2 WHERE (((((t2.c71)AND(t2.c71)))OR(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71)AND(t2.c71)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t2);
SELECT ALL * FROM vt1, t2 WHERE (((((t2.c71)AND(t2.c71)))OR(vt1.c0)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()) DESC, ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE)) DESC, ((CAST(vt1.c1 AS BLOB))<=(CASE '-996912519'  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()) DESC, ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE)) DESC, ((CAST(vt1.c1 AS BLOB))<=(CASE '-996912519'  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()) DESC, ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE)) DESC, ((CAST(vt1.c1 AS BLOB))<=(CASE '-996912519'  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()) DESC, ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE)) DESC, ((CAST(vt1.c1 AS BLOB))<=(CASE '-996912519'  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) IN ()) DESC, ((CAST(vt1.c1 AS BLOB)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.c0 COLLATE NOCASE)) DESC, ((CAST(vt1.c1 AS BLOB))<=(CASE '-996912519'  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((vt1.c1)AND(t2.c0)))AND(vt1.c0)))%((~ (t2.c71)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(t2.c0)))AND(vt1.c0)))%((~ (t2.c71))))) IS TRUE)  as count FROM t2, vt1);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((vt1.c1)AND(t2.c0)))AND(vt1.c0)))%((~ (t2.c71)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(t2.c0)))AND(vt1.c0)))%((~ (t2.c71))))) IS TRUE)  as count FROM t2, vt1);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((((vt1.c1)AND(t2.c0)))AND(vt1.c0)))%((~ (t2.c71)))));
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('0.6881485463234142')!=(((vt1.c1)LIKE(0.6165053827671116))))) ORDER BY CAST((vt1.c1 IN (NULL)) AS INTEGER), ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (CAST(vt1.c0 AS TEXT))) ASC, vt1.c1 DESC, (NOT (((vt1.c1)LIKE(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((('0.6881485463234142')!=(((vt1.c1)LIKE(0.6165053827671116))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN (NULL)) AS INTEGER), ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (CAST(vt1.c0 AS TEXT))) ASC, vt1.c1 DESC, (NOT (((vt1.c1)LIKE(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((('0.6881485463234142')!=(((vt1.c1)LIKE(0.6165053827671116))))) ORDER BY CAST((vt1.c1 IN (NULL)) AS INTEGER), ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (CAST(vt1.c0 AS TEXT))) ASC, vt1.c1 DESC, (NOT (((vt1.c1)LIKE(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((('0.6881485463234142')!=(((vt1.c1)LIKE(0.6165053827671116))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN (NULL)) AS INTEGER), ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (CAST(vt1.c0 AS TEXT))) ASC, vt1.c1 DESC, (NOT (((vt1.c1)LIKE(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((('0.6881485463234142')!=(((vt1.c1)LIKE(0.6165053827671116))))) ORDER BY CAST((vt1.c1 IN (NULL)) AS INTEGER), ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (CAST(vt1.c0 AS TEXT))) ASC, vt1.c1 DESC, (NOT (((vt1.c1)LIKE(vt1.c1))));
SELECT * FROM t0 CROSS JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN '1e500' WHEN 0.7669374478824065 THEN t0.c0 END)) WHERE (TRIM((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (vt1.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN '1e500' WHEN 0.7669374478824065 THEN t0.c0 END)));
SELECT * FROM t0 CROSS JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN '1e500' WHEN 0.7669374478824065 THEN t0.c0 END)) WHERE (TRIM((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (vt1.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN '1e500' WHEN 0.7669374478824065 THEN t0.c0 END)));
SELECT * FROM t0 CROSS JOIN vt1 ON (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN '1e500' WHEN 0.7669374478824065 THEN t0.c0 END)) WHERE (TRIM((~ (vt1.c0))));
SELECT * FROM vt1, t2, t0 WHERE (LIKELIHOOD(NULLIF(DISTINCT vt1.c1, t2.c71), 0.13351785310078057));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(NULLIF(DISTINCT vt1.c1, t2.c71), 0.13351785310078057)) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (LIKELIHOOD(NULLIF(DISTINCT vt1.c1, t2.c71), 0.13351785310078057));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(NULLIF(DISTINCT vt1.c1, t2.c71), 0.13351785310078057)) IS TRUE)  as count FROM vt1, t2, t0);
SELECT * FROM vt1, t2, t0 WHERE (LIKELIHOOD(NULLIF(DISTINCT vt1.c1, t2.c71), 0.13351785310078057));
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))-((('')%(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN NULL END)IS NOT((('-1364665688') IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))-((('')%(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN NULL END)IS NOT((('-1364665688') IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))-((('')%(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN NULL END)IS NOT((('-1364665688') IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))-((('')%(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN NULL END)IS NOT((('-1364665688') IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0)))-((('')%(t0.c0))))) ORDER BY ((CASE WHEN t0.c0 THEN NULL END)IS NOT((('-1364665688') IS FALSE))) DESC;
SELECT * FROM vt1, t2 WHERE ((((NOT (t2.c71))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((t2.c71)OR(vt1.c1)))OR(t2.c71)))OR(t2.c71)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t2.c71))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((t2.c71)OR(vt1.c1)))OR(t2.c71)))OR(t2.c71)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE ((((NOT (t2.c71))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((t2.c71)OR(vt1.c1)))OR(t2.c71)))OR(t2.c71)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t2.c71))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((t2.c71)OR(vt1.c1)))OR(t2.c71)))OR(t2.c71)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE ((((NOT (t2.c71))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((t2.c71)OR(vt1.c1)))OR(t2.c71)))OR(t2.c71)))AND(vt1.c0)))));
SELECT ALL * FROM t2 INNER JOIN vt1 ON ((((t2.c0)OR(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(CASE x''  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c1 END)) CROSS JOIN t0 ON GLOB(CAST(vt1.c0 AS TEXT), '0.11732694257862464') WHERE ((('-155514932')>=((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((('-155514932')>=((NOT (vt1.c0))))) IS TRUE)  as count FROM t2 INNER JOIN vt1 ON ((((t2.c0)OR(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(CASE x''  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c1 END)) CROSS JOIN t0 ON GLOB(CAST(vt1.c0 AS TEXT), '0.11732694257862464'));
SELECT ALL * FROM t2 INNER JOIN vt1 ON ((((t2.c0)OR(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(CASE x''  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c1 END)) CROSS JOIN t0 ON GLOB(CAST(vt1.c0 AS TEXT), '0.11732694257862464') WHERE ((('-155514932')>=((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((('-155514932')>=((NOT (vt1.c0))))) IS TRUE)  as count FROM t2 INNER JOIN vt1 ON ((((t2.c0)OR(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(CASE x''  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c1 END)) CROSS JOIN t0 ON GLOB(CAST(vt1.c0 AS TEXT), '0.11732694257862464'));
SELECT ALL * FROM t2 INNER JOIN vt1 ON ((((t2.c0)OR(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(CASE x''  WHEN vt1.c1 THEN t0.c0 ELSE vt1.c1 END)) CROSS JOIN t0 ON GLOB(CAST(vt1.c0 AS TEXT), '0.11732694257862464') WHERE ((('-155514932')>=((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, NULL, vt1.c1)) AND ((vt1.c1, vt1.c1, t0.c0))) COLLATE NOCASE) ORDER BY ((t0.c0)<(t0.c0)) COLLATE RTRIM ASC, json_quote(vt1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, NULL, vt1.c1)) AND ((vt1.c1, vt1.c1, t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0)<(t0.c0)) COLLATE RTRIM ASC, json_quote(vt1.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, NULL, vt1.c1)) AND ((vt1.c1, vt1.c1, t0.c0))) COLLATE NOCASE) ORDER BY ((t0.c0)<(t0.c0)) COLLATE RTRIM ASC, json_quote(vt1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c1, NULL, vt1.c1)) AND ((vt1.c1, vt1.c1, t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0)<(t0.c0)) COLLATE RTRIM ASC, json_quote(vt1.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((t0.c0)&(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)&(vt1.c0)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((t0.c0)&(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)&(vt1.c0)) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((((t0.c0)&(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t2, t0 WHERE (((((t2.c71) ISNULL)) BETWEEN ((((t2.c0, t2.c0, t2.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, t2.c71, t2.c0, t2.c0)) AND ((t2.c0, t0.c0, '', t2.c71, t0.c0)))) AND ((0.7216621085841327 IN (t2.c71))))) ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST, ((UPPER(DISTINCT 0.9251769880694091)) NOT NULL) ASC  NULLS FIRST, (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71) ISNULL)) BETWEEN ((((t2.c0, t2.c0, t2.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, t2.c71, t2.c0, t2.c0)) AND ((t2.c0, t0.c0, '', t2.c71, t0.c0)))) AND ((0.7216621085841327 IN (t2.c71))))) IS TRUE)  as count FROM t2, t0 ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST, ((UPPER(DISTINCT 0.9251769880694091)) NOT NULL) ASC  NULLS FIRST, (t0.c0 IN ()));
SELECT ALL COUNT(*) FROM t2, t0 WHERE (((((t2.c71) ISNULL)) BETWEEN ((((t2.c0, t2.c0, t2.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, t2.c71, t2.c0, t2.c0)) AND ((t2.c0, t0.c0, '', t2.c71, t0.c0)))) AND ((0.7216621085841327 IN (t2.c71))))) ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST, ((UPPER(DISTINCT 0.9251769880694091)) NOT NULL) ASC  NULLS FIRST, (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71) ISNULL)) BETWEEN ((((t2.c0, t2.c0, t2.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, t2.c71, t2.c0, t2.c0)) AND ((t2.c0, t0.c0, '', t2.c71, t0.c0)))) AND ((0.7216621085841327 IN (t2.c71))))) IS TRUE)  as count FROM t2, t0 ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST, ((UPPER(DISTINCT 0.9251769880694091)) NOT NULL) ASC  NULLS FIRST, (t0.c0 IN ()));
SELECT ALL COUNT(*) FROM t2, t0 WHERE (((((t2.c71) ISNULL)) BETWEEN ((((t2.c0, t2.c0, t2.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t2.c0, t2.c71, t2.c0, t2.c0)) AND ((t2.c0, t0.c0, '', t2.c71, t0.c0)))) AND ((0.7216621085841327 IN (t2.c71))))) ORDER BY CAST(NULL AS REAL) ASC  NULLS FIRST, ((UPPER(DISTINCT 0.9251769880694091)) NOT NULL) ASC  NULLS FIRST, (t0.c0 IN ());
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (x'b5af')) AS BLOB) CROSS JOIN t2 ON ((((vt1.c0 COLLATE BINARY)OR(((t0.c0)>=(vt1.c0)))))OR((t0.c0 IN ()))) WHERE (((CAST(t0.c0 AS BLOB))|(t2.c0))) ORDER BY vt1.c0 DESC, ((x'') BETWEEN (vt1.c0 COLLATE BINARY) AND (HEX(DISTINCT vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))|(t2.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (x'b5af')) AS BLOB) CROSS JOIN t2 ON ((((vt1.c0 COLLATE BINARY)OR(((t0.c0)>=(vt1.c0)))))OR((t0.c0 IN ()))) ORDER BY vt1.c0 DESC, ((x'') BETWEEN (vt1.c0 COLLATE BINARY) AND (HEX(DISTINCT vt1.c0)))  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (x'b5af')) AS BLOB) CROSS JOIN t2 ON ((((vt1.c0 COLLATE BINARY)OR(((t0.c0)>=(vt1.c0)))))OR((t0.c0 IN ()))) WHERE (((CAST(t0.c0 AS BLOB))|(t2.c0))) ORDER BY vt1.c0 DESC, ((x'') BETWEEN (vt1.c0 COLLATE BINARY) AND (HEX(DISTINCT vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))|(t2.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c0) NOT BETWEEN (t2.c71) AND (x'b5af')) AS BLOB) CROSS JOIN t2 ON ((((vt1.c0 COLLATE BINARY)OR(((t0.c0)>=(vt1.c0)))))OR((t0.c0 IN ()))) ORDER BY vt1.c0 DESC, ((x'') BETWEEN (vt1.c0 COLLATE BINARY) AND (HEX(DISTINCT vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE WHEN (((t2.c71))<((vt1.c1))) THEN (t0.c0 IN ()) END) ORDER BY (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))))>=(((t2.c0)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t2.c71))<((vt1.c1))) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))))>=(((t2.c0)-(vt1.c0)))));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE WHEN (((t2.c71))<((vt1.c1))) THEN (t0.c0 IN ()) END) ORDER BY (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))))>=(((t2.c0)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t2.c71))<((vt1.c1))) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))))>=(((t2.c0)-(vt1.c0)))));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE WHEN (((t2.c71))<((vt1.c1))) THEN (t0.c0 IN ()) END) ORDER BY (((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))))>=(((t2.c0)-(vt1.c0))));
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON ((((ABS(vt1.c0))AND(((t2.c0)AND(t2.c71)))))OR(x'')) WHERE ((((t2.c71 COLLATE NOCASE))!=(((((t2.c0))>((x''))))))) ORDER BY CASE WHEN TRIM(vt1.c1, t2.c0) THEN CASE WHEN t2.c0 THEN vt1.c0 ELSE 0.9903191746154921 END ELSE -1.782577048E9 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c71 COLLATE NOCASE))!=(((((t2.c0))>((x''))))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt1 ON ((((ABS(vt1.c0))AND(((t2.c0)AND(t2.c71)))))OR(x'')) ORDER BY CASE WHEN TRIM(vt1.c1, t2.c0) THEN CASE WHEN t2.c0 THEN vt1.c0 ELSE 0.9903191746154921 END ELSE -1.782577048E9 END ASC  NULLS FIRST);
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON ((((ABS(vt1.c0))AND(((t2.c0)AND(t2.c71)))))OR(x'')) WHERE ((((t2.c71 COLLATE NOCASE))!=(((((t2.c0))>((x''))))))) ORDER BY CASE WHEN TRIM(vt1.c1, t2.c0) THEN CASE WHEN t2.c0 THEN vt1.c0 ELSE 0.9903191746154921 END ELSE -1.782577048E9 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c71 COLLATE NOCASE))!=(((((t2.c0))>((x''))))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt1 ON ((((ABS(vt1.c0))AND(((t2.c0)AND(t2.c71)))))OR(x'')) ORDER BY CASE WHEN TRIM(vt1.c1, t2.c0) THEN CASE WHEN t2.c0 THEN vt1.c0 ELSE 0.9903191746154921 END ELSE -1.782577048E9 END ASC  NULLS FIRST);
SELECT * FROM t2 LEFT OUTER JOIN vt1 ON ((((ABS(vt1.c0))AND(((t2.c0)AND(t2.c71)))))OR(x'')) WHERE ((((t2.c71 COLLATE NOCASE))!=(((((t2.c0))>((x''))))))) ORDER BY CASE WHEN TRIM(vt1.c1, t2.c0) THEN CASE WHEN t2.c0 THEN vt1.c0 ELSE 0.9903191746154921 END ELSE -1.782577048E9 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((0.43655262269529505) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.43655262269529505) NOT NULL)) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((0.43655262269529505) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.43655262269529505) NOT NULL)) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (((0.43655262269529505) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (0.2001907304935564);
SELECT SUM(count) FROM (SELECT ((0.2001907304935564) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.2001907304935564);
SELECT SUM(count) FROM (SELECT ((0.2001907304935564) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.2001907304935564);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((t2.c0)=(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)=(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((t2.c0)=(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)=(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((t2.c0)=(((vt1.c1) ISNULL))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((t2.c71 COLLATE NOCASE)IS NOT((('-90794763') IS FALSE)))) ORDER BY ((((((t0.c0)AND(t2.c71)))OR('-1110468640'))) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (UPPER(t2.c71))) DESC, ((CAST(t2.c0 AS INTEGER)) IS TRUE)  NULLS FIRST, (CAST(t0.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71 COLLATE NOCASE)IS NOT((('-90794763') IS FALSE)))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((((t0.c0)AND(t2.c71)))OR('-1110468640'))) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (UPPER(t2.c71))) DESC, ((CAST(t2.c0 AS INTEGER)) IS TRUE)  NULLS FIRST, (CAST(t0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((t2.c71 COLLATE NOCASE)IS NOT((('-90794763') IS FALSE)))) ORDER BY ((((((t0.c0)AND(t2.c71)))OR('-1110468640'))) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (UPPER(t2.c71))) DESC, ((CAST(t2.c0 AS INTEGER)) IS TRUE)  NULLS FIRST, (CAST(t0.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71 COLLATE NOCASE)IS NOT((('-90794763') IS FALSE)))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((((t0.c0)AND(t2.c71)))OR('-1110468640'))) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (UPPER(t2.c71))) DESC, ((CAST(t2.c0 AS INTEGER)) IS TRUE)  NULLS FIRST, (CAST(t0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((t2.c71 COLLATE NOCASE)IS NOT((('-90794763') IS FALSE)))) ORDER BY ((((((t0.c0)AND(t2.c71)))OR('-1110468640'))) NOT BETWEEN (TYPEOF(DISTINCT t0.c0)) AND (UPPER(t2.c71))) DESC, ((CAST(t2.c0 AS INTEGER)) IS TRUE)  NULLS FIRST, (CAST(t0.c0 AS BLOB) IN ());
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, t0, t2);
SELECT ALL COUNT(*) FROM vt1, t0, t2 WHERE (x'');
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c1)))) NOT BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0)GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt1.c1)))) NOT BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0)GLOB(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c1)))) NOT BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0)GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt1.c1)))) NOT BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0)GLOB(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c1)))) NOT BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0)GLOB(vt1.c1)))));
SELECT * FROM t0, vt1 WHERE (UPPER(((vt1.c1)!=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt1.c1)!=(vt1.c1)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (UPPER(((vt1.c1)!=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt1.c1)!=(vt1.c1)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (UPPER(((vt1.c1)!=(vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1967703537');
SELECT SUM(count) FROM (SELECT (('-1967703537') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1967703537');
SELECT SUM(count) FROM (SELECT (('-1967703537') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-1967703537');
SELECT ALL * FROM t2, vt1 WHERE ('m핪7M<K\ra') ORDER BY CAST(t2.c0 COLLATE BINARY AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('m핪7M<K\ra') IS TRUE)  as count FROM t2, vt1 ORDER BY CAST(t2.c0 COLLATE BINARY AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 WHERE ('m핪7M<K\ra') ORDER BY CAST(t2.c0 COLLATE BINARY AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('m핪7M<K\ra') IS TRUE)  as count FROM t2, vt1 ORDER BY CAST(t2.c0 COLLATE BINARY AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 WHERE ('m핪7M<K\ra') ORDER BY CAST(t2.c0 COLLATE BINARY AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t2 RIGHT OUTER JOIN vt1 ON CAST(x'bcdb' AS TEXT) WHERE (((((t0.c0)>>(t0.c0)))GLOB(t2.c71)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0)))GLOB(t2.c71))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt1 ON CAST(x'bcdb' AS TEXT));
SELECT COUNT(*) FROM t0, t2 RIGHT OUTER JOIN vt1 ON CAST(x'bcdb' AS TEXT) WHERE (((((t0.c0)>>(t0.c0)))GLOB(t2.c71)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0)))GLOB(t2.c71))) IS TRUE)  as count FROM t0, t2 RIGHT OUTER JOIN vt1 ON CAST(x'bcdb' AS TEXT));
SELECT COUNT(*) FROM t0, t2 RIGHT OUTER JOIN vt1 ON CAST(x'bcdb' AS TEXT) WHERE (((((t0.c0)>>(t0.c0)))GLOB(t2.c71)));
SELECT * FROM vt1, t0, t2 WHERE (CASE WHEN ((t2.c71)<>(vt1.c0)) THEN vt1.c0 WHEN json_extract(t2.c0, x'5ea6', t0.c0, vt1.c0) THEN t2.c71 WHEN ((((((((t2.c0)AND(vt1.c1)))OR(x'c628')))AND(vt1.c1)))OR(t0.c0)) THEN ((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c71)!=(vt1.c0)) THEN vt1.c0 WHEN json_extract(t2.c0, x'5ea6', t0.c0, vt1.c0) THEN t2.c71 WHEN ((((((((t2.c0)AND(vt1.c1)))OR(x'c628')))AND(vt1.c1)))OR(t0.c0)) THEN ((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)) END) IS TRUE)  as count FROM vt1, t0, t2);
SELECT * FROM vt1, t0, t2 WHERE (CASE WHEN ((t2.c71)<>(vt1.c0)) THEN vt1.c0 WHEN json_extract(t2.c0, x'5ea6', t0.c0, vt1.c0) THEN t2.c71 WHEN ((((((((t2.c0)AND(vt1.c1)))OR(x'c628')))AND(vt1.c1)))OR(t0.c0)) THEN ((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c71)!=(vt1.c0)) THEN vt1.c0 WHEN json_extract(t2.c0, x'5ea6', t0.c0, vt1.c0) THEN t2.c71 WHEN ((((((((t2.c0)AND(vt1.c1)))OR(x'c628')))AND(vt1.c1)))OR(t0.c0)) THEN ((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)) END) IS TRUE)  as count FROM vt1, t0, t2);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((+ (vt1.c1))))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((+ (vt1.c1))))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((+ (vt1.c1))))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE RTRIM;
SELECT * FROM vt1 WHERE (x'ba98');
SELECT SUM(count) FROM (SELECT ALL ((x'ba98') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'ba98');
SELECT SUM(count) FROM (SELECT ALL ((x'ba98') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'ba98');
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ISNULL));
SELECT COUNT(*) FROM t2, vt1 WHERE (((((CASE WHEN NULL THEN t2.c71 WHEN t2.c71 THEN vt1.c0 WHEN '-1866669636' THEN t2.c71 END)OR(((((vt1.c0)AND(t2.c0)))AND(vt1.c1)))))OR(((vt1.c0)-(vt1.c0))))) ORDER BY ((CAST(vt1.c1 AS NUMERIC))>(CASE WHEN vt1.c0 THEN t2.c71 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN t2.c71 WHEN t2.c71 THEN vt1.c0 WHEN '-1866669636' THEN t2.c71 END)OR(((((vt1.c0)AND(t2.c0)))AND(vt1.c1)))))OR(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((CAST(vt1.c1 AS NUMERIC))>(CASE WHEN vt1.c0 THEN t2.c71 END))  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((CASE WHEN NULL THEN t2.c71 WHEN t2.c71 THEN vt1.c0 WHEN '-1866669636' THEN t2.c71 END)OR(((((vt1.c0)AND(t2.c0)))AND(vt1.c1)))))OR(((vt1.c0)-(vt1.c0))))) ORDER BY ((CAST(vt1.c1 AS NUMERIC))>(CASE WHEN vt1.c0 THEN t2.c71 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN t2.c71 WHEN t2.c71 THEN vt1.c0 WHEN '-1866669636' THEN t2.c71 END)OR(((((vt1.c0)AND(t2.c0)))AND(vt1.c1)))))OR(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((CAST(vt1.c1 AS NUMERIC))>(CASE WHEN vt1.c0 THEN t2.c71 END))  NULLS FIRST);
SELECT COUNT(*) FROM t2, vt1 WHERE (((((CASE WHEN NULL THEN t2.c71 WHEN t2.c71 THEN vt1.c0 WHEN '-1866669636' THEN t2.c71 END)OR(((((vt1.c0)AND(t2.c0)))AND(vt1.c1)))))OR(((vt1.c0)-(vt1.c0))))) ORDER BY ((CAST(vt1.c1 AS NUMERIC))>(CASE WHEN vt1.c0 THEN t2.c71 END))  NULLS FIRST;
SELECT * FROM t2, vt1 WHERE (UPPER(x'5a5d')) ORDER BY UPPER(t2.c71) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((UPPER(x'5a5d')) IS TRUE)  as count FROM t2, vt1 ORDER BY UPPER(t2.c71) COLLATE BINARY);
SELECT * FROM t2, vt1 WHERE (UPPER(x'5a5d')) ORDER BY UPPER(t2.c71) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((UPPER(x'5a5d')) IS TRUE)  as count FROM t2, vt1 ORDER BY UPPER(t2.c71) COLLATE BINARY);
SELECT * FROM t2, vt1 WHERE (UPPER(x'5a5d')) ORDER BY UPPER(t2.c71) COLLATE BINARY;
SELECT ALL * FROM t2 WHERE ((((0.11732694257862464) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.11732694257862464) IS TRUE) IN ())) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((((0.11732694257862464) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.11732694257862464) IS TRUE) IN ())) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((((0.11732694257862464) IS TRUE) IN ()));
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON json_array_length(CAST(t2.c71 AS INTEGER), ((t2.c0) ISNULL)) WHERE (CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) ISNULL) END) ORDER BY (((t2.c71, t2.c71, t0.c0, t2.c71, t0.c0)) BETWEEN ((((t2.c71)LIKE(-1.987266179E9)), 0xffffffffe0635168, ((((((((t2.c0)AND(0.6677709545727376)))AND(t0.c0)))OR(t2.c0)))AND(t2.c71)), t0.c0, CAST(t0.c0 AS TEXT))) AND (((+ (t2.c71)), CAST(t2.c71 AS NUMERIC), (- (t2.c0)), (NULL IN ()), (((t2.c71))>((t2.c0)))))) ASC  NULLS FIRST, ((((t2.c0)%(t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) ISNULL) END) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON json_array_length(CAST(t2.c71 AS INTEGER), ((t2.c0) ISNULL)) ORDER BY (((t2.c71, t2.c71, t0.c0, t2.c71, t0.c0)) BETWEEN ((((t2.c71)LIKE(-1.987266179E9)), 0Xffffffffe0635168, ((((((((t2.c0)AND(0.6677709545727376)))AND(t0.c0)))OR(t2.c0)))AND(t2.c71)), t0.c0, CAST(t0.c0 AS TEXT))) AND (((+ (t2.c71)), CAST(t2.c71 AS NUMERIC), (- (t2.c0)), (NULL IN ()), (((t2.c71))>((t2.c0)))))) ASC  NULLS FIRST, ((((t2.c0)%(t0.c0))) IS TRUE) DESC);
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON json_array_length(CAST(t2.c71 AS INTEGER), ((t2.c0) ISNULL)) WHERE (CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) ISNULL) END) ORDER BY (((t2.c71, t2.c71, t0.c0, t2.c71, t0.c0)) BETWEEN ((((t2.c71)LIKE(-1.987266179E9)), 0xffffffffe0635168, ((((((((t2.c0)AND(0.6677709545727376)))AND(t0.c0)))OR(t2.c0)))AND(t2.c71)), t0.c0, CAST(t0.c0 AS TEXT))) AND (((+ (t2.c71)), CAST(t2.c71 AS NUMERIC), (- (t2.c0)), (NULL IN ()), (((t2.c71))>((t2.c0)))))) ASC  NULLS FIRST, ((((t2.c0)%(t0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) ISNULL) END) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON json_array_length(CAST(t2.c71 AS INTEGER), ((t2.c0) ISNULL)) ORDER BY (((t2.c71, t2.c71, t0.c0, t2.c71, t0.c0)) BETWEEN ((((t2.c71)LIKE(-1.987266179E9)), 0Xffffffffe0635168, ((((((((t2.c0)AND(0.6677709545727376)))AND(t0.c0)))OR(t2.c0)))AND(t2.c71)), t0.c0, CAST(t0.c0 AS TEXT))) AND (((+ (t2.c71)), CAST(t2.c71 AS NUMERIC), (- (t2.c0)), (NULL IN ()), (((t2.c71))>((t2.c0)))))) ASC  NULLS FIRST, ((((t2.c0)%(t0.c0))) IS TRUE) DESC);
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON json_array_length(CAST(t2.c71 AS INTEGER), ((t2.c0) ISNULL)) WHERE (CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN (t2.c0 IN ()) ELSE ((t2.c0) ISNULL) END) ORDER BY (((t2.c71, t2.c71, t0.c0, t2.c71, t0.c0)) BETWEEN ((((t2.c71)LIKE(-1.987266179E9)), 0xffffffffe0635168, ((((((((t2.c0)AND(0.6677709545727376)))AND(t0.c0)))OR(t2.c0)))AND(t2.c71)), t0.c0, CAST(t0.c0 AS TEXT))) AND (((+ (t2.c71)), CAST(t2.c71 AS NUMERIC), (- (t2.c0)), (NULL IN ()), (((t2.c71))>((t2.c0)))))) ASC  NULLS FIRST, ((((t2.c0)%(t0.c0))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE (((((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)))<=(0Xffffffff9b713f12)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)))<=(0xffffffff9b713f12))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE (((((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)))<=(0Xffffffff9b713f12)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)))<=(0xffffffff9b713f12))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt1, t2 WHERE (((((vt1.c1) BETWEEN (t0.c0) AND (t2.c0)))<=(0Xffffffff9b713f12)));
SELECT COUNT(*) FROM t2, vt1 RIGHT OUTER JOIN t0 ON (((((t2.c71 IN ()))OR(((vt1.c0)AND(vt1.c1)))))AND((((0.6559430589699143)) BETWEEN ((vt1.c1)) AND ((t0.c0))))) WHERE (((CAST(vt1.c1 AS BLOB))==(CAST(t2.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t2.c71 THEN t2.c0 END ELSE (~ (t2.c0)) END;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB))=(CAST(t2.c0 AS NUMERIC)))) IS TRUE)  as count FROM t2, vt1 RIGHT OUTER JOIN t0 ON (((((t2.c71 IN ()))OR(((vt1.c0)AND(vt1.c1)))))AND((((0.6559430589699143)) BETWEEN ((vt1.c1)) AND ((t0.c0))))) ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t2.c71 THEN t2.c0 END ELSE (~ (t2.c0)) END);
SELECT COUNT(*) FROM t2, vt1 RIGHT OUTER JOIN t0 ON (((((t2.c71 IN ()))OR(((vt1.c0)AND(vt1.c1)))))AND((((0.6559430589699143)) BETWEEN ((vt1.c1)) AND ((t0.c0))))) WHERE (((CAST(vt1.c1 AS BLOB))==(CAST(t2.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t2.c71 THEN t2.c0 END ELSE (~ (t2.c0)) END;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB))=(CAST(t2.c0 AS NUMERIC)))) IS TRUE)  as count FROM t2, vt1 RIGHT OUTER JOIN t0 ON (((((t2.c71 IN ()))OR(((vt1.c0)AND(vt1.c1)))))AND((((0.6559430589699143)) BETWEEN ((vt1.c1)) AND ((t0.c0))))) ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t2.c71 THEN t2.c0 END ELSE (~ (t2.c0)) END);
SELECT COUNT(*) FROM t2, vt1 RIGHT OUTER JOIN t0 ON (((((t2.c71 IN ()))OR(((vt1.c0)AND(vt1.c1)))))AND((((0.6559430589699143)) BETWEEN ((vt1.c1)) AND ((t0.c0))))) WHERE (((CAST(vt1.c1 AS BLOB))==(CAST(t2.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t2.c71 THEN t2.c0 END ELSE (~ (t2.c0)) END;
SELECT COUNT(*) FROM t0, t2 WHERE ((((t2.c0 IN ())) IS TRUE)) ORDER BY (NOT (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, t2 ORDER BY (NOT (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE ((((t2.c0 IN ())) IS TRUE)) ORDER BY (NOT (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, t2 ORDER BY (NOT (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE ((((t2.c0 IN ())) IS TRUE)) ORDER BY (NOT (((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c71))))  NULLS FIRST;
SELECT * FROM t2, vt1 WHERE (TRIM(DISTINCT ((((t2.c0)AND(vt1.c0)))OR(t2.c71)))) ORDER BY CASE ((x'')-(vt1.c1))  WHEN (~ (vt1.c0)) THEN ((t2.c71)<<(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)OR(t2.c71)) WHEN CASE WHEN t2.c71 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((t2.c0)>>(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((t2.c0)AND(vt1.c0)))OR(t2.c71)))) IS TRUE)  as count FROM t2, vt1 ORDER BY CASE ((x'')-(vt1.c1))  WHEN (~ (vt1.c0)) THEN ((t2.c71)<<(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)OR(t2.c71)) WHEN CASE WHEN t2.c71 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((t2.c0)>>(vt1.c0)) END ASC  NULLS LAST);
SELECT * FROM t2, vt1 WHERE (TRIM(DISTINCT ((((t2.c0)AND(vt1.c0)))OR(t2.c71)))) ORDER BY CASE ((x'')-(vt1.c1))  WHEN (~ (vt1.c0)) THEN ((t2.c71)<<(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)OR(t2.c71)) WHEN CASE WHEN t2.c71 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((t2.c0)>>(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((t2.c0)AND(vt1.c0)))OR(t2.c71)))) IS TRUE)  as count FROM t2, vt1 ORDER BY CASE ((x'')-(vt1.c1))  WHEN (~ (vt1.c0)) THEN ((t2.c71)<<(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)OR(t2.c71)) WHEN CASE WHEN t2.c71 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((t2.c0)>>(vt1.c0)) END ASC  NULLS LAST);
SELECT * FROM t2, vt1 WHERE (TRIM(DISTINCT ((((t2.c0)AND(vt1.c0)))OR(t2.c71)))) ORDER BY CASE ((x'')-(vt1.c1))  WHEN (~ (vt1.c0)) THEN ((t2.c71)<<(vt1.c0)) WHEN vt1.c0 THEN ((vt1.c0)OR(t2.c71)) WHEN CASE WHEN t2.c71 THEN t2.c0 WHEN vt1.c0 THEN t2.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((t2.c0)>>(vt1.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM t0, t2 WHERE (((((t2.c71) IS TRUE))<(CASE WHEN t2.c0 THEN t2.c71 ELSE NULL END))) ORDER BY (((((t0.c0 IN ()))OR(CAST(0.8148153972933585 AS INTEGER))))OR(((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71) IS TRUE))<(CASE WHEN t2.c0 THEN t2.c71 ELSE NULL END))) IS TRUE)  as count FROM t0, t2 ORDER BY (((((t0.c0 IN ()))OR(CAST(0.8148153972933585 AS INTEGER))))OR(((t0.c0) IS FALSE))));
SELECT ALL * FROM t0, t2 WHERE (((((t2.c71) IS TRUE))<(CASE WHEN t2.c0 THEN t2.c71 ELSE NULL END))) ORDER BY (((((t0.c0 IN ()))OR(CAST(0.8148153972933585 AS INTEGER))))OR(((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71) IS TRUE))<(CASE WHEN t2.c0 THEN t2.c71 ELSE NULL END))) IS TRUE)  as count FROM t0, t2 ORDER BY (((((t0.c0 IN ()))OR(CAST(0.8148153972933585 AS INTEGER))))OR(((t0.c0) IS FALSE))));
SELECT ALL * FROM t0, t2 WHERE (((((t2.c71) IS TRUE))<(CASE WHEN t2.c0 THEN t2.c71 ELSE NULL END))) ORDER BY (((((t0.c0 IN ()))OR(CAST(0.8148153972933585 AS INTEGER))))OR(((t0.c0) IS FALSE)));
SELECT COUNT(*) FROM t2 WHERE (((t2.c0)&(NULL)));
SELECT SUM(count) FROM (SELECT ((((t2.c0)&(NULL))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0)&(NULL)));
SELECT SUM(count) FROM (SELECT ((((t2.c0)&(NULL))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0)&(NULL)));
SELECT COUNT(*) FROM vt1, t2 NOT INDEXED, t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((((((((((((0.18937267475590835)AND(t2.c0)))OR(t2.c71)))AND(t2.c71)))AND(x'687e')))AND(NULL)))OR(t2.c0)) WHEN CASE WHEN t2.c71 THEN vt1.c0 ELSE t2.c71 END THEN ((vt1.c0) BETWEEN (t0.c0) AND (NULL)) WHEN CASE t0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE t2.c71 END THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((((((((((((0.18937267475590835)AND(t2.c0)))OR(t2.c71)))AND(t2.c71)))AND(x'687e')))AND(NULL)))OR(t2.c0)) WHEN CASE WHEN t2.c71 THEN vt1.c0 ELSE t2.c71 END THEN ((vt1.c0) BETWEEN (t0.c0) AND (NULL)) WHEN CASE t0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE t2.c71 END THEN NULL END) IS TRUE)  as count FROM vt1, t2, t0);
SELECT COUNT(*) FROM vt1, t2 NOT INDEXED, t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((((((((((((0.18937267475590835)AND(t2.c0)))OR(t2.c71)))AND(t2.c71)))AND(x'687e')))AND(NULL)))OR(t2.c0)) WHEN CASE WHEN t2.c71 THEN vt1.c0 ELSE t2.c71 END THEN ((vt1.c0) BETWEEN (t0.c0) AND (NULL)) WHEN CASE t0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE t2.c71 END THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((((((((((((0.18937267475590835)AND(t2.c0)))OR(t2.c71)))AND(t2.c71)))AND(x'687e')))AND(NULL)))OR(t2.c0)) WHEN CASE WHEN t2.c71 THEN vt1.c0 ELSE t2.c71 END THEN ((vt1.c0) BETWEEN (t0.c0) AND (NULL)) WHEN CASE t0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE t2.c71 END THEN NULL END) IS TRUE)  as count FROM vt1, t2, t0);
SELECT COUNT(*) FROM vt1, t2 NOT INDEXED, t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN UNLIKELY(DISTINCT vt1.c1) THEN ((((((((((((0.18937267475590835)AND(t2.c0)))OR(t2.c71)))AND(t2.c71)))AND(x'687e')))AND(NULL)))OR(t2.c0)) WHEN CASE WHEN t2.c71 THEN vt1.c0 ELSE t2.c71 END THEN ((vt1.c0) BETWEEN (t0.c0) AND (NULL)) WHEN CASE t0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE t2.c71 END THEN NULL END);
SELECT * FROM t2 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))%(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))%(NULL COLLATE BINARY))) IS TRUE)  as count FROM t2 NATURAL JOIN vt1);
SELECT * FROM t2 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))%(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))%(NULL COLLATE BINARY))) IS TRUE)  as count FROM t2 NATURAL JOIN vt1);
SELECT * FROM t2 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (t2.c71)))%(NULL COLLATE BINARY)));
SELECT * FROM t2, vt1, t0 WHERE (CASE WHEN vt1.c1 COLLATE NOCASE THEN ABS(DISTINCT t2.c0) WHEN ((t0.c0)OR(vt1.c1)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c0))>((vt1.c1))) THEN ((((vt1.c0)AND(t2.c0)))AND(vt1.c0)) END) ORDER BY ((((((t2.c0)=(t2.c0)))OR(((t2.c0) NOT NULL))))AND(SQLITE_COMPILEOPTION_GET(t2.c71))) DESC  NULLS LAST, load_extension(t2.c71) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 COLLATE NOCASE THEN ABS(DISTINCT t2.c0) WHEN ((t0.c0)OR(vt1.c1)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c0))>((vt1.c1))) THEN ((((vt1.c0)AND(t2.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY ((((((t2.c0)=(t2.c0)))OR(((t2.c0) NOT NULL))))AND(SQLITE_COMPILEOPTION_GET(t2.c71))) DESC  NULLS LAST, load_extension(t2.c71) COLLATE RTRIM);
SELECT * FROM t2, vt1, t0 WHERE (CASE WHEN vt1.c1 COLLATE NOCASE THEN ABS(DISTINCT t2.c0) WHEN ((t0.c0)OR(vt1.c1)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c0))>((vt1.c1))) THEN ((((vt1.c0)AND(t2.c0)))AND(vt1.c0)) END) ORDER BY ((((((t2.c0)=(t2.c0)))OR(((t2.c0) NOT NULL))))AND(SQLITE_COMPILEOPTION_GET(t2.c71))) DESC  NULLS LAST, load_extension(t2.c71) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 COLLATE NOCASE THEN ABS(DISTINCT t2.c0) WHEN ((t0.c0)OR(vt1.c1)) THEN t0.c0 COLLATE NOCASE WHEN (((t0.c0))>((vt1.c1))) THEN ((((vt1.c0)AND(t2.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY ((((((t2.c0)=(t2.c0)))OR(((t2.c0) NOT NULL))))AND(SQLITE_COMPILEOPTION_GET(t2.c71))) DESC  NULLS LAST, load_extension(t2.c71) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((vt1.c1)<(vt1.c1))))) ORDER BY CASE (NOT (vt1.c1))  WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c1)/(vt1.c0)) ELSE ((t0.c0)-('-1110468640')) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1)<(vt1.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY CASE (NOT (vt1.c1))  WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c1)/(vt1.c0)) ELSE ((t0.c0)-('-1110468640')) END);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((vt1.c1)<(vt1.c1))))) ORDER BY CASE (NOT (vt1.c1))  WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c1)/(vt1.c0)) ELSE ((t0.c0)-('-1110468640')) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1)<(vt1.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY CASE (NOT (vt1.c1))  WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c1)/(vt1.c0)) ELSE ((t0.c0)-('-1110468640')) END);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE ((NOT (((vt1.c1)<(vt1.c1))))) ORDER BY CASE (NOT (vt1.c1))  WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt1.c1)/(vt1.c0)) ELSE ((t0.c0)-('-1110468640')) END;
SELECT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))GLOB(((t0.c0)/(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t0.c0)))GLOB(((t0.c0)/(NULL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))GLOB(((t0.c0)/(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS NOT(t0.c0)))GLOB(((t0.c0)/(NULL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))GLOB(((t0.c0)/(NULL)))));
SELECT ALL * FROM t2 WHERE (((((((((((((((((t2.c71)OR(t2.c71)))OR(t2.c0)))OR(((t2.c0) ISNULL))))AND(CAST(t2.c0 AS INTEGER))))OR(CAST(t2.c0 AS INTEGER))))AND(t2.c71)))OR(((t2.c71)IS(t2.c71)))))AND(((t2.c71) ISNULL)))) ORDER BY CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN (NULL IN ()) THEN CAST(t2.c71 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t2.c71)OR(t2.c71)))OR(t2.c0)))OR(((t2.c0) ISNULL))))AND(CAST(t2.c0 AS INTEGER))))OR(CAST(t2.c0 AS INTEGER))))AND(t2.c71)))OR(((t2.c71)IS(t2.c71)))))AND(((t2.c71) ISNULL)))) IS TRUE)  as count FROM t2 ORDER BY CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN (NULL IN ()) THEN CAST(t2.c71 AS NUMERIC) END);
SELECT ALL * FROM t2 WHERE (((((((((((((((((t2.c71)OR(t2.c71)))OR(t2.c0)))OR(((t2.c0) ISNULL))))AND(CAST(t2.c0 AS INTEGER))))OR(CAST(t2.c0 AS INTEGER))))AND(t2.c71)))OR(((t2.c71)IS(t2.c71)))))AND(((t2.c71) ISNULL)))) ORDER BY CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN (NULL IN ()) THEN CAST(t2.c71 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t2.c71)OR(t2.c71)))OR(t2.c0)))OR(((t2.c0) ISNULL))))AND(CAST(t2.c0 AS INTEGER))))OR(CAST(t2.c0 AS INTEGER))))AND(t2.c71)))OR(((t2.c71)IS(t2.c71)))))AND(((t2.c71) ISNULL)))) IS TRUE)  as count FROM t2 ORDER BY CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN (NULL IN ()) THEN CAST(t2.c71 AS NUMERIC) END);
SELECT ALL * FROM t2 WHERE (((((((((((((((((t2.c71)OR(t2.c71)))OR(t2.c0)))OR(((t2.c0) ISNULL))))AND(CAST(t2.c0 AS INTEGER))))OR(CAST(t2.c0 AS INTEGER))))AND(t2.c71)))OR(((t2.c71)IS(t2.c71)))))AND(((t2.c71) ISNULL)))) ORDER BY CASE ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))  WHEN (NULL IN ()) THEN CAST(t2.c71 AS NUMERIC) END;
SELECT ALL COUNT(*) FROM t0, t2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (t0.c0);
SELECT COUNT(*) FROM t2 WHERE ((((t2.c71, t2.c71, t2.c0)) BETWEEN ((t2.c71 COLLATE BINARY, t2.c71 COLLATE BINARY, (((NULL))=((t2.c0))))) AND ((CASE WHEN t2.c71 THEN t2.c71 ELSE t2.c71 END, CAST(t2.c71 AS NUMERIC), (((t2.c71))>((t2.c71))))))) ORDER BY (((('?_L') ISNULL)) IS TRUE)  NULLS FIRST, CASE (((NULL))<>((t2.c0)))  WHEN ((t2.c71) NOT NULL) THEN ((t2.c71)LIKE(t2.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c71, t2.c71, t2.c0)) BETWEEN ((t2.c71 COLLATE BINARY, t2.c71 COLLATE BINARY, (((NULL))==((t2.c0))))) AND ((CASE WHEN t2.c71 THEN t2.c71 ELSE t2.c71 END, CAST(t2.c71 AS NUMERIC), (((t2.c71))>((t2.c71))))))) IS TRUE)  as count FROM t2 ORDER BY (((('?_L') ISNULL)) IS TRUE)  NULLS FIRST, CASE (((NULL))!=((t2.c0)))  WHEN ((t2.c71) NOT NULL) THEN ((t2.c71)LIKE(t2.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE ((((t2.c71, t2.c71, t2.c0)) BETWEEN ((t2.c71 COLLATE BINARY, t2.c71 COLLATE BINARY, (((NULL))=((t2.c0))))) AND ((CASE WHEN t2.c71 THEN t2.c71 ELSE t2.c71 END, CAST(t2.c71 AS NUMERIC), (((t2.c71))>((t2.c71))))))) ORDER BY (((('?_L') ISNULL)) IS TRUE)  NULLS FIRST, CASE (((NULL))<>((t2.c0)))  WHEN ((t2.c71) NOT NULL) THEN ((t2.c71)LIKE(t2.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c71, t2.c71, t2.c0)) BETWEEN ((t2.c71 COLLATE BINARY, t2.c71 COLLATE BINARY, (((NULL))==((t2.c0))))) AND ((CASE WHEN t2.c71 THEN t2.c71 ELSE t2.c71 END, CAST(t2.c71 AS NUMERIC), (((t2.c71))>((t2.c71))))))) IS TRUE)  as count FROM t2 ORDER BY (((('?_L') ISNULL)) IS TRUE)  NULLS FIRST, CASE (((NULL))!=((t2.c0)))  WHEN ((t2.c71) NOT NULL) THEN ((t2.c71)LIKE(t2.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE ((((t2.c71, t2.c71, t2.c0)) BETWEEN ((t2.c71 COLLATE BINARY, t2.c71 COLLATE BINARY, (((NULL))=((t2.c0))))) AND ((CASE WHEN t2.c71 THEN t2.c71 ELSE t2.c71 END, CAST(t2.c71 AS NUMERIC), (((t2.c71))>((t2.c71))))))) ORDER BY (((('?_L') ISNULL)) IS TRUE)  NULLS FIRST, CASE (((NULL))<>((t2.c0)))  WHEN ((t2.c71) NOT NULL) THEN ((t2.c71)LIKE(t2.c0)) END ASC  NULLS FIRST;
SELECT * FROM t0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (t0.c0)));
SELECT COUNT(*) FROM t0, t2 WHERE (((t2.c71) NOTNULL) COLLATE BINARY) ORDER BY '-1342226682'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY '-1342226682'  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (((t2.c71) NOTNULL) COLLATE BINARY) ORDER BY '-1342226682'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t0, t2 ORDER BY '-1342226682'  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 WHERE (((t2.c71) NOTNULL) COLLATE BINARY) ORDER BY '-1342226682'  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE ((((((t2.c0)) BETWEEN (('IꘒbA!Jc#')) AND ((vt1.c1)))) BETWEEN ((('0.9091088581675231') NOTNULL)) AND ((vt1.c1 IN (t2.c71, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)) BETWEEN (('IꘒbA!Jc#')) AND ((vt1.c1)))) BETWEEN ((('0.9091088581675231') NOTNULL)) AND ((vt1.c1 IN (t2.c71, vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE ((((((t2.c0)) BETWEEN (('IꘒbA!Jc#')) AND ((vt1.c1)))) BETWEEN ((('0.9091088581675231') NOTNULL)) AND ((vt1.c1 IN (t2.c71, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)) BETWEEN (('IꘒbA!Jc#')) AND ((vt1.c1)))) BETWEEN ((('0.9091088581675231') NOTNULL)) AND ((vt1.c1 IN (t2.c71, vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN t2 ON ((vt1.c0 COLLATE NOCASE) ISNULL) WHERE ((((((t2.c0)) BETWEEN (('IꘒbA!Jc#')) AND ((vt1.c1)))) BETWEEN ((('0.9091088581675231') NOTNULL)) AND ((vt1.c1 IN (t2.c71, vt1.c0)))));
SELECT * FROM t0, t2, vt1 WHERE ((((t0.c0)) BETWEEN ((((((vt1.c1)OR(t0.c0)))AND(vt1.c0)))) AND (((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))) ORDER BY ((t2.c71) BETWEEN (((t2.c71) IS FALSE)) AND (vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((((vt1.c1)OR(t0.c0)))AND(vt1.c0)))) AND (((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((t2.c71) BETWEEN (((t2.c71) IS FALSE)) AND (vt1.c1))  NULLS LAST);
SELECT * FROM t0, t2, vt1 WHERE ((((t0.c0)) BETWEEN ((((((vt1.c1)OR(t0.c0)))AND(vt1.c0)))) AND (((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))) ORDER BY ((t2.c71) BETWEEN (((t2.c71) IS FALSE)) AND (vt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((((vt1.c1)OR(t0.c0)))AND(vt1.c0)))) AND (((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((t2.c71) BETWEEN (((t2.c71) IS FALSE)) AND (vt1.c1))  NULLS LAST);
SELECT * FROM t0, t2, vt1 WHERE ((((t0.c0)) BETWEEN ((((((vt1.c1)OR(t0.c0)))AND(vt1.c0)))) AND (((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))) ORDER BY ((t2.c71) BETWEEN (((t2.c71) IS FALSE)) AND (vt1.c1))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)GLOB(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)GLOB(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS BLOB));
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((~ (t0.c0)))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST, ((((x'')>=('YI3\r+'))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((~ (t0.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST, ((((x'')>=('YI3\r+'))) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((~ (t0.c0)))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST, ((((x'')>=('YI3\r+'))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((~ (t0.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((t0.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST, ((((x'')>=('YI3\r+'))) ISNULL)  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND (((~ (t0.c0)))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE) DESC  NULLS LAST, ((((x'')>=('YI3\r+'))) ISNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (ABS(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT ALL * FROM vt1 WHERE (' Vz0W');
SELECT SUM(count) FROM (SELECT ALL ((' Vz0W') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (' Vz0W');
SELECT SUM(count) FROM (SELECT ALL ((' Vz0W') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (' Vz0W');
SELECT ALL COUNT(*) FROM t2 NATURAL JOIN t0 WHERE (COALESCE(DISTINCT ((((((((t2.c0)AND(t2.c71)))OR(t0.c0)))OR(t2.c71)))AND(t2.c0)), CAST(t0.c0 AS REAL), x'9ad5', ((((t2.c71)AND(t0.c0)))OR(t2.c71)))) ORDER BY ((((t2.c71) BETWEEN (t2.c71) AND (t2.c71)))GLOB(((t0.c0)AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((((((t2.c0)AND(t2.c71)))OR(t0.c0)))OR(t2.c71)))AND(t2.c0)), CAST(t0.c0 AS REAL), x'9ad5', ((((t2.c71)AND(t0.c0)))OR(t2.c71)))) IS TRUE)  as count FROM t2 NATURAL JOIN t0 ORDER BY ((((t2.c71) BETWEEN (t2.c71) AND (t2.c71)))GLOB(((t0.c0)AND(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2 NATURAL JOIN t0 WHERE (COALESCE(DISTINCT ((((((((t2.c0)AND(t2.c71)))OR(t0.c0)))OR(t2.c71)))AND(t2.c0)), CAST(t0.c0 AS REAL), x'9ad5', ((((t2.c71)AND(t0.c0)))OR(t2.c71)))) ORDER BY ((((t2.c71) BETWEEN (t2.c71) AND (t2.c71)))GLOB(((t0.c0)AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((((((t2.c0)AND(t2.c71)))OR(t0.c0)))OR(t2.c71)))AND(t2.c0)), CAST(t0.c0 AS REAL), x'9ad5', ((((t2.c71)AND(t0.c0)))OR(t2.c71)))) IS TRUE)  as count FROM t2 NATURAL JOIN t0 ORDER BY ((((t2.c71) BETWEEN (t2.c71) AND (t2.c71)))GLOB(((t0.c0)AND(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2 NATURAL JOIN t0 WHERE (COALESCE(DISTINCT ((((((((t2.c0)AND(t2.c71)))OR(t0.c0)))OR(t2.c71)))AND(t2.c0)), CAST(t0.c0 AS REAL), x'9ad5', ((((t2.c71)AND(t0.c0)))OR(t2.c71)))) ORDER BY ((((t2.c71) BETWEEN (t2.c71) AND (t2.c71)))GLOB(((t0.c0)AND(t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)<<(t0.c0)))OR(0.69224685596625)))OR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))) ORDER BY t0.c0 DESC, CAST((((t0.c0))>=((t0.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<<(t0.c0)))OR(0.69224685596625)))OR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, CAST((((t0.c0))>=((t0.c0))) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)<<(t0.c0)))OR(0.69224685596625)))OR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))) ORDER BY t0.c0 DESC, CAST((((t0.c0))>=((t0.c0))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<<(t0.c0)))OR(0.69224685596625)))OR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, CAST((((t0.c0))>=((t0.c0))) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0)<<(t0.c0)))OR(0.69224685596625)))OR((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))))) ORDER BY t0.c0 DESC, CAST((((t0.c0))>=((t0.c0))) AS REAL);
SELECT ALL * FROM vt1 CROSS JOIN t2 ON CASE WHEN CASE vt1.c1  WHEN '704963347' THEN vt1.c1 END THEN ((t2.c71) IS TRUE) END WHERE (((((((((((t2.c0)>(vt1.c0)))AND(((((0.9782370845801158)AND(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(vt1.c1 COLLATE BINARY))) ORDER BY CASE (('1877867287') IS TRUE)  WHEN (((x'', vt1.c0, t2.c0)) BETWEEN ((vt1.c0, t2.c0, vt1.c0)) AND ((vt1.c1, t2.c0, '693498274'))) THEN 0.02125508340575122 WHEN ((t2.c71)-('P-^]a꾩l(]')) THEN vt1.c0 WHEN CASE vt1.c0  WHEN t2.c0 THEN '-584977757' WHEN 0.18380602277982594 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END THEN 0.8936305227143809 COLLATE BINARY ELSE ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c0)>(vt1.c0)))AND(((((0.9782370845801158)AND(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN t2 ON CASE WHEN CASE vt1.c1  WHEN '704963347' THEN vt1.c1 END THEN ((t2.c71) IS TRUE) END ORDER BY CASE (('1877867287') IS TRUE)  WHEN (((x'', vt1.c0, t2.c0)) BETWEEN ((vt1.c0, t2.c0, vt1.c0)) AND ((vt1.c1, t2.c0, '693498274'))) THEN 0.02125508340575122 WHEN ((t2.c71)-('P-^]a꾩l(]')) THEN vt1.c0 WHEN CASE vt1.c0  WHEN t2.c0 THEN '-584977757' WHEN 0.18380602277982594 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END THEN 0.8936305227143809 COLLATE BINARY ELSE ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN t2 ON CASE WHEN CASE vt1.c1  WHEN '704963347' THEN vt1.c1 END THEN ((t2.c71) IS TRUE) END WHERE (((((((((((t2.c0)>(vt1.c0)))AND(((((0.9782370845801158)AND(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(vt1.c1 COLLATE BINARY))) ORDER BY CASE (('1877867287') IS TRUE)  WHEN (((x'', vt1.c0, t2.c0)) BETWEEN ((vt1.c0, t2.c0, vt1.c0)) AND ((vt1.c1, t2.c0, '693498274'))) THEN 0.02125508340575122 WHEN ((t2.c71)-('P-^]a꾩l(]')) THEN vt1.c0 WHEN CASE vt1.c0  WHEN t2.c0 THEN '-584977757' WHEN 0.18380602277982594 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END THEN 0.8936305227143809 COLLATE BINARY ELSE ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c0)>(vt1.c0)))AND(((((0.9782370845801158)AND(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN t2 ON CASE WHEN CASE vt1.c1  WHEN '704963347' THEN vt1.c1 END THEN ((t2.c71) IS TRUE) END ORDER BY CASE (('1877867287') IS TRUE)  WHEN (((x'', vt1.c0, t2.c0)) BETWEEN ((vt1.c0, t2.c0, vt1.c0)) AND ((vt1.c1, t2.c0, '693498274'))) THEN 0.02125508340575122 WHEN ((t2.c71)-('P-^]a꾩l(]')) THEN vt1.c0 WHEN CASE vt1.c0  WHEN t2.c0 THEN '-584977757' WHEN 0.18380602277982594 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END THEN 0.8936305227143809 COLLATE BINARY ELSE ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN t2 ON CASE WHEN CASE vt1.c1  WHEN '704963347' THEN vt1.c1 END THEN ((t2.c71) IS TRUE) END WHERE (((((((((((t2.c0)>(vt1.c0)))AND(((((0.9782370845801158)AND(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (t2.c0) AND (t2.c71)))))AND(vt1.c1 COLLATE BINARY))) ORDER BY CASE (('1877867287') IS TRUE)  WHEN (((x'', vt1.c0, t2.c0)) BETWEEN ((vt1.c0, t2.c0, vt1.c0)) AND ((vt1.c1, t2.c0, '693498274'))) THEN 0.02125508340575122 WHEN ((t2.c71)-('P-^]a꾩l(]')) THEN vt1.c0 WHEN CASE vt1.c0  WHEN t2.c0 THEN '-584977757' WHEN 0.18380602277982594 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END THEN 0.8936305227143809 COLLATE BINARY ELSE ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (t2.c71 COLLATE NOCASE) AND (((vt1.c0) NOT BETWEEN ('') AND (t2.c71))))) ORDER BY (((t2.c0) IS TRUE) IN ()) ASC, CASE WHEN ((t2.c0) IS TRUE) THEN ((vt1.c0) BETWEEN ('-1751219254') AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (t2.c71 COLLATE NOCASE) AND (((vt1.c0) NOT BETWEEN ('') AND (t2.c71))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY (((t2.c0) IS TRUE) IN ()) ASC, CASE WHEN ((t2.c0) IS TRUE) THEN ((vt1.c0) BETWEEN ('-1751219254') AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (t2.c71 COLLATE NOCASE) AND (((vt1.c0) NOT BETWEEN ('') AND (t2.c71))))) ORDER BY (((t2.c0) IS TRUE) IN ()) ASC, CASE WHEN ((t2.c0) IS TRUE) THEN ((vt1.c0) BETWEEN ('-1751219254') AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (t2.c71 COLLATE NOCASE) AND (((vt1.c0) NOT BETWEEN ('') AND (t2.c71))))) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY (((t2.c0) IS TRUE) IN ()) ASC, CASE WHEN ((t2.c0) IS TRUE) THEN ((vt1.c0) BETWEEN ('-1751219254') AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (t2.c71 COLLATE NOCASE) AND (((vt1.c0) NOT BETWEEN ('') AND (t2.c71))))) ORDER BY (((t2.c0) IS TRUE) IN ()) ASC, CASE WHEN ((t2.c0) IS TRUE) THEN ((vt1.c0) BETWEEN ('-1751219254') AND (vt1.c0)) END;
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM);
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, t2 CROSS JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) WHERE ((((t2.c71, 0.18380602277982594, 0.18380602277982594)) NOT BETWEEN (((+ (vt1.c0)), (((t2.c0))!=((vt1.c0))), ((NULL)<=(vt1.c1)))) AND ((((t2.c0)LIKE(vt1.c0)), ((vt1.c1)IS(vt1.c0)), vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c71, 0.18380602277982594, 0.18380602277982594)) NOT BETWEEN (((+ (vt1.c0)), (((t2.c0))!=((vt1.c0))), ((NULL)<=(vt1.c1)))) AND ((((t2.c0)LIKE(vt1.c0)), ((vt1.c1)IS(vt1.c0)), vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt1, t2 CROSS JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) WHERE ((((t2.c71, 0.18380602277982594, 0.18380602277982594)) NOT BETWEEN (((+ (vt1.c0)), (((t2.c0))!=((vt1.c0))), ((NULL)<=(vt1.c1)))) AND ((((t2.c0)LIKE(vt1.c0)), ((vt1.c1)IS(vt1.c0)), vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c71, 0.18380602277982594, 0.18380602277982594)) NOT BETWEEN (((+ (vt1.c0)), (((t2.c0))!=((vt1.c0))), ((NULL)<=(vt1.c1)))) AND ((((t2.c0)LIKE(vt1.c0)), ((vt1.c1)IS(vt1.c0)), vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt1, t2 CROSS JOIN t0 ON (t0.c0 COLLATE RTRIM IN ()) WHERE ((((t2.c71, 0.18380602277982594, 0.18380602277982594)) NOT BETWEEN (((+ (vt1.c0)), (((t2.c0))!=((vt1.c0))), ((NULL)<=(vt1.c1)))) AND ((((t2.c0)LIKE(vt1.c0)), ((vt1.c1)IS(vt1.c0)), vt1.c1 COLLATE NOCASE))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((vt1.c1) NOTNULL))AND(((t2.c71)==('%S')))) INNER JOIN vt1 ON ((t0.c0)==(t2.c0)) COLLATE RTRIM WHERE ((+ (SQLITE_COMPILEOPTION_GET(t2.c71))));
SELECT SUM(count) FROM (SELECT (((+ (SQLITE_COMPILEOPTION_GET(t2.c71)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON ((((vt1.c1) NOTNULL))AND(((t2.c71)=('%S')))) INNER JOIN vt1 ON ((t0.c0)=(t2.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((vt1.c1) NOTNULL))AND(((t2.c71)==('%S')))) INNER JOIN vt1 ON ((t0.c0)==(t2.c0)) COLLATE RTRIM WHERE ((+ (SQLITE_COMPILEOPTION_GET(t2.c71))));
SELECT SUM(count) FROM (SELECT (((+ (SQLITE_COMPILEOPTION_GET(t2.c71)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON ((((vt1.c1) NOTNULL))AND(((t2.c71)=('%S')))) INNER JOIN vt1 ON ((t0.c0)=(t2.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE WHEN t2.c0 THEN t2.c0 COLLATE NOCASE ELSE CASE WHEN t2.c71 THEN vt1.c1 WHEN '' THEN x'9c378aa3' WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t2.c71 WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END END) ORDER BY (((vt1.c1, vt1.c0, t0.c0, t2.c0, t2.c0)) NOT BETWEEN ((((vt1.c0)||(vt1.c1)), RTRIM(vt1.c0), CASE WHEN vt1.c0 THEN t2.c0 ELSE vt1.c1 END, (((t2.c71)) BETWEEN ((t0.c0)) AND ((t2.c0))), ((t0.c0)LIKE(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT), (((t2.c71))<=((t2.c71))), NULL COLLATE NOCASE, (((t2.c0, vt1.c0, x''))<=((t2.c0, vt1.c1, t0.c0))), ((vt1.c1)>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c0 THEN t2.c0 COLLATE NOCASE ELSE CASE WHEN t2.c71 THEN vt1.c1 WHEN '' THEN x'9c378aa3' WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t2.c71 WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END END) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((vt1.c1, vt1.c0, t0.c0, t2.c0, t2.c0)) NOT BETWEEN ((((vt1.c0)||(vt1.c1)), RTRIM(vt1.c0), CASE WHEN vt1.c0 THEN t2.c0 ELSE vt1.c1 END, (((t2.c71)) BETWEEN ((t0.c0)) AND ((t2.c0))), ((t0.c0)LIKE(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT), (((t2.c71))<=((t2.c71))), NULL COLLATE NOCASE, (((t2.c0, vt1.c0, x''))<=((t2.c0, vt1.c1, t0.c0))), ((vt1.c1)>(vt1.c1))))));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE WHEN t2.c0 THEN t2.c0 COLLATE NOCASE ELSE CASE WHEN t2.c71 THEN vt1.c1 WHEN '' THEN x'9c378aa3' WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t2.c71 WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END END) ORDER BY (((vt1.c1, vt1.c0, t0.c0, t2.c0, t2.c0)) NOT BETWEEN ((((vt1.c0)||(vt1.c1)), RTRIM(vt1.c0), CASE WHEN vt1.c0 THEN t2.c0 ELSE vt1.c1 END, (((t2.c71)) BETWEEN ((t0.c0)) AND ((t2.c0))), ((t0.c0)LIKE(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT), (((t2.c71))<=((t2.c71))), NULL COLLATE NOCASE, (((t2.c0, vt1.c0, x''))<=((t2.c0, vt1.c1, t0.c0))), ((vt1.c1)>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c0 THEN t2.c0 COLLATE NOCASE ELSE CASE WHEN t2.c71 THEN vt1.c1 WHEN '' THEN x'9c378aa3' WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t2.c71 WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END END) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY (((vt1.c1, vt1.c0, t0.c0, t2.c0, t2.c0)) NOT BETWEEN ((((vt1.c0)||(vt1.c1)), RTRIM(vt1.c0), CASE WHEN vt1.c0 THEN t2.c0 ELSE vt1.c1 END, (((t2.c71)) BETWEEN ((t0.c0)) AND ((t2.c0))), ((t0.c0)LIKE(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT), (((t2.c71))<=((t2.c71))), NULL COLLATE NOCASE, (((t2.c0, vt1.c0, x''))<=((t2.c0, vt1.c1, t0.c0))), ((vt1.c1)>(vt1.c1))))));
SELECT COUNT(*) FROM t0, vt1, t2 WHERE (CASE WHEN t2.c0 THEN t2.c0 COLLATE NOCASE ELSE CASE WHEN t2.c71 THEN vt1.c1 WHEN '' THEN x'9c378aa3' WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t2.c71 WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END END) ORDER BY (((vt1.c1, vt1.c0, t0.c0, t2.c0, t2.c0)) NOT BETWEEN ((((vt1.c0)||(vt1.c1)), RTRIM(vt1.c0), CASE WHEN vt1.c0 THEN t2.c0 ELSE vt1.c1 END, (((t2.c71)) BETWEEN ((t0.c0)) AND ((t2.c0))), ((t0.c0)LIKE(vt1.c1)))) AND ((CAST(vt1.c0 AS TEXT), (((t2.c71))<=((t2.c71))), NULL COLLATE NOCASE, (((t2.c0, vt1.c0, x''))<=((t2.c0, vt1.c1, t0.c0))), ((vt1.c1)>(vt1.c1)))));
SELECT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY TYPEOF(((((t0.c0)OR(t0.c0)))AND(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt1 ORDER BY TYPEOF(((((t0.c0)OR(t0.c0)))AND(t0.c0))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY TYPEOF(((((t0.c0)OR(t0.c0)))AND(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM t0, vt1 ORDER BY TYPEOF(((((t0.c0)OR(t0.c0)))AND(t0.c0))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY TYPEOF(((((t0.c0)OR(t0.c0)))AND(t0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t2 WHERE (((((t2.c71)|(559722458)))||(((t2.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t2.c71)|(559722458)))||(((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c71)|(559722458)))||(((t2.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t2.c71)|(559722458)))||(((t2.c0) IS FALSE)))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c71)|(559722458)))||(((t2.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((+ (0X1507ed2a)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((+ (0X1507ed2a)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'' END))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((+ (0X1507ed2a)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((+ (0X1507ed2a)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'' END))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((+ (0X1507ed2a)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'' END)));
SELECT COUNT(*) FROM t2 WHERE (((((((((((t2.c0)OR(NULL)))AND(t2.c71)))AND(t2.c71)))OR(t2.c71)))LIKE(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) ORDER BY t2.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t2.c0)OR(NULL)))AND(t2.c71)))AND(t2.c71)))OR(t2.c71)))LIKE(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY t2.c0 DESC);
SELECT COUNT(*) FROM t2 WHERE (((((((((((t2.c0)OR(NULL)))AND(t2.c71)))AND(t2.c71)))OR(t2.c71)))LIKE(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) ORDER BY t2.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t2.c0)OR(NULL)))AND(t2.c71)))AND(t2.c71)))OR(t2.c71)))LIKE(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY t2.c0 DESC);
SELECT COUNT(*) FROM t2 WHERE (((((((((((t2.c0)OR(NULL)))AND(t2.c71)))AND(t2.c71)))OR(t2.c71)))LIKE(((((t2.c0)OR(t2.c71)))AND(t2.c0))))) ORDER BY t2.c0 DESC;
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1, t2 WHERE (((t2.c71) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t2.c71) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1, t2 WHERE (((t2.c71) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t2.c71) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, t2);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1, t2 WHERE (((t2.c71) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 INNER JOIN t2 ON ((((0.5388844258068318) NOT BETWEEN (t2.c71) AND (vt1.c1))) ISNULL) WHERE (((vt1.c0)IS NOT(t2.c71)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS NOT(t2.c71)) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN t2 ON ((((0.5388844258068318) NOT BETWEEN (t2.c71) AND (vt1.c1))) ISNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t2 ON ((((0.5388844258068318) NOT BETWEEN (t2.c71) AND (vt1.c1))) ISNULL) WHERE (((vt1.c0)IS NOT(t2.c71)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS NOT(t2.c71)) COLLATE BINARY) IS TRUE)  as count FROM vt1 INNER JOIN t2 ON ((((0.5388844258068318) NOT BETWEEN (t2.c71) AND (vt1.c1))) ISNULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t2 ON ((((0.5388844258068318) NOT BETWEEN (t2.c71) AND (vt1.c1))) ISNULL) WHERE (((vt1.c0)IS NOT(t2.c71)) COLLATE BINARY);
SELECT * FROM t2 WHERE (CAST(CAST(t2.c71 AS INTEGER) AS NUMERIC)) ORDER BY (NOT (TYPEOF(t2.c71))), ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY ASC  NULLS LAST, (((((((((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t2.c71))))AND(((t2.c71)IS(t2.c71)))))AND(json_array(t2.c71, t2.c71))))AND((t2.c0 IN ()))))AND(CASE t2.c0  WHEN t2.c71 THEN t2.c71 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t2.c71 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t2 ORDER BY (NOT (TYPEOF(t2.c71))), ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY ASC  NULLS LAST, (((((((((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t2.c71))))AND(((t2.c71)IS(t2.c71)))))AND(json_array(t2.c71, t2.c71))))AND((t2.c0 IN ()))))AND(CASE t2.c0  WHEN t2.c71 THEN t2.c71 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END))  NULLS LAST);
SELECT * FROM t2 WHERE (CAST(CAST(t2.c71 AS INTEGER) AS NUMERIC)) ORDER BY (NOT (TYPEOF(t2.c71))), ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY ASC  NULLS LAST, (((((((((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t2.c71))))AND(((t2.c71)IS(t2.c71)))))AND(json_array(t2.c71, t2.c71))))AND((t2.c0 IN ()))))AND(CASE t2.c0  WHEN t2.c71 THEN t2.c71 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t2.c71 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t2 ORDER BY (NOT (TYPEOF(t2.c71))), ((t2.c71) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY ASC  NULLS LAST, (((((((((((t2.c71)) NOT BETWEEN ((t2.c0)) AND ((t2.c71))))AND(((t2.c71)IS(t2.c71)))))AND(json_array(t2.c71, t2.c71))))AND((t2.c0 IN ()))))AND(CASE t2.c0  WHEN t2.c71 THEN t2.c71 WHEN t2.c71 THEN x'' WHEN t2.c71 THEN t2.c71 ELSE t2.c0 END))  NULLS LAST);
SELECT ALL * FROM t2, t0 WHERE (CAST(COALESCE(x'', t0.c0) AS BLOB)) ORDER BY ((((CASE WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN 0.11131944306471797 THEN t0.c0 END)OR(((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c71)))))AND(((t0.c0)==(t0.c0)))) DESC, UPPER((NOT (t2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(x'', t0.c0) AS BLOB)) IS TRUE)  as count FROM t2, t0 ORDER BY ((((CASE WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN 0.11131944306471797 THEN t0.c0 END)OR(((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c71)))))AND(((t0.c0)=(t0.c0)))) DESC, UPPER((NOT (t2.c0))) DESC);
SELECT ALL * FROM t2, t0 WHERE (CAST(COALESCE(x'', t0.c0) AS BLOB)) ORDER BY ((((CASE WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN 0.11131944306471797 THEN t0.c0 END)OR(((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c71)))))AND(((t0.c0)==(t0.c0)))) DESC, UPPER((NOT (t2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(x'', t0.c0) AS BLOB)) IS TRUE)  as count FROM t2, t0 ORDER BY ((((CASE WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN 0.11131944306471797 THEN t0.c0 END)OR(((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c71)))))AND(((t0.c0)=(t0.c0)))) DESC, UPPER((NOT (t2.c0))) DESC);
SELECT ALL * FROM t2, t0 WHERE (CAST(COALESCE(x'', t0.c0) AS BLOB)) ORDER BY ((((CASE WHEN t0.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c0 WHEN 0.11131944306471797 THEN t0.c0 END)OR(((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c71)))))AND(((t0.c0)==(t0.c0)))) DESC, UPPER((NOT (t2.c0))) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c71) IS TRUE)) ISNULL) WHERE ((t2.c71 COLLATE BINARY IN (LTRIM(t2.c0))));
SELECT SUM(count) FROM (SELECT (((t2.c71 COLLATE BINARY IN (LTRIM(t2.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c71) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c71) IS TRUE)) ISNULL) WHERE ((t2.c71 COLLATE BINARY IN (LTRIM(t2.c0))));
SELECT SUM(count) FROM (SELECT (((t2.c71 COLLATE BINARY IN (LTRIM(t2.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c71) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN t2 ON ((((t2.c71) IS TRUE)) ISNULL) WHERE ((t2.c71 COLLATE BINARY IN (LTRIM(t2.c0))));
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END))<=((CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c0 THEN vt1.c0 END))<=((CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END)))) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END))<=((CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c0 THEN vt1.c0 END))<=((CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END)))) IS TRUE)  as count FROM t2, t0, vt1);
SELECT ALL COUNT(*) FROM t2, t0, vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END))<=((CASE WHEN t2.c0 THEN t2.c71 ELSE t2.c71 END))));
SELECT * FROM vt1, t0 WHERE (((((((vt1.c1) NOT NULL))OR((x'' IN ()))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOT NULL))OR((x'' IN ()))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((((vt1.c1) NOT NULL))OR((x'' IN ()))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOT NULL))OR((x'' IN ()))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((((vt1.c1) NOT NULL))OR((x'' IN ()))))OR((vt1.c0 IN ()))));
SELECT COUNT(*) FROM t0, t2 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, t2.c0) ELSE CAST(vt1.c1 AS REAL) END WHERE (((((t2.c71)<(t2.c71)))*(CASE t2.c0  WHEN t2.c0 THEN t2.c71 ELSE t0.c0 END))) ORDER BY ((CAST(vt1.c1 AS INTEGER))*((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t2.c71)<(t2.c71)))*(CASE t2.c0  WHEN t2.c0 THEN t2.c71 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, t2 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, t2.c0) ELSE CAST(vt1.c1 AS REAL) END ORDER BY ((CAST(vt1.c1 AS INTEGER))*((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, t2.c0) ELSE CAST(vt1.c1 AS REAL) END WHERE (((((t2.c71)<(t2.c71)))*(CASE t2.c0  WHEN t2.c0 THEN t2.c71 ELSE t0.c0 END))) ORDER BY ((CAST(vt1.c1 AS INTEGER))*((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t2.c71)<(t2.c71)))*(CASE t2.c0  WHEN t2.c0 THEN t2.c71 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, t2 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, t2.c0) ELSE CAST(vt1.c1 AS REAL) END ORDER BY ((CAST(vt1.c1 AS INTEGER))*((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c0)<(vt1.c1)) THEN NULLIF(DISTINCT vt1.c0, t2.c0) ELSE CAST(vt1.c1 AS REAL) END WHERE (((((t2.c71)<(t2.c71)))*(CASE t2.c0  WHEN t2.c0 THEN t2.c71 ELSE t0.c0 END))) ORDER BY ((CAST(vt1.c1 AS INTEGER))*((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM t2 WHERE ((((t2.c0)) BETWEEN (((0Xffffffff95c00868 IN ()))) AND ((((t2.c0)*(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0)) BETWEEN (((0xffffffff95c00868 IN ()))) AND ((((t2.c0)*(t2.c0)))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((((t2.c0)) BETWEEN (((0Xffffffff95c00868 IN ()))) AND ((((t2.c0)*(t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0)) BETWEEN (((0xffffffff95c00868 IN ()))) AND ((((t2.c0)*(t2.c0)))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE ((((t2.c0)) BETWEEN (((0Xffffffff95c00868 IN ()))) AND ((((t2.c0)*(t2.c0))))));
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT)))>((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS TEXT)))>((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT)))>((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS TEXT)))>((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((CAST(t0.c0 AS TEXT)))>((t0.c0))));
SELECT ALL * FROM t2, t0, vt1 WHERE (CHANGES()) ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN (((t0.c0))<((t2.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN (((t0.c0))<((t2.c0))) END);
SELECT ALL * FROM t2, t0, vt1 WHERE (CHANGES()) ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN (((t0.c0))<((t2.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t2, t0, vt1 ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN (((t0.c0))<((t2.c0))) END);
SELECT ALL * FROM t2, t0, vt1 WHERE (CHANGES()) ORDER BY CASE WHEN vt1.c1 COLLATE BINARY THEN (((t0.c0))<((t2.c0))) END;
SELECT COUNT(*) FROM t0, t2 WHERE (COALESCE(DISTINCT t0.c0 COLLATE BINARY, ((t2.c71)IS(t2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t0.c0 COLLATE BINARY, ((t2.c71)IS(t2.c0)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (COALESCE(DISTINCT t0.c0 COLLATE BINARY, ((t2.c71)IS(t2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t0.c0 COLLATE BINARY, ((t2.c71)IS(t2.c0)))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (COALESCE(DISTINCT t0.c0 COLLATE BINARY, ((t2.c71)IS(t2.c0))));
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 ELSE vt1.c0 END))) ORDER BY (((~ (vt1.c1)))>(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c1)))>(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 ELSE vt1.c0 END))) ORDER BY (((~ (vt1.c1)))>(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c1)))>(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN ((vt1.c1 IN (vt1.c1))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 ELSE vt1.c0 END))) ORDER BY (((~ (vt1.c1)))>(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0, t2 WHERE (((((t0.c0)>(t2.c0)))/((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t2.c0)))/((+ (t2.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((t0.c0)>(t2.c0)))/((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t2.c0)))/((+ (t2.c0))))) IS TRUE)  as count FROM t0, t2);
SELECT COUNT(*) FROM t0, t2 WHERE (((((t0.c0)>(t2.c0)))/((+ (t2.c0)))));
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN vt1 ON '.2.,wx\r' WHERE (((((((vt1.c1)AND(t2.c71)))AND(NULL)))IS NOT(((t2.c71)*(t2.c0))))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(t2.c71)))AND(NULL)))IS NOT(((t2.c71)*(t2.c0))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON '.2.,wx\r' ORDER BY '' ASC);
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN vt1 ON '.2.,wx\r' WHERE (((((((vt1.c1)AND(t2.c71)))AND(NULL)))IS NOT(((t2.c71)*(t2.c0))))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(t2.c71)))AND(NULL)))IS NOT(((t2.c71)*(t2.c0))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON '.2.,wx\r' ORDER BY '' ASC);
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN vt1 ON '.2.,wx\r' WHERE (((((((vt1.c1)AND(t2.c71)))AND(NULL)))IS NOT(((t2.c71)*(t2.c0))))) ORDER BY '' ASC;
SELECT * FROM t2 WHERE (('1e500000' IN ())) ORDER BY ((t2.c71 COLLATE NOCASE)*((((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('1e500000' IN ())) IS TRUE)  as count FROM t2 ORDER BY ((t2.c71 COLLATE NOCASE)*((((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71))))) DESC  NULLS FIRST);
SELECT * FROM t2 WHERE (('1e500000' IN ())) ORDER BY ((t2.c71 COLLATE NOCASE)*((((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('1e500000' IN ())) IS TRUE)  as count FROM t2 ORDER BY ((t2.c71 COLLATE NOCASE)*((((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71))))) DESC  NULLS FIRST);
SELECT * FROM t2 WHERE (('1e500000' IN ())) ORDER BY ((t2.c71 COLLATE NOCASE)*((((t2.c71, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((CAST(t2.c71 AS TEXT)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (t2.c71) AND (vt1.c0))))) ORDER BY CAST((((t2.c71))==((vt1.c1))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c71 AS TEXT)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (t2.c71) AND (vt1.c0))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY CAST((((t2.c71))=((vt1.c1))) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((CAST(t2.c71 AS TEXT)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (t2.c71) AND (vt1.c0))))) ORDER BY CAST((((t2.c71))==((vt1.c1))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c71 AS TEXT)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (t2.c71) AND (vt1.c0))))) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY CAST((((t2.c71))=((vt1.c1))) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM t0, t2, vt1 WHERE (((CAST(t2.c71 AS TEXT)) BETWEEN ((t0.c0 IN ())) AND (((t2.c0) BETWEEN (t2.c71) AND (vt1.c0))))) ORDER BY CAST((((t2.c71))==((vt1.c1))) AS NUMERIC) DESC;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c0 WHEN 0.39245316752811343 THEN vt1.c1 WHEN 0.8301778005441955 THEN vt1.c1 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c1 THEN vt1.c0 WHEN 0.39245316752811343 THEN vt1.c1 WHEN 0.8301778005441955 THEN vt1.c1 END IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c0 WHEN 0.39245316752811343 THEN vt1.c1 WHEN 0.8301778005441955 THEN vt1.c1 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c1 THEN vt1.c0 WHEN 0.39245316752811343 THEN vt1.c1 WHEN 0.8301778005441955 THEN vt1.c1 END IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c0 WHEN 0.39245316752811343 THEN vt1.c1 WHEN 0.8301778005441955 THEN vt1.c1 END IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t2, vt1 FULL OUTER JOIN t0 ON x'2eb9' WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) IS TRUE)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) IS TRUE)) IS TRUE)  as count FROM t2, vt1 FULL OUTER JOIN t0 ON x'2eb9' ORDER BY NULL);
SELECT COUNT(*) FROM t2, vt1 FULL OUTER JOIN t0 ON x'2eb9' WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) IS TRUE)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) IS TRUE)) IS TRUE)  as count FROM t2, vt1 FULL OUTER JOIN t0 ON x'2eb9' ORDER BY NULL);
SELECT COUNT(*) FROM t2, vt1 FULL OUTER JOIN t0 ON x'2eb9' WHERE ((((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) IS TRUE)) ORDER BY NULL;
SELECT ALL * FROM vt1, t2 WHERE ((((vt1.c0))=((t2.c0)))) ORDER BY highlight(t2.c71, 19306942, t2.c71, NULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))=((t2.c0)))) IS TRUE)  as count FROM vt1, t2 ORDER BY highlight(t2.c71, 19306942, t2.c71, NULL) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t2 WHERE ((((vt1.c0))=((t2.c0)))) ORDER BY highlight(t2.c71, 19306942, t2.c71, NULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))=((t2.c0)))) IS TRUE)  as count FROM vt1, t2 ORDER BY highlight(t2.c71, 19306942, t2.c71, NULL) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((CAST(vt1.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((CAST(vt1.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((CAST(vt1.c1 AS REAL) IN ()));
SELECT * FROM t2, t0 WHERE (((((t2.c71)OR(t0.c0)))AND(t2.c71)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71)OR(t0.c0)))AND(t2.c71)) COLLATE NOCASE) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE (((((t2.c71)OR(t0.c0)))AND(t2.c71)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c71)OR(t0.c0)))AND(t2.c71)) COLLATE NOCASE) IS TRUE)  as count FROM t2, t0);
SELECT * FROM t2, t0 WHERE (((((t2.c71)OR(t0.c0)))AND(t2.c71)) COLLATE NOCASE);
SELECT * FROM t0 CROSS JOIN vt1 ON ((vt1.c0)=(t0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t2 ON (((vt1.c1 IN (vt1.c1))) ISNULL) WHERE ((- (0.49443242479212957)) COLLATE BINARY) ORDER BY ((((((t2.c0)GLOB(t0.c0)))OR(NULL)))OR((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((- (0.49443242479212957)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((vt1.c0)==(t0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t2 ON (((vt1.c1 IN (vt1.c1))) ISNULL) ORDER BY ((((((t2.c0)GLOB(t0.c0)))OR(NULL)))OR((vt1.c1 IN ()))));
SELECT * FROM t0 CROSS JOIN vt1 ON ((vt1.c0)=(t0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t2 ON (((vt1.c1 IN (vt1.c1))) ISNULL) WHERE ((- (0.49443242479212957)) COLLATE BINARY) ORDER BY ((((((t2.c0)GLOB(t0.c0)))OR(NULL)))OR((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((- (0.49443242479212957)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((vt1.c0)==(t0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t2 ON (((vt1.c1 IN (vt1.c1))) ISNULL) ORDER BY ((((((t2.c0)GLOB(t0.c0)))OR(NULL)))OR((vt1.c1 IN ()))));
SELECT * FROM t0 CROSS JOIN vt1 ON ((vt1.c0)=(t0.c0)) COLLATE NOCASE RIGHT OUTER JOIN t2 ON (((vt1.c1 IN (vt1.c1))) ISNULL) WHERE ((- (0.49443242479212957)) COLLATE BINARY) ORDER BY ((((((t2.c0)GLOB(t0.c0)))OR(NULL)))OR((vt1.c1 IN ())));
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((vt1.c0)<=(t2.c0)) COLLATE NOCASE WHERE (MAX((t2.c0 IN ()), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((MAX((t2.c0 IN ()), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, NULL COLLATE BINARY)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON ((vt1.c0)<=(t2.c0)) COLLATE NOCASE);
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((vt1.c0)<=(t2.c0)) COLLATE NOCASE WHERE (MAX((t2.c0 IN ()), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((MAX((t2.c0 IN ()), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, NULL COLLATE BINARY)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON ((vt1.c0)<=(t2.c0)) COLLATE NOCASE);
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((vt1.c0)<=(t2.c0)) COLLATE NOCASE WHERE (MAX((t2.c0 IN ()), CAST(vt1.c0 AS REAL), vt1.c0 COLLATE NOCASE, NULL COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((NOT (t2.c71)))<>(CAST(t2.c71 AS REAL)))) ORDER BY (((((t2.c71, t0.c0, t2.c71)) NOT BETWEEN ((0.9985461905319521, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71)))) BETWEEN ((+ (t0.c0))) AND (((((t2.c71)AND(t2.c0)))OR(t2.c71)))) ASC  NULLS LAST, ((((t2.c71)IS(t2.c0)))>>(((t2.c0) BETWEEN (t0.c0) AND (t2.c71)))), ((t0.c0 IN ()) IN ()), (((t2.c0)) NOT BETWEEN ((((t2.c0)LIKE(t2.c0)))) AND ((((t2.c0)LIKE(t2.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t2.c71)))<>(CAST(t2.c71 AS REAL)))) IS TRUE)  as count FROM t0, t2 ORDER BY (((((t2.c71, t0.c0, t2.c71)) NOT BETWEEN ((0.9985461905319521, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71)))) BETWEEN ((+ (t0.c0))) AND (((((t2.c71)AND(t2.c0)))OR(t2.c71)))) ASC  NULLS LAST, ((((t2.c71)IS(t2.c0)))>>(((t2.c0) BETWEEN (t0.c0) AND (t2.c71)))), ((t0.c0 IN ()) IN ()), (((t2.c0)) NOT BETWEEN ((((t2.c0)LIKE(t2.c0)))) AND ((((t2.c0)LIKE(t2.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((NOT (t2.c71)))<>(CAST(t2.c71 AS REAL)))) ORDER BY (((((t2.c71, t0.c0, t2.c71)) NOT BETWEEN ((0.9985461905319521, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71)))) BETWEEN ((+ (t0.c0))) AND (((((t2.c71)AND(t2.c0)))OR(t2.c71)))) ASC  NULLS LAST, ((((t2.c71)IS(t2.c0)))>>(((t2.c0) BETWEEN (t0.c0) AND (t2.c71)))), ((t0.c0 IN ()) IN ()), (((t2.c0)) NOT BETWEEN ((((t2.c0)LIKE(t2.c0)))) AND ((((t2.c0)LIKE(t2.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t2.c71)))<>(CAST(t2.c71 AS REAL)))) IS TRUE)  as count FROM t0, t2 ORDER BY (((((t2.c71, t0.c0, t2.c71)) NOT BETWEEN ((0.9985461905319521, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71)))) BETWEEN ((+ (t0.c0))) AND (((((t2.c71)AND(t2.c0)))OR(t2.c71)))) ASC  NULLS LAST, ((((t2.c71)IS(t2.c0)))>>(((t2.c0) BETWEEN (t0.c0) AND (t2.c71)))), ((t0.c0 IN ()) IN ()), (((t2.c0)) NOT BETWEEN ((((t2.c0)LIKE(t2.c0)))) AND ((((t2.c0)LIKE(t2.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((NOT (t2.c71)))<>(CAST(t2.c71 AS REAL)))) ORDER BY (((((t2.c71, t0.c0, t2.c71)) NOT BETWEEN ((0.9985461905319521, t2.c0, t2.c0)) AND ((t2.c0, t2.c71, t2.c71)))) BETWEEN ((+ (t0.c0))) AND (((((t2.c71)AND(t2.c0)))OR(t2.c71)))) ASC  NULLS LAST, ((((t2.c71)IS(t2.c0)))>>(((t2.c0) BETWEEN (t0.c0) AND (t2.c71)))), ((t0.c0 IN ()) IN ()), (((t2.c0)) NOT BETWEEN ((((t2.c0)LIKE(t2.c0)))) AND ((((t2.c0)LIKE(t2.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0, vt1, t2 WHERE (0.969040880574264) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.969040880574264) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY t0.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt1, t2 WHERE (0.969040880574264) ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.969040880574264) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY t0.c0  NULLS FIRST);
SELECT ALL * FROM t0, vt1, t2 WHERE (0.969040880574264) ORDER BY t0.c0  NULLS FIRST;
SELECT ALL * FROM t2, vt1 CROSS JOIN t0 ON ((((t2.c71)<=(t2.c71))) BETWEEN ((NOT (vt1.c0))) AND (NULL)) WHERE (CAST(CAST(t2.c71 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c71 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t2, vt1 NOT INDEXED CROSS JOIN t0 ON ((((t2.c71)<=(t2.c71))) BETWEEN ((NOT (vt1.c0))) AND (NULL)));
SELECT ALL * FROM t2, vt1 CROSS JOIN t0 ON ((((t2.c71)<=(t2.c71))) BETWEEN ((NOT (vt1.c0))) AND (NULL)) WHERE (CAST(CAST(t2.c71 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t2.c71 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t2, vt1 NOT INDEXED CROSS JOIN t0 ON ((((t2.c71)<=(t2.c71))) BETWEEN ((NOT (vt1.c0))) AND (NULL)));
SELECT ALL * FROM t2, vt1 CROSS JOIN t0 ON ((((t2.c71)<=(t2.c71))) BETWEEN ((NOT (vt1.c0))) AND (NULL)) WHERE (CAST(CAST(t2.c71 AS INTEGER) AS REAL));
SELECT * FROM vt1, t0 WHERE (vt1.c0) ORDER BY CAST(vt1.c1 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(vt1.c1 AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (vt1.c0) ORDER BY CAST(vt1.c1 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(vt1.c1 AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt1, t0 WHERE (vt1.c0) ORDER BY CAST(vt1.c1 AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt1, t0, t2 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t0, t2);
SELECT * FROM vt1, t0, t2 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t0, t2);
SELECT * FROM vt1, t0, t2 WHERE (vt1.c1);
SELECT * FROM t0 RIGHT OUTER JOIN t2 ON (((((((((~ (t0.c0)))OR(vt1.c1 COLLATE BINARY)))OR(((t2.c0) NOT BETWEEN (vt1.c0) AND (t2.c71)))))AND((vt1.c1 IN ()))))OR(((t2.c0)>=(vt1.c1)))) CROSS JOIN vt1 ON (vt1.c1 IN ()) COLLATE NOCASE WHERE (((t2.c71) IS FALSE)) ORDER BY (((t2.c0)) BETWEEN (((~ (vt1.c0)))) AND (((((NULL))<((t0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t2.c71) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON (((((((((~ (t0.c0)))OR(vt1.c1 COLLATE BINARY)))OR(((t2.c0) NOT BETWEEN (vt1.c0) AND (t2.c71)))))AND((vt1.c1 IN ()))))OR(((t2.c0)>=(vt1.c1)))) CROSS JOIN vt1 ON (vt1.c1 IN ()) COLLATE NOCASE ORDER BY (((t2.c0)) BETWEEN (((~ (vt1.c0)))) AND (((((NULL))<((t0.c0)))))) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN t2 ON (((((((((~ (t0.c0)))OR(vt1.c1 COLLATE BINARY)))OR(((t2.c0) NOT BETWEEN (vt1.c0) AND (t2.c71)))))AND((vt1.c1 IN ()))))OR(((t2.c0)>=(vt1.c1)))) CROSS JOIN vt1 ON (vt1.c1 IN ()) COLLATE NOCASE WHERE (((t2.c71) IS FALSE)) ORDER BY (((t2.c0)) BETWEEN (((~ (vt1.c0)))) AND (((((NULL))<((t0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t2.c71) IS FALSE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t2 ON (((((((((~ (t0.c0)))OR(vt1.c1 COLLATE BINARY)))OR(((t2.c0) NOT BETWEEN (vt1.c0) AND (t2.c71)))))AND((vt1.c1 IN ()))))OR(((t2.c0)>=(vt1.c1)))) CROSS JOIN vt1 ON (vt1.c1 IN ()) COLLATE NOCASE ORDER BY (((t2.c0)) BETWEEN (((~ (vt1.c0)))) AND (((((NULL))<((t0.c0)))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((NOT (vt1.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c1))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((NOT (vt1.c1))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c1))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((NOT (vt1.c1))) NOT NULL) DESC  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN t2 ON ((LOWER(DISTINCT '扝wgeP>BI'))>(575435773)) WHERE ((- (t0.c0)) COLLATE BINARY) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((LOWER(DISTINCT '扝wgeP>BI'))>(575435773)) ORDER BY (NOT (NULL)));
SELECT * FROM t0 LEFT OUTER JOIN t2 ON ((LOWER(DISTINCT '扝wgeP>BI'))>(575435773)) WHERE ((- (t0.c0)) COLLATE BINARY) ORDER BY (NOT (NULL));
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON ((LOWER(DISTINCT '扝wgeP>BI'))>(575435773)) ORDER BY (NOT (NULL)));
SELECT * FROM t0 LEFT OUTER JOIN t2 ON ((LOWER(DISTINCT '扝wgeP>BI'))>(575435773)) WHERE ((- (t0.c0)) COLLATE BINARY) ORDER BY (NOT (NULL));
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((((t2.c71) IS FALSE))|(((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))) WHERE ((t2.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON ((((t2.c71) IS FALSE))|(((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((((t2.c71) IS FALSE))|(((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))) WHERE ((t2.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t2.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON ((((t2.c71) IS FALSE))|(((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((((t2.c71) IS FALSE))|(((t2.c0) BETWEEN (t2.c71) AND (t2.c0)))) WHERE ((t2.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, t0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1, t0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1, t0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL);
SELECT * FROM t2, vt1, t0 WHERE (UPPER(((vt1.c0)IS NOT(x'8201')))) ORDER BY CAST(((((t2.c0)OR(t2.c0)))OR('0.9251769880694091')) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c0)IS NOT(x'8201')))) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY CAST(((((t2.c0)OR(t2.c0)))OR('0.9251769880694091')) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t2, vt1, t0 WHERE (UPPER(((vt1.c0)IS NOT(x'8201')))) ORDER BY CAST(((((t2.c0)OR(t2.c0)))OR('0.9251769880694091')) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c0)IS NOT(x'8201')))) IS TRUE)  as count FROM t2, vt1, t0 ORDER BY CAST(((((t2.c0)OR(t2.c0)))OR('0.9251769880694091')) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t2, vt1, t0 WHERE (UPPER(((vt1.c0)IS NOT(x'8201')))) ORDER BY CAST(((((t2.c0)OR(t2.c0)))OR('0.9251769880694091')) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((CASE WHEN -8.22633582E8 THEN t0.c0 END)||((((vt1.c0, t0.c0, vt1.c1, t0.c0, t2.c0)) BETWEEN ((t0.c0, t0.c0, t2.c71, vt1.c1, t2.c0)) AND ((t2.c0, t2.c0, t2.c71, t0.c0, t0.c0))))) FULL OUTER JOIN t2 ON CASE vt1.c0  WHEN t2.c71 THEN t2.c71 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t2.c71 END COLLATE NOCASE WHERE ((((((t2.c71))<((t2.c71)))) NOT BETWEEN ((((vt1.c0))!=((vt1.c1)))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c71))<((t2.c71)))) NOT BETWEEN ((((vt1.c0))<>((vt1.c1)))) AND (t0.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((CASE WHEN -8.22633582E8 THEN t0.c0 END)||((((vt1.c0, t0.c0, vt1.c1, t0.c0, t2.c0)) BETWEEN ((t0.c0, t0.c0, t2.c71, vt1.c1, t2.c0)) AND ((t2.c0, t2.c0, t2.c71, t0.c0, t0.c0))))) FULL OUTER JOIN t2 ON CASE vt1.c0  WHEN t2.c71 THEN t2.c71 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t2.c71 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ((CASE WHEN -8.22633582E8 THEN t0.c0 END)||((((vt1.c0, t0.c0, vt1.c1, t0.c0, t2.c0)) BETWEEN ((t0.c0, t0.c0, t2.c71, vt1.c1, t2.c0)) AND ((t2.c0, t2.c0, t2.c71, t0.c0, t0.c0))))) FULL OUTER JOIN t2 ON CASE vt1.c0  WHEN t2.c71 THEN t2.c71 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t2.c71 END COLLATE NOCASE WHERE ((((((t2.c71))<((t2.c71)))) NOT BETWEEN ((((vt1.c0))!=((vt1.c1)))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c71))<((t2.c71)))) NOT BETWEEN ((((vt1.c0))<>((vt1.c1)))) AND (t0.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((CASE WHEN -8.22633582E8 THEN t0.c0 END)||((((vt1.c0, t0.c0, vt1.c1, t0.c0, t2.c0)) BETWEEN ((t0.c0, t0.c0, t2.c71, vt1.c1, t2.c0)) AND ((t2.c0, t2.c0, t2.c71, t0.c0, t0.c0))))) FULL OUTER JOIN t2 ON CASE vt1.c0  WHEN t2.c71 THEN t2.c71 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN t0.c0 ELSE t2.c71 END COLLATE NOCASE);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON (NOT (((((((((NULL)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))) WHERE (((((((t2.c71)AND(t0.c0)))OR(t0.c0))) ISNULL)) ORDER BY ((((CASE t2.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c0 END)OR(0.5437709664491001)))OR(UPPER(DISTINCT t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c71)AND(t0.c0)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON (NOT (((((((((NULL)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))) ORDER BY ((((CASE t2.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c0 END)OR(0.5437709664491001)))OR(UPPER(DISTINCT t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON (NOT (((((((((NULL)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))) WHERE (((((((t2.c71)AND(t0.c0)))OR(t0.c0))) ISNULL)) ORDER BY ((((CASE t2.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c0 END)OR(0.5437709664491001)))OR(UPPER(DISTINCT t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t2.c71)AND(t0.c0)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t2 ON (NOT (((((((((NULL)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))) ORDER BY ((((CASE t2.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c0 END)OR(0.5437709664491001)))OR(UPPER(DISTINCT t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN t2 ON (NOT (((((((((NULL)OR(t2.c71)))OR(t2.c71)))AND(t2.c71)))AND(t0.c0)))) WHERE (((((((t2.c71)AND(t0.c0)))OR(t0.c0))) ISNULL)) ORDER BY ((((CASE t2.c0  WHEN t2.c71 THEN t0.c0 ELSE t2.c0 END)OR(0.5437709664491001)))OR(UPPER(DISTINCT t0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((t2.c0 COLLATE BINARY)>=(CASE t2.c71  WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END)));
SELECT SUM(count) FROM (SELECT ((((t2.c0 COLLATE BINARY)>=(CASE t2.c71  WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END))) IS TRUE)  as count FROM t2, t0, vt1);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((t2.c0 COLLATE BINARY)>=(CASE t2.c71  WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END)));
SELECT SUM(count) FROM (SELECT ((((t2.c0 COLLATE BINARY)>=(CASE t2.c71  WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END))) IS TRUE)  as count FROM t2, t0, vt1);
SELECT COUNT(*) FROM t2, t0, vt1 WHERE (((t2.c0 COLLATE BINARY)>=(CASE t2.c71  WHEN vt1.c0 THEN t2.c0 ELSE t2.c71 END)));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON '0.6854031445197679' WHERE (CASE WHEN 7.39895045E8 THEN ((t0.c0) NOTNULL) ELSE ((vt1.c1)||(t0.c0)) END) ORDER BY ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 7.39895045E8 THEN ((t0.c0) NOTNULL) ELSE ((vt1.c1)||(t0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON '0.6854031445197679' ORDER BY ((+ (vt1.c0)) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON '0.6854031445197679' WHERE (CASE WHEN 7.39895045E8 THEN ((t0.c0) NOTNULL) ELSE ((vt1.c1)||(t0.c0)) END) ORDER BY ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 7.39895045E8 THEN ((t0.c0) NOTNULL) ELSE ((vt1.c1)||(t0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON '0.6854031445197679' ORDER BY ((+ (vt1.c0)) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON '0.6854031445197679' WHERE (CASE WHEN 7.39895045E8 THEN ((t0.c0) NOTNULL) ELSE ((vt1.c1)||(t0.c0)) END) ORDER BY ((+ (vt1.c0)) IN ());
SELECT ALL * FROM t2, t0 WHERE (t2.c0) ORDER BY CASE IFNULL(t2.c71, t2.c71)  WHEN ((t0.c0) BETWEEN (t2.c71) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2, t0 ORDER BY CASE IFNULL(t2.c71, t2.c71)  WHEN ((t0.c0) BETWEEN (t2.c71) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) END  NULLS FIRST);
SELECT ALL * FROM t2, t0 WHERE (t2.c0) ORDER BY CASE IFNULL(t2.c71, t2.c71)  WHEN ((t0.c0) BETWEEN (t2.c71) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2, t0 ORDER BY CASE IFNULL(t2.c71, t2.c71)  WHEN ((t0.c0) BETWEEN (t2.c71) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) END  NULLS FIRST);
SELECT ALL * FROM t2, t0 WHERE (t2.c0) ORDER BY CASE IFNULL(t2.c71, t2.c71)  WHEN ((t0.c0) BETWEEN (t2.c71) AND (t0.c0)) THEN ((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) END  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c71)-(t2.c71)) AS REAL) RIGHT OUTER JOIN t2 ON ((((0.5693726470513388)+(t2.c0)))>('1580610865')) WHERE ((((('+1', vt1.c1, vt1.c1))>((vt1.c0, t2.c0, t2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT (((((('+1', vt1.c1, vt1.c1))>((vt1.c0, t2.c0, t2.c0))) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c71)-(t2.c71)) AS REAL) RIGHT OUTER JOIN t2 ON ((((0.5693726470513388)+(t2.c0)))>('1580610865')));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c71)-(t2.c71)) AS REAL) RIGHT OUTER JOIN t2 ON ((((0.5693726470513388)+(t2.c0)))>('1580610865')) WHERE ((((('+1', vt1.c1, vt1.c1))>((vt1.c0, t2.c0, t2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT (((((('+1', vt1.c1, vt1.c1))>((vt1.c0, t2.c0, t2.c0))) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CAST(((t2.c71)-(t2.c71)) AS REAL) RIGHT OUTER JOIN t2 ON ((((0.5693726470513388)+(t2.c0)))>('1580610865')));
SELECT COUNT(*) FROM t0, vt1 WHERE ((- ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NULL IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NULL IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- ((NULL IN ()))));
SELECT * FROM vt1, t0, t2 WHERE (((vt1.c0)&(t2.c0)) COLLATE RTRIM) ORDER BY json_object(CAST('與<' AS BLOB), ((t2.c71) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&(t2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY json_object(CAST('與<' AS BLOB), ((t2.c71) NOT NULL)) DESC);
SELECT * FROM vt1, t0, t2 WHERE (((vt1.c0)&(t2.c0)) COLLATE RTRIM) ORDER BY json_object(CAST('與<' AS BLOB), ((t2.c71) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&(t2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY json_object(CAST('與<' AS BLOB), ((t2.c71) NOT NULL)) DESC);
SELECT COUNT(*) FROM vt1, t2 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY (~ (((t2.c71) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2 ORDER BY (~ (((t2.c71) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t2 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY (~ (((t2.c71) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2 ORDER BY (~ (((t2.c71) ISNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t2 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY (~ (((t2.c71) ISNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (ABS(0.953643207678687)) ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(0.953643207678687)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (ABS(0.953643207678687)) ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(0.953643207678687)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (ABS(0.953643207678687)) ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL));
SELECT * FROM t0, t2 WHERE (2.04959709E9);
SELECT SUM(count) FROM (SELECT ALL ((2.04959709E9) IS TRUE)  as count FROM t0, t2);
SELECT * FROM t0, t2 WHERE (2.04959709E9);
SELECT SUM(count) FROM (SELECT ALL ((2.04959709E9) IS TRUE)  as count FROM t0, t2);
SELECT * FROM t0, t2 WHERE (2.04959709E9);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN t0 ON CASE WHEN (((t0.c0))==((t2.c0))) THEN t2.c71 COLLATE NOCASE WHEN (t2.c0 IN (t2.c0, t2.c0)) THEN t0.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT t0.c0, NULL, t2.c71, t2.c71, 1.5172740713820243E-4, t0.c0) THEN t2.c0 COLLATE NOCASE ELSE ((((t2.c71)OR(t0.c0)))OR(t2.c71)) END WHERE (t2.c0) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON CASE WHEN (((t0.c0))==((t2.c0))) THEN t2.c71 COLLATE NOCASE WHEN (t2.c0 IN (t2.c0, t2.c0)) THEN t0.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT t0.c0, NULL, t2.c71, t2.c71, 1.5172740713820243E-4, t0.c0) THEN t2.c0 COLLATE NOCASE ELSE ((((t2.c71)OR(t0.c0)))OR(t2.c71)) END ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN t0 ON CASE WHEN (((t0.c0))==((t2.c0))) THEN t2.c71 COLLATE NOCASE WHEN (t2.c0 IN (t2.c0, t2.c0)) THEN t0.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT t0.c0, NULL, t2.c71, t2.c71, 1.5172740713820243E-4, t0.c0) THEN t2.c0 COLLATE NOCASE ELSE ((((t2.c71)OR(t0.c0)))OR(t2.c71)) END WHERE (t2.c0) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON CASE WHEN (((t0.c0))==((t2.c0))) THEN t2.c71 COLLATE NOCASE WHEN (t2.c0 IN (t2.c0, t2.c0)) THEN t0.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT t0.c0, NULL, t2.c71, t2.c71, 1.5172740713820243E-4, t0.c0) THEN t2.c0 COLLATE NOCASE ELSE ((((t2.c71)OR(t0.c0)))OR(t2.c71)) END ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN t0 ON CASE WHEN (((t0.c0))==((t2.c0))) THEN t2.c71 COLLATE NOCASE WHEN (t2.c0 IN (t2.c0, t2.c0)) THEN t0.c0 COLLATE NOCASE WHEN COALESCE(DISTINCT t0.c0, NULL, t2.c71, t2.c71, 1.5172740713820243E-4, t0.c0) THEN t2.c0 COLLATE NOCASE ELSE ((((t2.c71)OR(t0.c0)))OR(t2.c71)) END WHERE (t2.c0) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM t2, t0 WHERE (((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((('166480541'))<((t0.c0)))))) ORDER BY ((NULL) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((('166480541'))<((t0.c0)))))) IS TRUE)  as count FROM t2, t0 ORDER BY ((NULL) IS TRUE) ASC);
SELECT ALL * FROM t2, t0 WHERE (((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((('166480541'))<((t0.c0)))))) ORDER BY ((NULL) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((('166480541'))<((t0.c0)))))) IS TRUE)  as count FROM t2, t0 ORDER BY ((NULL) IS TRUE) ASC);
SELECT ALL * FROM t2, t0 WHERE (((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))<<(((('166480541'))<((t0.c0)))))) ORDER BY ((NULL) IS TRUE) ASC;
SELECT ALL * FROM vt1, t2, t0 WHERE (TRIM(2.04959709E9, ((t2.c0)LIKE(vt1.c0)))) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((TRIM(2.04959709E9, ((t2.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((((t0.c0) IS FALSE)) NOTNULL));
SELECT ALL * FROM vt1, t2, t0 WHERE (TRIM(2.04959709E9, ((t2.c0)LIKE(vt1.c0)))) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((TRIM(2.04959709E9, ((t2.c0)LIKE(vt1.c0)))) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY ((((t0.c0) IS FALSE)) NOTNULL));
SELECT ALL * FROM vt1, t2, t0 WHERE (TRIM(2.04959709E9, ((t2.c0)LIKE(vt1.c0)))) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL);
SELECT * FROM t0, vt1, t2 WHERE ((((t0.c0, t2.c71, vt1.c1)) BETWEEN ((((t0.c0)/(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)), CAST(t2.c71 AS TEXT))) AND (((((vt1.c0, t0.c0, vt1.c1))==((t2.c71, vt1.c0, vt1.c1))), t2.c0, ((t0.c0) NOT BETWEEN (0X6e5c57d3) AND (t2.c0)))))) ORDER BY '3HBug' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t2.c71, vt1.c1)) BETWEEN ((((t0.c0)/(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)), CAST(t2.c71 AS TEXT))) AND (((((vt1.c0, t0.c0, vt1.c1))==((t2.c71, vt1.c0, vt1.c1))), t2.c0, ((t0.c0) NOT BETWEEN (0x6e5c57d3) AND (t2.c0)))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY '3HBug' ASC  NULLS FIRST);
SELECT * FROM t0, vt1, t2 WHERE ((((t0.c0, t2.c71, vt1.c1)) BETWEEN ((((t0.c0)/(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)), CAST(t2.c71 AS TEXT))) AND (((((vt1.c0, t0.c0, vt1.c1))==((t2.c71, vt1.c0, vt1.c1))), t2.c0, ((t0.c0) NOT BETWEEN (0X6e5c57d3) AND (t2.c0)))))) ORDER BY '3HBug' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t2.c71, vt1.c1)) BETWEEN ((((t0.c0)/(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)), CAST(t2.c71 AS TEXT))) AND (((((vt1.c0, t0.c0, vt1.c1))==((t2.c71, vt1.c0, vt1.c1))), t2.c0, ((t0.c0) NOT BETWEEN (0x6e5c57d3) AND (t2.c0)))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY '3HBug' ASC  NULLS FIRST);
SELECT * FROM t0, vt1, t2 WHERE ((((t0.c0, t2.c71, vt1.c1)) BETWEEN ((((t0.c0)/(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c71) AND (vt1.c0)), CAST(t2.c71 AS TEXT))) AND (((((vt1.c0, t0.c0, vt1.c1))==((t2.c71, vt1.c0, vt1.c1))), t2.c0, ((t0.c0) NOT BETWEEN (0X6e5c57d3) AND (t2.c0)))))) ORDER BY '3HBug' ASC  NULLS FIRST;
SELECT ALL * FROM t2, vt1 WHERE (((CAST(t2.c71 AS NUMERIC))>>((+ (t2.c71))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t2.c71 AS NUMERIC))>>((+ (t2.c71))))) IS TRUE)  as count FROM t2, vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM t2, vt1 WHERE (((CAST(t2.c71 AS NUMERIC))>>((+ (t2.c71))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t2.c71 AS NUMERIC))>>((+ (t2.c71))))) IS TRUE)  as count FROM t2, vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM t2, vt1 WHERE (((CAST(t2.c71 AS NUMERIC))>>((+ (t2.c71))))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt1, t0, t2 WHERE (TRIM(t2.c0) COLLATE BINARY) ORDER BY GLOB(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c71)), CASE t2.c71  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END)  NULLS LAST, t2.c71  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t2.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY GLOB(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c71)), CASE t2.c71  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END)  NULLS LAST, t2.c71  NULLS LAST);
SELECT ALL * FROM vt1, t0, t2 WHERE (TRIM(t2.c0) COLLATE BINARY) ORDER BY GLOB(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c71)), CASE t2.c71  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END)  NULLS LAST, t2.c71  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t2.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, t2 ORDER BY GLOB(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c71)), CASE t2.c71  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END)  NULLS LAST, t2.c71  NULLS LAST);
SELECT ALL * FROM vt1, t0, t2 WHERE (TRIM(t2.c0) COLLATE BINARY) ORDER BY GLOB(((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c71)), CASE t2.c71  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE t2.c71 END)  NULLS LAST, t2.c71  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN ((vt1.c1)=(0.4714741274220404)) THEN ((((((((t0.c0)OR(t2.c71)))OR(t0.c0)))AND(t2.c71)))OR(t0.c0)) END LEFT OUTER JOIN t2 ON CAST(((vt1.c0)*(t2.c0)) AS BLOB) WHERE ((~ ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN ((vt1.c1)==(0.4714741274220404)) THEN ((((((((t0.c0)OR(t2.c71)))OR(t0.c0)))AND(t2.c71)))OR(t0.c0)) END LEFT OUTER JOIN t2 ON CAST(((vt1.c0)*(t2.c0)) AS BLOB));
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN ((vt1.c1)=(0.4714741274220404)) THEN ((((((((t0.c0)OR(t2.c71)))OR(t0.c0)))AND(t2.c71)))OR(t0.c0)) END LEFT OUTER JOIN t2 ON CAST(((vt1.c0)*(t2.c0)) AS BLOB) WHERE ((~ ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CASE WHEN ((vt1.c1)==(0.4714741274220404)) THEN ((((((((t0.c0)OR(t2.c71)))OR(t0.c0)))AND(t2.c71)))OR(t0.c0)) END LEFT OUTER JOIN t2 ON CAST(((vt1.c0)*(t2.c0)) AS BLOB));
SELECT ALL * FROM t2, vt1 WHERE (((((vt1.c1)OR(LOWER(''))))OR(CASE t2.c71  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c71 WHEN '739895045' THEN t2.c71 WHEN vt1.c0 THEN vt1.c1 END))) ORDER BY ((((t2.c71)AND(t2.c0)))OR(t2.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(LOWER(''))))OR(CASE t2.c71  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c71 WHEN '739895045' THEN t2.c71 WHEN vt1.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((t2.c71)AND(t2.c0)))OR(t2.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 WHERE (((((vt1.c1)OR(LOWER(''))))OR(CASE t2.c71  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c71 WHEN '739895045' THEN t2.c71 WHEN vt1.c0 THEN vt1.c1 END))) ORDER BY ((((t2.c71)AND(t2.c0)))OR(t2.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(LOWER(''))))OR(CASE t2.c71  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c71 WHEN '739895045' THEN t2.c71 WHEN vt1.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((t2.c71)AND(t2.c0)))OR(t2.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t2, vt1 WHERE (((((vt1.c1)OR(LOWER(''))))OR(CASE t2.c71  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c71 WHEN t2.c0 THEN t2.c71 WHEN '739895045' THEN t2.c71 WHEN vt1.c0 THEN vt1.c1 END))) ORDER BY ((((t2.c71)AND(t2.c0)))OR(t2.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (CAST(((t0.c0) NOTNULL) AS REAL)) ORDER BY ((t2.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((t2.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (CAST(((t0.c0) NOTNULL) AS REAL)) ORDER BY ((t2.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, t2, vt1 ORDER BY ((t2.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, t2, vt1 WHERE (CAST(((t0.c0) NOTNULL) AS REAL)) ORDER BY ((t2.c0) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN t2 ON CAST(((t2.c71)>>('3')) AS TEXT) WHERE ((~ (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON CAST(((t2.c71)>>('3')) AS TEXT));
SELECT * FROM vt1 RIGHT OUTER JOIN t2 ON CAST(((t2.c71)>>('3')) AS TEXT) WHERE ((~ (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON CAST(((t2.c71)>>('3')) AS TEXT));
SELECT * FROM vt1 RIGHT OUTER JOIN t2 ON CAST(((t2.c71)>>('3')) AS TEXT) WHERE ((~ (vt1.c1)));
SELECT * FROM vt1, t2 LEFT OUTER JOIN t0 ON ((((t2.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN (vt1.c1) AND (t2.c71)) WHERE (t0.c0) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t2 LEFT OUTER JOIN t0 ON ((((t2.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN (vt1.c1) AND (t2.c71)) ORDER BY vt1.c1  NULLS LAST);
SELECT * FROM vt1, t2 LEFT OUTER JOIN t0 ON ((((t2.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN (vt1.c1) AND (t2.c71)) WHERE (t0.c0) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t2 LEFT OUTER JOIN t0 ON ((((t2.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN (vt1.c1) AND (t2.c71)) ORDER BY vt1.c1  NULLS LAST);
SELECT * FROM vt1, t2 LEFT OUTER JOIN t0 ON ((((t2.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN (vt1.c1) AND (t2.c71)) WHERE (t0.c0) ORDER BY vt1.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM t2 WHERE (((t2.c71) NOTNULL)) ORDER BY NULLIF(NULL, (t2.c71 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71) NOTNULL)) IS TRUE)  as count FROM t2 ORDER BY NULLIF(NULL, (t2.c71 IN ())) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE (((t2.c71) NOTNULL)) ORDER BY NULLIF(NULL, (t2.c71 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c71) NOTNULL)) IS TRUE)  as count FROM t2 ORDER BY NULLIF(NULL, (t2.c71 IN ())) DESC);
SELECT ALL COUNT(*) FROM t2 WHERE (((t2.c71) NOTNULL)) ORDER BY NULLIF(NULL, (t2.c71 IN ())) DESC;
SELECT COUNT(*) FROM t2 WHERE (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY COLLATE RTRIM) ORDER BY -5.30362008E8  NULLS LAST, COALESCE(DISTINCT (((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), ((t2.c0)|(t2.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY -5.30362008E8  NULLS LAST, COALESCE(DISTINCT (((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), ((t2.c0)|(t2.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY COLLATE RTRIM) ORDER BY -5.30362008E8  NULLS LAST, COALESCE(DISTINCT (((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), ((t2.c0)|(t2.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY -5.30362008E8  NULLS LAST, COALESCE(DISTINCT (((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), ((t2.c0)|(t2.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2 WHERE (((t2.c0) BETWEEN (t2.c71) AND (t2.c71)) COLLATE BINARY COLLATE RTRIM) ORDER BY -5.30362008E8  NULLS LAST, COALESCE(DISTINCT (((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c0))), ((t2.c0)|(t2.c0))) DESC  NULLS FIRST;
