-- Time: 2024/06/09 18:48:37
-- Database: database73
-- Database version: 3.40.0
-- seed value: 3075684373
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
REINDEX; -- 1ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('', 0xffffffffd72fb9f7); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2) VALUES ('7q)*L맷', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES ('1285292032', NULL); -- 0ms;
PRAGMA temp.application_id; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT (((((((((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))AND(((NULL) NOT BETWEEN (rt1.c4) AND (rt0.c0)))))AND((rt0.c2 IN ()))))OR(((rt1.c0) IS TRUE))))OR(x'')), x'', UNLIKELY(NULL) FROM rt0, rt1; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('-1799206701', '-1244454532'); -- 0ms;
UPDATE rt1 SET c2=NULL, c4='916547249' WHERE UPPER(((rt1.c4)&(rt1.c2))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c0, c4, c5, c1) VALUES (x'', '916547249', NULL, 0.04298221568454752, x'92b3', x''), (NULL, NULL, 1e500, x'', 0.04298221568454752, 0.4969693220615481), (x'', x'', x'', 'i쌐xnⅼD', '1285292032', 0.6875749959470365); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0='1256206059', c3=NULL, c3=NULL; -- 0ms;
REINDEX; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (x'', '-950418672'); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c5, c4, c0) VALUES (x'', x'af23', '', x''), ('m2', NULL, x'5787', NULL), (NULL, x'', 0.2782120675686999, x''); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.default_cache_size = -765132836; -- 0ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1, c2) VALUES (x'1444', NULL, '-1244454532'); -- 0ms;
INSERT OR ABORT INTO rt1(c5, c3, c4, c0) VALUES ('Bm￿', '', NULL, -127588736); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c4=916547249; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES ('', x''); -- 12ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('v*nlK7', ''); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 4ms;
PRAGMA application_id = -7240804207472815785; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'v0', ''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c5)=('1769461689') WHERE (((rt1.c4 COLLATE BINARY))>(((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c4)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'v0', ' sz=383558363 noskipscan'); -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
REINDEX  rt1; -- 0ms;
PRAGMA main.optimize; -- 0ms;
ANALYZE v0; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c3, c5, c2) VALUES (x'', 'i쌐xnⅼd', '0.04298221568454752', '0.4969693220615481'), (NULL, 0X363e0f6, x'', NULL), (0.04298221568454752, 'n}Tmze_e', NULL, '1595425899'); -- 1ms;
INSERT OR IGNORE INTO rt1(c4, c0, c5) VALUES ('{}', '1595425899', 0Xffffffff918f350e); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c5) VALUES (NULL, x''); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c2) VALUES (0.2782120675686999, x'', NULL); -- 1ms;
COMMIT; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA application_id = 987024504644183544; -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (x'', 1285292032, 0X52ff7ea9, x'', NULL, 'm2'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2, c1) VALUES (0.285943323955439, x'', x''); -- 1ms;
INSERT OR FAIL INTO rt1(c2, c0, c5, c1, c3) VALUES ('KPDA', 'dN', 0.9497126693883313, x'8991', 0xffffffffea171bac); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c1, c5, c0) VALUES ('-1799206701', '', NULL, 0.39968151153062537), (x'', 0.4969693220615481, 0.5089522789287304, 0.56944542011411), (x'', 0x363e0f6, x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0.7428389886426581, NULL); -- 4ms;
INSERT OR IGNORE INTO rt1(c2, c1, c4, c0, c5) VALUES (x'4ba4', NULL, x'', NULL, '!&'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (x'', 'months', '', '56877302', NULL, '-765132836'), (x'', NULL, x'e037', NULL, NULL, 1.256206059E9), (NULL, 'c쌐ힹUQ', NULL, x'', '916547249', '-684738057'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.6233305893306113, x'af38'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0, rt1 WHERE ((((rt1.c1)%(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)%(v0.c2)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((((rt1.c1)%(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)%(v0.c2)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((((rt1.c1)%(v0.c2)) IN ()));
SELECT * FROM rt0, v0 WHERE (((DATE(v0.c1, v0.c2, v0.c0))*((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c1, v0.c2, v0.c0))*((NOT (v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((DATE(v0.c1, v0.c2, v0.c0))*((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c1, v0.c2, v0.c0))*((NOT (v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((DATE(v0.c1, v0.c2, v0.c0))*((NOT (v0.c1)))));
SELECT * FROM rt1, v0, rt0 WHERE (((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 ELSE v0.c2 END) BETWEEN (((v0.c0) BETWEEN (rt1.c3) AND (rt1.c0))) AND (((((((((rt1.c2)AND(v0.c1)))OR(rt0.c1)))AND(rt1.c0)))AND(v0.c1))))) ORDER BY CAST(((rt0.c0) IS TRUE) AS NUMERIC) ASC, (((((rt1.c4))>((NULL))))<>(((rt0.c2)<=(rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 ELSE v0.c2 END) BETWEEN (((v0.c0) BETWEEN (rt1.c3) AND (rt1.c0))) AND (((((((((rt1.c2)AND(v0.c1)))OR(rt0.c1)))AND(rt1.c0)))AND(v0.c1))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(((rt0.c0) IS TRUE) AS NUMERIC) ASC, (((((rt1.c4))>((NULL))))<>(((rt0.c2)<=(rt1.c4))))  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 ELSE v0.c2 END) BETWEEN (((v0.c0) BETWEEN (rt1.c3) AND (rt1.c0))) AND (((((((((rt1.c2)AND(v0.c1)))OR(rt0.c1)))AND(rt1.c0)))AND(v0.c1))))) ORDER BY CAST(((rt0.c0) IS TRUE) AS NUMERIC) ASC, (((((rt1.c4))>((NULL))))<>(((rt0.c2)<=(rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 ELSE v0.c2 END) BETWEEN (((v0.c0) BETWEEN (rt1.c3) AND (rt1.c0))) AND (((((((((rt1.c2)AND(v0.c1)))OR(rt0.c1)))AND(rt1.c0)))AND(v0.c1))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(((rt0.c0) IS TRUE) AS NUMERIC) ASC, (((((rt1.c4))>((NULL))))<>(((rt0.c2)<=(rt1.c4))))  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((CASE rt1.c2  WHEN v0.c0 THEN rt1.c3 ELSE v0.c2 END) BETWEEN (((v0.c0) BETWEEN (rt1.c3) AND (rt1.c0))) AND (((((((((rt1.c2)AND(v0.c1)))OR(rt0.c1)))AND(rt1.c0)))AND(v0.c1))))) ORDER BY CAST(((rt0.c0) IS TRUE) AS NUMERIC) ASC, (((((rt1.c4))>((NULL))))<>(((rt0.c2)<=(rt1.c4))))  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((CAST(rt1.c3 AS TEXT)) BETWEEN ((((0.2068062146884021))==((rt0.c2)))) AND (((rt1.c2)IS(v0.c0)))) FULL OUTER JOIN rt0 ON rt1.c4 WHERE ((((rt0.c2 IN ()))>('BR''ⅼ7}'))) ORDER BY (LENGTH(rt1.c4) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>('BR''ⅼ7}'))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((CAST(rt1.c3 AS TEXT)) BETWEEN ((((0.2068062146884021))==((rt0.c2)))) AND (((rt1.c2)IS(v0.c0)))) FULL OUTER JOIN rt0 ON rt1.c4 ORDER BY (LENGTH(rt1.c4) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((CAST(rt1.c3 AS TEXT)) BETWEEN ((((0.2068062146884021))==((rt0.c2)))) AND (((rt1.c2)IS(v0.c0)))) FULL OUTER JOIN rt0 ON rt1.c4 WHERE ((((rt0.c2 IN ()))>('BR''ⅼ7}'))) ORDER BY (LENGTH(rt1.c4) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>('BR''ⅼ7}'))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((CAST(rt1.c3 AS TEXT)) BETWEEN ((((0.2068062146884021))==((rt0.c2)))) AND (((rt1.c2)IS(v0.c0)))) FULL OUTER JOIN rt0 ON rt1.c4 ORDER BY (LENGTH(rt1.c4) IN ())  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((v0.c1)OR(rt1.c1)))AND('?u')))AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(rt1.c1)))AND('?u')))AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt1.c3))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((v0.c1)OR(rt1.c1)))AND('?u')))AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(rt1.c1)))AND('?u')))AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt1.c3))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((v0.c1)OR(rt1.c1)))AND('?u')))AND(rt1.c1)))OR(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt1.c3)));
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)) THEN x'af514eda' WHEN CASE WHEN rt1.c4 THEN rt0.c2 END THEN (('1256206059')<<(rt1.c1)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))) THEN rt1.c4 COLLATE BINARY END WHERE (CASE WHEN rt0.c1 THEN NULL WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN NULL WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)) THEN x'af514eda' WHEN CASE WHEN rt1.c4 THEN rt0.c2 END THEN (('1256206059')<<(rt1.c1)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))) THEN rt1.c4 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)) THEN x'af514eda' WHEN CASE WHEN rt1.c4 THEN rt0.c2 END THEN (('1256206059')<<(rt1.c1)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))) THEN rt1.c4 COLLATE BINARY END WHERE (CASE WHEN rt0.c1 THEN NULL WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN NULL WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)) THEN x'af514eda' WHEN CASE WHEN rt1.c4 THEN rt0.c2 END THEN (('1256206059')<<(rt1.c1)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))) THEN rt1.c4 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt1, v0 FULL OUTER JOIN rt0 ON CASE v0.c0 COLLATE BINARY  WHEN ((((((((rt1.c4)AND(rt1.c3)))OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)) THEN x'af514eda' WHEN CASE WHEN rt1.c4 THEN rt0.c2 END THEN (('1256206059')<<(rt1.c1)) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))) THEN rt1.c4 COLLATE BINARY END WHERE (CASE WHEN rt0.c1 THEN NULL WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY);
SELECT * FROM v0, rt0 WHERE ((((v0.c2 IN ())) NOT NULL)) ORDER BY 1256206059 DESC, CAST(rt0.c2 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY 1256206059 DESC, CAST(rt0.c2 AS INTEGER) DESC);
SELECT * FROM v0, rt0 WHERE ((((v0.c2 IN ())) NOT NULL)) ORDER BY 1256206059 DESC, CAST(rt0.c2 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY 1256206059 DESC, CAST(rt0.c2 AS INTEGER) DESC);
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((NOT (v0.c2)), CAST(v0.c1 AS NUMERIC), ((((rt0.c2)AND(v0.c0)))AND(v0.c2))))<>(((((((((('933199512')AND(v0.c0)))AND(v0.c2)))AND(rt0.c0)))OR(rt0.c2)), CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS REAL)))) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 END) BETWEEN ((v0.c1 IN (v0.c2))) AND (((rt0.c2)<=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 END) BETWEEN ((v0.c1 IN (v0.c2))) AND (((rt0.c2)<=(v0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((NOT (v0.c2)), CAST(v0.c1 AS NUMERIC), ((((rt0.c2)AND(v0.c0)))AND(v0.c2))))<>(((((((((('933199512')AND(v0.c0)))AND(v0.c2)))AND(rt0.c0)))OR(rt0.c2)), CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS REAL)))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((NOT (v0.c2)), CAST(v0.c1 AS NUMERIC), ((((rt0.c2)AND(v0.c0)))AND(v0.c2))))<>(((((((((('933199512')AND(v0.c0)))AND(v0.c2)))AND(rt0.c0)))OR(rt0.c2)), CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS REAL)))) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 END) BETWEEN ((v0.c1 IN (v0.c2))) AND (((rt0.c2)<=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 END) BETWEEN ((v0.c1 IN (v0.c2))) AND (((rt0.c2)<=(v0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((NOT (v0.c2)), CAST(v0.c1 AS NUMERIC), ((((rt0.c2)AND(v0.c0)))AND(v0.c2))))<>(((((((((('933199512')AND(v0.c0)))AND(v0.c2)))AND(rt0.c0)))OR(rt0.c2)), CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS REAL)))));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((((NOT (v0.c2)), CAST(v0.c1 AS NUMERIC), ((((rt0.c2)AND(v0.c0)))AND(v0.c2))))<>(((((((((('933199512')AND(v0.c0)))AND(v0.c2)))AND(rt0.c0)))OR(rt0.c2)), CAST(rt0.c0 AS TEXT), CAST(rt0.c1 AS REAL)))) WHERE (((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c2 WHEN rt0.c1 THEN v0.c0 END) BETWEEN ((v0.c1 IN (v0.c2))) AND (((rt0.c2)<=(v0.c1)))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))IS((v0.c0 IN ())))) ORDER BY (((- (v0.c2)))||(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))IS((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c2)))||(x''))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))IS((v0.c0 IN ())))) ORDER BY (((- (v0.c2)))||(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))IS((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c2)))||(x''))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c1)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))IS((v0.c0 IN ())))) ORDER BY (((- (v0.c2)))||(x''))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt1.c3 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END, rt1.c4 COLLATE NOCASE))<((((rt0.c1) NOT NULL), 'WC_[Gjo', (((0.42933906824715384, rt1.c5, v0.c0))==((rt0.c2, v0.c1, v0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt1.c3 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END, rt1.c4 COLLATE NOCASE))<((((rt0.c1) NOT NULL), 'WC_[Gjo', (((0.42933906824715384, rt1.c5, v0.c0))==((rt0.c2, v0.c1, v0.c1))))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt1.c3 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END, rt1.c4 COLLATE NOCASE))<((((rt0.c1) NOT NULL), 'WC_[Gjo', (((0.42933906824715384, rt1.c5, v0.c0))==((rt0.c2, v0.c1, v0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt1.c3 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END, rt1.c4 COLLATE NOCASE))<((((rt0.c1) NOT NULL), 'WC_[Gjo', (((0.42933906824715384, rt1.c5, v0.c0))==((rt0.c2, v0.c1, v0.c1))))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((NOT (rt0.c1)), CASE WHEN rt0.c2 THEN rt1.c3 WHEN v0.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END, rt1.c4 COLLATE NOCASE))<((((rt0.c1) NOT NULL), 'WC_[Gjo', (((0.42933906824715384, rt1.c5, v0.c0))==((rt0.c2, v0.c1, v0.c1)))))));
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (rt1.c3) ORDER BY rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.37106321781887763;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.37106321781887763);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (rt1.c3) ORDER BY rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.37106321781887763;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.37106321781887763);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (rt1.c3) ORDER BY rt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE  NULLS LAST, 0.37106321781887763;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c0, ((v0.c0) BETWEEN (rt1.c4) AND (v0.c1)), CAST(rt0.c1 AS NUMERIC)))<=((CAST(rt1.c4 AS TEXT), CASE v0.c2  WHEN v0.c0 THEN rt1.c1 ELSE rt1.c1 END, (((rt1.c1, v0.c2, rt1.c0))<=((rt1.c5, rt1.c2, rt0.c1))))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))) AND (((0.3039951617857858)%(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, ((v0.c0) BETWEEN (rt1.c4) AND (v0.c1)), CAST(rt0.c1 AS NUMERIC)))<=((CAST(rt1.c4 AS TEXT), CASE v0.c2  WHEN v0.c0 THEN rt1.c1 ELSE rt1.c1 END, (((rt1.c1, v0.c2, rt1.c0))<=((rt1.c5, rt1.c2, rt0.c1))))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))) AND (((0.3039951617857858)%(rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c0, ((v0.c0) BETWEEN (rt1.c4) AND (v0.c1)), CAST(rt0.c1 AS NUMERIC)))<=((CAST(rt1.c4 AS TEXT), CASE v0.c2  WHEN v0.c0 THEN rt1.c1 ELSE rt1.c1 END, (((rt1.c1, v0.c2, rt1.c0))<=((rt1.c5, rt1.c2, rt0.c1))))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))) AND (((0.3039951617857858)%(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, ((v0.c0) BETWEEN (rt1.c4) AND (v0.c1)), CAST(rt0.c1 AS NUMERIC)))<=((CAST(rt1.c4 AS TEXT), CASE v0.c2  WHEN v0.c0 THEN rt1.c1 ELSE rt1.c1 END, (((rt1.c1, v0.c2, rt1.c0))<=((rt1.c5, rt1.c2, rt0.c1))))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))) AND (((0.3039951617857858)%(rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c0, ((v0.c0) BETWEEN (rt1.c4) AND (v0.c1)), CAST(rt0.c1 AS NUMERIC)))<=((CAST(rt1.c4 AS TEXT), CASE v0.c2  WHEN v0.c0 THEN rt1.c1 ELSE rt1.c1 END, (((rt1.c1, v0.c2, rt1.c0))<=((rt1.c5, rt1.c2, rt0.c1))))))) ORDER BY ((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))) AND (((0.3039951617857858)%(rt1.c3))))  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (- (v0.c1)) WHERE (((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- (v0.c1)));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (- (v0.c1)) WHERE (((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (- (v0.c1)));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (- (v0.c1)) WHERE (((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS INTEGER))) ORDER BY ((((rt0.c0)LIKE(rt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(rt0.c1 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)LIKE(rt0.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS INTEGER))) ORDER BY ((((rt0.c0)LIKE(rt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(rt0.c1 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)LIKE(rt0.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS INTEGER))) ORDER BY ((((rt0.c0)LIKE(rt0.c0))) NOT NULL) DESC;
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON ((rt1.c0) ISNULL) WHERE (((((rt0.c2)AND(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 END)))AND(((v0.c1)*(rt1.c0))))) ORDER BY (((((rt1.c2) NOT BETWEEN (x'957c') AND (rt1.c1))))>=((((rt1.c4) ISNULL)))), rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 END)))AND(((v0.c1)*(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON ((rt1.c0) ISNULL) ORDER BY (((((rt1.c2) NOT BETWEEN (x'957c') AND (rt1.c1))))>=((((rt1.c4) ISNULL)))), rt0.c1);
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON ((rt1.c0) ISNULL) WHERE (((((rt0.c2)AND(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 END)))AND(((v0.c1)*(rt1.c0))))) ORDER BY (((((rt1.c2) NOT BETWEEN (x'957c') AND (rt1.c1))))>=((((rt1.c4) ISNULL)))), rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 END)))AND(((v0.c1)*(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN v0 ON ((rt1.c0) ISNULL) ORDER BY (((((rt1.c2) NOT BETWEEN (x'957c') AND (rt1.c1))))>=((((rt1.c4) ISNULL)))), rt0.c1);
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON ((rt1.c0) ISNULL) WHERE (((((rt0.c2)AND(CASE rt0.c0  WHEN rt1.c1 THEN rt1.c4 END)))AND(((v0.c1)*(rt1.c0))))) ORDER BY (((((rt1.c2) NOT BETWEEN (x'957c') AND (rt1.c1))))>=((((rt1.c4) ISNULL)))), rt0.c1;
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))>((x''))) AS TEXT)) ORDER BY CAST(((rt0.c1)AND(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))>((x''))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)AND(rt0.c1)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))>((x''))) AS TEXT)) ORDER BY CAST(((rt0.c1)AND(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))>((x''))) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)AND(rt0.c1)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))>((x''))) AS TEXT)) ORDER BY CAST(((rt0.c1)AND(rt0.c1)) AS REAL);
SELECT ALL * FROM v0, rt1 WHERE (((((0.6875749959470365) IS FALSE)) ISNULL)) ORDER BY ((v0.c1)<=((rt1.c0 IN ()))) DESC, (CHANGES() IN (((rt1.c2) NOT BETWEEN (v0.c2) AND (-0.0)), (- (rt1.c4)), rt1.c5 COLLATE BINARY, ((((rt1.c4)AND(rt1.c2)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.6875749959470365) IS FALSE)) ISNULL)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((v0.c1)<=((rt1.c0 IN ()))) DESC, (CHANGES() IN (((rt1.c2) NOT BETWEEN (v0.c2) AND (-0.0)), (- (rt1.c4)), rt1.c5 COLLATE BINARY, ((((rt1.c4)AND(rt1.c2)))OR(v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((((0.6875749959470365) IS FALSE)) ISNULL)) ORDER BY ((v0.c1)<=((rt1.c0 IN ()))) DESC, (CHANGES() IN (((rt1.c2) NOT BETWEEN (v0.c2) AND (-0.0)), (- (rt1.c4)), rt1.c5 COLLATE BINARY, ((((rt1.c4)AND(rt1.c2)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.6875749959470365) IS FALSE)) ISNULL)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((v0.c1)<=((rt1.c0 IN ()))) DESC, (CHANGES() IN (((rt1.c2) NOT BETWEEN (v0.c2) AND (-0.0)), (- (rt1.c4)), rt1.c5 COLLATE BINARY, ((((rt1.c4)AND(rt1.c2)))OR(v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((((0.6875749959470365) IS FALSE)) ISNULL)) ORDER BY ((v0.c1)<=((rt1.c0 IN ()))) DESC, (CHANGES() IN (((rt1.c2) NOT BETWEEN (v0.c2) AND (-0.0)), (- (rt1.c4)), rt1.c5 COLLATE BINARY, ((((rt1.c4)AND(rt1.c2)))OR(v0.c1))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS NUMERIC)) ORDER BY ((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT * FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS NUMERIC)) ORDER BY ((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT * FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS NUMERIC)) ORDER BY ((((rt0.c2)>>(rt0.c0))) NOT BETWEEN (((rt0.c0)|(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((v0.c2)/(rt0.c2)) THEN 'bm￿' COLLATE BINARY WHEN (((v0.c2))<((rt0.c2))) THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((((rt0.c1)OR(rt0.c0)))AND(0Xffffffffd495a462)) THEN CAST('-728390558' AS REAL) END) ORDER BY CAST((- (v0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((v0.c2)/(rt0.c2)) THEN 'bm￿' COLLATE BINARY WHEN (((v0.c2))<((rt0.c2))) THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((((rt0.c1)OR(rt0.c0)))AND(0xffffffffd495a462)) THEN CAST('-728390558' AS REAL) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((- (v0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((v0.c2)/(rt0.c2)) THEN 'bm￿' COLLATE BINARY WHEN (((v0.c2))<((rt0.c2))) THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((((rt0.c1)OR(rt0.c0)))AND(0Xffffffffd495a462)) THEN CAST('-728390558' AS REAL) END) ORDER BY CAST((- (v0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((v0.c2)/(rt0.c2)) THEN 'bm￿' COLLATE BINARY WHEN (((v0.c2))<((rt0.c2))) THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((((rt0.c1)OR(rt0.c0)))AND(0xffffffffd495a462)) THEN CAST('-728390558' AS REAL) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((- (v0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((v0.c2)/(rt0.c2)) THEN 'bm￿' COLLATE BINARY WHEN (((v0.c2))<((rt0.c2))) THEN UNLIKELY(DISTINCT rt0.c0) WHEN ((((rt0.c1)OR(rt0.c0)))AND(0Xffffffffd495a462)) THEN CAST('-728390558' AS REAL) END) ORDER BY CAST((- (v0.c0)) AS BLOB) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (v0.c1))) ISNULL)) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (v0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY v0.c1 ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (v0.c1))) ISNULL)) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (v0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY v0.c1 ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (v0.c1))) ISNULL)) ORDER BY v0.c1 ASC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c0)))OR(TYPEOF(rt1.c5))))OR((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c0)))OR(TYPEOF(rt1.c5))))OR((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c0)))OR(TYPEOF(rt1.c5))))OR((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c0)))OR(TYPEOF(rt1.c5))))OR((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c0)))OR(TYPEOF(rt1.c5))))OR((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c0))))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((UPPER(DISTINCT rt1.c1) IN ())) ORDER BY (((x'', 0.8330047501017964, rt1.c5)) NOT BETWEEN ((v0.c1, rt1.c0, v0.c2)) AND ((rt1.c1, rt1.c4, v0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((UPPER(DISTINCT rt1.c1) IN ())) IS TRUE)  as count FROM v0, rt1 ORDER BY (((x'', 0.8330047501017964, rt1.c5)) NOT BETWEEN ((v0.c1, rt1.c0, v0.c2)) AND ((rt1.c1, rt1.c4, v0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((UPPER(DISTINCT rt1.c1) IN ())) ORDER BY (((x'', 0.8330047501017964, rt1.c5)) NOT BETWEEN ((v0.c1, rt1.c0, v0.c2)) AND ((rt1.c1, rt1.c4, v0.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((UPPER(DISTINCT rt1.c1) IN ())) IS TRUE)  as count FROM v0, rt1 ORDER BY (((x'', 0.8330047501017964, rt1.c5)) NOT BETWEEN ((v0.c1, rt1.c0, v0.c2)) AND ((rt1.c1, rt1.c4, v0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((UPPER(DISTINCT rt1.c1) IN ())) ORDER BY (((x'', 0.8330047501017964, rt1.c5)) NOT BETWEEN ((v0.c1, rt1.c0, v0.c2)) AND ((rt1.c1, rt1.c4, v0.c0))) COLLATE NOCASE;
SELECT ALL * FROM rt0, rt1 WHERE (x'') ORDER BY CASE ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))OR(rt0.c1))  WHEN (rt1.c3 IN ()) THEN (+ ('-1067466167')) END DESC, CAST((rt1.c3 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))OR(rt0.c1))  WHEN (rt1.c3 IN ()) THEN (+ ('-1067466167')) END DESC, CAST((rt1.c3 IN ()) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (x'') ORDER BY CASE ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))OR(rt0.c1))  WHEN (rt1.c3 IN ()) THEN (+ ('-1067466167')) END DESC, CAST((rt1.c3 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))OR(rt0.c1))  WHEN (rt1.c3 IN ()) THEN (+ ('-1067466167')) END DESC, CAST((rt1.c3 IN ()) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (x'') ORDER BY CASE ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c1)))OR(rt1.c1)))OR(rt0.c1))  WHEN (rt1.c3 IN ()) THEN (+ ('-1067466167')) END DESC, CAST((rt1.c3 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('' COLLATE NOCASE) ORDER BY (('-1785600627') NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (HEX(0.20962548515491541)));
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('-1785600627') NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (HEX(0.20962548515491541))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('' COLLATE NOCASE) ORDER BY (('-1785600627') NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (HEX(0.20962548515491541)));
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('-1785600627') NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (HEX(0.20962548515491541))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('' COLLATE NOCASE) ORDER BY (('-1785600627') NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (HEX(0.20962548515491541)));
SELECT * FROM v0, rt1, rt0 WHERE ((NOT (((rt1.c4) NOTNULL)))) ORDER BY ((v0.c0 IN (rt1.c1, rt1.c5)) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((v0.c0 IN (rt1.c1, rt1.c5)) IN ()));
SELECT * FROM v0, rt1, rt0 WHERE ((NOT (((rt1.c4) NOTNULL)))) ORDER BY ((v0.c0 IN (rt1.c1, rt1.c5)) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((v0.c0 IN (rt1.c1, rt1.c5)) IN ()));
SELECT * FROM v0, rt1, rt0 WHERE ((NOT (((rt1.c4) NOTNULL)))) ORDER BY ((v0.c0 IN (rt1.c1, rt1.c5)) IN ());
SELECT COUNT(*) FROM v0, rt1 WHERE (((CAST(v0.c1 AS REAL))<=(0.7072350362383719)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL))<=(0.7072350362383719))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((CAST(v0.c1 AS REAL))<=(0.7072350362383719)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS REAL))<=(0.7072350362383719))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((CAST(v0.c1 AS REAL))<=(0.7072350362383719)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c2 COLLATE BINARY) AND (LENGTH('1285292032')))) ORDER BY (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ()), v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) BETWEEN (v0.c2 COLLATE BINARY) AND (LENGTH('1285292032')))) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ()), v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c2 COLLATE BINARY) AND (LENGTH('1285292032')))) ORDER BY (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ()), v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) BETWEEN (v0.c2 COLLATE BINARY) AND (LENGTH('1285292032')))) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ()), v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c2 COLLATE BINARY) AND (LENGTH('1285292032')))) ORDER BY (CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END IN ()), v0.c0 ASC;
SELECT * FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((v0.c2) IS FALSE))IS(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c2) IS FALSE))IS(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((v0.c2) IS FALSE))IS(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c2) IS FALSE))IS(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL)))) ORDER BY ((((v0.c2) IS FALSE))IS(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((NULL IN (rt1.c5)))>((rt1.c1 IN ())))) ORDER BY ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c5))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (rt1.c5)))>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c5))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((NULL IN (rt1.c5)))>((rt1.c1 IN ())))) ORDER BY ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c5))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (rt1.c5)))>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c5))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((NULL IN (rt1.c5)))>((rt1.c1 IN ())))) ORDER BY ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c5))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)/(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)/(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)/(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)/(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)/(rt1.c2)) IN ()));
SELECT * FROM rt0, rt1, v0 WHERE (((v0.c1)>(rt1.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c1)>(rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((v0.c1)>(rt1.c5)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c1)>(rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((v0.c1)>(rt1.c5)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)>=(v0.c1)))<=(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(v0.c1)))<=(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)>=(v0.c1)))<=(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)>=(v0.c1)))<=(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)>=(v0.c1)))<=(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)));
SELECT * FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((~ (rt1.c1))))<=((rt1.c4 COLLATE RTRIM))) WHERE (((x'd314d71e')AND(((((((((v0.c1)OR(rt1.c5)))OR(v0.c1)))AND('')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'd314d71e')AND(((((((((v0.c1)OR(rt1.c5)))OR(v0.c1)))AND('')))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((~ (rt1.c1))))<=((rt1.c4 COLLATE RTRIM))));
SELECT * FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((~ (rt1.c1))))<=((rt1.c4 COLLATE RTRIM))) WHERE (((x'd314d71e')AND(((((((((v0.c1)OR(rt1.c5)))OR(v0.c1)))AND('')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'd314d71e')AND(((((((((v0.c1)OR(rt1.c5)))OR(v0.c1)))AND('')))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((~ (rt1.c1))))<=((rt1.c4 COLLATE RTRIM))));
SELECT * FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((((~ (rt1.c1))))<=((rt1.c4 COLLATE RTRIM))) WHERE (((x'd314d71e')AND(((((((((v0.c1)OR(rt1.c5)))OR(v0.c1)))AND('')))OR(rt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT * FROM rt0, v0 WHERE ((((v0.c0 IN (0Xffffffffa3798035))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (0xffffffffa3798035))) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0 IN (0Xffffffffa3798035))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (0xffffffffa3798035))) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0 IN (0Xffffffffa3798035))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c4) IS TRUE))<=(((rt1.c5) NOT NULL)))) ORDER BY (((v0.c0 IN ()))IS NOT(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) IS TRUE))<=(((rt1.c5) NOT NULL)))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((v0.c0 IN ()))IS NOT(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c4) IS TRUE))<=(((rt1.c5) NOT NULL)))) ORDER BY (((v0.c0 IN ()))IS NOT(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) IS TRUE))<=(((rt1.c5) NOT NULL)))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((v0.c0 IN ()))IS NOT(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c4) IS TRUE))<=(((rt1.c5) NOT NULL)))) ORDER BY (((v0.c0 IN ()))IS NOT(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c5)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2 COLLATE NOCASE)|(CAST(rt1.c3 AS INTEGER)))) ORDER BY (NOT (((v0.c0)LIKE(rt1.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)|(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (NOT (((v0.c0)LIKE(rt1.c3)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2 COLLATE NOCASE)|(CAST(rt1.c3 AS INTEGER)))) ORDER BY (NOT (((v0.c0)LIKE(rt1.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)|(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1, v0 ORDER BY (NOT (((v0.c0)LIKE(rt1.c3)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2 COLLATE NOCASE)|(CAST(rt1.c3 AS INTEGER)))) ORDER BY (NOT (((v0.c0)LIKE(rt1.c3)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT NULL));
SELECT ALL * FROM v0, rt1 WHERE (json_patch(rt1.c2, rt1.c3) COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(rt1.c2, rt1.c3) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1 ORDER BY TYPEOF(DISTINCT ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (json_patch(rt1.c2, rt1.c3) COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(rt1.c2, rt1.c3) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1 ORDER BY TYPEOF(DISTINCT ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (json_patch(rt1.c2, rt1.c3) COLLATE BINARY) ORDER BY TYPEOF(DISTINCT ((((rt1.c4)AND(rt1.c1)))OR(rt1.c4)))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2))) IS TRUE)) ORDER BY rt1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2))) IS TRUE)) ORDER BY rt1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2))) IS TRUE)) ORDER BY rt1.c2 ASC  NULLS LAST;
SELECT * FROM v0 WHERE (((CAST(v0.c2 AS TEXT)) NOT BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c2 IN (v0.c0))))) ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS TEXT)) NOT BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM v0 WHERE (((CAST(v0.c2 AS TEXT)) NOT BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c2 IN (v0.c0))))) ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS TEXT)) NOT BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM v0 WHERE (((CAST(v0.c2 AS TEXT)) NOT BETWEEN (((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c2 IN (v0.c0))))) ORDER BY ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))<>((x'' IN (0.019735727286461335)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))!=((x'' IN (0.019735727286461335))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))<>((x'' IN (0.019735727286461335)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))!=((x'' IN (0.019735727286461335))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))<>((x'' IN (0.019735727286461335)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (+ (CAST(rt1.c5 AS NUMERIC))) CROSS JOIN v0 ON (('-1067466167')+(rt1.c4 COLLATE BINARY)) WHERE (((('쉉|㳗.k''O9', ((NULL)||(rt1.c1)), ((rt1.c2)IS(rt1.c5))))!=((CAST(rt1.c5 AS TEXT), rt1.c1, v0.c1)))) ORDER BY ((-1600497013) IS FALSE) ASC, CASE WHEN ((((rt0.c0)AND(v0.c2)))AND(rt0.c1)) THEN ((v0.c2) BETWEEN (rt1.c4) AND (rt1.c4)) END;
SELECT SUM(count) FROM (SELECT ALL ((((('쉉|㳗.k''O9', ((NULL)||(rt1.c1)), ((rt1.c2)IS(rt1.c5))))!=((CAST(rt1.c5 AS TEXT), rt1.c1, v0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (+ (CAST(rt1.c5 AS NUMERIC))) CROSS JOIN v0 ON (('-1067466167')+(rt1.c4 COLLATE BINARY)) ORDER BY ((-1600497013) IS FALSE) ASC, CASE WHEN ((((rt0.c0)AND(v0.c2)))AND(rt0.c1)) THEN ((v0.c2) BETWEEN (rt1.c4) AND (rt1.c4)) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (+ (CAST(rt1.c5 AS NUMERIC))) CROSS JOIN v0 ON (('-1067466167')+(rt1.c4 COLLATE BINARY)) WHERE (((('쉉|㳗.k''O9', ((NULL)||(rt1.c1)), ((rt1.c2)IS(rt1.c5))))!=((CAST(rt1.c5 AS TEXT), rt1.c1, v0.c1)))) ORDER BY ((-1600497013) IS FALSE) ASC, CASE WHEN ((((rt0.c0)AND(v0.c2)))AND(rt0.c1)) THEN ((v0.c2) BETWEEN (rt1.c4) AND (rt1.c4)) END;
SELECT SUM(count) FROM (SELECT ALL ((((('쉉|㳗.k''O9', ((NULL)||(rt1.c1)), ((rt1.c2)IS(rt1.c5))))!=((CAST(rt1.c5 AS TEXT), rt1.c1, v0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (+ (CAST(rt1.c5 AS NUMERIC))) CROSS JOIN v0 ON (('-1067466167')+(rt1.c4 COLLATE BINARY)) ORDER BY ((-1600497013) IS FALSE) ASC, CASE WHEN ((((rt0.c0)AND(v0.c2)))AND(rt0.c1)) THEN ((v0.c2) BETWEEN (rt1.c4) AND (rt1.c4)) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (+ (CAST(rt1.c5 AS NUMERIC))) CROSS JOIN v0 ON (('-1067466167')+(rt1.c4 COLLATE BINARY)) WHERE (((('쉉|㳗.k''O9', ((NULL)||(rt1.c1)), ((rt1.c2)IS(rt1.c5))))!=((CAST(rt1.c5 AS TEXT), rt1.c1, v0.c1)))) ORDER BY ((-1600497013) IS FALSE) ASC, CASE WHEN ((((rt0.c0)AND(v0.c2)))AND(rt0.c1)) THEN ((v0.c2) BETWEEN (rt1.c4) AND (rt1.c4)) END;
SELECT ALL * FROM rt1, v0 CROSS JOIN rt0 ON NULL WHERE (((rt0.c2) NOT BETWEEN (NULLIF(rt1.c5, rt1.c4)) AND (((rt1.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (NULLIF(rt1.c5, rt1.c4)) AND (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt0 ON NULL);
SELECT ALL * FROM rt1, v0 CROSS JOIN rt0 ON NULL WHERE (((rt0.c2) NOT BETWEEN (NULLIF(rt1.c5, rt1.c4)) AND (((rt1.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (NULLIF(rt1.c5, rt1.c4)) AND (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt0 ON NULL);
SELECT ALL * FROM rt1, v0 CROSS JOIN rt0 ON NULL WHERE (((rt0.c2) NOT BETWEEN (NULLIF(rt1.c5, rt1.c4)) AND (((rt1.c4) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c0))<=((rt1.c4)))))<>((((((rt1.c5)OR(rt0.c1)))OR(0.4502947701693323))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0))<=((rt1.c4)))))!=((((((rt1.c5)OR(rt0.c1)))OR(0.4502947701693323)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c0))<=((rt1.c4)))))<>((((((rt1.c5)OR(rt0.c1)))OR(0.4502947701693323))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0))<=((rt1.c4)))))!=((((((rt1.c5)OR(rt0.c1)))OR(0.4502947701693323)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt0.c0))<=((rt1.c4)))))<>((((((rt1.c5)OR(rt0.c1)))OR(0.4502947701693323))))));
SELECT COUNT(*) FROM rt1 WHERE (((+ (rt1.c3)) IN ())) ORDER BY SUBSTR(rt1.c5, rt1.c5) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY SUBSTR(rt1.c5, rt1.c5) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (((+ (rt1.c3)) IN ())) ORDER BY SUBSTR(rt1.c5, rt1.c5) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY SUBSTR(rt1.c5, rt1.c5) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (((+ (rt1.c3)) IN ())) ORDER BY SUBSTR(rt1.c5, rt1.c5) COLLATE NOCASE COLLATE RTRIM;
SELECT * FROM rt0, rt1, v0 WHERE (((((rt1.c0) NOT NULL))&(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY rt1.c4, (((rt1.c5))=((v0.c1))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT NULL))&(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt1.c4, (((rt1.c5))=((v0.c1))) COLLATE NOCASE DESC);
SELECT * FROM rt0, rt1, v0 WHERE (((((rt1.c0) NOT NULL))&(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY rt1.c4, (((rt1.c5))=((v0.c1))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT NULL))&(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt1.c4, (((rt1.c5))=((v0.c1))) COLLATE NOCASE DESC);
SELECT * FROM rt0, rt1, v0 WHERE (((((rt1.c0) NOT NULL))&(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY rt1.c4, (((rt1.c5))=((v0.c1))) COLLATE NOCASE DESC;
SELECT * FROM rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CHANGES() ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY CHANGES() ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((v0.c0 IN ()) COLLATE NOCASE) ORDER BY CHANGES() ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((((v0.c0)OR(rt0.c0)))AND(0.75539253686717))  WHEN (v0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) ORDER BY (CAST(rt0.c2 AS REAL) IN (v0.c1, COALESCE(v0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(rt0.c0)))AND(0.75539253686717))  WHEN (v0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c2 AS REAL) IN (v0.c1, COALESCE(v0.c2, rt0.c1))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((((v0.c0)OR(rt0.c0)))AND(0.75539253686717))  WHEN (v0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) ORDER BY (CAST(rt0.c2 AS REAL) IN (v0.c1, COALESCE(v0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(rt0.c0)))AND(0.75539253686717))  WHEN (v0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (CAST(rt0.c2 AS REAL) IN (v0.c1, COALESCE(v0.c2, rt0.c1))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((((v0.c0)OR(rt0.c0)))AND(0.75539253686717))  WHEN (v0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) ORDER BY (CAST(rt0.c2 AS REAL) IN (v0.c1, COALESCE(v0.c2, rt0.c1))) ASC;
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (- (CAST(rt1.c2 AS REAL))) WHERE ((((rt1.c4)) BETWEEN (((rt1.c2 IN ()))) AND (((((rt1.c5))!=((rt1.c0))))))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((rt1.c2 IN ()))) AND (((((rt1.c5))<>((rt1.c0))))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (- (CAST(rt1.c2 AS REAL))) ORDER BY rt1.c2 ASC);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (- (CAST(rt1.c2 AS REAL))) WHERE ((((rt1.c4)) BETWEEN (((rt1.c2 IN ()))) AND (((((rt1.c5))!=((rt1.c0))))))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN (((rt1.c2 IN ()))) AND (((((rt1.c5))<>((rt1.c0))))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (- (CAST(rt1.c2 AS REAL))) ORDER BY rt1.c2 ASC);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (- (CAST(rt1.c2 AS REAL))) WHERE ((((rt1.c4)) BETWEEN (((rt1.c2 IN ()))) AND (((((rt1.c5))!=((rt1.c0))))))) ORDER BY rt1.c2 ASC;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((CASE WHEN rt1.c3 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END)*(0.012966136290162744)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c3 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END)*(0.012966136290162744))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((CASE WHEN rt1.c3 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END)*(0.012966136290162744)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c3 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END)*(0.012966136290162744))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((CASE WHEN rt1.c3 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN v0.c0 ELSE x'' END)*(0.012966136290162744)));
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (v0.c2)) COLLATE BINARY) ORDER BY ((((0xffffffffd2d025e7)*(NULL)))-((((v0.c1))>=((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c2) AND (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((0xffffffffd2d025e7)*(NULL)))-((((v0.c1))>=((v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (v0.c2)) COLLATE BINARY) ORDER BY ((((0xffffffffd2d025e7)*(NULL)))-((((v0.c1))>=((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c2) AND (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((0xffffffffd2d025e7)*(NULL)))-((((v0.c1))>=((v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (v0.c2) AND (v0.c2)) COLLATE BINARY) ORDER BY ((((0xffffffffd2d025e7)*(NULL)))-((((v0.c1))>=((v0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))<(CAST(v0.c0 AS INTEGER)))) ORDER BY (CHAR(v0.c0) IN (HEX(v0.c2), ((v0.c0)%(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))<(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (CHAR(v0.c0) IN (HEX(v0.c2), ((v0.c0)%(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))<(CAST(v0.c0 AS INTEGER)))) ORDER BY (CHAR(v0.c0) IN (HEX(v0.c2), ((v0.c0)%(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))<(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY (CHAR(v0.c0) IN (HEX(v0.c2), ((v0.c0)%(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))))<(CAST(v0.c0 AS INTEGER)))) ORDER BY (CHAR(v0.c0) IN (HEX(v0.c2), ((v0.c0)%(v0.c0))));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((rt1.c3)%(rt1.c3)) IN ())) ORDER BY ((rt1.c0)>=(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((((rt1.c3) ISNULL))AND(((rt1.c2) IS FALSE))))AND(((((rt0.c2)OR(rt1.c4)))AND(v0.c1)))) DESC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END)) AND (((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)%(rt1.c3)) IN ())) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((rt1.c0)>=(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((((rt1.c3) ISNULL))AND(((rt1.c2) IS FALSE))))AND(((((rt0.c2)OR(rt1.c4)))AND(v0.c1)))) DESC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END)) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((rt1.c3)%(rt1.c3)) IN ())) ORDER BY ((rt1.c0)>=(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((((rt1.c3) ISNULL))AND(((rt1.c2) IS FALSE))))AND(((((rt0.c2)OR(rt1.c4)))AND(v0.c1)))) DESC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END)) AND (((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)%(rt1.c3)) IN ())) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((rt1.c0)>=(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((((rt1.c3) ISNULL))AND(((rt1.c2) IS FALSE))))AND(((((rt0.c2)OR(rt1.c4)))AND(v0.c1)))) DESC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END)) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((rt1.c3)%(rt1.c3)) IN ())) ORDER BY ((rt1.c0)>=(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, ((((((rt1.c3) ISNULL))AND(((rt1.c2) IS FALSE))))AND(((((rt0.c2)OR(rt1.c4)))AND(v0.c1)))) DESC  NULLS LAST, (((v0.c0)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END)) AND (((v0.c0 IN ()))));
SELECT ALL * FROM v0, rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ('');
SELECT * FROM rt1, v0 NOT INDEXED WHERE (((((((((0.6875749959470365 COLLATE BINARY)AND((((v0.c0))==((rt1.c3))))))OR((+ (v0.c1)))))AND(CASE v0.c2  WHEN rt1.c3 THEN rt1.c3 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 ELSE v0.c1 END)))AND(((((rt1.c5)AND(v0.c0)))OR(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.6875749959470365 COLLATE BINARY)AND((((v0.c0))=((rt1.c3))))))OR((+ (v0.c1)))))AND(CASE v0.c2  WHEN rt1.c3 THEN rt1.c3 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 ELSE v0.c1 END)))AND(((((rt1.c5)AND(v0.c0)))OR(rt1.c5))))) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 NOT INDEXED WHERE (((((((((0.6875749959470365 COLLATE BINARY)AND((((v0.c0))==((rt1.c3))))))OR((+ (v0.c1)))))AND(CASE v0.c2  WHEN rt1.c3 THEN rt1.c3 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 ELSE v0.c1 END)))AND(((((rt1.c5)AND(v0.c0)))OR(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.6875749959470365 COLLATE BINARY)AND((((v0.c0))=((rt1.c3))))))OR((+ (v0.c1)))))AND(CASE v0.c2  WHEN rt1.c3 THEN rt1.c3 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 ELSE v0.c1 END)))AND(((((rt1.c5)AND(v0.c0)))OR(rt1.c5))))) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 NOT INDEXED WHERE (((((((((0.6875749959470365 COLLATE BINARY)AND((((v0.c0))==((rt1.c3))))))OR((+ (v0.c1)))))AND(CASE v0.c2  WHEN rt1.c3 THEN rt1.c3 WHEN v0.c2 THEN rt1.c0 WHEN rt1.c2 THEN v0.c2 ELSE v0.c1 END)))AND(((((rt1.c5)AND(v0.c0)))OR(rt1.c5)))));
SELECT ALL * FROM rt1 WHERE (((CHANGES())=(((((rt1.c5)OR(0.39437685834826863)))OR(rt1.c4))))) ORDER BY (((rt1.c1, rt1.c3, rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c4)), rt1.c2 COLLATE RTRIM, ABS(rt1.c4))) AND ((((rt1.c4) NOT NULL), rt1.c1 COLLATE BINARY, json_remove(rt1.c2, rt1.c1, rt1.c3, rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())=(((((rt1.c5)OR(0.39437685834826863)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1, rt1.c3, rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c4)), rt1.c2 COLLATE RTRIM, ABS(rt1.c4))) AND ((((rt1.c4) NOT NULL), rt1.c1 COLLATE BINARY, json_remove(rt1.c2, rt1.c1, rt1.c3, rt1.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CHANGES())=(((((rt1.c5)OR(0.39437685834826863)))OR(rt1.c4))))) ORDER BY (((rt1.c1, rt1.c3, rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c4)), rt1.c2 COLLATE RTRIM, ABS(rt1.c4))) AND ((((rt1.c4) NOT NULL), rt1.c1 COLLATE BINARY, json_remove(rt1.c2, rt1.c1, rt1.c3, rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())=(((((rt1.c5)OR(0.39437685834826863)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1, rt1.c3, rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c4)), rt1.c2 COLLATE RTRIM, ABS(rt1.c4))) AND ((((rt1.c4) NOT NULL), rt1.c1 COLLATE BINARY, json_remove(rt1.c2, rt1.c1, rt1.c3, rt1.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CHANGES())=(((((rt1.c5)OR(0.39437685834826863)))OR(rt1.c4))))) ORDER BY (((rt1.c1, rt1.c3, rt1.c5)) NOT BETWEEN ((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c4)), rt1.c2 COLLATE RTRIM, ABS(rt1.c4))) AND ((((rt1.c4) NOT NULL), rt1.c1 COLLATE BINARY, json_remove(rt1.c2, rt1.c1, rt1.c3, rt1.c4)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT (rt1.c5)) COLLATE RTRIM) ORDER BY (NOT (rt1.c5)) ASC, ((NULL) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN rt1.c5 THEN rt1.c0 END) BETWEEN (((((v0.c2)OR(rt1.c0)))OR(rt1.c5))) AND ((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (NOT (rt1.c5)) ASC, ((NULL) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN rt1.c5 THEN rt1.c0 END) BETWEEN (((((v0.c2)OR(rt1.c0)))OR(rt1.c5))) AND ((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0))))) DESC);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT (rt1.c5)) COLLATE RTRIM) ORDER BY (NOT (rt1.c5)) ASC, ((NULL) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN rt1.c5 THEN rt1.c0 END) BETWEEN (((((v0.c2)OR(rt1.c0)))OR(rt1.c5))) AND ((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (NOT (rt1.c5)) ASC, ((NULL) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN rt1.c5 THEN rt1.c0 END) BETWEEN (((((v0.c2)OR(rt1.c0)))OR(rt1.c5))) AND ((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0))))) DESC);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT (rt1.c5)) COLLATE RTRIM) ORDER BY (NOT (rt1.c5)) ASC, ((NULL) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt0.c0 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN rt1.c5 THEN rt1.c0 END) BETWEEN (((((v0.c2)OR(rt1.c0)))OR(rt1.c5))) AND ((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0))))) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (- ((- (rt1.c2)))) INNER JOIN rt0 ON (((rt1.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), ((((rt1.c4)AND(rt0.c0)))OR(NULL))))=((v0.c1, CASE rt0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c0 END, ((rt0.c0)>('630118405'))))) WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND (('1769461689')))) ORDER BY (((rt0.c0 COLLATE RTRIM, (((rt1.c4))<((v0.c1))), ((((((((((((rt1.c1)AND(rt0.c0)))AND(rt1.c3)))OR(v0.c2)))AND(rt1.c1)))AND(rt0.c2)))OR(rt1.c1))))<>((QUOTE(rt1.c2), ((rt1.c0)+(rt0.c2)), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)))))  NULLS LAST, ((CAST(rt1.c2 AS TEXT)) NOT BETWEEN (((v0.c2) ISNULL)) AND (-9.50418672E8 COLLATE BINARY)) DESC, CAST(((rt0.c1)IS(rt1.c4)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND (('1769461689')))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (- ((- (rt1.c2)))) INNER JOIN rt0 ON (((rt1.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), ((((rt1.c4)AND(rt0.c0)))OR(NULL))))=((v0.c1, CASE rt0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c0 END, ((rt0.c0)>('630118405'))))) ORDER BY (((rt0.c0 COLLATE RTRIM, (((rt1.c4))<((v0.c1))), ((((((((((((rt1.c1)AND(rt0.c0)))AND(rt1.c3)))OR(v0.c2)))AND(rt1.c1)))AND(rt0.c2)))OR(rt1.c1))))<>((QUOTE(rt1.c2), ((rt1.c0)+(rt0.c2)), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)))))  NULLS LAST, ((CAST(rt1.c2 AS TEXT)) NOT BETWEEN (((v0.c2) ISNULL)) AND (-9.50418672E8 COLLATE BINARY)) DESC, CAST(((rt0.c1)IS(rt1.c4)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (- ((- (rt1.c2)))) INNER JOIN rt0 ON (((rt1.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), ((((rt1.c4)AND(rt0.c0)))OR(NULL))))=((v0.c1, CASE rt0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c0 END, ((rt0.c0)>('630118405'))))) WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND (('1769461689')))) ORDER BY (((rt0.c0 COLLATE RTRIM, (((rt1.c4))<((v0.c1))), ((((((((((((rt1.c1)AND(rt0.c0)))AND(rt1.c3)))OR(v0.c2)))AND(rt1.c1)))AND(rt0.c2)))OR(rt1.c1))))<>((QUOTE(rt1.c2), ((rt1.c0)+(rt0.c2)), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)))))  NULLS LAST, ((CAST(rt1.c2 AS TEXT)) NOT BETWEEN (((v0.c2) ISNULL)) AND (-9.50418672E8 COLLATE BINARY)) DESC, CAST(((rt0.c1)IS(rt1.c4)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND (('1769461689')))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (- ((- (rt1.c2)))) INNER JOIN rt0 ON (((rt1.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), ((((rt1.c4)AND(rt0.c0)))OR(NULL))))=((v0.c1, CASE rt0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c0 END, ((rt0.c0)>('630118405'))))) ORDER BY (((rt0.c0 COLLATE RTRIM, (((rt1.c4))<((v0.c1))), ((((((((((((rt1.c1)AND(rt0.c0)))AND(rt1.c3)))OR(v0.c2)))AND(rt1.c1)))AND(rt0.c2)))OR(rt1.c1))))<>((QUOTE(rt1.c2), ((rt1.c0)+(rt0.c2)), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)))))  NULLS LAST, ((CAST(rt1.c2 AS TEXT)) NOT BETWEEN (((v0.c2) ISNULL)) AND (-9.50418672E8 COLLATE BINARY)) DESC, CAST(((rt0.c1)IS(rt1.c4)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (- ((- (rt1.c2)))) INNER JOIN rt0 ON (((rt1.c0 COLLATE BINARY, CAST(rt1.c0 AS BLOB), ((((rt1.c4)AND(rt0.c0)))OR(NULL))))=((v0.c1, CASE rt0.c0  WHEN rt1.c4 THEN rt1.c3 ELSE v0.c0 END, ((rt0.c0)>('630118405'))))) WHERE ((((rt0.c1)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND (('1769461689')))) ORDER BY (((rt0.c0 COLLATE RTRIM, (((rt1.c4))<((v0.c1))), ((((((((((((rt1.c1)AND(rt0.c0)))AND(rt1.c3)))OR(v0.c2)))AND(rt1.c1)))AND(rt0.c2)))OR(rt1.c1))))<>((QUOTE(rt1.c2), ((rt1.c0)+(rt0.c2)), ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)))))  NULLS LAST, ((CAST(rt1.c2 AS TEXT)) NOT BETWEEN (((v0.c2) ISNULL)) AND (-9.50418672E8 COLLATE BINARY)) DESC, CAST(((rt0.c1)IS(rt1.c4)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(NULL)))AND(rt1.c5))) NOT BETWEEN (CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) AND ((NOT (rt1.c1))))) ORDER BY ((rt1.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(NULL)))AND(rt1.c5))) NOT BETWEEN (CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(NULL)))AND(rt1.c5))) NOT BETWEEN (CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) AND ((NOT (rt1.c1))))) ORDER BY ((rt1.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(NULL)))AND(rt1.c5))) NOT BETWEEN (CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(NULL)))AND(rt1.c5))) NOT BETWEEN (CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) AND ((NOT (rt1.c1))))) ORDER BY ((rt1.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0 WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c4 END IN ()), CASE WHEN x'9d17' THEN ((rt1.c2)GLOB(rt1.c5)) WHEN ((((rt1.c2)OR(rt1.c5)))OR(rt1.c3)) THEN (~ (rt1.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt1.c0)) END ASC  NULLS LAST, (((rt0.c2 COLLATE NOCASE, 'y', ((-1852885746) NOT NULL)))>((((rt1.c0) IS FALSE), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c2)), ((('9nUb')) BETWEEN ((rt0.c1)) AND ((rt1.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (CASE WHEN rt1.c1 THEN rt1.c4 END IN ()), CASE WHEN x'9d17' THEN ((rt1.c2)GLOB(rt1.c5)) WHEN ((((rt1.c2)OR(rt1.c5)))OR(rt1.c3)) THEN (~ (rt1.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt1.c0)) END ASC  NULLS LAST, (((rt0.c2 COLLATE NOCASE, 'y', ((-1852885746) NOT NULL)))>((((rt1.c0) IS FALSE), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c2)), ((('9nUb')) BETWEEN ((rt0.c1)) AND ((rt1.c0)))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c4 END IN ()), CASE WHEN x'9d17' THEN ((rt1.c2)GLOB(rt1.c5)) WHEN ((((rt1.c2)OR(rt1.c5)))OR(rt1.c3)) THEN (~ (rt1.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt1.c0)) END ASC  NULLS LAST, (((rt0.c2 COLLATE NOCASE, 'y', ((-1852885746) NOT NULL)))>((((rt1.c0) IS FALSE), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c2)), ((('9nUb')) BETWEEN ((rt0.c1)) AND ((rt1.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS BLOB)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (CASE WHEN rt1.c1 THEN rt1.c4 END IN ()), CASE WHEN x'9d17' THEN ((rt1.c2)GLOB(rt1.c5)) WHEN ((((rt1.c2)OR(rt1.c5)))OR(rt1.c3)) THEN (~ (rt1.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt1.c0)) END ASC  NULLS LAST, (((rt0.c2 COLLATE NOCASE, 'y', ((-1852885746) NOT NULL)))>((((rt1.c0) IS FALSE), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c2)), ((('9nUb')) BETWEEN ((rt0.c1)) AND ((rt1.c0)))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (CAST(rt1.c1 AS BLOB)) ORDER BY (CASE WHEN rt1.c1 THEN rt1.c4 END IN ()), CASE WHEN x'9d17' THEN ((rt1.c2)GLOB(rt1.c5)) WHEN ((((rt1.c2)OR(rt1.c5)))OR(rt1.c3)) THEN (~ (rt1.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt1.c0)) END ASC  NULLS LAST, (((rt0.c2 COLLATE NOCASE, 'y', ((-1852885746) NOT NULL)))>((((rt1.c0) IS FALSE), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c2)), ((('9nUb')) BETWEEN ((rt0.c1)) AND ((rt1.c0)))))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE (CASE CAST(x'8430' AS REAL)  WHEN '1392475817' THEN ((rt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(x'8430' AS REAL)  WHEN '1392475817' THEN ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE (CASE CAST(x'8430' AS REAL)  WHEN '1392475817' THEN ((rt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(x'8430' AS REAL)  WHEN '1392475817' THEN ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL * FROM rt1 NATURAL JOIN v0 WHERE (CASE CAST(x'8430' AS REAL)  WHEN '1392475817' THEN ((rt1.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY 0.16919461807701464  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY 0.16919461807701464  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY 0.16919461807701464  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY 0.16919461807701464  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY 0.16919461807701464  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((v0.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c2 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((((v0.c2))<=((v0.c2))))))AND((v0.c1 IN (v0.c1))))) ORDER BY (+ ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((((v0.c2))<=((v0.c2))))))AND((v0.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((((v0.c2))<=((v0.c2))))))AND((v0.c1 IN (v0.c1))))) ORDER BY (+ ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((((v0.c2))<=((v0.c2))))))AND((v0.c1 IN (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)OR((((v0.c2))<=((v0.c2))))))AND((v0.c1 IN (v0.c1))))) ORDER BY (+ ((~ (v0.c0))));
SELECT * FROM rt1 NATURAL JOIN v0 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c3) BETWEEN (v0.c2) AND (rt1.c3)) WHEN TRIM(rt1.c2) THEN CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 END WHEN CASE WHEN rt1.c5 THEN v0.c0 WHEN x'' THEN v0.c1 WHEN rt1.c0 THEN v0.c2 ELSE rt1.c2 END THEN rt1.c4 ELSE (+ (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c3) BETWEEN (v0.c2) AND (rt1.c3)) WHEN TRIM(rt1.c2) THEN CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 END WHEN CASE WHEN rt1.c5 THEN v0.c0 WHEN x'' THEN v0.c1 WHEN rt1.c0 THEN v0.c2 ELSE rt1.c2 END THEN rt1.c4 ELSE (+ (rt1.c2)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT * FROM rt1 NATURAL JOIN v0 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c3) BETWEEN (v0.c2) AND (rt1.c3)) WHEN TRIM(rt1.c2) THEN CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 END WHEN CASE WHEN rt1.c5 THEN v0.c0 WHEN x'' THEN v0.c1 WHEN rt1.c0 THEN v0.c2 ELSE rt1.c2 END THEN rt1.c4 ELSE (+ (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c3) BETWEEN (v0.c2) AND (rt1.c3)) WHEN TRIM(rt1.c2) THEN CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 END WHEN CASE WHEN rt1.c5 THEN v0.c0 WHEN x'' THEN v0.c1 WHEN rt1.c0 THEN v0.c2 ELSE rt1.c2 END THEN rt1.c4 ELSE (+ (rt1.c2)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT * FROM rt1 NATURAL JOIN v0 WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c3) BETWEEN (v0.c2) AND (rt1.c3)) WHEN TRIM(rt1.c2) THEN CASE WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c2 END WHEN CASE WHEN rt1.c5 THEN v0.c0 WHEN x'' THEN v0.c1 WHEN rt1.c0 THEN v0.c2 ELSE rt1.c2 END THEN rt1.c4 ELSE (+ (rt1.c2)) END);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt1.c4) NOT NULL))OR(rt1.c5)))AND(v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4) NOT NULL))OR(rt1.c5)))AND(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt1.c4) NOT NULL))OR(rt1.c5)))AND(v0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c4) NOT NULL))OR(rt1.c5)))AND(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((((rt1.c4) NOT NULL))OR(rt1.c5)))AND(v0.c2 COLLATE BINARY)));
SELECT ALL * FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c1)GLOB(rt1.c1)) IN ()) WHERE (((CAST(x'36a7' AS INTEGER)) IS TRUE)) ORDER BY UNLIKELY(DISTINCT '-1600497013') DESC, CAST(CAST(NULL AS TEXT) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'36a7' AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c1)GLOB(rt1.c1)) IN ()) ORDER BY UNLIKELY(DISTINCT '-1600497013') DESC, CAST(CAST(NULL AS TEXT) AS TEXT));
SELECT ALL * FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c1)GLOB(rt1.c1)) IN ()) WHERE (((CAST(x'36a7' AS INTEGER)) IS TRUE)) ORDER BY UNLIKELY(DISTINCT '-1600497013') DESC, CAST(CAST(NULL AS TEXT) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'36a7' AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c1)GLOB(rt1.c1)) IN ()) ORDER BY UNLIKELY(DISTINCT '-1600497013') DESC, CAST(CAST(NULL AS TEXT) AS TEXT));
SELECT ALL * FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((rt0.c1)GLOB(rt1.c1)) IN ()) WHERE (((CAST(x'36a7' AS INTEGER)) IS TRUE)) ORDER BY UNLIKELY(DISTINCT '-1600497013') DESC, CAST(CAST(NULL AS TEXT) AS TEXT);
SELECT ALL * FROM rt0, v0 WHERE (CAST(QUOTE(v0.c2) AS TEXT)) ORDER BY (((((((rt0.c1, rt0.c2, x''))<((v0.c1, rt0.c2, rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))AND(0.060028310996011025));
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(v0.c2) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((rt0.c1, rt0.c2, x''))<((v0.c1, rt0.c2, rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))AND(0.060028310996011025)));
SELECT ALL * FROM rt0, v0 WHERE (CAST(QUOTE(v0.c2) AS TEXT)) ORDER BY (((((((rt0.c1, rt0.c2, x''))<((v0.c1, rt0.c2, rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))AND(0.060028310996011025));
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(v0.c2) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((((rt0.c1, rt0.c2, x''))<((v0.c1, rt0.c2, rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))AND(0.060028310996011025)));
SELECT ALL * FROM rt0, v0 WHERE (CAST(QUOTE(v0.c2) AS TEXT)) ORDER BY (((((((rt0.c1, rt0.c2, x''))<((v0.c1, rt0.c2, rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))AND(0.060028310996011025));
SELECT * FROM v0 CROSS JOIN rt0 ON CHANGES() COLLATE BINARY WHERE (((CASE 0.41212782646396073  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((rt0.c0)AND(v0.c0))))) ORDER BY 0.9379143264626209  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 0.41212782646396073  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((rt0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CHANGES() COLLATE BINARY ORDER BY 0.9379143264626209  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt0 ON CHANGES() COLLATE BINARY WHERE (((CASE 0.41212782646396073  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((rt0.c0)AND(v0.c0))))) ORDER BY 0.9379143264626209  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 0.41212782646396073  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((rt0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CHANGES() COLLATE BINARY ORDER BY 0.9379143264626209  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt0 ON CHANGES() COLLATE BINARY WHERE (((CASE 0.41212782646396073  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c2) IS TRUE)) AND (((rt0.c0)AND(v0.c0))))) ORDER BY 0.9379143264626209  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (0.4597828385137974) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c5)))<>(rt1.c4)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.4597828385137974) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c5)))<>(rt1.c4)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (0.4597828385137974) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c5)))<>(rt1.c4)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.4597828385137974) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c5)))<>(rt1.c4)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (0.4597828385137974) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c5)))<>(rt1.c4)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON ((LIKELY(rt1.c1))<(CASE WHEN rt1.c4 THEN rt1.c0 ELSE v0.c2 END)) WHERE (SUBSTR('9\r', rt1.c1)) ORDER BY ((1285292032)>=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR('9\r', rt1.c1)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON ((LIKELY(rt1.c1))<(CASE WHEN rt1.c4 THEN rt1.c0 ELSE v0.c2 END)) ORDER BY ((1285292032)>=((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON ((LIKELY(rt1.c1))<(CASE WHEN rt1.c4 THEN rt1.c0 ELSE v0.c2 END)) WHERE (SUBSTR('9\r', rt1.c1)) ORDER BY ((1285292032)>=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SUBSTR('9\r', rt1.c1)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON ((LIKELY(rt1.c1))<(CASE WHEN rt1.c4 THEN rt1.c0 ELSE v0.c2 END)) ORDER BY ((1285292032)>=((rt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON ((LIKELY(rt1.c1))<(CASE WHEN rt1.c4 THEN rt1.c0 ELSE v0.c2 END)) WHERE (SUBSTR('9\r', rt1.c1)) ORDER BY ((1285292032)>=((rt0.c2 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c5) NOT NULL) IN ())) ORDER BY ((-794731904)>>((- (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5) NOT NULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((-794731904)>>((- (rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c5) NOT NULL) IN ())) ORDER BY ((-794731904)>>((- (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5) NOT NULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((-794731904)>>((- (rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c5) NOT NULL) IN ())) ORDER BY ((-794731904)>>((- (rt1.c0))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)))OR(((v0.c1)IS NOT(v0.c0))))) ORDER BY ((((((v0.c2)AND(v0.c2)))OR(v0.c2)))<=(HEX(DISTINCT v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN (v0.c0, v0.c0)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)))OR(((v0.c1)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)AND(v0.c2)))OR(v0.c2)))<=(HEX(DISTINCT v0.c1))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)))OR(((v0.c1)IS NOT(v0.c0))))) ORDER BY ((((((v0.c2)AND(v0.c2)))OR(v0.c2)))<=(HEX(DISTINCT v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN (v0.c0, v0.c0)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)))OR(((v0.c1)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)AND(v0.c2)))OR(v0.c2)))<=(HEX(DISTINCT v0.c1))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN (v0.c0, v0.c0)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)))OR(((v0.c1)IS NOT(v0.c0))))) ORDER BY ((((((v0.c2)AND(v0.c2)))OR(v0.c2)))<=(HEX(DISTINCT v0.c1)));
SELECT * FROM v0 WHERE ((+ (CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (CAST(v0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- ((1.256206059E9 IN (0Xffffffffe6ad9529)))));
SELECT SUM(count) FROM (SELECT (((- ((1.256206059E9 IN (0Xffffffffe6ad9529))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- ((1.256206059E9 IN (0Xffffffffe6ad9529)))));
SELECT SUM(count) FROM (SELECT (((- ((1.256206059E9 IN (0Xffffffffe6ad9529))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- ((1.256206059E9 IN (0Xffffffffe6ad9529)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c1 IN ()))AND(NULL)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c0) ISNULL))))AND(x''))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1 IN ()))AND(NULL)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c0) ISNULL))))AND(x''))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c1 IN ()))AND(NULL)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c0) ISNULL))))AND(x''))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1 IN ()))AND(NULL)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c0) ISNULL))))AND(x''))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((rt0.c1 IN ()))AND(NULL)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c0) ISNULL))))AND(x''))) ORDER BY rt0.c1  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE ((((+ (rt1.c0))) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (rt1.c5))) ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(((rt1.c3)LIKE(rt0.c1)))))AND((- (-1799206701)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0))) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (rt1.c5))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(((rt1.c3)LIKE(rt0.c1)))))AND((- (-1799206701)))) DESC);
SELECT * FROM rt1, rt0 WHERE ((((+ (rt1.c0))) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (rt1.c5))) ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(((rt1.c3)LIKE(rt0.c1)))))AND((- (-1799206701)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0))) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (rt1.c5))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(((rt1.c3)LIKE(rt0.c1)))))AND((- (-1799206701)))) DESC);
SELECT * FROM rt1, rt0 WHERE ((((+ (rt1.c0))) NOT BETWEEN (((rt0.c1)<<(rt0.c1))) AND (rt1.c5))) ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(((rt1.c3)LIKE(rt0.c1)))))AND((- (-1799206701)))) DESC;
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)!=(v0.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) END) ORDER BY LOWER(((v0.c2)<>(v0.c2))), CAST(((v0.c1) IS TRUE) AS REAL)  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((v0.c1)|(v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)<>(v0.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY LOWER(((v0.c2)<>(v0.c2))), CAST(((v0.c1) IS TRUE) AS REAL)  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((v0.c1)|(v0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)!=(v0.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) END) ORDER BY LOWER(((v0.c2)<>(v0.c2))), CAST(((v0.c1) IS TRUE) AS REAL)  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((v0.c1)|(v0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)<>(v0.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY LOWER(((v0.c2)<>(v0.c2))), CAST(((v0.c1) IS TRUE) AS REAL)  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((v0.c1)|(v0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)!=(v0.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) END) ORDER BY LOWER(((v0.c2)<>(v0.c2))), CAST(((v0.c1) IS TRUE) AS REAL)  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((v0.c1)|(v0.c2))) DESC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN json_array(rt0.c0, rt0.c0, rt0.c1, x'', rt1.c2, rt1.c2) THEN ((NULL)IS NOT(rt0.c1)) ELSE ((((((((v0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))AND(x'')) END INNER JOIN v0 ON CASE WHEN ((((((((v0.c1)AND('1285292032')))OR(rt1.c5)))OR(v0.c0)))OR(rt1.c5)) THEN ((rt1.c2)%(rt1.c4)) END WHERE ((- ((('-728390558')*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('-728390558')*(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN json_array(rt0.c0, rt0.c0, rt0.c1, x'', rt1.c2, rt1.c2) THEN ((NULL)IS NOT(rt0.c1)) ELSE ((((((((v0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))AND(x'')) END INNER JOIN v0 ON CASE WHEN ((((((((v0.c1)AND('1285292032')))OR(rt1.c5)))OR(v0.c0)))OR(rt1.c5)) THEN ((rt1.c2)%(rt1.c4)) END);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN json_array(rt0.c0, rt0.c0, rt0.c1, x'', rt1.c2, rt1.c2) THEN ((NULL)IS NOT(rt0.c1)) ELSE ((((((((v0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))AND(x'')) END INNER JOIN v0 ON CASE WHEN ((((((((v0.c1)AND('1285292032')))OR(rt1.c5)))OR(v0.c0)))OR(rt1.c5)) THEN ((rt1.c2)%(rt1.c4)) END WHERE ((- ((('-728390558')*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('-728390558')*(rt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CASE WHEN json_array(rt0.c0, rt0.c0, rt0.c1, x'', rt1.c2, rt1.c2) THEN ((NULL)IS NOT(rt0.c1)) ELSE ((((((((v0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))AND(x'')) END INNER JOIN v0 ON CASE WHEN ((((((((v0.c1)AND('1285292032')))OR(rt1.c5)))OR(v0.c0)))OR(rt1.c5)) THEN ((rt1.c2)%(rt1.c4)) END);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT * FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c0)))AND(rt1.c5))) BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR('1632346137')))OR(rt1.c5))))) ORDER BY (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END IN ()) ASC  NULLS LAST, CAST(((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c3)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c5))) BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR('1632346137')))OR(rt1.c5))))) IS TRUE)  as count FROM rt1 ORDER BY (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END IN ()) ASC  NULLS LAST, CAST(((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c3)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c0)))AND(rt1.c5))) BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR('1632346137')))OR(rt1.c5))))) ORDER BY (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END IN ()) ASC  NULLS LAST, CAST(((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c3)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)OR(rt1.c0)))AND(rt1.c5))) BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR('1632346137')))OR(rt1.c5))))) IS TRUE)  as count FROM rt1 ORDER BY (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END IN ()) ASC  NULLS LAST, CAST(((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c3)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((rt1.c4)OR(rt1.c0)))AND(rt1.c5))) BETWEEN ((rt1.c0 IN ())) AND (((((rt1.c3)OR('1632346137')))OR(rt1.c5))))) ORDER BY (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END IN ()) ASC  NULLS LAST, CAST(((((((((((((rt1.c4)AND(rt1.c5)))OR(rt1.c5)))AND(rt1.c4)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c3)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM v0, rt1 WHERE (CASE ((rt1.c2)>>(v0.c1))  WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4)) THEN ((0x4c9c0000) IS TRUE) WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c0 THEN v0.c0 ELSE x'' END WHEN rt1.c4 THEN HEX(rt1.c2) ELSE '-88177211' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)>>(v0.c1))  WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4)) THEN ((0x4c9c0000) IS TRUE) WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c0 THEN v0.c0 ELSE x'' END WHEN rt1.c4 THEN HEX(rt1.c2) ELSE '-88177211' END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE ((rt1.c2)>>(v0.c1))  WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4)) THEN ((0x4c9c0000) IS TRUE) WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c0 THEN v0.c0 ELSE x'' END WHEN rt1.c4 THEN HEX(rt1.c2) ELSE '-88177211' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)>>(v0.c1))  WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4)) THEN ((0x4c9c0000) IS TRUE) WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c0 THEN v0.c0 ELSE x'' END WHEN rt1.c4 THEN HEX(rt1.c2) ELSE '-88177211' END) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (CASE ((rt1.c2)>>(v0.c1))  WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c4)) THEN ((0x4c9c0000) IS TRUE) WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c0 THEN v0.c0 ELSE x'' END WHEN rt1.c4 THEN HEX(rt1.c2) ELSE '-88177211' END);
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((+ (rt1.c1)))) WHERE (x'8668') ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((v0.c2))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'8668') IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((+ (rt1.c1)))) ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((v0.c2))) AS BLOB)  NULLS LAST);
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((+ (rt1.c1)))) WHERE (x'8668') ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((v0.c2))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'8668') IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((+ (rt1.c1)))) ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((v0.c2))) AS BLOB)  NULLS LAST);
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((+ (rt1.c1)))) WHERE (x'8668') ORDER BY CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((v0.c2))) AS BLOB)  NULLS LAST;
SELECT * FROM rt1, v0, rt0 WHERE (((UPPER(v0.c0))+(((v0.c1)=(v0.c2))))) ORDER BY x'f1a3' ASC;
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c0))+(((v0.c1)==(v0.c2))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY x'f1a3' ASC);
SELECT * FROM rt1, v0, rt0 WHERE (((UPPER(v0.c0))+(((v0.c1)=(v0.c2))))) ORDER BY x'f1a3' ASC;
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c0))+(((v0.c1)==(v0.c2))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY x'f1a3' ASC);
SELECT * FROM rt1, v0, rt0 WHERE (((UPPER(v0.c0))+(((v0.c1)=(v0.c2))))) ORDER BY x'f1a3' ASC;
SELECT * FROM v0, rt0 WHERE (((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY CAST(((v0.c1) NOT NULL) AS REAL)  NULLS LAST, CASE WHEN COALESCE(DISTINCT rt0.c0, v0.c1) THEN ((v0.c1) IS TRUE) ELSE 0.798834125162282 END ASC, CASE WHEN '-794731904' THEN (((rt0.c1, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c2, rt0.c1, rt0.c2))) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c1) NOT NULL) AS REAL)  NULLS LAST, CASE WHEN COALESCE(DISTINCT rt0.c0, v0.c1) THEN ((v0.c1) IS TRUE) ELSE 0.798834125162282 END ASC, CASE WHEN '-794731904' THEN (((rt0.c1, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c2, rt0.c1, rt0.c2))) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END ASC);
SELECT * FROM v0, rt0 WHERE (((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY CAST(((v0.c1) NOT NULL) AS REAL)  NULLS LAST, CASE WHEN COALESCE(DISTINCT rt0.c0, v0.c1) THEN ((v0.c1) IS TRUE) ELSE 0.798834125162282 END ASC, CASE WHEN '-794731904' THEN (((rt0.c1, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c2, rt0.c1, rt0.c2))) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c1) NOT NULL) AS REAL)  NULLS LAST, CASE WHEN COALESCE(DISTINCT rt0.c0, v0.c1) THEN ((v0.c1) IS TRUE) ELSE 0.798834125162282 END ASC, CASE WHEN '-794731904' THEN (((rt0.c1, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c2, rt0.c1, rt0.c2))) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END ASC);
SELECT * FROM v0, rt0 WHERE (((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ORDER BY CAST(((v0.c1) NOT NULL) AS REAL)  NULLS LAST, CASE WHEN COALESCE(DISTINCT rt0.c0, v0.c1) THEN ((v0.c1) IS TRUE) ELSE 0.798834125162282 END ASC, CASE WHEN '-794731904' THEN (((rt0.c1, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c1)) AND ((v0.c2, rt0.c1, rt0.c2))) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (x'');
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (json_insert(LOWER(rt1.c3), ((v0.c2) BETWEEN (rt1.c1) AND (rt0.c1)), ((v0.c0)==(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((json_insert(LOWER(rt1.c3), ((v0.c2) BETWEEN (rt1.c1) AND (rt0.c1)), ((v0.c0)=(rt1.c4)))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (json_insert(LOWER(rt1.c3), ((v0.c2) BETWEEN (rt1.c1) AND (rt0.c1)), ((v0.c0)==(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((json_insert(LOWER(rt1.c3), ((v0.c2) BETWEEN (rt1.c1) AND (rt0.c1)), ((v0.c0)=(rt1.c4)))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (json_insert(LOWER(rt1.c3), ((v0.c2) BETWEEN (rt1.c1) AND (rt0.c1)), ((v0.c0)==(rt1.c4))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((rt0.c2)OR(0x6aa257a3)))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR(0X6aa257a3)))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((rt0.c2)OR(0x6aa257a3)))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)OR(0X6aa257a3)))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((rt0.c2)OR(0x6aa257a3)))AND(rt0.c1));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS TEXT));
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3)<=(v0.c1)))+(CAST(rt1.c3 AS TEXT)))) ORDER BY ((((rt1.c5)AND(0.25687162692999))) NOT BETWEEN (CASE rt1.c5  WHEN v0.c2 THEN rt1.c1 WHEN rt1.c4 THEN v0.c1 WHEN '' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END) AND (((((v0.c1)AND(x'')))AND(rt1.c5)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<=(v0.c1)))+(CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((rt1.c5)AND(0.25687162692999))) NOT BETWEEN (CASE rt1.c5  WHEN v0.c2 THEN rt1.c1 WHEN rt1.c4 THEN v0.c1 WHEN '' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END) AND (((((v0.c1)AND(x'')))AND(rt1.c5)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3)<=(v0.c1)))+(CAST(rt1.c3 AS TEXT)))) ORDER BY ((((rt1.c5)AND(0.25687162692999))) NOT BETWEEN (CASE rt1.c5  WHEN v0.c2 THEN rt1.c1 WHEN rt1.c4 THEN v0.c1 WHEN '' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END) AND (((((v0.c1)AND(x'')))AND(rt1.c5)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<=(v0.c1)))+(CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((rt1.c5)AND(0.25687162692999))) NOT BETWEEN (CASE rt1.c5  WHEN v0.c2 THEN rt1.c1 WHEN rt1.c4 THEN v0.c1 WHEN '' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END) AND (((((v0.c1)AND(x'')))AND(rt1.c5)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3)<=(v0.c1)))+(CAST(rt1.c3 AS TEXT)))) ORDER BY ((((rt1.c5)AND(0.25687162692999))) NOT BETWEEN (CASE rt1.c5  WHEN v0.c2 THEN rt1.c1 WHEN rt1.c4 THEN v0.c1 WHEN '' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c1 ELSE rt1.c2 END) AND (((((v0.c1)AND(x'')))AND(rt1.c5)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c4 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c4 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c4 IN ())) NOT NULL));
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (+ (((rt1.c1) NOT NULL))) WHERE (((+ (v0.c1)) IN ())) ORDER BY CAST(NULL AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c1)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (+ (((rt1.c1) NOT NULL))) ORDER BY CAST(NULL AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (+ (((rt1.c1) NOT NULL))) WHERE (((+ (v0.c1)) IN ())) ORDER BY CAST(NULL AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c1)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON (+ (((rt1.c1) NOT NULL))) ORDER BY CAST(NULL AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON (+ (((rt1.c1) NOT NULL))) WHERE (((+ (v0.c1)) IN ())) ORDER BY CAST(NULL AS TEXT) ASC  NULLS FIRST;
SELECT * FROM v0, rt1, rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY CAST(LOWER(0.5386866004274491) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CAST(LOWER(0.5386866004274491) AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, rt1, rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY CAST(LOWER(0.5386866004274491) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CAST(LOWER(0.5386866004274491) AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, rt1, rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY CAST(LOWER(0.5386866004274491) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt1, v0 WHERE ((((~ (rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE ((((~ (rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE ((((~ (rt1.c2))) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2) NOT NULL)) IS TRUE)) ORDER BY CASE WHEN ((((((((NULL)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(v0.c2)) THEN CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END WHEN ((v0.c2)>=(v0.c1)) THEN (+ (v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((((((NULL)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(v0.c2)) THEN CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END WHEN ((v0.c2)>=(v0.c1)) THEN (+ (v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2) NOT NULL)) IS TRUE)) ORDER BY CASE WHEN ((((((((NULL)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(v0.c2)) THEN CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END WHEN ((v0.c2)>=(v0.c1)) THEN (+ (v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((((((NULL)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(v0.c2)) THEN CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END WHEN ((v0.c2)>=(v0.c1)) THEN (+ (v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2) NOT NULL)) IS TRUE)) ORDER BY CASE WHEN ((((((((NULL)AND(v0.c0)))AND(v0.c1)))OR(v0.c0)))OR(v0.c2)) THEN CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END WHEN ((v0.c2)>=(v0.c1)) THEN (+ (v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((rt1.c0)%(0.15927984721563793)) COLLATE NOCASE) ORDER BY ((((((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))), ((((((rt1.c0) NOTNULL))OR(((((((((rt1.c0)AND(rt1.c5)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c0)>(rt1.c2)))) DESC, (HEX(DISTINCT rt1.c4) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)%(0.15927984721563793)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))), ((((((rt1.c0) NOTNULL))OR(((((((((rt1.c0)AND(rt1.c5)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c0)>(rt1.c2)))) DESC, (HEX(DISTINCT rt1.c4) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)%(0.15927984721563793)) COLLATE NOCASE) ORDER BY ((((((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))), ((((((rt1.c0) NOTNULL))OR(((((((((rt1.c0)AND(rt1.c5)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c0)>(rt1.c2)))) DESC, (HEX(DISTINCT rt1.c4) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)%(0.15927984721563793)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))), ((((((rt1.c0) NOTNULL))OR(((((((((rt1.c0)AND(rt1.c5)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c0)>(rt1.c2)))) DESC, (HEX(DISTINCT rt1.c4) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)%(0.15927984721563793)) COLLATE NOCASE) ORDER BY ((((((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))), ((((((rt1.c0) NOTNULL))OR(((((((((rt1.c0)AND(rt1.c5)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c0)>(rt1.c2)))) DESC, (HEX(DISTINCT rt1.c4) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (SUBSTR((('⚀v*''2') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c3 END)) ORDER BY COALESCE((NOT (rt1.c1)), ((v0.c2)<>(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((('⚀v*''2') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c3 END)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY COALESCE((NOT (rt1.c1)), ((v0.c2)!=(rt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (SUBSTR((('⚀v*''2') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c3 END)) ORDER BY COALESCE((NOT (rt1.c1)), ((v0.c2)<>(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((('⚀v*''2') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c3 END)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY COALESCE((NOT (rt1.c1)), ((v0.c2)!=(rt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (SUBSTR((('⚀v*''2') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c3 THEN v0.c1 WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c3 END)) ORDER BY COALESCE((NOT (rt1.c1)), ((v0.c2)<>(rt1.c0)))  NULLS LAST;
SELECT * FROM v0 WHERE ((((+ (v0.c1))) IS TRUE)) ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE) ASC);
SELECT * FROM v0 WHERE ((((+ (v0.c1))) IS TRUE)) ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE) ASC);
SELECT * FROM v0 WHERE ((((+ (v0.c1))) IS TRUE)) ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE) ASC;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((v0.c0))=((''))))) AND ((v0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((v0.c0))==((''))))) AND ((v0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((v0.c0))=((''))))) AND ((v0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((((v0.c0))==((''))))) AND ((v0.c2)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((v0.c0))=((''))))) AND ((v0.c2))));
SELECT ALL * FROM v0, rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c5)) AS REAL)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c5)) AS REAL)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c5)) AS REAL));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (v0.c1) ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS FIRST, json_remove(rt1.c2 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), ('-1244454532' IN ()), ((v0.c1) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS FIRST, json_remove(rt1.c2 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), ('-1244454532' IN ()), ((v0.c1) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (v0.c1) ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS FIRST, json_remove(rt1.c2 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), ('-1244454532' IN ()), ((v0.c1) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c0) NOT NULL) ASC  NULLS FIRST, json_remove(rt1.c2 COLLATE BINARY, CAST(v0.c1 AS NUMERIC), ('-1244454532' IN ()), ((v0.c1) IS TRUE)) ASC);
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON IFNULL(DISTINCT -1323038775, rt1.c2 COLLATE BINARY) WHERE (CASE WHEN rt1.c2 THEN ((rt1.c1) NOTNULL) ELSE (v0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN ((rt1.c1) NOTNULL) ELSE (v0.c1 IN ()) END) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON IFNULL(DISTINCT -1323038775, rt1.c2 COLLATE BINARY));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON IFNULL(DISTINCT -1323038775, rt1.c2 COLLATE BINARY) WHERE (CASE WHEN rt1.c2 THEN ((rt1.c1) NOTNULL) ELSE (v0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN ((rt1.c1) NOTNULL) ELSE (v0.c1 IN ()) END) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON IFNULL(DISTINCT -1323038775, rt1.c2 COLLATE BINARY));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON IFNULL(DISTINCT -1323038775, rt1.c2 COLLATE BINARY) WHERE (CASE WHEN rt1.c2 THEN ((rt1.c1) NOTNULL) ELSE (v0.c1 IN ()) END);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CASE WHEN CAST(rt1.c5 AS REAL) THEN ((v0.c1)<(rt1.c0)) WHEN '383558363' THEN (0X89a7122 IN ()) WHEN (((((((('')OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c4)) THEN ((rt0.c1) ISNULL) ELSE ((v0.c1)LIKE(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c5 AS REAL) THEN ((v0.c1)<(rt1.c0)) WHEN '383558363' THEN (0x89a7122 IN ()) WHEN (((((((('')OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c4)) THEN ((rt0.c1) ISNULL) ELSE ((v0.c1)LIKE(v0.c2)) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CASE WHEN CAST(rt1.c5 AS REAL) THEN ((v0.c1)<(rt1.c0)) WHEN '383558363' THEN (0X89a7122 IN ()) WHEN (((((((('')OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c4)) THEN ((rt0.c1) ISNULL) ELSE ((v0.c1)LIKE(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c5 AS REAL) THEN ((v0.c1)<(rt1.c0)) WHEN '383558363' THEN (0x89a7122 IN ()) WHEN (((((((('')OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c4)) THEN ((rt0.c1) ISNULL) ELSE ((v0.c1)LIKE(v0.c2)) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CASE WHEN CAST(rt1.c5 AS REAL) THEN ((v0.c1)<(rt1.c0)) WHEN '383558363' THEN (0X89a7122 IN ()) WHEN (((((((('')OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c4)) THEN ((rt0.c1) ISNULL) ELSE ((v0.c1)LIKE(v0.c2)) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c2, v0.c1, v0.c2))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))OR(v0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c2, v0.c1, v0.c2))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))OR(v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c2, v0.c1, v0.c2))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))OR(v0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c2, v0.c1, v0.c2))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))OR(v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c0, v0.c2, v0.c2)) AND ((v0.c2, v0.c1, v0.c2))))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))))OR(v0.c1 COLLATE BINARY)));
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((x'')OR(rt1.c1)))OR(v0.c2)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')OR(rt1.c1)))OR(v0.c2)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((x'')OR(rt1.c1)))OR(v0.c2)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'')OR(rt1.c1)))OR(v0.c2)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((x'')OR(rt1.c1)))OR(v0.c2)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE));
SELECT * FROM rt1, rt0 WHERE (((((((('-1244454532')) NOT BETWEEN ((rt1.c5)) AND (('Q2'))))OR(CASE rt0.c1  WHEN rt1.c3 THEN rt1.c2 ELSE NULL END)))OR(CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((('-1244454532')) NOT BETWEEN ((rt1.c5)) AND (('Q2'))))OR(CASE rt0.c1  WHEN rt1.c3 THEN rt1.c2 ELSE NULL END)))OR(CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED);
SELECT * FROM rt1, rt0 WHERE (((((((('-1244454532')) NOT BETWEEN ((rt1.c5)) AND (('Q2'))))OR(CASE rt0.c1  WHEN rt1.c3 THEN rt1.c2 ELSE NULL END)))OR(CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((('-1244454532')) NOT BETWEEN ((rt1.c5)) AND (('Q2'))))OR(CASE rt0.c1  WHEN rt1.c3 THEN rt1.c2 ELSE NULL END)))OR(CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED);
SELECT * FROM rt1, rt0 WHERE (((((((('-1244454532')) NOT BETWEEN ((rt1.c5)) AND (('Q2'))))OR(CASE rt0.c1  WHEN rt1.c3 THEN rt1.c2 ELSE NULL END)))OR(CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN ((v0.c1) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN rt0.c2 WHEN ((rt0.c0) ISNULL) THEN json_array_length(rt0.c2, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c1 AS NUMERIC) THEN ((v0.c1) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN rt0.c2 WHEN ((rt0.c0) ISNULL) THEN json_array_length(rt0.c2, rt0.c2) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN ((v0.c1) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN rt0.c2 WHEN ((rt0.c0) ISNULL) THEN json_array_length(rt0.c2, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c1 AS NUMERIC) THEN ((v0.c1) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN rt0.c2 WHEN ((rt0.c0) ISNULL) THEN json_array_length(rt0.c2, rt0.c2) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN CAST(v0.c1 AS NUMERIC) THEN ((v0.c1) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN rt0.c2 WHEN ((rt0.c0) ISNULL) THEN json_array_length(rt0.c2, rt0.c2) END);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((x'eac9' IN ()))/(((v0.c0)==(rt1.c4))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'eac9' IN ()))/(((v0.c0)==(rt1.c4))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((x'eac9' IN ()))/(((v0.c0)==(rt1.c4))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'eac9' IN ()))/(((v0.c0)==(rt1.c4))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((x'eac9' IN ()))/(((v0.c0)==(rt1.c4))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE rt1.c5  WHEN rt0.c0 THEN x'' END)GLOB(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c5  WHEN rt0.c0 THEN x'' END)GLOB(rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE rt1.c5  WHEN rt0.c0 THEN x'' END)GLOB(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c5  WHEN rt0.c0 THEN x'' END)GLOB(rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE rt1.c5  WHEN rt0.c0 THEN x'' END)GLOB(rt1.c1)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST((- (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST((- (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (v0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST((- (v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c4)))OR(v0.c1))) BETWEEN (((((((((rt1.c0)AND(v0.c0)))AND(rt1.c4)))AND(v0.c1)))OR(v0.c0))) AND (((v0.c1)LIKE(rt1.c0)))) WHERE ((((v0.c1, v0.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (rt1.c4)), CAST(rt1.c5 AS BLOB))) AND ((CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 END, v0.c0 COLLATE RTRIM, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (rt1.c4)), CAST(rt1.c5 AS BLOB))) AND ((CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 END, v0.c0 COLLATE RTRIM, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c4)))OR(v0.c1))) BETWEEN (((((((((rt1.c0)AND(v0.c0)))AND(rt1.c4)))AND(v0.c1)))OR(v0.c0))) AND (((v0.c1)LIKE(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c4)))OR(v0.c1))) BETWEEN (((((((((rt1.c0)AND(v0.c0)))AND(rt1.c4)))AND(v0.c1)))OR(v0.c0))) AND (((v0.c1)LIKE(rt1.c0)))) WHERE ((((v0.c1, v0.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (rt1.c4)), CAST(rt1.c5 AS BLOB))) AND ((CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 END, v0.c0 COLLATE RTRIM, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (rt1.c4)), CAST(rt1.c5 AS BLOB))) AND ((CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 END, v0.c0 COLLATE RTRIM, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c4)))OR(v0.c1))) BETWEEN (((((((((rt1.c0)AND(v0.c0)))AND(rt1.c4)))AND(v0.c1)))OR(v0.c0))) AND (((v0.c1)LIKE(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((((((((((v0.c2)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c4)))OR(v0.c1))) BETWEEN (((((((((rt1.c0)AND(v0.c0)))AND(rt1.c4)))AND(v0.c1)))OR(v0.c0))) AND (((v0.c1)LIKE(rt1.c0)))) WHERE ((((v0.c1, v0.c2, rt1.c2)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((v0.c1))), ((rt1.c2) BETWEEN (v0.c2) AND (rt1.c4)), CAST(rt1.c5 AS BLOB))) AND ((CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 END, v0.c0 COLLATE RTRIM, ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))) IN ())) ORDER BY CAST(((((rt1.c5)OR(v0.c1)))OR(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY CAST(((((rt1.c5)OR(v0.c1)))OR(rt0.c2)) AS BLOB));
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))) IN ())) ORDER BY CAST(((((rt1.c5)OR(v0.c1)))OR(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY CAST(((((rt1.c5)OR(v0.c1)))OR(rt0.c2)) AS BLOB));
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt0.c2))) IN ())) ORDER BY CAST(((((rt1.c5)OR(v0.c1)))OR(rt0.c2)) AS BLOB);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((((rt1.c1, rt1.c3, v0.c1)) NOT BETWEEN ((-693548274, CASE WHEN rt1.c2 THEN v0.c1 WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c5 WHEN 0.15613297640127932 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END, x'9692')) AND ((((NULL) NOTNULL), ((rt0.c1)!=(rt1.c2)), (NOT (rt1.c2)))))) ORDER BY LIKELIHOOD(((((rt1.c0)OR(rt1.c4)))AND('')), 0.8039642256380586)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c3, v0.c1)) NOT BETWEEN ((-693548274, CASE WHEN rt1.c2 THEN v0.c1 WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c5 WHEN 0.15613297640127932 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END, x'9692')) AND ((((NULL) NOTNULL), ((rt0.c1)<>(rt1.c2)), (NOT (rt1.c2)))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY LIKELIHOOD(((((rt1.c0)OR(rt1.c4)))AND('')), 0.8039642256380586)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((((rt1.c1, rt1.c3, v0.c1)) NOT BETWEEN ((-693548274, CASE WHEN rt1.c2 THEN v0.c1 WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c5 WHEN 0.15613297640127932 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END, x'9692')) AND ((((NULL) NOTNULL), ((rt0.c1)!=(rt1.c2)), (NOT (rt1.c2)))))) ORDER BY LIKELIHOOD(((((rt1.c0)OR(rt1.c4)))AND('')), 0.8039642256380586)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c3, v0.c1)) NOT BETWEEN ((-693548274, CASE WHEN rt1.c2 THEN v0.c1 WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c5 WHEN 0.15613297640127932 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END, x'9692')) AND ((((NULL) NOTNULL), ((rt0.c1)<>(rt1.c2)), (NOT (rt1.c2)))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY LIKELIHOOD(((((rt1.c0)OR(rt1.c4)))AND('')), 0.8039642256380586)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((((rt1.c1, rt1.c3, v0.c1)) NOT BETWEEN ((-693548274, CASE WHEN rt1.c2 THEN v0.c1 WHEN rt1.c4 THEN v0.c1 WHEN v0.c0 THEN rt1.c5 WHEN 0.15613297640127932 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c4 END, x'9692')) AND ((((NULL) NOTNULL), ((rt0.c1)!=(rt1.c2)), (NOT (rt1.c2)))))) ORDER BY LIKELIHOOD(((((rt1.c0)OR(rt1.c4)))AND('')), 0.8039642256380586)  NULLS FIRST;
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((0.294485455565377)&(x'')));
SELECT SUM(count) FROM (SELECT ((((0.294485455565377)&(x''))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((0.294485455565377)&(x'')));
SELECT SUM(count) FROM (SELECT ((((0.294485455565377)&(x''))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((0.294485455565377)&(x'')));
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT COUNT(*) FROM v0 WHERE (CASE NULL  WHEN LOWER(v0.c2) THEN LOWER(DISTINCT v0.c0) END) ORDER BY (NOT ((+ (v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN LOWER(v0.c2) THEN LOWER(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY (NOT ((+ (v0.c1)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE NULL  WHEN LOWER(v0.c2) THEN LOWER(DISTINCT v0.c0) END) ORDER BY (NOT ((+ (v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN LOWER(v0.c2) THEN LOWER(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY (NOT ((+ (v0.c1)))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE NULL  WHEN LOWER(v0.c2) THEN LOWER(DISTINCT v0.c0) END) ORDER BY (NOT ((+ (v0.c1)))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((+ (v0.c0)))));
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c0)))<=(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c0)))<=(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY x'' DESC);
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c0)))<=(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c0)))<=(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY x'' DESC);
SELECT ALL * FROM rt1 WHERE ((((~ (rt1.c0)))<=(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END))) ORDER BY x'' DESC;
SELECT * FROM rt0, rt1, v0 WHERE (((rt0.c1)IS NOT(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((rt0.c1)IS NOT(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((rt0.c1)IS NOT(NULL)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c5 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5 COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c5 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5 COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c5 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0)))%(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0)))%(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0)))%(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0)))%(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0)))%(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt1 WHERE ((+ (((1632346137) IS TRUE)))) ORDER BY (+ (((rt1.c3) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((1632346137) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c3) IS FALSE))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((1632346137) IS TRUE)))) ORDER BY (+ (((rt1.c3) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((1632346137) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c3) IS FALSE))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((1632346137) IS TRUE)))) ORDER BY (+ (((rt1.c3) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c5) NOTNULL))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c5)))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5) NOTNULL))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c5)))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c5) NOTNULL))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c5)))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5) NOTNULL))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c5)))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c5) NOTNULL))AND(((((rt1.c0)AND(rt1.c0)))AND(rt1.c5)))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT ALL * FROM v0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt1.c2)>=(rt0.c2))) BETWEEN (x'af45') AND (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>=(rt0.c2))) BETWEEN (x'af45') AND (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt1.c2)>=(rt0.c2))) BETWEEN (x'af45') AND (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>=(rt0.c2))) BETWEEN (x'af45') AND (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((rt1.c2)>=(rt0.c2))) BETWEEN (x'af45') AND (((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)%(rt1.c4)))>(rt1.c5 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt0.c0)%(rt1.c4)))>(rt1.c5 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)%(rt1.c4)))>(rt1.c5 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt0.c0)%(rt1.c4)))>(rt1.c5 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (NULL) ORDER BY ((((rt0.c0)%(rt1.c4)))>(rt1.c5 COLLATE BINARY));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c2);
SELECT * FROM rt1, rt0, v0 WHERE ((((((rt1.c5))>((rt0.c2))))&((((rt1.c2))>((rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c5))>((rt0.c2))))&((((rt1.c2))>((rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((((((rt1.c5))>((rt0.c2))))&((((rt1.c2))>((rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c5))>((rt0.c2))))&((((rt1.c2))>((rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((((((rt1.c5))>((rt0.c2))))&((((rt1.c2))>((rt1.c4))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c1))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c1))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (v0.c1)));
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2) NOT BETWEEN (rt1.c5) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOT BETWEEN (rt1.c5) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2) NOT BETWEEN (rt1.c5) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOT BETWEEN (rt1.c5) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c2) NOT BETWEEN (rt1.c5) AND (v0.c0)) COLLATE NOCASE);
SELECT * FROM rt1, rt0, v0 WHERE ((((((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))>>(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 END))) ORDER BY (~ (rt1.c4)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))>>(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (~ (rt1.c4)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt1, rt0, v0 WHERE ((((((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))>>(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 END))) ORDER BY (~ (rt1.c4)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))>>(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (~ (rt1.c4)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt1, rt0, v0 WHERE ((((((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))>>(CASE rt1.c1  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c4 WHEN v0.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c1 WHEN v0.c2 THEN rt1.c0 END))) ORDER BY (~ (rt1.c4)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY CASE WHEN (NOT ('4C')) THEN (- (v0.c0)) ELSE ((v0.c1)OR(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (NOT ('4C')) THEN (- (v0.c0)) ELSE ((v0.c1)OR(v0.c0)) END);
SELECT ALL * FROM v0 WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY CASE WHEN (NOT ('4C')) THEN (- (v0.c0)) ELSE ((v0.c1)OR(v0.c0)) END;
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (NOT ('4C')) THEN (- (v0.c0)) ELSE ((v0.c1)OR(v0.c0)) END);
SELECT ALL * FROM v0 WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY CASE WHEN (NOT ('4C')) THEN (- (v0.c0)) ELSE ((v0.c1)OR(v0.c0)) END;
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(rt1.c1, 0.024536932163750858) COLLATE BINARY COLLATE BINARY) ORDER BY (~ (json_type(rt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt1.c1, 0.024536932163750858) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (~ (json_type(rt1.c3))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(rt1.c1, 0.024536932163750858) COLLATE BINARY COLLATE BINARY) ORDER BY (~ (json_type(rt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt1.c1, 0.024536932163750858) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (~ (json_type(rt1.c3))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(rt1.c1, 0.024536932163750858) COLLATE BINARY COLLATE BINARY) ORDER BY (~ (json_type(rt1.c3))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((NOT ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT ((~ (v0.c2)))));
SELECT COUNT(*) FROM rt1, v0 WHERE (((((v0.c1) BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c3)>(rt1.c5))))) ORDER BY (- (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c3)>(rt1.c5))))) IS TRUE)  as count FROM rt1, v0 ORDER BY (- (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1, v0 WHERE (((((v0.c1) BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c3)>(rt1.c5))))) ORDER BY (- (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c3)>(rt1.c5))))) IS TRUE)  as count FROM rt1, v0 ORDER BY (- (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1, v0 WHERE (((((v0.c1) BETWEEN (rt1.c3) AND (rt1.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (((rt1.c3)>(rt1.c5))))) ORDER BY (- (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)>=('-1799206701')) COLLATE NOCASE) ORDER BY (((((((rt0.c1)) NOT BETWEEN (('1953164936')) AND ((rt0.c0))))AND(NULL)))AND(((rt0.c0)/(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>=('-1799206701')) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)) NOT BETWEEN (('1953164936')) AND ((rt0.c0))))AND(NULL)))AND(((rt0.c0)/(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)>=('-1799206701')) COLLATE NOCASE) ORDER BY (((((((rt0.c1)) NOT BETWEEN (('1953164936')) AND ((rt0.c0))))AND(NULL)))AND(((rt0.c0)/(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>=('-1799206701')) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)) NOT BETWEEN (('1953164936')) AND ((rt0.c0))))AND(NULL)))AND(((rt0.c0)/(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)>=('-1799206701')) COLLATE NOCASE) ORDER BY (((((((rt0.c1)) NOT BETWEEN (('1953164936')) AND ((rt0.c0))))AND(NULL)))AND(((rt0.c0)/(rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((NULL IN ())) NOT BETWEEN (CAST(rt1.c5 AS TEXT)) AND ((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN (CAST(rt1.c5 AS TEXT)) AND ((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((v0.c1)))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((NULL IN ())) NOT BETWEEN (CAST(rt1.c5 AS TEXT)) AND ((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN (CAST(rt1.c5 AS TEXT)) AND ((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((v0.c1)))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((NULL IN ())) NOT BETWEEN (CAST(rt1.c5 AS TEXT)) AND ((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((v0.c1))))));
SELECT * FROM rt1 WHERE (((ABS(DISTINCT 0xffffffff8fa3fd1a))||(0.3527155462729976)));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT 0xffffffff8fa3fd1a))||(0.3527155462729976))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((ABS(DISTINCT 0xffffffff8fa3fd1a))||(0.3527155462729976)));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT 0xffffffff8fa3fd1a))||(0.3527155462729976))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((ABS(DISTINCT 0xffffffff8fa3fd1a))||(0.3527155462729976)));
SELECT * FROM rt0, rt1, v0 WHERE ((((rt0.c1) ISNULL) IN ((((rt1.c4, rt1.c4, v0.c1)) NOT BETWEEN ((rt1.c5, rt1.c4, 0xf5d98c8)) AND ((0.49554246603183905, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ((((rt1.c4, rt1.c4, v0.c1)) NOT BETWEEN ((rt1.c5, rt1.c4, 0Xf5d98c8)) AND ((0.49554246603183905, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((((rt0.c1) ISNULL) IN ((((rt1.c4, rt1.c4, v0.c1)) NOT BETWEEN ((rt1.c5, rt1.c4, 0xf5d98c8)) AND ((0.49554246603183905, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ((((rt1.c4, rt1.c4, v0.c1)) NOT BETWEEN ((rt1.c5, rt1.c4, 0Xf5d98c8)) AND ((0.49554246603183905, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((((rt0.c1) ISNULL) IN ((((rt1.c4, rt1.c4, v0.c1)) NOT BETWEEN ((rt1.c5, rt1.c4, 0xf5d98c8)) AND ((0.49554246603183905, rt0.c2, rt0.c0))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT ALL * FROM v0, rt1 WHERE (LIKELY(rt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (LIKELY(rt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (LIKELY(rt1.c0) COLLATE RTRIM);
SELECT * FROM rt0, v0 WHERE ((((+ (v0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE))) ORDER BY (+ ((v0.c2 IN (NULL, v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ ((v0.c2 IN (NULL, v0.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((+ (v0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE))) ORDER BY (+ ((v0.c2 IN (NULL, v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ ((v0.c2 IN (NULL, v0.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((+ (v0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (rt0.c0 COLLATE NOCASE))) ORDER BY (+ ((v0.c2 IN (NULL, v0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CAST(123557191 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(123557191 AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(123557191 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(123557191 AS BLOB)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(123557191 AS BLOB));
SELECT * FROM rt1 WHERE (((((rt1.c2)<<(rt1.c1)))|(rt1.c2))) ORDER BY '*P춡L', (((NULL)) NOT BETWEEN (((NOT (rt1.c4)))) AND ((LTRIM(rt1.c3, rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c1)))|(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY '*P춡L', (((NULL)) NOT BETWEEN (((NOT (rt1.c4)))) AND ((LTRIM(rt1.c3, rt1.c2))))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c2)<<(rt1.c1)))|(rt1.c2))) ORDER BY '*P춡L', (((NULL)) NOT BETWEEN (((NOT (rt1.c4)))) AND ((LTRIM(rt1.c3, rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c1)))|(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY '*P춡L', (((NULL)) NOT BETWEEN (((NOT (rt1.c4)))) AND ((LTRIM(rt1.c3, rt1.c2))))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c2)<<(rt1.c1)))|(rt1.c2))) ORDER BY '*P춡L', (((NULL)) NOT BETWEEN (((NOT (rt1.c4)))) AND ((LTRIM(rt1.c3, rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c1)<<(v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<<(v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)<<(v0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<<(v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)<<(v0.c2))) IS TRUE));
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((('Bm￿') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('Bm￿') NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((('Bm￿') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('Bm￿') NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((('Bm￿') NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY v0.c0 ASC;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (CASE ROUND(rt0.c2, rt1.c0)  WHEN (((v0.c1)) BETWEEN ((rt1.c2)) AND ((v0.c1))) THEN (('') BETWEEN (v0.c1) AND (rt0.c1)) WHEN v0.c2 THEN (rt1.c0 IN (rt0.c1, x'')) WHEN CASE WHEN rt1.c2 THEN v0.c2 END THEN json_remove(rt1.c2, rt1.c0) ELSE ((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ROUND(rt0.c2, rt1.c0)  WHEN (((v0.c1)) BETWEEN ((rt1.c2)) AND ((v0.c1))) THEN (('') BETWEEN (v0.c1) AND (rt0.c1)) WHEN v0.c2 THEN (rt1.c0 IN (rt0.c1, x'')) WHEN CASE WHEN rt1.c2 THEN v0.c2 END THEN json_remove(rt1.c2, rt1.c0) ELSE ((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (CASE ROUND(rt0.c2, rt1.c0)  WHEN (((v0.c1)) BETWEEN ((rt1.c2)) AND ((v0.c1))) THEN (('') BETWEEN (v0.c1) AND (rt0.c1)) WHEN v0.c2 THEN (rt1.c0 IN (rt0.c1, x'')) WHEN CASE WHEN rt1.c2 THEN v0.c2 END THEN json_remove(rt1.c2, rt1.c0) ELSE ((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ROUND(rt0.c2, rt1.c0)  WHEN (((v0.c1)) BETWEEN ((rt1.c2)) AND ((v0.c1))) THEN (('') BETWEEN (v0.c1) AND (rt0.c1)) WHEN v0.c2 THEN (rt1.c0 IN (rt0.c1, x'')) WHEN CASE WHEN rt1.c2 THEN v0.c2 END THEN json_remove(rt1.c2, rt1.c0) ELSE ((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (CASE ROUND(rt0.c2, rt1.c0)  WHEN (((v0.c1)) BETWEEN ((rt1.c2)) AND ((v0.c1))) THEN (('') BETWEEN (v0.c1) AND (rt0.c1)) WHEN v0.c2 THEN (rt1.c0 IN (rt0.c1, x'')) WHEN CASE WHEN rt1.c2 THEN v0.c2 END THEN json_remove(rt1.c2, rt1.c0) ELSE ((rt1.c2) NOT BETWEEN (v0.c2) AND (rt0.c2)) END);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)<(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<(v0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)<(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<(v0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c0)<(v0.c1)) IN ()));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST((~ (rt1.c4)) AS TEXT) WHERE (QUOTE(NULLIF(DISTINCT v0.c0, v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(NULLIF(DISTINCT v0.c0, v0.c2))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST((~ (rt1.c4)) AS TEXT));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST((~ (rt1.c4)) AS TEXT) WHERE (QUOTE(NULLIF(DISTINCT v0.c0, v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(NULLIF(DISTINCT v0.c0, v0.c2))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST((~ (rt1.c4)) AS TEXT));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST((~ (rt1.c4)) AS TEXT) WHERE (QUOTE(NULLIF(DISTINCT v0.c0, v0.c2)));
SELECT * FROM rt0 CROSS JOIN rt1 ON CAST(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2)) AS REAL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2)) AS REAL));
SELECT * FROM rt0 CROSS JOIN rt1 ON CAST(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2)) AS REAL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON CAST(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2)) AS REAL));
SELECT * FROM rt0 CROSS JOIN rt1 ON CAST(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2)) AS REAL) WHERE (NULL);
SELECT COUNT(*) FROM rt1 WHERE (json((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))) ORDER BY (((rt1.c0)AND(rt1.c3)) IN ()) ASC  NULLS LAST, 0x153b3148  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)AND(rt1.c3)) IN ()) ASC  NULLS LAST, 0x153b3148  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (json((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))) ORDER BY (((rt1.c0)AND(rt1.c3)) IN ()) ASC  NULLS LAST, 0x153b3148  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0)AND(rt1.c3)) IN ()) ASC  NULLS LAST, 0x153b3148  NULLS FIRST);
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c5)*(((rt1.c0)-(v0.c0))))) ORDER BY CAST(x'' AS INTEGER), CASE WHEN ((((((((((((rt1.c4)AND(rt1.c5)))OR(v0.c2)))AND(rt1.c3)))OR(v0.c0)))AND(rt1.c3)))OR(v0.c0)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt1.c1)) ELSE ((rt1.c0)||(v0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((rt1.c5)*(((rt1.c0)-(v0.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(x'' AS INTEGER), CASE WHEN ((((((((((((rt1.c4)AND(rt1.c5)))OR(v0.c2)))AND(rt1.c3)))OR(v0.c0)))AND(rt1.c3)))OR(v0.c0)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt1.c1)) ELSE ((rt1.c0)||(v0.c2)) END);
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c5)*(((rt1.c0)-(v0.c0))))) ORDER BY CAST(x'' AS INTEGER), CASE WHEN ((((((((((((rt1.c4)AND(rt1.c5)))OR(v0.c2)))AND(rt1.c3)))OR(v0.c0)))AND(rt1.c3)))OR(v0.c0)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt1.c1)) ELSE ((rt1.c0)||(v0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((rt1.c5)*(((rt1.c0)-(v0.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(x'' AS INTEGER), CASE WHEN ((((((((((((rt1.c4)AND(rt1.c5)))OR(v0.c2)))AND(rt1.c3)))OR(v0.c0)))AND(rt1.c3)))OR(v0.c0)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt1.c1)) ELSE ((rt1.c0)||(v0.c2)) END);
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c5)*(((rt1.c0)-(v0.c0))))) ORDER BY CAST(x'' AS INTEGER), CASE WHEN ((((((((((((rt1.c4)AND(rt1.c5)))OR(v0.c2)))AND(rt1.c3)))OR(v0.c0)))AND(rt1.c3)))OR(v0.c0)) THEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt1.c1)) ELSE ((rt1.c0)||(v0.c2)) END;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))) NOT BETWEEN (LOWER(DISTINCT rt1.c2)) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))) NOT BETWEEN (LOWER(DISTINCT rt1.c2)) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))) NOT BETWEEN (LOWER(DISTINCT rt1.c2)) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))) NOT BETWEEN (LOWER(DISTINCT rt1.c2)) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))) NOT BETWEEN (LOWER(DISTINCT rt1.c2)) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)/(''))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(''))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)/(''))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(''))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((rt0.c1)/(''))) IS TRUE));
SELECT * FROM rt1, v0, rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY NULL DESC  NULLS LAST, rt1.c3 ASC, (((rt0.c0, rt1.c4, v0.c0))>((rt1.c4, rt1.c1, rt0.c1))) COLLATE BINARY DESC  NULLS LAST, ((((v0.c0) IS FALSE))IS NOT(rt1.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY NULL DESC  NULLS LAST, rt1.c3 ASC, (((rt0.c0, rt1.c4, v0.c0))>((rt1.c4, rt1.c1, rt0.c1))) COLLATE BINARY DESC  NULLS LAST, ((((v0.c0) IS FALSE))IS NOT(rt1.c4 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY NULL DESC  NULLS LAST, rt1.c3 ASC, (((rt0.c0, rt1.c4, v0.c0))>((rt1.c4, rt1.c1, rt0.c1))) COLLATE BINARY DESC  NULLS LAST, ((((v0.c0) IS FALSE))IS NOT(rt1.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY NULL DESC  NULLS LAST, rt1.c3 ASC, (((rt0.c0, rt1.c4, v0.c0))>((rt1.c4, rt1.c1, rt0.c1))) COLLATE BINARY DESC  NULLS LAST, ((((v0.c0) IS FALSE))IS NOT(rt1.c4 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY NULL DESC  NULLS LAST, rt1.c3 ASC, (((rt0.c0, rt1.c4, v0.c0))>((rt1.c4, rt1.c1, rt0.c1))) COLLATE BINARY DESC  NULLS LAST, ((((v0.c0) IS FALSE))IS NOT(rt1.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN rt1 ON (((NOT (v0.c1))) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN 0.8429480128849446 THEN rt1.c2 END)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON (((NOT (v0.c1))) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN 0.8429480128849446 THEN rt1.c2 END)));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN rt1 ON (((NOT (v0.c1))) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN 0.8429480128849446 THEN rt1.c2 END)) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON (((NOT (v0.c1))) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN 0.8429480128849446 THEN rt1.c2 END)));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN rt1 ON (((NOT (v0.c1))) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN 0.8429480128849446 THEN rt1.c2 END)) WHERE ('');
SELECT COUNT(*) FROM rt0, rt1 WHERE ((0.07955370561883168 IN ())) ORDER BY UNLIKELY(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((0.07955370561883168 IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY UNLIKELY(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((0.07955370561883168 IN ())) ORDER BY UNLIKELY(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((0.07955370561883168 IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY UNLIKELY(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((0.07955370561883168 IN ())) ORDER BY UNLIKELY(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON '﷖abVYSx*' WHERE ('') ORDER BY TRIM(DISTINCT (((rt1.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c3, 0.9238377912962747, '0.42933906824715384')) AND ((rt1.c4, rt1.c2, rt1.c1))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON '﷖abVYSx*' ORDER BY TRIM(DISTINCT (((rt1.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c3, 0.9238377912962747, '0.42933906824715384')) AND ((rt1.c4, rt1.c2, rt1.c1)))));
SELECT ALL COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON '﷖abVYSx*' WHERE ('') ORDER BY TRIM(DISTINCT (((rt1.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c3, 0.9238377912962747, '0.42933906824715384')) AND ((rt1.c4, rt1.c2, rt1.c1))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON '﷖abVYSx*' ORDER BY TRIM(DISTINCT (((rt1.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c3, 0.9238377912962747, '0.42933906824715384')) AND ((rt1.c4, rt1.c2, rt1.c1)))));
SELECT ALL COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON '﷖abVYSx*' WHERE ('') ORDER BY TRIM(DISTINCT (((rt1.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((rt1.c3, 0.9238377912962747, '0.42933906824715384')) AND ((rt1.c4, rt1.c2, rt1.c1))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST(0.39968151153062537 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.39968151153062537 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST(0.39968151153062537 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.39968151153062537 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST(0.39968151153062537 AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(rt0.c1)))AND(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(rt0.c1)))AND(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(rt0.c1)))AND(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(rt0.c1)))AND(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(rt0.c1)))AND(((rt0.c1)+(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 NOT INDEXED WHERE (((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (CAST(NULL AS BLOB)) AND (((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (CAST(NULL AS BLOB)) AND (((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 NOT INDEXED WHERE (((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (CAST(NULL AS BLOB)) AND (((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (CAST(NULL AS BLOB)) AND (((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 NOT INDEXED WHERE (((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))) BETWEEN (CAST(NULL AS BLOB)) AND (((rt1.c3) IS TRUE))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((UPPER(DISTINCT rt1.c3))>(((rt1.c1)*(x'19a3c918')))) WHERE ((((v0.c2 IN ()))>=((+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))>=((+ (rt1.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((UPPER(DISTINCT rt1.c3))>(((rt1.c1)*(x'19a3c918')))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((UPPER(DISTINCT rt1.c3))>(((rt1.c1)*(x'19a3c918')))) WHERE ((((v0.c2 IN ()))>=((+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))>=((+ (rt1.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((UPPER(DISTINCT rt1.c3))>(((rt1.c1)*(x'19a3c918')))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((UPPER(DISTINCT rt1.c3))>(((rt1.c1)*(x'19a3c918')))) WHERE ((((v0.c2 IN ()))>=((+ (rt1.c4)))));
SELECT * FROM v0, rt1, rt0 WHERE ((((((rt0.c1))<>((rt0.c2))))=(((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c0))))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))!=((rt0.c2))))==(((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL) ASC);
SELECT * FROM v0, rt1, rt0 WHERE ((((((rt0.c1))<>((rt0.c2))))=(((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c0))))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))!=((rt0.c2))))==(((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL) ASC);
SELECT * FROM v0, rt1, rt0 WHERE ((((((rt0.c1))<>((rt0.c2))))=(((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c1)))AND(v0.c2)))OR(rt0.c0))))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL) ASC;
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (ROUND(((rt1.c4) IS FALSE), (- (rt1.c2)))) ORDER BY ((COALESCE(DISTINCT rt0.c0, rt1.c1, rt1.c1, v0.c1))%((((rt1.c2, rt1.c3, rt0.c2))>=((x'8032f19c', rt0.c2, x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(((rt1.c4) IS FALSE), (- (rt1.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON rt1.c1 ORDER BY ((COALESCE(DISTINCT rt0.c0, rt1.c1, rt1.c1, v0.c1))%((((rt1.c2, rt1.c3, rt0.c2))>=((x'8032f19c', rt0.c2, x'')))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (ROUND(((rt1.c4) IS FALSE), (- (rt1.c2)))) ORDER BY ((COALESCE(DISTINCT rt0.c0, rt1.c1, rt1.c1, v0.c1))%((((rt1.c2, rt1.c3, rt0.c2))>=((x'8032f19c', rt0.c2, x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(((rt1.c4) IS FALSE), (- (rt1.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON rt1.c1 ORDER BY ((COALESCE(DISTINCT rt0.c0, rt1.c1, rt1.c1, v0.c1))%((((rt1.c2, rt1.c3, rt0.c2))>=((x'8032f19c', rt0.c2, x'')))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (ROUND(((rt1.c4) IS FALSE), (- (rt1.c2)))) ORDER BY ((COALESCE(DISTINCT rt0.c0, rt1.c1, rt1.c1, v0.c1))%((((rt1.c2, rt1.c3, rt0.c2))>=((x'8032f19c', rt0.c2, x'')))))  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))+(CASE WHEN v0.c1 THEN v0.c0 ELSE 0.9298129878458944 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))+(CASE WHEN v0.c1 THEN v0.c0 ELSE 0.9298129878458944 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))+(CASE WHEN v0.c1 THEN v0.c0 ELSE 0.9298129878458944 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))+(CASE WHEN v0.c1 THEN v0.c0 ELSE 0.9298129878458944 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))+(CASE WHEN v0.c1 THEN v0.c0 ELSE 0.9298129878458944 END)));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c1 WHERE (CASE WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) THEN (v0.c0 IN ()) END) ORDER BY CASE CAST(rt1.c3 AS TEXT)  WHEN (+ (rt1.c1)) THEN ((v0.c2) IS TRUE) WHEN (((rt1.c0))>((rt1.c1))) THEN ((((rt1.c5)AND(rt1.c4)))OR(rt1.c3)) WHEN rt1.c0 THEN ((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) WHEN 'JzFe' THEN (rt1.c5 IN ()) WHEN rt1.c2 THEN (((rt1.c5, v0.c1, rt1.c3))>((rt1.c1, rt1.c3, rt1.c1))) ELSE CASE WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON v0.c1 ORDER BY CASE CAST(rt1.c3 AS TEXT)  WHEN (+ (rt1.c1)) THEN ((v0.c2) IS TRUE) WHEN (((rt1.c0))>((rt1.c1))) THEN ((((rt1.c5)AND(rt1.c4)))OR(rt1.c3)) WHEN rt1.c0 THEN ((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) WHEN 'JzFe' THEN (rt1.c5 IN ()) WHEN rt1.c2 THEN (((rt1.c5, v0.c1, rt1.c3))>((rt1.c1, rt1.c3, rt1.c1))) ELSE CASE WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c1 WHERE (CASE WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) THEN (v0.c0 IN ()) END) ORDER BY CASE CAST(rt1.c3 AS TEXT)  WHEN (+ (rt1.c1)) THEN ((v0.c2) IS TRUE) WHEN (((rt1.c0))>((rt1.c1))) THEN ((((rt1.c5)AND(rt1.c4)))OR(rt1.c3)) WHEN rt1.c0 THEN ((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) WHEN 'JzFe' THEN (rt1.c5 IN ()) WHEN rt1.c2 THEN (((rt1.c5, v0.c1, rt1.c3))>((rt1.c1, rt1.c3, rt1.c1))) ELSE CASE WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON v0.c1 ORDER BY CASE CAST(rt1.c3 AS TEXT)  WHEN (+ (rt1.c1)) THEN ((v0.c2) IS TRUE) WHEN (((rt1.c0))>((rt1.c1))) THEN ((((rt1.c5)AND(rt1.c4)))OR(rt1.c3)) WHEN rt1.c0 THEN ((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) WHEN 'JzFe' THEN (rt1.c5 IN ()) WHEN rt1.c2 THEN (((rt1.c5, v0.c1, rt1.c3))>((rt1.c1, rt1.c3, rt1.c1))) ELSE CASE WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON v0.c1 WHERE (CASE WHEN ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) THEN (v0.c0 IN ()) END) ORDER BY CASE CAST(rt1.c3 AS TEXT)  WHEN (+ (rt1.c1)) THEN ((v0.c2) IS TRUE) WHEN (((rt1.c0))>((rt1.c1))) THEN ((((rt1.c5)AND(rt1.c4)))OR(rt1.c3)) WHEN rt1.c0 THEN ((v0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)) WHEN 'JzFe' THEN (rt1.c5 IN ()) WHEN rt1.c2 THEN (((rt1.c5, v0.c1, rt1.c3))>((rt1.c1, rt1.c3, rt1.c1))) ELSE CASE WHEN v0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 END END  NULLS LAST;
SELECT * FROM rt1, rt0, v0 WHERE ((+ (CASE v0.c1  WHEN rt1.c3 THEN rt1.c3 END))) ORDER BY (((rt0.c1, rt0.c1, '0.285943323955439'))<((rt0.c0, rt1.c0, v0.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c1  WHEN rt1.c3 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((rt0.c1, rt0.c1, '0.285943323955439'))<((rt0.c0, rt1.c0, v0.c0))) COLLATE BINARY DESC);
SELECT * FROM rt1, rt0, v0 WHERE ((+ (CASE v0.c1  WHEN rt1.c3 THEN rt1.c3 END))) ORDER BY (((rt0.c1, rt0.c1, '0.285943323955439'))<((rt0.c0, rt1.c0, v0.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c1  WHEN rt1.c3 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((rt0.c1, rt0.c1, '0.285943323955439'))<((rt0.c0, rt1.c0, v0.c0))) COLLATE BINARY DESC);
SELECT * FROM rt1, rt0, v0 WHERE ((+ (CASE v0.c1  WHEN rt1.c3 THEN rt1.c3 END))) ORDER BY (((rt0.c1, rt0.c1, '0.285943323955439'))<((rt0.c0, rt1.c0, v0.c0))) COLLATE BINARY DESC;
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((x'b953')GLOB(CAST(rt1.c3 AS BLOB))) CROSS JOIN rt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2))) THEN ((-1.885078246E9) BETWEEN (v0.c2) AND (rt1.c5)) ELSE ((((v0.c0)OR(rt1.c0)))AND(rt1.c1)) END WHERE ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c5))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((x'b953')GLOB(CAST(rt1.c3 AS BLOB))) CROSS JOIN rt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2))) THEN ((-1.885078246E9) BETWEEN (v0.c2) AND (rt1.c5)) ELSE ((((v0.c0)OR(rt1.c0)))AND(rt1.c1)) END);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((x'b953')GLOB(CAST(rt1.c3 AS BLOB))) CROSS JOIN rt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2))) THEN ((-1.885078246E9) BETWEEN (v0.c2) AND (rt1.c5)) ELSE ((((v0.c0)OR(rt1.c0)))AND(rt1.c1)) END WHERE ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c5))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((x'b953')GLOB(CAST(rt1.c3 AS BLOB))) CROSS JOIN rt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2))) THEN ((-1.885078246E9) BETWEEN (v0.c2) AND (rt1.c5)) ELSE ((((v0.c0)OR(rt1.c0)))AND(rt1.c1)) END);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((x'b953')GLOB(CAST(rt1.c3 AS BLOB))) CROSS JOIN rt0 ON CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2))) THEN ((-1.885078246E9) BETWEEN (v0.c2) AND (rt1.c5)) ELSE ((((v0.c0)OR(rt1.c0)))AND(rt1.c1)) END WHERE ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c5)))));
SELECT * FROM rt0, rt1, v0 WHERE ((((rt0.c2)GLOB(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)GLOB(v0.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((((rt0.c2)GLOB(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)GLOB(v0.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((((rt0.c2)GLOB(v0.c2)) IN ()));
SELECT * FROM rt1, v0 WHERE (v0.c1 COLLATE NOCASE) ORDER BY COALESCE(DISTINCT ((v0.c1)<=(rt1.c5)), CAST(rt1.c0 AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0 ORDER BY COALESCE(DISTINCT ((v0.c1)<=(rt1.c5)), CAST(rt1.c0 AS INTEGER))  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (v0.c1 COLLATE NOCASE) ORDER BY COALESCE(DISTINCT ((v0.c1)<=(rt1.c5)), CAST(rt1.c0 AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0 ORDER BY COALESCE(DISTINCT ((v0.c1)<=(rt1.c5)), CAST(rt1.c0 AS INTEGER))  NULLS FIRST);
SELECT * FROM rt1, v0 WHERE (v0.c1 COLLATE NOCASE) ORDER BY COALESCE(DISTINCT ((v0.c1)<=(rt1.c5)), CAST(rt1.c0 AS INTEGER))  NULLS FIRST;
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c2 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0)IS(v0.c0))))) ORDER BY ((((v0.c2)AND(rt0.c2)))<(LIKELY(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0 ORDER BY ((((v0.c2)AND(rt0.c2)))<(LIKELY(rt1.c4))));
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c2 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0)IS(v0.c0))))) ORDER BY ((((v0.c2)AND(rt0.c2)))<(LIKELY(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0 ORDER BY ((((v0.c2)AND(rt0.c2)))<(LIKELY(rt1.c4))));
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c2 IN (v0.c2))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c0)IS(v0.c0))))) ORDER BY ((((v0.c2)AND(rt0.c2)))<(LIKELY(rt1.c4)));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 IN ()) IN ())) ORDER BY ((((((((SQLITE_VERSION())OR(((v0.c2) IS FALSE))))OR('0.20962548515491541' COLLATE RTRIM)))AND(((v0.c1) IS FALSE))))OR(((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((((SQLITE_VERSION())OR(((v0.c2) IS FALSE))))OR('0.20962548515491541' COLLATE RTRIM)))AND(((v0.c1) IS FALSE))))OR(((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 IN ()) IN ())) ORDER BY ((((((((SQLITE_VERSION())OR(((v0.c2) IS FALSE))))OR('0.20962548515491541' COLLATE RTRIM)))AND(((v0.c1) IS FALSE))))OR(((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((((SQLITE_VERSION())OR(((v0.c2) IS FALSE))))OR('0.20962548515491541' COLLATE RTRIM)))AND(((v0.c1) IS FALSE))))OR(((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 IN ()) IN ())) ORDER BY ((((((((SQLITE_VERSION())OR(((v0.c2) IS FALSE))))OR('0.20962548515491541' COLLATE RTRIM)))AND(((v0.c1) IS FALSE))))OR(((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT * FROM rt1, rt0, v0 WHERE ((HEX(DISTINCT v0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT v0.c2) IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((HEX(DISTINCT v0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT v0.c2) IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((HEX(DISTINCT v0.c2) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN NULL ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c5 WHEN rt0.c1 THEN v0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END) AND (((v0.c1)=(rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)LIKE(v0.c0)))OR(((rt0.c2)IS(rt1.c3)))))OR(((0.16919461807701464) NOT NULL))) WHERE (STRFTIME(CASE WHEN v0.c1 THEN rt1.c2 ELSE v0.c0 END, ((v0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c1)), rt0.c2));
SELECT SUM(count) FROM (SELECT ((STRFTIME(CASE WHEN v0.c1 THEN rt1.c2 ELSE v0.c0 END, ((v0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c1)), rt0.c2)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN NULL ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c5 WHEN rt0.c1 THEN v0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END) AND (((v0.c1)==(rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)LIKE(v0.c0)))OR(((rt0.c2)IS(rt1.c3)))))OR(((0.16919461807701464) NOT NULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN NULL ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c5 WHEN rt0.c1 THEN v0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END) AND (((v0.c1)=(rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)LIKE(v0.c0)))OR(((rt0.c2)IS(rt1.c3)))))OR(((0.16919461807701464) NOT NULL))) WHERE (STRFTIME(CASE WHEN v0.c1 THEN rt1.c2 ELSE v0.c0 END, ((v0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c1)), rt0.c2));
SELECT SUM(count) FROM (SELECT ((STRFTIME(CASE WHEN v0.c1 THEN rt1.c2 ELSE v0.c0 END, ((v0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c1)), rt0.c2)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN NULL ELSE rt1.c0 END) BETWEEN (CASE WHEN v0.c2 THEN rt1.c5 WHEN rt0.c1 THEN v0.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END) AND (((v0.c1)==(rt0.c2)))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c3)LIKE(v0.c0)))OR(((rt0.c2)IS(rt1.c3)))))OR(((0.16919461807701464) NOT NULL))));
SELECT ALL * FROM rt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(rt1.c3)) ELSE ((rt1.c2)&(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(rt1.c3)) ELSE ((rt1.c2)&(rt1.c3)) END) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(rt1.c3)) ELSE ((rt1.c2)&(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(rt1.c3)) ELSE ((rt1.c2)&(rt1.c3)) END) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)||(rt1.c3)) ELSE ((rt1.c2)&(rt1.c3)) END);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((~ (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((NULL) NOT NULL)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((~ (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((~ (((NULL) NOT NULL)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((~ (((NULL) NOT NULL))));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(((((rt1.c3)AND(0.33527626974593117)))OR(v0.c0)) AS REAL)) ORDER BY (((((v0.c2))<((rt1.c2)))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(0.33527626974593117)))OR(v0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((((v0.c2))<((rt1.c2)))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(((((rt1.c3)AND(0.33527626974593117)))OR(v0.c0)) AS REAL)) ORDER BY (((((v0.c2))<((rt1.c2)))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(0.33527626974593117)))OR(v0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((((v0.c2))<((rt1.c2)))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(((((rt1.c3)AND(0.33527626974593117)))OR(v0.c0)) AS REAL)) ORDER BY (((((v0.c2))<((rt1.c2)))) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (('605174953' IN ()));
SELECT SUM(count) FROM (SELECT ((('605174953' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('605174953' IN ()));
SELECT SUM(count) FROM (SELECT ((('605174953' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('605174953' IN ()));
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON '-424831703' WHERE (((TRIM(rt1.c3))&(('-1640067041' IN (rt0.c0))))) ORDER BY (((x'')) BETWEEN ((((v0.c1)*(rt1.c4)))) AND ((LIKELY(rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt1.c3))&(('-1640067041' IN (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON '-424831703' ORDER BY (((x'')) BETWEEN ((((v0.c1)*(rt1.c4)))) AND ((LIKELY(rt1.c5)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON '-424831703' WHERE (((TRIM(rt1.c3))&(('-1640067041' IN (rt0.c0))))) ORDER BY (((x'')) BETWEEN ((((v0.c1)*(rt1.c4)))) AND ((LIKELY(rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt1.c3))&(('-1640067041' IN (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON '-424831703' ORDER BY (((x'')) BETWEEN ((((v0.c1)*(rt1.c4)))) AND ((LIKELY(rt1.c5)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON '-424831703' WHERE (((TRIM(rt1.c3))&(('-1640067041' IN (rt0.c0))))) ORDER BY (((x'')) BETWEEN ((((v0.c1)*(rt1.c4)))) AND ((LIKELY(rt1.c5)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((CAST(rt1.c2 AS NUMERIC))>=(((((((((rt0.c1)OR(v0.c2)))AND(rt1.c3)))OR(v0.c2)))OR('1256206059'))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS NUMERIC))>=(((((((((rt0.c1)OR(v0.c2)))AND(rt1.c3)))OR(v0.c2)))OR('1256206059'))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((CAST(rt1.c2 AS NUMERIC))>=(((((((((rt0.c1)OR(v0.c2)))AND(rt1.c3)))OR(v0.c2)))OR('1256206059'))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS NUMERIC))>=(((((((((rt0.c1)OR(v0.c2)))AND(rt1.c3)))OR(v0.c2)))OR('1256206059'))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((CAST(rt1.c2 AS NUMERIC))>=(((((((((rt0.c1)OR(v0.c2)))AND(rt1.c3)))OR(v0.c2)))OR('1256206059'))))) ORDER BY rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((v0.c2)%(rt0.c0)))/(((rt0.c2) IS FALSE))) WHERE (v0.c1) ORDER BY ((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END)||((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.6078969427984678)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((v0.c2)%(rt0.c0)))/(((rt0.c2) IS FALSE))) ORDER BY ((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END)||((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.6078969427984678)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((v0.c2)%(rt0.c0)))/(((rt0.c2) IS FALSE))) WHERE (v0.c1) ORDER BY ((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END)||((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.6078969427984678)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((v0.c2)%(rt0.c0)))/(((rt0.c2) IS FALSE))) ORDER BY ((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END)||((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.6078969427984678)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON ((((v0.c2)%(rt0.c0)))/(((rt0.c2) IS FALSE))) WHERE (v0.c1) ORDER BY ((CASE v0.c0  WHEN v0.c2 THEN rt0.c0 END)||((((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.6078969427984678)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE (rt0.c1 IN ())  WHEN 'lk' THEN CASE WHEN -1600497013 THEN rt0.c0 ELSE rt1.c4 END END) ORDER BY ((rt1.c3 COLLATE BINARY)<>(2.577922E8)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN 'lk' THEN CASE WHEN -1600497013 THEN rt0.c0 ELSE rt1.c4 END END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c3 COLLATE BINARY)!=(2.577922E8)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE (rt0.c1 IN ())  WHEN 'lk' THEN CASE WHEN -1600497013 THEN rt0.c0 ELSE rt1.c4 END END) ORDER BY ((rt1.c3 COLLATE BINARY)<>(2.577922E8)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN 'lk' THEN CASE WHEN -1600497013 THEN rt0.c0 ELSE rt1.c4 END END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c3 COLLATE BINARY)!=(2.577922E8)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE (rt0.c1 IN ())  WHEN 'lk' THEN CASE WHEN -1600497013 THEN rt0.c0 ELSE rt1.c4 END END) ORDER BY ((rt1.c3 COLLATE BINARY)<>(2.577922E8)) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((rt1.c2) NOT NULL))LIKE(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))LIKE(rt1.c1))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((rt1.c2) NOT NULL))LIKE(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))LIKE(rt1.c1))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((rt1.c2) NOT NULL))LIKE(rt1.c1)));
SELECT * FROM rt0 WHERE (((LOWER(rt0.c2))!=(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2))!=(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((LOWER(rt0.c2))!=(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2))!=(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((LOWER(rt0.c2))!=(((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c4 IN (NULL))  WHEN rt1.c1 COLLATE NOCASE THEN (rt1.c5 IN ()) WHEN (+ (rt1.c0)) THEN rt1.c4 WHEN CASE rt1.c5  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c4 IN (NULL))  WHEN rt1.c1 COLLATE NOCASE THEN (rt1.c5 IN ()) WHEN (+ (rt1.c0)) THEN rt1.c4 WHEN CASE rt1.c5  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END THEN rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c4 IN (NULL))  WHEN rt1.c1 COLLATE NOCASE THEN (rt1.c5 IN ()) WHEN (+ (rt1.c0)) THEN rt1.c4 WHEN CASE rt1.c5  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c4 IN (NULL))  WHEN rt1.c1 COLLATE NOCASE THEN (rt1.c5 IN ()) WHEN (+ (rt1.c0)) THEN rt1.c4 WHEN CASE rt1.c5  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END THEN rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c4 IN (NULL))  WHEN rt1.c1 COLLATE NOCASE THEN (rt1.c5 IN ()) WHEN (+ (rt1.c0)) THEN rt1.c4 WHEN CASE rt1.c5  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END THEN rt1.c2 END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LOWER(DISTINCT ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LOWER(DISTINCT ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LOWER(DISTINCT ((rt1.c1) IS TRUE)));
SELECT * FROM v0 WHERE (((((v0.c2) BETWEEN ('&i龻') AND (v0.c1)))<<(CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN ('&i龻') AND (v0.c1)))<<(CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) BETWEEN ('&i龻') AND (v0.c1)))<<(CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN ('&i龻') AND (v0.c1)))<<(CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2) BETWEEN ('&i龻') AND (v0.c1)))<<(CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN NULL END)));
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CASE WHEN ((((rt1.c1)AND(v0.c1)))OR(rt1.c3)) THEN (rt1.c5 IN ()) ELSE ((rt1.c5) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c1)AND(v0.c1)))OR(rt1.c3)) THEN (rt1.c5 IN ()) ELSE ((rt1.c5) NOT NULL) END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CASE WHEN ((((rt1.c1)AND(v0.c1)))OR(rt1.c3)) THEN (rt1.c5 IN ()) ELSE ((rt1.c5) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c1)AND(v0.c1)))OR(rt1.c3)) THEN (rt1.c5 IN ()) ELSE ((rt1.c5) NOT NULL) END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CASE WHEN ((((rt1.c1)AND(v0.c1)))OR(rt1.c3)) THEN (rt1.c5 IN ()) ELSE ((rt1.c5) NOT NULL) END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE ((0.10532053676118291) NOT NULL)  WHEN v0.c0 COLLATE NOCASE THEN TRIM(v0.c0) END WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (v0.c1 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE ((0.10532053676118291) NOT NULL)  WHEN v0.c0 COLLATE NOCASE THEN TRIM(v0.c0) END ORDER BY (v0.c1 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE ((0.10532053676118291) NOT NULL)  WHEN v0.c0 COLLATE NOCASE THEN TRIM(v0.c0) END WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (v0.c1 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CASE ((0.10532053676118291) NOT NULL)  WHEN v0.c0 COLLATE NOCASE THEN TRIM(v0.c0) END ORDER BY (v0.c1 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CASE ((0.10532053676118291) NOT NULL)  WHEN v0.c0 COLLATE NOCASE THEN TRIM(v0.c0) END WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (v0.c1 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE ((~ (((rt1.c0) NOT BETWEEN (rt1.c4) AND (''))))) ORDER BY ((- (rt1.c0)) IN ()) ASC, ((((rt1.c0)|(v0.c2))) NOTNULL) DESC  NULLS LAST, v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0) NOT BETWEEN (rt1.c4) AND (''))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((- (rt1.c0)) IN ()) ASC, ((((rt1.c0)|(v0.c2))) NOTNULL) DESC  NULLS LAST, v0.c2  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE ((~ (((rt1.c0) NOT BETWEEN (rt1.c4) AND (''))))) ORDER BY ((- (rt1.c0)) IN ()) ASC, ((((rt1.c0)|(v0.c2))) NOTNULL) DESC  NULLS LAST, v0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c0) NOT BETWEEN (rt1.c4) AND (''))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((- (rt1.c0)) IN ()) ASC, ((((rt1.c0)|(v0.c2))) NOTNULL) DESC  NULLS LAST, v0.c2  NULLS FIRST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE ((~ (((rt1.c0) NOT BETWEEN (rt1.c4) AND (''))))) ORDER BY ((- (rt1.c0)) IN ()) ASC, ((((rt1.c0)|(v0.c2))) NOTNULL) DESC  NULLS LAST, v0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 NOT INDEXED WHERE (((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))+(CASE rt1.c1  WHEN v0.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))+(CASE rt1.c1  WHEN v0.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 NOT INDEXED WHERE (((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))+(CASE rt1.c1  WHEN v0.c0 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))+(CASE rt1.c1  WHEN v0.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 NOT INDEXED WHERE (((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))+(CASE rt1.c1  WHEN v0.c0 THEN rt1.c4 END)));
SELECT COUNT(*) FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (NULL);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)IS NOT(v0.c2)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)IS NOT(v0.c2))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)IS NOT(v0.c2)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)IS NOT(v0.c2))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)IS NOT(v0.c2)));
SELECT * FROM v0 WHERE (((((0.9084739020150235)>(-1309416000)))==(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)/(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9084739020150235)>(-1309416000)))=(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)/(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((0.9084739020150235)>(-1309416000)))==(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)/(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.9084739020150235)>(-1309416000)))=(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)/(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((0.9084739020150235)>(-1309416000)))==(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 END)/(v0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM v0, rt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((0.42682333867116307)OR(rt0.c1)))OR(rt0.c2)))OR(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.42682333867116307)OR(rt0.c1)))OR(rt0.c2)))OR(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((0.42682333867116307)OR(rt0.c1)))OR(rt0.c2)))OR(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.42682333867116307)OR(rt0.c1)))OR(rt0.c2)))OR(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((0.42682333867116307)OR(rt0.c1)))OR(rt0.c2)))OR(rt1.c3 COLLATE RTRIM)));
SELECT ALL * FROM rt1, rt0 NOT INDEXED, v0 WHERE (((((v0.c1) IS FALSE)) IS TRUE)) ORDER BY ((((rt1.c5)AND(v0.c0)))<>(((((rt0.c1)OR(v0.c2)))AND(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((rt1.c5)AND(v0.c0)))!=(((((rt0.c1)OR(v0.c2)))AND(rt1.c3))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 NOT INDEXED, v0 WHERE (((((v0.c1) IS FALSE)) IS TRUE)) ORDER BY ((((rt1.c5)AND(v0.c0)))<>(((((rt0.c1)OR(v0.c2)))AND(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((rt1.c5)AND(v0.c0)))!=(((((rt0.c1)OR(v0.c2)))AND(rt1.c3))))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 NOT INDEXED, v0 WHERE (((((v0.c1) IS FALSE)) IS TRUE)) ORDER BY ((((rt1.c5)AND(v0.c0)))<>(((((rt0.c1)OR(v0.c2)))AND(rt1.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt1.c4 END))) ORDER BY 0.9148516400378126 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN rt1.c4 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.9148516400378126 ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt1.c4 END))) ORDER BY 0.9148516400378126 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN rt1.c4 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY 0.9148516400378126 ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (CASE WHEN rt0.c1 THEN rt1.c4 END))) ORDER BY 0.9148516400378126 ASC;
SELECT * FROM v0, rt0 WHERE (((v0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c1) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c1) IS FALSE)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1) IS FALSE));
SELECT ALL * FROM v0, rt1 WHERE ((((((rt1.c2, v0.c1, rt1.c2, rt1.c0, rt1.c1))<((v0.c0, rt1.c2, v0.c2, v0.c2, rt1.c5)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, v0.c1, rt1.c2, rt1.c0, rt1.c1))<((v0.c0, rt1.c2, v0.c2, v0.c2, rt1.c5)))) IS TRUE)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE ((((((rt1.c2, v0.c1, rt1.c2, rt1.c0, rt1.c1))<((v0.c0, rt1.c2, v0.c2, v0.c2, rt1.c5)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, v0.c1, rt1.c2, rt1.c0, rt1.c1))<((v0.c0, rt1.c2, v0.c2, v0.c2, rt1.c5)))) IS TRUE)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE ((((((rt1.c2, v0.c1, rt1.c2, rt1.c0, rt1.c1))<((v0.c0, rt1.c2, v0.c2, v0.c2, rt1.c5)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2))=((rt1.c5))) COLLATE RTRIM) ORDER BY CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c5 END COLLATE RTRIM ASC, 144339234 DESC, (~ ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2))=((rt1.c5))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c5 END COLLATE RTRIM ASC, 144339234 DESC, (~ ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2))=((rt1.c5))) COLLATE RTRIM) ORDER BY CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c5 END COLLATE RTRIM ASC, 144339234 DESC, (~ ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2))=((rt1.c5))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c5 END COLLATE RTRIM ASC, 144339234 DESC, (~ ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM v0, rt1 WHERE ((+ (((rt1.c4)AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c4)AND(rt1.c4))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((+ (((rt1.c4)AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c4)AND(rt1.c4))))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((+ (((rt1.c4)AND(rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 IN (rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN (rt1.c5)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 IN (rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN (rt1.c5)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3 IN (rt1.c5)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2)!=('274962116'))))) ORDER BY (((~ (NULL))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2)<>('274962116'))))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (NULL))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2)!=('274962116'))))) ORDER BY (((~ (NULL))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2)<>('274962116'))))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (NULL))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c2)!=('274962116'))))) ORDER BY (((~ (NULL))) IS FALSE) DESC;
SELECT * FROM rt1, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c2 END)OR('za')))OR(v0.c1))) ORDER BY (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END IN (CAST(v0.c1 AS NUMERIC), (+ (v0.c2))))  NULLS LAST, CASE WHEN (((v0.c0))=((v0.c2))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE (- (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c2 THEN v0.c2 END)OR('za')))OR(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END IN (CAST(v0.c1 AS NUMERIC), (+ (v0.c2))))  NULLS LAST, CASE WHEN (((v0.c0))=((v0.c2))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE (- (v0.c1)) END);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c2 END)OR('za')))OR(v0.c1))) ORDER BY (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END IN (CAST(v0.c1 AS NUMERIC), (+ (v0.c2))))  NULLS LAST, CASE WHEN (((v0.c0))=((v0.c2))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE (- (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c2 THEN v0.c2 END)OR('za')))OR(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END IN (CAST(v0.c1 AS NUMERIC), (+ (v0.c2))))  NULLS LAST, CASE WHEN (((v0.c0))=((v0.c2))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE (- (v0.c1)) END);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c2 END)OR('za')))OR(v0.c1))) ORDER BY (CASE v0.c0  WHEN v0.c1 THEN v0.c0 END IN (CAST(v0.c1 AS NUMERIC), (+ (v0.c2))))  NULLS LAST, CASE WHEN (((v0.c0))=((v0.c2))) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END ELSE (- (v0.c1)) END;
SELECT * FROM v0, rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((- (rt0.c2)));
SELECT * FROM v0 CROSS JOIN rt1 ON (NOT (v0.c1 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt1.c5)))GLOB(LOWER(rt1.c0))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (NOT (v0.c1 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt1.c5)))GLOB(LOWER(rt1.c0))));
SELECT * FROM v0 CROSS JOIN rt1 ON (NOT (v0.c1 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt1.c5)))GLOB(LOWER(rt1.c0))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (NOT (v0.c1 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt1.c5)))GLOB(LOWER(rt1.c0))));
SELECT * FROM v0 CROSS JOIN rt1 ON (NOT (v0.c1 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c1)))OR(rt1.c5)))GLOB(LOWER(rt1.c0))) WHERE (NULL);
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((CASE WHEN v0.c2 THEN 't+E*[A*T螋' END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE WHEN v0.c2 THEN 't+E*[A*T螋' END) NOTNULL));
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((CASE WHEN v0.c2 THEN 't+E*[A*T螋' END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE WHEN v0.c2 THEN 't+E*[A*T螋' END) NOTNULL));
SELECT * FROM v0, rt0 WHERE (v0.c0) ORDER BY ((CASE WHEN v0.c2 THEN 't+E*[A*T螋' END) NOTNULL);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (NULLIF(rt1.c3, rt1.c2) IN ()) CROSS JOIN rt0 ON ((IFNULL(rt1.c1, rt1.c5))%(rt0.c1)) WHERE ((+ ('䆎-Rk')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('䆎-Rk'))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (NULLIF(rt1.c3, rt1.c2) IN ()) CROSS JOIN rt0 ON ((IFNULL(rt1.c1, rt1.c5))%(rt0.c1)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (NULLIF(rt1.c3, rt1.c2) IN ()) CROSS JOIN rt0 ON ((IFNULL(rt1.c1, rt1.c5))%(rt0.c1)) WHERE ((+ ('䆎-Rk')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('䆎-Rk'))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (NULLIF(rt1.c3, rt1.c2) IN ()) CROSS JOIN rt0 ON ((IFNULL(rt1.c1, rt1.c5))%(rt0.c1)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (NULLIF(rt1.c3, rt1.c2) IN ()) CROSS JOIN rt0 ON ((IFNULL(rt1.c1, rt1.c5))%(rt0.c1)) WHERE ((+ ('䆎-Rk')));
SELECT * FROM v0 WHERE (LTRIM(((v0.c1) NOT BETWEEN (v0.c2) AND ('i\nO%!᫴m)'))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((v0.c1) NOT BETWEEN (v0.c2) AND ('i\nO%!᫴m)')))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LTRIM(((v0.c1) NOT BETWEEN (v0.c2) AND ('i\nO%!᫴m)'))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((v0.c1) NOT BETWEEN (v0.c2) AND ('i\nO%!᫴m)')))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LTRIM(((v0.c1) NOT BETWEEN (v0.c2) AND ('i\nO%!᫴m)'))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB))<((~ (v0.c1))))) ORDER BY (((0.848623264048263))<((CASE WHEN rt0.c2 THEN v0.c0 END))), v0.c2, ((rt0.c0)*(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))<((~ (v0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.848623264048263))<((CASE WHEN rt0.c2 THEN v0.c0 END))), v0.c2, ((rt0.c0)*(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB))<((~ (v0.c1))))) ORDER BY (((0.848623264048263))<((CASE WHEN rt0.c2 THEN v0.c0 END))), v0.c2, ((rt0.c0)*(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))<((~ (v0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((0.848623264048263))<((CASE WHEN rt0.c2 THEN v0.c0 END))), v0.c2, ((rt0.c0)*(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c0 AS BLOB))<((~ (v0.c1))))) ORDER BY (((0.848623264048263))<((CASE WHEN rt0.c2 THEN v0.c0 END))), v0.c2, ((rt0.c0)*(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c2 COLLATE BINARY)|(v0.c2))) ORDER BY (((rt1.c2 IN ())) BETWEEN ('&') AND ((rt1.c0 IN ())))  NULLS LAST, ((((v0.c2)IS(rt1.c1)))<<(CAST(v0.c0 AS INTEGER)))  NULLS FIRST, v0.c0, ((rt1.c5 COLLATE BINARY) NOT BETWEEN (0x36a166b1) AND (v0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)|(v0.c2))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((rt1.c2 IN ())) BETWEEN ('&') AND ((rt1.c0 IN ())))  NULLS LAST, ((((v0.c2)IS(rt1.c1)))<<(CAST(v0.c0 AS INTEGER)))  NULLS FIRST, v0.c0, ((rt1.c5 COLLATE BINARY) NOT BETWEEN (0X36a166b1) AND (v0.c2 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c2 COLLATE BINARY)|(v0.c2))) ORDER BY (((rt1.c2 IN ())) BETWEEN ('&') AND ((rt1.c0 IN ())))  NULLS LAST, ((((v0.c2)IS(rt1.c1)))<<(CAST(v0.c0 AS INTEGER)))  NULLS FIRST, v0.c0, ((rt1.c5 COLLATE BINARY) NOT BETWEEN (0x36a166b1) AND (v0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)|(v0.c2))) IS TRUE)  as count FROM v0, rt1 ORDER BY (((rt1.c2 IN ())) BETWEEN ('&') AND ((rt1.c0 IN ())))  NULLS LAST, ((((v0.c2)IS(rt1.c1)))<<(CAST(v0.c0 AS INTEGER)))  NULLS FIRST, v0.c0, ((rt1.c5 COLLATE BINARY) NOT BETWEEN (0X36a166b1) AND (v0.c2 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c2 COLLATE BINARY)|(v0.c2))) ORDER BY (((rt1.c2 IN ())) BETWEEN ('&') AND ((rt1.c0 IN ())))  NULLS LAST, ((((v0.c2)IS(rt1.c1)))<<(CAST(v0.c0 AS INTEGER)))  NULLS FIRST, v0.c0, ((rt1.c5 COLLATE BINARY) NOT BETWEEN (0x36a166b1) AND (v0.c2 COLLATE RTRIM)) ASC;
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c1)OR('n}Tmze_e')))OR(rt1.c0)))-(rt0.c1 COLLATE NOCASE))) ORDER BY ((COALESCE(DISTINCT rt1.c3, rt1.c5))+(((rt1.c5)>(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR('n}Tmze_e')))OR(rt1.c0)))-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((COALESCE(DISTINCT rt1.c3, rt1.c5))+(((rt1.c5)>(v0.c0))))  NULLS LAST);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c1)OR('n}Tmze_e')))OR(rt1.c0)))-(rt0.c1 COLLATE NOCASE))) ORDER BY ((COALESCE(DISTINCT rt1.c3, rt1.c5))+(((rt1.c5)>(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR('n}Tmze_e')))OR(rt1.c0)))-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((COALESCE(DISTINCT rt1.c3, rt1.c5))+(((rt1.c5)>(v0.c0))))  NULLS LAST);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c1)OR('n}Tmze_e')))OR(rt1.c0)))-(rt0.c1 COLLATE NOCASE))) ORDER BY ((COALESCE(DISTINCT rt1.c3, rt1.c5))+(((rt1.c5)>(v0.c0))))  NULLS LAST;
SELECT ALL * FROM rt1, rt0, v0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2, rt1.c0, rt1.c4)) BETWEEN ((rt1.c2, rt1.c2, rt1.c4)) AND ((rt1.c1, rt1.c2, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2, rt1.c0, rt1.c4)) BETWEEN ((rt1.c2, rt1.c2, rt1.c4)) AND ((rt1.c1, rt1.c2, rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2, rt1.c0, rt1.c4)) BETWEEN ((rt1.c2, rt1.c2, rt1.c4)) AND ((rt1.c1, rt1.c2, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c2, rt1.c0, rt1.c4)) BETWEEN ((rt1.c2, rt1.c2, rt1.c4)) AND ((rt1.c1, rt1.c2, rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ ((((rt1.c2, rt1.c0, rt1.c4)) BETWEEN ((rt1.c2, rt1.c2, rt1.c4)) AND ((rt1.c1, rt1.c2, rt1.c4))))));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT))<<(((rt1.c3) IS TRUE)))) ORDER BY (+ (rt1.c2 COLLATE BINARY)) DESC, ((((rt1.c5) NOT BETWEEN ('1823985057') AND (rt1.c2)))&((('a>')IS(rt1.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT))<<(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c2 COLLATE BINARY)) DESC, ((((rt1.c5) NOT BETWEEN ('1823985057') AND (rt1.c2)))&((('a>')IS(rt1.c5)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT))<<(((rt1.c3) IS TRUE)))) ORDER BY (+ (rt1.c2 COLLATE BINARY)) DESC, ((((rt1.c5) NOT BETWEEN ('1823985057') AND (rt1.c2)))&((('a>')IS(rt1.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT))<<(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c2 COLLATE BINARY)) DESC, ((((rt1.c5) NOT BETWEEN ('1823985057') AND (rt1.c2)))&((('a>')IS(rt1.c5)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c3 AS TEXT))<<(((rt1.c3) IS TRUE)))) ORDER BY (+ (rt1.c2 COLLATE BINARY)) DESC, ((((rt1.c5) NOT BETWEEN ('1823985057') AND (rt1.c2)))&((('a>')IS(rt1.c5)))) DESC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(rt1.c3 AS REAL) WHERE (((-1885078246)-(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((-1885078246)-(((v0.c1) ISNULL)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CAST(rt1.c3 AS REAL));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(rt1.c3 AS REAL) WHERE (((-1885078246)-(((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((-1885078246)-(((v0.c1) ISNULL)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON CAST(rt1.c3 AS REAL));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON CAST(rt1.c3 AS REAL) WHERE (((-1885078246)-(((v0.c1) ISNULL))));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) BETWEEN (v0.c2) AND (rt0.c1))) NOT BETWEEN (HEX(1.7976931348623157E308)) AND ('Gj' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (v0.c2) AND (rt0.c1))) NOT BETWEEN (HEX(1.7976931348623157E308)) AND ('Gj' COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) BETWEEN (v0.c2) AND (rt0.c1))) NOT BETWEEN (HEX(1.7976931348623157E308)) AND ('Gj' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (v0.c2) AND (rt0.c1))) NOT BETWEEN (HEX(1.7976931348623157E308)) AND ('Gj' COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1) BETWEEN (v0.c2) AND (rt0.c1))) NOT BETWEEN (HEX(1.7976931348623157E308)) AND ('Gj' COLLATE RTRIM)));
SELECT * FROM v0, rt0, rt1 WHERE (((((JULIANDAY(rt1.c1, rt1.c5, rt1.c2))AND(x'')))OR((+ (rt0.c0))))) ORDER BY ((((rt0.c1)/(rt1.c1))) BETWEEN ((('-1536958039')/(NULL))) AND (((v0.c0)&(rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((JULIANDAY(rt1.c1, rt1.c5, rt1.c2))AND(x'')))OR((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((((rt0.c1)/(rt1.c1))) BETWEEN ((('-1536958039')/(NULL))) AND (((v0.c0)&(rt1.c5)))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (((((JULIANDAY(rt1.c1, rt1.c5, rt1.c2))AND(x'')))OR((+ (rt0.c0))))) ORDER BY ((((rt0.c1)/(rt1.c1))) BETWEEN ((('-1536958039')/(NULL))) AND (((v0.c0)&(rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((JULIANDAY(rt1.c1, rt1.c5, rt1.c2))AND(x'')))OR((+ (rt0.c0))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((((rt0.c1)/(rt1.c1))) BETWEEN ((('-1536958039')/(NULL))) AND (((v0.c0)&(rt1.c5)))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (((((JULIANDAY(rt1.c1, rt1.c5, rt1.c2))AND(x'')))OR((+ (rt0.c0))))) ORDER BY ((((rt0.c1)/(rt1.c1))) BETWEEN ((('-1536958039')/(NULL))) AND (((v0.c0)&(rt1.c5)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)%(0xffffffffed07ed1f)))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2))))) ORDER BY (((rt0.c1 IN (rt0.c0))) IS TRUE)  NULLS LAST, 'q#^-鰬,' COLLATE BINARY  NULLS FIRST, (((rt0.c0)) NOT BETWEEN (('o&{q(?H2Y')) AND (('ZA'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)%(0xffffffffed07ed1f)))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c0))) IS TRUE)  NULLS LAST, 'q#^-鰬,' COLLATE BINARY  NULLS FIRST, (((rt0.c0)) NOT BETWEEN (('o&{q(?H2Y')) AND (('ZA'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)%(0xffffffffed07ed1f)))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2))))) ORDER BY (((rt0.c1 IN (rt0.c0))) IS TRUE)  NULLS LAST, 'q#^-鰬,' COLLATE BINARY  NULLS FIRST, (((rt0.c0)) NOT BETWEEN (('o&{q(?H2Y')) AND (('ZA'))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)%(0xffffffffed07ed1f)))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c0))) IS TRUE)  NULLS LAST, 'q#^-鰬,' COLLATE BINARY  NULLS FIRST, (((rt0.c0)) NOT BETWEEN (('o&{q(?H2Y')) AND (('ZA'))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)%(0xffffffffed07ed1f)))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c1)*(rt0.c2))))) ORDER BY (((rt0.c1 IN (rt0.c0))) IS TRUE)  NULLS LAST, 'q#^-鰬,' COLLATE BINARY  NULLS FIRST, (((rt0.c0)) NOT BETWEEN (('o&{q(?H2Y')) AND (('ZA'))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND((~ (rt0.c1)))))OR(0X258ed805))) ORDER BY (((rt0.c1 IN ()))|(0.2385197346900656)), ((rt0.c1 COLLATE RTRIM)OR(TRIM(rt0.c0)))  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT NULL))AND((~ (rt0.c1)))))OR(0x258ed805))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))|(0.2385197346900656)), ((rt0.c1 COLLATE RTRIM)OR(TRIM(rt0.c0)))  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((- (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND((~ (rt0.c1)))))OR(0X258ed805))) ORDER BY (((rt0.c1 IN ()))|(0.2385197346900656)), ((rt0.c1 COLLATE RTRIM)OR(TRIM(rt0.c0)))  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT NULL))AND((~ (rt0.c1)))))OR(0x258ed805))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))|(0.2385197346900656)), ((rt0.c1 COLLATE RTRIM)OR(TRIM(rt0.c0)))  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((- (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND((~ (rt0.c1)))))OR(0X258ed805))) ORDER BY (((rt0.c1 IN ()))|(0.2385197346900656)), ((rt0.c1 COLLATE RTRIM)OR(TRIM(rt0.c0)))  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((- (rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM rt0, rt1 WHERE (UPPER(DISTINCT ((0.2068062146884021) ISNULL))) ORDER BY CASE NULLIF(rt1.c1, rt1.c4)  WHEN ((rt1.c2)==(rt1.c3)) THEN (x'' IN (rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((0.2068062146884021) ISNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE NULLIF(rt1.c1, rt1.c4)  WHEN ((rt1.c2)=(rt1.c3)) THEN (x'' IN (rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (UPPER(DISTINCT ((0.2068062146884021) ISNULL))) ORDER BY CASE NULLIF(rt1.c1, rt1.c4)  WHEN ((rt1.c2)==(rt1.c3)) THEN (x'' IN (rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((0.2068062146884021) ISNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE NULLIF(rt1.c1, rt1.c4)  WHEN ((rt1.c2)=(rt1.c3)) THEN (x'' IN (rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (UPPER(DISTINCT ((0.2068062146884021) ISNULL))) ORDER BY CASE NULLIF(rt1.c1, rt1.c4)  WHEN ((rt1.c2)==(rt1.c3)) THEN (x'' IN (rt1.c0)) END  NULLS LAST;
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (IFNULL(CASE WHEN rt1.c1 THEN v0.c2 ELSE rt1.c5 END, (((rt1.c4)) BETWEEN ((v0.c2)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN rt1.c1 THEN v0.c2 ELSE rt1.c5 END, (((rt1.c4)) BETWEEN ((v0.c2)) AND ((rt1.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (IFNULL(CASE WHEN rt1.c1 THEN v0.c2 ELSE rt1.c5 END, (((rt1.c4)) BETWEEN ((v0.c2)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN rt1.c1 THEN v0.c2 ELSE rt1.c5 END, (((rt1.c4)) BETWEEN ((v0.c2)) AND ((rt1.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (IFNULL(CASE WHEN rt1.c1 THEN v0.c2 ELSE rt1.c5 END, (((rt1.c4)) BETWEEN ((v0.c2)) AND ((rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT ALL * FROM rt0 WHERE ('-758110745') ORDER BY CAST(load_extension(rt0.c2, rt0.c0) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-758110745') IS TRUE)  as count FROM rt0 ORDER BY CAST(load_extension(rt0.c2, rt0.c0) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('-758110745') ORDER BY CAST(load_extension(rt0.c2, rt0.c0) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-758110745') IS TRUE)  as count FROM rt0 ORDER BY CAST(load_extension(rt0.c2, rt0.c0) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM v0, rt1 WHERE (((((rt1.c0) IS TRUE)) BETWEEN (NULL) AND (((rt1.c0)OR(rt1.c3))))) ORDER BY ((rt1.c0 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) BETWEEN (NULL) AND (((rt1.c0)OR(rt1.c3))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c0 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))) ASC);
SELECT * FROM v0, rt1 WHERE (((((rt1.c0) IS TRUE)) BETWEEN (NULL) AND (((rt1.c0)OR(rt1.c3))))) ORDER BY ((rt1.c0 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) BETWEEN (NULL) AND (((rt1.c0)OR(rt1.c3))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c0 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))) ASC);
SELECT * FROM v0, rt1 WHERE (((((rt1.c0) IS TRUE)) BETWEEN (NULL) AND (((rt1.c0)OR(rt1.c3))))) ORDER BY ((rt1.c0 COLLATE NOCASE)<>((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))) ASC;
SELECT * FROM rt0 WHERE ((- (CAST(x'a1b6d181' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(x'a1b6d181' AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CAST(x'a1b6d181' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(x'a1b6d181' AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CAST(x'a1b6d181' AS TEXT))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOTNULL))-(((rt0.c1) BETWEEN ('vTaO') AND (rt0.c1)))), (~ (NULL COLLATE NOCASE)) ASC  NULLS LAST, (('' COLLATE BINARY)%(CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))-(((rt0.c1) BETWEEN ('vTaO') AND (rt0.c1)))), (~ (NULL COLLATE NOCASE)) ASC  NULLS LAST, (('' COLLATE BINARY)%(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOTNULL))-(((rt0.c1) BETWEEN ('vTaO') AND (rt0.c1)))), (~ (NULL COLLATE NOCASE)) ASC  NULLS LAST, (('' COLLATE BINARY)%(CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))-(((rt0.c1) BETWEEN ('vTaO') AND (rt0.c1)))), (~ (NULL COLLATE NOCASE)) ASC  NULLS LAST, (('' COLLATE BINARY)%(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOTNULL))-(((rt0.c1) BETWEEN ('vTaO') AND (rt0.c1)))), (~ (NULL COLLATE NOCASE)) ASC  NULLS LAST, (('' COLLATE BINARY)%(CAST(rt0.c2 AS REAL)));
SELECT * FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) AS NUMERIC)) ORDER BY ((CAST(rt1.c5 AS BLOB)) BETWEEN (rt1.c5) AND ((- (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c5 AS BLOB)) BETWEEN (rt1.c5) AND ((- (rt1.c2)))) DESC);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) AS NUMERIC)) ORDER BY ((CAST(rt1.c5 AS BLOB)) BETWEEN (rt1.c5) AND ((- (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c5 AS BLOB)) BETWEEN (rt1.c5) AND ((- (rt1.c2)))) DESC);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)) AS NUMERIC)) ORDER BY ((CAST(rt1.c5 AS BLOB)) BETWEEN (rt1.c5) AND ((- (rt1.c2)))) DESC;
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE ((v0.c2) NOT NULL)  WHEN rt0.c0 THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) END WHERE (((((rt0.c2) NOTNULL)) IS TRUE)) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END  NULLS LAST, (NOT (v0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE ((v0.c2) NOT NULL)  WHEN rt0.c0 THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) END ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END  NULLS LAST, (NOT (v0.c1 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE ((v0.c2) NOT NULL)  WHEN rt0.c0 THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) END WHERE (((((rt0.c2) NOTNULL)) IS TRUE)) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END  NULLS LAST, (NOT (v0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE ((v0.c2) NOT NULL)  WHEN rt0.c0 THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) END ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END  NULLS LAST, (NOT (v0.c1 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE ((v0.c2) NOT NULL)  WHEN rt0.c0 THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) END WHERE (((((rt0.c2) NOTNULL)) IS TRUE)) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END  NULLS LAST, (NOT (v0.c1 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((~ (((((rt0.c1)AND(rt1.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)AND(rt1.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((~ (((((rt0.c1)AND(rt1.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c1)AND(rt1.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((~ (((((rt0.c1)AND(rt1.c2)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE (CASE x'4d33'  WHEN CAST(rt1.c4 AS NUMERIC) THEN (- (rt1.c4)) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c5)) BETWEEN ((rt1.c5)) AND (('0.15927984721563793'))) WHEN ((rt1.c4)<<(rt1.c0)) THEN (rt0.c2 IN (rt1.c5, rt1.c3)) ELSE 0.7151681779831204 END) ORDER BY ((x'8e90d022')+(0X5daf112f)) ASC  NULLS FIRST, CASE WHEN ((((rt0.c2)OR(rt1.c4)))AND(NULL)) THEN ((rt1.c4)LIKE(rt1.c1)) ELSE ((((((((rt1.c2)AND(rt1.c3)))AND(x'cf1d')))AND(0.7434966800128882)))OR(rt1.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x'4d33'  WHEN CAST(rt1.c4 AS NUMERIC) THEN (- (rt1.c4)) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c5)) BETWEEN ((rt1.c5)) AND (('0.15927984721563793'))) WHEN ((rt1.c4)<<(rt1.c0)) THEN (rt0.c2 IN (rt1.c5, rt1.c3)) ELSE 0.7151681779831204 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'8e90d022')+(0x5daf112f)) ASC  NULLS FIRST, CASE WHEN ((((rt0.c2)OR(rt1.c4)))AND(NULL)) THEN ((rt1.c4)LIKE(rt1.c1)) ELSE ((((((((rt1.c2)AND(rt1.c3)))AND(x'cf1d')))AND(0.7434966800128882)))OR(rt1.c3)) END  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (CASE x'4d33'  WHEN CAST(rt1.c4 AS NUMERIC) THEN (- (rt1.c4)) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c5)) BETWEEN ((rt1.c5)) AND (('0.15927984721563793'))) WHEN ((rt1.c4)<<(rt1.c0)) THEN (rt0.c2 IN (rt1.c5, rt1.c3)) ELSE 0.7151681779831204 END) ORDER BY ((x'8e90d022')+(0X5daf112f)) ASC  NULLS FIRST, CASE WHEN ((((rt0.c2)OR(rt1.c4)))AND(NULL)) THEN ((rt1.c4)LIKE(rt1.c1)) ELSE ((((((((rt1.c2)AND(rt1.c3)))AND(x'cf1d')))AND(0.7434966800128882)))OR(rt1.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x'4d33'  WHEN CAST(rt1.c4 AS NUMERIC) THEN (- (rt1.c4)) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c5)) BETWEEN ((rt1.c5)) AND (('0.15927984721563793'))) WHEN ((rt1.c4)<<(rt1.c0)) THEN (rt0.c2 IN (rt1.c5, rt1.c3)) ELSE 0.7151681779831204 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'8e90d022')+(0x5daf112f)) ASC  NULLS FIRST, CASE WHEN ((((rt0.c2)OR(rt1.c4)))AND(NULL)) THEN ((rt1.c4)LIKE(rt1.c1)) ELSE ((((((((rt1.c2)AND(rt1.c3)))AND(x'cf1d')))AND(0.7434966800128882)))OR(rt1.c3)) END  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (CASE x'4d33'  WHEN CAST(rt1.c4 AS NUMERIC) THEN (- (rt1.c4)) WHEN ((rt1.c3) IS FALSE) THEN (((rt1.c5)) BETWEEN ((rt1.c5)) AND (('0.15927984721563793'))) WHEN ((rt1.c4)<<(rt1.c0)) THEN (rt0.c2 IN (rt1.c5, rt1.c3)) ELSE 0.7151681779831204 END) ORDER BY ((x'8e90d022')+(0X5daf112f)) ASC  NULLS FIRST, CASE WHEN ((((rt0.c2)OR(rt1.c4)))AND(NULL)) THEN ((rt1.c4)LIKE(rt1.c1)) ELSE ((((((((rt1.c2)AND(rt1.c3)))AND(x'cf1d')))AND(0.7434966800128882)))OR(rt1.c3)) END  NULLS FIRST;
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c4)>>(rt1.c0)))GLOB(((v0.c2)*(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>>(rt1.c0)))GLOB(((v0.c2)*(rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c4)>>(rt1.c0)))GLOB(((v0.c2)*(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>>(rt1.c0)))GLOB(((v0.c2)*(rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c4)>>(rt1.c0)))GLOB(((v0.c2)*(rt1.c3)))));
SELECT ALL * FROM rt1, v0, rt0 WHERE (highlight(316074220, CASE WHEN rt1.c5 THEN rt1.c3 ELSE rt0.c1 END, (((rt0.c0, rt1.c3, rt0.c0))=((rt1.c5, v0.c2, rt1.c4))), rt0.c1 COLLATE NOCASE)) ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(((rt1.c2)OR(rt1.c2)))))OR((((rt0.c2, v0.c2, rt1.c4)) NOT BETWEEN ((rt0.c1, '-2062704859', v0.c0)) AND ((rt1.c0, rt1.c1, rt0.c0))))) ASC, ((((rt1.c4) BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c5 END))  NULLS LAST, ((v0.c2 COLLATE NOCASE)||(((rt1.c2)AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(316074220, CASE WHEN rt1.c5 THEN rt1.c3 ELSE rt0.c1 END, (((rt0.c0, rt1.c3, rt0.c0))=((rt1.c5, v0.c2, rt1.c4))), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(((rt1.c2)OR(rt1.c2)))))OR((((rt0.c2, v0.c2, rt1.c4)) NOT BETWEEN ((rt0.c1, '-2062704859', v0.c0)) AND ((rt1.c0, rt1.c1, rt0.c0))))) ASC, ((((rt1.c4) BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c5 END))  NULLS LAST, ((v0.c2 COLLATE NOCASE)||(((rt1.c2)AND(rt1.c2)))));
SELECT ALL * FROM rt1, v0, rt0 WHERE (highlight(316074220, CASE WHEN rt1.c5 THEN rt1.c3 ELSE rt0.c1 END, (((rt0.c0, rt1.c3, rt0.c0))=((rt1.c5, v0.c2, rt1.c4))), rt0.c1 COLLATE NOCASE)) ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(((rt1.c2)OR(rt1.c2)))))OR((((rt0.c2, v0.c2, rt1.c4)) NOT BETWEEN ((rt0.c1, '-2062704859', v0.c0)) AND ((rt1.c0, rt1.c1, rt0.c0))))) ASC, ((((rt1.c4) BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c5 END))  NULLS LAST, ((v0.c2 COLLATE NOCASE)||(((rt1.c2)AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((highlight(316074220, CASE WHEN rt1.c5 THEN rt1.c3 ELSE rt0.c1 END, (((rt0.c0, rt1.c3, rt0.c0))=((rt1.c5, v0.c2, rt1.c4))), rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt0.c2 COLLATE NOCASE)OR(((rt1.c2)OR(rt1.c2)))))OR((((rt0.c2, v0.c2, rt1.c4)) NOT BETWEEN ((rt0.c1, '-2062704859', v0.c0)) AND ((rt1.c0, rt1.c1, rt0.c0))))) ASC, ((((rt1.c4) BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c5 END))  NULLS LAST, ((v0.c2 COLLATE NOCASE)||(((rt1.c2)AND(rt1.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY COLLATE RTRIM) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY COLLATE RTRIM) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY COLLATE RTRIM) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((~ (rt1.c0))) ORDER BY LIKELIHOOD(v0.c2 COLLATE NOCASE, 0.12799757788547272) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c0))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY LIKELIHOOD(v0.c2 COLLATE NOCASE, 0.12799757788547272) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((~ (rt1.c0))) ORDER BY LIKELIHOOD(v0.c2 COLLATE NOCASE, 0.12799757788547272) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c0))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY LIKELIHOOD(v0.c2 COLLATE NOCASE, 0.12799757788547272) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((~ (rt1.c0))) ORDER BY LIKELIHOOD(v0.c2 COLLATE NOCASE, 0.12799757788547272) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND (rt0.c0)));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((IFNULL(x'', rt0.c0))<(((rt1.c5) IS FALSE)))) ORDER BY ((((((rt1.c5)OR(rt1.c0)))OR(((rt1.c5)||(rt1.c3)))))OR(rt1.c0)) ASC  NULLS LAST, (((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((0x4dbd418e))))-(((v0.c2) BETWEEN ('0.848623264048263') AND (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(x'', rt0.c0))<(((rt1.c5) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((((rt1.c5)OR(rt1.c0)))OR(((rt1.c5)||(rt1.c3)))))OR(rt1.c0)) ASC  NULLS LAST, (((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((0X4dbd418e))))-(((v0.c2) BETWEEN ('0.848623264048263') AND (NULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((IFNULL(x'', rt0.c0))<(((rt1.c5) IS FALSE)))) ORDER BY ((((((rt1.c5)OR(rt1.c0)))OR(((rt1.c5)||(rt1.c3)))))OR(rt1.c0)) ASC  NULLS LAST, (((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((0x4dbd418e))))-(((v0.c2) BETWEEN ('0.848623264048263') AND (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(x'', rt0.c0))<(((rt1.c5) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((((rt1.c5)OR(rt1.c0)))OR(((rt1.c5)||(rt1.c3)))))OR(rt1.c0)) ASC  NULLS LAST, (((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((0X4dbd418e))))-(((v0.c2) BETWEEN ('0.848623264048263') AND (NULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((IFNULL(x'', rt0.c0))<(((rt1.c5) IS FALSE)))) ORDER BY ((((((rt1.c5)OR(rt1.c0)))OR(((rt1.c5)||(rt1.c3)))))OR(rt1.c0)) ASC  NULLS LAST, (((((rt1.c0)) BETWEEN ((rt1.c5)) AND ((0x4dbd418e))))-(((v0.c2) BETWEEN ('0.848623264048263') AND (NULL)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (json_insert(rt0.c0 COLLATE RTRIM, json_remove(rt0.c0, rt0.c2), ((rt0.c1)<<(rt0.c2)), ((rt0.c1) ISNULL), CASE WHEN rt0.c2 THEN '' END)) ORDER BY ((CASE WHEN '' THEN rt0.c2 END)!=(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(rt0.c0 COLLATE RTRIM, json_remove(rt0.c0, rt0.c2), ((rt0.c1)<<(rt0.c2)), ((rt0.c1) ISNULL), CASE WHEN rt0.c2 THEN '' END)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN '' THEN rt0.c2 END)<>(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 WHERE (json_insert(rt0.c0 COLLATE RTRIM, json_remove(rt0.c0, rt0.c2), ((rt0.c1)<<(rt0.c2)), ((rt0.c1) ISNULL), CASE WHEN rt0.c2 THEN '' END)) ORDER BY ((CASE WHEN '' THEN rt0.c2 END)!=(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(rt0.c0 COLLATE RTRIM, json_remove(rt0.c0, rt0.c2), ((rt0.c1)<<(rt0.c2)), ((rt0.c1) ISNULL), CASE WHEN rt0.c2 THEN '' END)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN '' THEN rt0.c2 END)<>(((rt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON CASE rt1.c3  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN (~ (rt0.c1)) ELSE rt1.c5 END WHERE (load_extension(rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((load_extension(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE rt1.c3  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN (~ (rt0.c1)) ELSE rt1.c5 END);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON CASE rt1.c3  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN (~ (rt0.c1)) ELSE rt1.c5 END WHERE (load_extension(rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((load_extension(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE rt1.c3  WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c2))) THEN (~ (rt0.c1)) ELSE rt1.c5 END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((NULL)OR((NOT (rt1.c4)))))OR(((rt1.c3)<(rt1.c3)))))AND((+ (rt1.c0)))))OR(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR((NOT (rt1.c4)))))OR(((rt1.c3)<(rt1.c3)))))AND((+ (rt1.c0)))))OR(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((NULL)OR((NOT (rt1.c4)))))OR(((rt1.c3)<(rt1.c3)))))AND((+ (rt1.c0)))))OR(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR((NOT (rt1.c4)))))OR(((rt1.c3)<(rt1.c3)))))AND((+ (rt1.c0)))))OR(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((NULL)OR((NOT (rt1.c4)))))OR(((rt1.c3)<(rt1.c3)))))AND((+ (rt1.c0)))))OR(CAST(rt1.c3 AS REAL))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c0))) NOT BETWEEN (((rt1.c2)IS(rt1.c3))) AND (((((((((rt1.c4)OR(rt1.c1)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c0))) NOT BETWEEN (((rt1.c2)IS(rt1.c3))) AND (((((((((rt1.c4)OR(rt1.c1)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c0))) NOT BETWEEN (((rt1.c2)IS(rt1.c3))) AND (((((((((rt1.c4)OR(rt1.c1)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c0))) NOT BETWEEN (((rt1.c2)IS(rt1.c3))) AND (((((((((rt1.c4)OR(rt1.c1)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c0))) NOT BETWEEN (((rt1.c2)IS(rt1.c3))) AND (((((((((rt1.c4)OR(rt1.c1)))OR(NULL)))OR(rt1.c0)))AND(rt1.c0)))));
SELECT * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c2 ELSE '257792200' END))) ORDER BY ABS(ABS(DISTINCT v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN v0.c0 THEN v0.c2 ELSE '257792200' END))) IS TRUE)  as count FROM v0 ORDER BY ABS(ABS(DISTINCT v0.c0)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c2 ELSE '257792200' END))) ORDER BY ABS(ABS(DISTINCT v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN v0.c0 THEN v0.c2 ELSE '257792200' END))) IS TRUE)  as count FROM v0 ORDER BY ABS(ABS(DISTINCT v0.c0)) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ (CASE WHEN v0.c0 THEN v0.c2 ELSE '257792200' END))) ORDER BY ABS(ABS(DISTINCT v0.c0)) ASC  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN rt0 ON (((+ (v0.c2))) NOT BETWEEN (((v0.c1) ISNULL)) AND ((('?6') NOTNULL))) WHERE (((((rt0.c0 COLLATE BINARY)OR(v0.c2 COLLATE BINARY)))OR(((0.4634664465268099)|(rt0.c2))))) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)OR(v0.c2 COLLATE BINARY)))OR(((0.4634664465268099)|(rt0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((+ (v0.c2))) NOT BETWEEN (((v0.c1) ISNULL)) AND ((('?6') NOTNULL))) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM v0 CROSS JOIN rt0 ON (((+ (v0.c2))) NOT BETWEEN (((v0.c1) ISNULL)) AND ((('?6') NOTNULL))) WHERE (((((rt0.c0 COLLATE BINARY)OR(v0.c2 COLLATE BINARY)))OR(((0.4634664465268099)|(rt0.c2))))) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE BINARY)OR(v0.c2 COLLATE BINARY)))OR(((0.4634664465268099)|(rt0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((+ (v0.c2))) NOT BETWEEN (((v0.c1) ISNULL)) AND ((('?6') NOTNULL))) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM v0 CROSS JOIN rt0 ON (((+ (v0.c2))) NOT BETWEEN (((v0.c1) ISNULL)) AND ((('?6') NOTNULL))) WHERE (((((rt0.c0 COLLATE BINARY)OR(v0.c2 COLLATE BINARY)))OR(((0.4634664465268099)|(rt0.c2))))) ORDER BY (- (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt1.c2)>(rt1.c3)))OR(2.74962116E8)))OR(CASE rt1.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY LOWER(rt1.c4) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)>(rt1.c3)))OR(2.74962116E8)))OR(CASE rt1.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, rt1 ORDER BY LOWER(rt1.c4) COLLATE BINARY DESC);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt1.c2)>(rt1.c3)))OR(2.74962116E8)))OR(CASE rt1.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY LOWER(rt1.c4) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)>(rt1.c3)))OR(2.74962116E8)))OR(CASE rt1.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 NOT INDEXED, rt1 ORDER BY LOWER(rt1.c4) COLLATE BINARY DESC);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt1.c2)>(rt1.c3)))OR(2.74962116E8)))OR(CASE rt1.c2  WHEN v0.c0 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY LOWER(rt1.c4) COLLATE BINARY DESC;
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((rt0.c2) ISNULL) IN ()) WHERE ((((((rt1.c4)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN (((((v0.c0)OR('')))OR(rt1.c0))) AND ('⚀V*''2')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN (((((v0.c0)OR('')))OR(rt1.c0))) AND ('⚀V*''2'))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((rt0.c2) ISNULL) IN ()));
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((rt0.c2) ISNULL) IN ()) WHERE ((((((rt1.c4)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN (((((v0.c0)OR('')))OR(rt1.c0))) AND ('⚀V*''2')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN (((((v0.c0)OR('')))OR(rt1.c0))) AND ('⚀V*''2'))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((rt0.c2) ISNULL) IN ()));
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (((rt0.c2) ISNULL) IN ()) WHERE ((((((rt1.c4)) BETWEEN ((v0.c0)) AND ((NULL)))) NOT BETWEEN (((((v0.c0)OR('')))OR(rt1.c0))) AND ('⚀V*''2')));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(rt1.c4)) COLLATE RTRIM CROSS JOIN rt0 ON (+ (RTRIM(v0.c1))) WHERE (ABS(0.907721401502426 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((ABS(0.907721401502426 COLLATE NOCASE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(rt1.c4)) COLLATE RTRIM CROSS JOIN rt0 ON (+ (RTRIM(v0.c1))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(rt1.c4)) COLLATE RTRIM CROSS JOIN rt0 ON (+ (RTRIM(v0.c1))) WHERE (ABS(0.907721401502426 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((ABS(0.907721401502426 COLLATE NOCASE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(rt1.c4)) COLLATE RTRIM CROSS JOIN rt0 ON (+ (RTRIM(v0.c1))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((rt1.c0)<<(rt1.c4)) COLLATE RTRIM CROSS JOIN rt0 ON (+ (RTRIM(v0.c1))) WHERE (ABS(0.907721401502426 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((rt1.c2 IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((((0.15211791917825712)OR(rt1.c0)))OR(NULL)))) AND ((((rt1.c3)>>(0.6494390569910917)))))) ORDER BY CASE CAST(rt1.c5 AS INTEGER)  WHEN rt1.c0 COLLATE BINARY THEN (('-1181532969') IS FALSE) ELSE '1571754287' END;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((((0.15211791917825712)OR(rt1.c0)))OR(NULL)))) AND ((((rt1.c3)>>(0.6494390569910917)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c5 AS INTEGER)  WHEN rt1.c0 COLLATE BINARY THEN (('-1181532969') IS FALSE) ELSE '1571754287' END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((((0.15211791917825712)OR(rt1.c0)))OR(NULL)))) AND ((((rt1.c3)>>(0.6494390569910917)))))) ORDER BY CASE CAST(rt1.c5 AS INTEGER)  WHEN rt1.c0 COLLATE BINARY THEN (('-1181532969') IS FALSE) ELSE '1571754287' END;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((((0.15211791917825712)OR(rt1.c0)))OR(NULL)))) AND ((((rt1.c3)>>(0.6494390569910917)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c5 AS INTEGER)  WHEN rt1.c0 COLLATE BINARY THEN (('-1181532969') IS FALSE) ELSE '1571754287' END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((((((0.15211791917825712)OR(rt1.c0)))OR(NULL)))) AND ((((rt1.c3)>>(0.6494390569910917)))))) ORDER BY CASE CAST(rt1.c5 AS INTEGER)  WHEN rt1.c0 COLLATE BINARY THEN (('-1181532969') IS FALSE) ELSE '1571754287' END;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((- (((rt0.c0) IS TRUE)))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c4 WHEN '5쾡' THEN rt1.c3 END IN ())  NULLS LAST, CASE WHEN ((v0.c2) BETWEEN (rt1.c2) AND ('0.019735727286461335')) THEN x'' WHEN x'' THEN (rt1.c3 IN (rt0.c0)) WHEN '.dAg쎧' THEN '916547249' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (CASE WHEN rt1.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c4 WHEN '5쾡' THEN rt1.c3 END IN ())  NULLS LAST, CASE WHEN ((v0.c2) BETWEEN (rt1.c2) AND ('0.019735727286461335')) THEN x'' WHEN x'' THEN (rt1.c3 IN (rt0.c0)) WHEN '.dAg쎧' THEN '916547249' END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((- (((rt0.c0) IS TRUE)))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c4 WHEN '5쾡' THEN rt1.c3 END IN ())  NULLS LAST, CASE WHEN ((v0.c2) BETWEEN (rt1.c2) AND ('0.019735727286461335')) THEN x'' WHEN x'' THEN (rt1.c3 IN (rt0.c0)) WHEN '.dAg쎧' THEN '916547249' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (CASE WHEN rt1.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c4 WHEN '5쾡' THEN rt1.c3 END IN ())  NULLS LAST, CASE WHEN ((v0.c2) BETWEEN (rt1.c2) AND ('0.019735727286461335')) THEN x'' WHEN x'' THEN (rt1.c3 IN (rt0.c0)) WHEN '.dAg쎧' THEN '916547249' END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((- (((rt0.c0) IS TRUE)))) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c4 WHEN '5쾡' THEN rt1.c3 END IN ())  NULLS LAST, CASE WHEN ((v0.c2) BETWEEN (rt1.c2) AND ('0.019735727286461335')) THEN x'' WHEN x'' THEN (rt1.c3 IN (rt0.c0)) WHEN '.dAg쎧' THEN '916547249' END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((json_array_length(v0.c2))OR((((rt1.c0))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(v0.c2))OR((((rt1.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((json_array_length(v0.c2))OR((((rt1.c0))<=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(v0.c2))OR((((rt1.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((json_array_length(v0.c2))OR((((rt1.c0))<=((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (load_extension(QUOTE(rt1.c0), ((v0.c1)&(v0.c1))));
SELECT SUM(count) FROM (SELECT ((load_extension(QUOTE(rt1.c0), ((v0.c1)&(v0.c1)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (load_extension(QUOTE(rt1.c0), ((v0.c1)&(v0.c1))));
SELECT SUM(count) FROM (SELECT ((load_extension(QUOTE(rt1.c0), ((v0.c1)&(v0.c1)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c4)))AND(rt1.c4)))+(rt1.c2 COLLATE BINARY))) ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND(((rt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(rt1.c4)))AND(rt1.c4)))+(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND(((rt1.c0) NOT NULL))) DESC);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c4)))AND(rt1.c4)))+(rt1.c2 COLLATE BINARY))) ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND(((rt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(rt1.c4)))AND(rt1.c4)))+(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND(((rt1.c0) NOT NULL))) DESC);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c4)))AND(rt1.c4)))+(rt1.c2 COLLATE BINARY))) ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND(((rt1.c0) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))));
SELECT ALL * FROM rt1 WHERE (((((((((2095878568 COLLATE BINARY)AND(rt1.c5)))AND(rt1.c3 COLLATE BINARY)))AND((0.2297673083663223 IN ()))))OR(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((2095878568 COLLATE BINARY)AND(rt1.c5)))AND(rt1.c3 COLLATE BINARY)))AND((0.2297673083663223 IN ()))))OR(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((2095878568 COLLATE BINARY)AND(rt1.c5)))AND(rt1.c3 COLLATE BINARY)))AND((0.2297673083663223 IN ()))))OR(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((2095878568 COLLATE BINARY)AND(rt1.c5)))AND(rt1.c3 COLLATE BINARY)))AND((0.2297673083663223 IN ()))))OR(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((2095878568 COLLATE BINARY)AND(rt1.c5)))AND(rt1.c3 COLLATE BINARY)))AND((0.2297673083663223 IN ()))))OR(rt1.c3 COLLATE RTRIM)));
SELECT ALL * FROM rt0, v0 WHERE ((((((0.4910796388567662))<>((rt0.c2))))OR(((((x'35ec7421')OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((0.4910796388567662))<>((rt0.c2))))OR(((((x'35ec7421')OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((0.4910796388567662))<>((rt0.c2))))OR(((((x'35ec7421')OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((0.4910796388567662))<>((rt0.c2))))OR(((((x'35ec7421')OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((0.4910796388567662))<>((rt0.c2))))OR(((((x'35ec7421')OR(rt0.c1)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (v0.c2);
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE))<(rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN v0 ON CASE CASE '356200776'  WHEN '-1309416000' THEN v0.c2 ELSE rt1.c2 END  WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS NUMERIC) ELSE ((((v0.c1)OR(rt1.c5)))AND(NULL)) END WHERE ((((((v0.c0))<>(('Gj')))) BETWEEN (v0.c1) AND (CAST(v0.c1 AS INTEGER)))) ORDER BY ((x'') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))!=(('Gj')))) BETWEEN (v0.c1) AND (CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE))<(rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN v0 ON CASE CASE '356200776'  WHEN '-1309416000' THEN v0.c2 ELSE rt1.c2 END  WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS NUMERIC) ELSE ((((v0.c1)OR(rt1.c5)))AND(NULL)) END ORDER BY ((x'') NOT NULL) ASC);
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE))<(rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN v0 ON CASE CASE '356200776'  WHEN '-1309416000' THEN v0.c2 ELSE rt1.c2 END  WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS NUMERIC) ELSE ((((v0.c1)OR(rt1.c5)))AND(NULL)) END WHERE ((((((v0.c0))<>(('Gj')))) BETWEEN (v0.c1) AND (CAST(v0.c1 AS INTEGER)))) ORDER BY ((x'') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))!=(('Gj')))) BETWEEN (v0.c1) AND (CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE))<(rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN v0 ON CASE CASE '356200776'  WHEN '-1309416000' THEN v0.c2 ELSE rt1.c2 END  WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS NUMERIC) ELSE ((((v0.c1)OR(rt1.c5)))AND(NULL)) END ORDER BY ((x'') NOT NULL) ASC);
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt0.c2) IS TRUE))<(rt0.c1 COLLATE NOCASE)) FULL OUTER JOIN v0 ON CASE CASE '356200776'  WHEN '-1309416000' THEN v0.c2 ELSE rt1.c2 END  WHEN (v0.c2 IN ()) THEN CAST(v0.c0 AS NUMERIC) ELSE ((((v0.c1)OR(rt1.c5)))AND(NULL)) END WHERE ((((((v0.c0))<>(('Gj')))) BETWEEN (v0.c1) AND (CAST(v0.c1 AS INTEGER)))) ORDER BY ((x'') NOT NULL) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((0.7337068948296458))<=((617406252)))) BETWEEN (((0.8912154122167995)!=(rt1.c4))) AND ((((rt0.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))))) ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c3 END)IS NOT(CAST(rt1.c4 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.7337068948296458))<=((617406252)))) BETWEEN (((0.8912154122167995)<>(rt1.c4))) AND ((((rt0.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c3 END)IS NOT(CAST(rt1.c4 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((0.7337068948296458))<=((617406252)))) BETWEEN (((0.8912154122167995)!=(rt1.c4))) AND ((((rt0.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))))) ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c3 END)IS NOT(CAST(rt1.c4 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.7337068948296458))<=((617406252)))) BETWEEN (((0.8912154122167995)<>(rt1.c4))) AND ((((rt0.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c3 END)IS NOT(CAST(rt1.c4 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((0.7337068948296458))<=((617406252)))) BETWEEN (((0.8912154122167995)!=(rt1.c4))) AND ((((rt0.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))))) ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c3 END)IS NOT(CAST(rt1.c4 AS BLOB)))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1)<=(v0.c1))))>=(((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(v0.c1))))>=(((~ (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1)<=(v0.c1))))>=(((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(v0.c1))))>=(((~ (rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1)<=(v0.c1))))>=(((~ (rt0.c2))))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (NULL)) AS INTEGER)) ORDER BY ((rt1.c3)||(rt1.c5)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((rt1.c3)||(rt1.c5)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (NULL)) AS INTEGER)) ORDER BY ((rt1.c3)||(rt1.c5)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((rt1.c3)||(rt1.c5)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (rt1.c2) AND (NULL)) AS INTEGER)) ORDER BY ((rt1.c3)||(rt1.c5)) COLLATE RTRIM;
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((rt1.c4)<<(rt1.c5))))<=((((v0.c1)/(v0.c0)))))) ORDER BY (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((1.274084822E9 IN ())) AND (x'587e010f'))  NULLS FIRST, CAST(rt1.c2 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)<<(rt1.c5))))<=((((v0.c1)/(v0.c0)))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((1.274084822E9 IN ())) AND (x'587e010f'))  NULLS FIRST, CAST(rt1.c2 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((rt1.c4)<<(rt1.c5))))<=((((v0.c1)/(v0.c0)))))) ORDER BY (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((1.274084822E9 IN ())) AND (x'587e010f'))  NULLS FIRST, CAST(rt1.c2 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)<<(rt1.c5))))<=((((v0.c1)/(v0.c0)))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((1.274084822E9 IN ())) AND (x'587e010f'))  NULLS FIRST, CAST(rt1.c2 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((rt1.c4)<<(rt1.c5))))<=((((v0.c1)/(v0.c0)))))) ORDER BY (((((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))) NOT BETWEEN ((1.274084822E9 IN ())) AND (x'587e010f'))  NULLS FIRST, CAST(rt1.c2 AS BLOB) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)*(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c5 IN ()))<((~ (rt1.c5))))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5 IN ()))<((~ (rt1.c5))))) IS TRUE)  as count FROM rt1, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c5 IN ()))<((~ (rt1.c5))))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5 IN ()))<((~ (rt1.c5))))) IS TRUE)  as count FROM rt1, v0 ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c5 IN ()))<((~ (rt1.c5))))) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((v0.c1) ISNULL))>=(v0.c1))) ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS LAST, ((((rt1.c5)<<(rt1.c3))) BETWEEN ((rt1.c1 IN ())) AND (v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL))>=(v0.c1))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS LAST, ((((rt1.c5)<<(rt1.c3))) BETWEEN ((rt1.c1 IN ())) AND (v0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((v0.c1) ISNULL))>=(v0.c1))) ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS LAST, ((((rt1.c5)<<(rt1.c3))) BETWEEN ((rt1.c1 IN ())) AND (v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL))>=(v0.c1))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS LAST, ((((rt1.c5)<<(rt1.c3))) BETWEEN ((rt1.c1 IN ())) AND (v0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((v0.c1) ISNULL))>=(v0.c1))) ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS LAST, ((((rt1.c5)<<(rt1.c3))) BETWEEN ((rt1.c1 IN ())) AND (v0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2, rt1.c5, NULL))>=((rt1.c2, rt1.c2, rt1.c1))) IN (((NULL) IS FALSE)))) ORDER BY CAST(((rt1.c4) BETWEEN (x'93b2') AND (NULL)) AS TEXT)  NULLS FIRST, (((((rt1.c1))<>((rt1.c1))))>>((0.10532053676118291 IN (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c5, NULL))>=((rt1.c2, rt1.c2, rt1.c1))) IN (((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c4) BETWEEN (x'93b2') AND (NULL)) AS TEXT)  NULLS FIRST, (((((rt1.c1))<>((rt1.c1))))>>((0.10532053676118291 IN (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2, rt1.c5, NULL))>=((rt1.c2, rt1.c2, rt1.c1))) IN (((NULL) IS FALSE)))) ORDER BY CAST(((rt1.c4) BETWEEN (x'93b2') AND (NULL)) AS TEXT)  NULLS FIRST, (((((rt1.c1))<>((rt1.c1))))>>((0.10532053676118291 IN (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2, rt1.c5, NULL))>=((rt1.c2, rt1.c2, rt1.c1))) IN (((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c4) BETWEEN (x'93b2') AND (NULL)) AS TEXT)  NULLS FIRST, (((((rt1.c1))<>((rt1.c1))))>>((0.10532053676118291 IN (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2, rt1.c5, NULL))>=((rt1.c2, rt1.c2, rt1.c1))) IN (((NULL) IS FALSE)))) ORDER BY CAST(((rt1.c4) BETWEEN (x'93b2') AND (NULL)) AS TEXT)  NULLS FIRST, (((((rt1.c1))<>((rt1.c1))))>>((0.10532053676118291 IN (rt1.c2))));
SELECT ALL * FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, CAST(v0.c1 AS BLOB))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST, ((((((rt0.c1) BETWEEN (v0.c2) AND (v0.c2)))OR((NOT (0.024217143769425298)))))AND(((v0.c2)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, CAST(v0.c1 AS BLOB))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST, ((((((rt0.c1) BETWEEN (v0.c2) AND (v0.c2)))OR((NOT (0.024217143769425298)))))AND(((v0.c2)<<(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, CAST(v0.c1 AS BLOB))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST, ((((((rt0.c1) BETWEEN (v0.c2) AND (v0.c2)))OR((NOT (0.024217143769425298)))))AND(((v0.c2)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, CAST(v0.c1 AS BLOB))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST, ((((((rt0.c1) BETWEEN (v0.c2) AND (v0.c2)))OR((NOT (0.024217143769425298)))))AND(((v0.c2)<<(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, CAST(v0.c1 AS BLOB))) ORDER BY CAST(v0.c0 AS TEXT) ASC  NULLS LAST, ((((((rt0.c1) BETWEEN (v0.c2) AND (v0.c2)))OR((NOT (0.024217143769425298)))))AND(((v0.c2)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt1 WHERE ('252544965') ORDER BY ((((((rt1.c1)AND('0.10532053676118291')))OR(rt1.c2))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (('252544965') IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)AND('0.10532053676118291')))OR(rt1.c2))) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE ('252544965') ORDER BY ((((((rt1.c1)AND('0.10532053676118291')))OR(rt1.c2))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (('252544965') IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1)AND('0.10532053676118291')))OR(rt1.c2))) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE ('252544965') ORDER BY ((((((rt1.c1)AND('0.10532053676118291')))OR(rt1.c2))) IS TRUE) DESC;
SELECT * FROM v0, rt0 WHERE (((((((v0.c1) IS TRUE))AND((rt0.c1 IN (rt0.c0)))))AND((NOT (rt0.c1))))) ORDER BY (((((((rt0.c2, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, v0.c0))))OR(TRIM(v0.c2))))OR(CAST(v0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) IS TRUE))AND((rt0.c1 IN (rt0.c0)))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((rt0.c2, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, v0.c0))))OR(TRIM(v0.c2))))OR(CAST(v0.c2 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((((v0.c1) IS TRUE))AND((rt0.c1 IN (rt0.c0)))))AND((NOT (rt0.c1))))) ORDER BY (((((((rt0.c2, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, v0.c0))))OR(TRIM(v0.c2))))OR(CAST(v0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) IS TRUE))AND((rt0.c1 IN (rt0.c0)))))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((((rt0.c2, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, v0.c0))))OR(TRIM(v0.c2))))OR(CAST(v0.c2 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((((v0.c1) IS TRUE))AND((rt0.c1 IN (rt0.c0)))))AND((NOT (rt0.c1))))) ORDER BY (((((((rt0.c2, rt0.c2, v0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, v0.c0))))OR(TRIM(v0.c2))))OR(CAST(v0.c2 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (NOT (((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c2)))) WHERE ('') ORDER BY ((((((v0.c0)AND(rt1.c5)))OR(x''))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (NOT (((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c2)))) ORDER BY ((((((v0.c0)AND(rt1.c5)))OR(x''))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (NOT (((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c2)))) WHERE ('') ORDER BY ((((((v0.c0)AND(rt1.c5)))OR(x''))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (NOT (((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c2)))) ORDER BY ((((((v0.c0)AND(rt1.c5)))OR(x''))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (NOT (((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c2)))) WHERE ('') ORDER BY ((((((v0.c0)AND(rt1.c5)))OR(x''))) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(TYPEOF(DISTINCT '-1020224246'))))AND(((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) BETWEEN (((rt0.c2)=(rt0.c0))) AND (((rt0.c0)LIKE(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(TYPEOF(DISTINCT '-1020224246'))))AND(((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) BETWEEN (((rt0.c2)=(rt0.c0))) AND (((rt0.c0)LIKE(NULL)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(TYPEOF(DISTINCT '-1020224246'))))AND(((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) BETWEEN (((rt0.c2)=(rt0.c0))) AND (((rt0.c0)LIKE(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(TYPEOF(DISTINCT '-1020224246'))))AND(((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) BETWEEN (((rt0.c2)=(rt0.c0))) AND (((rt0.c0)LIKE(NULL)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(TYPEOF(DISTINCT '-1020224246'))))AND(((((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) BETWEEN (((rt0.c2)=(rt0.c0))) AND (((rt0.c0)LIKE(NULL)))) ASC;
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS NUMERIC))));
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c2 IN (rt0.c2)))&(rt1.c1))) ORDER BY ((((rt1.c0) IS FALSE)) BETWEEN ((+ (rt0.c1))) AND (CAST(0.03716519576110788 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2)))&(rt1.c1))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt1.c0) IS FALSE)) BETWEEN ((+ (rt0.c1))) AND (CAST(0.03716519576110788 AS REAL)))  NULLS LAST);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c2 IN (rt0.c2)))&(rt1.c1))) ORDER BY ((((rt1.c0) IS FALSE)) BETWEEN ((+ (rt0.c1))) AND (CAST(0.03716519576110788 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c2)))&(rt1.c1))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt1.c0) IS FALSE)) BETWEEN ((+ (rt0.c1))) AND (CAST(0.03716519576110788 AS REAL)))  NULLS LAST);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c2 IN (rt0.c2)))&(rt1.c1))) ORDER BY ((((rt1.c0) IS FALSE)) BETWEEN ((+ (rt0.c1))) AND (CAST(0.03716519576110788 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC), ((rt0.c0)-(rt0.c0)), CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c2 END))>=((((rt0.c2) NOTNULL), ((rt0.c1)%(rt0.c2)), (v0.c0 IN ()))))) ORDER BY ((((((v0.c1)AND(rt0.c2)))OR(v0.c1))) ISNULL), CASE ((v0.c2) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN ((v0.c2) NOTNULL) WHEN LOWER(rt0.c2) THEN SQLITE_COMPILEOPTION_USED(v0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2)IS(rt0.c1)) END DESC  NULLS FIRST, ((((v0.c0)|(rt0.c2)))GLOB(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC), ((rt0.c0)-(rt0.c0)), CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c2 END))>=((((rt0.c2) NOTNULL), ((rt0.c1)%(rt0.c2)), (v0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((v0.c1)AND(rt0.c2)))OR(v0.c1))) ISNULL), CASE ((v0.c2) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN ((v0.c2) NOTNULL) WHEN LOWER(rt0.c2) THEN SQLITE_COMPILEOPTION_USED(v0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2)IS(rt0.c1)) END DESC  NULLS FIRST, ((((v0.c0)|(rt0.c2)))GLOB(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC), ((rt0.c0)-(rt0.c0)), CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c2 END))>=((((rt0.c2) NOTNULL), ((rt0.c1)%(rt0.c2)), (v0.c0 IN ()))))) ORDER BY ((((((v0.c1)AND(rt0.c2)))OR(v0.c1))) ISNULL), CASE ((v0.c2) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN ((v0.c2) NOTNULL) WHEN LOWER(rt0.c2) THEN SQLITE_COMPILEOPTION_USED(v0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2)IS(rt0.c1)) END DESC  NULLS FIRST, ((((v0.c0)|(rt0.c2)))GLOB(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC), ((rt0.c0)-(rt0.c0)), CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c2 END))>=((((rt0.c2) NOTNULL), ((rt0.c1)%(rt0.c2)), (v0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((v0.c1)AND(rt0.c2)))OR(v0.c1))) ISNULL), CASE ((v0.c2) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN ((v0.c2) NOTNULL) WHEN LOWER(rt0.c2) THEN SQLITE_COMPILEOPTION_USED(v0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2)IS(rt0.c1)) END DESC  NULLS FIRST, ((((v0.c0)|(rt0.c2)))GLOB(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((CAST(rt0.c1 AS NUMERIC), ((rt0.c0)-(rt0.c0)), CASE WHEN rt0.c1 THEN v0.c0 ELSE v0.c2 END))>=((((rt0.c2) NOTNULL), ((rt0.c1)%(rt0.c2)), (v0.c0 IN ()))))) ORDER BY ((((((v0.c1)AND(rt0.c2)))OR(v0.c1))) ISNULL), CASE ((v0.c2) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN ((v0.c2) NOTNULL) WHEN LOWER(rt0.c2) THEN SQLITE_COMPILEOPTION_USED(v0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2)IS(rt0.c1)) END DESC  NULLS FIRST, ((((v0.c0)|(rt0.c2)))GLOB(((rt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((~ (CASE rt0.c0  WHEN NULL THEN NULL ELSE rt1.c0 END))) ORDER BY ((((v0.c2) IS TRUE))=((- (rt0.c1))))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt1.c5)GLOB(v0.c2))))), (((0.294485455565377) NOT BETWEEN (rt1.c5) AND (rt1.c3)) IN ());
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN NULL THEN NULL ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((v0.c2) IS TRUE))==((- (rt0.c1))))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt1.c5)GLOB(v0.c2))))), (((0.294485455565377) NOT BETWEEN (rt1.c5) AND (rt1.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((~ (CASE rt0.c0  WHEN NULL THEN NULL ELSE rt1.c0 END))) ORDER BY ((((v0.c2) IS TRUE))=((- (rt0.c1))))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt1.c5)GLOB(v0.c2))))), (((0.294485455565377) NOT BETWEEN (rt1.c5) AND (rt1.c3)) IN ());
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN NULL THEN NULL ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((v0.c2) IS TRUE))==((- (rt0.c1))))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt1.c5)GLOB(v0.c2))))), (((0.294485455565377) NOT BETWEEN (rt1.c5) AND (rt1.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((~ (CASE rt0.c0  WHEN NULL THEN NULL ELSE rt1.c0 END))) ORDER BY ((((v0.c2) IS TRUE))=((- (rt0.c1))))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((rt1.c5)GLOB(v0.c2))))), (((0.294485455565377) NOT BETWEEN (rt1.c5) AND (rt1.c3)) IN ());
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON CAST(((((rt1.c3)OR(rt1.c5)))OR(rt0.c0)) AS REAL) WHERE (json(x'ef17'));
SELECT SUM(count) FROM (SELECT ((json(x'ef17')) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON CAST(((((rt1.c3)OR(rt1.c5)))OR(rt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON CAST(((((rt1.c3)OR(rt1.c5)))OR(rt0.c0)) AS REAL) WHERE (json(x'ef17'));
SELECT SUM(count) FROM (SELECT ((json(x'ef17')) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON CAST(((((rt1.c3)OR(rt1.c5)))OR(rt0.c0)) AS REAL));
SELECT * FROM rt1, rt0, v0 WHERE (CASE WHEN rt1.c4 THEN ((rt1.c5)>(rt1.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c4 THEN ((rt1.c5)>(rt1.c5)) END) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE (CASE WHEN rt1.c4 THEN ((rt1.c5)>(rt1.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c4 THEN ((rt1.c5)>(rt1.c5)) END) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE (CASE WHEN rt1.c4 THEN ((rt1.c5)>(rt1.c5)) END);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON LOWER(rt0.c0) WHERE (((CAST(rt1.c0 AS TEXT))%((('-88177211') NOTNULL)))) ORDER BY ((rt0.c0) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS TEXT))%((('-88177211') NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON LOWER(rt0.c0) ORDER BY ((rt0.c0) ISNULL) ASC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON LOWER(rt0.c0) WHERE (((CAST(rt1.c0 AS TEXT))%((('-88177211') NOTNULL)))) ORDER BY ((rt0.c0) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS TEXT))%((('-88177211') NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON LOWER(rt0.c0) ORDER BY ((rt0.c0) ISNULL) ASC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON LOWER(rt0.c0) WHERE (((CAST(rt1.c0 AS TEXT))%((('-88177211') NOTNULL)))) ORDER BY ((rt0.c0) ISNULL) ASC;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND((('') IS TRUE))))OR(CAST(rt0.c2 AS TEXT)))  NULLS FIRST, 0.8131060363725898 DESC  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND((('') IS TRUE))))OR(CAST(rt0.c2 AS TEXT)))  NULLS FIRST, 0.8131060363725898 DESC  NULLS LAST, rt0.c0  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND((('') IS TRUE))))OR(CAST(rt0.c2 AS TEXT)))  NULLS FIRST, 0.8131060363725898 DESC  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND((('') IS TRUE))))OR(CAST(rt0.c2 AS TEXT)))  NULLS FIRST, 0.8131060363725898 DESC  NULLS LAST, rt0.c0  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND((('') IS TRUE))))OR(CAST(rt0.c2 AS TEXT)))  NULLS FIRST, 0.8131060363725898 DESC  NULLS LAST, rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((v0.c0)%(rt0.c1))) NOTNULL) CROSS JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1)>(v0.c2))) AND ((NOT (v0.c2)))) WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((v0.c0)%(rt0.c1))) NOTNULL) CROSS JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1)>(v0.c2))) AND ((NOT (v0.c2)))) ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((v0.c0)%(rt0.c1))) NOTNULL) CROSS JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1)>(v0.c2))) AND ((NOT (v0.c2)))) WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((((v0.c0)%(rt0.c1))) NOTNULL) CROSS JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1)>(v0.c2))) AND ((NOT (v0.c2)))) ORDER BY v0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON ((((v0.c0)%(rt0.c1))) NOTNULL) CROSS JOIN rt0 ON (((- (v0.c0))) BETWEEN (((rt0.c1)>(v0.c2))) AND ((NOT (v0.c2)))) WHERE (v0.c0) ORDER BY v0.c1 DESC  NULLS FIRST;
SELECT * FROM rt1, v0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (rt1.c1);
SELECT ALL * FROM rt0, v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) WHERE (rtreenode(rt1.c3, ((x'')<<('\rC p_Ht')))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt1.c3, ((x'')<<('\rC p_Ht')))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM rt0, v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) WHERE (rtreenode(rt1.c3, ((x'')<<('\rC p_Ht')))) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(rt1.c3, ((x'')<<('\rC p_Ht')))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) ORDER BY TOTAL_CHANGES());
SELECT ALL * FROM rt0, v0 CROSS JOIN rt1 ON ((rt1.c3) ISNULL) WHERE (rtreenode(rt1.c3, ((x'')<<('\rC p_Ht')))) ORDER BY TOTAL_CHANGES();
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND ((0x6aa257a3 IN ()))) FULL OUTER JOIN rt1 ON ((rt0.c1)LIKE(CAST(v0.c2 AS BLOB))) WHERE (rt0.c0) ORDER BY ((CASE v0.c0  WHEN rt1.c4 THEN rt1.c0 END)GLOB(((rt0.c0)<(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND ((0X6aa257a3 IN ()))) FULL OUTER JOIN rt1 ON ((rt0.c1)LIKE(CAST(v0.c2 AS BLOB))) ORDER BY ((CASE v0.c0  WHEN rt1.c4 THEN rt1.c0 END)GLOB(((rt0.c0)<(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND ((0x6aa257a3 IN ()))) FULL OUTER JOIN rt1 ON ((rt0.c1)LIKE(CAST(v0.c2 AS BLOB))) WHERE (rt0.c0) ORDER BY ((CASE v0.c0  WHEN rt1.c4 THEN rt1.c0 END)GLOB(((rt0.c0)<(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND ((0X6aa257a3 IN ()))) FULL OUTER JOIN rt1 ON ((rt0.c1)LIKE(CAST(v0.c2 AS BLOB))) ORDER BY ((CASE v0.c0  WHEN rt1.c4 THEN rt1.c0 END)GLOB(((rt0.c0)<(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND ((0x6aa257a3 IN ()))) FULL OUTER JOIN rt1 ON ((rt0.c1)LIKE(CAST(v0.c2 AS BLOB))) WHERE (rt0.c0) ORDER BY ((CASE v0.c0  WHEN rt1.c4 THEN rt1.c0 END)GLOB(((rt0.c0)<(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((v0.c1)) AND ((NULL COLLATE BINARY))) LEFT OUTER JOIN rt1 ON ((UPPER(v0.c1))||(rt1.c4 COLLATE BINARY)) WHERE (2016016362) ORDER BY (((((0x5efcd26c)) BETWEEN ((rt1.c5)) AND ((x''))))|(((v0.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((2016016362) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((v0.c1)) AND ((NULL COLLATE BINARY))) LEFT OUTER JOIN rt1 ON ((UPPER(v0.c1))||(rt1.c4 COLLATE BINARY)) ORDER BY (((((0X5efcd26c)) BETWEEN ((rt1.c5)) AND ((x''))))|(((v0.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((v0.c1)) AND ((NULL COLLATE BINARY))) LEFT OUTER JOIN rt1 ON ((UPPER(v0.c1))||(rt1.c4 COLLATE BINARY)) WHERE (2016016362) ORDER BY (((((0x5efcd26c)) BETWEEN ((rt1.c5)) AND ((x''))))|(((v0.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((2016016362) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt1.c4)) BETWEEN ((v0.c1)) AND ((NULL COLLATE BINARY))) LEFT OUTER JOIN rt1 ON ((UPPER(v0.c1))||(rt1.c4 COLLATE BINARY)) ORDER BY (((((0X5efcd26c)) BETWEEN ((rt1.c5)) AND ((x''))))|(((v0.c0)IS NOT(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2)))) IS FALSE)) ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) BETWEEN ((((rt1.c2)/(rt1.c1)), (rt1.c1 IN (x'', rt1.c1)), ((((rt1.c5)AND(rt1.c0)))OR(rt1.c3)))) AND ((('' IN ()), CAST(rt1.c5 AS BLOB), 0.13747987056355881)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2)))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) BETWEEN ((((rt1.c2)/(rt1.c1)), (rt1.c1 IN (x'', rt1.c1)), ((((rt1.c5)AND(rt1.c0)))OR(rt1.c3)))) AND ((('' IN ()), CAST(rt1.c5 AS BLOB), 0.13747987056355881))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2)))) IS FALSE)) ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) BETWEEN ((((rt1.c2)/(rt1.c1)), (rt1.c1 IN (x'', rt1.c1)), ((((rt1.c5)AND(rt1.c0)))OR(rt1.c3)))) AND ((('' IN ()), CAST(rt1.c5 AS BLOB), 0.13747987056355881)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2)))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) BETWEEN ((((rt1.c2)/(rt1.c1)), (rt1.c1 IN (x'', rt1.c1)), ((((rt1.c5)AND(rt1.c0)))OR(rt1.c3)))) AND ((('' IN ()), CAST(rt1.c5 AS BLOB), 0.13747987056355881))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2)))) IS FALSE)) ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) BETWEEN ((((rt1.c2)/(rt1.c1)), (rt1.c1 IN (x'', rt1.c1)), ((((rt1.c5)AND(rt1.c0)))OR(rt1.c3)))) AND ((('' IN ()), CAST(rt1.c5 AS BLOB), 0.13747987056355881)));
SELECT * FROM rt1 WHERE ((IFNULL(DISTINCT rt1.c5, rt1.c5) IN ())) ORDER BY '-1536958039' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT rt1.c5, rt1.c5) IN ())) IS TRUE)  as count FROM rt1 ORDER BY '-1536958039' COLLATE NOCASE ASC);
SELECT * FROM rt1 WHERE ((IFNULL(DISTINCT rt1.c5, rt1.c5) IN ())) ORDER BY '-1536958039' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT rt1.c5, rt1.c5) IN ())) IS TRUE)  as count FROM rt1 ORDER BY '-1536958039' COLLATE NOCASE ASC);
SELECT * FROM rt1 WHERE ((IFNULL(DISTINCT rt1.c5, rt1.c5) IN ())) ORDER BY '-1536958039' COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((rt0.c1) NOT BETWEEN (((((rt1.c4)OR(rt1.c3)))OR(rt1.c1))) AND (TRIM(rt1.c5, v0.c0)))) ORDER BY (((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((((rt1.c4)OR(rt1.c3)))OR(rt1.c1))) AND (TRIM(rt1.c5, v0.c0)))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((rt0.c1) NOT BETWEEN (((((rt1.c4)OR(rt1.c3)))OR(rt1.c1))) AND (TRIM(rt1.c5, v0.c0)))) ORDER BY (((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((((rt1.c4)OR(rt1.c3)))OR(rt1.c1))) AND (TRIM(rt1.c5, v0.c0)))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((rt0.c1) NOT BETWEEN (((((rt1.c4)OR(rt1.c3)))OR(rt1.c1))) AND (TRIM(rt1.c5, v0.c0)))) ORDER BY (((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CAST(v0.c0 AS NUMERIC))) WHERE (CASE WHEN ((v0.c1) ISNULL) THEN json_array_length(x'') END) ORDER BY (((((rt0.c2)>=(NULL))))<((HEX(DISTINCT rt0.c0)))), ((CAST(rt0.c2 AS REAL)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1) ISNULL) THEN json_array_length(x'') END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CAST(v0.c0 AS NUMERIC))) ORDER BY (((((rt0.c2)>=(NULL))))<((HEX(DISTINCT rt0.c0)))), ((CAST(rt0.c2 AS REAL)) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CAST(v0.c0 AS NUMERIC))) WHERE (CASE WHEN ((v0.c1) ISNULL) THEN json_array_length(x'') END) ORDER BY (((((rt0.c2)>=(NULL))))<((HEX(DISTINCT rt0.c0)))), ((CAST(rt0.c2 AS REAL)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c1) ISNULL) THEN json_array_length(x'') END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CAST(v0.c0 AS NUMERIC))) ORDER BY (((((rt0.c2)>=(NULL))))<((HEX(DISTINCT rt0.c0)))), ((CAST(rt0.c2 AS REAL)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((0xffffffffd466efc7))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))GLOB((- (rt1.c0))))) ORDER BY ((((rt1.c4)>=(v0.c1)))IS(((('4pi_}[', x'', rt0.c2))!=((v0.c0, rt0.c2, NULL))))) ASC  NULLS FIRST, CAST((((rt1.c4))!=((rt1.c0))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))GLOB((- (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((0Xffffffffd466efc7))) ORDER BY ((((rt1.c4)>=(v0.c1)))IS(((('4pi_}[', x'', rt0.c2))!=((v0.c0, rt0.c2, NULL))))) ASC  NULLS FIRST, CAST((((rt1.c4))!=((rt1.c0))) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((0xffffffffd466efc7))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))GLOB((- (rt1.c0))))) ORDER BY ((((rt1.c4)>=(v0.c1)))IS(((('4pi_}[', x'', rt0.c2))!=((v0.c0, rt0.c2, NULL))))) ASC  NULLS FIRST, CAST((((rt1.c4))!=((rt1.c0))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))GLOB((- (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((0Xffffffffd466efc7))) ORDER BY ((((rt1.c4)>=(v0.c1)))IS(((('4pi_}[', x'', rt0.c2))!=((v0.c0, rt0.c2, NULL))))) ASC  NULLS FIRST, CAST((((rt1.c4))!=((rt1.c0))) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN v0 ON (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c3 AS TEXT))) AND ((0xffffffffd466efc7))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1)))GLOB((- (rt1.c0))))) ORDER BY ((((rt1.c4)>=(v0.c1)))IS(((('4pi_}[', x'', rt0.c2))!=((v0.c0, rt0.c2, NULL))))) ASC  NULLS FIRST, CAST((((rt1.c4))!=((rt1.c0))) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((x'') BETWEEN (((v0.c1)IS(v0.c0))) AND ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((v0.c1)IS(v0.c0))) AND ((~ (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((x'') BETWEEN (((v0.c1)IS(v0.c0))) AND ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((v0.c1)IS(v0.c0))) AND ((~ (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((x'') BETWEEN (((v0.c1)IS(v0.c0))) AND ((~ (v0.c2)))));
SELECT * FROM rt0 WHERE ((((((((((+ (rt0.c2)))AND(rt0.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))) ORDER BY (UPPER(DISTINCT rt0.c2) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))AND(rt0.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(DISTINCT rt0.c2) IN ()) ASC);
SELECT * FROM rt0 WHERE ((((((((((+ (rt0.c2)))AND(rt0.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))) ORDER BY (UPPER(DISTINCT rt0.c2) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))AND(rt0.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(DISTINCT rt0.c2) IN ()) ASC);
SELECT * FROM rt0 WHERE ((((((((((+ (rt0.c2)))AND(rt0.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))))AND(CAST(rt0.c2 AS REAL)))) ORDER BY (UPPER(DISTINCT rt0.c2) IN ()) ASC;
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON (((-1323038775 IN (rt0.c1, x'6d2cfb52'))) BETWEEN (((rt1.c3) NOT NULL)) AND (((rt0.c2)>(v0.c0)))) LEFT OUTER JOIN v0 ON (- (((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))) WHERE ((((rt1.c5))<=((((v0.c1) BETWEEN (v0.c1) AND (rt1.c3)))))) ORDER BY CASE (~ (v0.c2))  WHEN (NOT (v0.c1)) THEN (NOT (rt1.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5))<=((((v0.c1) BETWEEN (v0.c1) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((-1323038775 IN (rt0.c1, x'6d2cfb52'))) BETWEEN (((rt1.c3) NOT NULL)) AND (((rt0.c2)>(v0.c0)))) LEFT OUTER JOIN v0 ON (- (((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))) ORDER BY CASE (~ (v0.c2))  WHEN (NOT (v0.c1)) THEN (NOT (rt1.c1)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON (((-1323038775 IN (rt0.c1, x'6d2cfb52'))) BETWEEN (((rt1.c3) NOT NULL)) AND (((rt0.c2)>(v0.c0)))) LEFT OUTER JOIN v0 ON (- (((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))) WHERE ((((rt1.c5))<=((((v0.c1) BETWEEN (v0.c1) AND (rt1.c3)))))) ORDER BY CASE (~ (v0.c2))  WHEN (NOT (v0.c1)) THEN (NOT (rt1.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5))<=((((v0.c1) BETWEEN (v0.c1) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((-1323038775 IN (rt0.c1, x'6d2cfb52'))) BETWEEN (((rt1.c3) NOT NULL)) AND (((rt0.c2)>(v0.c0)))) LEFT OUTER JOIN v0 ON (- (((((rt0.c0)OR(rt1.c1)))OR(rt1.c0)))) ORDER BY CASE (~ (v0.c2))  WHEN (NOT (v0.c1)) THEN (NOT (rt1.c1)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (((CAST(v0.c1 AS REAL))>=(v0.c1))) ORDER BY (NULLIF(v0.c2, rt1.c5) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))>=(v0.c1))) IS TRUE)  as count FROM v0, rt1 ORDER BY (NULLIF(v0.c2, rt1.c5) IN ()) DESC);
SELECT COUNT(*) FROM v0, rt1 WHERE (((CAST(v0.c1 AS REAL))>=(v0.c1))) ORDER BY (NULLIF(v0.c2, rt1.c5) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c1 AS REAL))>=(v0.c1))) IS TRUE)  as count FROM v0, rt1 ORDER BY (NULLIF(v0.c2, rt1.c5) IN ()) DESC);
SELECT COUNT(*) FROM v0, rt1 WHERE (((CAST(v0.c1 AS REAL))>=(v0.c1))) ORDER BY (NULLIF(v0.c2, rt1.c5) IN ()) DESC;
SELECT * FROM rt0 WHERE ((((((((((((0.7058157873256717)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM))>=(('-424831703', UNLIKELY(DISTINCT rt0.c0), rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)))))) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1)+(0.4406532450151409)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0.7058157873256717)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM))>=(('-424831703', UNLIKELY(DISTINCT rt0.c0), rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1)+(0.4406532450151409)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE ((((((((((((0.7058157873256717)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM))>=(('-424831703', UNLIKELY(DISTINCT rt0.c0), rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)))))) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1)+(0.4406532450151409)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0.7058157873256717)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM))>=(('-424831703', UNLIKELY(DISTINCT rt0.c0), rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1)+(0.4406532450151409)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE ((((((((((((0.7058157873256717)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)), ((rt0.c1) NOT NULL), rt0.c1 COLLATE RTRIM, rt0.c2, rt0.c0 COLLATE RTRIM))>=(('-424831703', UNLIKELY(DISTINCT rt0.c0), rt0.c1 COLLATE NOCASE, (rt0.c0 IN ()), ((((((((NULL)AND(rt0.c0)))OR(rt0.c2)))OR(NULL)))AND(rt0.c0)))))) ORDER BY ((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1)+(0.4406532450151409)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC;
SELECT * FROM rt1, rt0 WHERE ((((rt1.c5)) NOT BETWEEN ((json_array(rt0.c2, rt0.c2))) AND ((json_insert(rt1.c4, rt0.c0, rt1.c5))))) ORDER BY (((rt1.c1, rt0.c2, rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN (('274962116', ((rt1.c2)-(rt0.c0)), rt1.c1 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END, ((rt1.c2) ISNULL))) AND ((CAST(rt0.c2 AS BLOB), CAST(rt1.c3 AS INTEGER), (+ (rt1.c5)), ((rt1.c4)LIKE(rt0.c0)), ((rt0.c1)==(rt1.c2))))) ASC, CAST((rt1.c3 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)) NOT BETWEEN ((json_array(rt0.c2, rt0.c2))) AND ((json_insert(rt1.c4, rt0.c0, rt1.c5))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1, rt0.c2, rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN (('274962116', ((rt1.c2)-(rt0.c0)), rt1.c1 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END, ((rt1.c2) ISNULL))) AND ((CAST(rt0.c2 AS BLOB), CAST(rt1.c3 AS INTEGER), (+ (rt1.c5)), ((rt1.c4)LIKE(rt0.c0)), ((rt0.c1)==(rt1.c2))))) ASC, CAST((rt1.c3 IN ()) AS NUMERIC) DESC);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c5)) NOT BETWEEN ((json_array(rt0.c2, rt0.c2))) AND ((json_insert(rt1.c4, rt0.c0, rt1.c5))))) ORDER BY (((rt1.c1, rt0.c2, rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN (('274962116', ((rt1.c2)-(rt0.c0)), rt1.c1 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END, ((rt1.c2) ISNULL))) AND ((CAST(rt0.c2 AS BLOB), CAST(rt1.c3 AS INTEGER), (+ (rt1.c5)), ((rt1.c4)LIKE(rt0.c0)), ((rt0.c1)==(rt1.c2))))) ASC, CAST((rt1.c3 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)) NOT BETWEEN ((json_array(rt0.c2, rt0.c2))) AND ((json_insert(rt1.c4, rt0.c0, rt1.c5))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1, rt0.c2, rt1.c3, rt0.c0, rt1.c3)) NOT BETWEEN (('274962116', ((rt1.c2)-(rt0.c0)), rt1.c1 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END, ((rt1.c2) ISNULL))) AND ((CAST(rt0.c2 AS BLOB), CAST(rt1.c3 AS INTEGER), (+ (rt1.c5)), ((rt1.c4)LIKE(rt0.c0)), ((rt0.c1)==(rt1.c2))))) ASC, CAST((rt1.c3 IN ()) AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0 WHERE (0.8231580002637083) ORDER BY (((+ (rt0.c1)))<=((((rt0.c0, rt0.c0, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c0)))))  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))+(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8231580002637083) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1)))<=((((rt0.c0, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c0)))))  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))+(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.8231580002637083) ORDER BY (((+ (rt0.c1)))<=((((rt0.c0, rt0.c0, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c0)))))  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))+(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8231580002637083) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1)))<=((((rt0.c0, rt0.c0, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c0)))))  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))+(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (0.8231580002637083) ORDER BY (((+ (rt0.c1)))<=((((rt0.c0, rt0.c0, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c0)))))  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))+(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN 'V%f4' THEN v0.c2 WHEN 0xfffffffff33ea8b7 THEN v0.c2 ELSE v0.c2 END) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN 'V%f4' THEN v0.c2 WHEN 0Xfffffffff33ea8b7 THEN v0.c2 ELSE v0.c2 END) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN 'V%f4' THEN v0.c2 WHEN 0xfffffffff33ea8b7 THEN v0.c2 ELSE v0.c2 END) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN 'V%f4' THEN v0.c2 WHEN 0Xfffffffff33ea8b7 THEN v0.c2 ELSE v0.c2 END) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN (v0.c2))) BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN 'V%f4' THEN v0.c2 WHEN 0xfffffffff33ea8b7 THEN v0.c2 ELSE v0.c2 END) AND (v0.c0)));
SELECT COUNT(*) FROM rt0, v0 WHERE (0.4969693220615481) ORDER BY ((NULL) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c2, '0.6233305893306113', v0.c1))>((rt0.c2, rt0.c1, rt0.c0, x'2ca0', rt0.c0)))) AND (((v0.c1)||(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.4969693220615481) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c2, '0.6233305893306113', v0.c1))>((rt0.c2, rt0.c1, rt0.c0, x'2ca0', rt0.c0)))) AND (((v0.c1)||(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.4969693220615481) ORDER BY ((NULL) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c2, '0.6233305893306113', v0.c1))>((rt0.c2, rt0.c1, rt0.c0, x'2ca0', rt0.c0)))) AND (((v0.c1)||(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.4969693220615481) IS TRUE)  as count FROM rt0, v0 ORDER BY ((NULL) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c2, '0.6233305893306113', v0.c1))>((rt0.c2, rt0.c1, rt0.c0, x'2ca0', rt0.c0)))) AND (((v0.c1)||(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (0.4969693220615481) ORDER BY ((NULL) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c2, '0.6233305893306113', v0.c1))>((rt0.c2, rt0.c1, rt0.c0, x'2ca0', rt0.c0)))) AND (((v0.c1)||(rt0.c2)))) DESC;
SELECT * FROM rt0, v0, rt1 WHERE ((CASE WHEN rt1.c1 THEN 'i쌐xnⅼD' ELSE rt1.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN 'i쌐xnⅼD' ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((CASE WHEN rt1.c1 THEN 'i쌐xnⅼD' ELSE rt1.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN 'i쌐xnⅼD' ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((CASE WHEN rt1.c1 THEN 'i쌐xnⅼD' ELSE rt1.c2 END IN ()));
SELECT * FROM rt1, rt0, v0 WHERE (((rt1.c3) NOT BETWEEN (rt0.c2) AND (1.304248718E9)) COLLATE RTRIM) ORDER BY ((rt1.c3) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt0.c2) AND (1.304248718E9)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c3) IS FALSE) ASC);
SELECT * FROM rt1, rt0, v0 WHERE (((rt1.c3) NOT BETWEEN (rt0.c2) AND (1.304248718E9)) COLLATE RTRIM) ORDER BY ((rt1.c3) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt0.c2) AND (1.304248718E9)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c3) IS FALSE) ASC);
SELECT * FROM rt1, rt0, v0 WHERE (((rt1.c3) NOT BETWEEN (rt0.c2) AND (1.304248718E9)) COLLATE RTRIM) ORDER BY ((rt1.c3) IS FALSE) ASC;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((((rt0.c1)LIKE(rt0.c0)) IN (LOWER(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)LIKE(rt0.c0)) IN (LOWER(rt1.c2)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((((rt0.c1)LIKE(rt0.c0)) IN (LOWER(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)LIKE(rt0.c0)) IN (LOWER(rt1.c2)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((((rt0.c1)LIKE(rt0.c0)) IN (LOWER(rt1.c2))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1))) NOT NULL)) ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1))) NOT NULL)) ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1))) NOT NULL)) ORDER BY ((rt0.c1) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt1.c4 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((0.1211865876569238 IN ())))) ORDER BY rt1.c1 ASC, ((((~ (NULL)), (((v0.c2, rt1.c2, rt1.c1)) BETWEEN ((v0.c2, rt1.c2, rt1.c5)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((((((((((((v0.c0)AND(rt1.c3)))OR(v0.c2)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c5)))AND(''))))<(((v0.c0 IN (rt0.c0, rt0.c1)), (NOT (rt1.c4)), (((rt1.c4))<>((1595425899))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((0.1211865876569238 IN ())))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt1.c4 ORDER BY rt1.c1 ASC, ((((~ (NULL)), (((v0.c2, rt1.c2, rt1.c1)) BETWEEN ((v0.c2, rt1.c2, rt1.c5)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((((((((((((v0.c0)AND(rt1.c3)))OR(v0.c2)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c5)))AND(''))))<(((v0.c0 IN (rt0.c0, rt0.c1)), (NOT (rt1.c4)), (((rt1.c4))!=((1595425899)))))));
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt1.c4 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((0.1211865876569238 IN ())))) ORDER BY rt1.c1 ASC, ((((~ (NULL)), (((v0.c2, rt1.c2, rt1.c1)) BETWEEN ((v0.c2, rt1.c2, rt1.c5)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((((((((((((v0.c0)AND(rt1.c3)))OR(v0.c2)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c5)))AND(''))))<(((v0.c0 IN (rt0.c0, rt0.c1)), (NOT (rt1.c4)), (((rt1.c4))<>((1595425899))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((0.1211865876569238 IN ())))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt1.c4 ORDER BY rt1.c1 ASC, ((((~ (NULL)), (((v0.c2, rt1.c2, rt1.c1)) BETWEEN ((v0.c2, rt1.c2, rt1.c5)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((((((((((((v0.c0)AND(rt1.c3)))OR(v0.c2)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c5)))AND(''))))<(((v0.c0 IN (rt0.c0, rt0.c1)), (NOT (rt1.c4)), (((rt1.c4))!=((1595425899)))))));
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt1.c4 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((0.1211865876569238 IN ())))) ORDER BY rt1.c1 ASC, ((((~ (NULL)), (((v0.c2, rt1.c2, rt1.c1)) BETWEEN ((v0.c2, rt1.c2, rt1.c5)) AND ((rt1.c0, rt1.c0, rt1.c2))), ((((((((((((v0.c0)AND(rt1.c3)))OR(v0.c2)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c5)))AND(''))))<(((v0.c0 IN (rt0.c0, rt0.c1)), (NOT (rt1.c4)), (((rt1.c4))<>((1595425899))))));
SELECT * FROM rt0, rt1, v0 WHERE (CAST((+ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (CAST((+ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (CAST((+ (rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN (CAST(v0.c1 AS BLOB)) AND (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (CASE rt0.c2  WHEN NULL THEN v0.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN v0 ON NULLIF(DISTINCT CAST(rt0.c2 AS INTEGER), ((rt0.c0) NOT BETWEEN (rt1.c0) AND (v0.c2))) WHERE ((((NOT (rt1.c5)))!=(((((((((0.2694874694321412)OR(rt1.c3)))AND(rt1.c0)))OR(v0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c5)))<>(((((((((0.2694874694321412)OR(rt1.c3)))AND(rt1.c0)))OR(v0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (CASE rt0.c2  WHEN NULL THEN v0.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN v0 ON NULLIF(DISTINCT CAST(rt0.c2 AS INTEGER), ((rt0.c0) NOT BETWEEN (rt1.c0) AND (v0.c2))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (CASE rt0.c2  WHEN NULL THEN v0.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN v0 ON NULLIF(DISTINCT CAST(rt0.c2 AS INTEGER), ((rt0.c0) NOT BETWEEN (rt1.c0) AND (v0.c2))) WHERE ((((NOT (rt1.c5)))!=(((((((((0.2694874694321412)OR(rt1.c3)))AND(rt1.c0)))OR(v0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c5)))<>(((((((((0.2694874694321412)OR(rt1.c3)))AND(rt1.c0)))OR(v0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (CASE rt0.c2  WHEN NULL THEN v0.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN v0 ON NULLIF(DISTINCT CAST(rt0.c2 AS INTEGER), ((rt0.c0) NOT BETWEEN (rt1.c0) AND (v0.c2))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (CASE rt0.c2  WHEN NULL THEN v0.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN v0 ON NULLIF(DISTINCT CAST(rt0.c2 AS INTEGER), ((rt0.c0) NOT BETWEEN (rt1.c0) AND (v0.c2))) WHERE ((((NOT (rt1.c5)))!=(((((((((0.2694874694321412)OR(rt1.c3)))AND(rt1.c0)))OR(v0.c2)))OR(rt0.c1)))));
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((NOT (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((NOT (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE ((NOT (CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt1.c1, v0.c1, rt0.c1, rt1.c5, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('', rt1.c4, rt1.c1, rt1.c2, rt1.c4, rt0.c0, v0.c0)) AND ((rt1.c1, rt1.c5, rt1.c0, rt0.c2, rt1.c4, rt1.c3, rt0.c2)))  WHEN CASE rt1.c1  WHEN v0.c2 THEN rt0.c0 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c1)) ELSE ((rt1.c5)||(rt0.c0)) END CROSS JOIN rt1 ON (~ ('')) WHERE ((((rt0.c1)) NOT BETWEEN ((((v0.c2)+(0.9298129878458944)))) AND (((v0.c0 IN (rt1.c4)))))) ORDER BY (((rt1.c3 IN ())) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((v0.c2)+(0.9298129878458944)))) AND (((v0.c0 IN (rt1.c4)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt1.c1, v0.c1, rt0.c1, rt1.c5, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('', rt1.c4, rt1.c1, rt1.c2, rt1.c4, rt0.c0, v0.c0)) AND ((rt1.c1, rt1.c5, rt1.c0, rt0.c2, rt1.c4, rt1.c3, rt0.c2)))  WHEN CASE rt1.c1  WHEN v0.c2 THEN rt0.c0 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c1)) ELSE ((rt1.c5)||(rt0.c0)) END CROSS JOIN rt1 ON (~ ('')) ORDER BY (((rt1.c3 IN ())) ISNULL) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt1.c1, v0.c1, rt0.c1, rt1.c5, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('', rt1.c4, rt1.c1, rt1.c2, rt1.c4, rt0.c0, v0.c0)) AND ((rt1.c1, rt1.c5, rt1.c0, rt0.c2, rt1.c4, rt1.c3, rt0.c2)))  WHEN CASE rt1.c1  WHEN v0.c2 THEN rt0.c0 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c1)) ELSE ((rt1.c5)||(rt0.c0)) END CROSS JOIN rt1 ON (~ ('')) WHERE ((((rt0.c1)) NOT BETWEEN ((((v0.c2)+(0.9298129878458944)))) AND (((v0.c0 IN (rt1.c4)))))) ORDER BY (((rt1.c3 IN ())) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((v0.c2)+(0.9298129878458944)))) AND (((v0.c0 IN (rt1.c4)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE (((rt1.c1, v0.c1, rt0.c1, rt1.c5, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (('', rt1.c4, rt1.c1, rt1.c2, rt1.c4, rt0.c0, v0.c0)) AND ((rt1.c1, rt1.c5, rt1.c0, rt0.c2, rt1.c4, rt1.c3, rt0.c2)))  WHEN CASE rt1.c1  WHEN v0.c2 THEN rt0.c0 END THEN ((((rt1.c4)OR(rt1.c2)))AND(rt1.c1)) ELSE ((rt1.c5)||(rt0.c0)) END CROSS JOIN rt1 ON (~ ('')) ORDER BY (((rt1.c3 IN ())) ISNULL) ASC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN rt1.c0 THEN rt0.c1 END)*(((rt0.c2) ISNULL))) INNER JOIN rt0 ON ((((rt1.c4) ISNULL)) NOT NULL) WHERE ((((v0.c1 IN (rt1.c5)))-(('' IN ())))) ORDER BY ((rt1.c4)||(rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (rt1.c5)))-(('' IN ())))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN rt1.c0 THEN rt0.c1 END)*(((rt0.c2) ISNULL))) INNER JOIN rt0 ON ((((rt1.c4) ISNULL)) NOT NULL) ORDER BY ((rt1.c4)||(rt1.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN rt1.c0 THEN rt0.c1 END)*(((rt0.c2) ISNULL))) INNER JOIN rt0 ON ((((rt1.c4) ISNULL)) NOT NULL) WHERE ((((v0.c1 IN (rt1.c5)))-(('' IN ())))) ORDER BY ((rt1.c4)||(rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (rt1.c5)))-(('' IN ())))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((CASE WHEN rt1.c0 THEN rt0.c1 END)*(((rt0.c2) ISNULL))) INNER JOIN rt0 ON ((((rt1.c4) ISNULL)) NOT NULL) ORDER BY ((rt1.c4)||(rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c5)/(rt1.c5)))*(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((rt1.c1)>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)/(rt1.c5)))*(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c1)>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c5)/(rt1.c5)))*(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((rt1.c1)>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)/(rt1.c5)))*(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c1)>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c5)/(rt1.c5)))*(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((rt1.c1)>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0)>(rt0.c2)))) WHERE (((((v0.c2)AND(NULL COLLATE RTRIM)))OR(highlight(v0.c1, v0.c0, v0.c1, v0.c2)))) ORDER BY (((rt0.c2 IN ()))GLOB(((((v0.c0)OR(v0.c2)))OR(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND(NULL COLLATE RTRIM)))OR(highlight(v0.c1, v0.c0, v0.c1, v0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0)>(rt0.c2)))) ORDER BY (((rt0.c2 IN ()))GLOB(((((v0.c0)OR(v0.c2)))OR(v0.c2)))) ASC);
SELECT * FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0)>(rt0.c2)))) WHERE (((((v0.c2)AND(NULL COLLATE RTRIM)))OR(highlight(v0.c1, v0.c0, v0.c1, v0.c2)))) ORDER BY (((rt0.c2 IN ()))GLOB(((((v0.c0)OR(v0.c2)))OR(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)AND(NULL COLLATE RTRIM)))OR(highlight(v0.c1, v0.c0, v0.c1, v0.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0)>(rt0.c2)))) ORDER BY (((rt0.c2 IN ()))GLOB(((((v0.c0)OR(v0.c2)))OR(v0.c2)))) ASC);
SELECT * FROM rt0 WHERE (LIKELIHOOD((~ (rt0.c0)), 0.8799799795036068)) ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((~ (rt0.c0)), 0.8799799795036068)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) END);
SELECT * FROM rt0 WHERE (LIKELIHOOD((~ (rt0.c0)), 0.8799799795036068)) ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((~ (rt0.c0)), 0.8799799795036068)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) END);
SELECT * FROM rt0 WHERE (LIKELIHOOD((~ (rt0.c0)), 0.8799799795036068)) ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0)))OR(((rt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))OR(((rt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0)))OR(((rt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))OR(((rt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(rt0.c0)))OR(((rt0.c0)*(rt0.c2)))));
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN v0.c2 END)) AND ((((v0.c0) IS TRUE))))) ORDER BY CAST((~ (v0.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN v0.c2 END)) AND ((((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((~ (v0.c2)) AS NUMERIC) DESC);
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN v0.c2 END)) AND ((((v0.c0) IS TRUE))))) ORDER BY CAST((~ (v0.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN v0.c2 END)) AND ((((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((~ (v0.c2)) AS NUMERIC) DESC);
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN v0.c2 END)) AND ((((v0.c0) IS TRUE))))) ORDER BY CAST((~ (v0.c2)) AS NUMERIC) DESC;
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (x'' IN ()) WHERE (((((((((x'1227')OR(((rt0.c2)/(rt0.c2)))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))OR(((v0.c0)GLOB(x'')))))OR((((rt0.c0))=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((x'1227')OR(((rt0.c2)/(rt0.c2)))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))OR(((v0.c0)GLOB(x'')))))OR((((rt0.c0))==((v0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (x'' IN ()));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (x'' IN ()) WHERE (((((((((x'1227')OR(((rt0.c2)/(rt0.c2)))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))OR(((v0.c0)GLOB(x'')))))OR((((rt0.c0))=((v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((x'1227')OR(((rt0.c2)/(rt0.c2)))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))OR(((v0.c0)GLOB(x'')))))OR((((rt0.c0))==((v0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (x'' IN ()));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (x'' IN ()) WHERE (((((((((x'1227')OR(((rt0.c2)/(rt0.c2)))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))OR(((v0.c0)GLOB(x'')))))OR((((rt0.c0))=((v0.c1))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE ((rt0.c2)+(rt1.c0))  WHEN rt0.c1 THEN SQLITE_COMPILEOPTION_GET(rt1.c0) END CROSS JOIN v0 ON (((v0.c1 IN (rt1.c2, rt1.c3)))%((~ (rt1.c0)))) WHERE (((rt0.c1 COLLATE NOCASE)-(IFNULL(DISTINCT rt0.c0, rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)-(IFNULL(DISTINCT rt0.c0, rt1.c5)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE ((rt0.c2)+(rt1.c0))  WHEN rt0.c1 THEN SQLITE_COMPILEOPTION_GET(rt1.c0) END CROSS JOIN v0 ON (((v0.c1 IN (rt1.c2, rt1.c3)))%((~ (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE ((rt0.c2)+(rt1.c0))  WHEN rt0.c1 THEN SQLITE_COMPILEOPTION_GET(rt1.c0) END CROSS JOIN v0 ON (((v0.c1 IN (rt1.c2, rt1.c3)))%((~ (rt1.c0)))) WHERE (((rt0.c1 COLLATE NOCASE)-(IFNULL(DISTINCT rt0.c0, rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)-(IFNULL(DISTINCT rt0.c0, rt1.c5)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE ((rt0.c2)+(rt1.c0))  WHEN rt0.c1 THEN SQLITE_COMPILEOPTION_GET(rt1.c0) END CROSS JOIN v0 ON (((v0.c1 IN (rt1.c2, rt1.c3)))%((~ (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE ((rt0.c2)+(rt1.c0))  WHEN rt0.c1 THEN SQLITE_COMPILEOPTION_GET(rt1.c0) END CROSS JOIN v0 ON (((v0.c1 IN (rt1.c2, rt1.c3)))%((~ (rt1.c0)))) WHERE (((rt0.c1 COLLATE NOCASE)-(IFNULL(DISTINCT rt0.c0, rt1.c5))));
SELECT ALL * FROM v0 WHERE ('a>') ORDER BY (~ (v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (('a>') IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c1 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE ('a>') ORDER BY (~ (v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (('a>') IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c1 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE ('a>') ORDER BY (~ (v0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))) ORDER BY LOWER(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LOWER(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))) ORDER BY LOWER(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LOWER(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c2)))))) ORDER BY LOWER(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END) ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c1 IN ())) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (rt1.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (rt1.c0 IN ()) END  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c1 IN ())) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (rt1.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (rt1.c0 IN ()) END  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c1 IN ())) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (rt1.c0 IN ()) END  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC));
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC));
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c0, '-684738057', rt1.c3)) NOT BETWEEN ((((v0.c0)<<(rt1.c2)), ((v0.c2)>>(rt1.c4)), x'c780')) AND ((LIKELIHOOD(rt1.c4, 0.8039880936918748), v0.c1, ((v0.c2) IS TRUE))))) ORDER BY ((((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c1))) NOTNULL)  NULLS FIRST, (- (CASE v0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, '-684738057', rt1.c3)) NOT BETWEEN ((((v0.c0)<<(rt1.c2)), ((v0.c2)>>(rt1.c4)), x'c780')) AND ((LIKELIHOOD(rt1.c4, 0.8039880936918748), v0.c1, ((v0.c2) IS TRUE))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c1))) NOTNULL)  NULLS FIRST, (- (CASE v0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c0, '-684738057', rt1.c3)) NOT BETWEEN ((((v0.c0)<<(rt1.c2)), ((v0.c2)>>(rt1.c4)), x'c780')) AND ((LIKELIHOOD(rt1.c4, 0.8039880936918748), v0.c1, ((v0.c2) IS TRUE))))) ORDER BY ((((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c1))) NOTNULL)  NULLS FIRST, (- (CASE v0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, '-684738057', rt1.c3)) NOT BETWEEN ((((v0.c0)<<(rt1.c2)), ((v0.c2)>>(rt1.c4)), x'c780')) AND ((LIKELIHOOD(rt1.c4, 0.8039880936918748), v0.c1, ((v0.c2) IS TRUE))))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c1))) NOTNULL)  NULLS FIRST, (- (CASE v0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((rt1.c0, '-684738057', rt1.c3)) NOT BETWEEN ((((v0.c0)<<(rt1.c2)), ((v0.c2)>>(rt1.c4)), x'c780')) AND ((LIKELIHOOD(rt1.c4, 0.8039880936918748), v0.c1, ((v0.c2) IS TRUE))))) ORDER BY ((((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c1))) NOTNULL)  NULLS FIRST, (- (CASE v0.c0  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c2))) BETWEEN ((('') NOT NULL)) AND (CASE rt0.c2  WHEN v0.c2 THEN NULL WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY MIN(v0.c0, CAST(rt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(rt0.c2))) BETWEEN ((('') NOT NULL)) AND (CASE rt0.c2  WHEN v0.c2 THEN NULL WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY MIN(v0.c0, CAST(rt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c2))) BETWEEN ((('') NOT NULL)) AND (CASE rt0.c2  WHEN v0.c2 THEN NULL WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY MIN(v0.c0, CAST(rt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(rt0.c2))) BETWEEN ((('') NOT NULL)) AND (CASE rt0.c2  WHEN v0.c2 THEN NULL WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY MIN(v0.c0, CAST(rt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)OR(rt0.c2))) BETWEEN ((('') NOT NULL)) AND (CASE rt0.c2  WHEN v0.c2 THEN NULL WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY MIN(v0.c0, CAST(rt0.c0 AS INTEGER));
SELECT ALL * FROM rt0, v0, rt1 WHERE (json_patch(((rt1.c0)<(rt0.c1)), ABS(DISTINCT rt1.c1))) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c1 END) BETWEEN ((((rt0.c0, rt1.c5, v0.c1)) NOT BETWEEN ((rt1.c1, rt1.c5, v0.c2)) AND ((v0.c0, rt1.c0, rt1.c1)))) AND (QUOTE(v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((json_patch(((rt1.c0)<(rt0.c1)), ABS(DISTINCT rt1.c1))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c1 END) BETWEEN ((((rt0.c0, rt1.c5, v0.c1)) NOT BETWEEN ((rt1.c1, rt1.c5, v0.c2)) AND ((v0.c0, rt1.c0, rt1.c1)))) AND (QUOTE(v0.c1))) ASC);
SELECT ALL * FROM rt0, v0, rt1 WHERE (json_patch(((rt1.c0)<(rt0.c1)), ABS(DISTINCT rt1.c1))) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c1 END) BETWEEN ((((rt0.c0, rt1.c5, v0.c1)) NOT BETWEEN ((rt1.c1, rt1.c5, v0.c2)) AND ((v0.c0, rt1.c0, rt1.c1)))) AND (QUOTE(v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((json_patch(((rt1.c0)<(rt0.c1)), ABS(DISTINCT rt1.c1))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c1 END) BETWEEN ((((rt0.c0, rt1.c5, v0.c1)) NOT BETWEEN ((rt1.c1, rt1.c5, v0.c2)) AND ((v0.c0, rt1.c0, rt1.c1)))) AND (QUOTE(v0.c1))) ASC);
SELECT ALL * FROM rt0, v0, rt1 WHERE (json_patch(((rt1.c0)<(rt0.c1)), ABS(DISTINCT rt1.c1))) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c1 END) BETWEEN ((((rt0.c0, rt1.c5, v0.c1)) NOT BETWEEN ((rt1.c1, rt1.c5, v0.c2)) AND ((v0.c0, rt1.c0, rt1.c1)))) AND (QUOTE(v0.c1))) ASC;
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON CASE WHEN (v0.c0 IN ()) THEN (((0.631982285173552, v0.c1, x'', rt1.c0, NULL)) NOT BETWEEN ((rt1.c2, rt0.c0, x'29e0', rt1.c4, rt1.c2)) AND ((rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c2))) WHEN UPPER(x'') THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c4)) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c2 ELSE rt0.c1 END ELSE (rt1.c2 IN ()) END WHERE ((((rt1.c4)) BETWEEN (((rt1.c3 IN (rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN (((rt1.c3 IN (rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2)))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON CASE WHEN (v0.c0 IN ()) THEN (((0.631982285173552, v0.c1, x'', rt1.c0, NULL)) NOT BETWEEN ((rt1.c2, rt0.c0, x'29e0', rt1.c4, rt1.c2)) AND ((rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c2))) WHEN UPPER(x'') THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c4)) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c2 ELSE rt0.c1 END ELSE (rt1.c2 IN ()) END);
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON CASE WHEN (v0.c0 IN ()) THEN (((0.631982285173552, v0.c1, x'', rt1.c0, NULL)) NOT BETWEEN ((rt1.c2, rt0.c0, x'29e0', rt1.c4, rt1.c2)) AND ((rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c2))) WHEN UPPER(x'') THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c4)) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c2 ELSE rt0.c1 END ELSE (rt1.c2 IN ()) END WHERE ((((rt1.c4)) BETWEEN (((rt1.c3 IN (rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN (((rt1.c3 IN (rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2)))))) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON CASE WHEN (v0.c0 IN ()) THEN (((0.631982285173552, v0.c1, x'', rt1.c0, NULL)) NOT BETWEEN ((rt1.c2, rt0.c0, x'29e0', rt1.c4, rt1.c2)) AND ((rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c2))) WHEN UPPER(x'') THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c4)) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c2 ELSE rt0.c1 END ELSE (rt1.c2 IN ()) END);
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON CASE WHEN (v0.c0 IN ()) THEN (((0.631982285173552, v0.c1, x'', rt1.c0, NULL)) NOT BETWEEN ((rt1.c2, rt0.c0, x'29e0', rt1.c4, rt1.c2)) AND ((rt0.c1, rt0.c2, rt1.c0, rt0.c0, rt0.c2))) WHEN UPPER(x'') THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (rt1.c4)) WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN v0.c1 THEN v0.c2 ELSE rt0.c1 END ELSE (rt1.c2 IN ()) END WHERE ((((rt1.c4)) BETWEEN (((rt1.c3 IN (rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2))))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (NULLIF(rt0.c1, rt0.c0)))) ORDER BY CAST(rt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (NULLIF(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (NULLIF(rt0.c1, rt0.c0)))) ORDER BY CAST(rt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (NULLIF(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c1 COLLATE BINARY) AND (NULLIF(rt0.c1, rt0.c0)))) ORDER BY CAST(rt0.c0 AS INTEGER)  NULLS FIRST;
SELECT * FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (((rt1.c2) IS TRUE)))) ORDER BY (((~ (rt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((~ (rt0.c0))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (((rt1.c2) IS TRUE)))) ORDER BY (((~ (rt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((~ (rt0.c0))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((- (((rt1.c2) IS TRUE)))) ORDER BY (((~ (rt0.c0))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt1.c0)) BETWEEN ((v0.c2)) AND ((rt1.c3))) IN ((rt0.c1 IN ())))) ORDER BY '[]';
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)) BETWEEN ((v0.c2)) AND ((rt1.c3))) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY '[]');
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt1.c0)) BETWEEN ((v0.c2)) AND ((rt1.c3))) IN ((rt0.c1 IN ())))) ORDER BY '[]';
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)) BETWEEN ((v0.c2)) AND ((rt1.c3))) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY '[]');
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt1.c0)) BETWEEN ((v0.c2)) AND ((rt1.c3))) IN ((rt0.c1 IN ())))) ORDER BY '[]';
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((+ (JULIANDAY(rt1.c1, rt1.c3, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (JULIANDAY(rt1.c1, rt1.c3, v0.c1)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((+ (JULIANDAY(rt1.c1, rt1.c3, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (JULIANDAY(rt1.c1, rt1.c3, v0.c1)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((+ (JULIANDAY(rt1.c1, rt1.c3, v0.c1))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c1)&(rt0.c0)))))OR(x'ea5f'))) ORDER BY (+ (((rt0.c0)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(((rt0.c1)&(rt0.c0)))))OR(x'ea5f'))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c0)>=(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c1)&(rt0.c0)))))OR(x'ea5f'))) ORDER BY (+ (((rt0.c0)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(((rt0.c1)&(rt0.c0)))))OR(x'ea5f'))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c0)>=(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c1)&(rt0.c0)))))OR(x'ea5f'))) ORDER BY (+ (((rt0.c0)>=(rt0.c2))));
SELECT * FROM rt0, v0, rt1 WHERE (CAST(((rt0.c1)-(rt1.c0)) AS REAL)) ORDER BY CASE WHEN ((v0.c2) IS TRUE) THEN v0.c1 COLLATE NOCASE ELSE (rt1.c4 IN (rt1.c5, rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)-(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CASE WHEN ((v0.c2) IS TRUE) THEN v0.c1 COLLATE NOCASE ELSE (rt1.c4 IN (rt1.c5, rt0.c0)) END);
SELECT * FROM rt0, v0, rt1 WHERE (CAST(((rt0.c1)-(rt1.c0)) AS REAL)) ORDER BY CASE WHEN ((v0.c2) IS TRUE) THEN v0.c1 COLLATE NOCASE ELSE (rt1.c4 IN (rt1.c5, rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)-(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CASE WHEN ((v0.c2) IS TRUE) THEN v0.c1 COLLATE NOCASE ELSE (rt1.c4 IN (rt1.c5, rt0.c0)) END);
SELECT * FROM rt0, v0, rt1 WHERE (CAST(((rt0.c1)-(rt1.c0)) AS REAL)) ORDER BY CASE WHEN ((v0.c2) IS TRUE) THEN v0.c1 COLLATE NOCASE ELSE (rt1.c4 IN (rt1.c5, rt0.c0)) END;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c4)) THEN (+ (rt1.c4)) END) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c4)) THEN (+ (rt1.c4)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c2 AS REAL) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c4)) THEN (+ (rt1.c4)) END) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c4)) THEN (+ (rt1.c4)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c2 AS REAL) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c4)) THEN (+ (rt1.c4)) END) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM rt0, v0, rt1 WHERE (((((rt1.c4)<<(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)<<(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (((((rt1.c4)<<(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)<<(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (((((rt1.c4)<<(rt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE BINARY)AND(CAST(0.9813469042682587 AS REAL))))AND(CAST(v0.c2 AS TEXT)))) ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN x'' END  NULLS LAST, CAST(((v0.c1)<(0.2312740879424764)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 COLLATE BINARY)AND(CAST(0.9813469042682587 AS REAL))))AND(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN x'' END  NULLS LAST, CAST(((v0.c1)<(0.2312740879424764)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE BINARY)AND(CAST(0.9813469042682587 AS REAL))))AND(CAST(v0.c2 AS TEXT)))) ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN x'' END  NULLS LAST, CAST(((v0.c1)<(0.2312740879424764)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2 COLLATE BINARY)AND(CAST(0.9813469042682587 AS REAL))))AND(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN x'' END  NULLS LAST, CAST(((v0.c1)<(0.2312740879424764)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2 COLLATE BINARY)AND(CAST(0.9813469042682587 AS REAL))))AND(CAST(v0.c2 AS TEXT)))) ORDER BY CASE WHEN CAST(v0.c0 AS REAL) THEN x'' END  NULLS LAST, CAST(((v0.c1)<(0.2312740879424764)) AS INTEGER) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c1))<>(('')))))<=((LIKELY(DISTINCT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1))<>(('')))))<=((LIKELY(DISTINCT NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c1))<>(('')))))<=((LIKELY(DISTINCT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1))<>(('')))))<=((LIKELY(DISTINCT NULL))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((v0.c1))<>(('')))))<=((LIKELY(DISTINCT NULL)))));
SELECT * FROM rt1, rt0 WHERE (((rt0.c2 COLLATE NOCASE)-(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)-(rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt0.c2 COLLATE NOCASE)-(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)-(rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt0.c2 COLLATE NOCASE)-(rt1.c1)));
SELECT ALL * FROM rt1 WHERE (((rt1.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c3 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((ABS(rt0.c0)) BETWEEN (((rt1.c1) NOTNULL)) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0)) BETWEEN (((rt1.c1) NOTNULL)) AND (rt1.c3))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((ABS(rt0.c0)) BETWEEN (((rt1.c1) NOTNULL)) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0)) BETWEEN (((rt1.c1) NOTNULL)) AND (rt1.c3))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((ABS(rt0.c0)) BETWEEN (((rt1.c1) NOTNULL)) AND (rt1.c3)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c1)))>=(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c1)))>=(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c1)))>=(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c1)))>=(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c1)))>=(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ORDER BY ((((0.11472964673858166)AND(rt0.c1)))AND(v0.c1)) COLLATE RTRIM, (((rt0.c1 IN ()))<(((0.33061460651488994) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((0.11472964673858166)AND(rt0.c1)))AND(v0.c1)) COLLATE RTRIM, (((rt0.c1 IN ()))<(((0.33061460651488994) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ORDER BY ((((0.11472964673858166)AND(rt0.c1)))AND(v0.c1)) COLLATE RTRIM, (((rt0.c1 IN ()))<(((0.33061460651488994) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((0.11472964673858166)AND(rt0.c1)))AND(v0.c1)) COLLATE RTRIM, (((rt0.c1 IN ()))<(((0.33061460651488994) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ORDER BY ((((0.11472964673858166)AND(rt0.c1)))AND(v0.c1)) COLLATE RTRIM, (((rt0.c1 IN ()))<(((0.33061460651488994) BETWEEN (v0.c2) AND (v0.c0))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE RTRIM) ORDER BY ((((rt1.c1)OR(rt1.c3))) NOT BETWEEN (((rt1.c0)<=(rt1.c5))) AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)OR(rt1.c3))) NOT BETWEEN (((rt1.c0)<=(rt1.c5))) AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c5)))));
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE RTRIM) ORDER BY ((((rt1.c1)OR(rt1.c3))) NOT BETWEEN (((rt1.c0)<=(rt1.c5))) AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)OR(rt1.c3))) NOT BETWEEN (((rt1.c0)<=(rt1.c5))) AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c5)))));
SELECT * FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE RTRIM) ORDER BY ((((rt1.c1)OR(rt1.c3))) NOT BETWEEN (((rt1.c0)<=(rt1.c5))) AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c5))));
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((((rt1.c4) NOT BETWEEN (v0.c0) AND (rt1.c4))))==((((rt1.c3)>>(v0.c2)))))) ORDER BY 0.5740184121739075 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4) NOT BETWEEN (v0.c0) AND (rt1.c4))))=((((rt1.c3)>>(v0.c2)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY 0.5740184121739075 DESC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((((rt1.c4) NOT BETWEEN (v0.c0) AND (rt1.c4))))==((((rt1.c3)>>(v0.c2)))))) ORDER BY 0.5740184121739075 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4) NOT BETWEEN (v0.c0) AND (rt1.c4))))=((((rt1.c3)>>(v0.c2)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY 0.5740184121739075 DESC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((((rt1.c4) NOT BETWEEN (v0.c0) AND (rt1.c4))))==((((rt1.c3)>>(v0.c2)))))) ORDER BY 0.5740184121739075 DESC  NULLS LAST;
SELECT * FROM rt1, v0 WHERE (((LOWER(v0.c1))>(((v0.c1)+(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(v0.c1))>(((v0.c1)+(rt1.c2))))) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (((LOWER(v0.c1))>(((v0.c1)+(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(v0.c1))>(((v0.c1)+(rt1.c2))))) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (((LOWER(v0.c1))>(((v0.c1)+(rt1.c2)))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN ((((((((v0.c1)AND(x'')))AND(v0.c0)))OR(v0.c1)))AND(v0.c0)) WHEN UNLIKELY(DISTINCT v0.c0) THEN CAST(NULL AS BLOB) WHEN ((v0.c0)||(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))) END) ORDER BY ((((v0.c1)%(v0.c1)))<>(((v0.c2) BETWEEN ('콝e') AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN ((((((((v0.c1)AND(x'')))AND(v0.c0)))OR(v0.c1)))AND(v0.c0)) WHEN UNLIKELY(DISTINCT v0.c0) THEN CAST(NULL AS BLOB) WHEN ((v0.c0)||(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)%(v0.c1)))!=(((v0.c2) BETWEEN ('콝e') AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN ((((((((v0.c1)AND(x'')))AND(v0.c0)))OR(v0.c1)))AND(v0.c0)) WHEN UNLIKELY(DISTINCT v0.c0) THEN CAST(NULL AS BLOB) WHEN ((v0.c0)||(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))) END) ORDER BY ((((v0.c1)%(v0.c1)))<>(((v0.c2) BETWEEN ('콝e') AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN ((((((((v0.c1)AND(x'')))AND(v0.c0)))OR(v0.c1)))AND(v0.c0)) WHEN UNLIKELY(DISTINCT v0.c0) THEN CAST(NULL AS BLOB) WHEN ((v0.c0)||(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)%(v0.c1)))!=(((v0.c2) BETWEEN ('콝e') AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN ((((((((v0.c1)AND(x'')))AND(v0.c0)))OR(v0.c1)))AND(v0.c0)) WHEN UNLIKELY(DISTINCT v0.c0) THEN CAST(NULL AS BLOB) WHEN ((v0.c0)||(v0.c0)) THEN (((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))) END) ORDER BY ((((v0.c1)%(v0.c1)))<>(((v0.c2) BETWEEN ('콝e') AND (v0.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c2)OR(0.6875749959470365)))OR(rt1.c1)))OR(rt1.c1)))OR(((rt1.c3)%(rt1.c1)))))AND(rt1.c0 COLLATE BINARY)))AND((rt1.c3 IN ())))) ORDER BY ((0.050487366766581054) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c2)OR(0.6875749959470365)))OR(rt1.c1)))OR(rt1.c1)))OR(((rt1.c3)%(rt1.c1)))))AND(rt1.c0 COLLATE BINARY)))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((0.050487366766581054) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c2)OR(0.6875749959470365)))OR(rt1.c1)))OR(rt1.c1)))OR(((rt1.c3)%(rt1.c1)))))AND(rt1.c0 COLLATE BINARY)))AND((rt1.c3 IN ())))) ORDER BY ((0.050487366766581054) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c2)OR(0.6875749959470365)))OR(rt1.c1)))OR(rt1.c1)))OR(((rt1.c3)%(rt1.c1)))))AND(rt1.c0 COLLATE BINARY)))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((0.050487366766581054) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c2)OR(0.6875749959470365)))OR(rt1.c1)))OR(rt1.c1)))OR(((rt1.c3)%(rt1.c1)))))AND(rt1.c0 COLLATE BINARY)))AND((rt1.c3 IN ())))) ORDER BY ((0.050487366766581054) IS FALSE)  NULLS FIRST;
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt1.c5) NOTNULL)) WHERE (((((0.5178256234751218)>=('-367584340'))) NOT NULL)) ORDER BY ((CASE v0.c2  WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN '<?E' END)IS((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5178256234751218)>=('-367584340'))) NOT NULL)) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt1.c5) NOTNULL)) ORDER BY ((CASE v0.c2  WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN '<?E' END)IS((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3))))) ASC  NULLS LAST);
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt1.c5) NOTNULL)) WHERE (((((0.5178256234751218)>=('-367584340'))) NOT NULL)) ORDER BY ((CASE v0.c2  WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN '<?E' END)IS((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.5178256234751218)>=('-367584340'))) NOT NULL)) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt1.c5) NOTNULL)) ORDER BY ((CASE v0.c2  WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN '<?E' END)IS((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3))))) ASC  NULLS LAST);
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt1.c5) NOTNULL)) WHERE (((((0.5178256234751218)>=('-367584340'))) NOT NULL)) ORDER BY ((CASE v0.c2  WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c0 THEN '<?E' END)IS((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt1.c3))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<=(rt1.c0))) NOT NULL)) ORDER BY CASE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((((rt1.c4)OR(rt1.c4)))AND(rt1.c4)) THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<=(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((((rt1.c4)OR(rt1.c4)))AND(rt1.c4)) THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<=(rt1.c0))) NOT NULL)) ORDER BY CASE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((((rt1.c4)OR(rt1.c4)))AND(rt1.c4)) THEN NULL END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<=(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((((rt1.c4)OR(rt1.c4)))AND(rt1.c4)) THEN NULL END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<=(rt1.c0))) NOT NULL)) ORDER BY CASE ((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((((rt1.c4)OR(rt1.c4)))AND(rt1.c4)) THEN NULL END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((NOT (rt0.c0)))LIKE(v0.c0 COLLATE NOCASE))) ORDER BY ((rt1.c4) BETWEEN ((- (rt0.c1))) AND (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))LIKE(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c4) BETWEEN ((- (rt0.c1))) AND (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((NOT (rt0.c0)))LIKE(v0.c0 COLLATE NOCASE))) ORDER BY ((rt1.c4) BETWEEN ((- (rt0.c1))) AND (v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))LIKE(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c4) BETWEEN ((- (rt0.c1))) AND (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((NOT (rt0.c0)))LIKE(v0.c0 COLLATE NOCASE))) ORDER BY ((rt1.c4) BETWEEN ((- (rt0.c1))) AND (v0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(CAST(rt1.c1 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM v0, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(CAST(rt1.c1 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM v0, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(CAST(rt1.c1 AS INTEGER) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((v0.c1 COLLATE BINARY)|(((((rt0.c1)OR(v0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE BINARY)|(((((rt0.c1)OR(v0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((v0.c1 COLLATE BINARY)|(((((rt0.c1)OR(v0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c1 COLLATE BINARY)|(((((rt0.c1)OR(v0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((v0.c1 COLLATE BINARY)|(((((rt0.c1)OR(v0.c1)))OR(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN (TRIM(DISTINCT x'', rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT NULL) IN (TRIM(DISTINCT x'', rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN (TRIM(DISTINCT x'', rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT NULL) IN (TRIM(DISTINCT x'', rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN (TRIM(DISTINCT x'', rt0.c2))));
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((((rt1.c2)-(rt0.c0)))*((((rt1.c5))<=((x'4c3d069a'))))) WHERE (rt0.c1) ORDER BY ((((-1293961858)AND(((rt1.c5)<=(NULL)))))AND(0.8697928367823985))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((((rt1.c2)-(rt0.c0)))*((((rt1.c5))<=((x'4c3d069a'))))) ORDER BY ((((-1293961858)AND(((rt1.c5)<=(NULL)))))AND(0.8697928367823985))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOTNULL)))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((((rt1.c2)-(rt0.c0)))*((((rt1.c5))<=((x'4c3d069a'))))) WHERE (rt0.c1) ORDER BY ((((-1293961858)AND(((rt1.c5)<=(NULL)))))AND(0.8697928367823985))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((((rt1.c2)-(rt0.c0)))*((((rt1.c5))<=((x'4c3d069a'))))) ORDER BY ((((-1293961858)AND(((rt1.c5)<=(NULL)))))AND(0.8697928367823985))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOTNULL)))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN v0 ON ((((rt1.c2)-(rt0.c0)))*((((rt1.c5))<=((x'4c3d069a'))))) WHERE (rt0.c1) ORDER BY ((((-1293961858)AND(((rt1.c5)<=(NULL)))))AND(0.8697928367823985))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOTNULL)))) DESC;
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c0 IN ()))=(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))==(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c0 IN ()))=(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))==(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c0 IN ()))=(CAST(rt1.c2 AS TEXT))));
SELECT ALL * FROM rt0, v0 WHERE (v0.c0) ORDER BY TRIM(CAST(rt0.c0 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(CAST(rt0.c0 AS INTEGER)) DESC);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0) ORDER BY TRIM(CAST(rt0.c0 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM(CAST(rt0.c0 AS INTEGER)) DESC);
SELECT ALL * FROM rt0, v0 WHERE (v0.c0) ORDER BY TRIM(CAST(rt0.c0 AS INTEGER)) DESC;
SELECT COUNT(*) FROM v0, rt1 WHERE (LIKELIHOOD(rt1.c5, 0.3437307505344678)) ORDER BY (('361287833') IS TRUE) ASC, (((rt1.c2)<<(NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt1.c5, 0.3437307505344678)) IS TRUE)  as count FROM v0, rt1 ORDER BY (('361287833') IS TRUE) ASC, (((rt1.c2)<<(NULL)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (LIKELIHOOD(rt1.c5, 0.3437307505344678)) ORDER BY (('361287833') IS TRUE) ASC, (((rt1.c2)<<(NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt1.c5, 0.3437307505344678)) IS TRUE)  as count FROM v0, rt1 ORDER BY (('361287833') IS TRUE) ASC, (((rt1.c2)<<(NULL)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 WHERE (LIKELIHOOD(rt1.c5, 0.3437307505344678)) ORDER BY (('361287833') IS TRUE) ASC, (((rt1.c2)<<(NULL)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0, rt1 NOT INDEXED WHERE ((rt1.c5 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c5 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 NOT INDEXED WHERE ((rt1.c5 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c5 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 NOT INDEXED WHERE ((rt1.c5 COLLATE NOCASE IN ()));
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((HEX(rt0.c0))LIKE((((v0.c0, rt0.c2, rt1.c2)) BETWEEN ((v0.c1, v0.c2, NULL)) AND ((rt0.c1, rt1.c4, rt1.c4))))) WHERE ((((((((((- (rt0.c1)))AND(v0.c1 COLLATE RTRIM)))OR((rt1.c0 IN ()))))AND(rt1.c1)))OR(((rt1.c0) NOT NULL)))) ORDER BY (((0.37363772243173177) ISNULL) IN ((('8022861') NOTNULL), ((0.25687162692999) BETWEEN (rt1.c5) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c1)))AND(v0.c1 COLLATE RTRIM)))OR((rt1.c0 IN ()))))AND(rt1.c1)))OR(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((HEX(rt0.c0))LIKE((((v0.c0, rt0.c2, rt1.c2)) BETWEEN ((v0.c1, v0.c2, NULL)) AND ((rt0.c1, rt1.c4, rt1.c4))))) ORDER BY (((0.37363772243173177) ISNULL) IN ((('8022861') NOTNULL), ((0.25687162692999) BETWEEN (rt1.c5) AND (rt0.c2)))));
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((HEX(rt0.c0))LIKE((((v0.c0, rt0.c2, rt1.c2)) BETWEEN ((v0.c1, v0.c2, NULL)) AND ((rt0.c1, rt1.c4, rt1.c4))))) WHERE ((((((((((- (rt0.c1)))AND(v0.c1 COLLATE RTRIM)))OR((rt1.c0 IN ()))))AND(rt1.c1)))OR(((rt1.c0) NOT NULL)))) ORDER BY (((0.37363772243173177) ISNULL) IN ((('8022861') NOTNULL), ((0.25687162692999) BETWEEN (rt1.c5) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c1)))AND(v0.c1 COLLATE RTRIM)))OR((rt1.c0 IN ()))))AND(rt1.c1)))OR(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((HEX(rt0.c0))LIKE((((v0.c0, rt0.c2, rt1.c2)) BETWEEN ((v0.c1, v0.c2, NULL)) AND ((rt0.c1, rt1.c4, rt1.c4))))) ORDER BY (((0.37363772243173177) ISNULL) IN ((('8022861') NOTNULL), ((0.25687162692999) BETWEEN (rt1.c5) AND (rt0.c2)))));
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((HEX(rt0.c0))LIKE((((v0.c0, rt0.c2, rt1.c2)) BETWEEN ((v0.c1, v0.c2, NULL)) AND ((rt0.c1, rt1.c4, rt1.c4))))) WHERE ((((((((((- (rt0.c1)))AND(v0.c1 COLLATE RTRIM)))OR((rt1.c0 IN ()))))AND(rt1.c1)))OR(((rt1.c0) NOT NULL)))) ORDER BY (((0.37363772243173177) ISNULL) IN ((('8022861') NOTNULL), ((0.25687162692999) BETWEEN (rt1.c5) AND (rt0.c2))));
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c1) BETWEEN (rt0.c1) AND (0X67c851ba)))) ORDER BY CAST(((rt0.c1)&(rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt0.c1) BETWEEN (rt0.c1) AND (0x67c851ba)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)&(rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c1) BETWEEN (rt0.c1) AND (0X67c851ba)))) ORDER BY CAST(((rt0.c1)&(rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt0.c1) BETWEEN (rt0.c1) AND (0x67c851ba)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)&(rt0.c2)) AS NUMERIC)  NULLS LAST);
SELECT * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c1) BETWEEN (rt0.c1) AND (0X67c851ba)))) ORDER BY CAST(((rt0.c1)&(rt0.c2)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((('qE')) NOT BETWEEN ((((((((((1131766451)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) AND ((json_type(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('qE')) NOT BETWEEN ((((((((((1131766451)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) AND ((json_type(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('qE')) NOT BETWEEN ((((((((((1131766451)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) AND ((json_type(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('qE')) NOT BETWEEN ((((((((((1131766451)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) AND ((json_type(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('qE')) NOT BETWEEN ((((((((((1131766451)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) AND ((json_type(rt0.c1)))));
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c3) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c4)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c4)OR(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c3) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c4)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c4)OR(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((rt1.c3) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c4)OR(rt0.c0)))));
SELECT * FROM rt0, rt1, v0 WHERE (-3.6758434E8);
SELECT SUM(count) FROM (SELECT ALL ((-3.6758434E8) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (-3.6758434E8);
SELECT SUM(count) FROM (SELECT ALL ((-3.6758434E8) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (-3.6758434E8);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('*전7+d0Y[l');
SELECT SUM(count) FROM (SELECT (('*전7+d0Y[l') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('*전7+d0Y[l');
SELECT SUM(count) FROM (SELECT (('*전7+d0Y[l') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('*전7+d0Y[l');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt0.c1))) BETWEEN (x'') AND (((x'8f7c') NOT BETWEEN (rt1.c4) AND (rt1.c4)))) FULL OUTER JOIN v0 ON ((((v0.c2) NOT NULL)) BETWEEN (LIKELIHOOD(DISTINCT rt1.c5, 0.07297314438305214)) AND ((('-213997385') BETWEEN (rt1.c2) AND (x'')))) WHERE (((((((v0.c0)OR(v0.c1)))OR(rt1.c4)))<>((rt1.c1 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c1)))OR(rt1.c4)))<>((rt1.c1 IN (v0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt0.c1))) BETWEEN (x'') AND (((x'8f7c') NOT BETWEEN (rt1.c4) AND (rt1.c4)))) FULL OUTER JOIN v0 ON ((((v0.c2) NOT NULL)) BETWEEN (LIKELIHOOD(DISTINCT rt1.c5, 0.07297314438305214)) AND ((('-213997385') BETWEEN (rt1.c2) AND (x'')))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt0.c1))) BETWEEN (x'') AND (((x'8f7c') NOT BETWEEN (rt1.c4) AND (rt1.c4)))) FULL OUTER JOIN v0 ON ((((v0.c2) NOT NULL)) BETWEEN (LIKELIHOOD(DISTINCT rt1.c5, 0.07297314438305214)) AND ((('-213997385') BETWEEN (rt1.c2) AND (x'')))) WHERE (((((((v0.c0)OR(v0.c1)))OR(rt1.c4)))<>((rt1.c1 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c1)))OR(rt1.c4)))<>((rt1.c1 IN (v0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt0.c1))) BETWEEN (x'') AND (((x'8f7c') NOT BETWEEN (rt1.c4) AND (rt1.c4)))) FULL OUTER JOIN v0 ON ((((v0.c2) NOT NULL)) BETWEEN (LIKELIHOOD(DISTINCT rt1.c5, 0.07297314438305214)) AND ((('-213997385') BETWEEN (rt1.c2) AND (x'')))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)IS NOT(rt0.c1))) BETWEEN (x'') AND (((x'8f7c') NOT BETWEEN (rt1.c4) AND (rt1.c4)))) FULL OUTER JOIN v0 ON ((((v0.c2) NOT NULL)) BETWEEN (LIKELIHOOD(DISTINCT rt1.c5, 0.07297314438305214)) AND ((('-213997385') BETWEEN (rt1.c2) AND (x'')))) WHERE (((((((v0.c0)OR(v0.c1)))OR(rt1.c4)))<>((rt1.c1 IN (v0.c1)))));
SELECT * FROM rt1, v0 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOTNULL))%((((2095878568))<((rt0.c0)))))) ORDER BY (- (((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))%((((2095878568))<((rt0.c0)))))) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN rt0 ORDER BY (- (((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM rt1, v0 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOTNULL))%((((2095878568))<((rt0.c0)))))) ORDER BY (- (((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))%((((2095878568))<((rt0.c0)))))) IS TRUE)  as count FROM rt1, v0 NATURAL JOIN rt0 ORDER BY (- (((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM rt1, v0 NATURAL JOIN rt0 WHERE (((((rt0.c2) NOTNULL))%((((2095878568))<((rt0.c0)))))) ORDER BY (- (((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 CROSS JOIN rt1 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c4) NOT NULL) THEN '' END WHERE ((NULL IN ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((~ (v0.c2))))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN rt1 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c4) NOT NULL) THEN '' END);
SELECT COUNT(*) FROM rt0, v0 CROSS JOIN rt1 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c4) NOT NULL) THEN '' END WHERE ((NULL IN ((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((~ (v0.c2))))) IS TRUE)  as count FROM rt0, v0 CROSS JOIN rt1 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c4) NOT NULL) THEN '' END);
SELECT COUNT(*) FROM rt0, v0 CROSS JOIN rt1 ON CASE rt1.c4 COLLATE RTRIM  WHEN ((rt1.c4) NOT NULL) THEN '' END WHERE ((NULL IN ((~ (v0.c2)))));
SELECT * FROM v0 WHERE ((((~ (v0.c2)))&((('m1') NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2)))&((('m1') NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((~ (v0.c2)))&((('m1') NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c2)))&((('m1') NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((~ (v0.c2)))&((('m1') NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE ('\');
SELECT SUM(count) FROM (SELECT (('\') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('\');
SELECT SUM(count) FROM (SELECT (('\') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('\');
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (NULL) ORDER BY x'9316'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY x'9316'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (NULL) ORDER BY x'9316'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY x'9316'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (NULL) ORDER BY x'9316'  NULLS LAST;
SELECT * FROM rt0, rt1, v0 WHERE ((((v0.c2) BETWEEN (0.28366740577806737) AND (v0.c2)) IN ('')));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) BETWEEN (0.28366740577806737) AND (v0.c2)) IN (''))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((((v0.c2) BETWEEN (0.28366740577806737) AND (v0.c2)) IN ('')));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) BETWEEN (0.28366740577806737) AND (v0.c2)) IN (''))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((((v0.c2) BETWEEN (0.28366740577806737) AND (v0.c2)) IN ('')));
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON v0.c0 WHERE (((((rt1.c1) NOTNULL))LIKE(((0.053771883335946624) NOT BETWEEN ('M,') AND (rt0.c0))))) ORDER BY (1.823985057E9 IN (((((rt1.c5)AND(rt1.c1)))OR(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))LIKE(((0.053771883335946624) NOT BETWEEN ('M,') AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON v0.c0 ORDER BY (1.823985057E9 IN (((((rt1.c5)AND(rt1.c1)))OR(NULL)))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON v0.c0 WHERE (((((rt1.c1) NOTNULL))LIKE(((0.053771883335946624) NOT BETWEEN ('M,') AND (rt0.c0))))) ORDER BY (1.823985057E9 IN (((((rt1.c5)AND(rt1.c1)))OR(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))LIKE(((0.053771883335946624) NOT BETWEEN ('M,') AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON v0.c0 ORDER BY (1.823985057E9 IN (((((rt1.c5)AND(rt1.c1)))OR(NULL)))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0 CROSS JOIN rt1 ON v0.c0 WHERE (((((rt1.c1) NOTNULL))LIKE(((0.053771883335946624) NOT BETWEEN ('M,') AND (rt0.c0))))) ORDER BY (1.823985057E9 IN (((((rt1.c5)AND(rt1.c1)))OR(NULL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END) AND (NULL)) WHERE (CASE WHEN ((rt1.c3)AND(rt0.c0)) THEN ((rt0.c2)==(rt1.c1)) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c2)*(rt0.c2)) THEN rt0.c2 ELSE x'74ab' END) ORDER BY NULL DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))%((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)AND(rt0.c0)) THEN ((rt0.c2)=(rt1.c1)) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c2)*(rt0.c2)) THEN rt0.c2 ELSE x'74ab' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END) AND (NULL)) ORDER BY NULL DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))%((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END) AND (NULL)) WHERE (CASE WHEN ((rt1.c3)AND(rt0.c0)) THEN ((rt0.c2)==(rt1.c1)) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c2)*(rt0.c2)) THEN rt0.c2 ELSE x'74ab' END) ORDER BY NULL DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))%((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c3)AND(rt0.c0)) THEN ((rt0.c2)=(rt1.c1)) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c2)*(rt0.c2)) THEN rt0.c2 ELSE x'74ab' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END) AND (NULL)) ORDER BY NULL DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))%((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c2 END) AND (NULL)) WHERE (CASE WHEN ((rt1.c3)AND(rt0.c0)) THEN ((rt0.c2)==(rt1.c1)) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE RTRIM WHEN ((rt0.c2)*(rt0.c2)) THEN rt0.c2 ELSE x'74ab' END) ORDER BY NULL DESC  NULLS FIRST, ((((((rt1.c1)OR(rt1.c0)))OR(rt1.c4)))%((rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c2 END) BETWEEN (ABS(v0.c0)) AND (v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c2 END) BETWEEN (ABS(v0.c0)) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c2 END) BETWEEN (ABS(v0.c0)) AND (v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c2 END) BETWEEN (ABS(v0.c0)) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c2 END) BETWEEN (ABS(v0.c0)) AND (v0.c2 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE ((((((rt0.c2)!=(rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)>=(rt0.c2))))!=((CAST(rt0.c0 AS REAL), '' COLLATE NOCASE, x'' COLLATE BINARY)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)!=(rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)>=(rt0.c2))))!=((CAST(rt0.c0 AS REAL), '' COLLATE NOCASE, x'' COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c2)!=(rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)>=(rt0.c2))))!=((CAST(rt0.c0 AS REAL), '' COLLATE NOCASE, x'' COLLATE BINARY)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)!=(rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)>=(rt0.c2))))!=((CAST(rt0.c0 AS REAL), '' COLLATE NOCASE, x'' COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c2)!=(rt0.c2)), ((rt0.c2) IS FALSE), ((rt0.c1)>=(rt0.c2))))!=((CAST(rt0.c0 AS REAL), '' COLLATE NOCASE, x'' COLLATE BINARY)))) ORDER BY rt0.c2 DESC;
SELECT * FROM rt1, rt0, v0 WHERE ((- (((v0.c2)<<(rt0.c1))))) ORDER BY (('144339234')AND('-1885078246')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2)<<(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (('144339234')AND('-1885078246')) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, v0 WHERE ((- (((v0.c2)<<(rt0.c1))))) ORDER BY (('144339234')AND('-1885078246')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c2)<<(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY (('144339234')AND('-1885078246')) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, v0 WHERE ((- (((v0.c2)<<(rt0.c1))))) ORDER BY (('144339234')AND('-1885078246')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (rt0.c0) ORDER BY (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((0.4634664465268099)))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((0.4634664465268099)))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (rt0.c0) ORDER BY (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((0.4634664465268099)))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((0.4634664465268099)))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (rt0.c0) ORDER BY (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((0.4634664465268099)))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((1632346137 COLLATE NOCASE)GLOB(((rt0.c1) NOT BETWEEN (-769807574) AND (v0.c1))))) ORDER BY (((TRIM(DISTINCT v0.c1, v0.c0), rt0.c0 COLLATE BINARY, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), CAST(rt0.c2 AS BLOB), rt0.c1))<((CAST(rt0.c0 AS REAL), ((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c1)), CASE rt0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, ((rt0.c1) NOT NULL), CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 WHEN '|n, j^s' THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((1632346137 COLLATE NOCASE)GLOB(((rt0.c1) NOT BETWEEN (-769807574) AND (v0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((TRIM(DISTINCT v0.c1, v0.c0), rt0.c0 COLLATE BINARY, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), CAST(rt0.c2 AS BLOB), rt0.c1))<((CAST(rt0.c0 AS REAL), ((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c1)), CASE rt0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, ((rt0.c1) NOT NULL), CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 WHEN '|n, j^s' THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE NULL END))));
SELECT ALL * FROM rt0, v0 WHERE (((1632346137 COLLATE NOCASE)GLOB(((rt0.c1) NOT BETWEEN (-769807574) AND (v0.c1))))) ORDER BY (((TRIM(DISTINCT v0.c1, v0.c0), rt0.c0 COLLATE BINARY, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), CAST(rt0.c2 AS BLOB), rt0.c1))<((CAST(rt0.c0 AS REAL), ((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c1)), CASE rt0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, ((rt0.c1) NOT NULL), CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 WHEN '|n, j^s' THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((1632346137 COLLATE NOCASE)GLOB(((rt0.c1) NOT BETWEEN (-769807574) AND (v0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((TRIM(DISTINCT v0.c1, v0.c0), rt0.c0 COLLATE BINARY, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), CAST(rt0.c2 AS BLOB), rt0.c1))<((CAST(rt0.c0 AS REAL), ((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c1)), CASE rt0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, ((rt0.c1) NOT NULL), CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 WHEN '|n, j^s' THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE NULL END))));
SELECT ALL * FROM rt0, v0 WHERE (((1632346137 COLLATE NOCASE)GLOB(((rt0.c1) NOT BETWEEN (-769807574) AND (v0.c1))))) ORDER BY (((TRIM(DISTINCT v0.c1, v0.c0), rt0.c0 COLLATE BINARY, ((((v0.c2)OR(v0.c2)))OR(v0.c1)), CAST(rt0.c2 AS BLOB), rt0.c1))<((CAST(rt0.c0 AS REAL), ((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c1)), CASE rt0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END, ((rt0.c1) NOT NULL), CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c2 WHEN '|n, j^s' THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 ELSE NULL END)));
SELECT * FROM v0, rt1, rt0 WHERE ((NOT (LIKELIHOOD(NULL, 0.6446208328015859)))) ORDER BY CASE NULL COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (0.5236218913950662)) THEN v0.c0 COLLATE BINARY WHEN ((rt1.c0) BETWEEN (x'') AND (v0.c1)) THEN TRIM(rt1.c4, rt1.c5) WHEN (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c5))) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE (((v0.c0, rt1.c3, rt1.c1))<((-972907568, rt1.c2, x''))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(NULL, 0.6446208328015859)))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE NULL COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (0.5236218913950662)) THEN v0.c0 COLLATE BINARY WHEN ((rt1.c0) BETWEEN (x'') AND (v0.c1)) THEN TRIM(rt1.c4, rt1.c5) WHEN (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c5))) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE (((v0.c0, rt1.c3, rt1.c1))<((-972907568, rt1.c2, x''))) END  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE ((NOT (LIKELIHOOD(NULL, 0.6446208328015859)))) ORDER BY CASE NULL COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (0.5236218913950662)) THEN v0.c0 COLLATE BINARY WHEN ((rt1.c0) BETWEEN (x'') AND (v0.c1)) THEN TRIM(rt1.c4, rt1.c5) WHEN (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c5))) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE (((v0.c0, rt1.c3, rt1.c1))<((-972907568, rt1.c2, x''))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(NULL, 0.6446208328015859)))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE NULL COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (0.5236218913950662)) THEN v0.c0 COLLATE BINARY WHEN ((rt1.c0) BETWEEN (x'') AND (v0.c1)) THEN TRIM(rt1.c4, rt1.c5) WHEN (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c5))) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE (((v0.c0, rt1.c3, rt1.c1))<((-972907568, rt1.c2, x''))) END  NULLS FIRST);
SELECT * FROM v0, rt1, rt0 WHERE ((NOT (LIKELIHOOD(NULL, 0.6446208328015859)))) ORDER BY CASE NULL COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (v0.c0) AND (0.5236218913950662)) THEN v0.c0 COLLATE BINARY WHEN ((rt1.c0) BETWEEN (x'') AND (v0.c1)) THEN TRIM(rt1.c4, rt1.c5) WHEN (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c5))) THEN ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c3)) ELSE (((v0.c0, rt1.c3, rt1.c1))<((-972907568, rt1.c2, x''))) END  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(v0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LIKELY(v0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((NOT (v0.c1)))>=((((v0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))))) CROSS JOIN rt1 ON ((((((((rt0.c1)AND(rt1.c3)))OR(v0.c1)))OR(json(NULL))))AND(((rt0.c2)LIKE(rt1.c4)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((NOT (v0.c1)))>=((((v0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))))) CROSS JOIN rt1 ON ((((((((rt0.c1)AND(rt1.c3)))OR(v0.c1)))OR(json(NULL))))AND(((rt0.c2)LIKE(rt1.c4)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((NOT (v0.c1)))>=((((v0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))))) CROSS JOIN rt1 ON ((((((((rt0.c1)AND(rt1.c3)))OR(v0.c1)))OR(json(NULL))))AND(((rt0.c2)LIKE(rt1.c4)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((NOT (v0.c1)))>=((((v0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))))) CROSS JOIN rt1 ON ((((((((rt0.c1)AND(rt1.c3)))OR(v0.c1)))OR(json(NULL))))AND(((rt0.c2)LIKE(rt1.c4)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON (((NOT (v0.c1)))>=((((v0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))))) CROSS JOIN rt1 ON ((((((((rt0.c1)AND(rt1.c3)))OR(v0.c1)))OR(json(NULL))))AND(((rt0.c2)LIKE(rt1.c4)))) WHERE (rt0.c1);
SELECT * FROM rt0, v0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((LIKELIHOOD(v0.c2, 0.9607812176783663))<(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LIKELIHOOD(v0.c2, 0.9607812176783663))<(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0, v0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((LIKELIHOOD(v0.c2, 0.9607812176783663))<(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LIKELIHOOD(v0.c2, 0.9607812176783663))<(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM rt0, v0 WHERE (((rt0.c0) ISNULL) COLLATE RTRIM) ORDER BY ((LIKELIHOOD(v0.c2, 0.9607812176783663))<(((v0.c2) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT COUNT(*) FROM rt1 WHERE ((~ ('YmO전oZ\rh')));
SELECT SUM(count) FROM (SELECT (((~ ('YmO전oZ\rh'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ ('YmO전oZ\rh')));
SELECT SUM(count) FROM (SELECT (((~ ('YmO전oZ\rh'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ ('YmO전oZ\rh')));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))GLOB(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))GLOB(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))GLOB(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))GLOB(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((((rt1.c4)OR(rt1.c2)))OR(v0.c0)))GLOB(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt1.c2) IS FALSE))<<(json_extract(0.3859774510191949, rt1.c3, rt0.c2, rt1.c4))) WHERE ((((rt1.c2)) NOT BETWEEN (('F퉬/')) AND ((((rt1.c3) NOT BETWEEN (rt1.c4) AND ('AF')))))) ORDER BY ((rt1.c3) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (('F퉬/')) AND ((((rt1.c3) NOT BETWEEN (rt1.c4) AND ('AF')))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt1.c2) IS FALSE))<<(json_extract(0.3859774510191949, rt1.c3, rt0.c2, rt1.c4))) ORDER BY ((rt1.c3) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt1.c2) IS FALSE))<<(json_extract(0.3859774510191949, rt1.c3, rt0.c2, rt1.c4))) WHERE ((((rt1.c2)) NOT BETWEEN (('F퉬/')) AND ((((rt1.c3) NOT BETWEEN (rt1.c4) AND ('AF')))))) ORDER BY ((rt1.c3) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (('F퉬/')) AND ((((rt1.c3) NOT BETWEEN (rt1.c4) AND ('AF')))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt1.c2) IS FALSE))<<(json_extract(0.3859774510191949, rt1.c3, rt0.c2, rt1.c4))) ORDER BY ((rt1.c3) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)/(rt0.c1)))OR((NOT (rt0.c0)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)/(rt0.c1)))OR((NOT (rt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)/(rt0.c1)))OR((NOT (rt0.c0)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)/(rt0.c1)))OR((NOT (rt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)/(rt0.c1)))OR((NOT (rt0.c0)))))OR(rt0.c1)));
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((x'6462'))<=(((rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((x'6462'))<=(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((x'6462'))<=(((rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((x'6462'))<=(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((x'6462'))<=(((rt1.c1 IN ())))));
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) NOTNULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c2))) AND ((((rt0.c0))<>((rt0.c2)))))) ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN 6.05174953E8 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((v0.c1 IN ()))))AND((((rt0.c0)) BETWEEN ((x'')) AND ((v0.c2))))), ((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))&(CAST(v0.c2 AS INTEGER))) ASC  NULLS FIRST, (NOT (rt0.c2 COLLATE NOCASE)), (((v0.c1 IN ())) BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c2))) AND ((((rt0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN 6.05174953E8 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((v0.c1 IN ()))))AND((((rt0.c0)) BETWEEN ((x'')) AND ((v0.c2))))), ((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))&(CAST(v0.c2 AS INTEGER))) ASC  NULLS FIRST, (NOT (rt0.c2 COLLATE NOCASE)), (((v0.c1 IN ())) BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (CAST(v0.c2 AS REAL))));
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) NOTNULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c2))) AND ((((rt0.c0))<>((rt0.c2)))))) ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN 6.05174953E8 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((v0.c1 IN ()))))AND((((rt0.c0)) BETWEEN ((x'')) AND ((v0.c2))))), ((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))&(CAST(v0.c2 AS INTEGER))) ASC  NULLS FIRST, (NOT (rt0.c2 COLLATE NOCASE)), (((v0.c1 IN ())) BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (rt0.c2))) AND ((((rt0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN 6.05174953E8 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((v0.c1 IN ()))))AND((((rt0.c0)) BETWEEN ((x'')) AND ((v0.c2))))), ((((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)))&(CAST(v0.c2 AS INTEGER))) ASC  NULLS FIRST, (NOT (rt0.c2 COLLATE NOCASE)), (((v0.c1 IN ())) BETWEEN ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1)))) AND (CAST(v0.c2 AS REAL))));
SELECT * FROM v0, rt0 WHERE (((((v0.c1)*(x'')))>(load_extension(x'', rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)*(x'')))>(load_extension(x'', rt0.c1)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((v0.c1)*(x'')))>(load_extension(x'', rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)*(x'')))>(load_extension(x'', rt0.c1)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0 WHERE (CASE v0.c1  WHEN ((x'beaf') NOTNULL) THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'', v0.c2) END) ORDER BY ((v0.c1) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN ((x'beaf') NOTNULL) THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'', v0.c2) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c1  WHEN ((x'beaf') NOTNULL) THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'', v0.c2) END) ORDER BY ((v0.c1) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN ((x'beaf') NOTNULL) THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'', v0.c2) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c1  WHEN ((x'beaf') NOTNULL) THEN (v0.c0 IN ()) ELSE COALESCE(DISTINCT x'', v0.c2) END) ORDER BY ((v0.c1) NOT NULL) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((v0.c1 IN ()))||(v0.c1))) ORDER BY CASE WHEN (~ (0.4964079586865858)) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))||(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (~ (0.4964079586865858)) THEN v0.c0 END  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c1 IN ()))||(v0.c1))) ORDER BY CASE WHEN (~ (0.4964079586865858)) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))||(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (~ (0.4964079586865858)) THEN v0.c0 END  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c1 IN ()))||(v0.c1))) ORDER BY CASE WHEN (~ (0.4964079586865858)) THEN v0.c0 END  NULLS FIRST;
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON ((((rt1.c2)AND(rt1.c1)))+(((((rt1.c0)OR(rt0.c2)))OR(v0.c1)))) WHERE ((((rt1.c5 IN (rt1.c0, -817406886)))+(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5 IN (rt1.c0, -817406886)))+(NULL))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON ((((rt1.c2)AND(rt1.c1)))+(((((rt1.c0)OR(rt0.c2)))OR(v0.c1)))));
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON ((((rt1.c2)AND(rt1.c1)))+(((((rt1.c0)OR(rt0.c2)))OR(v0.c1)))) WHERE ((((rt1.c5 IN (rt1.c0, -817406886)))+(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5 IN (rt1.c0, -817406886)))+(NULL))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON ((((rt1.c2)AND(rt1.c1)))+(((((rt1.c0)OR(rt0.c2)))OR(v0.c1)))));
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON ((((rt1.c2)AND(rt1.c1)))+(((((rt1.c0)OR(rt0.c2)))OR(v0.c1)))) WHERE ((((rt1.c5 IN (rt1.c0, -817406886)))+(NULL)));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON (((rt1.c4 IN ())) IS TRUE) INNER JOIN rt0 ON rt0.c2 WHERE (CASE WHEN ROUND(rt0.c0, rt1.c4) THEN (((rt1.c5)) BETWEEN ((x'bb91')) AND ((rt1.c4))) WHEN CASE rt0.c2  WHEN v0.c2 THEN rt0.c2 WHEN '?''H/V2{*' THEN rt1.c5 WHEN rt0.c2 THEN rt0.c1 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c2))<>((v0.c0))) END) ORDER BY ((+ (rt1.c5)) IN ((+ (v0.c0)))) ASC, ((CAST(v0.c2 AS INTEGER))||(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ROUND(rt0.c0, rt1.c4) THEN (((rt1.c5)) BETWEEN ((x'bb91')) AND ((rt1.c4))) WHEN CASE rt0.c2  WHEN v0.c2 THEN rt0.c2 WHEN '?''H/V2{*' THEN rt1.c5 WHEN rt0.c2 THEN rt0.c1 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c2))!=((v0.c0))) END) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((rt1.c4 IN ())) IS TRUE) INNER JOIN rt0 ON rt0.c2 ORDER BY ((+ (rt1.c5)) IN ((+ (v0.c0)))) ASC, ((CAST(v0.c2 AS INTEGER))||(NULL)));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON (((rt1.c4 IN ())) IS TRUE) INNER JOIN rt0 ON rt0.c2 WHERE (CASE WHEN ROUND(rt0.c0, rt1.c4) THEN (((rt1.c5)) BETWEEN ((x'bb91')) AND ((rt1.c4))) WHEN CASE rt0.c2  WHEN v0.c2 THEN rt0.c2 WHEN '?''H/V2{*' THEN rt1.c5 WHEN rt0.c2 THEN rt0.c1 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c2))<>((v0.c0))) END) ORDER BY ((+ (rt1.c5)) IN ((+ (v0.c0)))) ASC, ((CAST(v0.c2 AS INTEGER))||(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ROUND(rt0.c0, rt1.c4) THEN (((rt1.c5)) BETWEEN ((x'bb91')) AND ((rt1.c4))) WHEN CASE rt0.c2  WHEN v0.c2 THEN rt0.c2 WHEN '?''H/V2{*' THEN rt1.c5 WHEN rt0.c2 THEN rt0.c1 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c2))!=((v0.c0))) END) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((rt1.c4 IN ())) IS TRUE) INNER JOIN rt0 ON rt0.c2 ORDER BY ((+ (rt1.c5)) IN ((+ (v0.c0)))) ASC, ((CAST(v0.c2 AS INTEGER))||(NULL)));
SELECT COUNT(*) FROM v0 CROSS JOIN rt1 ON (((rt1.c4 IN ())) IS TRUE) INNER JOIN rt0 ON rt0.c2 WHERE (CASE WHEN ROUND(rt0.c0, rt1.c4) THEN (((rt1.c5)) BETWEEN ((x'bb91')) AND ((rt1.c4))) WHEN CASE rt0.c2  WHEN v0.c2 THEN rt0.c2 WHEN '?''H/V2{*' THEN rt1.c5 WHEN rt0.c2 THEN rt0.c1 END THEN CAST(rt1.c0 AS NUMERIC) WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c2))<>((v0.c0))) END) ORDER BY ((+ (rt1.c5)) IN ((+ (v0.c0)))) ASC, ((CAST(v0.c2 AS INTEGER))||(NULL));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)>(rt0.c1)) COLLATE BINARY) ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)OR((+ (rt0.c2)))))AND(NULL COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)OR((+ (rt0.c2)))))AND(NULL COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)>(rt0.c1)) COLLATE BINARY) ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)OR((+ (rt0.c2)))))AND(NULL COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)OR((+ (rt0.c2)))))AND(NULL COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)>(rt0.c1)) COLLATE BINARY) ORDER BY ((((CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)OR((+ (rt0.c2)))))AND(NULL COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 IN (v0.c2, v0.c1)) IN (((v0.c1)IS(v0.c0))))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (v0.c2, v0.c1)) IN (((v0.c1)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 IN (v0.c2, v0.c1)) IN (((v0.c1)IS(v0.c0))))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN (v0.c2, v0.c1)) IN (((v0.c1)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2 IN (v0.c2, v0.c1)) IN (((v0.c1)IS(v0.c0))))) ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM COLLATE NOCASE DESC;
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((~ ((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c5)))))) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (NULLIF(rt0.c0, rt1.c2)) AND (CAST(rt1.c5 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (NULLIF(rt0.c0, rt1.c2)) AND (CAST(rt1.c5 AS BLOB)))  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((~ ((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c5)))))) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (NULLIF(rt0.c0, rt1.c2)) AND (CAST(rt1.c5 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (NULLIF(rt0.c0, rt1.c2)) AND (CAST(rt1.c5 AS BLOB)))  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((~ ((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c5)))))) ORDER BY ((LAST_INSERT_ROWID()) NOT BETWEEN (NULLIF(rt0.c0, rt1.c2)) AND (CAST(rt1.c5 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((((((rt0.c0)AND(1.74118137E9)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))AND(rt1.c4)))OR(((rt1.c5)!=(v0.c2)))))AND(rt0.c0))) ORDER BY (LAST_INSERT_ROWID() IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(1.74118137E9)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))AND(rt1.c4)))OR(((rt1.c5)!=(v0.c2)))))AND(rt0.c0))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (LAST_INSERT_ROWID() IN ()));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((((((rt0.c0)AND(1.74118137E9)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))AND(rt1.c4)))OR(((rt1.c5)!=(v0.c2)))))AND(rt0.c0))) ORDER BY (LAST_INSERT_ROWID() IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(1.74118137E9)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))AND(rt1.c4)))OR(((rt1.c5)!=(v0.c2)))))AND(rt0.c0))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (LAST_INSERT_ROWID() IN ()));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((((((rt0.c0)AND(1.74118137E9)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))AND(rt1.c4)))OR(((rt1.c5)!=(v0.c2)))))AND(rt0.c0))) ORDER BY (LAST_INSERT_ROWID() IN ());
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (json(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (json(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (json(rt1.c2))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 CROSS JOIN v0 ON (((((v0.c1))<=((rt1.c3))))==(((v0.c0) NOT NULL))) WHERE (((v0.c0)==(rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)=(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 CROSS JOIN v0 ON (((((v0.c1))<=((rt1.c3))))=(((v0.c0) NOT NULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 CROSS JOIN v0 ON (((((v0.c1))<=((rt1.c3))))==(((v0.c0) NOT NULL))) WHERE (((v0.c0)==(rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)=(rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 CROSS JOIN v0 ON (((((v0.c1))<=((rt1.c3))))=(((v0.c0) NOT NULL))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c2 CROSS JOIN v0 ON (((((v0.c1))<=((rt1.c3))))==(((v0.c0) NOT NULL))) WHERE (((v0.c0)==(rt1.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN NULL THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) ELSE (((v0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c1)) AND ((rt0.c1, rt0.c2, v0.c1))) END WHERE (((UPPER(DISTINCT rt0.c0))+((((v0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c0))+((((v0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN NULL THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) ELSE (((v0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c1)) AND ((rt0.c1, rt0.c2, v0.c1))) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN NULL THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) ELSE (((v0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c1)) AND ((rt0.c1, rt0.c2, v0.c1))) END WHERE (((UPPER(DISTINCT rt0.c0))+((((v0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c0))+((((v0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN NULL THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) ELSE (((v0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c1)) AND ((rt0.c1, rt0.c2, v0.c1))) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN NULL THEN ((NULL) NOT BETWEEN (v0.c1) AND (rt0.c1)) ELSE (((v0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, v0.c1)) AND ((rt0.c1, rt0.c2, v0.c1))) END WHERE (((UPPER(DISTINCT rt0.c0))+((((v0.c0, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, v0.c0))))));
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((((v0.c1 IN ()))AND((rt1.c3 IN ())))) ORDER BY rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY rt1.c0 DESC);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((((v0.c1 IN ()))AND((rt1.c3 IN ())))) ORDER BY rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY rt1.c0 DESC);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((((v0.c1 IN ()))AND((rt1.c3 IN ())))) ORDER BY rt1.c0 DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0 COLLATE BINARY)=((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)==((NOT (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0 COLLATE BINARY)=((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)==((NOT (v0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((v0.c0 COLLATE BINARY)=((NOT (v0.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (v0.c1) ORDER BY CAST(((rt1.c1)/(rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0 ORDER BY CAST(((rt1.c1)/(rt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (v0.c1) ORDER BY CAST(((rt1.c1)/(rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0 ORDER BY CAST(((rt1.c1)/(rt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (v0.c1) ORDER BY CAST(((rt1.c1)/(rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((SQLITE_VERSION())<<((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0)))))) ORDER BY (((v0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (TRIM(DISTINCT v0.c2))) DESC  NULLS LAST, (((v0.c2 IN ()))OR((~ (v0.c2)))) ASC, (((CASE WHEN v0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN v0.c2 END))<=((CAST(v0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())<<((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (TRIM(DISTINCT v0.c2))) DESC  NULLS LAST, (((v0.c2 IN ()))OR((~ (v0.c2)))) ASC, (((CASE WHEN v0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN v0.c2 END))<=((CAST(v0.c0 AS BLOB)))) ASC);
SELECT * FROM rt0, v0 WHERE (((SQLITE_VERSION())<<((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0)))))) ORDER BY (((v0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (TRIM(DISTINCT v0.c2))) DESC  NULLS LAST, (((v0.c2 IN ()))OR((~ (v0.c2)))) ASC, (((CASE WHEN v0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN v0.c2 END))<=((CAST(v0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())<<((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (TRIM(DISTINCT v0.c2))) DESC  NULLS LAST, (((v0.c2 IN ()))OR((~ (v0.c2)))) ASC, (((CASE WHEN v0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN v0.c2 END))<=((CAST(v0.c0 AS BLOB)))) ASC);
SELECT * FROM rt0, v0 WHERE (((SQLITE_VERSION())<<((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0)))))) ORDER BY (((v0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (TRIM(DISTINCT v0.c2))) DESC  NULLS LAST, (((v0.c2 IN ()))OR((~ (v0.c2)))) ASC, (((CASE WHEN v0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN v0.c2 END))<=((CAST(v0.c0 AS BLOB)))) ASC;
SELECT * FROM v0, rt1, rt0 WHERE (CAST(((x'd533') BETWEEN (rt1.c2) AND (v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((x'd533') BETWEEN (rt1.c2) AND (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (CAST(((x'd533') BETWEEN (rt1.c2) AND (v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((x'd533') BETWEEN (rt1.c2) AND (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (CAST(((x'd533') BETWEEN (rt1.c2) AND (v0.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CASE rt0.c1  WHEN (+ (rt1.c0)) THEN rt1.c1 WHEN x'' THEN 0.7836202607469057 WHEN ((rt0.c1)!=(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c1, rt1.c0, rt1.c1, 0.6524855611388106, rt0.c1)) NOT BETWEEN ((x'', rt1.c4, rt0.c1, rt1.c4, rt0.c2)) AND ((v0.c1, v0.c1, rt1.c3, rt0.c1, rt1.c4))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN (+ (rt1.c0)) THEN rt1.c1 WHEN x'' THEN 0.7836202607469057 WHEN ((rt0.c1)!=(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c1, rt1.c0, rt1.c1, 0.6524855611388106, rt0.c1)) NOT BETWEEN ((x'', rt1.c4, rt0.c1, rt1.c4, rt0.c2)) AND ((v0.c1, v0.c1, rt1.c3, rt0.c1, rt1.c4))) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CASE rt0.c1  WHEN (+ (rt1.c0)) THEN rt1.c1 WHEN x'' THEN 0.7836202607469057 WHEN ((rt0.c1)!=(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c1, rt1.c0, rt1.c1, 0.6524855611388106, rt0.c1)) NOT BETWEEN ((x'', rt1.c4, rt0.c1, rt1.c4, rt0.c2)) AND ((v0.c1, v0.c1, rt1.c3, rt0.c1, rt1.c4))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN (+ (rt1.c0)) THEN rt1.c1 WHEN x'' THEN 0.7836202607469057 WHEN ((rt0.c1)!=(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c1, rt1.c0, rt1.c1, 0.6524855611388106, rt0.c1)) NOT BETWEEN ((x'', rt1.c4, rt0.c1, rt1.c4, rt0.c2)) AND ((v0.c1, v0.c1, rt1.c3, rt0.c1, rt1.c4))) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CASE rt0.c1  WHEN (+ (rt1.c0)) THEN rt1.c1 WHEN x'' THEN 0.7836202607469057 WHEN ((rt0.c1)!=(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) ELSE (((rt1.c1, rt1.c0, rt1.c1, 0.6524855611388106, rt0.c1)) NOT BETWEEN ((x'', rt1.c4, rt0.c1, rt1.c4, rt0.c2)) AND ((v0.c1, v0.c1, rt1.c3, rt0.c1, rt1.c4))) END);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c1)))AND(v0.c2)) END);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((((((((('605174953')OR(rt1.c4)))AND(NULL)))OR(rt1.c5)))AND(rt0.c0)))) CROSS JOIN v0 ON NULL WHERE (((json_object(rt1.c0, rt1.c4, v0.c1, v0.c2, rt1.c3, rt0.c2)) NOT BETWEEN (((((((((rt1.c4)AND(rt0.c0)))AND(v0.c2)))AND(rt1.c3)))OR(rt1.c4))) AND (((v0.c1)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt1.c0, rt1.c4, v0.c1, v0.c2, rt1.c3, rt0.c2)) NOT BETWEEN (((((((((rt1.c4)AND(rt0.c0)))AND(v0.c2)))AND(rt1.c3)))OR(rt1.c4))) AND (((v0.c1)/(rt0.c2))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((((((((('605174953')OR(rt1.c4)))AND(NULL)))OR(rt1.c5)))AND(rt0.c0)))) CROSS JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((((((((('605174953')OR(rt1.c4)))AND(NULL)))OR(rt1.c5)))AND(rt0.c0)))) CROSS JOIN v0 ON NULL WHERE (((json_object(rt1.c0, rt1.c4, v0.c1, v0.c2, rt1.c3, rt0.c2)) NOT BETWEEN (((((((((rt1.c4)AND(rt0.c0)))AND(v0.c2)))AND(rt1.c3)))OR(rt1.c4))) AND (((v0.c1)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt1.c0, rt1.c4, v0.c1, v0.c2, rt1.c3, rt0.c2)) NOT BETWEEN (((((((((rt1.c4)AND(rt0.c0)))AND(v0.c2)))AND(rt1.c3)))OR(rt1.c4))) AND (((v0.c1)/(rt0.c2))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((((((((('605174953')OR(rt1.c4)))AND(NULL)))OR(rt1.c5)))AND(rt0.c0)))) CROSS JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((((((((('605174953')OR(rt1.c4)))AND(NULL)))OR(rt1.c5)))AND(rt0.c0)))) CROSS JOIN v0 ON NULL WHERE (((json_object(rt1.c0, rt1.c4, v0.c1, v0.c2, rt1.c3, rt0.c2)) NOT BETWEEN (((((((((rt1.c4)AND(rt0.c0)))AND(v0.c2)))AND(rt1.c3)))OR(rt1.c4))) AND (((v0.c1)/(rt0.c2)))));
SELECT * FROM rt0, v0, rt1 WHERE ((NOT (rt1.c5 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((NOT (rt1.c5 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((NOT (rt1.c5 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2 IN ())) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((((((v0.c2)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ())) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((((((v0.c2)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2 IN ())) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((((((v0.c2)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ())) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((((((v0.c2)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2 IN ())) NOT BETWEEN (CAST(v0.c2 AS INTEGER)) AND (((((((((v0.c2)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c2)))));
SELECT * FROM rt1, v0, rt0 WHERE ((CAST(rt1.c3 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c3 AS REAL) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((CAST(rt1.c3 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c3 AS REAL) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((CAST(rt1.c3 AS REAL) IN ()));
SELECT * FROM v0, rt1 WHERE (((CASE v0.c2  WHEN v0.c1 THEN rt1.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c1 THEN rt1.c3 END) NOT NULL)) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((CASE v0.c2  WHEN v0.c1 THEN rt1.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c1 THEN rt1.c3 END) NOT NULL)) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((CASE v0.c2  WHEN v0.c1 THEN rt1.c3 END) NOT NULL));
SELECT ALL * FROM v0, rt0, rt1 WHERE ((UPPER(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(rt0.c0) IN ())) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((UPPER(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(rt0.c0) IN ())) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((UPPER(rt0.c0) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c3) ISNULL))AND(rt1.c0 COLLATE RTRIM)))OR(0.6264402640434411 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) ISNULL))AND(rt1.c0 COLLATE RTRIM)))OR(0.6264402640434411 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c3) ISNULL))AND(rt1.c0 COLLATE RTRIM)))OR(0.6264402640434411 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) ISNULL))AND(rt1.c0 COLLATE RTRIM)))OR(0.6264402640434411 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c3) ISNULL))AND(rt1.c0 COLLATE RTRIM)))OR(0.6264402640434411 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c2 AS INTEGER)) ORDER BY CASE WHEN CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END THEN (((v0.c2))<=((x''))) ELSE v0.c2 COLLATE NOCASE END, NULLIF(((v0.c1)LIKE(v0.c0)), ((rt0.c0)/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END THEN (((v0.c2))<=((x''))) ELSE v0.c2 COLLATE NOCASE END, NULLIF(((v0.c1)LIKE(v0.c0)), ((rt0.c0)/(rt0.c2))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c2 AS INTEGER)) ORDER BY CASE WHEN CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END THEN (((v0.c2))<=((x''))) ELSE v0.c2 COLLATE NOCASE END, NULLIF(((v0.c1)LIKE(v0.c0)), ((rt0.c0)/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END THEN (((v0.c2))<=((x''))) ELSE v0.c2 COLLATE NOCASE END, NULLIF(((v0.c1)LIKE(v0.c0)), ((rt0.c0)/(rt0.c2))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c2 AS INTEGER)) ORDER BY CASE WHEN CASE WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END THEN (((v0.c2))<=((x''))) ELSE v0.c2 COLLATE NOCASE END, NULLIF(((v0.c1)LIKE(v0.c0)), ((rt0.c0)/(rt0.c2)));
SELECT * FROM v0 WHERE ((v0.c1 IN (v0.c0)) COLLATE BINARY) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c1 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c1 IN (v0.c0)) COLLATE BINARY) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c1 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c1 IN (v0.c0)) COLLATE BINARY) ORDER BY (+ (((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c2 COLLATE BINARY) ISNULL)) ORDER BY (CAST(rt1.c5 AS TEXT) IN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))) ASC, (+ ((rt0.c2 IN (rt0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (CAST(rt1.c5 AS TEXT) IN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))) ASC, (+ ((rt0.c2 IN (rt0.c0, rt1.c0)))));
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c2 COLLATE BINARY) ISNULL)) ORDER BY (CAST(rt1.c5 AS TEXT) IN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))) ASC, (+ ((rt0.c2 IN (rt0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (CAST(rt1.c5 AS TEXT) IN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))) ASC, (+ ((rt0.c2 IN (rt0.c0, rt1.c0)))));
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c2 COLLATE BINARY) ISNULL)) ORDER BY (CAST(rt1.c5 AS TEXT) IN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3)))) ASC, (+ ((rt0.c2 IN (rt0.c0, rt1.c0))));
SELECT ALL * FROM rt1, rt0, v0 WHERE (((v0.c2)AND(rt1.c3)) COLLATE NOCASE) ORDER BY x'f9753296'  NULLS LAST, (NOT (((rt0.c2)>>(rt0.c1)))), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)AND(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY x'f9753296'  NULLS LAST, (NOT (((rt0.c2)>>(rt0.c1)))), rt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((v0.c2)AND(rt1.c3)) COLLATE NOCASE) ORDER BY x'f9753296'  NULLS LAST, (NOT (((rt0.c2)>>(rt0.c1)))), rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)AND(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY x'f9753296'  NULLS LAST, (NOT (((rt0.c2)>>(rt0.c1)))), rt1.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((v0.c2)AND(rt1.c3)) COLLATE NOCASE) ORDER BY x'f9753296'  NULLS LAST, (NOT (((rt0.c2)>>(rt0.c1)))), rt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((NOT (0X437562b3)))) AND ((0.00529677535361639)))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((NOT (0x437562b3)))) AND ((0.00529677535361639)))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((NOT (0X437562b3)))) AND ((0.00529677535361639)))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((NOT (0x437562b3)))) AND ((0.00529677535361639)))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN (((NOT (0X437562b3)))) AND ((0.00529677535361639)))) ORDER BY v0.c0 DESC;
SELECT ALL * FROM v0, rt0, rt1 WHERE (((0.6398618403721889) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((0.6398618403721889) IS TRUE)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((0.6398618403721889) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((0.6398618403721889) IS TRUE)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((0.6398618403721889) IS TRUE));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (0.3643212244384776)))||(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c2) AND (0.3643212244384776)))||(v0.c2))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (0.3643212244384776)))||(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c2) AND (0.3643212244384776)))||(v0.c2))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (0.3643212244384776)))||(v0.c2)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c5)))) WHERE (0x16649d8a);
SELECT SUM(count) FROM (SELECT ALL ((0x16649d8a) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c5)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c5)))) WHERE (0x16649d8a);
SELECT SUM(count) FROM (SELECT ALL ((0x16649d8a) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c5)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c5)))) WHERE (0x16649d8a);
SELECT * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c5 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)) ORDER BY CAST(((rt1.c3) BETWEEN (rt1.c5) AND (rt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c5 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c3) BETWEEN (rt1.c5) AND (rt0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c5 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)) ORDER BY CAST(((rt1.c3) BETWEEN (rt1.c5) AND (rt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c5 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c3) BETWEEN (rt1.c5) AND (rt0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c5 WHEN rt0.c1 THEN rt0.c0 END AS BLOB)) ORDER BY CAST(((rt1.c3) BETWEEN (rt1.c5) AND (rt0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS BLOB)) ORDER BY (((((rt0.c0)/(585865663))))<((((rt1.c2)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY (((((rt0.c0)/(585865663))))<((((rt1.c2)<=(rt0.c2))))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS BLOB)) ORDER BY (((((rt0.c0)/(585865663))))<((((rt1.c2)<=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY (((((rt0.c0)/(585865663))))<((((rt1.c2)<=(rt0.c2))))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS BLOB)) ORDER BY (((((rt0.c0)/(585865663))))<((((rt1.c2)<=(rt0.c2)))));
SELECT * FROM v0, rt0 WHERE ((- (v0.c2))) ORDER BY ((rt0.c1) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) NOT NULL) ASC);
SELECT * FROM v0, rt0 WHERE ((- (v0.c2))) ORDER BY ((rt0.c1) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) NOT NULL) ASC);
SELECT * FROM v0, rt0 WHERE ((- (v0.c2))) ORDER BY ((rt0.c1) NOT NULL) ASC;
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((rt0.c1)|(rt1.c0))) NOT NULL) WHERE (LIKE(((rt0.c2)AND(v0.c1)), rt1.c0));
SELECT SUM(count) FROM (SELECT ((LIKE(((rt0.c2)AND(v0.c1)), rt1.c0)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((rt0.c1)|(rt1.c0))) NOT NULL));
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((rt0.c1)|(rt1.c0))) NOT NULL) WHERE (LIKE(((rt0.c2)AND(v0.c1)), rt1.c0));
SELECT SUM(count) FROM (SELECT ((LIKE(((rt0.c2)AND(v0.c1)), rt1.c0)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((rt0.c1)|(rt1.c0))) NOT NULL));
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON ((((rt0.c1)|(rt1.c0))) NOT NULL) WHERE (LIKE(((rt0.c2)AND(v0.c1)), rt1.c0));
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM WHERE ((- (CASE WHEN v0.c1 THEN rt1.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN v0.c1 THEN rt1.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM);
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM WHERE ((- (CASE WHEN v0.c1 THEN rt1.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN v0.c1 THEN rt1.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM);
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON (+ (rt1.c0)) COLLATE RTRIM WHERE ((- (CASE WHEN v0.c1 THEN rt1.c3 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CASE v0.c2  WHEN rt0.c0 THEN v0.c1 END COLLATE RTRIM) ORDER BY ((((rt1.c0) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2  WHEN rt0.c0 THEN v0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c0) IS TRUE)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CASE v0.c2  WHEN rt0.c0 THEN v0.c1 END COLLATE RTRIM) ORDER BY ((((rt1.c0) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c2  WHEN rt0.c0 THEN v0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c0) IS TRUE)) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (CASE v0.c2  WHEN rt0.c0 THEN v0.c1 END COLLATE RTRIM) ORDER BY ((((rt1.c0) IS TRUE)) NOTNULL) ASC;
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (0.9060051692213676) ORDER BY CAST((rt1.c3 IN (rt1.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9060051692213676) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY CAST((rt1.c3 IN (rt1.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (0.9060051692213676) ORDER BY CAST((rt1.c3 IN (rt1.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9060051692213676) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY CAST((rt1.c3 IN (rt1.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (0.9060051692213676) ORDER BY CAST((rt1.c3 IN (rt1.c1)) AS BLOB) ASC;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN json_remove(rt1.c3, rt1.c0, rt1.c3, rt1.c5) THEN rt1.c4 ELSE rt1.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_remove(rt1.c3, rt1.c0, rt1.c3, rt1.c5) THEN rt1.c4 ELSE rt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN json_remove(rt1.c3, rt1.c0, rt1.c3, rt1.c5) THEN rt1.c4 ELSE rt1.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_remove(rt1.c3, rt1.c0, rt1.c3, rt1.c5) THEN rt1.c4 ELSE rt1.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt0.c1)))AND(rt1.c4)))))) ORDER BY UNLIKELY(((((rt0.c0)AND(rt1.c4)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt0.c1)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY UNLIKELY(((((rt0.c0)AND(rt1.c4)))OR(rt0.c1))));
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt0.c1)))AND(rt1.c4)))))) ORDER BY UNLIKELY(((((rt0.c0)AND(rt1.c4)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt0.c1)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY UNLIKELY(((((rt0.c0)AND(rt1.c4)))OR(rt0.c1))));
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (('')) AND ((((((rt1.c1)OR(rt0.c1)))AND(rt1.c4)))))) ORDER BY UNLIKELY(((((rt0.c0)AND(rt1.c4)))OR(rt0.c1)));
SELECT * FROM v0, rt0, rt1 WHERE ((- (((v0.c2)||(rt1.c2))))) ORDER BY MAX(((rt0.c2) NOTNULL), rt1.c4) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c2)||(rt1.c2))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY MAX(((rt0.c2) NOTNULL), rt1.c4) DESC  NULLS LAST);
SELECT * FROM v0, rt0, rt1 WHERE ((- (((v0.c2)||(rt1.c2))))) ORDER BY MAX(((rt0.c2) NOTNULL), rt1.c4) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c2)||(rt1.c2))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY MAX(((rt0.c2) NOTNULL), rt1.c4) DESC  NULLS LAST);
SELECT * FROM v0, rt0, rt1 WHERE ((- (((v0.c2)||(rt1.c2))))) ORDER BY MAX(((rt0.c2) NOTNULL), rt1.c4) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c2))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c2))) NOTNULL));
SELECT ALL * FROM rt1, v0 WHERE (CAST(((((rt1.c3)AND(rt1.c0)))OR(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)AND(rt1.c0)))OR(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (CAST(((((rt1.c3)AND(rt1.c0)))OR(v0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)AND(rt1.c0)))OR(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (CAST(((((rt1.c3)AND(rt1.c0)))OR(v0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, 'HkB헐50r#?')) NOT BETWEEN (((NOT (v0.c2)), CAST(v0.c1 AS INTEGER), CASE v0.c1  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END)) AND (((- (v0.c0)), (v0.c1 IN ()), (NULL IN (v0.c2, v0.c1)))))) ORDER BY (((v0.c2)) BETWEEN ((((v0.c0)>=(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c0, 'HkB헐50r#?')) NOT BETWEEN (((NOT (v0.c2)), CAST(v0.c1 AS INTEGER), CASE v0.c1  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END)) AND (((- (v0.c0)), (v0.c1 IN ()), (NULL IN (v0.c2, v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) BETWEEN ((((v0.c0)>=(v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, 'HkB헐50r#?')) NOT BETWEEN (((NOT (v0.c2)), CAST(v0.c1 AS INTEGER), CASE v0.c1  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END)) AND (((- (v0.c0)), (v0.c1 IN ()), (NULL IN (v0.c2, v0.c1)))))) ORDER BY (((v0.c2)) BETWEEN ((((v0.c0)>=(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c0, 'HkB헐50r#?')) NOT BETWEEN (((NOT (v0.c2)), CAST(v0.c1 AS INTEGER), CASE v0.c1  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END)) AND (((- (v0.c0)), (v0.c1 IN ()), (NULL IN (v0.c2, v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2)) BETWEEN ((((v0.c0)>=(v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, 'HkB헐50r#?')) NOT BETWEEN (((NOT (v0.c2)), CAST(v0.c1 AS INTEGER), CASE v0.c1  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 END)) AND (((- (v0.c0)), (v0.c1 IN ()), (NULL IN (v0.c2, v0.c1)))))) ORDER BY (((v0.c2)) BETWEEN ((((v0.c0)>=(v0.c0)))) AND ((CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST('-758110745' COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-758110745' COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST('-758110745' COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-758110745' COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST('-758110745' COLLATE BINARY AS BLOB));
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c2, rt1.c2, v0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c5, v0.c0, rt1.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c2, rt1.c2, v0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c5, v0.c0, rt1.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c2, rt1.c2, v0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c5, v0.c0, rt1.c3))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c2, rt1.c2, v0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c5, v0.c0, rt1.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE ((((v0.c2, rt1.c2, v0.c2)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c5, v0.c0, rt1.c3))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)>(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>(v0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)>(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>(v0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(((v0.c0)>(v0.c1)) AS REAL));
SELECT ALL * FROM v0, rt1 WHERE (((CAST('' AS TEXT)) BETWEEN (((rt1.c2) NOTNULL)) AND ((((630118405)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST('' AS TEXT)) BETWEEN (((rt1.c2) NOTNULL)) AND ((((630118405)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((CAST('' AS TEXT)) BETWEEN (((rt1.c2) NOTNULL)) AND ((((630118405)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST('' AS TEXT)) BETWEEN (((rt1.c2) NOTNULL)) AND ((((630118405)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((CAST('' AS TEXT)) BETWEEN (((rt1.c2) NOTNULL)) AND ((((630118405)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))));
SELECT ALL * FROM v0, rt0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS REAL)) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS REAL)) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (CAST(rt1.c4 COLLATE NOCASE AS REAL)) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c3 THEN v0.c2 ELSE 0x5efcd26c END COLLATE RTRIM WHERE (((rt1.c2 COLLATE RTRIM) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (((((((((rt1.c3)OR(rt0.c0)))OR('nuI*9\KP폶')))OR(v0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (((((((((rt1.c3)OR(rt0.c0)))OR('nuI*9\KP폶')))OR(v0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c3 THEN v0.c2 ELSE 0X5efcd26c END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c3 THEN v0.c2 ELSE 0x5efcd26c END COLLATE RTRIM WHERE (((rt1.c2 COLLATE RTRIM) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (((((((((rt1.c3)OR(rt0.c0)))OR('nuI*9\KP폶')))OR(v0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (((((((((rt1.c3)OR(rt0.c0)))OR('nuI*9\KP폶')))OR(v0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c3 THEN v0.c2 ELSE 0X5efcd26c END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0 LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c3 THEN v0.c2 ELSE 0x5efcd26c END COLLATE RTRIM WHERE (((rt1.c2 COLLATE RTRIM) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c2)) AND (((((((((rt1.c3)OR(rt0.c0)))OR('nuI*9\KP폶')))OR(v0.c0)))AND(rt0.c2)))));
SELECT * FROM rt0, rt1, v0 WHERE (((((((rt0.c0)AND(v0.c2)))AND('H'))) IS FALSE)) ORDER BY CHAR(((v0.c2)%(v0.c2))) ASC, ((((v0.c2 COLLATE RTRIM)OR(((NULL)OR(rt0.c2)))))AND((((rt0.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, rt1.c5, rt0.c2)) AND ((rt1.c5, rt1.c4, -1.63945541E9))))) DESC, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(v0.c2)))AND('H'))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CHAR(((v0.c2)%(v0.c2))) ASC, ((((v0.c2 COLLATE RTRIM)OR(((NULL)OR(rt0.c2)))))AND((((rt0.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, rt1.c5, rt0.c2)) AND ((rt1.c5, rt1.c4, -1.63945541E9))))) DESC, v0.c0  NULLS LAST);
SELECT * FROM rt0, rt1, v0 WHERE (((((((rt0.c0)AND(v0.c2)))AND('H'))) IS FALSE)) ORDER BY CHAR(((v0.c2)%(v0.c2))) ASC, ((((v0.c2 COLLATE RTRIM)OR(((NULL)OR(rt0.c2)))))AND((((rt0.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, rt1.c5, rt0.c2)) AND ((rt1.c5, rt1.c4, -1.63945541E9))))) DESC, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(v0.c2)))AND('H'))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CHAR(((v0.c2)%(v0.c2))) ASC, ((((v0.c2 COLLATE RTRIM)OR(((NULL)OR(rt0.c2)))))AND((((rt0.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, rt1.c5, rt0.c2)) AND ((rt1.c5, rt1.c4, -1.63945541E9))))) DESC, v0.c0  NULLS LAST);
SELECT * FROM rt0, rt1, v0 WHERE (((((((rt0.c0)AND(v0.c2)))AND('H'))) IS FALSE)) ORDER BY CHAR(((v0.c2)%(v0.c2))) ASC, ((((v0.c2 COLLATE RTRIM)OR(((NULL)OR(rt0.c2)))))AND((((rt0.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, rt1.c5, rt0.c2)) AND ((rt1.c5, rt1.c4, -1.63945541E9))))) DESC, v0.c0  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1))=((rt0.c2, rt0.c1, rt0.c2, rt0.c2, rt0.c2))) AS REAL)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1))=((rt0.c2, rt0.c1, rt0.c2, rt0.c2, rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1))=((rt0.c2, rt0.c1, rt0.c2, rt0.c2, rt0.c2))) AS REAL)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1))=((rt0.c2, rt0.c1, rt0.c2, rt0.c2, rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c1))=((rt0.c2, rt0.c1, rt0.c2, rt0.c2, rt0.c2))) AS REAL)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT * FROM rt0, v0, rt1 WHERE (CAST(STRFTIME(v0.c2, v0.c0, 2.095878568E9) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(STRFTIME(v0.c2, v0.c0, 2.095878568E9) AS REAL)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (CAST(STRFTIME(v0.c2, v0.c0, 2.095878568E9) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(STRFTIME(v0.c2, v0.c0, 2.095878568E9) AS REAL)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (CAST(STRFTIME(v0.c2, v0.c0, 2.095878568E9) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (+ (0.3846280274522311))  WHEN UPPER(v0.c2) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) END) ORDER BY (((v0.c1)) BETWEEN ((((0.0969393392757214) IS TRUE))) AND ((ABS(DISTINCT v0.c1))))  NULLS FIRST, ((v0.c2 COLLATE BINARY)IS((NOT (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (0.3846280274522311))  WHEN UPPER(v0.c2) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) BETWEEN ((((0.0969393392757214) IS TRUE))) AND ((ABS(DISTINCT v0.c1))))  NULLS FIRST, ((v0.c2 COLLATE BINARY)IS((NOT (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (+ (0.3846280274522311))  WHEN UPPER(v0.c2) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) END) ORDER BY (((v0.c1)) BETWEEN ((((0.0969393392757214) IS TRUE))) AND ((ABS(DISTINCT v0.c1))))  NULLS FIRST, ((v0.c2 COLLATE BINARY)IS((NOT (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (0.3846280274522311))  WHEN UPPER(v0.c2) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) BETWEEN ((((0.0969393392757214) IS TRUE))) AND ((ABS(DISTINCT v0.c1))))  NULLS FIRST, ((v0.c2 COLLATE BINARY)IS((NOT (v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (+ (0.3846280274522311))  WHEN UPPER(v0.c2) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) END) ORDER BY (((v0.c1)) BETWEEN ((((0.0969393392757214) IS TRUE))) AND ((ABS(DISTINCT v0.c1))))  NULLS FIRST, ((v0.c2 COLLATE BINARY)IS((NOT (v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c3) NOT NULL) IN (v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) NOT NULL) IN (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c3) NOT NULL) IN (v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) NOT NULL) IN (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((((rt1.c3) NOT NULL) IN (v0.c2 COLLATE RTRIM)));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c1, v0.c1))<=((0.11472964673858166, rt0.c0, v0.c0))))IS NOT(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, v0.c1))<=((0.11472964673858166, rt0.c0, v0.c0))))IS NOT(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c1, v0.c1))<=((0.11472964673858166, rt0.c0, v0.c0))))IS NOT(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, v0.c1))<=((0.11472964673858166, rt0.c0, v0.c0))))IS NOT(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c1, v0.c1))<=((0.11472964673858166, rt0.c0, v0.c0))))IS NOT(rt0.c0)));
SELECT ALL * FROM rt0, v0, rt1 WHERE ((0.4755903142787834 IN (x'')));
SELECT SUM(count) FROM (SELECT ALL (((0.4755903142787834 IN (x''))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((0.4755903142787834 IN (x'')));
SELECT SUM(count) FROM (SELECT ALL (((0.4755903142787834 IN (x''))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((0.4755903142787834 IN (x'')));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<=((CAST(rt1.c1 AS BLOB))))) ORDER BY ((rt0.c1 COLLATE RTRIM)<<(rt1.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM))<=((CAST(rt1.c1 AS BLOB))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)<<(rt1.c3)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<=((CAST(rt1.c1 AS BLOB))))) ORDER BY ((rt0.c1 COLLATE RTRIM)<<(rt1.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM))<=((CAST(rt1.c1 AS BLOB))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)<<(rt1.c3)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<=((CAST(rt1.c1 AS BLOB))))) ORDER BY ((rt0.c1 COLLATE RTRIM)<<(rt1.c3)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c2) ORDER BY rt0.c2 COLLATE RTRIM  NULLS LAST, LIKELY(DISTINCT LIKELY(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY rt0.c2 COLLATE RTRIM  NULLS LAST, LIKELY(DISTINCT LIKELY(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c2) ORDER BY rt0.c2 COLLATE RTRIM  NULLS LAST, LIKELY(DISTINCT LIKELY(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY rt0.c2 COLLATE RTRIM  NULLS LAST, LIKELY(DISTINCT LIKELY(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c2) ORDER BY rt0.c2 COLLATE RTRIM  NULLS LAST, LIKELY(DISTINCT LIKELY(rt0.c2)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((NULL)|(rt0.c1)))/((rt0.c1 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(rt0.c1)))/((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt0 WHERE (((((NULL)|(rt0.c1)))/((rt0.c1 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(rt0.c1)))/((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt0 WHERE (((((NULL)|(rt0.c1)))/((rt0.c1 IN ())))) ORDER BY NULL  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM rt1, v0 WHERE (((CASE WHEN rt1.c5 THEN v0.c0 END) NOT BETWEEN (CASE rt1.c5  WHEN rt1.c1 THEN v0.c1 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END) AND (((rt1.c3)==(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c5 THEN v0.c0 END) NOT BETWEEN (CASE rt1.c5  WHEN rt1.c1 THEN v0.c1 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END) AND (((rt1.c3)==(rt1.c0))))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((CASE WHEN rt1.c5 THEN v0.c0 END) NOT BETWEEN (CASE rt1.c5  WHEN rt1.c1 THEN v0.c1 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END) AND (((rt1.c3)==(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c5 THEN v0.c0 END) NOT BETWEEN (CASE rt1.c5  WHEN rt1.c1 THEN v0.c1 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END) AND (((rt1.c3)==(rt1.c0))))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((CASE WHEN rt1.c5 THEN v0.c0 END) NOT BETWEEN (CASE rt1.c5  WHEN rt1.c1 THEN v0.c1 WHEN v0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END) AND (((rt1.c3)==(rt1.c0)))));
SELECT * FROM rt1 WHERE (CAST(0.17393593604370794 AS REAL)) ORDER BY 773408819  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.17393593604370794 AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY 773408819  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(0.17393593604370794 AS REAL)) ORDER BY 773408819  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.17393593604370794 AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY 773408819  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (CASE WHEN (((rt1.c1, rt0.c2, v0.c0))<=((v0.c0, '1104282920', rt0.c1))) THEN ((v0.c2)GLOB(v0.c2)) WHEN CASE x'831a'  WHEN rt1.c0 THEN rt0.c1 ELSE '46' END THEN ((rt1.c4)-(rt1.c5)) WHEN TRIM(rt1.c0) THEN LIKELY(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c1, rt0.c2, v0.c0))<=((v0.c0, '1104282920', rt0.c1))) THEN ((v0.c2)GLOB(v0.c2)) WHEN CASE x'831a'  WHEN rt1.c0 THEN rt0.c1 ELSE '46' END THEN ((rt1.c4)-(rt1.c5)) WHEN TRIM(rt1.c0) THEN LIKELY(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (CASE WHEN (((rt1.c1, rt0.c2, v0.c0))<=((v0.c0, '1104282920', rt0.c1))) THEN ((v0.c2)GLOB(v0.c2)) WHEN CASE x'831a'  WHEN rt1.c0 THEN rt0.c1 ELSE '46' END THEN ((rt1.c4)-(rt1.c5)) WHEN TRIM(rt1.c0) THEN LIKELY(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c1, rt0.c2, v0.c0))<=((v0.c0, '1104282920', rt0.c1))) THEN ((v0.c2)GLOB(v0.c2)) WHEN CASE x'831a'  WHEN rt1.c0 THEN rt0.c1 ELSE '46' END THEN ((rt1.c4)-(rt1.c5)) WHEN TRIM(rt1.c0) THEN LIKELY(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (CASE WHEN (((rt1.c1, rt0.c2, v0.c0))<=((v0.c0, '1104282920', rt0.c1))) THEN ((v0.c2)GLOB(v0.c2)) WHEN CASE x'831a'  WHEN rt1.c0 THEN rt0.c1 ELSE '46' END THEN ((rt1.c4)-(rt1.c5)) WHEN TRIM(rt1.c0) THEN LIKELY(DISTINCT rt0.c2) END);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((rt1.c5)>=(v0.c2)))IS NOT(rt1.c2 COLLATE NOCASE))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)>=(v0.c2)))IS NOT(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2 DESC);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((rt1.c5)>=(v0.c2)))IS NOT(rt1.c2 COLLATE NOCASE))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)>=(v0.c2)))IS NOT(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c2 DESC);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((rt1.c5)>=(v0.c2)))IS NOT(rt1.c2 COLLATE NOCASE))) ORDER BY rt1.c2 DESC;
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE ((rt1.c2)IS(rt1.c4))  WHEN (+ (rt1.c2)) THEN ABS(rt1.c4) WHEN CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN 0.472423056211703 WHEN rt1.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c3)) WHEN ((v0.c0)>>(rt1.c2)) THEN json_insert(rt1.c2, rt1.c0, v0.c0, rt1.c2, rt1.c5) END) ORDER BY (((rt1.c3)) BETWEEN (('' COLLATE RTRIM)) AND ((((rt1.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)IS(rt1.c4))  WHEN (+ (rt1.c2)) THEN ABS(rt1.c4) WHEN CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN 0.472423056211703 WHEN rt1.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c3)) WHEN ((v0.c0)>>(rt1.c2)) THEN json_insert(rt1.c2, rt1.c0, v0.c0, rt1.c2, rt1.c5) END) IS TRUE)  as count FROM v0, rt1 ORDER BY (((rt1.c3)) BETWEEN (('' COLLATE RTRIM)) AND ((((rt1.c4) ISNULL)))));
SELECT COUNT(*) FROM v0, rt1 WHERE (CASE ((rt1.c2)IS(rt1.c4))  WHEN (+ (rt1.c2)) THEN ABS(rt1.c4) WHEN CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN 0.472423056211703 WHEN rt1.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c3)) WHEN ((v0.c0)>>(rt1.c2)) THEN json_insert(rt1.c2, rt1.c0, v0.c0, rt1.c2, rt1.c5) END) ORDER BY (((rt1.c3)) BETWEEN (('' COLLATE RTRIM)) AND ((((rt1.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)IS(rt1.c4))  WHEN (+ (rt1.c2)) THEN ABS(rt1.c4) WHEN CASE WHEN rt1.c0 THEN v0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN 0.472423056211703 WHEN rt1.c3 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c3)) WHEN ((v0.c0)>>(rt1.c2)) THEN json_insert(rt1.c2, rt1.c0, v0.c0, rt1.c2, rt1.c5) END) IS TRUE)  as count FROM v0, rt1 ORDER BY (((rt1.c3)) BETWEEN (('' COLLATE RTRIM)) AND ((((rt1.c4) ISNULL)))));
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)LIKE(v0.c1))  WHEN ((v0.c1) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) ELSE CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END END) ORDER BY ((((((((v0.c1)AND(ROUND(v0.c0, v0.c2))))OR(((v0.c2) IS FALSE))))AND(((v0.c2) IS TRUE))))AND(((v0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)LIKE(v0.c1))  WHEN ((v0.c1) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) ELSE CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END END) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c1)AND(ROUND(v0.c0, v0.c2))))OR(((v0.c2) IS FALSE))))AND(((v0.c2) IS TRUE))))AND(((v0.c0) ISNULL))) ASC);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)LIKE(v0.c1))  WHEN ((v0.c1) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) ELSE CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END END) ORDER BY ((((((((v0.c1)AND(ROUND(v0.c0, v0.c2))))OR(((v0.c2) IS FALSE))))AND(((v0.c2) IS TRUE))))AND(((v0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)LIKE(v0.c1))  WHEN ((v0.c1) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) ELSE CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END END) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c1)AND(ROUND(v0.c0, v0.c2))))OR(((v0.c2) IS FALSE))))AND(((v0.c2) IS TRUE))))AND(((v0.c0) ISNULL))) ASC);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)LIKE(v0.c1))  WHEN ((v0.c1) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) ELSE CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END END) ORDER BY ((((((((v0.c1)AND(ROUND(v0.c0, v0.c2))))OR(((v0.c2) IS FALSE))))AND(((v0.c2) IS TRUE))))AND(((v0.c0) ISNULL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT rt0.c2, rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT rt0.c2, rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c2, rt0.c1) AS BLOB));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE v0.c1 COLLATE BINARY  WHEN ((((rt0.c0)AND(v0.c2)))AND(v0.c1)) THEN ((rt0.c1)!=(rt0.c2)) END WHERE (v0.c0) ORDER BY 0.053771883335946624;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE v0.c1 COLLATE BINARY  WHEN ((((rt0.c0)AND(v0.c2)))AND(v0.c1)) THEN ((rt0.c1)!=(rt0.c2)) END ORDER BY 0.053771883335946624);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE v0.c1 COLLATE BINARY  WHEN ((((rt0.c0)AND(v0.c2)))AND(v0.c1)) THEN ((rt0.c1)!=(rt0.c2)) END WHERE (v0.c0) ORDER BY 0.053771883335946624;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE v0.c1 COLLATE BINARY  WHEN ((((rt0.c0)AND(v0.c2)))AND(v0.c1)) THEN ((rt0.c1)!=(rt0.c2)) END ORDER BY 0.053771883335946624);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE v0.c1 COLLATE BINARY  WHEN ((((rt0.c0)AND(v0.c2)))AND(v0.c1)) THEN ((rt0.c1)!=(rt0.c2)) END WHERE (v0.c0) ORDER BY 0.053771883335946624;
SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) WHERE ((NOT (NULL))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((((0X6cb7cda1))>=((NULL)))) AND (((((v0.c2)OR(rt0.c2)))OR(''))))  NULLS FIRST, rt0.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((((0X6cb7cda1))>=((NULL)))) AND (((((v0.c2)OR(rt0.c2)))OR(''))))  NULLS FIRST, rt0.c2 COLLATE NOCASE ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) WHERE ((NOT (NULL))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((((0X6cb7cda1))>=((NULL)))) AND (((((v0.c2)OR(rt0.c2)))OR(''))))  NULLS FIRST, rt0.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((((0X6cb7cda1))>=((NULL)))) AND (((((v0.c2)OR(rt0.c2)))OR(''))))  NULLS FIRST, rt0.c2 COLLATE NOCASE ASC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON CAST(v0.c0 AS INTEGER) WHERE ((NOT (NULL))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((((0X6cb7cda1))>=((NULL)))) AND (((((v0.c2)OR(rt0.c2)))OR(''))))  NULLS FIRST, rt0.c2 COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM) ORDER BY COALESCE(LIKELIHOOD(DISTINCT NULL, 0.733478389900469), (~ (rt1.c1))), ((((rt1.c4) IS TRUE))>=(((rt1.c5) NOT NULL))) DESC, (- (rt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(LIKELIHOOD(DISTINCT NULL, 0.733478389900469), (~ (rt1.c1))), ((((rt1.c4) IS TRUE))>=(((rt1.c5) NOT NULL))) DESC, (- (rt1.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM) ORDER BY COALESCE(LIKELIHOOD(DISTINCT NULL, 0.733478389900469), (~ (rt1.c1))), ((((rt1.c4) IS TRUE))>=(((rt1.c5) NOT NULL))) DESC, (- (rt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(LIKELIHOOD(DISTINCT NULL, 0.733478389900469), (~ (rt1.c1))), ((((rt1.c4) IS TRUE))>=(((rt1.c5) NOT NULL))) DESC, (- (rt1.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM) ORDER BY COALESCE(LIKELIHOOD(DISTINCT NULL, 0.733478389900469), (~ (rt1.c1))), ((((rt1.c4) IS TRUE))>=(((rt1.c5) NOT NULL))) DESC, (- (rt1.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c5)<(((rt1.c4)<>(rt1.c2))))) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL)))  WHEN (~ (rt1.c5)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5)<(((rt1.c4)!=(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL)))  WHEN (~ (rt1.c5)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c5)<(((rt1.c4)<>(rt1.c2))))) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL)))  WHEN (~ (rt1.c5)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5)<(((rt1.c4)!=(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL)))  WHEN (~ (rt1.c5)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c5)<(((rt1.c4)<>(rt1.c2))))) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((NULL)))  WHEN (~ (rt1.c5)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)) END ASC;
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN rt0 ON '-1067466167' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON '-1067466167');
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN rt0 ON '-1067466167' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON '-1067466167');
SELECT ALL COUNT(*) FROM rt1, v0 LEFT OUTER JOIN rt0 ON '-1067466167' WHERE (rt0.c0);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0) ORDER BY v0.c1  NULLS LAST, LIKELY(DISTINCT 0xffffffffd9a18bd9) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c1  NULLS LAST, LIKELY(DISTINCT 0xffffffffd9a18bd9) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0) ORDER BY v0.c1  NULLS LAST, LIKELY(DISTINCT 0xffffffffd9a18bd9) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c1  NULLS LAST, LIKELY(DISTINCT 0xffffffffd9a18bd9) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (rt0.c0) ORDER BY v0.c1  NULLS LAST, LIKELY(DISTINCT 0xffffffffd9a18bd9) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN rt1 WHERE (CAST(((((((((v0.c1)OR(NULL)))OR(v0.c2)))AND(v0.c0)))OR(rt0.c2)) AS TEXT)) ORDER BY TRIM(DISTINCT (((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), v0.c2 COLLATE NOCASE) DESC, (((rt1.c5, v0.c1, rt0.c2)) NOT BETWEEN ((CAST('? ' AS INTEGER), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN 1630226832 WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c5 END, (((rt0.c2))>=((rt0.c0))))) AND ((CASE v0.c1  WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c0 END, LIKELY(DISTINCT NULL), (((rt0.c2))>((rt1.c4)))))) DESC  NULLS LAST, CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c1)OR(NULL)))OR(v0.c2)))AND(v0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1 ORDER BY TRIM(DISTINCT (((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), v0.c2 COLLATE NOCASE) DESC, (((rt1.c5, v0.c1, rt0.c2)) NOT BETWEEN ((CAST('? ' AS INTEGER), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN 1630226832 WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c5 END, (((rt0.c2))>=((rt0.c0))))) AND ((CASE v0.c1  WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c0 END, LIKELY(DISTINCT NULL), (((rt0.c2))>((rt1.c4)))))) DESC  NULLS LAST, CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN rt1 WHERE (CAST(((((((((v0.c1)OR(NULL)))OR(v0.c2)))AND(v0.c0)))OR(rt0.c2)) AS TEXT)) ORDER BY TRIM(DISTINCT (((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), v0.c2 COLLATE NOCASE) DESC, (((rt1.c5, v0.c1, rt0.c2)) NOT BETWEEN ((CAST('? ' AS INTEGER), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN 1630226832 WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c5 END, (((rt0.c2))>=((rt0.c0))))) AND ((CASE v0.c1  WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c0 END, LIKELY(DISTINCT NULL), (((rt0.c2))>((rt1.c4)))))) DESC  NULLS LAST, CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c1)OR(NULL)))OR(v0.c2)))AND(v0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1 ORDER BY TRIM(DISTINCT (((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), v0.c2 COLLATE NOCASE) DESC, (((rt1.c5, v0.c1, rt0.c2)) NOT BETWEEN ((CAST('? ' AS INTEGER), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN 1630226832 WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c5 END, (((rt0.c2))>=((rt0.c0))))) AND ((CASE v0.c1  WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c0 END, LIKELY(DISTINCT NULL), (((rt0.c2))>((rt1.c4)))))) DESC  NULLS LAST, CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 NATURAL JOIN rt1 WHERE (CAST(((((((((v0.c1)OR(NULL)))OR(v0.c2)))AND(v0.c0)))OR(rt0.c2)) AS TEXT)) ORDER BY TRIM(DISTINCT (((v0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), v0.c2 COLLATE NOCASE) DESC, (((rt1.c5, v0.c1, rt0.c2)) NOT BETWEEN ((CAST('? ' AS INTEGER), CASE WHEN rt0.c0 THEN rt0.c2 WHEN v0.c2 THEN 1630226832 WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c5 END, (((rt0.c2))>=((rt0.c0))))) AND ((CASE v0.c1  WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c0 END, LIKELY(DISTINCT NULL), (((rt0.c2))>((rt1.c4)))))) DESC  NULLS LAST, CAST(NULL AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))AND(((rt0.c2)<<(v0.c1)))))AND(0.14437899243831875)))OR(((((rt1.c0)OR('-974410644')))AND(rt0.c1)))))AND(((((rt1.c5)AND('-213837053')))AND(rt1.c2)))) FULL OUTER JOIN rt1 ON ((((v0.c0)IS NOT(rt1.c0))) ISNULL) WHERE (x'f5ef');
SELECT SUM(count) FROM (SELECT ((x'f5ef') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))AND(((rt0.c2)<<(v0.c1)))))AND(0.14437899243831875)))OR(((((rt1.c0)OR('-974410644')))AND(rt0.c1)))))AND(((((rt1.c5)AND('-213837053')))AND(rt1.c2)))) FULL OUTER JOIN rt1 ON ((((v0.c0)IS NOT(rt1.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))AND(((rt0.c2)<<(v0.c1)))))AND(0.14437899243831875)))OR(((((rt1.c0)OR('-974410644')))AND(rt0.c1)))))AND(((((rt1.c5)AND('-213837053')))AND(rt1.c2)))) FULL OUTER JOIN rt1 ON ((((v0.c0)IS NOT(rt1.c0))) ISNULL) WHERE (x'f5ef');
SELECT SUM(count) FROM (SELECT ((x'f5ef') IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))AND(((rt0.c2)<<(v0.c1)))))AND(0.14437899243831875)))OR(((((rt1.c0)OR('-974410644')))AND(rt0.c1)))))AND(((((rt1.c5)AND('-213837053')))AND(rt1.c2)))) FULL OUTER JOIN rt1 ON ((((v0.c0)IS NOT(rt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((((((((('')OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c3))))) ORDER BY (('BD4 V?' COLLATE RTRIM) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('')OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (('BD4 V?' COLLATE RTRIM) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((((((((('')OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c3))))) ORDER BY (('BD4 V?' COLLATE RTRIM) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('')OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (('BD4 V?' COLLATE RTRIM) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- ((((((((('')OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c3))))) ORDER BY (('BD4 V?' COLLATE RTRIM) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((NULL, ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (v0.c1 IN ())))<(((('')OR(v0.c2)), NULLIF(v0.c0, v0.c0), (((('Y,n鼥')OR(v0.c2)))AND(v0.c0)))))) ORDER BY ((((((NULL)OR(v0.c1)))AND(v0.c1)))==(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (v0.c1 IN ())))<(((('')OR(v0.c2)), NULLIF(v0.c0, v0.c0), (((('Y,n鼥')OR(v0.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)OR(v0.c1)))AND(v0.c1)))=(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((NULL, ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (v0.c1 IN ())))<(((('')OR(v0.c2)), NULLIF(v0.c0, v0.c0), (((('Y,n鼥')OR(v0.c2)))AND(v0.c0)))))) ORDER BY ((((((NULL)OR(v0.c1)))AND(v0.c1)))==(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (v0.c1 IN ())))<(((('')OR(v0.c2)), NULLIF(v0.c0, v0.c0), (((('Y,n鼥')OR(v0.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)OR(v0.c1)))AND(v0.c1)))=(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((NULL, ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)), (v0.c1 IN ())))<(((('')OR(v0.c2)), NULLIF(v0.c0, v0.c0), (((('Y,n鼥')OR(v0.c2)))AND(v0.c0)))))) ORDER BY ((((((NULL)OR(v0.c1)))AND(v0.c1)))==(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c4 AS REAL))<<((rt1.c5 IN ()))) LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE (CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2) END) ORDER BY (((((rt1.c5))>((rt1.c2)))) ISNULL) ASC, x'6df8', (((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c1, v0.c0, rt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c4 AS REAL))<<((rt1.c5 IN ()))) LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) ORDER BY (((((rt1.c5))>((rt1.c2)))) ISNULL) ASC, x'6df8', (((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c1, v0.c0, rt0.c1))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c4 AS REAL))<<((rt1.c5 IN ()))) LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE (CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2) END) ORDER BY (((((rt1.c5))>((rt1.c2)))) ISNULL) ASC, x'6df8', (((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c1, v0.c0, rt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c4 AS REAL))<<((rt1.c5 IN ()))) LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) ORDER BY (((((rt1.c5))>((rt1.c2)))) ISNULL) ASC, x'6df8', (((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c1, v0.c0, rt0.c1))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((CAST(rt1.c4 AS REAL))<<((rt1.c5 IN ()))) LEFT OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE (CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2) END) ORDER BY (((((rt1.c5))>((rt1.c2)))) ISNULL) ASC, x'6df8', (((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c4, rt1.c2)) AND ((rt1.c1, v0.c0, rt0.c1))) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c1)))/(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(v0.c1)))/(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c1)))/(((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(v0.c1)))/(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c1)))/(((v0.c0) NOTNULL))));
SELECT * FROM rt0, rt1 WHERE (((((rt1.c4)LIKE(rt1.c0)))<(rt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(rt1.c5 AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)LIKE(rt1.c0)))<(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c5 AS TEXT)) NOTNULL)  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c4)LIKE(rt1.c0)))<(rt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(rt1.c5 AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)LIKE(rt1.c0)))<(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c5 AS TEXT)) NOTNULL)  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c4)LIKE(rt1.c0)))<(rt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(rt1.c5 AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c5)+(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)+(rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c5)+(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)+(rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c5)+(rt1.c3)) IN ()));
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c2) ISNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((v0.c1)) BETWEEN ((CASE WHEN rt1.c5 THEN v0.c2 ELSE rt1.c2 END)) AND ((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((CASE WHEN rt1.c5 THEN v0.c2 ELSE rt1.c2 END)) AND ((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((v0.c1)) BETWEEN ((CASE WHEN rt1.c5 THEN v0.c2 ELSE rt1.c2 END)) AND ((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((CASE WHEN rt1.c5 THEN v0.c2 ELSE rt1.c2 END)) AND ((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE ((((v0.c1)) BETWEEN ((CASE WHEN rt1.c5 THEN v0.c2 ELSE rt1.c2 END)) AND ((((((rt0.c2)OR(rt1.c1)))OR(rt0.c2))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT rt1.c0, (rt1.c3 IN ())) WHERE (((v0.c0)!=(((v0.c1)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<>(((v0.c1)OR(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT rt1.c0, (rt1.c3 IN ())));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT rt1.c0, (rt1.c3 IN ())) WHERE (((v0.c0)!=(((v0.c1)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<>(((v0.c1)OR(v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT rt1.c0, (rt1.c3 IN ())));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt1 ON NULLIF(DISTINCT rt1.c0, (rt1.c3 IN ())) WHERE (((v0.c0)!=(((v0.c1)OR(v0.c0)))));
SELECT * FROM rt0, rt1, v0 WHERE (((((rt1.c4)LIKE(rt1.c5)))OR(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)LIKE(rt1.c5)))OR(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((rt1.c4)LIKE(rt1.c5)))OR(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)LIKE(rt1.c5)))OR(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((rt1.c4)LIKE(rt1.c5)))OR(rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c3)>>(v0.c1)))))AND(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOT NULL))OR(((rt1.c3)>>(v0.c1)))))AND(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c3)>>(v0.c1)))))AND(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOT NULL))OR(((rt1.c3)>>(v0.c1)))))AND(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c3)>>(v0.c1)))))AND(rt1.c4 COLLATE NOCASE)));
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((((((rt1.c1)OR(x'd3a0')))AND(v0.c2)))OR(rt0.c2)))AND(rt1.c1)) COLLATE RTRIM WHERE ((x'886f' IN (((rt1.c1) IS FALSE)))) ORDER BY ((((((v0.c1))==((NULL))), '', CAST(rt1.c4 AS NUMERIC)))==((((rt1.c5) IS TRUE), CASE rt0.c1  WHEN rt1.c5 THEN '835946379' ELSE '9\n' END, CAST(rt1.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT (((x'886f' IN (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((((((rt1.c1)OR(x'd3a0')))AND(v0.c2)))OR(rt0.c2)))AND(rt1.c1)) COLLATE RTRIM ORDER BY ((((((v0.c1))==((NULL))), '', CAST(rt1.c4 AS NUMERIC)))=((((rt1.c5) IS TRUE), CASE rt0.c1  WHEN rt1.c5 THEN '835946379' ELSE '9\n' END, CAST(rt1.c0 AS TEXT)))) DESC);
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((((((rt1.c1)OR(x'd3a0')))AND(v0.c2)))OR(rt0.c2)))AND(rt1.c1)) COLLATE RTRIM WHERE ((x'886f' IN (((rt1.c1) IS FALSE)))) ORDER BY ((((((v0.c1))==((NULL))), '', CAST(rt1.c4 AS NUMERIC)))==((((rt1.c5) IS TRUE), CASE rt0.c1  WHEN rt1.c5 THEN '835946379' ELSE '9\n' END, CAST(rt1.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT (((x'886f' IN (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((((((rt1.c1)OR(x'd3a0')))AND(v0.c2)))OR(rt0.c2)))AND(rt1.c1)) COLLATE RTRIM ORDER BY ((((((v0.c1))==((NULL))), '', CAST(rt1.c4 AS NUMERIC)))=((((rt1.c5) IS TRUE), CASE rt0.c1  WHEN rt1.c5 THEN '835946379' ELSE '9\n' END, CAST(rt1.c0 AS TEXT)))) DESC);
SELECT * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON ((((((((rt1.c1)OR(x'd3a0')))AND(v0.c2)))OR(rt0.c2)))AND(rt1.c1)) COLLATE RTRIM WHERE ((x'886f' IN (((rt1.c1) IS FALSE)))) ORDER BY ((((((v0.c1))==((NULL))), '', CAST(rt1.c4 AS NUMERIC)))==((((rt1.c5) IS TRUE), CASE rt0.c1  WHEN rt1.c5 THEN '835946379' ELSE '9\n' END, CAST(rt1.c0 AS TEXT)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c1 IN (rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (CAST('-1465432310' AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST('-1465432310' AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST('-1465432310' AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST('-1465432310' AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST('-1465432310' AS INTEGER) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE (LIKELIHOOD((NOT (rt1.c1)), 0.5003370038594772));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((NOT (rt1.c1)), 0.5003370038594772)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (LIKELIHOOD((NOT (rt1.c1)), 0.5003370038594772));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((NOT (rt1.c1)), 0.5003370038594772)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (LIKELIHOOD((NOT (rt1.c1)), 0.5003370038594772));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CASE WHEN rt1.c4 THEN v0.c0 ELSE rt1.c5 END AS REAL)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c4 THEN v0.c0 ELSE rt1.c5 END AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CASE WHEN rt1.c4 THEN v0.c0 ELSE rt1.c5 END AS REAL)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c4 THEN v0.c0 ELSE rt1.c5 END AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(CASE WHEN rt1.c4 THEN v0.c0 ELSE rt1.c5 END AS REAL)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)&(rt0.c1 COLLATE NOCASE))) ORDER BY (('')OR(((rt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)&(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (('')OR(((rt0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)&(rt0.c1 COLLATE NOCASE))) ORDER BY (('')OR(((rt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)&(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (('')OR(((rt0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)&(rt0.c1 COLLATE NOCASE))) ORDER BY (('')OR(((rt0.c0) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) NOT NULL))%(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL))%(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) NOT NULL))%(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) NOT NULL))%(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) NOT NULL))%(CAST(v0.c0 AS BLOB))));
SELECT * FROM v0 WHERE ((NOT (NULLIF(v0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(v0.c0, v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (NULLIF(v0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(v0.c0, v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (NULLIF(v0.c0, v0.c2))));
SELECT ALL * FROM rt0, rt1 WHERE (CASE 0.1368472434271374  WHEN ((rt1.c2)|(rt0.c0)) THEN rt1.c0 END) ORDER BY ((((((((CAST('-668275298' AS NUMERIC))AND(((rt0.c2) IS TRUE))))AND((x'6424' IN (rt0.c1)))))OR((rt1.c1 IN ()))))AND(((rt0.c2)OR(rt1.c0))))  NULLS LAST, ((((((((rt1.c2)OR((((rt1.c3, NULL, 1.7976931348623157E308)) NOT BETWEEN ((-2072237558, rt1.c0, rt1.c1)) AND ((0.5879513791264055, rt0.c2, rt1.c1))))))AND(((rt0.c2)||(rt1.c4)))))OR(rt1.c4)))OR((rt0.c2 IN (rt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.1368472434271374  WHEN ((rt1.c2)|(rt0.c0)) THEN rt1.c0 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((((CAST('-668275298' AS NUMERIC))AND(((rt0.c2) IS TRUE))))AND((x'6424' IN (rt0.c1)))))OR((rt1.c1 IN ()))))AND(((rt0.c2)OR(rt1.c0))))  NULLS LAST, ((((((((rt1.c2)OR((((rt1.c3, NULL, 1.7976931348623157E308)) NOT BETWEEN ((-2072237558, rt1.c0, rt1.c1)) AND ((0.5879513791264055, rt0.c2, rt1.c1))))))AND(((rt0.c2)||(rt1.c4)))))OR(rt1.c4)))OR((rt0.c2 IN (rt1.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE 0.1368472434271374  WHEN ((rt1.c2)|(rt0.c0)) THEN rt1.c0 END) ORDER BY ((((((((CAST('-668275298' AS NUMERIC))AND(((rt0.c2) IS TRUE))))AND((x'6424' IN (rt0.c1)))))OR((rt1.c1 IN ()))))AND(((rt0.c2)OR(rt1.c0))))  NULLS LAST, ((((((((rt1.c2)OR((((rt1.c3, NULL, 1.7976931348623157E308)) NOT BETWEEN ((-2072237558, rt1.c0, rt1.c1)) AND ((0.5879513791264055, rt0.c2, rt1.c1))))))AND(((rt0.c2)||(rt1.c4)))))OR(rt1.c4)))OR((rt0.c2 IN (rt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.1368472434271374  WHEN ((rt1.c2)|(rt0.c0)) THEN rt1.c0 END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((((CAST('-668275298' AS NUMERIC))AND(((rt0.c2) IS TRUE))))AND((x'6424' IN (rt0.c1)))))OR((rt1.c1 IN ()))))AND(((rt0.c2)OR(rt1.c0))))  NULLS LAST, ((((((((rt1.c2)OR((((rt1.c3, NULL, 1.7976931348623157E308)) NOT BETWEEN ((-2072237558, rt1.c0, rt1.c1)) AND ((0.5879513791264055, rt0.c2, rt1.c1))))))AND(((rt0.c2)||(rt1.c4)))))OR(rt1.c4)))OR((rt0.c2 IN (rt1.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE 0.1368472434271374  WHEN ((rt1.c2)|(rt0.c0)) THEN rt1.c0 END) ORDER BY ((((((((CAST('-668275298' AS NUMERIC))AND(((rt0.c2) IS TRUE))))AND((x'6424' IN (rt0.c1)))))OR((rt1.c1 IN ()))))AND(((rt0.c2)OR(rt1.c0))))  NULLS LAST, ((((((((rt1.c2)OR((((rt1.c3, NULL, 1.7976931348623157E308)) NOT BETWEEN ((-2072237558, rt1.c0, rt1.c1)) AND ((0.5879513791264055, rt0.c2, rt1.c1))))))AND(((rt0.c2)||(rt1.c4)))))OR(rt1.c4)))OR((rt0.c2 IN (rt1.c3)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((((rt1.c1)OR('%MQEe')))OR(rt1.c0)))) WHERE (((CAST(rt1.c2 AS INTEGER))AND(((rt0.c0) NOTNULL)))) ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c2))) AND ((~ (rt1.c3)))), (NOT ((+ (rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((((rt1.c1)OR('%MQEe')))OR(rt1.c0)))) ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c2))) AND ((~ (rt1.c3)))), (NOT ((+ (rt1.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((((rt1.c1)OR('%MQEe')))OR(rt1.c0)))) WHERE (((CAST(rt1.c2 AS INTEGER))AND(((rt0.c0) NOTNULL)))) ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c2))) AND ((~ (rt1.c3)))), (NOT ((+ (rt1.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS INTEGER))AND(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((((rt1.c1)OR('%MQEe')))OR(rt1.c0)))) ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c2))) AND ((~ (rt1.c3)))), (NOT ((+ (rt1.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (NOT (((((rt1.c1)OR('%MQEe')))OR(rt1.c0)))) WHERE (((CAST(rt1.c2 AS INTEGER))AND(((rt0.c0) NOTNULL)))) ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c2))) AND ((~ (rt1.c3)))), (NOT ((+ (rt1.c4))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((0.19744513071088865) ISNULL)) ORDER BY rt0.c1 DESC, ((rt0.c2 COLLATE NOCASE)-((((rt0.c0))<((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.19744513071088865) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC, ((rt0.c2 COLLATE NOCASE)-((((rt0.c0))<((rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE (((0.19744513071088865) ISNULL)) ORDER BY rt0.c1 DESC, ((rt0.c2 COLLATE NOCASE)-((((rt0.c0))<((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.19744513071088865) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC, ((rt0.c2 COLLATE NOCASE)-((((rt0.c0))<((rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE (((0.19744513071088865) ISNULL)) ORDER BY rt0.c1 DESC, ((rt0.c2 COLLATE NOCASE)-((((rt0.c0))<((rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c5) BETWEEN ((((rt0.c0))<=(('Ds^Sn')))) AND (((rt0.c0) NOT BETWEEN (-9.72907568E8) AND (rt0.c2))))) ORDER BY (~ (CASE rt0.c2  WHEN rt1.c5 THEN rt0.c0 ELSE rt1.c1 END))  NULLS FIRST, CASE ABS(rt0.c1)  WHEN ((((rt1.c1)AND(rt1.c3)))OR(rt0.c0)) THEN rtreenode(rt1.c0, rt1.c3) ELSE ((((((((((((rt1.c1)OR(rt1.c0)))AND(NULL)))AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c1)) END  NULLS FIRST, CAST(((rt0.c2)IS NOT(rt1.c5)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) BETWEEN ((((rt0.c0))<=(('Ds^Sn')))) AND (((rt0.c0) NOT BETWEEN (-9.72907568E8) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (CASE rt0.c2  WHEN rt1.c5 THEN rt0.c0 ELSE rt1.c1 END))  NULLS FIRST, CASE ABS(rt0.c1)  WHEN ((((rt1.c1)AND(rt1.c3)))OR(rt0.c0)) THEN rtreenode(rt1.c0, rt1.c3) ELSE ((((((((((((rt1.c1)OR(rt1.c0)))AND(NULL)))AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c1)) END  NULLS FIRST, CAST(((rt0.c2)IS NOT(rt1.c5)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c5) BETWEEN ((((rt0.c0))<=(('Ds^Sn')))) AND (((rt0.c0) NOT BETWEEN (-9.72907568E8) AND (rt0.c2))))) ORDER BY (~ (CASE rt0.c2  WHEN rt1.c5 THEN rt0.c0 ELSE rt1.c1 END))  NULLS FIRST, CASE ABS(rt0.c1)  WHEN ((((rt1.c1)AND(rt1.c3)))OR(rt0.c0)) THEN rtreenode(rt1.c0, rt1.c3) ELSE ((((((((((((rt1.c1)OR(rt1.c0)))AND(NULL)))AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c1)) END  NULLS FIRST, CAST(((rt0.c2)IS NOT(rt1.c5)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) BETWEEN ((((rt0.c0))<=(('Ds^Sn')))) AND (((rt0.c0) NOT BETWEEN (-9.72907568E8) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (CASE rt0.c2  WHEN rt1.c5 THEN rt0.c0 ELSE rt1.c1 END))  NULLS FIRST, CASE ABS(rt0.c1)  WHEN ((((rt1.c1)AND(rt1.c3)))OR(rt0.c0)) THEN rtreenode(rt1.c0, rt1.c3) ELSE ((((((((((((rt1.c1)OR(rt1.c0)))AND(NULL)))AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c1)) END  NULLS FIRST, CAST(((rt0.c2)IS NOT(rt1.c5)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c5) BETWEEN ((((rt0.c0))<=(('Ds^Sn')))) AND (((rt0.c0) NOT BETWEEN (-9.72907568E8) AND (rt0.c2))))) ORDER BY (~ (CASE rt0.c2  WHEN rt1.c5 THEN rt0.c0 ELSE rt1.c1 END))  NULLS FIRST, CASE ABS(rt0.c1)  WHEN ((((rt1.c1)AND(rt1.c3)))OR(rt0.c0)) THEN rtreenode(rt1.c0, rt1.c3) ELSE ((((((((((((rt1.c1)OR(rt1.c0)))AND(NULL)))AND(rt1.c4)))AND(rt0.c0)))OR(rt1.c4)))AND(rt1.c1)) END  NULLS FIRST, CAST(((rt0.c2)IS NOT(rt1.c5)) AS BLOB)  NULLS FIRST;
SELECT * FROM rt1, v0 WHERE (((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c1)))<>(json_insert(rt1.c5, NULL, v0.c0, rt1.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c1)))!=(json_insert(rt1.c5, NULL, v0.c0, rt1.c0, v0.c1)))) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c1)))<>(json_insert(rt1.c5, NULL, v0.c0, rt1.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c1)))!=(json_insert(rt1.c5, NULL, v0.c0, rt1.c0, v0.c1)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)IS(rt0.c1)))AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c1, rt0.c0))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((0.48419138653902405) ISNULL)) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)IS(rt0.c1)))AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((0.48419138653902405) ISNULL)) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)IS(rt0.c1)))AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c1, rt0.c0))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((0.48419138653902405) ISNULL)) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)IS(rt0.c1)))AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((0.48419138653902405) ISNULL)) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)IS(rt0.c1)))AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c1, rt0.c0))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((0.48419138653902405) ISNULL)) AND (((rt0.c1)<(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)>=(rt0.c1)))AND('')))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (~ (((rt0.c2) ISNULL))), (+ (rt0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(rt0.c1)))AND('')))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c2) ISNULL))), (+ (rt0.c2 COLLATE BINARY)) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)>=(rt0.c1)))AND('')))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (~ (((rt0.c2) ISNULL))), (+ (rt0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(rt0.c1)))AND('')))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (((rt0.c2) ISNULL))), (+ (rt0.c2 COLLATE BINARY)) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)>=(rt0.c1)))AND('')))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (~ (((rt0.c2) ISNULL))), (+ (rt0.c2 COLLATE BINARY)) DESC;
SELECT * FROM v0, rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)LIKE(rt0.c2)))LIKE(rt0.c1 COLLATE RTRIM)) WHERE (((((((((((NULL)OR(rt0.c2)))OR(((rt0.c0)>=(rt1.c4)))))OR((- (rt1.c3)))))AND(rt1.c0 COLLATE NOCASE)))AND(((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))OR(rt1.c4))))) ORDER BY LIKE('~z(P', ((rt0.c2) IS TRUE), '_') DESC  NULLS LAST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)OR(rt0.c2)))OR(((rt0.c0)>=(rt1.c4)))))OR((- (rt1.c3)))))AND(rt1.c0 COLLATE NOCASE)))AND(((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)LIKE(rt0.c2)))LIKE(rt0.c1 COLLATE RTRIM)) ORDER BY LIKE('~z(P', ((rt0.c2) IS TRUE), '_') DESC  NULLS LAST, rt1.c0);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)LIKE(rt0.c2)))LIKE(rt0.c1 COLLATE RTRIM)) WHERE (((((((((((NULL)OR(rt0.c2)))OR(((rt0.c0)>=(rt1.c4)))))OR((- (rt1.c3)))))AND(rt1.c0 COLLATE NOCASE)))AND(((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))OR(rt1.c4))))) ORDER BY LIKE('~z(P', ((rt0.c2) IS TRUE), '_') DESC  NULLS LAST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)OR(rt0.c2)))OR(((rt0.c0)>=(rt1.c4)))))OR((- (rt1.c3)))))AND(rt1.c0 COLLATE NOCASE)))AND(((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)LIKE(rt0.c2)))LIKE(rt0.c1 COLLATE RTRIM)) ORDER BY LIKE('~z(P', ((rt0.c2) IS TRUE), '_') DESC  NULLS LAST, rt1.c0);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1)LIKE(rt0.c2)))LIKE(rt0.c1 COLLATE RTRIM)) WHERE (((((((((((NULL)OR(rt0.c2)))OR(((rt0.c0)>=(rt1.c4)))))OR((- (rt1.c3)))))AND(rt1.c0 COLLATE NOCASE)))AND(((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c3)))OR(NULL)))OR(rt1.c4))))) ORDER BY LIKE('~z(P', ((rt0.c2) IS TRUE), '_') DESC  NULLS LAST, rt1.c0;
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c0 IN ()) IN (((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), (((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), (((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c0 IN ()) IN (((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), (((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN (((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), (((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (((v0.c0 IN ()) IN (((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)), (((rt1.c1)) BETWEEN ((v0.c0)) AND ((rt1.c0))))));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN 0.4688216835234448 WHEN ((0.3309062765548796)IS NOT(rt1.c1)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c5, rt1.c2, NULL))) WHEN ((rt1.c5)>=(rt1.c1)) THEN '2016016362' ELSE ((((rt1.c2)OR(rt1.c1)))AND(rt1.c5)) END) ORDER BY NULL DESC  NULLS LAST, CASE WHEN rt1.c4 THEN rt1.c3 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE RTRIM THEN 0.4688216835234448 WHEN ((0.3309062765548796)IS NOT(rt1.c1)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c5, rt1.c2, NULL))) WHEN ((rt1.c5)>=(rt1.c1)) THEN '2016016362' ELSE ((((rt1.c2)OR(rt1.c1)))AND(rt1.c5)) END) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC  NULLS LAST, CASE WHEN rt1.c4 THEN rt1.c3 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN 0.4688216835234448 WHEN ((0.3309062765548796)IS NOT(rt1.c1)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c5, rt1.c2, NULL))) WHEN ((rt1.c5)>=(rt1.c1)) THEN '2016016362' ELSE ((((rt1.c2)OR(rt1.c1)))AND(rt1.c5)) END) ORDER BY NULL DESC  NULLS LAST, CASE WHEN rt1.c4 THEN rt1.c3 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE RTRIM THEN 0.4688216835234448 WHEN ((0.3309062765548796)IS NOT(rt1.c1)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c5, rt1.c2, NULL))) WHEN ((rt1.c5)>=(rt1.c1)) THEN '2016016362' ELSE ((((rt1.c2)OR(rt1.c1)))AND(rt1.c5)) END) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC  NULLS LAST, CASE WHEN rt1.c4 THEN rt1.c3 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN 0.4688216835234448 WHEN ((0.3309062765548796)IS NOT(rt1.c1)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c5, rt1.c2, NULL))) WHEN ((rt1.c5)>=(rt1.c1)) THEN '2016016362' ELSE ((((rt1.c2)OR(rt1.c1)))AND(rt1.c5)) END) ORDER BY NULL DESC  NULLS LAST, CASE WHEN rt1.c4 THEN rt1.c3 END COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON v0.c1);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON v0.c1);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c1 WHERE (rt0.c1);
SELECT * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT * FROM rt1 WHERE (NULL COLLATE NOCASE) ORDER BY rt1.c0;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(rt1.c1 AS INTEGER)) ORDER BY (((((~ (rt1.c5)))AND(TYPEOF(NULL))))OR(0xffffffffb1f3e5c0)), highlight(rt0.c2, CASE WHEN v0.c1 THEN rt1.c2 END, (((rt1.c0, rt1.c3, rt1.c2))=((rt1.c1, rt1.c4, rt1.c3))), (~ (rt1.c3))) DESC  NULLS FIRST, CASE HEX(rt1.c0)  WHEN (rt1.c5 IN (v0.c0)) THEN ((((((((rt1.c0)OR(rt1.c5)))AND(v0.c0)))AND(v0.c2)))OR(rt0.c2)) ELSE UNLIKELY(DISTINCT rt1.c1) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS INTEGER)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((((~ (rt1.c5)))AND(TYPEOF(NULL))))OR(0xffffffffb1f3e5c0)), highlight(rt0.c2, CASE WHEN v0.c1 THEN rt1.c2 END, (((rt1.c0, rt1.c3, rt1.c2))=((rt1.c1, rt1.c4, rt1.c3))), (~ (rt1.c3))) DESC  NULLS FIRST, CASE HEX(rt1.c0)  WHEN (rt1.c5 IN (v0.c0)) THEN ((((((((rt1.c0)OR(rt1.c5)))AND(v0.c0)))AND(v0.c2)))OR(rt0.c2)) ELSE UNLIKELY(DISTINCT rt1.c1) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(rt1.c1 AS INTEGER)) ORDER BY (((((~ (rt1.c5)))AND(TYPEOF(NULL))))OR(0xffffffffb1f3e5c0)), highlight(rt0.c2, CASE WHEN v0.c1 THEN rt1.c2 END, (((rt1.c0, rt1.c3, rt1.c2))=((rt1.c1, rt1.c4, rt1.c3))), (~ (rt1.c3))) DESC  NULLS FIRST, CASE HEX(rt1.c0)  WHEN (rt1.c5 IN (v0.c0)) THEN ((((((((rt1.c0)OR(rt1.c5)))AND(v0.c0)))AND(v0.c2)))OR(rt0.c2)) ELSE UNLIKELY(DISTINCT rt1.c1) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS INTEGER)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((((~ (rt1.c5)))AND(TYPEOF(NULL))))OR(0xffffffffb1f3e5c0)), highlight(rt0.c2, CASE WHEN v0.c1 THEN rt1.c2 END, (((rt1.c0, rt1.c3, rt1.c2))=((rt1.c1, rt1.c4, rt1.c3))), (~ (rt1.c3))) DESC  NULLS FIRST, CASE HEX(rt1.c0)  WHEN (rt1.c5 IN (v0.c0)) THEN ((((((((rt1.c0)OR(rt1.c5)))AND(v0.c0)))AND(v0.c2)))OR(rt0.c2)) ELSE UNLIKELY(DISTINCT rt1.c1) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY (~ (((rt0.c0) NOT NULL))), ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c4)))<=(((rt1.c1)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (((rt0.c0) NOT NULL))), ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c4)))<=(((rt1.c1)AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY (~ (((rt0.c0) NOT NULL))), ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c4)))<=(((rt1.c1)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (((rt0.c0) NOT NULL))), ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c4)))<=(((rt1.c1)AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((rt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY (~ (((rt0.c0) NOT NULL))), ((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c4)))<=(((rt1.c1)AND(rt0.c2)))) ASC;
