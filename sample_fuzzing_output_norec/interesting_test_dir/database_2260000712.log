-- Time: 2024/06/11 07:17:09
-- Database: database12
-- Database version: 3.40.0
-- seed value: 2260000712
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
REINDEX BINARY; -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL, 0.5885329198868017); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '651'); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 98749836); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.foreign_keys = false; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (0.9153053251693202, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1555235328'), (NULL), ('0]'), (NULL), ('︀d'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA journal_mode = MEMORY; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (x'', 0.2871154719361244, x'9abb'); -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c1)=(x'768a') WHERE CAST((- (vt0.c0)) AS REAL); -- 0ms;
REINDEX NOCASE; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1555235328);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x'b8a4'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 2ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c1, c2)=('0]', NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (x'', -1555235328); -- 0ms;
REINDEX  rt1; -- 0ms;
PRAGMA cache_size = 0; -- 1ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c2, c0)=(NULL, x'23c50b9d') WHERE CASE rt1.c2 COLLATE RTRIM  WHEN LIKELIHOOD(DISTINCT rt1.c2, 0.7948174519356332) THEN (- (0xffffffffa34cfe00)) END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.4921408770129604); -- 2ms;
UPDATE vt0 SET c1=NULL WHERE x''; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24261'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-941975296,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24372'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -146488068);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 547286409); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c1)=(x'', '%\', 0.4447592631113674) WHERE ((vt0.c1) IS FALSE); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1269389615); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1550316519);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (0Xfffffffff744c4fc, 0.24689868615146338); -- 1ms;
INSERT OR ABORT INTO rt1(c2) VALUES ('-1876933875'); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, -1555235328, NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1555235328);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT rt1 SET c2=1704046268; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1323155082); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1972966765); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '48428'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (-941975296); -- 0ms;
DROP TABLE rt1; -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('-146488068'), (-764442509), (0.3476660734426086); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('{9mu3(u)\r', 0.2871154719361244); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 1ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('{9mu3(u)\r'); -- 0ms;
DELETE FROM vt1; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'', x''); -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '56349'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2126709930); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1149995597); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1750837713,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 116375380); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1749724409,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (-1.750837713E9); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-941975296'), (0.8495859105547598), (NULL); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (NULL), ('''+k'), (0.5861887414235298); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.22752460312961065, x'') WHERE (((vt0.c1) NOT BETWEEN ('*4') AND (vt0.c0)) IN ()); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=-493267191 WHERE (IFNULL(vt1.c0, vt1.c0) IN ()); -- 0ms;
PRAGMA threads; -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES (NULL, 0X41deedf6), (0.7032809611398997, NULL), (0.7690477564126841, '['); -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-1.749724409E9); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 1ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, '-299891009'), ('54683487', NULL), (x'', '-349862006'), ('-237649457', 0.4447592631113674), (NULL, '-1711104921'); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (0.11291866880026957, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((LIKE(vt0.c1, vt1.c0))OR(((vt0.c0) IS TRUE))))OR((vt0.c1 IN ())))) ORDER BY (json_array_length(vt0.c0) IN ()) ASC, (NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LIKE(vt0.c1, vt1.c0))OR(((vt0.c0) IS TRUE))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (json_array_length(vt0.c0) IN ()) ASC, (NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((LIKE(vt0.c1, vt1.c0))OR(((vt0.c0) IS TRUE))))OR((vt0.c1 IN ())))) ORDER BY (json_array_length(vt0.c0) IN ()) ASC, (NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LIKE(vt0.c1, vt1.c0))OR(((vt0.c0) IS TRUE))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (json_array_length(vt0.c0) IN ()) ASC, (NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((LIKE(vt0.c1, vt1.c0))OR(((vt0.c0) IS TRUE))))OR((vt0.c1 IN ())))) ORDER BY (json_array_length(vt0.c0) IN ()) ASC, (NOT (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c1)))+(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c1)))+(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c1)))+(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c1)))+(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c1)))+(TRIM(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, -780424849, ((vt0.c1)-(vt0.c1)), ((((0.6203834939615213)OR(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL))) AND ((CAST(vt0.c0 AS TEXT), '-146488068', ((vt0.c0)GLOB(vt0.c0)), (NULL IN ()), NULLIF(DISTINCT vt0.c0, vt0.c0))))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, -780424849, ((vt0.c1)-(vt0.c1)), ((((0.6203834939615213)OR(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL))) AND ((CAST(vt0.c0 AS TEXT), '-146488068', ((vt0.c0)GLOB(vt0.c0)), (NULL IN ()), NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, -780424849, ((vt0.c1)-(vt0.c1)), ((((0.6203834939615213)OR(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL))) AND ((CAST(vt0.c0 AS TEXT), '-146488068', ((vt0.c0)GLOB(vt0.c0)), (NULL IN ()), NULLIF(DISTINCT vt0.c0, vt0.c0))))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, -780424849, ((vt0.c1)-(vt0.c1)), ((((0.6203834939615213)OR(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL))) AND ((CAST(vt0.c0 AS TEXT), '-146488068', ((vt0.c0)GLOB(vt0.c0)), (NULL IN ()), NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, -780424849, ((vt0.c1)-(vt0.c1)), ((((0.6203834939615213)OR(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL))) AND ((CAST(vt0.c0 AS TEXT), '-146488068', ((vt0.c0)GLOB(vt0.c0)), (NULL IN ()), NULLIF(DISTINCT vt0.c0, vt0.c0))))) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt0.c1))))<=(TRIM(vt0.c0)))) ORDER BY ((((vt0.c1) NOTNULL))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt0.c1))))<=(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOTNULL))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt0.c1))))<=(TRIM(vt0.c0)))) ORDER BY ((((vt0.c1) NOTNULL))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt0.c1))))<=(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOTNULL))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((NULL, vt0.c0, vt0.c1))))<=(TRIM(vt0.c0)))) ORDER BY ((((vt0.c1) NOTNULL))>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN (NULL))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN (NULL))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULL IN (NULL))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ('CF') ORDER BY ((((vt1.c0)IS(vt0.c1)))*(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('CF') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)IS(vt0.c1)))*(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ('CF') ORDER BY ((((vt1.c0)IS(vt0.c1)))*(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('CF') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)IS(vt0.c1)))*(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ('CF') ORDER BY ((((vt1.c0)IS(vt0.c1)))*(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)|(vt0.c1)))) ORDER BY INSTR(NULLIF(DISTINCT vt0.c1, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)|(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY INSTR(NULLIF(DISTINCT vt0.c1, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)|(vt0.c1)))) ORDER BY INSTR(NULLIF(DISTINCT vt0.c1, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)|(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY INSTR(NULLIF(DISTINCT vt0.c1, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0)|(vt0.c1)))) ORDER BY INSTR(NULLIF(DISTINCT vt0.c1, vt0.c0), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE NOCASE) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE WHEN ABS(DISTINCT vt0.c1) THEN vt1.c0 WHEN (((((((((((('0.11291866880026957')OR(vt0.c1)))AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE WHEN ABS(DISTINCT vt0.c1) THEN vt1.c0 WHEN (((((((((((('0.11291866880026957')OR(vt0.c1)))AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c1) IS FALSE) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE NOCASE) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE WHEN ABS(DISTINCT vt0.c1) THEN vt1.c0 WHEN (((((((((((('0.11291866880026957')OR(vt0.c1)))AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE WHEN ABS(DISTINCT vt0.c1) THEN vt1.c0 WHEN (((((((((((('0.11291866880026957')OR(vt0.c1)))AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c1) IS FALSE) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE NOCASE) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE NOCASE WHEN ABS(DISTINCT vt0.c1) THEN vt1.c0 WHEN (((((((((((('0.11291866880026957')OR(vt0.c1)))AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c1) IS FALSE) END;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c1)) IS FALSE)) ORDER BY ((vt0.c1)GLOB((vt0.c1 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)GLOB((vt0.c1 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c1)) IS FALSE)) ORDER BY ((vt0.c1)GLOB((vt0.c1 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c0, vt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)GLOB((vt0.c1 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(DISTINCT vt0.c0, vt0.c1)) IS FALSE)) ORDER BY ((vt0.c1)GLOB((vt0.c1 IN (vt1.c0))));
SELECT * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c1) IN ()));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS((NOT (vt0.c0))))) ORDER BY (TRIM('') IN (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))IS((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (TRIM('') IN (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS((NOT (vt0.c0))))) ORDER BY (TRIM('') IN (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))IS((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (TRIM('') IN (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))IS((NOT (vt0.c0))))) ORDER BY (TRIM('') IN (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((('~*' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('~*' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('~*' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('~*' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('~*' COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE ((('-349862006' IN ()) IN ())) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, vt0.c0  NULLS LAST, CAST(STRFTIME(vt1.c0, vt1.c0, vt0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((('-349862006' IN ()) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt1.c0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, vt0.c0  NULLS LAST, CAST(STRFTIME(vt1.c0, vt1.c0, vt0.c0) AS NUMERIC));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE ((('-349862006' IN ()) IN ())) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, vt0.c0  NULLS LAST, CAST(STRFTIME(vt1.c0, vt1.c0, vt0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((('-349862006' IN ()) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt1.c0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, vt0.c0  NULLS LAST, CAST(STRFTIME(vt1.c0, vt1.c0, vt0.c0) AS NUMERIC));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE ((('-349862006' IN ()) IN ())) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, vt0.c0  NULLS LAST, CAST(STRFTIME(vt1.c0, vt1.c0, vt0.c0) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))<=(vt0.c1 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1)))) ASC, ((vt0.c1 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))<=(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1)))) ASC, ((vt0.c1 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))<=(vt0.c1 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1)))) ASC, ((vt0.c1 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))<=(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1)))) ASC, ((vt0.c1 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))<=(vt0.c1 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1)))) ASC, ((vt0.c1 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))<=(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY ((vt0.c1)!=(0.9746846816352487))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<=(((vt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)!=(0.9746846816352487))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))<=(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY ((vt0.c1)!=(0.9746846816352487))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<=(((vt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)!=(0.9746846816352487))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))<=(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY ((vt0.c1)!=(0.9746846816352487))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.7556357709090581)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.7556357709090581)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.7556357709090581)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.7556357709090581)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.7556357709090581)) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL))||((((vt1.c0))<=((vt1.c0)))))) ORDER BY CAST((+ (vt1.c0)) AS REAL) DESC  NULLS FIRST, 0.24689868615146338  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))||((((vt1.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS REAL) DESC  NULLS FIRST, 0.24689868615146338  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL))||((((vt1.c0))<=((vt1.c0)))))) ORDER BY CAST((+ (vt1.c0)) AS REAL) DESC  NULLS FIRST, 0.24689868615146338  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))||((((vt1.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((+ (vt1.c0)) AS REAL) DESC  NULLS FIRST, 0.24689868615146338  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL))||((((vt1.c0))<=((vt1.c0)))))) ORDER BY CAST((+ (vt1.c0)) AS REAL) DESC  NULLS FIRST, 0.24689868615146338  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE BINARY) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, HEX(vt0.c1 COLLATE NOCASE) DESC  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))!=(LIKELY(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, HEX(vt0.c1 COLLATE NOCASE) DESC  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))<>(LIKELY(DISTINCT vt0.c1))));
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE BINARY) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, HEX(vt0.c1 COLLATE NOCASE) DESC  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))!=(LIKELY(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, HEX(vt0.c1 COLLATE NOCASE) DESC  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))<>(LIKELY(DISTINCT vt0.c1))));
SELECT * FROM vt0, vt1 WHERE ((vt1.c0 IN (vt1.c0)) COLLATE BINARY) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC) ASC  NULLS FIRST, HEX(vt0.c1 COLLATE NOCASE) DESC  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))!=(LIKELY(DISTINCT vt0.c1)));
SELECT * FROM vt1, vt0 WHERE (((- (vt0.c1)) IN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c1)) IN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((- (vt0.c1)) IN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c1)) IN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((- (vt0.c1)) IN (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE CASE NULL  WHEN vt1.c0 THEN vt0.c1 END  WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) ELSE vt0.c1 END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (vt0.c1) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY 'xKoltkJ' COLLATE BINARY  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) THEN (((vt1.c0))>((vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN INSTR(vt1.c0, vt1.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (vt0.c1) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE CASE NULL  WHEN vt1.c0 THEN vt0.c1 END  WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) ELSE vt0.c1 END ORDER BY 'xKoltkJ' COLLATE BINARY  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) THEN (((vt1.c0))>((vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN INSTR(vt1.c0, vt1.c0) END);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE CASE NULL  WHEN vt1.c0 THEN vt0.c1 END  WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) ELSE vt0.c1 END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (vt0.c1) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY 'xKoltkJ' COLLATE BINARY  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) THEN (((vt1.c0))>((vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN INSTR(vt1.c0, vt1.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (vt0.c1) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE CASE NULL  WHEN vt1.c0 THEN vt0.c1 END  WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) ELSE vt0.c1 END ORDER BY 'xKoltkJ' COLLATE BINARY  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) THEN (((vt1.c0))>((vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN INSTR(vt1.c0, vt1.c0) END);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE CASE NULL  WHEN vt1.c0 THEN vt0.c1 END  WHEN (vt0.c0 IN ()) THEN (- (vt1.c0)) ELSE vt0.c1 END WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (vt0.c1) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY 'xKoltkJ' COLLATE BINARY  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) THEN (((vt1.c0))>((vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS NUMERIC) THEN INSTR(vt1.c0, vt1.c0) END;
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.3609593586319296)>(CASE WHEN '|!뽖Oo_}束' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.3609593586319296)>(CASE WHEN '|!뽖Oo_}束' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.3609593586319296)>(CASE WHEN '|!뽖Oo_}束' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0.3609593586319296)>(CASE WHEN '|!뽖Oo_}束' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.3609593586319296)>(CASE WHEN '|!뽖Oo_}束' THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(vt1.c0)))*(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(vt1.c0)))*(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(vt1.c0)))*(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(vt1.c0)))*(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(vt1.c0)))*(vt1.c0)));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)*(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)*(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS BLOB));
SELECT * FROM vt0, vt1 WHERE ((+ (CAST(vt0.c1 AS INTEGER)))) ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, ((vt0.c1)=(vt1.c0)))) AND ((((vt1.c0) NOT NULL), (+ (vt0.c1)), '-146488068'))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, ((vt0.c1)==(vt1.c0)))) AND ((((vt1.c0) NOT NULL), (+ (vt0.c1)), '-146488068'))) ASC);
SELECT * FROM vt0, vt1 WHERE ((+ (CAST(vt0.c1 AS INTEGER)))) ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, ((vt0.c1)=(vt1.c0)))) AND ((((vt1.c0) NOT NULL), (+ (vt0.c1)), '-146488068'))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, ((vt0.c1)==(vt1.c0)))) AND ((((vt1.c0) NOT NULL), (+ (vt0.c1)), '-146488068'))) ASC);
SELECT * FROM vt0, vt1 WHERE ((+ (CAST(vt0.c1 AS INTEGER)))) ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, ((vt0.c1)=(vt1.c0)))) AND ((((vt1.c0) NOT NULL), (+ (vt0.c1)), '-146488068'))) ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE 0.10135988510730864  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/(TRIM(vt1.c0))) WHERE (CAST(QUOTE(0xffffffffc7da9900) AS BLOB)) ORDER BY ((-1.876933875E9) NOT BETWEEN (((((vt0.c0)OR('')))AND(vt0.c0))) AND ((+ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(0Xffffffffc7da9900) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE 0.10135988510730864  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/(TRIM(vt1.c0))) ORDER BY ((-1.876933875E9) NOT BETWEEN (((((vt0.c0)OR('')))AND(vt0.c0))) AND ((+ (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE 0.10135988510730864  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/(TRIM(vt1.c0))) WHERE (CAST(QUOTE(0xffffffffc7da9900) AS BLOB)) ORDER BY ((-1.876933875E9) NOT BETWEEN (((((vt0.c0)OR('')))AND(vt0.c0))) AND ((+ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(0Xffffffffc7da9900) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE 0.10135988510730864  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/(TRIM(vt1.c0))) ORDER BY ((-1.876933875E9) NOT BETWEEN (((((vt0.c0)OR('')))AND(vt0.c0))) AND ((+ (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE 0.10135988510730864  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)/(TRIM(vt1.c0))) WHERE (CAST(QUOTE(0xffffffffc7da9900) AS BLOB)) ORDER BY ((-1.876933875E9) NOT BETWEEN (((((vt0.c0)OR('')))AND(vt0.c0))) AND ((+ (vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((- (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(x'')))AND(vt1.c0))))) ORDER BY ((ABS(vt1.c0)) NOT BETWEEN (INSTR(vt1.c0, vt1.c0)) AND (((vt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(x'')))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(vt1.c0)) NOT BETWEEN (INSTR(vt1.c0, vt1.c0)) AND (((vt1.c0) ISNULL)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((- (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(x'')))AND(vt1.c0))))) ORDER BY ((ABS(vt1.c0)) NOT BETWEEN (INSTR(vt1.c0, vt1.c0)) AND (((vt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(x'')))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(vt1.c0)) NOT BETWEEN (INSTR(vt1.c0, vt1.c0)) AND (((vt1.c0) ISNULL)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((- (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(x'')))AND(vt1.c0))))) ORDER BY ((ABS(vt1.c0)) NOT BETWEEN (INSTR(vt1.c0, vt1.c0)) AND (((vt1.c0) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((5.4683487E7) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((5.4683487E7) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((5.4683487E7) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((5.4683487E7) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((5.4683487E7) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (370563877) ORDER BY (+ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((370563877) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (370563877) ORDER BY (+ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((370563877) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (370563877) ORDER BY (+ (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) IS TRUE));
SELECT ALL * FROM vt0, vt1 WHERE ((NULLIF(vt0.c1, vt0.c0) IN ())) ORDER BY ((vt0.c1)>>(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((NULLIF(vt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)>>(vt1.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((NULLIF(vt0.c1, vt0.c0) IN ())) ORDER BY ((vt0.c1)>>(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((NULLIF(vt0.c1, vt0.c0) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)>>(vt1.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((NULLIF(vt0.c1, vt0.c0) IN ())) ORDER BY ((vt0.c1)>>(vt1.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (- (TRIM('-299891009', vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)>(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (- (TRIM('-299891009', vt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (- (TRIM('-299891009', vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)>(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (- (TRIM('-299891009', vt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (- (TRIM('-299891009', vt1.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)<=(vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE RTRIM))<=(((((vt1.c0))<=((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS BLOB))))  NULLS LAST, CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN 835967775 ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)<=(vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE RTRIM))<=(((((vt1.c0))<=((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS BLOB))))  NULLS LAST, CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN 835967775 ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)<=(vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE RTRIM))<=(((((vt1.c0))<=((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS BLOB))))  NULLS LAST, CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN 835967775 ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)<=(vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE RTRIM))<=(((((vt1.c0))<=((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS BLOB))))  NULLS LAST, CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN 835967775 ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)<=(vt1.c0)), (~ (vt1.c0)), vt1.c0 COLLATE RTRIM))<=(((((vt1.c0))<=((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS BLOB))))  NULLS LAST, CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN 835967775 ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT ALL * FROM vt1, vt0 WHERE (NULL) ORDER BY 0.6076940565321441 DESC, CAST(((vt1.c0) IS TRUE) AS TEXT)  NULLS LAST, ((vt0.c0)|(((vt1.c0)+(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.6076940565321441 DESC, CAST(((vt1.c0) IS TRUE) AS TEXT)  NULLS LAST, ((vt0.c0)|(((vt1.c0)+(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (NULL) ORDER BY 0.6076940565321441 DESC, CAST(((vt1.c0) IS TRUE) AS TEXT)  NULLS LAST, ((vt0.c0)|(((vt1.c0)+(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.6076940565321441 DESC, CAST(((vt1.c0) IS TRUE) AS TEXT)  NULLS LAST, ((vt0.c0)|(((vt1.c0)+(vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (NULL) ORDER BY 0.6076940565321441 DESC, CAST(((vt1.c0) IS TRUE) AS TEXT)  NULLS LAST, ((vt0.c0)|(((vt1.c0)+(vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN 0.0056660935751582375 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND (CASE 3.70563877E8  WHEN -1.711104921E9 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN 0.0056660935751582375 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND (CASE 3.70563877E8  WHEN -1.711104921E9 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN 0.0056660935751582375 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND (CASE 3.70563877E8  WHEN -1.711104921E9 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN 0.0056660935751582375 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))=((vt1.c0)))) AND (CASE 3.70563877E8  WHEN -1.711104921E9 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN 0.0056660935751582375 ELSE vt1.c0 END) NOT BETWEEN ((((vt1.c0))==((vt1.c0)))) AND (CASE 3.70563877E8  WHEN -1.711104921E9 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)*(((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)*(((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))) ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)*(((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)*(((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))) ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt0.c0 COLLATE RTRIM)*(((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY vt0.c1 DESC;
SELECT * FROM vt0, vt1 WHERE ((((UNLIKELY(DISTINCT vt0.c1)))=((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))) ORDER BY (((vt0.c1)) BETWEEN (((('-764442509') NOT NULL))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC, (((vt0.c0) NOT NULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT vt0.c1)))=((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) BETWEEN (((('-764442509') NOT NULL))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC, (((vt0.c0) NOT NULL) IN ()) ASC);
SELECT * FROM vt0, vt1 WHERE ((((UNLIKELY(DISTINCT vt0.c1)))=((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))) ORDER BY (((vt0.c1)) BETWEEN (((('-764442509') NOT NULL))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC, (((vt0.c0) NOT NULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT vt0.c1)))=((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) BETWEEN (((('-764442509') NOT NULL))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC, (((vt0.c0) NOT NULL) IN ()) ASC);
SELECT * FROM vt0, vt1 WHERE ((((UNLIKELY(DISTINCT vt0.c1)))=((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))) ORDER BY (((vt0.c1)) BETWEEN (((('-764442509') NOT NULL))) AND ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC, (((vt0.c0) NOT NULL) IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))AND(x'')))OR(vt1.c0 COLLATE BINARY))) ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN 0Xffffffff9020430d ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS REAL))AND(x'')))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN 0Xffffffff9020430d ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END);
SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))AND(x'')))OR(vt1.c0 COLLATE BINARY))) ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN 0Xffffffff9020430d ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS REAL))AND(x'')))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN 0Xffffffff9020430d ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END);
SELECT * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))AND(x'')))OR(vt1.c0 COLLATE BINARY))) ORDER BY CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN 0Xffffffff9020430d ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (x'')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (x'')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (x'')));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('-1518780427') AND (vt0.c1))) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('-1518780427') AND (vt0.c1))) AND (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('-1518780427') AND (vt0.c1))) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('-1518780427') AND (vt0.c1))) AND (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('-1518780427') AND (vt0.c1))) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT * FROM vt1 WHERE ((CASE vt1.c0  WHEN '-1595145009' THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((vt1.c0) ISNULL)))) ORDER BY (((((vt1.c0)%(vt1.c0))))==((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN '-1595145009' THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)%(vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt1 WHERE ((CASE vt1.c0  WHEN '-1595145009' THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((vt1.c0) ISNULL)))) ORDER BY (((((vt1.c0)%(vt1.c0))))==((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN '-1595145009' THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)%(vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt1 WHERE ((CASE vt1.c0  WHEN '-1595145009' THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (((vt1.c0) ISNULL)))) ORDER BY (((((vt1.c0)%(vt1.c0))))==((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE BINARY THEN NULL END) ORDER BY ((vt1.c0 COLLATE RTRIM)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0, (((vt1.c0)>>(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE BINARY THEN NULL END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0, (((vt1.c0)>>(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE BINARY THEN NULL END) ORDER BY ((vt1.c0 COLLATE RTRIM)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0, (((vt1.c0)>>(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE BINARY THEN NULL END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0, (((vt1.c0)>>(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE BINARY THEN NULL END) ORDER BY ((vt1.c0 COLLATE RTRIM)AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0, (((vt1.c0)>>(vt1.c0)) IN ());
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END) ORDER BY (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ()), ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ()), ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END) ORDER BY (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ()), ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ()), ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c1) NOT NULL) ELSE CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END) ORDER BY (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ()), ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN '-146488068' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN '-146488068' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN '-146488068' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN '-146488068' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN '-146488068' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS TEXT)) ORDER BY ((NOT (vt1.c0)) IN ((((vt1.c0))==((vt1.c0))))), (+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((NOT (vt1.c0)) IN ((((vt1.c0))=((vt1.c0))))), (+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS TEXT)) ORDER BY ((NOT (vt1.c0)) IN ((((vt1.c0))==((vt1.c0))))), (+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((NOT (vt1.c0)) IN ((((vt1.c0))=((vt1.c0))))), (+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS TEXT)) ORDER BY ((NOT (vt1.c0)) IN ((((vt1.c0))==((vt1.c0))))), (+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END THEN CAST(vt1.c0 AS TEXT) END) ORDER BY (((vt1.c0 IN (0.8587501927006996)))<=(NULL))  NULLS LAST, CAST(CASE WHEN './' THEN vt1.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (0.8587501927006996)))<=(NULL))  NULLS LAST, CAST(CASE WHEN './' THEN vt1.c0 END AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END THEN CAST(vt1.c0 AS TEXT) END) ORDER BY (((vt1.c0 IN (0.8587501927006996)))<=(NULL))  NULLS LAST, CAST(CASE WHEN './' THEN vt1.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (0.8587501927006996)))<=(NULL))  NULLS LAST, CAST(CASE WHEN './' THEN vt1.c0 END AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END THEN CAST(vt1.c0 AS TEXT) END) ORDER BY (((vt1.c0 IN (0.8587501927006996)))<=(NULL))  NULLS LAST, CAST(CASE WHEN './' THEN vt1.c0 END AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0)AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0)AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.c0)AND(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)%('-1711104921')) AS BLOB)) ORDER BY COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.26204973244595364, vt1.c0))), ((vt1.c0) IS TRUE), ((vt1.c0) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)%('-1711104921')) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.26204973244595364, vt1.c0))), ((vt1.c0) IS TRUE), ((vt1.c0) ISNULL)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)%('-1711104921')) AS BLOB)) ORDER BY COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.26204973244595364, vt1.c0))), ((vt1.c0) IS TRUE), ((vt1.c0) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)%('-1711104921')) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.26204973244595364, vt1.c0))), ((vt1.c0) IS TRUE), ((vt1.c0) ISNULL)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)%('-1711104921')) AS BLOB)) ORDER BY COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.26204973244595364, vt1.c0))), ((vt1.c0) IS TRUE), ((vt1.c0) ISNULL)) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1))=((vt0.c0)))) IS FALSE)) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0)>(vt1.c0)))) AND (((vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0)>(vt1.c0)))) AND (((vt1.c0 IN ())))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1))=((vt0.c0)))) IS FALSE)) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0)>(vt1.c0)))) AND (((vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0)>(vt1.c0)))) AND (((vt1.c0 IN ())))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1))=((vt0.c0)))) IS FALSE)) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0)>(vt1.c0)))) AND (((vt1.c0 IN ())))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<>(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<>(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<>(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.0056660935751582375) ISNULL) WHERE (((((vt0.c1)OR((~ (vt0.c0)))))AND(((vt0.c0) ISNULL)))) ORDER BY ((((((((vt1.c0)AND(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR((~ (vt0.c0)))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((0.0056660935751582375) ISNULL) ORDER BY ((((((((vt1.c0)AND(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.0056660935751582375) ISNULL) WHERE (((((vt0.c1)OR((~ (vt0.c0)))))AND(((vt0.c0) ISNULL)))) ORDER BY ((((((((vt1.c0)AND(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR((~ (vt0.c0)))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((0.0056660935751582375) ISNULL) ORDER BY ((((((((vt1.c0)AND(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.0056660935751582375) ISNULL) WHERE (((((vt0.c1)OR((~ (vt0.c0)))))AND(((vt0.c0) ISNULL)))) ORDER BY ((((((((vt1.c0)AND(((vt1.c0) NOT NULL))))AND(vt1.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('4')))) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('4')))) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('4')))) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('4')))) NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('4')))) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))IS(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0))IS(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))IS(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0))IS(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))IS(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (IFNULL(DISTINCT ((((vt0.c0)AND('KH')))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((vt0.c0)AND('KH')))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (IFNULL(DISTINCT ((((vt0.c0)AND('KH')))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((vt0.c0)AND('KH')))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (IFNULL(DISTINCT ((((vt0.c0)AND('KH')))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))<=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))) ORDER BY x'ce3c7f06'  NULLS LAST, (((-1.876933875E9, ('' IN ()), ((((NULL)AND(vt0.c1)))AND(vt0.c0))))>=((((vt0.c0)>(vt0.c1)), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS INTEGER)))<=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY x'ce3c7f06'  NULLS LAST, (((-1.876933875E9, ('' IN ()), ((((NULL)AND(vt0.c1)))AND(vt0.c0))))>=((((vt0.c0)>(vt0.c1)), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1)>>(vt0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))<=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))) ORDER BY x'ce3c7f06'  NULLS LAST, (((-1.876933875E9, ('' IN ()), ((((NULL)AND(vt0.c1)))AND(vt0.c0))))>=((((vt0.c0)>(vt0.c1)), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS INTEGER)))<=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY x'ce3c7f06'  NULLS LAST, (((-1.876933875E9, ('' IN ()), ((((NULL)AND(vt0.c1)))AND(vt0.c0))))>=((((vt0.c0)>(vt0.c1)), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1)>>(vt0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))<=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))))) ORDER BY x'ce3c7f06'  NULLS LAST, (((-1.876933875E9, ('' IN ()), ((((NULL)AND(vt0.c1)))AND(vt0.c0))))>=((((vt0.c0)>(vt0.c1)), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1)>>(vt0.c1)))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0) BETWEEN ('X') AND (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))||(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0) BETWEEN ('X') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))||(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0) BETWEEN ('X') AND (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))||(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0) BETWEEN ('X') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))||(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0) BETWEEN ('X') AND (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))||(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(x'')))OR(vt0.c0))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'9b9e' ELSE vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) ELSE NULL END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOTNULL))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)%(vt1.c0)), ((vt1.c0) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'9b9e' ELSE vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) ELSE NULL END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOTNULL))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)%(vt1.c0)), ((vt1.c0) NOT NULL))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'9b9e' ELSE vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) ELSE NULL END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOTNULL))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)%(vt1.c0)), ((vt1.c0) NOT NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'9b9e' ELSE vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) ELSE NULL END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOTNULL))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)%(vt1.c0)), ((vt1.c0) NOT NULL))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'9b9e' ELSE vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) ELSE NULL END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0) NOTNULL))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)%(vt1.c0)), ((vt1.c0) NOT NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON UPPER(((vt0.c0) IS TRUE)) WHERE (CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((((vt0.c1)AND(0.24689868615146338)))AND(vt0.c1)) END) ORDER BY ((((((((((vt1.c0) ISNULL))AND(0X6591aebc)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))))OR(vt1.c0)))OR((~ (vt0.c1)))) DESC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((((vt0.c1)AND(0.24689868615146338)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON UPPER(((vt0.c0) IS TRUE)) ORDER BY ((((((((((vt1.c0) ISNULL))AND(0x6591aebc)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))))OR(vt1.c0)))OR((~ (vt0.c1)))) DESC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON UPPER(((vt0.c0) IS TRUE)) WHERE (CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((((vt0.c1)AND(0.24689868615146338)))AND(vt0.c1)) END) ORDER BY ((((((((((vt1.c0) ISNULL))AND(0X6591aebc)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))))OR(vt1.c0)))OR((~ (vt0.c1)))) DESC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((((vt0.c1)AND(0.24689868615146338)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON UPPER(((vt0.c0) IS TRUE)) ORDER BY ((((((((((vt1.c0) ISNULL))AND(0x6591aebc)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))))OR(vt1.c0)))OR((~ (vt0.c1)))) DESC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON UPPER(((vt0.c0) IS TRUE)) WHERE (CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((((vt0.c1)AND(0.24689868615146338)))AND(vt0.c1)) END) ORDER BY ((((((((((vt1.c0) ISNULL))AND(0X6591aebc)))AND(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)))))OR(vt1.c0)))OR((~ (vt0.c1)))) DESC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((- (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(DATETIME(vt0.c0, vt0.c0, x'42d52f8c', vt0.c0, vt0.c0) AS TEXT)) ORDER BY COALESCE(DISTINCT vt0.c1, COALESCE(vt0.c1, vt0.c0), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN 369471749 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt0.c0, vt0.c0, x'42d52f8c', vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c1, COALESCE(vt0.c1, vt0.c0), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN 369471749 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(DATETIME(vt0.c0, vt0.c0, x'42d52f8c', vt0.c0, vt0.c0) AS TEXT)) ORDER BY COALESCE(DISTINCT vt0.c1, COALESCE(vt0.c1, vt0.c0), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN 369471749 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt0.c0, vt0.c0, x'42d52f8c', vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT vt0.c1, COALESCE(vt0.c1, vt0.c0), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN 369471749 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(DATETIME(vt0.c0, vt0.c0, x'42d52f8c', vt0.c0, vt0.c0) AS TEXT)) ORDER BY COALESCE(DISTINCT vt0.c1, COALESCE(vt0.c1, vt0.c0), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN 369471749 THEN vt0.c0 END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)), (((vt0.c1)) BETWEEN (('0.9746846816352487')) AND ((vt0.c1))), CAST(0.6203834939615213 AS TEXT), vt0.c0)) AND (((+ (vt0.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1)), vt1.c0, (((vt1.c0, vt0.c0, ''))<=((x'600f', vt0.c1, vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)), (((vt0.c1)) BETWEEN (('0.9746846816352487')) AND ((vt0.c1))), CAST(0.6203834939615213 AS TEXT), vt0.c0)) AND (((+ (vt0.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1)), vt1.c0, (((vt1.c0, vt0.c0, ''))<=((x'600f', vt0.c1, vt0.c0)))))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)), (((vt0.c1)) BETWEEN (('0.9746846816352487')) AND ((vt0.c1))), CAST(0.6203834939615213 AS TEXT), vt0.c0)) AND (((+ (vt0.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1)), vt1.c0, (((vt1.c0, vt0.c0, ''))<=((x'600f', vt0.c1, vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)), (((vt0.c1)) BETWEEN (('0.9746846816352487')) AND ((vt0.c1))), CAST(0.6203834939615213 AS TEXT), vt0.c0)) AND (((+ (vt0.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1)), vt1.c0, (((vt1.c0, vt0.c0, ''))<=((x'600f', vt0.c1, vt0.c0)))))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)), (((vt0.c1)) BETWEEN (('0.9746846816352487')) AND ((vt0.c1))), CAST(0.6203834939615213 AS TEXT), vt0.c0)) AND (((+ (vt0.c0)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1)), vt1.c0, (((vt1.c0, vt0.c0, ''))<=((x'600f', vt0.c1, vt0.c0)))))) DESC;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(((vt0.c0)<<(vt1.c0)))))AND(NULL)))AND(CAST(vt0.c0 AS INTEGER))))OR('1704046268')) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c1 IN ()) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) END) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c1 IN ()) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(((vt0.c0)<<(vt1.c0)))))AND(NULL)))AND(CAST(vt0.c0 AS INTEGER))))OR('1704046268')) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(((vt0.c0)<<(vt1.c0)))))AND(NULL)))AND(CAST(vt0.c0 AS INTEGER))))OR('1704046268')) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c1 IN ()) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) END) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c1 IN ()) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(((vt0.c0)<<(vt1.c0)))))AND(NULL)))AND(CAST(vt0.c0 AS INTEGER))))OR('1704046268')) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(((vt0.c0)<<(vt1.c0)))))AND(NULL)))AND(CAST(vt0.c0 AS INTEGER))))OR('1704046268')) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c1 IN ()) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)) END) ORDER BY (NOT ((- (vt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((NULL IN ())) ORDER BY ((((-850355940)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((']h>Y	-衳2')%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((-850355940)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((']h>Y	-衳2')%(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NULL IN ())) ORDER BY ((((-850355940)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((']h>Y	-衳2')%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((-850355940)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((']h>Y	-衳2')%(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NULL IN ())) ORDER BY ((((-850355940)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((']h>Y	-衳2')%(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'4827') ORDER BY ((vt0.c0) NOT BETWEEN (((vt1.c0) IS TRUE)) AND ((+ (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'4827') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt1.c0) IS TRUE)) AND ((+ (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'4827') ORDER BY ((vt0.c0) NOT BETWEEN (((vt1.c0) IS TRUE)) AND ((+ (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'4827') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt1.c0) IS TRUE)) AND ((+ (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'4827') ORDER BY ((vt0.c0) NOT BETWEEN (((vt1.c0) IS TRUE)) AND ((+ (vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((0.3905290046950295) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c0)<<(vt1.c0)) ELSE (('-1550316519')IS(vt0.c1)) END  NULLS LAST, json(0.40454006517406293 COLLATE RTRIM) DESC, ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3905290046950295) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0)<>(vt0.c1)) THEN ((vt0.c0)<<(vt1.c0)) ELSE (('-1550316519')IS(vt0.c1)) END  NULLS LAST, json(0.40454006517406293 COLLATE RTRIM) DESC, ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((0.3905290046950295) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c0)<<(vt1.c0)) ELSE (('-1550316519')IS(vt0.c1)) END  NULLS LAST, json(0.40454006517406293 COLLATE RTRIM) DESC, ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3905290046950295) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0)<>(vt0.c1)) THEN ((vt0.c0)<<(vt1.c0)) ELSE (('-1550316519')IS(vt0.c1)) END  NULLS LAST, json(0.40454006517406293 COLLATE RTRIM) DESC, ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((0.3905290046950295) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN ((vt0.c0)!=(vt0.c1)) THEN ((vt0.c0)<<(vt1.c0)) ELSE (('-1550316519')IS(vt0.c1)) END  NULLS LAST, json(0.40454006517406293 COLLATE RTRIM) DESC, ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)<(vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1)<(vt1.c0)) END WHERE (json_array_length(((vt0.c0)AND(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0)AND(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)<(vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1)<(vt1.c0)) END);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)<(vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1)<(vt1.c0)) END WHERE (json_array_length(((vt0.c0)AND(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0)AND(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE ((vt0.c0)<(vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c1)<(vt1.c0)) END);
SELECT * FROM vt1 WHERE (CAST(NULLIF(DISTINCT vt1.c0, NULL) AS REAL)) ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT vt1.c0, NULL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(NULLIF(DISTINCT vt1.c0, NULL) AS REAL)) ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(DISTINCT vt1.c0, NULL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (CAST(NULLIF(DISTINCT vt1.c0, NULL) AS REAL)) ORDER BY ((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt0.c0  WHEN '-1165513191' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt0.c0  WHEN '-1165513191' THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt0.c0  WHEN '-1165513191' THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt0.c0  WHEN '-1165513191' THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((vt1.c0) NOTNULL)) AND (CASE vt0.c0  WHEN '-1165513191' THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((NULL) ISNULL))AND(5.4683487E7)))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '1801553532' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((vt0.c0 IN ()))%('Gm'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((NULL) ISNULL))AND(5.4683487E7)))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '1801553532' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))%('Gm'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((NULL) ISNULL))AND(5.4683487E7)))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '1801553532' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((vt0.c0 IN ()))%('Gm'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((NULL) ISNULL))AND(5.4683487E7)))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '1801553532' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))%('Gm'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((NULL) ISNULL))AND(5.4683487E7)))AND(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '1801553532' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((vt0.c0 IN ()))%('Gm'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY ((vt0.c1) IS FALSE) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN '-1550316519' THEN vt1.c0 ELSE vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-1550316519' THEN vt1.c0 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN '-1550316519' THEN vt1.c0 ELSE vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-1550316519' THEN vt1.c0 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN '-1550316519' THEN vt1.c0 ELSE vt0.c1 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE NULLIF(vt0.c1, vt0.c1)  WHEN vt0.c0 COLLATE BINARY THEN (((('-1065220618')OR(vt0.c0)))OR(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(vt0.c1, vt0.c1)  WHEN vt0.c0 COLLATE BINARY THEN (((('-1065220618')OR(vt0.c0)))OR(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE NULLIF(vt0.c1, vt0.c1)  WHEN vt0.c0 COLLATE BINARY THEN (((('-1065220618')OR(vt0.c0)))OR(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(vt0.c1, vt0.c1)  WHEN vt0.c0 COLLATE BINARY THEN (((('-1065220618')OR(vt0.c0)))OR(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE NULLIF(vt0.c1, vt0.c1)  WHEN vt0.c0 COLLATE BINARY THEN (((('-1065220618')OR(vt0.c0)))OR(vt1.c0)) WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN vt0.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) ORDER BY ((CASE 0.6205755304084792  WHEN '2083831638' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c1 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((CASE 0.6205755304084792  WHEN '2083831638' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c1 END) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) ORDER BY ((CASE 0.6205755304084792  WHEN '2083831638' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c1 END) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((CASE 0.6205755304084792  WHEN '2083831638' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c1 END) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) ORDER BY ((CASE 0.6205755304084792  WHEN '2083831638' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c1 END) IS FALSE) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((('')<(vt0.c1)))))OR(((vt0.c1)<(vt0.c0)))) DESC, ABS(DISTINCT ((vt0.c0)>(x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((('')<(vt0.c1)))))OR(((vt0.c1)<(vt0.c0)))) DESC, ABS(DISTINCT ((vt0.c0)>(x'')))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((('')<(vt0.c1)))))OR(((vt0.c1)<(vt0.c0)))) DESC, ABS(DISTINCT ((vt0.c0)>(x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((('')<(vt0.c1)))))OR(((vt0.c1)<(vt0.c0)))) DESC, ABS(DISTINCT ((vt0.c0)>(x'')))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)OR((('')<(vt0.c1)))))OR(((vt0.c1)<(vt0.c0)))) DESC, ABS(DISTINCT ((vt0.c0)>(x'')))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY CAST((x'fa63' IN (vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CAST((x'fa63' IN (vt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY CAST((x'fa63' IN (vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CAST((x'fa63' IN (vt1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ORDER BY CAST((x'fa63' IN (vt1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (~ ((~ (3.70563877E8)))) WHERE (TRIM(DISTINCT ((vt0.c0)|(vt0.c1)))) ORDER BY json(vt1.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)|(vt0.c1)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (~ ((~ (3.70563877E8)))) ORDER BY json(vt1.c0) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (~ ((~ (3.70563877E8)))) WHERE (TRIM(DISTINCT ((vt0.c0)|(vt0.c1)))) ORDER BY json(vt1.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)|(vt0.c1)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (~ ((~ (3.70563877E8)))) ORDER BY json(vt1.c0) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (('' COLLATE RTRIM)) AND ((((vt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (('' COLLATE RTRIM)) AND ((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (('' COLLATE RTRIM)) AND ((((vt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (('' COLLATE RTRIM)) AND ((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (('' COLLATE RTRIM)) AND ((((vt0.c1) NOT NULL)))));
SELECT ALL * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS BLOB))AND(vt1.c0)))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0)|(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS BLOB))AND(vt1.c0)))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0)|(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS BLOB))AND(vt1.c0)))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0)|(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS BLOB))AND(vt1.c0)))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0)|(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS BLOB))AND(vt1.c0)))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0)|(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0)))-(((vt0.c1)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0)))-(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0)))-(((vt0.c1)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0)))-(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0)))-(((vt0.c1)GLOB(vt0.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END) BETWEEN ((NOT (vt0.c1))) AND (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c0)))LIKE((+ (vt0.c0))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c0)))LIKE((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c0)))LIKE((+ (vt0.c0))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c0)))LIKE((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)-(vt0.c0)))LIKE((+ (vt0.c0))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((('-780424849') NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY ((((((vt0.c0))<=((vt0.c0)))))=(((vt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-780424849') NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0))<=((vt0.c0)))))==(((vt0.c1 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((('-780424849') NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY ((((((vt0.c0))<=((vt0.c0)))))=(((vt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-780424849') NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0))<=((vt0.c0)))))==(((vt0.c1 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((('-780424849') NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY ((((((vt0.c0))<=((vt0.c0)))))=(((vt0.c1 IN ()))))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, 0.5620718328468233, -1.750837713E9, vt1.c0))) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)==(vt1.c0)) THEN (NOT (vt1.c0)) WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, 0.5620718328468233, -1.750837713E9, vt1.c0))) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)=(vt1.c0)) THEN (NOT (vt1.c0)) WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, 0.5620718328468233, -1.750837713E9, vt1.c0))) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)==(vt1.c0)) THEN (NOT (vt1.c0)) WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, 0.5620718328468233, -1.750837713E9, vt1.c0))) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)=(vt1.c0)) THEN (NOT (vt1.c0)) WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))<=((vt1.c0, vt1.c0, 0.5620718328468233, -1.750837713E9, vt1.c0))) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)==(vt1.c0)) THEN (NOT (vt1.c0)) WHEN (NOT (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((x'34dd')<<('-0.0'))));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((x'34dd')<<('-0.0')))));
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((x'34dd')<<('-0.0'))));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((x'34dd')<<('-0.0')))));
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS INTEGER)) ORDER BY ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((x'34dd')<<('-0.0'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))>>(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)AND(vt1.c0))))) ORDER BY (- (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) DESC);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)AND(vt1.c0))))) ORDER BY (- (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) DESC);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS TEXT))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0)AND(vt1.c0))))) ORDER BY (- (vt1.c0)) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (load_extension((('') BETWEEN (vt0.c0) AND (vt0.c1)), ((x'ed53')>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((('') BETWEEN (vt0.c0) AND (vt0.c1)), ((x'ed53')>=(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (load_extension((('') BETWEEN (vt0.c0) AND (vt0.c1)), ((x'ed53')>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((('') BETWEEN (vt0.c0) AND (vt0.c1)), ((x'ed53')>=(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c1 IN ())) ORDER BY (((('-1023188310') BETWEEN (vt1.c0) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((('-1023188310') BETWEEN (vt1.c0) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c1 IN ())) ORDER BY (((('-1023188310') BETWEEN (vt1.c0) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((('-1023188310') BETWEEN (vt1.c0) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c1 IN ())) ORDER BY (((('-1023188310') BETWEEN (vt1.c0) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((NULL)/(vt0.c1))) NOT BETWEEN (vt1.c0) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NULL)/(vt0.c1))) NOT BETWEEN (vt1.c0) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((NULL)/(vt0.c1))) NOT BETWEEN (vt1.c0) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NULL)/(vt0.c1))) NOT BETWEEN (vt1.c0) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((NULL)/(vt0.c1))) NOT BETWEEN (vt1.c0) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((0.21903533765710503) BETWEEN (vt1.c0) AND (vt0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((0.21903533765710503) BETWEEN (vt1.c0) AND (vt0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((0.21903533765710503) BETWEEN (vt1.c0) AND (vt0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((0.21903533765710503) BETWEEN (vt1.c0) AND (vt0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((0.21903533765710503) BETWEEN (vt1.c0) AND (vt0.c0))))>((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 END))) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((+ (NULL))) NOTNULL) WHERE ((('-1017711891') IS FALSE)) ORDER BY CASE WHEN ((0xffffffffe0eb80ed)/(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1017711891') IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((+ (NULL))) NOTNULL) ORDER BY CASE WHEN ((0xffffffffe0eb80ed)/(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS INTEGER) END DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((+ (NULL))) NOTNULL) WHERE ((('-1017711891') IS FALSE)) ORDER BY CASE WHEN ((0xffffffffe0eb80ed)/(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1017711891') IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((+ (NULL))) NOTNULL) ORDER BY CASE WHEN ((0xffffffffe0eb80ed)/(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS INTEGER) END DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((+ (NULL))) NOTNULL) WHERE ((('-1017711891') IS FALSE)) ORDER BY CASE WHEN ((0xffffffffe0eb80ed)/(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS INTEGER) END DESC;
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY COALESCE(SQLITE_VERSION(), ((vt0.c0) NOT NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY COALESCE(SQLITE_VERSION(), ((vt0.c0) NOT NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY COALESCE(SQLITE_VERSION(), ((vt0.c0) NOT NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY COALESCE(SQLITE_VERSION(), ((vt0.c0) NOT NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY COALESCE(SQLITE_VERSION(), ((vt0.c0) NOT NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)IS(vt0.c1))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)IS(vt0.c1))) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)IS(vt0.c1))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)IS(vt0.c1))) AND (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c1)IS(vt0.c1))) AND (((vt0.c0)!=(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ('?eVp^');
SELECT SUM(count) FROM (SELECT ALL (('?eVp^') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ('?eVp^');
SELECT SUM(count) FROM (SELECT ALL (('?eVp^') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ('?eVp^');
SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND((((vt0.c1))<>((vt0.c0))))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND((((vt0.c1))<>((vt0.c0))))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND((((vt0.c1))<>((vt0.c0))))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND((((vt0.c1))<>((vt0.c0))))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c1 END)AND((((vt0.c1))<>((vt0.c0))))))OR((vt1.c0 IN ()))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT * FROM vt0 WHERE (json_array(vt0.c1, vt0.c0) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0)<<(vt0.c1)) COLLATE NOCASE  NULLS LAST, ((TYPEOF(vt0.c1)) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((json_array(vt0.c1, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0)<<(vt0.c1)) COLLATE NOCASE  NULLS LAST, ((TYPEOF(vt0.c1)) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) ASC);
SELECT * FROM vt0 WHERE (json_array(vt0.c1, vt0.c0) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0)<<(vt0.c1)) COLLATE NOCASE  NULLS LAST, ((TYPEOF(vt0.c1)) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((json_array(vt0.c1, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, ((vt0.c0)<<(vt0.c1)) COLLATE NOCASE  NULLS LAST, ((TYPEOF(vt0.c1)) NOT BETWEEN (LIKELY(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-0.0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((-0.0) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-0.0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((-0.0) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-0.0) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))AND(TYPEOF(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))AND(TYPEOF(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))AND(TYPEOF(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))AND(TYPEOF(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0)) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))AND(TYPEOF(vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt0.c1)<(vt1.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt0.c1)<(vt1.c0))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt0.c1)<(vt1.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt0.c1)<(vt1.c0))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt0.c1)<(vt1.c0))) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'') NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'') NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((x'') NOT NULL))));
SELECT * FROM vt1, vt0 WHERE ((vt0.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((vt0.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((vt0.c0 IN (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))AND(0.11706451040481469)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))AND(0.11706451040481469))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))AND(0.11706451040481469)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))AND(0.11706451040481469))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((vt0.c0 IN ()))))AND(0.11706451040481469)));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0) ISNULL))AND(vt0.c1)))AND(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN 1e500 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN 1e500 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN 1e500 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN 1e500 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN 1e500 THEN vt1.c0 ELSE vt0.c1 END)>=(vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))IS(x'')) WHERE (((NULL) NOT BETWEEN ((~ (0.8494261648730835))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((~ (0.8494261648730835))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))IS(x'')));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))IS(x'')) WHERE (((NULL) NOT BETWEEN ((~ (0.8494261648730835))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN ((~ (0.8494261648730835))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))IS(x'')));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))IS(x'')) WHERE (((NULL) NOT BETWEEN ((~ (0.8494261648730835))) AND ((vt0.c1 IN ()))));
SELECT * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN '370563877' THEN vt1.c0 END IN ())) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(MIN(vt0.c1, vt0.c1))))OR(((vt0.c1)%(vt0.c1)))))AND((((vt1.c0, vt0.c1, vt1.c0))<((0.347895012520559, vt0.c1, vt0.c0))))))OR(((vt0.c0)>=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN '370563877' THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt1.c0) NOTNULL))OR(MIN(vt0.c1, vt0.c1))))OR(((vt0.c1)%(vt0.c1)))))AND((((vt1.c0, vt0.c1, vt1.c0))<((0.347895012520559, vt0.c1, vt0.c0))))))OR(((vt0.c0)>=(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN '370563877' THEN vt1.c0 END IN ())) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(MIN(vt0.c1, vt0.c1))))OR(((vt0.c1)%(vt0.c1)))))AND((((vt1.c0, vt0.c1, vt1.c0))<((0.347895012520559, vt0.c1, vt0.c0))))))OR(((vt0.c0)>=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN '370563877' THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt1.c0) NOTNULL))OR(MIN(vt0.c1, vt0.c1))))OR(((vt0.c1)%(vt0.c1)))))AND((((vt1.c0, vt0.c1, vt1.c0))<((0.347895012520559, vt0.c1, vt0.c0))))))OR(((vt0.c0)>=(vt1.c0))))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN '370563877' THEN vt1.c0 END IN ())) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(MIN(vt0.c1, vt0.c1))))OR(((vt0.c1)%(vt0.c1)))))AND((((vt1.c0, vt0.c1, vt1.c0))<((0.347895012520559, vt0.c1, vt0.c0))))))OR(((vt0.c0)>=(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED CROSS JOIN vt0 ON CAST((+ (vt1.c0)) AS REAL) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST((+ (vt1.c0)) AS REAL));
SELECT ALL * FROM vt1 NOT INDEXED CROSS JOIN vt0 ON CAST((+ (vt1.c0)) AS REAL) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST((+ (vt1.c0)) AS REAL));
SELECT ALL * FROM vt1 NOT INDEXED CROSS JOIN vt0 ON CAST((+ (vt1.c0)) AS REAL) WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('T~k(r^gO긙');
SELECT SUM(count) FROM (SELECT ALL (('T~k(r^gO긙') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('T~k(r^gO긙');
SELECT SUM(count) FROM (SELECT ALL (('T~k(r^gO긙') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('T~k(r^gO긙');
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)OR(vt1.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(((vt0.c1)=(vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)/(0Xffffffffd439bcfb))) AND (((vt0.c1) BETWEEN ('') AND (vt0.c0)))) ASC, (+ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)/(0xffffffffd439bcfb))) AND (((vt0.c1) BETWEEN ('') AND (vt0.c0)))) ASC, (+ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(((vt0.c1)=(vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)/(0Xffffffffd439bcfb))) AND (((vt0.c1) BETWEEN ('') AND (vt0.c0)))) ASC, (+ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)/(0xffffffffd439bcfb))) AND (((vt0.c1) BETWEEN ('') AND (vt0.c0)))) ASC, (+ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(((vt0.c1)=(vt0.c1))))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB) ASC  NULLS FIRST, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)/(0Xffffffffd439bcfb))) AND (((vt0.c1) BETWEEN ('') AND (vt0.c0)))) ASC, (+ (CAST(vt0.c0 AS INTEGER)))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((('-1550316519')+(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY 0.7646443052137961  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1550316519')+(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.7646443052137961  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((('-1550316519')+(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY 0.7646443052137961  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1550316519')+(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.7646443052137961  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((('-1550316519')+(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY 0.7646443052137961  NULLS FIRST;
SELECT * FROM vt0 WHERE (((-7.64442509E8)-((((vt0.c0))!=((vt0.c0)))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC, (((vt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-7.64442509E8)-((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) ISNULL))) DESC, (((vt0.c1) ISNULL) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (((-7.64442509E8)-((((vt0.c0))!=((vt0.c0)))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC, (((vt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-7.64442509E8)-((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) ISNULL))) DESC, (((vt0.c1) ISNULL) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (((-7.64442509E8)-((((vt0.c0))!=((vt0.c0)))))) ORDER BY (+ (((vt0.c0) ISNULL))) DESC, (((vt0.c1) ISNULL) IN ())  NULLS LAST;
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1)/(vt0.c1)))) ORDER BY ((vt0.c1 IN ()) IN (((vt1.c0) IS TRUE)))  NULLS LAST, (NOT ((~ (vt0.c0)))), ((UPPER(vt0.c0))>=(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c1)/(vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 IN ()) IN (((vt1.c0) IS TRUE)))  NULLS LAST, (NOT ((~ (vt0.c0)))), ((UPPER(vt0.c0))>=(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1)/(vt0.c1)))) ORDER BY ((vt0.c1 IN ()) IN (((vt1.c0) IS TRUE)))  NULLS LAST, (NOT ((~ (vt0.c0)))), ((UPPER(vt0.c0))>=(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c1)/(vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 IN ()) IN (((vt1.c0) IS TRUE)))  NULLS LAST, (NOT ((~ (vt0.c0)))), ((UPPER(vt0.c0))>=(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1)/(vt0.c1)))) ORDER BY ((vt0.c1 IN ()) IN (((vt1.c0) IS TRUE)))  NULLS LAST, (NOT ((~ (vt0.c0)))), ((UPPER(vt0.c0))>=(((vt1.c0)GLOB(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(NULL AS BLOB)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0)>(vt0.c1)), LIKE(vt0.c1, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0)>(vt0.c1)), LIKE(vt0.c1, vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0)>(vt0.c1)), LIKE(vt0.c1, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0)>(vt0.c1)), LIKE(vt0.c1, vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS BLOB)) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC)  NULLS LAST, (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0)>(vt0.c1)), LIKE(vt0.c1, vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ ('-521436947'))) ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, -146488068)) AND ((vt0.c0, vt1.c0, vt0.c0))))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, (~ (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((~ ('-521436947'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, -146488068)) AND ((vt0.c0, vt1.c0, vt0.c0))))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, (~ (CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ ('-521436947'))) ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, -146488068)) AND ((vt0.c0, vt1.c0, vt0.c0))))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, (~ (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((~ ('-521436947'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, -146488068)) AND ((vt0.c0, vt1.c0, vt0.c0))))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, (~ (CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ ('-521436947'))) ORDER BY (((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, -146488068)) AND ((vt0.c0, vt1.c0, vt0.c0))))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) DESC  NULLS FIRST, (~ (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)OR(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((vt1.c0 IN (0.3058760798959136)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (0.3058760798959136)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((vt1.c0 IN (0.3058760798959136)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (0.3058760798959136)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((vt1.c0 IN (0.3058760798959136)) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY x'', ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN '370563877' THEN vt1.c0 WHEN x'' THEN NULL END) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) AND ((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY x'', ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN '370563877' THEN vt1.c0 WHEN x'' THEN NULL END) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) AND ((NOT (vt1.c0)))));
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY x'', ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN '370563877' THEN vt1.c0 WHEN x'' THEN NULL END) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) AND ((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY x'', ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN '370563877' THEN vt1.c0 WHEN x'' THEN NULL END) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) AND ((NOT (vt1.c0)))));
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY x'', ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN '370563877' THEN vt1.c0 WHEN x'' THEN NULL END) BETWEEN (TIME(vt1.c0, vt1.c0, vt1.c0, x'', vt1.c0)) AND ((NOT (vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((+ (0.5620718328468233)))+(((((vt1.c0)AND(0.40454006517406293)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((+ (0.5620718328468233)))+(((((vt1.c0)AND(0.40454006517406293)))OR(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((+ (0.5620718328468233)))+(((((vt1.c0)AND(0.40454006517406293)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((+ (0.5620718328468233)))+(((((vt1.c0)AND(0.40454006517406293)))OR(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((+ (0.5620718328468233)))+(((((vt1.c0)AND(0.40454006517406293)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST, (((((0.977547586062608, vt0.c0, vt0.c0, 0.587070081003659, vt0.c0))>((vt1.c0, vt0.c0, vt0.c1, vt1.c0, vt0.c1)))) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST, (((((0.977547586062608, vt0.c0, vt0.c0, 0.587070081003659, vt0.c0))>((vt1.c0, vt0.c0, vt0.c1, vt1.c0, vt0.c1)))) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST, (((((0.977547586062608, vt0.c0, vt0.c0, 0.587070081003659, vt0.c0))>((vt1.c0, vt0.c0, vt0.c1, vt1.c0, vt0.c1)))) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST, (((((0.977547586062608, vt0.c0, vt0.c0, 0.587070081003659, vt0.c0))>((vt1.c0, vt0.c0, vt0.c1, vt1.c0, vt0.c1)))) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c1, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.6010368842980338);
SELECT SUM(count) FROM (SELECT ALL ((0.6010368842980338) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.6010368842980338);
SELECT SUM(count) FROM (SELECT ALL ((0.6010368842980338) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.6010368842980338);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)>(vt0.c1))))!=((((vt0.c0)=(vt0.c0)))))) ORDER BY CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c0 END ASC, ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC  NULLS FIRST, (json_array(vt0.c1, 0.881394439061738) IN (((vt0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>(vt0.c1))))<>((((vt0.c0)=(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c0 END ASC, ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC  NULLS FIRST, (json_array(vt0.c1, 0.881394439061738) IN (((vt0.c1) ISNULL))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)>(vt0.c1))))!=((((vt0.c0)=(vt0.c0)))))) ORDER BY CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c0 END ASC, ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC  NULLS FIRST, (json_array(vt0.c1, 0.881394439061738) IN (((vt0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>(vt0.c1))))<>((((vt0.c0)=(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c0 END ASC, ((((vt0.c0)>=(vt0.c0))) NOT NULL) ASC  NULLS FIRST, (json_array(vt0.c1, 0.881394439061738) IN (((vt0.c1) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((vt0.c0)|(vt0.c1)) THEN (vt0.c0 IN (vt0.c1, '-1555235328')) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((vt0.c0)|(vt0.c1)) THEN (vt0.c0 IN (vt0.c1, '-1555235328')) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((vt0.c0)|(vt0.c1)) THEN (vt0.c0 IN (vt0.c1, '-1555235328')) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((vt0.c0)|(vt0.c1)) THEN (vt0.c0 IN (vt0.c1, '-1555235328')) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((vt0.c0)|(vt0.c1)) THEN (vt0.c0 IN (vt0.c1, '-1555235328')) ELSE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN '~*' WHEN vt0.c1 THEN vt0.c1 WHEN 0x51a61032 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((vt1.c0)OR(vt0.c1)))AND(-1.550316519E9)))=(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN '~*' WHEN vt0.c1 THEN vt0.c1 WHEN 0X51a61032 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)OR(vt0.c1)))AND(-1.550316519E9)))==(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN '~*' WHEN vt0.c1 THEN vt0.c1 WHEN 0x51a61032 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((vt1.c0)OR(vt0.c1)))AND(-1.550316519E9)))=(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN '~*' WHEN vt0.c1 THEN vt0.c1 WHEN 0X51a61032 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)OR(vt0.c1)))AND(-1.550316519E9)))==(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN '~*' WHEN vt0.c1 THEN vt0.c1 WHEN 0x51a61032 THEN vt0.c0 ELSE vt1.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((((vt1.c0)OR(vt0.c1)))AND(-1.550316519E9)))=(vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)&(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE ((UNLIKELY(DISTINCT vt1.c0) IN ())) ORDER BY ((NOT (vt1.c0)) IN (vt1.c0, (NOT (vt1.c0)))), ((vt1.c0) ISNULL) DESC, json_quote((vt1.c0 IN (vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((NOT (vt1.c0)) IN (vt1.c0, (NOT (vt1.c0)))), ((vt1.c0) ISNULL) DESC, json_quote((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((UNLIKELY(DISTINCT vt1.c0) IN ())) ORDER BY ((NOT (vt1.c0)) IN (vt1.c0, (NOT (vt1.c0)))), ((vt1.c0) ISNULL) DESC, json_quote((vt1.c0 IN (vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((NOT (vt1.c0)) IN (vt1.c0, (NOT (vt1.c0)))), ((vt1.c0) ISNULL) DESC, json_quote((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((UNLIKELY(DISTINCT vt1.c0) IN ())) ORDER BY ((NOT (vt1.c0)) IN (vt1.c0, (NOT (vt1.c0)))), ((vt1.c0) ISNULL) DESC, json_quote((vt1.c0 IN (vt1.c0, vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) NOT NULL)) ORDER BY json_array_length(vt1.c0 COLLATE BINARY, ((vt1.c0)|(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY json_array_length(vt1.c0 COLLATE BINARY, ((vt1.c0)|(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) NOT NULL)) ORDER BY json_array_length(vt1.c0 COLLATE BINARY, ((vt1.c0)|(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY json_array_length(vt1.c0 COLLATE BINARY, ((vt1.c0)|(vt1.c0))));
SELECT * FROM vt1 WHERE (((NULL IN (vt1.c0)) IN (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN (vt1.c0)) IN (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((NULL IN (vt1.c0)) IN (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN (vt1.c0)) IN (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((NULL IN (vt1.c0)) IN (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(x'1df9')) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)IS((((vt0.c1))>((vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)<=(vt1.c0)))), '-1518780427'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(x'1df9')) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)IS((((vt0.c1))>((vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)<=(vt1.c0)))), '-1518780427'  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(x'1df9')) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)IS((((vt0.c1))>((vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)<=(vt1.c0)))), '-1518780427'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)||(x'1df9')) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)IS((((vt0.c1))>((vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)<=(vt1.c0)))), '-1518780427'  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(x'1df9')) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)IS((((vt0.c1))>((vt0.c0))))), ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)<=(vt1.c0)))), '-1518780427'  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN (vt0.c0 IN (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (- (vt0.c0 COLLATE NOCASE)), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN (vt0.c0 IN (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE)), vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN (vt0.c0 IN (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (- (vt0.c0 COLLATE NOCASE)), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN (vt0.c0 IN (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE)), vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) WHEN (vt0.c0 IN (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (- (vt0.c0 COLLATE NOCASE)), vt0.c0;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))!=((vt0.c1))))<<(CASE 0.1924526451655566  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7349502177136326 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((vt0.c1))))<<(CASE 0.1924526451655566  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7349502177136326 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))!=((vt0.c1))))<<(CASE 0.1924526451655566  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7349502177136326 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((vt0.c1))))<<(CASE 0.1924526451655566  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7349502177136326 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))!=((vt0.c1))))<<(CASE 0.1924526451655566  WHEN vt1.c0 THEN vt0.c0 WHEN 0.7349502177136326 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((((CAST(vt0.c1 AS REAL))AND(((vt0.c1)OR(vt0.c1)))))AND(((NULL)>(vt0.c1)))) ASC, '[' DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS REAL))AND(((vt0.c1)OR(vt0.c1)))))AND(((NULL)>(vt0.c1)))) ASC, '[' DESC);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((((CAST(vt0.c1 AS REAL))AND(((vt0.c1)OR(vt0.c1)))))AND(((NULL)>(vt0.c1)))) ASC, '[' DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS REAL))AND(((vt0.c1)OR(vt0.c1)))))AND(((NULL)>(vt0.c1)))) ASC, '[' DESC);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY ((((CAST(vt0.c1 AS REAL))AND(((vt0.c1)OR(vt0.c1)))))AND(((NULL)>(vt0.c1)))) ASC, '[' DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY -1.550316519E9;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY -1.550316519E9);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY -1.550316519E9;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY -1.550316519E9);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END IN ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY -1.550316519E9;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((vt1.c0 IN (vt0.c0)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE RTRIM)!=(vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)!=(vt0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((vt1.c0 IN (vt0.c0)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE RTRIM)!=(vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)!=(vt0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((vt1.c0 IN (vt0.c0)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE RTRIM)!=(vt0.c0 COLLATE NOCASE)) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((+ (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (NULL)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((+ (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (NULL)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((+ (NULL)) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_extract(vt1.c0, vt1.c0) WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_extract(vt1.c0, vt1.c0) WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_extract(vt1.c0, vt1.c0) WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN json_extract(vt1.c0, vt1.c0) WHEN (vt1.c0 IN ()) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt0, vt1 WHERE ((('<n' COLLATE BINARY) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt1.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((('<n' COLLATE BINARY) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt1.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((('<n' COLLATE BINARY) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt1.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((('<n' COLLATE BINARY) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt1.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((('<n' COLLATE BINARY) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt1.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)>(vt1.c0 COLLATE NOCASE))) ORDER BY (((- (0.8485594702030969)))IS NOT((((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c1, vt0.c1, vt0.c1))))) DESC  NULLS LAST, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(0.9416543480353314)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (0.8485594702030969)))IS NOT((((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c1, vt0.c1, vt0.c1))))) DESC  NULLS LAST, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(0.9416543480353314)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)>(vt1.c0 COLLATE NOCASE))) ORDER BY (((- (0.8485594702030969)))IS NOT((((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c1, vt0.c1, vt0.c1))))) DESC  NULLS LAST, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(0.9416543480353314)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (0.8485594702030969)))IS NOT((((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c1, vt0.c1, vt0.c1))))) DESC  NULLS LAST, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(0.9416543480353314)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)>(vt1.c0 COLLATE NOCASE))) ORDER BY (((- (0.8485594702030969)))IS NOT((((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c1, vt0.c1, vt0.c1))))) DESC  NULLS LAST, CAST(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))OR(vt0.c0)))OR(0.9416543480353314)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (DATETIME(vt0.c1, vt0.c0, '-1750837713') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((DATETIME(vt0.c1, vt0.c0, '-1750837713') COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (DATETIME(vt0.c1, vt0.c0, '-1750837713') COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((DATETIME(vt0.c1, vt0.c0, '-1750837713') COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (DATETIME(vt0.c1, vt0.c0, '-1750837713') COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (CAST((vt1.c0 IN (vt0.c1)) AS NUMERIC)) ORDER BY ((vt0.c1)<(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY ((vt0.c1)<(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (CAST((vt1.c0 IN (vt0.c1)) AS NUMERIC)) ORDER BY ((vt0.c1)<(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY ((vt0.c1)<(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON SQLITE_VERSION() WHERE (CAST((vt1.c0 IN (vt0.c1)) AS NUMERIC)) ORDER BY ((vt0.c1)<(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c1, '-734413573', vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c1, '-734413573', vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c1, '-734413573', vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c1, '-734413573', vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c1, '-734413573', vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((RTRIM(vt1.c0)) NOT BETWEEN (json_array_length(0.45830204849652156)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt1.c0)) NOT BETWEEN (json_array_length(0.45830204849652156)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((RTRIM(vt1.c0)) NOT BETWEEN (json_array_length(0.45830204849652156)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt1.c0)) NOT BETWEEN (json_array_length(0.45830204849652156)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((RTRIM(vt1.c0)) NOT BETWEEN (json_array_length(0.45830204849652156)) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((TRIM(vt1.c0, vt1.c0) IN ())) ORDER BY (~ (((vt1.c0)/(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0)/(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((TRIM(vt1.c0, vt1.c0) IN ())) ORDER BY (~ (((vt1.c0)/(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0)/(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((TRIM(vt1.c0, vt1.c0) IN ())) ORDER BY (~ (((vt1.c0)/(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(vt0.c1)))<<((vt1.c0 IN (vt1.c0))))) ORDER BY (((- (vt1.c0)))%((vt1.c0 IN (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt0.c1)))<<((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((- (vt1.c0)))%((vt1.c0 IN (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(vt0.c1)))<<((vt1.c0 IN (vt1.c0))))) ORDER BY (((- (vt1.c0)))%((vt1.c0 IN (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt0.c1)))<<((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((- (vt1.c0)))%((vt1.c0 IN (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(vt0.c1)))<<((vt1.c0 IN (vt1.c0))))) ORDER BY (((- (vt1.c0)))%((vt1.c0 IN (vt1.c0)))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)GLOB(((vt0.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)GLOB(((vt0.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)GLOB(((vt0.c1)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (+ (((vt1.c0)IS NOT('hEO7'))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)IS NOT('hEO7')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (+ (((vt1.c0)IS NOT('hEO7'))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)IS NOT('hEO7')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (+ (((vt1.c0)IS NOT('hEO7'))));
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)-(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c0))) IS TRUE)) ORDER BY ((((0.35180281931054636)OR(((vt1.c0)%(vt0.c0)))))OR(((vt0.c0) NOT NULL))) ASC  NULLS LAST, (- (((vt0.c0)-(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0.35180281931054636)OR(((vt1.c0)%(vt0.c0)))))OR(((vt0.c0) NOT NULL))) ASC  NULLS LAST, (- (((vt0.c0)-(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c0))) IS TRUE)) ORDER BY ((((0.35180281931054636)OR(((vt1.c0)%(vt0.c0)))))OR(((vt0.c0) NOT NULL))) ASC  NULLS LAST, (- (((vt0.c0)-(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0.35180281931054636)OR(((vt1.c0)%(vt0.c0)))))OR(((vt0.c0) NOT NULL))) ASC  NULLS LAST, (- (((vt0.c0)-(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c0))) IS TRUE)) ORDER BY ((((0.35180281931054636)OR(((vt1.c0)%(vt0.c0)))))OR(((vt0.c0) NOT NULL))) ASC  NULLS LAST, (- (((vt0.c0)-(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((LOWER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((LOWER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((LOWER(vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (2.083831638E9)))OR(((((vt0.c1)AND(x'')))AND(vt0.c1)))))OR(UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (2.083831638E9)))OR(((((vt0.c1)AND(x'')))AND(vt0.c1)))))OR(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (2.083831638E9)))OR(((((vt0.c1)AND(x'')))AND(vt0.c1)))))OR(UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (2.083831638E9)))OR(((((vt0.c1)AND(x'')))AND(vt0.c1)))))OR(UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (2.083831638E9)))OR(((((vt0.c1)AND(x'')))AND(vt0.c1)))))OR(UNLIKELY(vt1.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (~ (NULL)) THEN ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(x'bbd7')) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)%(vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((vt1.c0))<((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (NULL)) THEN ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(x'bbd7')) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)%(vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((vt1.c0))<((vt0.c1))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (~ (NULL)) THEN ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(x'bbd7')) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)%(vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((vt1.c0))<((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (NULL)) THEN ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(x'bbd7')) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)%(vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((vt1.c0))<((vt0.c1))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN (~ (NULL)) THEN ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(x'')))OR(x'bbd7')) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)%(vt0.c0)) THEN LOWER(DISTINCT vt0.c0) ELSE (((vt1.c0))<((vt0.c1))) END);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((- ('[&Ix')))))OR('-1675941550')));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((- ('[&Ix')))))OR('-1675941550'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((- ('[&Ix')))))OR('-1675941550')));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((- ('[&Ix')))))OR('-1675941550'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR((- ('[&Ix')))))OR('-1675941550')));
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)&(vt0.c0)) AS REAL)) ORDER BY 0.3609593586319296  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)&(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 0.3609593586319296  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)&(vt0.c0)) AS REAL)) ORDER BY 0.3609593586319296  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)&(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 0.3609593586319296  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)&(vt0.c0)) AS REAL)) ORDER BY 0.3609593586319296  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)<=(vt0.c1)))))OR(ABS(DISTINCT vt0.c0))) WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY (NOT ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)<=(vt0.c1)))))OR(ABS(DISTINCT vt0.c0))) ORDER BY (NOT ((~ (vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)<=(vt0.c1)))))OR(ABS(DISTINCT vt0.c0))) WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY (NOT ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)<=(vt0.c1)))))OR(ABS(DISTINCT vt0.c0))) ORDER BY (NOT ((~ (vt0.c0)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c1)<=(vt0.c1)))))OR(ABS(DISTINCT vt0.c0))) WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY (NOT ((~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_object(((vt1.c0)LIKE(vt1.c0)), (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB), LOWER(DISTINCT 0.9588616366964456), ((vt1.c0)>>(vt1.c0)), ((vt1.c0)IS NOT(0.22752460312961065)))) ORDER BY ((x'')+(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt1.c0)LIKE(vt1.c0)), (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB), LOWER(DISTINCT 0.9588616366964456), ((vt1.c0)>>(vt1.c0)), ((vt1.c0)IS NOT(0.22752460312961065)))) IS TRUE)  as count FROM vt1 ORDER BY ((x'')+(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_object(((vt1.c0)LIKE(vt1.c0)), (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB), LOWER(DISTINCT 0.9588616366964456), ((vt1.c0)>>(vt1.c0)), ((vt1.c0)IS NOT(0.22752460312961065)))) ORDER BY ((x'')+(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt1.c0)LIKE(vt1.c0)), (NOT (vt1.c0)), CAST(vt1.c0 AS BLOB), LOWER(DISTINCT 0.9588616366964456), ((vt1.c0)>>(vt1.c0)), ((vt1.c0)IS NOT(0.22752460312961065)))) IS TRUE)  as count FROM vt1 ORDER BY ((x'')+(CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (0.9458971168759257);
SELECT SUM(count) FROM (SELECT ((0.9458971168759257) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.9458971168759257);
SELECT SUM(count) FROM (SELECT ((0.9458971168759257) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.9458971168759257);
SELECT ALL * FROM vt1 WHERE ((~ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((HEX(vt1.c0))|(CAST('0.7690477564126841' AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((HEX(vt1.c0))|(CAST('0.7690477564126841' AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((HEX(vt1.c0))|(CAST('0.7690477564126841' AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((HEX(vt1.c0))|(CAST('0.7690477564126841' AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((HEX(vt1.c0))|(CAST('0.7690477564126841' AS TEXT)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (CAST(vt0.c0 AS REAL), ((vt0.c1)>>(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt0.c0)) IN (CAST(vt0.c0 AS REAL), ((vt0.c1)>>(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (CAST(vt0.c0 AS REAL), ((vt0.c1)>>(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt0.c0)) IN (CAST(vt0.c0 AS REAL), ((vt0.c1)>>(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (CAST(vt0.c0 AS REAL), ((vt0.c1)>>(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)AND(0.07404979845660875)) IN ())) ORDER BY (((vt1.c0)GLOB(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)AND(0.07404979845660875)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)GLOB(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)AND(0.07404979845660875)) IN ())) ORDER BY (((vt1.c0)GLOB(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)AND(0.07404979845660875)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)GLOB(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)AND(0.07404979845660875)) IN ())) ORDER BY (((vt1.c0)GLOB(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN '-941975296' WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT NULL) DESC  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN '-941975296' WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT NULL) DESC  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS REAL));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN '-941975296' WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT NULL) DESC  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN '-941975296' WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT NULL) DESC  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS REAL));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN '-941975296' WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT NULL) DESC  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS REAL);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (NULL))) ORDER BY (((0X0 IN ()))<>(CASE WHEN vt0.c0 THEN vt0.c0 END)), (~ (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((0x0 IN ()))!=(CASE WHEN vt0.c0 THEN vt0.c0 END)), (~ (vt0.c1)));
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (NULL))) ORDER BY (((0X0 IN ()))<>(CASE WHEN vt0.c0 THEN vt0.c0 END)), (~ (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((0x0 IN ()))!=(CASE WHEN vt0.c0 THEN vt0.c0 END)), (~ (vt0.c1)));
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND (NULL))) ORDER BY (((0X0 IN ()))<>(CASE WHEN vt0.c0 THEN vt0.c0 END)), (~ (vt0.c1));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(SQLITE_VERSION() AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_VERSION() AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(SQLITE_VERSION() AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_VERSION() AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(SQLITE_VERSION() AS TEXT));
SELECT * FROM vt0 WHERE ('1369837618');
SELECT SUM(count) FROM (SELECT (('1369837618') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('1369837618');
SELECT SUM(count) FROM (SELECT (('1369837618') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('1369837618');
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(DISTINCT vt0.c1)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(DISTINCT vt0.c1)) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(DISTINCT vt0.c1)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(DISTINCT vt0.c1)) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) BETWEEN (UPPER(DISTINCT vt0.c1)) AND (vt1.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c1, 0.5868172699085595)) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c1, 0.5868172699085595)) AND (''))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c1, 0.5868172699085595)) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c1, 0.5868172699085595)) AND (''))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0))<((vt1.c0)))) NOT BETWEEN (LIKELIHOOD(vt0.c1, 0.5868172699085595)) AND ('')));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN 370563877 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c0 END))) ORDER BY QUOTE(vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN 370563877 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY QUOTE(vt1.c0 COLLATE NOCASE));
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN 370563877 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c0 END))) ORDER BY QUOTE(vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN 370563877 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY QUOTE(vt1.c0 COLLATE NOCASE));
SELECT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN 370563877 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c0 END))) ORDER BY QUOTE(vt1.c0 COLLATE NOCASE);
SELECT * FROM vt1 WHERE ((- (SQLITE_COMPILEOPTION_GET(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (SQLITE_COMPILEOPTION_GET(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (SQLITE_COMPILEOPTION_GET(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (SQLITE_COMPILEOPTION_GET(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (SQLITE_COMPILEOPTION_GET(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS REAL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS REAL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS REAL)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)-((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)-((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)-((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)-((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)-((+ (vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) AS BLOB)) ORDER BY ((((vt0.c1) IS FALSE))OR(((vt1.c0)<<(vt0.c1)))) ASC  NULLS FIRST, HEX(vt1.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) IS FALSE))OR(((vt1.c0)<<(vt0.c1)))) ASC  NULLS FIRST, HEX(vt1.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) AS BLOB)) ORDER BY ((((vt0.c1) IS FALSE))OR(((vt1.c0)<<(vt0.c1)))) ASC  NULLS FIRST, HEX(vt1.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1) IS FALSE))OR(((vt1.c0)<<(vt0.c1)))) ASC  NULLS FIRST, HEX(vt1.c0) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)) AS BLOB)) ORDER BY ((((vt0.c1) IS FALSE))OR(((vt1.c0)<<(vt0.c1)))) ASC  NULLS FIRST, HEX(vt1.c0) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(0.7926328504090085))  WHEN (NOT (vt0.c0)) THEN '860845230' WHEN ((vt0.c1) IS FALSE) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt0.c1)OR(vt0.c0)) THEN (~ (vt0.c1)) ELSE ((vt0.c1)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(0.7926328504090085))  WHEN (NOT (vt0.c0)) THEN '860845230' WHEN ((vt0.c1) IS FALSE) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt0.c1)OR(vt0.c0)) THEN (~ (vt0.c1)) ELSE ((vt0.c1)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(0.7926328504090085))  WHEN (NOT (vt0.c0)) THEN '860845230' WHEN ((vt0.c1) IS FALSE) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt0.c1)OR(vt0.c0)) THEN (~ (vt0.c1)) ELSE ((vt0.c1)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(0.7926328504090085))  WHEN (NOT (vt0.c0)) THEN '860845230' WHEN ((vt0.c1) IS FALSE) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt0.c1)OR(vt0.c0)) THEN (~ (vt0.c1)) ELSE ((vt0.c1)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(0.7926328504090085))  WHEN (NOT (vt0.c0)) THEN '860845230' WHEN ((vt0.c1) IS FALSE) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt0.c1)OR(vt0.c0)) THEN (~ (vt0.c1)) ELSE ((vt0.c1)IS(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN '-898531616' THEN x'27ea' ELSE vt0.c1 END) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-898531616' THEN x'27ea' ELSE vt0.c1 END) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN '-898531616' THEN x'27ea' ELSE vt0.c1 END) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-898531616' THEN x'27ea' ELSE vt0.c1 END) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN '-898531616' THEN x'27ea' ELSE vt0.c1 END) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c1 IN (vt0.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY (((('-349862006') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((('-349862006') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) DESC);
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY (((('-349862006') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((('-349862006') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) DESC);
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY (((('-349862006') NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) DESC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB) WHERE (LIKELY(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB) WHERE (LIKELY(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END AS BLOB) WHERE (LIKELY(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))+(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))+(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))+(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))+(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))+(CAST(vt1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (('-583956303' COLLATE NOCASE IN ())) ORDER BY CASE ((8.6084523E8)%(vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0))<=((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN json_remove(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((('-583956303' COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE ((8.6084523E8)%(vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0))<=((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN json_remove(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END DESC);
SELECT COUNT(*) FROM vt1 WHERE (('-583956303' COLLATE NOCASE IN ())) ORDER BY CASE ((8.6084523E8)%(vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0))<=((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN json_remove(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((('-583956303' COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE ((8.6084523E8)%(vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN (((vt1.c0))<=((vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN json_remove(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c1, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c1, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c1, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c1, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c1, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c0)<(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (0.9209815760015821)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (0.9209815760015821))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c0)<(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (0.9209815760015821)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (0.9209815760015821))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c0)<(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND ((+ (0.9209815760015821)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE WHEN 0.20411202024991137 THEN vt1.c0 END)) AND (((((''))<=((vt0.c1)))))), ((vt0.c0) BETWEEN (((vt0.c1)||(vt0.c0))) AND ((((vt0.c1))!=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE WHEN 0.20411202024991137 THEN vt1.c0 END)) AND (((((''))<=((vt0.c1)))))), ((vt0.c0) BETWEEN (((vt0.c1)||(vt0.c0))) AND ((((vt0.c1))<>((vt0.c0))))) DESC);
SELECT * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE WHEN 0.20411202024991137 THEN vt1.c0 END)) AND (((((''))<=((vt0.c1)))))), ((vt0.c0) BETWEEN (((vt0.c1)||(vt0.c0))) AND ((((vt0.c1))!=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE WHEN 0.20411202024991137 THEN vt1.c0 END)) AND (((((''))<=((vt0.c1)))))), ((vt0.c0) BETWEEN (((vt0.c1)||(vt0.c0))) AND ((((vt0.c1))<>((vt0.c0))))) DESC);
SELECT * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY (((vt0.c1)) NOT BETWEEN ((CASE WHEN 0.20411202024991137 THEN vt1.c0 END)) AND (((((''))<=((vt0.c1)))))), ((vt0.c0) BETWEEN (((vt0.c1)||(vt0.c0))) AND ((((vt0.c1))!=((vt0.c0))))) DESC;
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((vt1.c0, vt1.c0, x'1a53'))<=((vt1.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffff9c77228b THEN vt1.c0 WHEN 0Xffffffff9c1b2952 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (((((((('4%')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST, LIKELIHOOD(DISTINCT ((vt1.c0)|(vt1.c0)), 0.8841628931550791) ASC, ((COALESCE(DISTINCT vt1.c0, vt1.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((vt1.c0, vt1.c0, x'1a53'))<=((vt1.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffff9c77228b THEN vt1.c0 WHEN 0xffffffff9c1b2952 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (((((((('4%')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST, LIKELIHOOD(DISTINCT ((vt1.c0)|(vt1.c0)), 0.8841628931550791) ASC, ((COALESCE(DISTINCT vt1.c0, vt1.c0)) ISNULL));
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((vt1.c0, vt1.c0, x'1a53'))<=((vt1.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffff9c77228b THEN vt1.c0 WHEN 0Xffffffff9c1b2952 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (((((((('4%')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST, LIKELIHOOD(DISTINCT ((vt1.c0)|(vt1.c0)), 0.8841628931550791) ASC, ((COALESCE(DISTINCT vt1.c0, vt1.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((vt1.c0, vt1.c0, x'1a53'))<=((vt1.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffff9c77228b THEN vt1.c0 WHEN 0xffffffff9c1b2952 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (((((((('4%')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST, LIKELIHOOD(DISTINCT ((vt1.c0)|(vt1.c0)), 0.8841628931550791) ASC, ((COALESCE(DISTINCT vt1.c0, vt1.c0)) ISNULL));
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) COLLATE RTRIM) ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE RTRIM THEN vt1.c0 WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((vt1.c0, vt1.c0, x'1a53'))<=((vt1.c0, vt1.c0, vt1.c0))) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffff9c77228b THEN vt1.c0 WHEN 0Xffffffff9c1b2952 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE (((((((('4%')AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END  NULLS LAST, LIKELIHOOD(DISTINCT ((vt1.c0)|(vt1.c0)), 0.8841628931550791) ASC, ((COALESCE(DISTINCT vt1.c0, vt1.c0)) ISNULL);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))*(LIKE(vt0.c1, NULL, 'c'))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))*(LIKE(vt0.c1, NULL, 'c')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))*(LIKE(vt0.c1, NULL, 'c'))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))*(LIKE(vt0.c1, NULL, 'c')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0)))*(LIKE(vt0.c1, NULL, 'c'))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ((vt1.c0)<(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0)<(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ((vt1.c0)<(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0)<(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY ((vt1.c0)<(vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))<((vt0.c1))))AND((- (vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))) WHERE ((NOT ('-898531616')));
SELECT SUM(count) FROM (SELECT (((NOT ('-898531616'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))<((vt0.c1))))AND((- (vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))<((vt0.c1))))AND((- (vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))) WHERE ((NOT ('-898531616')));
SELECT SUM(count) FROM (SELECT (((NOT ('-898531616'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))<((vt0.c1))))AND((- (vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((((vt1.c0))<((vt0.c1))))AND((- (vt1.c0)))))OR((vt0.c0 IN (vt1.c0)))) WHERE ((NOT ('-898531616')));
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)IS(-8784998)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)IS(-8784998))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)IS(-8784998)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)IS(-8784998))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)IS(-8784998)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((vt1.c0) IS TRUE), vt0.c1 COLLATE BINARY)) WHERE (((((NULL)|(vt0.c0)))%(vt0.c0 COLLATE RTRIM))) ORDER BY CASE HEX(vt1.c0)  WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '-2063244404' WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS FIRST, ((('2083831638' IN ())) ISNULL) DESC, (((-79099461 IN ()))/(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(vt0.c0)))%(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((vt1.c0) IS TRUE), vt0.c1 COLLATE BINARY)) ORDER BY CASE HEX(vt1.c0)  WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '-2063244404' WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS FIRST, ((('2083831638' IN ())) ISNULL) DESC, (((-79099461 IN ()))/(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((vt1.c0) IS TRUE), vt0.c1 COLLATE BINARY)) WHERE (((((NULL)|(vt0.c0)))%(vt0.c0 COLLATE RTRIM))) ORDER BY CASE HEX(vt1.c0)  WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '-2063244404' WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS FIRST, ((('2083831638' IN ())) ISNULL) DESC, (((-79099461 IN ()))/(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)|(vt0.c0)))%(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((vt1.c0) IS TRUE), vt0.c1 COLLATE BINARY)) ORDER BY CASE HEX(vt1.c0)  WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '-2063244404' WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS FIRST, ((('2083831638' IN ())) ISNULL) DESC, (((-79099461 IN ()))/(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((vt1.c0) IS TRUE), vt0.c1 COLLATE BINARY)) WHERE (((((NULL)|(vt0.c0)))%(vt0.c0 COLLATE RTRIM))) ORDER BY CASE HEX(vt1.c0)  WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN '-2063244404' WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS FIRST, ((('2083831638' IN ())) ISNULL) DESC, (((-79099461 IN ()))/(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (0.5145712484768166);
SELECT SUM(count) FROM (SELECT ((0.5145712484768166) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5145712484768166);
SELECT SUM(count) FROM (SELECT ((0.5145712484768166) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.5145712484768166);
SELECT COUNT(*) FROM vt1, vt0 WHERE (-1.711104921E9) ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((-1.711104921E9) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (-1.711104921E9) ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((-1.711104921E9) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (-1.711104921E9) ORDER BY (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ());
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (SUBSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c1)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c1)>(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (SUBSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c1)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c1)>(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE (SUBSTR(CAST(vt0.c0 AS NUMERIC), ((vt0.c1)>(vt0.c0))));
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((LIKELY(vt0.c1)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((LIKELY(vt0.c1)) NOT NULL));
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((LIKELY(vt0.c1)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((LIKELY(vt0.c1)) NOT NULL));
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((LIKELY(vt0.c1)) NOT NULL);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) WHERE (((json_object(vt1.c0, vt0.c0))||(vt1.c0))) ORDER BY ((((RTRIM(vt0.c1))AND(((vt0.c0) BETWEEN (vt0.c1) AND ('-521310525')))))OR('-777708329')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt0.c0))||(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) ORDER BY ((((RTRIM(vt0.c1))AND(((vt0.c0) BETWEEN (vt0.c1) AND ('-521310525')))))OR('-777708329')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) WHERE (((json_object(vt1.c0, vt0.c0))||(vt1.c0))) ORDER BY ((((RTRIM(vt0.c1))AND(((vt0.c0) BETWEEN (vt0.c1) AND ('-521310525')))))OR('-777708329')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt0.c0))||(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c1) ISNULL) AS NUMERIC) ORDER BY ((((RTRIM(vt0.c1))AND(((vt0.c0) BETWEEN (vt0.c1) AND ('-521310525')))))OR('-777708329')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c1, vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c1, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c1, vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c1, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c1, vt0.c1))) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)|(vt0.c1)))<=(TOTAL_CHANGES()))) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN '0.7690477564126841' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN highlight(vt0.c1, vt0.c0, vt0.c1, 0.8136012656031363) THEN (vt0.c0 IN (vt0.c1, vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.660426837029285 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c0)))AND('-1453709475')))OR((vt0.c1 IN (vt0.c0, vt0.c1)))))OR((('')+(NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c1)))<=(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN '0.7690477564126841' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN highlight(vt0.c1, vt0.c0, vt0.c1, 0.8136012656031363) THEN (vt0.c0 IN (vt0.c1, vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.660426837029285 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c0)))AND('-1453709475')))OR((vt0.c1 IN (vt0.c0, vt0.c1)))))OR((('')+(NULL)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)|(vt0.c1)))<=(TOTAL_CHANGES()))) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN '0.7690477564126841' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN highlight(vt0.c1, vt0.c0, vt0.c1, 0.8136012656031363) THEN (vt0.c0 IN (vt0.c1, vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.660426837029285 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c0)))AND('-1453709475')))OR((vt0.c1 IN (vt0.c0, vt0.c1)))))OR((('')+(NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c1)))<=(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c1) IS TRUE) THEN CASE WHEN '0.7690477564126841' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN highlight(vt0.c1, vt0.c0, vt0.c1, 0.8136012656031363) THEN (vt0.c0 IN (vt0.c1, vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.660426837029285 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END ASC  NULLS FIRST, ((((((((vt0.c1)OR(vt0.c0)))AND('-1453709475')))OR((vt0.c1 IN (vt0.c0, vt0.c1)))))OR((('')+(NULL)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt1.c0, vt0.c1))))<(((vt0.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt1.c0, vt0.c1))))<(((vt0.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt1.c0, vt0.c1))))<(((vt0.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt1.c0, vt0.c1))))<(((vt0.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1, vt1.c0, vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt1.c0, vt0.c1))))<(((vt0.c0)<(vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt0.c1, 'D6%{c]')) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c1))) AS BLOB)) ORDER BY ((((((vt0.c0) IS TRUE))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))OR(0.47281919835528996))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt0.c1, 'D6%{c]')) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) IS TRUE))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))OR(0.47281919835528996))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt0.c1, 'D6%{c]')) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c1))) AS BLOB)) ORDER BY ((((((vt0.c0) IS TRUE))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))OR(0.47281919835528996))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt0.c1, 'D6%{c]')) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0) IS TRUE))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))OR(0.47281919835528996))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt0.c1, 'D6%{c]')) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c1))) AS BLOB)) ORDER BY ((((((vt0.c0) IS TRUE))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))OR(0.47281919835528996))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (UNICODE(0.03160875694185883));
SELECT SUM(count) FROM (SELECT ((UNICODE(0.03160875694185883)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (UNICODE(0.03160875694185883));
SELECT SUM(count) FROM (SELECT ((UNICODE(0.03160875694185883)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (UNICODE(0.03160875694185883));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)<<(((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<<(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)<<(((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<<(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)<<(((vt1.c0)-(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0))>((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0))>((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0))>((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0))>((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0))>((vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN (+ (vt1.c0)) THEN IFNULL(DISTINCT vt1.c0, 0.3333618974428204) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY 8.6084523E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN (+ (vt1.c0)) THEN IFNULL(DISTINCT vt1.c0, 0.3333618974428204) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY 8.6084523E8  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN (+ (vt1.c0)) THEN IFNULL(DISTINCT vt1.c0, 0.3333618974428204) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY 8.6084523E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN (+ (vt1.c0)) THEN IFNULL(DISTINCT vt1.c0, 0.3333618974428204) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY 8.6084523E8  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN (+ (vt1.c0)) THEN IFNULL(DISTINCT vt1.c0, 0.3333618974428204) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY 8.6084523E8  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((x'')<<(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')<<(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((x'')<<(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')<<(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((x'')<<(vt1.c0)) AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (((x'5c71')>>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((x'5c71')>>(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((x'5c71')>>(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((x'5c71')>>(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((x'5c71')>>(vt0.c1)));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt1.c0 COLLATE BINARY)))) ORDER BY (- ((((vt0.c1))!=((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt0.c1))<>((vt0.c1))))) DESC);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt1.c0 COLLATE BINARY)))) ORDER BY (- ((((vt0.c1))!=((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt0.c1))<>((vt0.c1))))) DESC);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((vt1.c0 COLLATE BINARY)))) ORDER BY (- ((((vt0.c1))!=((vt0.c1))))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT NULL)) ORDER BY CAST((~ (vt0.c1)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((~ (vt0.c1)) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT NULL)) ORDER BY CAST((~ (vt0.c1)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((~ (vt0.c1)) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT NULL)) ORDER BY CAST((~ (vt0.c1)) AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1) NOT NULL)) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1) NOT NULL)) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1) NOT NULL)) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1) NOT NULL)) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1) NOT NULL)) AND ((+ (vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (((x'')<=(((vt1.c0) IS TRUE)))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))IS NOT(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')<=(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))IS NOT(((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 WHERE (((x'')<=(((vt1.c0) IS TRUE)))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))IS NOT(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((x'')<=(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))IS NOT(((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 WHERE (((x'')<=(((vt1.c0) IS TRUE)))) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))IS NOT(((vt1.c0) NOT NULL)));
SELECT * FROM vt1 WHERE (((vt1.c0)+(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)+(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)+(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)+(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)+(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)+(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)+(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)IS(vt0.c0)))AND(COALESCE(vt0.c1, vt0.c1))) WHERE (CAST(((vt0.c0)|(vt0.c0)) AS INTEGER)) ORDER BY NULL DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)|(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)IS(vt0.c0)))AND(COALESCE(vt0.c1, vt0.c1))) ORDER BY NULL DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)IS(vt0.c0)))AND(COALESCE(vt0.c1, vt0.c1))) WHERE (CAST(((vt0.c0)|(vt0.c0)) AS INTEGER)) ORDER BY NULL DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)|(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)IS(vt0.c0)))AND(COALESCE(vt0.c1, vt0.c1))) ORDER BY NULL DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0)IS(vt0.c0)))AND(COALESCE(vt0.c1, vt0.c1))) WHERE (CAST(((vt0.c0)|(vt0.c0)) AS INTEGER)) ORDER BY NULL DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('268567684')) IN ())) ORDER BY (((((vt1.c0))=((vt1.c0))))IS NOT((- (0Xffffffffdd3188b1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('268567684')) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((((vt1.c0))=((vt1.c0))))IS NOT((- (0Xffffffffdd3188b1)))) ASC);
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('268567684')) IN ())) ORDER BY (((((vt1.c0))=((vt1.c0))))IS NOT((- (0Xffffffffdd3188b1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('268567684')) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (((((vt1.c0))=((vt1.c0))))IS NOT((- (0Xffffffffdd3188b1)))) ASC);
SELECT * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('268567684')) IN ())) ORDER BY (((((vt1.c0))=((vt1.c0))))IS NOT((- (0Xffffffffdd3188b1)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0, vt1.c0, vt1.c0))<=((0.4810427001366139, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)<<(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0, vt1.c0, vt1.c0))<=((0.4810427001366139, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)<<(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0, vt1.c0, vt1.c0))<=((0.4810427001366139, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)<<(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0, vt1.c0, vt1.c0))<=((0.4810427001366139, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)<<(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0, vt1.c0, vt1.c0))<=((0.4810427001366139, vt1.c0, vt1.c0)))  WHEN ((vt1.c0)<<(vt1.c0)) THEN ((vt1.c0)-(vt1.c0)) END) ORDER BY vt1.c0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE))IS NOT(NULL)) WHERE (((((('-1065220618') ISNULL)))!=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-1065220618') ISNULL)))<>((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE))IS NOT(NULL)));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE))IS NOT(NULL)) WHERE (((((('-1065220618') ISNULL)))!=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((('-1065220618') ISNULL)))<>((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE))IS NOT(NULL)));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0) IS FALSE))IS NOT(NULL)) WHERE (((((('-1065220618') ISNULL)))!=((vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY 0Xffffffff8b249a69  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffff8b249a69  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY 0Xffffffff8b249a69  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffff8b249a69  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY 0Xffffffff8b249a69  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY ((((vt0.c0)>(x'7c27')))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(x'7c27')))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY ((((vt0.c0)>(x'7c27')))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(x'7c27')))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY ((((vt0.c0)>(x'7c27')))IS(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c0 IN (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((rtreenode(vt0.c1, vt0.c1)) NOT BETWEEN (vt0.c1) AND (('-61500027' IN (860845230))))  NULLS FIRST, NULL, (- (((vt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((rtreenode(vt0.c1, vt0.c1)) NOT BETWEEN (vt0.c1) AND (('-61500027' IN (860845230))))  NULLS FIRST, NULL, (- (((vt0.c1) ISNULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c0 IN (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((rtreenode(vt0.c1, vt0.c1)) NOT BETWEEN (vt0.c1) AND (('-61500027' IN (860845230))))  NULLS FIRST, NULL, (- (((vt0.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((rtreenode(vt0.c1, vt0.c1)) NOT BETWEEN (vt0.c1) AND (('-61500027' IN (860845230))))  NULLS FIRST, NULL, (- (((vt0.c1) ISNULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL)))) ORDER BY (((vt0.c0 IN (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)&(vt0.c0))))  NULLS FIRST, ((rtreenode(vt0.c1, vt0.c1)) NOT BETWEEN (vt0.c1) AND (('-61500027' IN (860845230))))  NULLS FIRST, NULL, (- (((vt0.c1) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON NULLIF((+ (vt0.c1)), vt0.c0) WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY 0.26052579887922866 DESC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON NULLIF((+ (vt0.c1)), vt0.c0) ORDER BY 0.26052579887922866 DESC  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON NULLIF((+ (vt0.c1)), vt0.c0) WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY 0.26052579887922866 DESC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON NULLIF((+ (vt0.c1)), vt0.c0) ORDER BY 0.26052579887922866 DESC  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON NULLIF((+ (vt0.c1)), vt0.c0) WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY 0.26052579887922866 DESC  NULLS LAST, NULL;
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)>=(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)>=(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS BLOB)  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)>=(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)>=(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)>=(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)>=(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS BLOB)  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)>=(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)>=(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)>=(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)>=(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 END) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN vt1.c0 END  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS REAL))%(((-2.063244404E9)+(vt0.c1))))) ORDER BY (NOT ((NOT (vt0.c0)))), ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))%(((-2.063244404E9)+(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((NOT (vt0.c0)))), ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS REAL))%(((-2.063244404E9)+(vt0.c1))))) ORDER BY (NOT ((NOT (vt0.c0)))), ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))%(((-2.063244404E9)+(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((NOT (vt0.c0)))), ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS REAL))%(((-2.063244404E9)+(vt0.c1))))) ORDER BY (NOT ((NOT (vt0.c0)))), ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt0 WHERE ((NULL COLLATE BINARY IN ())) ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1) NOT NULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1) NOT NULL) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NULL COLLATE BINARY IN ())) ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1) NOT NULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1) NOT NULL) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NULL COLLATE BINARY IN ())) ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c1) NOT NULL) END DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (UNLIKELY(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UNLIKELY(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UNLIKELY(vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)LIKE(vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) AND (CASE vt1.c0  WHEN 0.8668827755684607 THEN vt0.c0 END)) WHERE ((((((vt1.c0) BETWEEN (vt0.c0) AND (0.26716680328922593))))<=((vt0.c0)))) ORDER BY (((vt1.c0 COLLATE RTRIM))>=((COALESCE(DISTINCT x'', vt0.c1)))) DESC  NULLS FIRST, (('**xᑳ')|((((vt1.c0))<((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (vt0.c0) AND (0.26716680328922593))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)LIKE(vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) AND (CASE vt1.c0  WHEN 0.8668827755684607 THEN vt0.c0 END)) ORDER BY (((vt1.c0 COLLATE RTRIM))>=((COALESCE(DISTINCT x'', vt0.c1)))) DESC  NULLS FIRST, (('**xᑳ')|((((vt1.c0))<((vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)LIKE(vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) AND (CASE vt1.c0  WHEN 0.8668827755684607 THEN vt0.c0 END)) WHERE ((((((vt1.c0) BETWEEN (vt0.c0) AND (0.26716680328922593))))<=((vt0.c0)))) ORDER BY (((vt1.c0 COLLATE RTRIM))>=((COALESCE(DISTINCT x'', vt0.c1)))) DESC  NULLS FIRST, (('**xᑳ')|((((vt1.c0))<((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (vt0.c0) AND (0.26716680328922593))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)LIKE(vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) AND (CASE vt1.c0  WHEN 0.8668827755684607 THEN vt0.c0 END)) ORDER BY (((vt1.c0 COLLATE RTRIM))>=((COALESCE(DISTINCT x'', vt0.c1)))) DESC  NULLS FIRST, (('**xᑳ')|((((vt1.c0))<((vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)LIKE(vt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) AND (CASE vt1.c0  WHEN 0.8668827755684607 THEN vt0.c0 END)) WHERE ((((((vt1.c0) BETWEEN (vt0.c0) AND (0.26716680328922593))))<=((vt0.c0)))) ORDER BY (((vt1.c0 COLLATE RTRIM))>=((COALESCE(DISTINCT x'', vt0.c1)))) DESC  NULLS FIRST, (('**xᑳ')|((((vt1.c0))<((vt0.c1))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((+ ('*c'))) ORDER BY ((vt0.c0)==(((vt1.c0)<(''))));
SELECT SUM(count) FROM (SELECT ALL (((+ ('*c'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)==(((vt1.c0)<('')))));
SELECT ALL * FROM vt0, vt1 WHERE ((+ ('*c'))) ORDER BY ((vt0.c0)==(((vt1.c0)<(''))));
SELECT SUM(count) FROM (SELECT ALL (((+ ('*c'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)==(((vt1.c0)<('')))));
SELECT ALL * FROM vt0, vt1 WHERE ((+ ('*c'))) ORDER BY ((vt0.c0)==(((vt1.c0)<(''))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c1) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND (x'')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))>>(vt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (vt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))>>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))>>(vt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (vt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE (((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))>>(vt1.c0)));
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (NULL))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (NULL) AND (NULL))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (NULL))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (NULL) AND (NULL))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (NULL) AND (NULL))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt1.c0)LIKE(vt1.c0)), (((vt0.c0)) NOT BETWEEN (('j')) AND ((vt1.c0))))) AND (((vt1.c0 IN ()), 0.19499578448302102 COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt1.c0)LIKE(vt1.c0)), (((vt0.c0)) NOT BETWEEN (('j')) AND ((vt1.c0))))) AND (((vt1.c0 IN ()), 0.19499578448302102 COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt1.c0)LIKE(vt1.c0)), (((vt0.c0)) NOT BETWEEN (('j')) AND ((vt1.c0))))) AND (((vt1.c0 IN ()), 0.19499578448302102 COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt1.c0)LIKE(vt1.c0)), (((vt0.c0)) NOT BETWEEN (('j')) AND ((vt1.c0))))) AND (((vt1.c0 IN ()), 0.19499578448302102 COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt1.c0)LIKE(vt1.c0)), (((vt0.c0)) NOT BETWEEN (('j')) AND ((vt1.c0))))) AND (((vt1.c0 IN ()), 0.19499578448302102 COLLATE NOCASE, CAST(vt0.c1 AS NUMERIC)))));
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN (x'') AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN (x'') AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN (x'') AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN (x'') AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN (x'') AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))IS(((vt1.c0) NOTNULL)))) ORDER BY 0x488eaafd;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))IS(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0X488eaafd);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))IS(((vt1.c0) NOTNULL)))) ORDER BY 0x488eaafd;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))IS(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0X488eaafd);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)|(CAST(vt0.c1 AS TEXT))) WHERE (LIKE(vt1.c0 COLLATE NOCASE, TYPEOF(vt0.c1), '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0 COLLATE NOCASE, TYPEOF(vt0.c1), '0')) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)|(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)|(CAST(vt0.c1 AS TEXT))) WHERE (LIKE(vt1.c0 COLLATE NOCASE, TYPEOF(vt0.c1), '0'));
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0 COLLATE NOCASE, TYPEOF(vt0.c1), '0')) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)|(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0)|(CAST(vt0.c1 AS TEXT))) WHERE (LIKE(vt1.c0 COLLATE NOCASE, TYPEOF(vt0.c1), '0'));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0)>=(vt0.c1)) COLLATE BINARY WHERE (CASE WHEN (~ (vt0.c0)) THEN (NOT (vt0.c1)) END) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR('0.0')))OR(vt0.c1)))AND(vt0.c1)))+(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt0.c0)>=(vt0.c1)) COLLATE BINARY ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR('0.0')))OR(vt0.c1)))AND(vt0.c1)))+(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0)>=(vt0.c1)) COLLATE BINARY WHERE (CASE WHEN (~ (vt0.c0)) THEN (NOT (vt0.c1)) END) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR('0.0')))OR(vt0.c1)))AND(vt0.c1)))+(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt0.c0)>=(vt0.c1)) COLLATE BINARY ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR('0.0')))OR(vt0.c1)))AND(vt0.c1)))+(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((vt0.c0)>=(vt0.c1)) COLLATE BINARY WHERE (CASE WHEN (~ (vt0.c0)) THEN (NOT (vt0.c1)) END) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR('0.0')))OR(vt0.c1)))AND(vt0.c1)))+(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (x'' IN ()), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS TEXT))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)AND(vt1.c0)), (('0.5861887414235298')IS NOT(vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (x'' IN ()), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS TEXT))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)AND(vt1.c0)), (('0.5861887414235298')IS NOT(vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (x'' IN ()), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS TEXT))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)AND(vt1.c0)), (('0.5861887414235298')IS NOT(vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (x'' IN ()), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS TEXT))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)AND(vt1.c0)), (('0.5861887414235298')IS NOT(vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (x'' IN ()), vt1.c0, (((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))), CAST(vt1.c0 AS TEXT))) AND ((vt1.c0 COLLATE BINARY, ((vt1.c0)AND(vt1.c0)), (('0.5861887414235298')IS NOT(vt1.c0)), ((vt1.c0) IS FALSE), ((vt1.c0) IS FALSE)))));
SELECT ALL * FROM vt1 WHERE (0.8262019107137917) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.8262019107137917) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (0.8262019107137917) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.8262019107137917) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()));
SELECT ALL * FROM vt1 WHERE (0.8262019107137917) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ());
SELECT ALL * FROM vt1 WHERE (((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)<(CAST(vt1.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1)IS(vt0.c1)))&(vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN 0.1402581899659835 THEN IFNULL(NULL, vt0.c1) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c1)))&(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE WHEN 0.1402581899659835 THEN IFNULL(NULL, vt0.c1) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1)IS(vt0.c1)))&(vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN 0.1402581899659835 THEN IFNULL(NULL, vt0.c1) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c1)))&(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE WHEN 0.1402581899659835 THEN IFNULL(NULL, vt0.c1) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1)IS(vt0.c1)))&(vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN 0.1402581899659835 THEN IFNULL(NULL, vt0.c1) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (('-780424849')IS('')) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c1) NOT NULL) WHEN CAST(x'' AS INTEGER) THEN json(vt0.c1) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))<=((0.35180281931054636 IN ()))), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS REAL)  WHEN (('-780424849')IS('')) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c1) NOT NULL) WHEN CAST(x'' AS INTEGER) THEN json(vt0.c1) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))<=((0.35180281931054636 IN ()))), vt0.c0 ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (('-780424849')IS('')) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c1) NOT NULL) WHEN CAST(x'' AS INTEGER) THEN json(vt0.c1) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))<=((0.35180281931054636 IN ()))), vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS REAL)  WHEN (('-780424849')IS('')) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c1) NOT NULL) WHEN CAST(x'' AS INTEGER) THEN json(vt0.c1) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))<=((0.35180281931054636 IN ()))), vt0.c0 ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN (('-780424849')IS('')) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c1) NOT NULL) WHEN CAST(x'' AS INTEGER) THEN json(vt0.c1) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) ORDER BY (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))<=((0.35180281931054636 IN ()))), vt0.c0 ASC;
SELECT * FROM vt0 WHERE (IFNULL(HEX(vt0.c0), ((vt0.c1)<=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(HEX(vt0.c0), ((vt0.c1)<=(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL(HEX(vt0.c0), ((vt0.c1)<=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(HEX(vt0.c0), ((vt0.c1)<=(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL(HEX(vt0.c0), ((vt0.c1)<=(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((((vt1.c0)>(vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND(LTRIM(vt0.c0))))OR(CAST(vt1.c0 AS INTEGER))))OR((('-1845928328') NOT NULL))) WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((((vt1.c0)>(vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND(LTRIM(vt0.c0))))OR(CAST(vt1.c0 AS INTEGER))))OR((('-1845928328') NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((((vt1.c0)>(vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND(LTRIM(vt0.c0))))OR(CAST(vt1.c0 AS INTEGER))))OR((('-1845928328') NOT NULL))) WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((((((((vt1.c0)>(vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND(LTRIM(vt0.c0))))OR(CAST(vt1.c0 AS INTEGER))))OR((('-1845928328') NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((((((((vt1.c0)>(vt0.c0)))OR(((vt0.c1)OR(vt0.c0)))))AND(LTRIM(vt0.c0))))OR(CAST(vt1.c0 AS INTEGER))))OR((('-1845928328') NOT NULL))) WHERE ((vt0.c1 IN ()));
SELECT * FROM vt0 WHERE (((x'') BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (vt0.c0))) ORDER BY ((((((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR((+ (vt0.c1)))))OR(((vt0.c1) NOTNULL))))AND(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR((+ (vt0.c1)))))OR(((vt0.c1) NOTNULL))))AND(vt0.c0)) DESC);
SELECT * FROM vt0 WHERE (((x'') BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (vt0.c0))) ORDER BY ((((((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR((+ (vt0.c1)))))OR(((vt0.c1) NOTNULL))))AND(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR((+ (vt0.c1)))))OR(((vt0.c1) NOTNULL))))AND(vt0.c0)) DESC);
SELECT * FROM vt0 WHERE (((x'') BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) AND (vt0.c0))) ORDER BY ((((((((vt0.c1 COLLATE NOCASE)OR((- (vt0.c0)))))OR((+ (vt0.c1)))))OR(((vt0.c1) NOTNULL))))AND(vt0.c0)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) ORDER BY vt1.c0 DESC, x'aab4' ASC, ((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN ((((('-1960535447')OR(vt1.c0)))OR(vt1.c0))) AND (0x5ff0cc06))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LAST_INSERT_ROWID() AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, x'aab4' ASC, ((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN ((((('-1960535447')OR(vt1.c0)))OR(vt1.c0))) AND (0x5ff0cc06))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) ORDER BY vt1.c0 DESC, x'aab4' ASC, ((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN ((((('-1960535447')OR(vt1.c0)))OR(vt1.c0))) AND (0x5ff0cc06))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LAST_INSERT_ROWID() AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, x'aab4' ASC, ((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN ((((('-1960535447')OR(vt1.c0)))OR(vt1.c0))) AND (0x5ff0cc06))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) ORDER BY vt1.c0 DESC, x'aab4' ASC, ((IFNULL(DISTINCT vt1.c0, vt1.c0)) BETWEEN ((((('-1960535447')OR(vt1.c0)))OR(vt1.c0))) AND (0x5ff0cc06))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('xkoltkj');
SELECT SUM(count) FROM (SELECT (('xkoltkj') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('xkoltkj');
SELECT SUM(count) FROM (SELECT (('xkoltkj') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('xkoltkj');
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c0)IS(vt0.c1)) THEN ((vt0.c1) IS FALSE) END) ORDER BY CASE (vt0.c1 IN ())  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c0)IS(vt0.c1)) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c0)IS(vt0.c1)) THEN ((vt0.c1) IS FALSE) END) ORDER BY CASE (vt0.c1 IN ())  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c0)IS(vt0.c1)) THEN ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1) NOTNULL)  WHEN ((vt0.c0)IS(vt0.c1)) THEN ((vt0.c1) IS FALSE) END) ORDER BY CASE (vt0.c1 IN ())  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END;
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (GLOB(vt1.c0 COLLATE BINARY, ((((((((vt1.c0)OR(0.5999953390070917)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(vt1.c0 COLLATE BINARY, ((((((((vt1.c0)OR(0.5999953390070917)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (GLOB(vt1.c0 COLLATE BINARY, ((((((((vt1.c0)OR(0.5999953390070917)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(vt1.c0 COLLATE BINARY, ((((((((vt1.c0)OR(0.5999953390070917)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (GLOB(vt1.c0 COLLATE BINARY, ((((((((vt1.c0)OR(0.5999953390070917)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))));
SELECT * FROM vt0 WHERE ((((+ (vt0.c1)))IS((vt0.c1 IN ())))) ORDER BY ((('')IS(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((('')IS(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c1)))IS((vt0.c1 IN ())))) ORDER BY ((('')IS(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((('')IS(vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c1)))IS((vt0.c1 IN ())))) ORDER BY ((('')IS(vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (NULL)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKELY(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>>(vt0.c1)), 0.2345969390451894)) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c1)*(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)>>(vt0.c1)), 0.2345969390451894)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKELY(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c1)*(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKELY(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>>(vt0.c1)), 0.2345969390451894)) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c1)*(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0)>>(vt0.c1)), 0.2345969390451894)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKELY(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c1)*(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKELY(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))) WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)>>(vt0.c1)), 0.2345969390451894)) ORDER BY ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c1)*(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((NOT (vt0.c1)))) ORDER BY ((0.7193822171721244)|(vt0.c1)) DESC, (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC, CASE WHEN (((vt0.c1)) BETWEEN ((0x5704a1c8)) AND ((vt0.c1))) THEN ((vt0.c0)-(vt0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((NOT (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.7193822171721244)|(vt0.c1)) DESC, (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC, CASE WHEN (((vt0.c1)) BETWEEN ((0X5704a1c8)) AND ((vt0.c1))) THEN ((vt0.c0)-(vt0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((NOT (vt0.c1)))) ORDER BY ((0.7193822171721244)|(vt0.c1)) DESC, (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC, CASE WHEN (((vt0.c1)) BETWEEN ((0x5704a1c8)) AND ((vt0.c1))) THEN ((vt0.c0)-(vt0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((NOT (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.7193822171721244)|(vt0.c1)) DESC, (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC, CASE WHEN (((vt0.c1)) BETWEEN ((0X5704a1c8)) AND ((vt0.c1))) THEN ((vt0.c0)-(vt0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((NOT (vt0.c1)))) ORDER BY ((0.7193822171721244)|(vt0.c1)) DESC, (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC, CASE WHEN (((vt0.c1)) BETWEEN ((0x5704a1c8)) AND ((vt0.c1))) THEN ((vt0.c0)-(vt0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) END  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ABS(((vt1.c0)>>(vt1.c0))) WHERE (UNLIKELY(vt0.c1 COLLATE BINARY)) ORDER BY (((('')OR(((vt0.c0) ISNULL))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ABS(((vt1.c0)>>(vt1.c0))) ORDER BY (((('')OR(((vt0.c0) ISNULL))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ABS(((vt1.c0)>>(vt1.c0))) WHERE (UNLIKELY(vt0.c1 COLLATE BINARY)) ORDER BY (((('')OR(((vt0.c0) ISNULL))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ABS(((vt1.c0)>>(vt1.c0))) ORDER BY (((('')OR(((vt0.c0) ISNULL))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ABS(((vt1.c0)>>(vt1.c0))) WHERE (UNLIKELY(vt0.c1 COLLATE BINARY)) ORDER BY (((('')OR(((vt0.c0) ISNULL))))AND(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c1)))|(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c1)))|(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c1)))|(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c1)))|(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)IS(vt0.c1)))|(CAST(vt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0.44629369718475276 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.44629369718475276 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0.44629369718475276 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.44629369718475276 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0.44629369718475276 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)/(vt1.c0)), (- (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)), ((vt1.c0)!=(vt0.c1)))))) ORDER BY x'' DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((-3.49862006E8) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)/(vt1.c0)), (- (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<>(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((-3.49862006E8) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CAST(vt1.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)/(vt1.c0)), (- (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)), ((vt1.c0)!=(vt0.c1)))))) ORDER BY x'' DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((-3.49862006E8) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)/(vt1.c0)), (- (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<>(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((-3.49862006E8) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CAST(vt1.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c1)/(vt1.c0)), (- (vt0.c0))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)), ((vt1.c0)!=(vt0.c1)))))) ORDER BY x'' DESC  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((-3.49862006E8) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CAST(vt1.c0 AS BLOB))) DESC;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt0.c0))<((vt1.c0))))))) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END DESC  NULLS LAST, UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt0.c0))<((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END DESC  NULLS LAST, UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt0.c0))<((vt1.c0))))))) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END DESC  NULLS LAST, UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt0.c0))<((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END DESC  NULLS LAST, UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (((((vt0.c0))<((vt1.c0))))))) ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END DESC  NULLS LAST, UNLIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ('0.9153053251693202');
SELECT SUM(count) FROM (SELECT (('0.9153053251693202') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('0.9153053251693202');
SELECT SUM(count) FROM (SELECT (('0.9153053251693202') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('0.9153053251693202');
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))<(((0.8580594429006221 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<(((0.8580594429006221 IN ()))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))<(((0.8580594429006221 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<(((0.8580594429006221 IN ()))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))<(((0.8580594429006221 IN ())))));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ('') AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY NULLIF(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((x'ac84')*(vt1.c0))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ('') AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULLIF(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((x'ac84')*(vt1.c0))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ('') AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY NULLIF(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((x'ac84')*(vt1.c0))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ('') AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULLIF(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((x'ac84')*(vt1.c0))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ('') AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY NULLIF(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((x'ac84')*(vt1.c0))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0 INNER JOIN vt1 ON SUBSTR(LIKELY(vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) WHERE ((((vt0.c1 IN ()))/(vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN LOWER(DISTINCT vt0.c1) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c1 THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))/(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON SUBSTR(LIKELY(vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ORDER BY CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN LOWER(DISTINCT vt0.c1) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c1 THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON SUBSTR(LIKELY(vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) WHERE ((((vt0.c1 IN ()))/(vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN LOWER(DISTINCT vt0.c1) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c1 THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))/(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON SUBSTR(LIKELY(vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ORDER BY CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN LOWER(DISTINCT vt0.c1) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c1 THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON SUBSTR(LIKELY(vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) WHERE ((((vt0.c1 IN ()))/(vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN LOWER(DISTINCT vt0.c1) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c1 THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c1)IS NOT(vt0.c1)))OR(json_array_length(vt0.c0))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(vt0.c1)))OR(json_array_length(vt0.c0))))AND(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)IS NOT(vt0.c1)))OR(json_array_length(vt0.c0))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)IS NOT(vt0.c1)))OR(json_array_length(vt0.c0))))AND(NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(ABS(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(ABS(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(ABS(vt0.c0) AS NUMERIC));
SELECT * FROM vt1 WHERE (((~ (vt1.c0)) IN (((vt1.c0) BETWEEN (0.8793585497944828) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c0)) IN (((vt1.c0) BETWEEN (0.8793585497944828) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((~ (vt1.c0)) IN (((vt1.c0) BETWEEN (0.8793585497944828) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c0)) IN (((vt1.c0) BETWEEN (0.8793585497944828) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((~ (vt1.c0)) IN (((vt1.c0) BETWEEN (0.8793585497944828) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)==(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) ISNULL)  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)==(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)==(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) ISNULL)  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)==(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)==(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1)OR(vt0.c1)) IN ()) WHERE ('{P*\r2' COLLATE BINARY) ORDER BY 0.7032809611398997 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('{P*\r2' COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1)OR(vt0.c1)) IN ()) ORDER BY 0.7032809611398997 ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1)OR(vt0.c1)) IN ()) WHERE ('{P*\r2' COLLATE BINARY) ORDER BY 0.7032809611398997 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('{P*\r2' COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1)OR(vt0.c1)) IN ()) ORDER BY 0.7032809611398997 ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c1)OR(vt0.c1)) IN ()) WHERE ('{P*\r2' COLLATE BINARY) ORDER BY 0.7032809611398997 ASC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(0.7477081509443817 AS NUMERIC) WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 ELSE x'' END)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c0) IS FALSE) THEN ((('-583956303'))<((vt0.c1))) WHEN (((vt1.c0))<=((vt0.c0))) THEN CASE WHEN 0x7be00f61 THEN vt0.c0 ELSE vt0.c1 END ELSE (((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 ELSE x'' END)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(0.7477081509443817 AS NUMERIC) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c0) IS FALSE) THEN ((('-583956303'))<((vt0.c1))) WHEN (((vt1.c0))<=((vt0.c0))) THEN CASE WHEN 0X7be00f61 THEN vt0.c0 ELSE vt0.c1 END ELSE (((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt1.c0))) END DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(0.7477081509443817 AS NUMERIC) WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 ELSE x'' END)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c0) IS FALSE) THEN ((('-583956303'))<((vt0.c1))) WHEN (((vt1.c0))<=((vt0.c0))) THEN CASE WHEN 0x7be00f61 THEN vt0.c0 ELSE vt0.c1 END ELSE (((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 ELSE x'' END)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(0.7477081509443817 AS NUMERIC) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c0) IS FALSE) THEN ((('-583956303'))<((vt0.c1))) WHEN (((vt1.c0))<=((vt0.c0))) THEN CASE WHEN 0X7be00f61 THEN vt0.c0 ELSE vt0.c1 END ELSE (((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt1.c0))) END DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(0.7477081509443817 AS NUMERIC) WHERE ((((vt1.c0)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 ELSE x'' END)) AND ((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))  WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c0) IS FALSE) THEN ((('-583956303'))<((vt0.c1))) WHEN (((vt1.c0))<=((vt0.c0))) THEN CASE WHEN 0x7be00f61 THEN vt0.c0 ELSE vt0.c1 END ELSE (((vt1.c0, vt1.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt1.c0))) END DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)/(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)/(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)/(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((load_extension(vt0.c1, vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN '-8784998' ELSE vt1.c0 END, ((vt1.c0) IS FALSE), CAST(vt0.c1 AS NUMERIC)))>=(((((vt1.c0))>((vt0.c1))), vt1.c0 COLLATE RTRIM, ((vt0.c0)==(vt0.c1)), (vt1.c0 IN ()), CAST(vt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((load_extension(vt0.c1, vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN '-8784998' ELSE vt1.c0 END, ((vt1.c0) IS FALSE), CAST(vt0.c1 AS NUMERIC)))>=(((((vt1.c0))>((vt0.c1))), vt1.c0 COLLATE RTRIM, ((vt0.c0)==(vt0.c1)), (vt1.c0 IN ()), CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((load_extension(vt0.c1, vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN '-8784998' ELSE vt1.c0 END, ((vt1.c0) IS FALSE), CAST(vt0.c1 AS NUMERIC)))>=(((((vt1.c0))>((vt0.c1))), vt1.c0 COLLATE RTRIM, ((vt0.c0)==(vt0.c1)), (vt1.c0 IN ()), CAST(vt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((load_extension(vt0.c1, vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CASE vt0.c1  WHEN vt0.c1 THEN '-8784998' ELSE vt1.c0 END, ((vt1.c0) IS FALSE), CAST(vt0.c1 AS NUMERIC)))>=(((((vt1.c0))>((vt0.c1))), vt1.c0 COLLATE RTRIM, ((vt0.c0)==(vt0.c1)), (vt1.c0 IN ()), CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0)LIKE(((('-521310525'))==((0X20e2b966)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)LIKE(((('-521310525'))=((0x20e2b966)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0)LIKE(((('-521310525'))==((0X20e2b966)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)LIKE(((('-521310525'))=((0x20e2b966)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0)LIKE(((('-521310525'))==((0X20e2b966)))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)IS NOT(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0)IS NOT(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)IS NOT(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0)IS NOT(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)IS NOT(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULLIF(vt0.c0, vt0.c1) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 END))), ((MAX(vt0.c0, vt0.c1))|((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 END))), ((MAX(vt0.c0, vt0.c1))|((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET((('') NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULLIF(vt0.c0, vt0.c1) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 END))), ((MAX(vt0.c0, vt0.c1))|((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c0, vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 END))), ((MAX(vt0.c0, vt0.c1))|((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET((('') NOT NULL)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULLIF(vt0.c0, vt0.c1) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 END))), ((MAX(vt0.c0, vt0.c1))|((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST, SQLITE_COMPILEOPTION_GET((('') NOT NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((x'' IN ()) AS TEXT)) ORDER BY vt1.c0 DESC, '啩~c' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, '啩~c' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((x'' IN ()) AS TEXT)) ORDER BY vt1.c0 DESC, '啩~c' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, '啩~c' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((x'' IN ()) AS TEXT)) ORDER BY vt1.c0 DESC, '啩~c' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN (+ (NULL)) THEN (vt1.c0 IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END) ORDER BY json_valid(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) IS FALSE)  WHEN (+ (NULL)) THEN (vt1.c0 IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY json_valid(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN (+ (NULL)) THEN (vt1.c0 IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END) ORDER BY json_valid(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) IS FALSE)  WHEN (+ (NULL)) THEN (vt1.c0 IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY json_valid(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN (+ (NULL)) THEN (vt1.c0 IN ()) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END) ORDER BY json_valid(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0)||(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (NULLIF(vt0.c0, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULLIF(vt0.c0, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULLIF(vt0.c0, ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))));
SELECT * FROM vt0 WHERE ('') ORDER BY CAST(((vt0.c0) NOTNULL) AS BLOB)  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-898531616', (+ (vt0.c0)), ((vt0.c0)AND('370563877')))) AND ((ABS(DISTINCT vt0.c1), ((vt0.c1)%(vt0.c0)), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS BLOB)  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-898531616', (+ (vt0.c0)), ((vt0.c0)AND('370563877')))) AND ((ABS(DISTINCT vt0.c1), ((vt0.c1)%(vt0.c0)), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE ('') ORDER BY CAST(((vt0.c0) NOTNULL) AS BLOB)  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-898531616', (+ (vt0.c0)), ((vt0.c0)AND('370563877')))) AND ((ABS(DISTINCT vt0.c1), ((vt0.c1)%(vt0.c0)), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS BLOB)  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-898531616', (+ (vt0.c0)), ((vt0.c0)AND('370563877')))) AND ((ABS(DISTINCT vt0.c1), ((vt0.c1)%(vt0.c0)), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE ('') ORDER BY CAST(((vt0.c0) NOTNULL) AS BLOB)  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-898531616', (+ (vt0.c0)), ((vt0.c0)AND('370563877')))) AND ((ABS(DISTINCT vt0.c1), ((vt0.c1)%(vt0.c0)), ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)!=(vt0.c1)) AS INTEGER)) ORDER BY ((((((vt0.c1) ISNULL))AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)!=(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) ISNULL))AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)!=(vt0.c1)) AS INTEGER)) ORDER BY ((((((vt0.c1) ISNULL))AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)!=(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) ISNULL))AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)!=(vt0.c1)) AS INTEGER)) ORDER BY ((((((vt0.c1) ISNULL))AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL));
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (((CAST(vt1.c0 AS REAL)))>=((((('e'))>((vt1.c0)))))), CHAR(NULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS REAL)))>=((((('e'))>((vt1.c0)))))), CHAR(NULL) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (((CAST(vt1.c0 AS REAL)))>=((((('e'))>((vt1.c0)))))), CHAR(NULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS REAL)))>=((((('e'))>((vt1.c0)))))), CHAR(NULL) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (((CAST(vt1.c0 AS REAL)))>=((((('e'))>((vt1.c0)))))), CHAR(NULL) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)+(vt0.c0)))AND(x'')))OR(((vt0.c1) NOT BETWEEN ('') AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)) WHERE ((((((((((vt0.c0 IN ()))AND((('rH7ⓓJꥯ') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c1 IN ('kh')))))AND('1369837618')))OR(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND((('rH7ⓓJꥯ') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c1 IN ('kh')))))AND('1369837618')))OR(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)+(vt0.c0)))AND(x'')))OR(((vt0.c1) NOT BETWEEN ('') AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)+(vt0.c0)))AND(x'')))OR(((vt0.c1) NOT BETWEEN ('') AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)) WHERE ((((((((((vt0.c0 IN ()))AND((('rH7ⓓJꥯ') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c1 IN ('kh')))))AND('1369837618')))OR(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND((('rH7ⓓJꥯ') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c1 IN ('kh')))))AND('1369837618')))OR(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)+(vt0.c0)))AND(x'')))OR(((vt0.c1) NOT BETWEEN ('') AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)+(vt0.c0)))AND(x'')))OR(((vt0.c1) NOT BETWEEN ('') AND (vt0.c1)))))OR(((vt0.c1) IS TRUE))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)) WHERE ((((((((((vt0.c0 IN ()))AND((('rH7ⓓJꥯ') NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((vt0.c1 IN ('kh')))))AND('1369837618')))OR(CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((vt1.c0) ISNULL) ELSE NULL END) ORDER BY ((0.8428050533840316) BETWEEN (CAST(x'00dc4ec1' AS REAL)) AND (((vt0.c1)>=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN ((vt1.c0) ISNULL) ELSE NULL END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((0.8428050533840316) BETWEEN (CAST(x'00dc4ec1' AS REAL)) AND (((vt0.c1)>=(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((vt1.c0) ISNULL) ELSE NULL END) ORDER BY ((0.8428050533840316) BETWEEN (CAST(x'00dc4ec1' AS REAL)) AND (((vt0.c1)>=(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN ((vt1.c0) ISNULL) ELSE NULL END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((0.8428050533840316) BETWEEN (CAST(x'00dc4ec1' AS REAL)) AND (((vt0.c1)>=(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((vt1.c0) ISNULL) ELSE NULL END) ORDER BY ((0.8428050533840316) BETWEEN (CAST(x'00dc4ec1' AS REAL)) AND (((vt0.c1)>=(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (0.6206894056639775) ORDER BY (~ (((vt1.c0)/(NULL))))  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((0.6206894056639775) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0)/(NULL))))  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE (0.6206894056639775) ORDER BY (~ (((vt1.c0)/(NULL))))  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((0.6206894056639775) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0)/(NULL))))  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE (0.6206894056639775) ORDER BY (~ (((vt1.c0)/(NULL))))  NULLS LAST, ((vt1.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'0278');
SELECT SUM(count) FROM (SELECT ((x'0278') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'0278');
SELECT SUM(count) FROM (SELECT ((x'0278') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'0278');
SELECT ALL * FROM vt0, vt1 WHERE (TRIM(CHANGES(), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ORDER BY ((vt0.c1 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(CHANGES(), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (TRIM(CHANGES(), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ORDER BY ((vt0.c1 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(CHANGES(), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (TRIM(CHANGES(), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) ORDER BY ((vt0.c1 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)<=(vt1.c0)) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ORDER BY 0X7c921473 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((vt1.c0)<=(vt1.c0)) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY 0X7c921473 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)<=(vt1.c0)) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) ORDER BY 0X7c921473 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN ((vt1.c0)<=(vt1.c0)) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY 0X7c921473 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<((((vt1.c0)) NOT BETWEEN (('8-Aa&	y6k')) AND ((vt1.c0)))))) ORDER BY CASE (- (vt1.c0))  WHEN ((vt1.c0)&(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN NULL THEN 0.6216872227592944 WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)>=(vt1.c0)) WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(x'26cf')))OR(vt1.c0)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<((((vt1.c0)) NOT BETWEEN (('8-Aa&	y6k')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (- (vt1.c0))  WHEN ((vt1.c0)&(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN NULL THEN 0.6216872227592944 WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)>=(vt1.c0)) WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(x'26cf')))OR(vt1.c0)))AND(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<((((vt1.c0)) NOT BETWEEN (('8-Aa&	y6k')) AND ((vt1.c0)))))) ORDER BY CASE (- (vt1.c0))  WHEN ((vt1.c0)&(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN NULL THEN 0.6216872227592944 WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)>=(vt1.c0)) WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(x'26cf')))OR(vt1.c0)))AND(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)<((((vt1.c0)) NOT BETWEEN (('8-Aa&	y6k')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (- (vt1.c0))  WHEN ((vt1.c0)&(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN NULL THEN 0.6216872227592944 WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)>=(vt1.c0)) WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(x'26cf')))OR(vt1.c0)))AND(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)<((((vt1.c0)) NOT BETWEEN (('8-Aa&	y6k')) AND ((vt1.c0)))))) ORDER BY CASE (- (vt1.c0))  WHEN ((vt1.c0)&(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN NULL THEN 0.6216872227592944 WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)>=(vt1.c0)) WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((((((((vt1.c0)OR(vt1.c0)))AND(x'26cf')))OR(vt1.c0)))AND(vt1.c0)) END;
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS NUMERIC))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS NUMERIC))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'5fd5')-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'5fd5')-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'5fd5')-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'5fd5')-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'5fd5')-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT NULL) DESC;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)>>(vt0.c0)))<<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0)))<<(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)>>(vt0.c0)))<<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0)))<<(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)>>(vt0.c0)))<<(vt0.c1)));
SELECT ALL * FROM vt0, vt1 WHERE ((+ ((((vt0.c0))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ ((((vt0.c0))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ ((((vt0.c0))<=((vt0.c1))))));
SELECT ALL * FROM vt0, vt1 WHERE (((((0.033580778743575124) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (NULLIF(DISTINCT vt1.c0, vt0.c0)))) ORDER BY (~ (vt0.c1)), 0.43260258572677857  NULLS FIRST, ((CAST(vt0.c1 AS REAL))!=(((vt1.c0)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.033580778743575124) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (NULLIF(DISTINCT vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt0.c1)), 0.43260258572677857  NULLS FIRST, ((CAST(vt0.c1 AS REAL))<>(((vt1.c0)AND(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((0.033580778743575124) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (NULLIF(DISTINCT vt1.c0, vt0.c0)))) ORDER BY (~ (vt0.c1)), 0.43260258572677857  NULLS FIRST, ((CAST(vt0.c1 AS REAL))!=(((vt1.c0)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.033580778743575124) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (NULLIF(DISTINCT vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt0.c1)), 0.43260258572677857  NULLS FIRST, ((CAST(vt0.c1 AS REAL))<>(((vt1.c0)AND(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((0.033580778743575124) NOT BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c1) AND (NULLIF(DISTINCT vt1.c0, vt0.c0)))) ORDER BY (~ (vt0.c1)), 0.43260258572677857  NULLS FIRST, ((CAST(vt0.c1 AS REAL))!=(((vt1.c0)AND(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>=(((vt1.c0) NOT NULL)))) ORDER BY ((vt1.c0 COLLATE BINARY)|((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), '籼#', ((vt1.c0)GLOB(vt1.c0))))<((0.6645003863614012, 0.5134081432881872, (~ (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)>=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)|((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), '籼#', ((vt1.c0)GLOB(vt1.c0))))<((0.6645003863614012, 0.5134081432881872, (~ (vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>=(((vt1.c0) NOT NULL)))) ORDER BY ((vt1.c0 COLLATE BINARY)|((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), '籼#', ((vt1.c0)GLOB(vt1.c0))))<((0.6645003863614012, 0.5134081432881872, (~ (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)>=(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)|((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), '籼#', ((vt1.c0)GLOB(vt1.c0))))<((0.6645003863614012, 0.5134081432881872, (~ (vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>=(((vt1.c0) NOT NULL)))) ORDER BY ((vt1.c0 COLLATE BINARY)|((vt1.c0 IN (vt1.c0)))) ASC  NULLS LAST, (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), '籼#', ((vt1.c0)GLOB(vt1.c0))))<((0.6645003863614012, 0.5134081432881872, (~ (vt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL))IS(CAST(vt0.c1 AS TEXT)))) ORDER BY ((((0.6533275125515479)OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))!=((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))IS(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0.6533275125515479)OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))!=((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL))IS(CAST(vt0.c1 AS TEXT)))) ORDER BY ((((0.6533275125515479)OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))!=((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))IS(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((0.6533275125515479)OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))!=((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL))IS(CAST(vt0.c1 AS TEXT)))) ORDER BY ((((0.6533275125515479)OR(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))!=((vt0.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))IS((vt1.c0 IN ('2083831638')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS((vt1.c0 IN ('2083831638'))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))IS((vt1.c0 IN ('2083831638')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS((vt1.c0 IN ('2083831638'))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))IS((vt1.c0 IN ('2083831638')))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0))<=((vt0.c1))) COLLATE RTRIM) ORDER BY (((+ (NULL))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (NULL))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0))<=((vt0.c1))) COLLATE RTRIM) ORDER BY (((+ (NULL))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ (NULL))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0))<=((vt0.c1))) COLLATE RTRIM) ORDER BY (((+ (NULL))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, '{9mu3(u)\r'))) ISNULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, '{9mu3(u)\r'))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'');
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, '{9mu3(u)\r'))) ISNULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, '{9mu3(u)\r'))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'');
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, '{9mu3(u)\r'))) ISNULL)) ORDER BY x'';
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c1, vt1.c0))>=((-1.627234825E9, vt0.c0, vt0.c1))))%(((-1675941550) NOT BETWEEN (x'') AND (vt0.c1))))) ORDER BY (((((('1594112673')==(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt1.c0))>=((-1.627234825E9, vt0.c0, vt0.c1))))%(((-1675941550) NOT BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((('1594112673')==(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c1, vt1.c0))>=((-1.627234825E9, vt0.c0, vt0.c1))))%(((-1675941550) NOT BETWEEN (x'') AND (vt0.c1))))) ORDER BY (((((('1594112673')==(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt1.c0))>=((-1.627234825E9, vt0.c0, vt0.c1))))%(((-1675941550) NOT BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((('1594112673')==(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0, vt0.c1, vt1.c0))>=((-1.627234825E9, vt0.c0, vt0.c1))))%(((-1675941550) NOT BETWEEN (x'') AND (vt0.c1))))) ORDER BY (((((('1594112673')==(vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC;
SELECT ALL * FROM vt0 WHERE (((DATETIME(vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (2089948275) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (2089948275) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((DATETIME(vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (2089948275) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (2089948275) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((DATETIME(vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN (2089948275) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)&(vt0.c0))) IS TRUE)) ORDER BY (((((x'' IN ()))OR(((vt0.c0)IS(vt1.c0)))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((x'' IN ()))OR(((vt0.c0)IS(vt1.c0)))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)&(vt0.c0))) IS TRUE)) ORDER BY (((((x'' IN ()))OR(((vt0.c0)IS(vt1.c0)))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((x'' IN ()))OR(((vt0.c0)IS(vt1.c0)))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)&(vt0.c0))) IS TRUE)) ORDER BY (((((x'' IN ()))OR(((vt0.c0)IS(vt1.c0)))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<(vt0.c0)))*(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(vt0.c0)))*(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<(vt0.c0)))*(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(vt0.c0)))*(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<(vt0.c0)))*(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT NULL));
SELECT ALL * FROM vt1 WHERE (CASE 0.015419450370045329  WHEN ((vt1.c0) NOT NULL) THEN ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TYPEOF(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.015419450370045329  WHEN ((vt1.c0) NOT NULL) THEN ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TYPEOF(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE 0.015419450370045329  WHEN ((vt1.c0) NOT NULL) THEN ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TYPEOF(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.015419450370045329  WHEN ((vt1.c0) NOT NULL) THEN ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TYPEOF(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE 0.015419450370045329  WHEN ((vt1.c0) NOT NULL) THEN ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE TYPEOF(vt1.c0) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'9379')OR(((vt0.c0) ISNULL))))OR((+ (vt1.c0))))) ORDER BY ((((vt0.c0)*(NULL)))LIKE(((vt1.c0) NOTNULL)))  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'9379')OR(((vt0.c0) ISNULL))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)*(NULL)))LIKE(((vt1.c0) NOTNULL)))  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'9379')OR(((vt0.c0) ISNULL))))OR((+ (vt1.c0))))) ORDER BY ((((vt0.c0)*(NULL)))LIKE(((vt1.c0) NOTNULL)))  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'9379')OR(((vt0.c0) ISNULL))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)*(NULL)))LIKE(((vt1.c0) NOTNULL)))  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'9379')OR(((vt0.c0) ISNULL))))OR((+ (vt1.c0))))) ORDER BY ((((vt0.c0)*(NULL)))LIKE(((vt1.c0) NOTNULL)))  NULLS FIRST, NULL  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ()))&(((vt0.c0)>>(vt0.c0))))) ORDER BY ((((vt0.c1 COLLATE BINARY)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))OR((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))&(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1 COLLATE BINARY)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))OR((+ (vt0.c0)))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ()))&(((vt0.c0)>>(vt0.c0))))) ORDER BY ((((vt0.c1 COLLATE BINARY)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))OR((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))&(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1 COLLATE BINARY)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))OR((+ (vt0.c0)))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ()))&(((vt0.c0)>>(vt0.c0))))) ORDER BY ((((vt0.c1 COLLATE BINARY)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))))OR((+ (vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN x'e1283706' END) NOT BETWEEN (NULL) AND ((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, x'c684', vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN x'e1283706' END) NOT BETWEEN (NULL) AND ((((vt0.c1, vt0.c1, vt0.c0))<>((vt0.c1, x'c684', vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN x'e1283706' END) NOT BETWEEN (NULL) AND ((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, x'c684', vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN x'e1283706' END) NOT BETWEEN (NULL) AND ((((vt0.c1, vt0.c1, vt0.c0))<>((vt0.c1, x'c684', vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN x'e1283706' END) NOT BETWEEN (NULL) AND ((((vt0.c1, vt0.c1, vt0.c0))!=((vt0.c1, x'c684', vt0.c0))))));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c1)<(0.86351766699594)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0xffffffff823a187a)) ELSE (vt0.c0 IN (vt1.c0, vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<(0.86351766699594)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0Xffffffff823a187a)) ELSE (vt0.c0 IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c1)<(0.86351766699594)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0xffffffff823a187a)) ELSE (vt0.c0 IN (vt1.c0, vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)<(0.86351766699594)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0Xffffffff823a187a)) ELSE (vt0.c0 IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c1)<(0.86351766699594)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (0xffffffff823a187a)) ELSE (vt0.c0 IN (vt1.c0, vt1.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CAST(UNLIKELY(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(UNLIKELY(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(UNLIKELY(vt1.c0) AS BLOB));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((0.26716680328922593))<=(((vt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((0.26716680328922593))<=(((vt1.c0 IN (vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((0.26716680328922593))<=(((vt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((0.26716680328922593))<=(((vt1.c0 IN (vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY (((0.26716680328922593))<=(((vt1.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (0xffffffff9688eb3c);
SELECT SUM(count) FROM (SELECT ((0xffffffff9688eb3c) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0xffffffff9688eb3c);
SELECT SUM(count) FROM (SELECT ((0xffffffff9688eb3c) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0xffffffff9688eb3c);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN 0X2e1a120d THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN 0X2e1a120d THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN 0X2e1a120d THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN 0X2e1a120d THEN vt1.c0 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN 0X2e1a120d THEN vt1.c0 ELSE vt1.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0) IS FALSE) IN (((vt1.c0)<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS FALSE) IN (((vt1.c0)<=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0) IS FALSE) IN (((vt1.c0)<=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS FALSE) IN (((vt1.c0)<=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0) IS FALSE) IN (((vt1.c0)<=(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.6138176364108562)>=(((vt1.c0)>=(vt1.c0))))) ORDER BY ((0.9698363159828829) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))OR('867567570')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6138176364108562)>=(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((0.9698363159828829) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))OR('867567570')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.6138176364108562)>=(((vt1.c0)>=(vt1.c0))))) ORDER BY ((0.9698363159828829) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))OR('867567570')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6138176364108562)>=(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((0.9698363159828829) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))OR('867567570')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((0.6138176364108562)>=(((vt1.c0)>=(vt1.c0))))) ORDER BY ((0.9698363159828829) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))OR('867567570')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1 COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-578038535' WHEN vt1.c0 THEN NULL WHEN vt0.c1 THEN 370563877 ELSE vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-578038535' WHEN vt1.c0 THEN NULL WHEN vt0.c1 THEN 370563877 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-578038535' WHEN vt1.c0 THEN NULL WHEN vt0.c1 THEN 370563877 ELSE vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-578038535' WHEN vt1.c0 THEN NULL WHEN vt0.c1 THEN 370563877 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN '-578038535' WHEN vt1.c0 THEN NULL WHEN vt0.c1 THEN 370563877 ELSE vt1.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)OR(''))) ORDER BY ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR((((vt1.c0))>=((vt0.c1))))))AND(((vt0.c0)<=(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)OR(''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR((((vt1.c0))>=((vt0.c1))))))AND(((vt0.c0)<=(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)OR(''))) ORDER BY ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR((((vt1.c0))>=((vt0.c1))))))AND(((vt0.c0)<=(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)OR(''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR((((vt1.c0))>=((vt0.c1))))))AND(((vt0.c0)<=(vt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)OR(''))) ORDER BY ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))OR((((vt1.c0))>=((vt0.c1))))))AND(((vt0.c0)<=(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)/(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0)==(vt1.c0)) END) ORDER BY (('V!') IS FALSE) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)/(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0)=(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (('V!') IS FALSE) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)/(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0)==(vt1.c0)) END) ORDER BY (('V!') IS FALSE) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)/(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0)=(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (('V!') IS FALSE) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)/(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE ((vt1.c0)==(vt1.c0)) END) ORDER BY (('V!') IS FALSE) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(0.018950046863300374)))AND((~ (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) IS TRUE))AND(0.018950046863300374)))AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(0.018950046863300374)))AND((~ (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) IS TRUE))AND(0.018950046863300374)))AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(0.018950046863300374)))AND((~ (vt0.c1))))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0X6c725b6b) NOTNULL)) ISNULL)) ORDER BY (((vt0.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), (vt0.c1 IN ())))>=((((vt0.c0)&(vt0.c0)), ((vt0.c0) IS TRUE), NULL))) DESC, ((CASE WHEN '136236570' THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND ((~ ('rH7ⓓJꥯ'))));
SELECT SUM(count) FROM (SELECT ((((((0X6c725b6b) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), (vt0.c1 IN ())))>=((((vt0.c0)&(vt0.c0)), ((vt0.c0) IS TRUE), NULL))) DESC, ((CASE WHEN '136236570' THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND ((~ ('rH7ⓓJꥯ')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0X6c725b6b) NOTNULL)) ISNULL)) ORDER BY (((vt0.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), (vt0.c1 IN ())))>=((((vt0.c0)&(vt0.c0)), ((vt0.c0) IS TRUE), NULL))) DESC, ((CASE WHEN '136236570' THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND ((~ ('rH7ⓓJꥯ'))));
SELECT SUM(count) FROM (SELECT ((((((0X6c725b6b) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), (vt0.c1 IN ())))>=((((vt0.c0)&(vt0.c0)), ((vt0.c0) IS TRUE), NULL))) DESC, ((CASE WHEN '136236570' THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND ((~ ('rH7ⓓJꥯ')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0X6c725b6b) NOTNULL)) ISNULL)) ORDER BY (((vt0.c0 COLLATE RTRIM, CAST(vt0.c1 AS BLOB), (vt0.c1 IN ())))>=((((vt0.c0)&(vt0.c0)), ((vt0.c0) IS TRUE), NULL))) DESC, ((CASE WHEN '136236570' THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND ((~ ('rH7ⓓJꥯ'))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((((((((vt0.c1)AND('r''殉')))OR(vt1.c0)))OR(vt1.c0)))AND(0Xffffffffb6d95c0c))  WHEN (NULL IN ('73761300')) THEN CAST('b&' AS REAL) WHEN vt1.c0 THEN NULLIF(DISTINCT vt0.c0, vt1.c0) WHEN (vt0.c0 IN (vt0.c1, vt1.c0)) THEN CAST(vt0.c1 AS BLOB) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c1)AND('r''殉')))OR(vt1.c0)))OR(vt1.c0)))AND(0xffffffffb6d95c0c))  WHEN (NULL IN ('73761300')) THEN CAST('b&' AS REAL) WHEN vt1.c0 THEN NULLIF(DISTINCT vt0.c0, vt1.c0) WHEN (vt0.c0 IN (vt0.c1, vt1.c0)) THEN CAST(vt0.c1 AS BLOB) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((((((((vt0.c1)AND('r''殉')))OR(vt1.c0)))OR(vt1.c0)))AND(0Xffffffffb6d95c0c))  WHEN (NULL IN ('73761300')) THEN CAST('b&' AS REAL) WHEN vt1.c0 THEN NULLIF(DISTINCT vt0.c0, vt1.c0) WHEN (vt0.c0 IN (vt0.c1, vt1.c0)) THEN CAST(vt0.c1 AS BLOB) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c1)AND('r''殉')))OR(vt1.c0)))OR(vt1.c0)))AND(0xffffffffb6d95c0c))  WHEN (NULL IN ('73761300')) THEN CAST('b&' AS REAL) WHEN vt1.c0 THEN NULLIF(DISTINCT vt0.c0, vt1.c0) WHEN (vt0.c0 IN (vt0.c1, vt1.c0)) THEN CAST(vt0.c1 AS BLOB) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((((((((vt0.c1)AND('r''殉')))OR(vt1.c0)))OR(vt1.c0)))AND(0Xffffffffb6d95c0c))  WHEN (NULL IN ('73761300')) THEN CAST('b&' AS REAL) WHEN vt1.c0 THEN NULLIF(DISTINCT vt0.c0, vt1.c0) WHEN (vt0.c0 IN (vt0.c1, vt1.c0)) THEN CAST(vt0.c1 AS BLOB) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END);
SELECT ALL * FROM vt0, vt1 WHERE (0.6804249250610428);
SELECT SUM(count) FROM (SELECT ALL ((0.6804249250610428) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0.6804249250610428);
SELECT SUM(count) FROM (SELECT ALL ((0.6804249250610428) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0.6804249250610428);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, 0.8494261648730835, vt0.c1)) NOT BETWEEN ((NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, 0.8494261648730835, vt0.c1)) NOT BETWEEN ((NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, 0.8494261648730835, vt0.c1)) NOT BETWEEN ((NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, 0.8494261648730835, vt0.c1)) NOT BETWEEN ((NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0, 0.8494261648730835, vt0.c1)) NOT BETWEEN ((NULL, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(IFNULL(DISTINCT vt0.c0, vt1.c0) AS BLOB)) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT vt0.c0, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(IFNULL(DISTINCT vt0.c0, vt1.c0) AS BLOB)) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT vt0.c0, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(IFNULL(DISTINCT vt0.c0, vt1.c0) AS BLOB)) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((NOT (LOWER(DISTINCT vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (LOWER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT (LOWER(DISTINCT vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (LOWER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT (LOWER(DISTINCT vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY NULLIF(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULLIF(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1) NOTNULL)) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY NULLIF(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULLIF(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1) NOTNULL)) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY NULLIF(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0)IS(x'dfca')))))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0)IS(x'dfca')))))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0)IS(x'dfca')))))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0)IS(x'dfca')))))AND(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) ASC, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)|(vt0.c1)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)|(vt0.c1)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)|(vt0.c1)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)|(vt0.c1)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)|(vt0.c1)))) AND (((vt0.c0 IN ())))));
SELECT * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))LIKE((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0))))LIKE((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))LIKE((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0))))LIKE((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))LIKE((+ (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOTNULL))<(((vt0.c0)IS(vt1.c0)))) WHERE (((x'')>>('-1555235328')));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>('-1555235328'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOTNULL))<(((vt0.c0)IS(vt1.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOTNULL))<(((vt0.c0)IS(vt1.c0)))) WHERE (((x'')>>('-1555235328')));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>('-1555235328'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOTNULL))<(((vt0.c0)IS(vt1.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOTNULL))<(((vt0.c0)IS(vt1.c0)))) WHERE (((x'')>>('-1555235328')));
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c1)+(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt1.c0)))IS((vt0.c0 IN ())))) ORDER BY ((+ (0.10135988510730864)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt1.c0)))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((+ (0.10135988510730864)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt1.c0)))IS((vt0.c0 IN ())))) ORDER BY ((+ (0.10135988510730864)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt1.c0)))IS((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((+ (0.10135988510730864)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt1.c0)))IS((vt0.c0 IN ())))) ORDER BY ((+ (0.10135988510730864)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (NULL) AND (HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (NULL) AND (HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (NULL) AND (HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (NULL) AND (HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (NULL) AND (HEX(DISTINCT vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-1675941550)IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))%((((vt1.c0, vt0.c0, x'7095'))>((vt0.c0, vt0.c1, vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-1675941550)IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))%((((vt1.c0, vt0.c0, x'7095'))>((vt0.c0, vt0.c1, vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-1675941550)IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))%((((vt1.c0, vt0.c0, x'7095'))>((vt0.c0, vt0.c1, vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-1675941550)IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))%((((vt1.c0, vt0.c0, x'7095'))>((vt0.c0, vt0.c1, vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-1675941550)IS NOT(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))))) ORDER BY ((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))%((((vt1.c0, vt0.c0, x'7095'))>((vt0.c0, vt0.c1, vt0.c1)))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (LIKE((vt0.c1 IN (vt1.c0)), CAST(vt0.c1 AS TEXT), 'v'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((vt0.c1 IN (vt1.c0)), CAST(vt0.c1 AS TEXT), 'v')) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKE((vt0.c1 IN (vt1.c0)), CAST(vt0.c1 AS TEXT), 'v'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((vt0.c1 IN (vt1.c0)), CAST(vt0.c1 AS TEXT), 'v')) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKE((vt0.c1 IN (vt1.c0)), CAST(vt0.c1 AS TEXT), 'v'));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt0.c1)|(vt0.c1)))))AND(vt0.c0 COLLATE NOCASE)))OR((- (vt1.c0)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((vt0.c0)OR(x'')))OR(vt0.c1)) THEN NULL ELSE ((vt0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt0.c1)|(vt0.c1)))))AND(vt0.c0 COLLATE NOCASE)))OR((- (vt1.c0)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULL ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((vt0.c0)OR(x'')))OR(vt0.c1)) THEN NULL ELSE ((vt0.c0) IS TRUE) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt0.c1)|(vt0.c1)))))AND(vt0.c0 COLLATE NOCASE)))OR((- (vt1.c0)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((vt0.c0)OR(x'')))OR(vt0.c1)) THEN NULL ELSE ((vt0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt0.c1)|(vt0.c1)))))AND(vt0.c0 COLLATE NOCASE)))OR((- (vt1.c0)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULL ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((vt0.c0)OR(x'')))OR(vt0.c1)) THEN NULL ELSE ((vt0.c0) IS TRUE) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt0.c1)|(vt0.c1)))))AND(vt0.c0 COLLATE NOCASE)))OR((- (vt1.c0)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE NOCASE THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((vt0.c0)OR(x'')))OR(vt0.c1)) THEN NULL ELSE ((vt0.c0) IS TRUE) END;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))GLOB((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE (((vt1.c0))>=((vt1.c0))) END ASC, ((((CAST(vt1.c0 AS REAL))AND((vt1.c0 IN ()))))OR((+ (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(vt1.c0)))GLOB((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE (((vt1.c0))>=((vt1.c0))) END ASC, ((((CAST(vt1.c0 AS REAL))AND((vt1.c0 IN ()))))OR((+ (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))GLOB((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE (((vt1.c0))>=((vt1.c0))) END ASC, ((((CAST(vt1.c0 AS REAL))AND((vt1.c0 IN ()))))OR((+ (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(vt1.c0)))GLOB((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE (((vt1.c0))>=((vt1.c0))) END ASC, ((((CAST(vt1.c0 AS REAL))AND((vt1.c0 IN ()))))OR((+ (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))GLOB((vt1.c0 IN (vt1.c0, vt1.c0))))) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (vt1.c0 IN ()) ELSE (((vt1.c0))>=((vt1.c0))) END ASC, ((((CAST(vt1.c0 AS REAL))AND((vt1.c0 IN ()))))OR((+ (vt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (NULL))) AND ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (NULL))) AND ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (NULL))) AND ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (NULL))) AND ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((+ (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (vt1.c0) AND (NULL))) AND ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))<((NULL))))GLOB(((vt0.c1)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<((NULL))))GLOB(((vt0.c1)||(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))<((NULL))))GLOB(((vt0.c1)||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))<((NULL))))GLOB(((vt0.c1)||(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1))<((NULL))))GLOB(((vt0.c1)||(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT (+ (vt1.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (+ (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT (+ (vt1.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (+ (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (UNLIKELY(DISTINCT (+ (vt1.c0)))) ORDER BY vt0.c0;
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))/((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0)&(vt1.c0)) THEN (~ (vt1.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN (((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE ((((vt1.c0)AND(vt1.c0)))OR(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))/((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)&(vt1.c0)) THEN (~ (vt1.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN (((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE ((((vt1.c0)AND(vt1.c0)))OR(NULL)) END ASC);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))/((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0)&(vt1.c0)) THEN (~ (vt1.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN (((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE ((((vt1.c0)AND(vt1.c0)))OR(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))/((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)&(vt1.c0)) THEN (~ (vt1.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN (((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE ((((vt1.c0)AND(vt1.c0)))OR(NULL)) END ASC);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))/((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0)&(vt1.c0)) THEN (~ (vt1.c0)) WHEN (+ (vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN (((NULL, vt1.c0, vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) ELSE ((((vt1.c0)AND(vt1.c0)))OR(NULL)) END ASC;
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN 1855739053 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)OR(vt1.c0))) ORDER BY '-1640820348' DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 1855739053 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)OR(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-1640820348' DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN 1855739053 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)OR(vt1.c0))) ORDER BY '-1640820348' DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 1855739053 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)OR(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-1640820348' DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN 1855739053 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)OR(vt1.c0))) ORDER BY '-1640820348' DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0 COLLATE BINARY)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0 COLLATE BINARY)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((vt1.c0 COLLATE BINARY)))) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((x'')AND(vt1.c0)))AND(0xffffffffbcdb36b5)))))OR(x'' COLLATE BINARY))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((x'')AND(vt1.c0)))AND(0Xffffffffbcdb36b5)))))OR(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((x'')AND(vt1.c0)))AND(0xffffffffbcdb36b5)))))OR(x'' COLLATE BINARY))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((x'')AND(vt1.c0)))AND(0Xffffffffbcdb36b5)))))OR(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((((x'')AND(vt1.c0)))AND(0xffffffffbcdb36b5)))))OR(x'' COLLATE BINARY))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT * FROM vt1 WHERE (((0.15515950789072241) ISNULL)) ORDER BY (NOT (((vt1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.15515950789072241) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((0.15515950789072241) ISNULL)) ORDER BY (NOT (((vt1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.15515950789072241) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((0.15515950789072241) ISNULL)) ORDER BY (NOT (((vt1.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))==((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))==((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))==((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ('2083831638') AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ('2083831638') AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ('2083831638') AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ('2083831638') AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ('2083831638') AND ((~ (vt1.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)))) AND ((((0.8861589394528594) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE ((+ (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)))) AND ((((0.8861589394528594) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)))) AND ((((0.8861589394528594) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE ((+ (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)))) AND ((((0.8861589394528594) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)))) AND ((((0.8861589394528594) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE ((+ (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (-2000233114) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))>=(((((vt0.c0, vt0.c1, vt0.c0, '-1724889816', vt0.c0))=((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))))))  NULLS LAST, (NOT ((('') BETWEEN (0x6e9c54ad) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-2000233114) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))>=(((((vt0.c0, vt0.c1, vt0.c0, '-1724889816', vt0.c0))=((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))))))  NULLS LAST, (NOT ((('') BETWEEN (0X6e9c54ad) AND (vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (-2000233114) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))>=(((((vt0.c0, vt0.c1, vt0.c0, '-1724889816', vt0.c0))=((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))))))  NULLS LAST, (NOT ((('') BETWEEN (0x6e9c54ad) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-2000233114) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))>=(((((vt0.c0, vt0.c1, vt0.c0, '-1724889816', vt0.c0))=((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))))))  NULLS LAST, (NOT ((('') BETWEEN (0X6e9c54ad) AND (vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (-2000233114) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))>=(((((vt0.c0, vt0.c1, vt0.c0, '-1724889816', vt0.c0))=((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))))))  NULLS LAST, (NOT ((('') BETWEEN (0x6e9c54ad) AND (vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'cd87')<(x'')))));
SELECT SUM(count) FROM (SELECT (((+ (((x'cd87')<(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'cd87')<(x'')))));
SELECT SUM(count) FROM (SELECT (((+ (((x'cd87')<(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'cd87')<(x'')))));
SELECT * FROM vt1, vt0 WHERE (((((((((-9.41975296E8)OR(((vt0.c1)AND(vt0.c1)))))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((~ (vt0.c0)))))OR(((((vt0.c1)AND('-1670212148')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((-9.41975296E8)OR(((vt0.c1)AND(vt0.c1)))))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((~ (vt0.c0)))))OR(((((vt0.c1)AND('-1670212148')))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((-9.41975296E8)OR(((vt0.c1)AND(vt0.c1)))))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((~ (vt0.c0)))))OR(((((vt0.c1)AND('-1670212148')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((-9.41975296E8)OR(((vt0.c1)AND(vt0.c1)))))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((~ (vt0.c0)))))OR(((((vt0.c1)AND('-1670212148')))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((-9.41975296E8)OR(((vt0.c1)AND(vt0.c1)))))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((~ (vt0.c0)))))OR(((((vt0.c1)AND('-1670212148')))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (((vt1.c0)-(vt1.c0))))) ORDER BY (('1062348494') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('1062348494') IS TRUE) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (((vt1.c0)-(vt1.c0))))) ORDER BY (('1062348494') IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('1062348494') IS TRUE) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (((vt1.c0)-(vt1.c0))))) ORDER BY (('1062348494') IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NULL))<=((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NULL))<=((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NULL))<=((CAST(vt1.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c1 COLLATE RTRIM)>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c1 COLLATE RTRIM)>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY ((vt0.c1 COLLATE RTRIM)>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS BLOB)))>=((CAST(vt1.c0 AS TEXT))))) ORDER BY rtreenode(x'', vt1.c0) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))>=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY rtreenode(x'', vt1.c0) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS BLOB)))>=((CAST(vt1.c0 AS TEXT))))) ORDER BY rtreenode(x'', vt1.c0) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))>=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY rtreenode(x'', vt1.c0) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS BLOB)))>=((CAST(vt1.c0 AS TEXT))))) ORDER BY rtreenode(x'', vt1.c0) ASC;
SELECT ALL * FROM vt1 WHERE ((((NULL))<((x''))));
SELECT SUM(count) FROM (SELECT (((((NULL))<((x'')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NULL))<((x''))));
SELECT SUM(count) FROM (SELECT (((((NULL))<((x'')))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NULL))<((x''))));
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((x'') NOT NULL))));
SELECT ALL * FROM vt1 WHERE ((((((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((0.7378964581585096)*(vt1.c0)))))AND(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((0.7378964581585096)*(vt1.c0)))))AND(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((0.7378964581585096)*(vt1.c0)))))AND(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((0.7378964581585096)*(vt1.c0)))))AND(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((0.7378964581585096)*(vt1.c0)))))AND(((vt1.c0)<<(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (((((x'b849eebe')AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((x'b849eebe')AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))OR(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((x'b849eebe')AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((x'b849eebe')AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))OR(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((x'b849eebe')AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)))OR(vt0.c1)));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN 0.025908040032989188 ELSE vt0.c0 END)LIKE(vt0.c0))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN 0.025908040032989188 ELSE vt0.c0 END)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN 0.025908040032989188 ELSE vt0.c0 END)LIKE(vt0.c0))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN 0.025908040032989188 ELSE vt0.c0 END)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN 0.025908040032989188 ELSE vt0.c0 END)LIKE(vt0.c0))) ORDER BY vt0.c1  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0)<=(vt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL));
SELECT * FROM vt0 WHERE (((vt0.c0)<=(vt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL));
SELECT * FROM vt0 WHERE (((vt0.c0)<=(vt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c0) ISNULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-1.227269108E9) BETWEEN (json_patch(vt1.c0, '16!zd')) AND ((NOT (vt1.c0))))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt1.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((((-1.227269108E9) BETWEEN (json_patch(vt1.c0, '16!zd')) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt1.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((-1.227269108E9) BETWEEN (json_patch(vt1.c0, '16!zd')) AND ((NOT (vt1.c0))))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt1.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((((-1.227269108E9) BETWEEN (json_patch(vt1.c0, '16!zd')) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt1.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt0.c0 IN (vt0.c0)))AND(x'')))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR((~ (vt0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt0.c0 IN (vt0.c0)))AND(x'')))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt0.c0 IN (vt0.c0)))AND(x'')))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR((~ (vt0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt0.c0 IN (vt0.c0)))AND(x'')))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt0.c0 IN (vt0.c0)))AND(x'')))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))OR((~ (vt0.c1)))) WHERE (x'');
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))&(((((NULL)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))&(((((NULL)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))&(((((NULL)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))&(((((NULL)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))&(((((NULL)OR(vt0.c1)))OR(vt0.c0)))));
SELECT ALL * FROM vt1 WHERE ((- (CAST(vt1.c0 AS TEXT)))) ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((- (CAST(vt1.c0 AS TEXT)))) ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((- (CAST(vt1.c0 AS TEXT)))) ORDER BY CAST(vt1.c0 AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((vt0.c1)>(vt0.c0)) END) ORDER BY ((vt1.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) DESC  NULLS FIRST, (- (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((vt0.c1)>(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) DESC  NULLS FIRST, (- (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((vt0.c1)>(vt0.c0)) END) ORDER BY ((vt1.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) DESC  NULLS FIRST, (- (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN ((vt0.c1)>(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) DESC  NULLS FIRST, (- (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((vt0.c1)>(vt0.c0)) END) ORDER BY ((vt1.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) DESC  NULLS FIRST, (- (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0))))AND((vt0.c1 IN (vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0))))AND((vt0.c1 IN (vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0))))AND((vt0.c1 IN (vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0))))AND((vt0.c1 IN (vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c0, vt0.c0))))AND((vt0.c1 IN (vt0.c1)))))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT ((- (vt0.c0)))) WHERE (CAST(((NULL)<>(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)!=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT ((- (vt0.c0)))) WHERE (CAST(((NULL)<>(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)!=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT ((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT ((- (vt0.c0)))) WHERE (CAST(((NULL)<>(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)>(vt0.c1)))OR(((vt0.c1) ISNULL))))AND((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>(vt0.c1)))OR(((vt0.c1) ISNULL))))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)>(vt0.c1)))OR(((vt0.c1) ISNULL))))AND((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>(vt0.c1)))OR(((vt0.c1) ISNULL))))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)>(vt0.c1)))OR(((vt0.c1) ISNULL))))AND((NOT (vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE ('<A');
SELECT SUM(count) FROM (SELECT (('<A') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('<A');
SELECT SUM(count) FROM (SELECT (('<A') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('<A');
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(COALESCE(DISTINCT vt0.c0, NULL, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((CASE vt0.c1  WHEN '' THEN vt0.c1 END)<=(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(COALESCE(DISTINCT vt0.c0, NULL, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN '' THEN vt0.c1 END)<=(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(COALESCE(DISTINCT vt0.c0, NULL, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((CASE vt0.c1  WHEN '' THEN vt0.c1 END)<=(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(COALESCE(DISTINCT vt0.c0, NULL, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN '' THEN vt0.c1 END)<=(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(COALESCE(DISTINCT vt0.c0, NULL, vt0.c0, vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((CASE vt0.c1  WHEN '' THEN vt0.c1 END)<=(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN (((vt0.c1)<=(vt0.c0))))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN (((vt0.c1)<=(vt0.c0))))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN (((vt0.c1)<=(vt0.c0))))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (RTRIM(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (RTRIM(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (RTRIM(vt0.c1))));
SELECT ALL * FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0))-(LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt1.c0, vt1.c0))-(LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0))-(LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt1.c0, vt1.c0))-(LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c0))-(LIKELY(vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))|(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(x'')))AND(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)))) AND ((((vt1.c0)>(vt0.c0)), ((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c1)))|(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(x'')))AND(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)))) AND ((((vt1.c0)>(vt0.c0)), ((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))|(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(x'')))AND(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)))) AND ((((vt1.c0)>(vt0.c0)), ((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c1)))|(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(x'')))AND(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)))) AND ((((vt1.c0)>(vt0.c0)), ((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))|(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(x'')))AND(vt1.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (+ (vt0.c1)))) AND ((((vt1.c0)>(vt0.c0)), ((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((COALESCE(vt0.c0, vt0.c1))>(STRFTIME(vt0.c1, vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(vt0.c0, vt0.c1))>(STRFTIME(vt0.c1, vt0.c0, vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((COALESCE(vt0.c0, vt0.c1))>(STRFTIME(vt0.c1, vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((COALESCE(vt0.c0, vt0.c1))>(STRFTIME(vt0.c1, vt0.c0, vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((COALESCE(vt0.c0, vt0.c1))>(STRFTIME(vt0.c1, vt0.c0, vt0.c0))) DESC;
SELECT * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c1);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (+ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)) WHERE ((+ (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (+ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)) WHERE ((+ (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (+ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (+ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)) WHERE ((+ (vt0.c1 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)<>(vt0.c0)) THEN vt0.c0 END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, x'825c', vt0.c0))<((0Xffffffff89887c7c, vt0.c0, vt0.c0))))>>(UNLIKELY(DISTINCT vt0.c0)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, x'825c', vt0.c0))<((0Xffffffff89887c7c, vt0.c0, vt0.c0))))>>(UNLIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ()))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, x'825c', vt0.c0))<((0Xffffffff89887c7c, vt0.c0, vt0.c0))))>>(UNLIKELY(DISTINCT vt0.c0)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, x'825c', vt0.c0))<((0Xffffffff89887c7c, vt0.c0, vt0.c0))))>>(UNLIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ()))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, x'825c', vt0.c0))<((0Xffffffff89887c7c, vt0.c0, vt0.c0))))>>(UNLIKELY(DISTINCT vt0.c0)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC;
SELECT * FROM vt1, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()));
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()));
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c1 COLLATE BINARY IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)<(vt0.c1)) AS TEXT)) ORDER BY json_array(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), '-432666139') DESC  NULLS FIRST, (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, -1856170029, vt0.c1))))>=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY json_array(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), '-432666139') DESC  NULLS FIRST, (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, -1856170029, vt0.c1))))>=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)<(vt0.c1)) AS TEXT)) ORDER BY json_array(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), '-432666139') DESC  NULLS FIRST, (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, -1856170029, vt0.c1))))>=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY json_array(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), '-432666139') DESC  NULLS FIRST, (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, -1856170029, vt0.c1))))>=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)<(vt0.c1)) AS TEXT)) ORDER BY json_array(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), '-432666139') DESC  NULLS FIRST, (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, -1856170029, vt0.c1))))>=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, CASE -7.9099461E7  WHEN vt1.c0 THEN NULL WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((x'c20b')OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6804249250610428 THEN vt1.c0 END, CAST(vt1.c0 AS TEXT))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((vt1.c0)OR(NULL)))OR(vt1.c0)))) DESC, CASE (((vt1.c0))!=((vt1.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0) IS FALSE) THEN (('0.5620718328468233') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL END, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, CASE -7.9099461E7  WHEN vt1.c0 THEN NULL WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((x'c20b')OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6804249250610428 THEN vt1.c0 END, CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((vt1.c0)OR(NULL)))OR(vt1.c0)))) DESC, CASE (((vt1.c0))<>((vt1.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0) IS FALSE) THEN (('0.5620718328468233') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL END, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, CASE -7.9099461E7  WHEN vt1.c0 THEN NULL WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((x'c20b')OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6804249250610428 THEN vt1.c0 END, CAST(vt1.c0 AS TEXT))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((vt1.c0)OR(NULL)))OR(vt1.c0)))) DESC, CASE (((vt1.c0))!=((vt1.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0) IS FALSE) THEN (('0.5620718328468233') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL END, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, CASE -7.9099461E7  WHEN vt1.c0 THEN NULL WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((x'c20b')OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6804249250610428 THEN vt1.c0 END, CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((vt1.c0)OR(NULL)))OR(vt1.c0)))) DESC, CASE (((vt1.c0))<>((vt1.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0) IS FALSE) THEN (('0.5620718328468233') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL END, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, vt1.c0 COLLATE RTRIM, CASE -7.9099461E7  WHEN vt1.c0 THEN NULL WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((x'c20b')OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6804249250610428 THEN vt1.c0 END, CAST(vt1.c0 AS TEXT))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((vt1.c0)OR(NULL)))OR(vt1.c0)))) DESC, CASE (((vt1.c0))!=((vt1.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0) IS FALSE) THEN (('0.5620718328468233') BETWEEN (vt1.c0) AND (vt1.c0)) ELSE NULL END, CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) END;
SELECT ALL * FROM vt1 WHERE ((~ (0.48591679326095516))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.48591679326095516))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (0.48591679326095516))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.48591679326095516))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((~ (0.48591679326095516))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC  NULLS FIRST, vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY 0.3267817634748993 COLLATE NOCASE, CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0))<>((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0)*(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END THEN LIKELIHOOD(x'', 0.7522717019526419) ELSE ((vt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.3267817634748993 COLLATE NOCASE, CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0))!=((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0)*(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END THEN LIKELIHOOD(x'', 0.7522717019526419) ELSE ((vt0.c0) NOTNULL) END);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY 0.3267817634748993 COLLATE NOCASE, CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0))<>((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0)*(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END THEN LIKELIHOOD(x'', 0.7522717019526419) ELSE ((vt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.3267817634748993 COLLATE NOCASE, CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0))!=((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0)*(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END THEN LIKELIHOOD(x'', 0.7522717019526419) ELSE ((vt0.c0) NOTNULL) END);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(DISTINCT CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY 0.3267817634748993 COLLATE NOCASE, CASE vt1.c0  WHEN CAST(vt1.c0 AS REAL) THEN (((vt0.c0))<>((vt1.c0))) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0)*(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 END THEN LIKELIHOOD(x'', 0.7522717019526419) ELSE ((vt0.c0) NOTNULL) END;
SELECT * FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((vt0.c1 COLLATE RTRIM)<<(UNLIKELY(2.68567684E8)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)<<(UNLIKELY(2.68567684E8)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((vt0.c1 COLLATE RTRIM)<<(UNLIKELY(2.68567684E8)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)<<(UNLIKELY(2.68567684E8)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((vt0.c1 COLLATE RTRIM)<<(UNLIKELY(2.68567684E8)))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>((vt0.c1 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)+(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (CAST(((vt1.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)+(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)+(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (CAST(((vt1.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)+(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c1)+(vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) WHERE (CAST(((vt1.c0) ISNULL) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)==(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)==(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)==(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)==(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)==(vt1.c0))) NOT NULL));
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(((vt0.c1) NOT NULL)))) ORDER BY (- (((vt0.c0)/(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((vt0.c0)/(vt1.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(((vt0.c1) NOT NULL)))) ORDER BY (- (((vt0.c0)/(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((vt0.c0)/(vt1.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(((vt0.c1) NOT NULL)))) ORDER BY (- (((vt0.c0)/(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((- (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ ('''+k')))))AND(((vt0.c0)||(vt0.c0)))))AND(LIKELY(vt0.c0))))AND('-2110121862'))) ORDER BY 0.02910126464568108, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ ('''+k')))))AND(((vt0.c0)||(vt0.c0)))))AND(LIKELY(vt0.c0))))AND('-2110121862'))) IS TRUE)  as count FROM vt0 ORDER BY 0.02910126464568108, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ ('''+k')))))AND(((vt0.c0)||(vt0.c0)))))AND(LIKELY(vt0.c0))))AND('-2110121862'))) ORDER BY 0.02910126464568108, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ ('''+k')))))AND(((vt0.c0)||(vt0.c0)))))AND(LIKELY(vt0.c0))))AND('-2110121862'))) IS TRUE)  as count FROM vt0 ORDER BY 0.02910126464568108, vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))OR((~ ('''+k')))))AND(((vt0.c0)||(vt0.c0)))))AND(LIKELY(vt0.c0))))AND('-2110121862'))) ORDER BY 0.02910126464568108, vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(HEX(vt0.c0) AS TEXT)) ORDER BY LIKELIHOOD(LOWER(DISTINCT vt0.c0), 0.7670002863522334) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(LOWER(DISTINCT vt0.c0), 0.7670002863522334) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(HEX(vt0.c0) AS TEXT)) ORDER BY LIKELIHOOD(LOWER(DISTINCT vt0.c0), 0.7670002863522334) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(LOWER(DISTINCT vt0.c0), 0.7670002863522334) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(HEX(vt0.c0) AS TEXT)) ORDER BY LIKELIHOOD(LOWER(DISTINCT vt0.c0), 0.7670002863522334) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'7258752c') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'7258752c') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'7258752c') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'7258752c') NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((x'7258752c') NOTNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'830e');
SELECT SUM(count) FROM (SELECT ALL ((x'830e') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'830e');
SELECT SUM(count) FROM (SELECT ALL ((x'830e') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'830e');
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt1.c0 AS TEXT))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)<<(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt1.c0 AS TEXT))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)<<(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt1.c0 AS TEXT))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))%(vt0.c0))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c1)))%(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c1) IS FALSE))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))%(vt0.c0))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c1)))%(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c1) IS FALSE))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))%(vt0.c0))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c1) IS FALSE))) DESC;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (NOT (HEX(0.411970149324576))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (HEX(0.411970149324576))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (NOT (HEX(0.411970149324576))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (HEX(0.411970149324576))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)))AND(((vt0.c1) NOT NULL))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (NOT (HEX(0.411970149324576))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL)) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST, (CHANGES() IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST, (CHANGES() IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL)) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST, (CHANGES() IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST, (CHANGES() IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL)) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST, (CHANGES() IN ()) DESC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN 0Xfffffffff744c4fc THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END WHEN CASE vt0.c0  WHEN '' THEN vt0.c1 END THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, CAST(vt0.c0 AS BLOB), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0Xfffffffff744c4fc THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END WHEN CASE vt0.c0  WHEN '' THEN vt0.c1 END THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, CAST(vt0.c0 AS BLOB), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN 0Xfffffffff744c4fc THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END WHEN CASE vt0.c0  WHEN '' THEN vt0.c1 END THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, CAST(vt0.c0 AS BLOB), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0Xfffffffff744c4fc THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END WHEN CASE vt0.c0  WHEN '' THEN vt0.c1 END THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, CAST(vt0.c0 AS BLOB), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c1))))&(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN 0Xfffffffff744c4fc THEN CASE vt0.c0  WHEN vt0.c0 THEN NULL END WHEN CASE vt0.c0  WHEN '' THEN vt0.c1 END THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE  NULLS LAST, (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, CAST(vt0.c0 AS BLOB), vt0.c1 COLLATE BINARY)) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), x'', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END  WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (-466524818)) WHEN ((vt0.c1) NOT BETWEEN (x'bcae') AND (vt0.c0)) THEN '-1769411780' WHEN x'8696' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (NULL) AND ('G殉9[dNGꢳ')) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END  WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (-466524818)) WHEN ((vt0.c1) NOT BETWEEN (x'bcae') AND (vt0.c0)) THEN '-1769411780' WHEN x'8696' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (NULL) AND ('G殉9[dNGꢳ')) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END  WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (-466524818)) WHEN ((vt0.c1) NOT BETWEEN (x'bcae') AND (vt0.c0)) THEN '-1769411780' WHEN x'8696' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (NULL) AND ('G殉9[dNGꢳ')) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END  WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (-466524818)) WHEN ((vt0.c1) NOT BETWEEN (x'bcae') AND (vt0.c0)) THEN '-1769411780' WHEN x'8696' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (NULL) AND ('G殉9[dNGꢳ')) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END  WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (-466524818)) WHEN ((vt0.c1) NOT BETWEEN (x'bcae') AND (vt0.c0)) THEN '-1769411780' WHEN x'8696' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt1.c0)>(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (NULL) AND ('G殉9[dNGꢳ')) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c0)GLOB(vt1.c0)) END);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY CAST(((x'')LIKE(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((x'')LIKE(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY CAST(((x'')LIKE(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((x'')LIKE(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY CAST(((x'')LIKE(vt0.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((((0Xffffffffef7712f9) ISNULL))AND((('2083831638') IS FALSE))))OR((vt0.c0 IN (0xffffffffde9ad386, vt0.c1))))) ORDER BY vt0.c1, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffef7712f9) ISNULL))AND((('2083831638') IS FALSE))))OR((vt0.c0 IN (0Xffffffffde9ad386, vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c1, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((((0Xffffffffef7712f9) ISNULL))AND((('2083831638') IS FALSE))))OR((vt0.c0 IN (0xffffffffde9ad386, vt0.c1))))) ORDER BY vt0.c1, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffef7712f9) ISNULL))AND((('2083831638') IS FALSE))))OR((vt0.c0 IN (0Xffffffffde9ad386, vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c1, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((((0Xffffffffef7712f9) ISNULL))AND((('2083831638') IS FALSE))))OR((vt0.c0 IN (0xffffffffde9ad386, vt0.c1))))) ORDER BY vt0.c1, vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (TRIM((+ (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((+ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (TRIM((+ (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((+ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (TRIM((+ (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT * FROM vt0, vt1 WHERE ((+ (('-1750837713' IN ()))));
SELECT SUM(count) FROM (SELECT (((+ (('-1750837713' IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ (('-1750837713' IN ()))));
SELECT SUM(count) FROM (SELECT (((+ (('-1750837713' IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ (('-1750837713' IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ((~ (vt0.c0)), NULL))) ORDER BY CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c1)) IN ((~ (vt0.c0)), NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ((~ (vt0.c0)), NULL))) ORDER BY CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c1)) IN ((~ (vt0.c0)), NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ((~ (vt0.c0)), NULL))) ORDER BY CASE vt0.c1  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS NOT(vt0.c1)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)!=(0X66f14901))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<>(0x66f14901)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)!=(0X66f14901))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)<>(0x66f14901)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)), ((vt1.c0)!=(0X66f14901))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))=((vt0.c1)))) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((0.6010368842980338)+(vt0.c0)) IN (((1369837618)IS NOT(0.6843067442294603)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c1)))) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.6010368842980338)+(vt0.c0)) IN (((1369837618)IS NOT(0.6843067442294603)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))=((vt0.c1)))) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((0.6010368842980338)+(vt0.c0)) IN (((1369837618)IS NOT(0.6843067442294603)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c1)))) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.6010368842980338)+(vt0.c0)) IN (((1369837618)IS NOT(0.6843067442294603)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))=((vt0.c1)))) BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((0.6010368842980338)+(vt0.c0)) IN (((1369837618)IS NOT(0.6843067442294603)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR('-777708329')))AND((((vt1.c0))<=((vt0.c1))))) WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))))) ORDER BY ((vt1.c0)GLOB(vt0.c0)) COLLATE BINARY, (CAST(vt0.c0 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN (((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR('-777708329')))AND((((vt1.c0))<=((vt0.c1))))) ORDER BY ((vt1.c0)GLOB(vt0.c0)) COLLATE BINARY, (CAST(vt0.c0 AS TEXT) IN ()) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR('-777708329')))AND((((vt1.c0))<=((vt0.c1))))) WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))))) ORDER BY ((vt1.c0)GLOB(vt0.c0)) COLLATE BINARY, (CAST(vt0.c0 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN (((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR('-777708329')))AND((((vt1.c0))<=((vt0.c1))))) ORDER BY ((vt1.c0)GLOB(vt0.c0)) COLLATE BINARY, (CAST(vt0.c0 AS TEXT) IN ()) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR('-777708329')))AND((((vt1.c0))<=((vt0.c1))))) WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))))) ORDER BY ((vt1.c0)GLOB(vt0.c0)) COLLATE BINARY, (CAST(vt0.c0 AS TEXT) IN ()) ASC;
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)<<(vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)<<(vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)<<(vt0.c0)));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt1.c0)<=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt1.c0)<=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CAST(((vt1.c0)<=(vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))<(((vt0.c0)IS(vt0.c1))))) ORDER BY ((((vt0.c1)OR((NOT (vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))<(((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)OR((NOT (vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))<(((vt0.c0)IS(vt0.c1))))) ORDER BY ((((vt0.c1)OR((NOT (vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))<(((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c1)OR((NOT (vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))<(((vt0.c0)IS(vt0.c1))))) ORDER BY ((((vt0.c1)OR((NOT (vt0.c1)))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, 0x6c0a3e82);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, 0X6c0a3e82));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, 0x6c0a3e82);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, 0X6c0a3e82));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, 0x6c0a3e82);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON x'1b31' WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)) ORDER BY (((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON x'1b31' ORDER BY (((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON x'1b31' WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)) ORDER BY (((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON x'1b31' ORDER BY (((((vt1.c0 IN ()))AND(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))OR(x''))  WHEN TYPEOF(vt0.c1) THEN vt0.c1 ELSE (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))OR(x''))  WHEN TYPEOF(vt0.c1) THEN vt0.c1 ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))OR(x''))  WHEN TYPEOF(vt0.c1) THEN vt0.c1 ELSE (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))OR(x''))  WHEN TYPEOF(vt0.c1) THEN vt0.c1 ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))OR(x''))  WHEN TYPEOF(vt0.c1) THEN vt0.c1 ELSE (NOT (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)==(vt0.c1)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, x'20de'))))))OR(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)==(vt0.c1)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, x'20de'))))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)==(vt0.c1)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, x'20de'))))))OR(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)==(vt0.c1)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, x'20de'))))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)==(vt0.c1)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, x'20de'))))))OR(((vt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (+ (vt1.c0)))) AND (((NOT (vt1.c0)), CASE WHEN vt1.c0 THEN NULL ELSE NULL END, (NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (+ (vt1.c0)))) AND (((NOT (vt1.c0)), CASE WHEN vt1.c0 THEN NULL ELSE NULL END, (NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (+ (vt1.c0)))) AND (((NOT (vt1.c0)), CASE WHEN vt1.c0 THEN NULL ELSE NULL END, (NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (+ (vt1.c0)))) AND (((NOT (vt1.c0)), CASE WHEN vt1.c0 THEN NULL ELSE NULL END, (NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), (+ (vt1.c0)))) AND (((NOT (vt1.c0)), CASE WHEN vt1.c0 THEN NULL ELSE NULL END, (NOT (vt0.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((((((vt1.c0)AND('1234245988')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY (NOT (vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)AND('1234245988')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((((((vt1.c0)AND('1234245988')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY (NOT (vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((vt1.c0)AND('1234245988')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((((((vt1.c0)AND('1234245988')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)&(vt1.c0)))))OR(vt1.c0 COLLATE BINARY))) ORDER BY (NOT (vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1)>=('-1862894376'))))) ORDER BY UNLIKELY(vt0.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1)>=('-1862894376'))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(vt0.c0 COLLATE BINARY) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1)>=('-1862894376'))))) ORDER BY UNLIKELY(vt0.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1)>=('-1862894376'))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(vt0.c0 COLLATE BINARY) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1)>=('-1862894376'))))) ORDER BY UNLIKELY(vt0.c0 COLLATE BINARY) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))-(((vt1.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c0)))-(((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))-(((vt1.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c0)))-(((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)GLOB(vt1.c0)))-(((vt1.c0)IS(vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (x''))) ORDER BY CAST(((vt1.c0) NOT NULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) NOT NULL) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (x''))) ORDER BY CAST(((vt1.c0) NOT NULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) NOT NULL) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (x''))) ORDER BY CAST(((vt1.c0) NOT NULL) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((NULL)OR(vt1.c0)))AND(NULL)))OR(vt0.c0)))AND(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(vt1.c0)))AND(NULL)))OR(vt0.c0)))AND(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((NULL)OR(vt1.c0)))AND(NULL)))OR(vt0.c0)))AND(NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(vt1.c0)))AND(NULL)))OR(vt0.c0)))AND(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((NULL)OR(vt1.c0)))AND(NULL)))OR(vt0.c0)))AND(NULL)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c1 COLLATE BINARY IN (((NULL) IS FALSE)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN (((NULL) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c1 COLLATE BINARY IN (((NULL) IS FALSE)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN (((NULL) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c1 COLLATE BINARY IN (((NULL) IS FALSE)))) ORDER BY x''  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 THEN vt0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))GLOB(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE))GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))GLOB(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE))GLOB(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt0.c0 AS BLOB) THEN LIKELIHOOD(vt0.c1, 0.9006186754606633) WHEN LIKE(vt0.c1, vt0.c0, '3') THEN (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt0.c0 AS BLOB) THEN LIKELIHOOD(vt0.c1, 0.9006186754606633) WHEN LIKE(vt0.c1, vt0.c0, '3') THEN (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt0.c0 AS BLOB) THEN LIKELIHOOD(vt0.c1, 0.9006186754606633) WHEN LIKE(vt0.c1, vt0.c0, '3') THEN (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt0.c0 AS BLOB) THEN LIKELIHOOD(vt0.c1, 0.9006186754606633) WHEN LIKE(vt0.c1, vt0.c0, '3') THEN (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt0.c0 AS BLOB) THEN LIKELIHOOD(vt0.c1, 0.9006186754606633) WHEN LIKE(vt0.c1, vt0.c0, '3') THEN (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE QUOTE(vt0.c0)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY IFNULL(DISTINCT vt0.c1, (+ (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE QUOTE(vt0.c0)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT vt0.c1, (+ (NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE QUOTE(vt0.c0)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY IFNULL(DISTINCT vt0.c1, (+ (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE QUOTE(vt0.c0)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT vt0.c1, (+ (NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE QUOTE(vt0.c0)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE BINARY WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY IFNULL(DISTINCT vt0.c1, (+ (NULL)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ('') ORDER BY (x'' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0 ORDER BY (x'' IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('') ORDER BY (x'' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0 ORDER BY (x'' IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('') ORDER BY (x'' IN ())  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN ())))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN ())))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN ())))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY (+ (vt0.c1)), (((vt0.c1) IS FALSE) IN (0.18685589091328347 COLLATE RTRIM)) ASC  NULLS LAST, (('*') BETWEEN (((vt0.c1)-(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1)), (((vt0.c1) IS FALSE) IN (0.18685589091328347 COLLATE RTRIM)) ASC  NULLS LAST, (('*') BETWEEN (((vt0.c1)-(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY (+ (vt0.c1)), (((vt0.c1) IS FALSE) IN (0.18685589091328347 COLLATE RTRIM)) ASC  NULLS LAST, (('*') BETWEEN (((vt0.c1)-(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1)), (((vt0.c1) IS FALSE) IN (0.18685589091328347 COLLATE RTRIM)) ASC  NULLS LAST, (('*') BETWEEN (((vt0.c1)-(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY (+ (vt0.c1)), (((vt0.c1) IS FALSE) IN (0.18685589091328347 COLLATE RTRIM)) ASC  NULLS LAST, (('*') BETWEEN (((vt0.c1)-(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((MAX(vt1.c0, vt0.c1, vt1.c0, vt1.c0))IS NOT((+ (0.2257155774226164))))) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt1.c0, vt0.c1, vt1.c0, vt1.c0))IS NOT((+ (0.2257155774226164))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((MAX(vt1.c0, vt0.c1, vt1.c0, vt1.c0))IS NOT((+ (0.2257155774226164))))) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt1.c0, vt0.c1, vt1.c0, vt1.c0))IS NOT((+ (0.2257155774226164))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((MAX(vt1.c0, vt0.c1, vt1.c0, vt1.c0))IS NOT((+ (0.2257155774226164))))) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE COLLATE NOCASE WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE COLLATE NOCASE WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE COLLATE NOCASE WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((LTRIM(vt1.c0, vt1.c0))!=((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c0, vt1.c0))<>((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((LTRIM(vt1.c0, vt1.c0))!=((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c0, vt1.c0))<>((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((LTRIM(vt1.c0, vt1.c0))!=((((vt0.c0))<((vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(x'440d' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(x'440d' COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(x'440d' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(x'440d' COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*(x'440d' COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (vt1.c0))) ORDER BY (+ ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1 COLLATE BINARY) BETWEEN (vt0.c0) AND ((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1 COLLATE BINARY) BETWEEN (vt0.c0) AND ((~ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (vt1.c0))) ORDER BY (+ ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1 COLLATE BINARY) BETWEEN (vt0.c0) AND ((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1 COLLATE BINARY) BETWEEN (vt0.c0) AND ((~ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND (vt1.c0))) ORDER BY (+ ((vt0.c0 IN ()))) DESC  NULLS FIRST, ((vt0.c1 COLLATE BINARY) BETWEEN (vt0.c0) AND ((~ (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())) WHERE (((IFNULL(vt1.c0, vt0.c0)) BETWEEN (vt0.c0) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt0.c0)) BETWEEN (vt0.c0) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())) WHERE (((IFNULL(vt1.c0, vt0.c0)) BETWEEN (vt0.c0) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, vt0.c0)) BETWEEN (vt0.c0) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON UPPER(DISTINCT (vt0.c0 IN ())) WHERE (((IFNULL(vt1.c0, vt0.c0)) BETWEEN (vt0.c0) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (((vt1.c0)+(vt0.c0)))) WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '3\n8%' END)AND(CASE WHEN vt0.c1 THEN x'305d' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(LTRIM(vt0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '3\n8%' END)AND(CASE WHEN vt0.c1 THEN x'305d' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(LTRIM(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT (((vt1.c0)+(vt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (((vt1.c0)+(vt0.c0)))) WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '3\n8%' END)AND(CASE WHEN vt0.c1 THEN x'305d' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(LTRIM(vt0.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '3\n8%' END)AND(CASE WHEN vt0.c1 THEN x'305d' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(LTRIM(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT (((vt1.c0)+(vt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (NOT (((vt1.c0)+(vt0.c0)))) WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '3\n8%' END)AND(CASE WHEN vt0.c1 THEN x'305d' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(LTRIM(vt0.c1, vt0.c0))));
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-1750837713')))-(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 END)) WHERE (((('51#'))=((CASE WHEN vt0.c1 THEN vt0.c0 WHEN '-1e500' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(((802896483)LIKE(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('51#'))==((CASE WHEN vt0.c1 THEN vt0.c0 WHEN '-1e500' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-1750837713')))-(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(((802896483)LIKE(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-1750837713')))-(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 END)) WHERE (((('51#'))=((CASE WHEN vt0.c1 THEN vt0.c0 WHEN '-1e500' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(((802896483)LIKE(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('51#'))==((CASE WHEN vt0.c1 THEN vt0.c0 WHEN '-1e500' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-1750837713')))-(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(((802896483)LIKE(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-1750837713')))-(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 END)) WHERE (((('51#'))=((CASE WHEN vt0.c1 THEN vt0.c0 WHEN '-1e500' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))) ORDER BY ((((((vt1.c0)IS(vt0.c0)))AND(((802896483)LIKE(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) ASC;
SELECT ALL * FROM vt1 WHERE (x'2018');
SELECT SUM(count) FROM (SELECT ((x'2018') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'2018');
SELECT SUM(count) FROM (SELECT ((x'2018') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'2018');
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((x'e76a') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'e76a') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'e76a') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'e76a') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'e76a') NOTNULL));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) ORDER BY x''  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN '363028542' THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN '363028542' THEN NULL END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN '363028542' THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN '363028542' THEN NULL END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN '363028542' THEN NULL END)));
SELECT * FROM vt1 WHERE (((((json_valid(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0 COLLATE NOCASE))) ORDER BY ((vt1.c0)/(vt1.c0)) COLLATE NOCASE, ((x'') NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_valid(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)/(vt1.c0)) COLLATE NOCASE, ((x'') NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((json_valid(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0 COLLATE NOCASE))) ORDER BY ((vt1.c0)/(vt1.c0)) COLLATE NOCASE, ((x'') NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_valid(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)/(vt1.c0)) COLLATE NOCASE, ((x'') NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((json_valid(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(vt1.c0 COLLATE NOCASE))) ORDER BY ((vt1.c0)/(vt1.c0)) COLLATE NOCASE, ((x'') NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((vt0.c0)&(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((vt0.c1 COLLATE BINARY)AND('d5''3{\rV')))AND(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((vt0.c1 COLLATE BINARY)AND('d5''3{\rV')))AND(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((vt0.c0)&(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((vt0.c1 COLLATE BINARY)AND('d5''3{\rV')))AND(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((vt0.c1 COLLATE BINARY)AND('d5''3{\rV')))AND(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((vt0.c0)&(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((vt0.c1 COLLATE BINARY)AND('d5''3{\rV')))AND(((vt0.c0) ISNULL)));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM ASC, ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM ASC, ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM ASC, ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM ASC, ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)) COLLATE RTRIM ASC, ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((0x5562e861 COLLATE BINARY)/(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0x5562e861 COLLATE BINARY)/(vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((0x5562e861 COLLATE BINARY)/(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0x5562e861 COLLATE BINARY)/(vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((0x5562e861 COLLATE BINARY)/(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.5101388102432067);
SELECT SUM(count) FROM (SELECT ((0.5101388102432067) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.5101388102432067);
SELECT SUM(count) FROM (SELECT ((0.5101388102432067) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.5101388102432067);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt1.c0)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(0.3567133825144454))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(0.3567133825144454))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(0.3567133825144454))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(0.3567133825144454))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c1)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(0.3567133825144454))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((x'') NOT NULL))>=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((x'') NOT NULL))>=(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((x'') NOT NULL))>=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((x'') NOT NULL))>=(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST, ((((x'') NOT NULL))>=(vt0.c0)) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL));
