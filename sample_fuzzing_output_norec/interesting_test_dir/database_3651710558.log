-- Time: 2024/06/11 05:59:59
-- Database: database58
-- Database version: 3.40.0
-- seed value: 3651710558
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt50 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt50(c0) VALUES (x''), (x''), ('ꏰ*'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt50 VALUES (NULL); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('merge', -1717263376);\n; -- 0ms;
INSERT INTO vt50(vt50) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt50 VALUES (0.05235321300609308); -- 1ms;
INSERT INTO vt50(vt50, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt50(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'', '2LZ'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO rt1(c0, c1) VALUES (x'b4ae', NULL), ('MT', 367115998), (NULL, '0.05235321300609308'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt50(c0) VALUES (NULL), (NULL), (0.05235321300609308); -- 0ms;
PRAGMA temp.default_cache_size = -748319277; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0xffffffff99a4a3f0, '2039340106'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt50(vt50) VALUES('automerge=12'); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt50(vt50) VALUES('merge=127368801,4');\n; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES (x'4d0b', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT OR IGNORE INTO vt50 VALUES (0Xffffffffd3658dd3), (NULL), (0Xffffffffa4862c14); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt50 VALUES (''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL, 0.14871858271866656); -- 1ms;
REINDEX; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt50(vt50) VALUES('optimize'); -- 0ms;
INSERT INTO vt50(vt50) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=404490239,14');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt50(vt50) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((rt1.c2) NOTNULL) FROM vt0, vt50, rt1 LIMIT 1076607294; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 3ms;
INSERT INTO vt50(vt50, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt50(vt50) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt50(vt50) VALUES('merge=-1229095755,10');\n; -- 0ms;
INSERT INTO vt50(vt50) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1709626952); -- 1ms;
INSERT INTO vt50(vt50) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c0, c1) VALUES ('367115998', NULL, x''), ('757606261', '2E', x''), ('', 0X4cdea96d, 0x59df5d91); -- 0ms;
INSERT OR ABORT INTO vt50(c0) VALUES ('*LxN'); -- 1ms;
INSERT INTO vt50(vt50) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt50 VALUES (''); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('crisismerge', 1246190116); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DROP TABLE vt0; -- 7ms;
END; -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('merge', 309525);\n; -- 1ms;
INSERT INTO vt50(vt50, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt50(vt50) VALUES('integrity-check'); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('pgsz', '4824'); -- 0ms;
INSERT INTO vt50(vt50) VALUES('optimize'); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt50(vt50, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt50(vt50) VALUES('rebuild'); -- 11ms;
INSERT OR IGNORE INTO vt50 VALUES ('-19695689'), (x''), (0.14871858271866656); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt50(vt50) VALUES('rebuild'); -- 1ms;
UPDATE OR ROLLBACK vt50 SET c0='y^', c0='0.14871858271866656'; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT * FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END IN ((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END IN ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END IN ((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END IN ((+ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END IN ((+ (rt1.c2)))));
SELECT COUNT(*) FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) IS TRUE)) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) IS TRUE)) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) IS TRUE));
SELECT * FROM vt50 WHERE (((((vt50.c0)/(vt50.c0)))|((((vt50.c0))=((vt50.c0)))))) ORDER BY (((CAST(vt50.c0 AS REAL)))>=(((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))))))  NULLS FIRST, CASE (vt50.c0 IN ())  WHEN ((((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) THEN (NOT (vt50.c0)) ELSE ((vt50.c0)<(x'5275')) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)/(vt50.c0)))|((((vt50.c0))==((vt50.c0)))))) IS TRUE)  as count FROM vt50 ORDER BY (((CAST(vt50.c0 AS REAL)))>=(((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))))))  NULLS FIRST, CASE (vt50.c0 IN ())  WHEN ((((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) THEN (NOT (vt50.c0)) ELSE ((vt50.c0)<(x'5275')) END);
SELECT * FROM vt50 WHERE (((((vt50.c0)/(vt50.c0)))|((((vt50.c0))=((vt50.c0)))))) ORDER BY (((CAST(vt50.c0 AS REAL)))>=(((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))))))  NULLS FIRST, CASE (vt50.c0 IN ())  WHEN ((((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) THEN (NOT (vt50.c0)) ELSE ((vt50.c0)<(x'5275')) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)/(vt50.c0)))|((((vt50.c0))==((vt50.c0)))))) IS TRUE)  as count FROM vt50 ORDER BY (((CAST(vt50.c0 AS REAL)))>=(((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))))))  NULLS FIRST, CASE (vt50.c0 IN ())  WHEN ((((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) THEN (NOT (vt50.c0)) ELSE ((vt50.c0)<(x'5275')) END);
SELECT * FROM vt50 WHERE (((((vt50.c0)/(vt50.c0)))|((((vt50.c0))=((vt50.c0)))))) ORDER BY (((CAST(vt50.c0 AS REAL)))>=(((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))))))  NULLS FIRST, CASE (vt50.c0 IN ())  WHEN ((((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) THEN (NOT (vt50.c0)) ELSE ((vt50.c0)<(x'5275')) END;
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((((NULL)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c0)))) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((CAST(rt1.c1 AS INTEGER))IS NOT((((0x33e00901, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c1))))) ASC  NULLS LAST, ((((((((((((((vt50.c0)!=(rt1.c2)))AND(CAST(rt1.c1 AS REAL))))AND((rt1.c0 IN (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB))))AND(((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0))==((rt1.c0))))))AND(((rt1.c1)<(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c0)))) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((CAST(rt1.c1 AS INTEGER))IS NOT((((0X33e00901, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c1))))) ASC  NULLS LAST, ((((((((((((((vt50.c0)<>(rt1.c2)))AND(CAST(rt1.c1 AS REAL))))AND((rt1.c0 IN (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB))))AND(((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0))==((rt1.c0))))))AND(((rt1.c1)<(rt1.c2)))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((((NULL)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c0)))) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((CAST(rt1.c1 AS INTEGER))IS NOT((((0x33e00901, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c1))))) ASC  NULLS LAST, ((((((((((((((vt50.c0)!=(rt1.c2)))AND(CAST(rt1.c1 AS REAL))))AND((rt1.c0 IN (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB))))AND(((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0))==((rt1.c0))))))AND(((rt1.c1)<(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c0)))) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((CAST(rt1.c1 AS INTEGER))IS NOT((((0X33e00901, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c1))))) ASC  NULLS LAST, ((((((((((((((vt50.c0)<>(rt1.c2)))AND(CAST(rt1.c1 AS REAL))))AND((rt1.c0 IN (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB))))AND(((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0))==((rt1.c0))))))AND(((rt1.c1)<(rt1.c2)))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((((NULL)AND(rt1.c0)))OR(rt1.c2))) NOT BETWEEN ((((rt1.c1))<=((rt1.c0)))) AND (((x'') BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((CAST(rt1.c1 AS INTEGER))IS NOT((((0x33e00901, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c1))))) ASC  NULLS LAST, ((((((((((((((vt50.c0)!=(rt1.c2)))AND(CAST(rt1.c1 AS REAL))))AND((rt1.c0 IN (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB))))AND(((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))))AND((((rt1.c0))==((rt1.c0))))))AND(((rt1.c1)<(rt1.c2))));
SELECT ALL COUNT(*) FROM vt50 NOT INDEXED, rt1 WHERE (((((rt1.c1)/('ga'))) NOT BETWEEN ((((rt1.c0, rt1.c2, 0.33893336460207146))!=((rt1.c1, vt50.c0, rt1.c1)))) AND ((NOT (rt1.c0))))) ORDER BY rt1.c2 DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN '0.0' ELSE 0x7cef75fb END))<((CAST(rt1.c1 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/('ga'))) NOT BETWEEN ((((rt1.c0, rt1.c2, 0.33893336460207146))<>((rt1.c1, vt50.c0, rt1.c1)))) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY rt1.c2 DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN '0.0' ELSE 0x7cef75fb END))<((CAST(rt1.c1 AS REAL)))) ASC);
SELECT ALL COUNT(*) FROM vt50 NOT INDEXED, rt1 WHERE (((((rt1.c1)/('ga'))) NOT BETWEEN ((((rt1.c0, rt1.c2, 0.33893336460207146))!=((rt1.c1, vt50.c0, rt1.c1)))) AND ((NOT (rt1.c0))))) ORDER BY rt1.c2 DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN '0.0' ELSE 0x7cef75fb END))<((CAST(rt1.c1 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/('ga'))) NOT BETWEEN ((((rt1.c0, rt1.c2, 0.33893336460207146))<>((rt1.c1, vt50.c0, rt1.c1)))) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY rt1.c2 DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN '0.0' ELSE 0x7cef75fb END))<((CAST(rt1.c1 AS REAL)))) ASC);
SELECT ALL COUNT(*) FROM vt50 NOT INDEXED, rt1 WHERE (((((rt1.c1)/('ga'))) NOT BETWEEN ((((rt1.c0, rt1.c2, 0.33893336460207146))!=((rt1.c1, vt50.c0, rt1.c1)))) AND ((NOT (rt1.c0))))) ORDER BY rt1.c2 DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN '0.0' ELSE 0x7cef75fb END))<((CAST(rt1.c1 AS REAL)))) ASC;
SELECT ALL * FROM rt1, vt50 WHERE (((((rt1.c1 COLLATE BINARY)AND(((vt50.c0)>=(vt50.c0)))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt50.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE BINARY)AND(((vt50.c0)>=(vt50.c0)))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt50.c0 END))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((((rt1.c1 COLLATE BINARY)AND(((vt50.c0)>=(vt50.c0)))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt50.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE BINARY)AND(((vt50.c0)>=(vt50.c0)))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt50.c0 END))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((((rt1.c1 COLLATE BINARY)AND(((vt50.c0)>=(vt50.c0)))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt50.c0 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((rt1.c1)>=(rt1.c2))) BETWEEN ((+ (rt1.c1))) AND (((rt1.c2)*(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>=(rt1.c2))) BETWEEN ((+ (rt1.c1))) AND (((rt1.c2)*(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((rt1.c1)>=(rt1.c2))) BETWEEN ((+ (rt1.c1))) AND (((rt1.c2)*(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>=(rt1.c2))) BETWEEN ((+ (rt1.c1))) AND (((rt1.c2)*(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0) IS FALSE) COLLATE NOCASE) ORDER BY ((((rt1.c1)>=(rt1.c2))) BETWEEN ((+ (rt1.c1))) AND (((rt1.c2)*(rt1.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt50, rt1 WHERE (((((TRIM(vt50.c0))AND((- (rt1.c2)))))OR(IFNULL(rt1.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(vt50.c0))AND((- (rt1.c2)))))OR(IFNULL(rt1.c0, vt50.c0)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((TRIM(vt50.c0))AND((- (rt1.c2)))))OR(IFNULL(rt1.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(vt50.c0))AND((- (rt1.c2)))))OR(IFNULL(rt1.c0, vt50.c0)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((TRIM(vt50.c0))AND((- (rt1.c2)))))OR(IFNULL(rt1.c0, vt50.c0))));
SELECT * FROM rt1 WHERE ((((+ (rt1.c0))) ISNULL)) ORDER BY NULL DESC  NULLS FIRST, CAST((rt1.c1 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC  NULLS FIRST, CAST((rt1.c1 IN ()) AS NUMERIC));
SELECT * FROM rt1 WHERE ((((+ (rt1.c0))) ISNULL)) ORDER BY NULL DESC  NULLS FIRST, CAST((rt1.c1 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC  NULLS FIRST, CAST((rt1.c1 IN ()) AS NUMERIC));
SELECT * FROM rt1 WHERE ((((+ (rt1.c0))) ISNULL)) ORDER BY NULL DESC  NULLS FIRST, CAST((rt1.c1 IN ()) AS NUMERIC);
SELECT * FROM vt50 WHERE (CASE WHEN vt50.c0 COLLATE NOCASE THEN ((vt50.c0)IS(vt50.c0)) ELSE (vt50.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt50.c0 COLLATE NOCASE THEN ((vt50.c0)IS(vt50.c0)) ELSE (vt50.c0 IN ()) END) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CASE WHEN vt50.c0 COLLATE NOCASE THEN ((vt50.c0)IS(vt50.c0)) ELSE (vt50.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt50.c0 COLLATE NOCASE THEN ((vt50.c0)IS(vt50.c0)) ELSE (vt50.c0 IN ()) END) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CASE WHEN vt50.c0 COLLATE NOCASE THEN ((vt50.c0)IS(vt50.c0)) ELSE (vt50.c0 IN ()) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (rt1.c1 IN (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)), (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) DESC, (((GLOB(rt1.c1, rt1.c2), ((rt1.c2) NOT NULL), ((rt1.c0) IS TRUE)))>=((0Xffffffffc1d65386, rt1.c0 COLLATE NOCASE, JULIANDAY(rt1.c1, rt1.c1, rt1.c2)))), ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c1) AND (((x'') ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 IN (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)), (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) DESC, (((GLOB(rt1.c1, rt1.c2), ((rt1.c2) NOT NULL), ((rt1.c0) IS TRUE)))>=((0xffffffffc1d65386, rt1.c0 COLLATE NOCASE, JULIANDAY(rt1.c1, rt1.c1, rt1.c2)))), ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c1) AND (((x'') ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (rt1.c1 IN (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)), (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) DESC, (((GLOB(rt1.c1, rt1.c2), ((rt1.c2) NOT NULL), ((rt1.c0) IS TRUE)))>=((0Xffffffffc1d65386, rt1.c0 COLLATE NOCASE, JULIANDAY(rt1.c1, rt1.c1, rt1.c2)))), ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c1) AND (((x'') ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 IN (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)), (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) DESC, (((GLOB(rt1.c1, rt1.c2), ((rt1.c2) NOT NULL), ((rt1.c0) IS TRUE)))>=((0xffffffffc1d65386, rt1.c0 COLLATE NOCASE, JULIANDAY(rt1.c1, rt1.c1, rt1.c2)))), ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c1) AND (((x'') ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2) ORDER BY (rt1.c1 IN (((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)), (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) DESC, (((GLOB(rt1.c1, rt1.c2), ((rt1.c2) NOT NULL), ((rt1.c0) IS TRUE)))>=((0Xffffffffc1d65386, rt1.c0 COLLATE NOCASE, JULIANDAY(rt1.c1, rt1.c1, rt1.c2)))), ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c1) AND (((x'') ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) IS TRUE)) ORDER BY ((rt1.c2) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) IS TRUE)) ORDER BY ((rt1.c2) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE) IS TRUE)) ORDER BY ((rt1.c2) ISNULL) DESC  NULLS FIRST;
SELECT * FROM rt1, vt50 WHERE ((NULL IN (((vt50.c0)GLOB(rt1.c0))))) ORDER BY (((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 ELSE rt1.c2 END, LIKELIHOOD(DISTINCT rt1.c0, 0.3643861181412823), ((rt1.c1)LIKE(rt1.c2)), ((rt1.c2) NOT BETWEEN (-476156883) AND (vt50.c0)), (((0.05235321300609308)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c2))))) AND ((((rt1.c0)AND(-7.48319277E8)), ((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), '1392042166', DATETIME(0.009268602533060166, '309525', vt50.c0, vt50.c0, rt1.c0), ((rt1.c2) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((NULL IN (((vt50.c0)GLOB(rt1.c0))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 ELSE rt1.c2 END, LIKELIHOOD(DISTINCT rt1.c0, 0.3643861181412823), ((rt1.c1)LIKE(rt1.c2)), ((rt1.c2) NOT BETWEEN (-476156883) AND (vt50.c0)), (((0.05235321300609308)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c2))))) AND ((((rt1.c0)AND(-7.48319277E8)), ((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), '1392042166', DATETIME(0.009268602533060166, '309525', vt50.c0, vt50.c0, rt1.c0), ((rt1.c2) ISNULL)))) DESC);
SELECT * FROM rt1, vt50 WHERE ((NULL IN (((vt50.c0)GLOB(rt1.c0))))) ORDER BY (((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 ELSE rt1.c2 END, LIKELIHOOD(DISTINCT rt1.c0, 0.3643861181412823), ((rt1.c1)LIKE(rt1.c2)), ((rt1.c2) NOT BETWEEN (-476156883) AND (vt50.c0)), (((0.05235321300609308)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c2))))) AND ((((rt1.c0)AND(-7.48319277E8)), ((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), '1392042166', DATETIME(0.009268602533060166, '309525', vt50.c0, vt50.c0, rt1.c0), ((rt1.c2) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((NULL IN (((vt50.c0)GLOB(rt1.c0))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 ELSE rt1.c2 END, LIKELIHOOD(DISTINCT rt1.c0, 0.3643861181412823), ((rt1.c1)LIKE(rt1.c2)), ((rt1.c2) NOT BETWEEN (-476156883) AND (vt50.c0)), (((0.05235321300609308)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c2))))) AND ((((rt1.c0)AND(-7.48319277E8)), ((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), '1392042166', DATETIME(0.009268602533060166, '309525', vt50.c0, vt50.c0, rt1.c0), ((rt1.c2) ISNULL)))) DESC);
SELECT * FROM rt1, vt50 WHERE ((NULL IN (((vt50.c0)GLOB(rt1.c0))))) ORDER BY (((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((CASE x''  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 ELSE rt1.c2 END, LIKELIHOOD(DISTINCT rt1.c0, 0.3643861181412823), ((rt1.c1)LIKE(rt1.c2)), ((rt1.c2) NOT BETWEEN (-476156883) AND (vt50.c0)), (((0.05235321300609308)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c2))))) AND ((((rt1.c0)AND(-7.48319277E8)), ((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), '1392042166', DATETIME(0.009268602533060166, '309525', vt50.c0, vt50.c0, rt1.c0), ((rt1.c2) ISNULL)))) DESC;
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE BINARY) IS TRUE));
SELECT * FROM vt50 WHERE (NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), LIKELY(vt50.c0))) ORDER BY ((((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))) IS TRUE)  NULLS LAST, 'vp#'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), LIKELY(vt50.c0))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))) IS TRUE)  NULLS LAST, 'vp#'  NULLS LAST);
SELECT * FROM vt50 WHERE (NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), LIKELY(vt50.c0))) ORDER BY ((((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))) IS TRUE)  NULLS LAST, 'vp#'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), LIKELY(vt50.c0))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))) IS TRUE)  NULLS LAST, 'vp#'  NULLS LAST);
SELECT * FROM vt50 WHERE (NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), LIKELY(vt50.c0))) ORDER BY ((((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))) IS TRUE)  NULLS LAST, 'vp#'  NULLS LAST;
SELECT * FROM vt50 WHERE ((NOT (((vt50.c0)AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt50.c0)AND(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE ((NOT (((vt50.c0)AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt50.c0)AND(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE ((NOT (((vt50.c0)AND(vt50.c0)))));
SELECT * FROM rt1, vt50 WHERE (((rt1.c2)/((rt1.c0 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)/((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((rt1.c2)/((rt1.c0 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)/((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((rt1.c2)/((rt1.c0 IN (rt1.c1)))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1) IS TRUE))<=(((vt50.c0) NOTNULL)))) ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), ((((vt50.c0)AND(rt1.c0)))AND(rt1.c2)), CASE WHEN NULL THEN rt1.c0 END)) AND (((- (rt1.c2)), (((rt1.c1)) BETWEEN ((vt50.c0)) AND ((vt50.c0))), 0.2635203474802609))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS TRUE))<=(((vt50.c0) NOTNULL)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), ((((vt50.c0)AND(rt1.c0)))AND(rt1.c2)), CASE WHEN NULL THEN rt1.c0 END)) AND (((- (rt1.c2)), (((rt1.c1)) BETWEEN ((vt50.c0)) AND ((vt50.c0))), 0.2635203474802609))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1) IS TRUE))<=(((vt50.c0) NOTNULL)))) ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), ((((vt50.c0)AND(rt1.c0)))AND(rt1.c2)), CASE WHEN NULL THEN rt1.c0 END)) AND (((- (rt1.c2)), (((rt1.c1)) BETWEEN ((vt50.c0)) AND ((vt50.c0))), 0.2635203474802609))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS TRUE))<=(((vt50.c0) NOTNULL)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), ((((vt50.c0)AND(rt1.c0)))AND(rt1.c2)), CASE WHEN NULL THEN rt1.c0 END)) AND (((- (rt1.c2)), (((rt1.c1)) BETWEEN ((vt50.c0)) AND ((vt50.c0))), 0.2635203474802609))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1) IS TRUE))<=(((vt50.c0) NOTNULL)))) ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((((vt50.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)), ((((vt50.c0)AND(rt1.c0)))AND(rt1.c2)), CASE WHEN NULL THEN rt1.c0 END)) AND (((- (rt1.c2)), (((rt1.c1)) BETWEEN ((vt50.c0)) AND ((vt50.c0))), 0.2635203474802609))) DESC  NULLS LAST;
SELECT * FROM vt50, rt1 WHERE ((+ (0.48575860520371483))) ORDER BY (((rt1.c0 IN (rt1.c1)))<=((vt50.c0 IN ()))) DESC  NULLS FIRST, ((309525.0) BETWEEN (((rt1.c0)LIKE(rt1.c1))) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))), ((vt50.c0)LIKE((('')&(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((+ (0.48575860520371483))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0 IN (rt1.c1)))<=((vt50.c0 IN ()))) DESC  NULLS FIRST, ((309525.0) BETWEEN (((rt1.c0)LIKE(rt1.c1))) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))), ((vt50.c0)LIKE((('')&(rt1.c2)))));
SELECT * FROM vt50, rt1 WHERE ((+ (0.48575860520371483))) ORDER BY (((rt1.c0 IN (rt1.c1)))<=((vt50.c0 IN ()))) DESC  NULLS FIRST, ((309525.0) BETWEEN (((rt1.c0)LIKE(rt1.c1))) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))), ((vt50.c0)LIKE((('')&(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((+ (0.48575860520371483))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0 IN (rt1.c1)))<=((vt50.c0 IN ()))) DESC  NULLS FIRST, ((309525.0) BETWEEN (((rt1.c0)LIKE(rt1.c1))) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))), ((vt50.c0)LIKE((('')&(rt1.c2)))));
SELECT * FROM vt50, rt1 WHERE ((+ (0.48575860520371483))) ORDER BY (((rt1.c0 IN (rt1.c1)))<=((vt50.c0 IN ()))) DESC  NULLS FIRST, ((309525.0) BETWEEN (((rt1.c0)LIKE(rt1.c1))) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))), ((vt50.c0)LIKE((('')&(rt1.c2))));
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)) NOT BETWEEN ((((vt50.c0)%(vt50.c0)))) AND ((((0x509024bc)IS NOT(vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)) NOT BETWEEN ((((vt50.c0)%(vt50.c0)))) AND ((((0x509024bc)IS NOT(vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)) NOT BETWEEN ((((vt50.c0)%(vt50.c0)))) AND ((((0x509024bc)IS NOT(vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)) NOT BETWEEN ((((vt50.c0)%(vt50.c0)))) AND ((((0x509024bc)IS NOT(vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)) NOT BETWEEN ((((vt50.c0)%(vt50.c0)))) AND ((((0x509024bc)IS NOT(vt50.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0 IN ())) NOTNULL));
SELECT * FROM vt50 LEFT OUTER JOIN rt1 ON (('-572385324')>=(((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(NULL)))AND(vt50.c0)))) WHERE ((((vt50.c0)IS NOT(rt1.c1)) IN (0.2635203474802609)));
SELECT SUM(count) FROM (SELECT (((((vt50.c0)IS NOT(rt1.c1)) IN (0.2635203474802609))) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON (('-572385324')>=(((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(NULL)))AND(vt50.c0)))));
SELECT * FROM vt50 LEFT OUTER JOIN rt1 ON (('-572385324')>=(((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(NULL)))AND(vt50.c0)))) WHERE ((((vt50.c0)IS NOT(rt1.c1)) IN (0.2635203474802609)));
SELECT SUM(count) FROM (SELECT (((((vt50.c0)IS NOT(rt1.c1)) IN (0.2635203474802609))) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON (('-572385324')>=(((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(NULL)))AND(vt50.c0)))));
SELECT * FROM vt50 LEFT OUTER JOIN rt1 ON (('-572385324')>=(((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(NULL)))AND(vt50.c0)))) WHERE ((((vt50.c0)IS NOT(rt1.c1)) IN (0.2635203474802609)));
SELECT * FROM rt1, vt50 WHERE ((((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (0.2910430640291799) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.2910430640291799) IS TRUE)  as count FROM rt1 ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (0.2910430640291799) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.2910430640291799) IS TRUE)  as count FROM rt1 ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (0.2910430640291799) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c1)))) AND ((rt1.c2 COLLATE NOCASE)))) ORDER BY (- ((~ (rt1.c1)))), (- ((rt1.c0 IN ()))) ASC, CASE WHEN rt1.c2 THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (((rt1.c0))>=((rt1.c1))) WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE SQLITE_COMPILEOPTION_GET(rt1.c1) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c1)))) AND ((rt1.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY (- ((~ (rt1.c1)))), (- ((rt1.c0 IN ()))) ASC, CASE WHEN rt1.c2 THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (((rt1.c0))>=((rt1.c1))) WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE SQLITE_COMPILEOPTION_GET(rt1.c1) END DESC);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c1)))) AND ((rt1.c2 COLLATE NOCASE)))) ORDER BY (- ((~ (rt1.c1)))), (- ((rt1.c0 IN ()))) ASC, CASE WHEN rt1.c2 THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (((rt1.c0))>=((rt1.c1))) WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE SQLITE_COMPILEOPTION_GET(rt1.c1) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c1)))) AND ((rt1.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY (- ((~ (rt1.c1)))), (- ((rt1.c0 IN ()))) ASC, CASE WHEN rt1.c2 THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (((rt1.c0))>=((rt1.c1))) WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE SQLITE_COMPILEOPTION_GET(rt1.c1) END DESC);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c1)))) AND ((rt1.c2 COLLATE NOCASE)))) ORDER BY (- ((~ (rt1.c1)))), (- ((rt1.c0 IN ()))) ASC, CASE WHEN rt1.c2 THEN rt1.c1 COLLATE NOCASE WHEN NULL THEN (((rt1.c0))>=((rt1.c1))) WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE SQLITE_COMPILEOPTION_GET(rt1.c1) END DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)<<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)<<(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)<<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)<<(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)<<(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE (CASE WHEN (+ (rt1.c1)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c1)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (+ (rt1.c1)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c1)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (+ (rt1.c1)) THEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)<<(rt1.c1)))LIKE(((rt1.c1)-(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c1)))LIKE(((rt1.c1)-(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)<<(rt1.c1)))LIKE(((rt1.c1)-(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c1)))LIKE(((rt1.c1)-(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)<<(rt1.c1)))LIKE(((rt1.c1)-(rt1.c0)))));
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS REAL))OR(vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL))OR(vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS REAL))OR(vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL))OR(vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS REAL))OR(vt50.c0 COLLATE BINARY)));
SELECT ALL * FROM rt1, vt50 WHERE ((((rt1.c2, rt1.c2, vt50.c0))<=((rt1.c1, rt1.c1, rt1.c1))) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, vt50.c0))<=((rt1.c1, rt1.c1, rt1.c1))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE ((((rt1.c2, rt1.c2, vt50.c0))<=((rt1.c1, rt1.c1, rt1.c1))) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, vt50.c0))<=((rt1.c1, rt1.c1, rt1.c1))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE ((((rt1.c2, rt1.c2, vt50.c0))<=((rt1.c1, rt1.c1, rt1.c1))) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM vt50 WHERE (((SQLITE_COMPILEOPTION_USED(vt50.c0))AND(-1639545527))) ORDER BY vt50.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt50.c0))AND(-1639545527))) IS TRUE)  as count FROM vt50 NOT INDEXED ORDER BY vt50.c0  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (((SQLITE_COMPILEOPTION_USED(vt50.c0))AND(-1639545527))) ORDER BY vt50.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt50.c0))AND(-1639545527))) IS TRUE)  as count FROM vt50 NOT INDEXED ORDER BY vt50.c0  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (((SQLITE_COMPILEOPTION_USED(vt50.c0))AND(-1639545527))) ORDER BY vt50.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-784113748')IS(((rt1.c2) ISNULL)))) ORDER BY ((rt1.c0)==(((rt1.c0)IS NOT(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-784113748')IS(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)==(((rt1.c0)IS NOT(rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-784113748')IS(((rt1.c2) ISNULL)))) ORDER BY ((rt1.c0)==(((rt1.c0)IS NOT(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-784113748')IS(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)==(((rt1.c0)IS NOT(rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-784113748')IS(((rt1.c2) ISNULL)))) ORDER BY ((rt1.c0)==(((rt1.c0)IS NOT(rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1, vt50 WHERE ((((rt1.c1 COLLATE BINARY))<=((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY ((rt1.c2)>=((((vt50.c0))<=((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 COLLATE BINARY))<=((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((rt1.c2)>=((((vt50.c0))<=((rt1.c1))))));
SELECT ALL * FROM rt1, vt50 WHERE ((((rt1.c1 COLLATE BINARY))<=((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY ((rt1.c2)>=((((vt50.c0))<=((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 COLLATE BINARY))<=((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((rt1.c2)>=((((vt50.c0))<=((rt1.c1))))));
SELECT ALL * FROM rt1, vt50 WHERE ((((rt1.c1 COLLATE BINARY))<=((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))) ORDER BY ((rt1.c2)>=((((vt50.c0))<=((rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)>(0.2708034811596225))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)>(0.2708034811596225))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)>(0.2708034811596225))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM)>(0.2708034811596225))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)>(0.2708034811596225))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT * FROM vt50, rt1 WHERE (((vt50.c0)>(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0)>(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((vt50.c0)>(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0)>(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((vt50.c0)>(rt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) IS FALSE)) ORDER BY (((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) IS FALSE)) ORDER BY (((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) IS FALSE)) ORDER BY (((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))==(((rt1.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))=(((rt1.c0)IS(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))==(((rt1.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2)))=(((rt1.c0)IS(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2)))==(((rt1.c0)IS(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((((x'9341') NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) ORDER BY CAST(CAST(x'' AS INTEGER) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'9341') NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(x'' AS INTEGER) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((x'9341') NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) ORDER BY CAST(CAST(x'' AS INTEGER) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'9341') NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(x'' AS INTEGER) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((x'9341') NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) ORDER BY CAST(CAST(x'' AS INTEGER) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c2))==((rt1.c0)))))) ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) ISNULL)) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2))=((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) ISNULL)) AND (rt1.c0)));
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c2))==((rt1.c0)))))) ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) ISNULL)) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2))=((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) ISNULL)) AND (rt1.c0)));
SELECT ALL * FROM rt1 WHERE ((- ((((rt1.c2))==((rt1.c0)))))) ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) ISNULL)) AND (rt1.c0));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt50 ON rt1.c0 WHERE (vt50.c0) ORDER BY ((rt1.c2)>>(rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON rt1.c0 ORDER BY ((rt1.c2)>>(rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt50 ON rt1.c0 WHERE (vt50.c0) ORDER BY ((rt1.c2)>>(rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON rt1.c0 ORDER BY ((rt1.c2)>>(rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt50 ON rt1.c0 WHERE (vt50.c0) ORDER BY ((rt1.c2)>>(rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (0.2256884587854444);
SELECT SUM(count) FROM (SELECT ((0.2256884587854444) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.2256884587854444);
SELECT SUM(count) FROM (SELECT ((0.2256884587854444) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.2256884587854444);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY DESC;
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((~ (rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((~ (rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((~ (rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((~ (rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((~ (rt1.c1)) IN ()) DESC;
SELECT * FROM vt50 RIGHT OUTER JOIN rt1 ON ((CAST('y?.uZ' AS TEXT)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0)>=(rt1.c1)))) WHERE ((((((rt1.c2)) BETWEEN ((vt50.c0)) AND ((rt1.c2)))) BETWEEN (((vt50.c0) NOTNULL)) AND (GLOB(rt1.c0, rt1.c1)))) ORDER BY (CAST(rt1.c1 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) BETWEEN ((vt50.c0)) AND ((rt1.c2)))) BETWEEN (((vt50.c0) NOTNULL)) AND (GLOB(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON ((CAST('y?.uZ' AS TEXT)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0)>=(rt1.c1)))) ORDER BY (CAST(rt1.c1 AS REAL) IN ()));
SELECT * FROM vt50 RIGHT OUTER JOIN rt1 ON ((CAST('y?.uZ' AS TEXT)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0)>=(rt1.c1)))) WHERE ((((((rt1.c2)) BETWEEN ((vt50.c0)) AND ((rt1.c2)))) BETWEEN (((vt50.c0) NOTNULL)) AND (GLOB(rt1.c0, rt1.c1)))) ORDER BY (CAST(rt1.c1 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) BETWEEN ((vt50.c0)) AND ((rt1.c2)))) BETWEEN (((vt50.c0) NOTNULL)) AND (GLOB(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON ((CAST('y?.uZ' AS TEXT)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0)>=(rt1.c1)))) ORDER BY (CAST(rt1.c1 AS REAL) IN ()));
SELECT * FROM vt50 RIGHT OUTER JOIN rt1 ON ((CAST('y?.uZ' AS TEXT)) BETWEEN (rt1.c1 COLLATE BINARY) AND (((rt1.c0)>=(rt1.c1)))) WHERE ((((((rt1.c2)) BETWEEN ((vt50.c0)) AND ((rt1.c2)))) BETWEEN (((vt50.c0) NOTNULL)) AND (GLOB(rt1.c0, rt1.c1)))) ORDER BY (CAST(rt1.c1 AS REAL) IN ());
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((((((((NOT (rt1.c2)))AND(((((((((((((vt50.c0)OR(rt1.c1)))AND('')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))))OR(((vt50.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))))AND(((((((((((((vt50.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(vt50.c0)))AND(vt50.c0)))AND(rt1.c0)))))OR((rt1.c1 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt1.c2)))AND(((((((((((((vt50.c0)OR(rt1.c1)))AND('')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))))OR(((vt50.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))))AND(((((((((((((vt50.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(vt50.c0)))AND(vt50.c0)))AND(rt1.c0)))))OR((rt1.c1 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((((((((NOT (rt1.c2)))AND(((((((((((((vt50.c0)OR(rt1.c1)))AND('')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))))OR(((vt50.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))))AND(((((((((((((vt50.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(vt50.c0)))AND(vt50.c0)))AND(rt1.c0)))))OR((rt1.c1 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt1.c2)))AND(((((((((((((vt50.c0)OR(rt1.c1)))AND('')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))))OR(((vt50.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))))AND(((((((((((((vt50.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(vt50.c0)))AND(vt50.c0)))AND(rt1.c0)))))OR((rt1.c1 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((((((((NOT (rt1.c2)))AND(((((((((((((vt50.c0)OR(rt1.c1)))AND('')))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))))OR(((vt50.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))))AND(((((((((((((vt50.c0)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)))AND(vt50.c0)))AND(vt50.c0)))AND(rt1.c0)))))OR((rt1.c1 IN (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((('iK', rt1.c2, ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))))=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE -1196218086  WHEN '' THEN rt1.c1 END, CAST(rt1.c1 AS TEXT))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL) DESC  NULLS FIRST, json_array_length(rt1.c0, '%*') ASC, (NOT (rt1.c2)) DESC  NULLS LAST, (((rt1.c0 IN (rt1.c0, rt1.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('iK', rt1.c2, ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))))=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE -1196218086  WHEN '' THEN rt1.c1 END, CAST(rt1.c1 AS TEXT))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL) DESC  NULLS FIRST, json_array_length(rt1.c0, '%*') ASC, (NOT (rt1.c2)) DESC  NULLS LAST, (((rt1.c0 IN (rt1.c0, rt1.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((('iK', rt1.c2, ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))))=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE -1196218086  WHEN '' THEN rt1.c1 END, CAST(rt1.c1 AS TEXT))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL) DESC  NULLS FIRST, json_array_length(rt1.c0, '%*') ASC, (NOT (rt1.c2)) DESC  NULLS LAST, (((rt1.c0 IN (rt1.c0, rt1.c2))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('iK', rt1.c2, ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))))=(((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), CASE -1196218086  WHEN '' THEN rt1.c1 END, CAST(rt1.c1 AS TEXT))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) NOT NULL) DESC  NULLS FIRST, json_array_length(rt1.c0, '%*') ASC, (NOT (rt1.c2)) DESC  NULLS LAST, (((rt1.c0 IN (rt1.c0, rt1.c2))) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM vt50 WHERE (((((0.8363282590300684)AND(((vt50.c0) IS TRUE))))OR(CAST(vt50.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((0.8363282590300684)AND(((vt50.c0) IS TRUE))))OR(CAST(vt50.c0 AS BLOB)))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (((((0.8363282590300684)AND(((vt50.c0) IS TRUE))))OR(CAST(vt50.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((0.8363282590300684)AND(((vt50.c0) IS TRUE))))OR(CAST(vt50.c0 AS BLOB)))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (((((0.8363282590300684)AND(((vt50.c0) IS TRUE))))OR(CAST(vt50.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (IFNULL(DISTINCT ((vt50.c0) IS FALSE), (vt50.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt50.c0) IS FALSE), (vt50.c0 IN ()))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (IFNULL(DISTINCT ((vt50.c0) IS FALSE), (vt50.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt50.c0) IS FALSE), (vt50.c0 IN ()))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (IFNULL(DISTINCT ((vt50.c0) IS FALSE), (vt50.c0 IN ())));
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))%(((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT))%(((((rt1.c2)OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))%(((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT))%(((((rt1.c2)OR(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT))%(((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))));
SELECT ALL * FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (rt1.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) ISNULL)) IS FALSE)) ORDER BY ((((CAST(0.7220876642452225 AS REAL))AND(rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(0.7220876642452225 AS REAL))AND(rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) ISNULL)) IS FALSE)) ORDER BY ((((CAST(0.7220876642452225 AS REAL))AND(rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(0.7220876642452225 AS REAL))AND(rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) ISNULL)) IS FALSE)) ORDER BY ((((CAST(0.7220876642452225 AS REAL))AND(rt1.c0)))AND(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c2))<>((x'', rt1.c0, x''))))) AND (((rt1.c0 IN ()))))) ORDER BY (((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c2))<>((x'', rt1.c0, x''))))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c2))<>((x'', rt1.c0, x''))))) AND (((rt1.c0 IN ()))))) ORDER BY (((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c2))<>((x'', rt1.c0, x''))))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((((rt1.c2, rt1.c1, rt1.c2))<>((x'', rt1.c0, x''))))) AND (((rt1.c0 IN ()))))) ORDER BY (((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)) IN ());
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((((((((NULL IN (rt1.c1)))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR((rt1.c0 IN ()))))OR((((vt50.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((vt50.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN (rt1.c1)))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR((rt1.c0 IN ()))))OR((((vt50.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((vt50.c0) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((((((((NULL IN (rt1.c1)))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR((rt1.c0 IN ()))))OR((((vt50.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((vt50.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN (rt1.c1)))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR((rt1.c0 IN ()))))OR((((vt50.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((vt50.c0) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((((((((NULL IN (rt1.c1)))OR(((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))))OR((rt1.c0 IN ()))))OR((((vt50.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(((vt50.c0) NOT NULL))));
SELECT ALL * FROM vt50, rt1 WHERE ((((('ga')=(rt1.c2))) IS FALSE)) ORDER BY (((- ('4}\n)1	'))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('ga')=(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((- ('4}\n)1	'))) IS FALSE) ASC);
SELECT ALL * FROM vt50, rt1 WHERE ((((('ga')=(rt1.c2))) IS FALSE)) ORDER BY (((- ('4}\n)1	'))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('ga')=(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((- ('4}\n)1	'))) IS FALSE) ASC);
SELECT ALL * FROM vt50, rt1 WHERE ((((('ga')=(rt1.c2))) IS FALSE)) ORDER BY (((- ('4}\n)1	'))) IS FALSE) ASC;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c1)*(rt1.c2))) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)*(rt1.c2))) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c1) NOTNULL))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c1)*(rt1.c2))) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)*(rt1.c2))) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c1) NOTNULL))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c1)*(rt1.c2))) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((rt1.c1) NOTNULL)));
SELECT ALL * FROM rt1 WHERE (((((NULL) ISNULL))>=(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))>=(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((NULL) ISNULL))>=(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((NULL) ISNULL))>=(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((NULL) ISNULL))>=(rt1.c1)));
SELECT ALL * FROM vt50 WHERE (((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)!=(((vt50.c0) IS TRUE)))) ORDER BY ((((((vt50.c0)AND('⼏k~e')))AND(((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))))OR(vt50.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)!=(((vt50.c0) IS TRUE)))) IS TRUE)  as count FROM vt50 ORDER BY ((((((vt50.c0)AND('⼏k~e')))AND(((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))))OR(vt50.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt50 WHERE (((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)!=(((vt50.c0) IS TRUE)))) ORDER BY ((((((vt50.c0)AND('⼏k~e')))AND(((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))))OR(vt50.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)!=(((vt50.c0) IS TRUE)))) IS TRUE)  as count FROM vt50 ORDER BY ((((((vt50.c0)AND('⼏k~e')))AND(((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))))OR(vt50.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt50 WHERE (((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)!=(((vt50.c0) IS TRUE)))) ORDER BY ((((((vt50.c0)AND('⼏k~e')))AND(((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))))OR(vt50.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt50 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON 'fN~A먨嶑' WHERE (((CAST(rt1.c2 AS REAL)) NOT BETWEEN ((('|O繡p')!=(rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL) DESC  NULLS FIRST, ((rt1.c1 COLLATE RTRIM) BETWEEN ((((rt1.c2))>=((vt50.c0)))) AND (((rt1.c2)||(vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL)) NOT BETWEEN ((('|O繡p')<>(rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON 'fN~A먨嶑' ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL) DESC  NULLS FIRST, ((rt1.c1 COLLATE RTRIM) BETWEEN ((((rt1.c2))>=((vt50.c0)))) AND (((rt1.c2)||(vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON 'fN~A먨嶑' WHERE (((CAST(rt1.c2 AS REAL)) NOT BETWEEN ((('|O繡p')!=(rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL) DESC  NULLS FIRST, ((rt1.c1 COLLATE RTRIM) BETWEEN ((((rt1.c2))>=((vt50.c0)))) AND (((rt1.c2)||(vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL)) NOT BETWEEN ((('|O繡p')<>(rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON 'fN~A먨嶑' ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL) DESC  NULLS FIRST, ((rt1.c1 COLLATE RTRIM) BETWEEN ((((rt1.c2))>=((vt50.c0)))) AND (((rt1.c2)||(vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON 'fN~A먨嶑' WHERE (((CAST(rt1.c2 AS REAL)) NOT BETWEEN ((('|O繡p')!=(rt1.c0))) AND (CAST(rt1.c0 AS NUMERIC)))) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c2 END) NOTNULL) DESC  NULLS FIRST, ((rt1.c1 COLLATE RTRIM) BETWEEN ((((rt1.c2))>=((vt50.c0)))) AND (((rt1.c2)||(vt50.c0))));
SELECT ALL * FROM vt50 WHERE (HEX((0.6253853490778875 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((0.6253853490778875 IN ()))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (HEX((0.6253853490778875 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((0.6253853490778875 IN ()))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (HEX((0.6253853490778875 IN ())));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1)OR(rt1.c1)))) AND ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(vt50.c0)))AND(rt1.c1))))) WHERE (((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(NULL)))||(CAST(rt1.c0 AS REAL)))) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(NULL)))||(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1)OR(rt1.c1)))) AND ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(vt50.c0)))AND(rt1.c1))))) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1)OR(rt1.c1)))) AND ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(vt50.c0)))AND(rt1.c1))))) WHERE (((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(NULL)))||(CAST(rt1.c0 AS REAL)))) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(NULL)))||(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1)OR(rt1.c1)))) AND ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(vt50.c0)))AND(rt1.c1))))) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON (((rt1.c1)) NOT BETWEEN ((((rt1.c1)OR(rt1.c1)))) AND ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(vt50.c0)))AND(rt1.c1))))) WHERE (((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))OR(NULL)))||(CAST(rt1.c0 AS REAL)))) ORDER BY (- (rt1.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)) COLLATE BINARY;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) ISNULL))AND((((rt1.c1))==((rt1.c0))))))OR((((rt1.c1))<((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) ISNULL))AND((((rt1.c1))=((rt1.c0))))))OR((((rt1.c1))<((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) ISNULL))AND((((rt1.c1))==((rt1.c0))))))OR((((rt1.c1))<((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) ISNULL))AND((((rt1.c1))=((rt1.c0))))))OR((((rt1.c1))<((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) ISNULL))AND((((rt1.c1))==((rt1.c0))))))OR((((rt1.c1))<((rt1.c1))))));
SELECT * FROM rt1 WHERE (NULLIF(rt1.c1, rt1.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt1.c1, rt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULLIF(rt1.c1, rt1.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt1.c1, rt1.c1) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULLIF(rt1.c1, rt1.c1) COLLATE NOCASE);
SELECT ALL * FROM rt1 INNER JOIN vt50 ON CAST(0xffffffffef0051b6 AS NUMERIC) WHERE ((((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c0))))>(((rt1.c1)+(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c0))))>(((rt1.c1)+(vt50.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON CAST(0xffffffffef0051b6 AS NUMERIC));
SELECT ALL * FROM rt1 INNER JOIN vt50 ON CAST(0xffffffffef0051b6 AS NUMERIC) WHERE ((((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c0))))>(((rt1.c1)+(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c0))))>(((rt1.c1)+(vt50.c0))))) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON CAST(0xffffffffef0051b6 AS NUMERIC));
SELECT ALL * FROM rt1 INNER JOIN vt50 ON CAST(0xffffffffef0051b6 AS NUMERIC) WHERE ((((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c0))))>(((rt1.c1)+(vt50.c0)))));
SELECT * FROM rt1, vt50 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((((4.04490239E8) BETWEEN (vt50.c0) AND (''))))=(((((vt50.c0, x'', vt50.c0)) NOT BETWEEN ((vt50.c0, vt50.c0, '瞷#vW')) AND ((vt50.c0, vt50.c0, vt50.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((4.04490239E8) BETWEEN (vt50.c0) AND (''))))=(((((vt50.c0, x'', vt50.c0)) NOT BETWEEN ((vt50.c0, vt50.c0, '瞷#vW')) AND ((vt50.c0, vt50.c0, vt50.c0))))))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((((4.04490239E8) BETWEEN (vt50.c0) AND (''))))=(((((vt50.c0, x'', vt50.c0)) NOT BETWEEN ((vt50.c0, vt50.c0, '瞷#vW')) AND ((vt50.c0, vt50.c0, vt50.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((4.04490239E8) BETWEEN (vt50.c0) AND (''))))=(((((vt50.c0, x'', vt50.c0)) NOT BETWEEN ((vt50.c0, vt50.c0, '瞷#vW')) AND ((vt50.c0, vt50.c0, vt50.c0))))))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((((4.04490239E8) BETWEEN (vt50.c0) AND (''))))=(((((vt50.c0, x'', vt50.c0)) NOT BETWEEN ((vt50.c0, vt50.c0, '瞷#vW')) AND ((vt50.c0, vt50.c0, vt50.c0)))))));
SELECT ALL * FROM vt50 WHERE (-1.042918522E9);
SELECT SUM(count) FROM (SELECT ((-1.042918522E9) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (-1.042918522E9);
SELECT SUM(count) FROM (SELECT ((-1.042918522E9) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (-1.042918522E9);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0) NOT NULL) IN (CAST(vt50.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0) NOT NULL) IN (CAST(vt50.c0 AS REAL)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0) NOT NULL) IN (CAST(vt50.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0) NOT NULL) IN (CAST(vt50.c0 AS REAL)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0) NOT NULL) IN (CAST(vt50.c0 AS REAL))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1)OR((- (vt50.c0)))))OR(((rt1.c1) NOT NULL)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR((- (vt50.c0)))))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1)OR((- (vt50.c0)))))OR(((rt1.c1) NOT NULL)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR((- (vt50.c0)))))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1)OR((- (vt50.c0)))))OR(((rt1.c1) NOT NULL)))) ORDER BY NULL DESC;
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON ((vt50.c0 COLLATE RTRIM)GLOB(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)) IN (CASE vt50.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)) IN (CASE vt50.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON ((vt50.c0 COLLATE RTRIM)GLOB(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON ((vt50.c0 COLLATE RTRIM)GLOB(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)) IN (CASE vt50.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)) IN (CASE vt50.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON ((vt50.c0 COLLATE RTRIM)GLOB(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON ((vt50.c0 COLLATE RTRIM)GLOB(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)) IN (CASE vt50.c0  WHEN rt1.c0 THEN NULL ELSE rt1.c0 END)));
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE (vt50.c0 IN (vt50.c0))  WHEN CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END THEN (vt50.c0 IN ()) ELSE ((((((((((((vt50.c0)OR(vt50.c0)))AND(0.6253853490778875)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt50.c0 IN (vt50.c0))  WHEN CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END THEN (vt50.c0 IN ()) ELSE ((((((((((((vt50.c0)OR(vt50.c0)))AND(0.6253853490778875)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE (vt50.c0 IN (vt50.c0))  WHEN CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END THEN (vt50.c0 IN ()) ELSE ((((((((((((vt50.c0)OR(vt50.c0)))AND(0.6253853490778875)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt50.c0 IN (vt50.c0))  WHEN CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END THEN (vt50.c0 IN ()) ELSE ((((((((((((vt50.c0)OR(vt50.c0)))AND(0.6253853490778875)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE (vt50.c0 IN (vt50.c0))  WHEN CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END THEN (vt50.c0 IN ()) ELSE ((((((((((((vt50.c0)OR(vt50.c0)))AND(0.6253853490778875)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)) END);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((rt1.c0) ISNULL)))=((rt1.c1 COLLATE RTRIM)))) ORDER BY ((((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c0 ELSE rt1.c1 END)AND((rt1.c1 IN ()))))AND(((rt1.c1) NOTNULL))), CAST(((vt50.c0) ISNULL) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) ISNULL)))=((rt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c0 ELSE rt1.c1 END)AND((rt1.c1 IN ()))))AND(((rt1.c1) NOTNULL))), CAST(((vt50.c0) ISNULL) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((rt1.c0) ISNULL)))=((rt1.c1 COLLATE RTRIM)))) ORDER BY ((((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c0 ELSE rt1.c1 END)AND((rt1.c1 IN ()))))AND(((rt1.c1) NOTNULL))), CAST(((vt50.c0) ISNULL) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0) ISNULL)))=((rt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c0 ELSE rt1.c1 END)AND((rt1.c1 IN ()))))AND(((rt1.c1) NOTNULL))), CAST(((vt50.c0) ISNULL) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt50, rt1 WHERE ((((rt1.c0))>=((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)))) ORDER BY (((rt1.c1) NOT NULL) IN ()) DESC  NULLS LAST, ((((((((((vt50.c0)AND(rt1.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))<(((rt1.c2) BETWEEN (rt1.c2) AND (NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0))>=((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c1) NOT NULL) IN ()) DESC  NULLS LAST, ((((((((((vt50.c0)AND(rt1.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))<(((rt1.c2) BETWEEN (rt1.c2) AND (NULL)))));
SELECT * FROM vt50, rt1 WHERE ((((rt1.c0))>=((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)))) ORDER BY (((rt1.c1) NOT NULL) IN ()) DESC  NULLS LAST, ((((((((((vt50.c0)AND(rt1.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))<(((rt1.c2) BETWEEN (rt1.c2) AND (NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0))>=((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c1) NOT NULL) IN ()) DESC  NULLS LAST, ((((((((((vt50.c0)AND(rt1.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))<(((rt1.c2) BETWEEN (rt1.c2) AND (NULL)))));
SELECT * FROM vt50, rt1 WHERE ((((rt1.c0))>=((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)))) ORDER BY (((rt1.c1) NOT NULL) IN ()) DESC  NULLS LAST, ((((((((((vt50.c0)AND(rt1.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))<(((rt1.c2) BETWEEN (rt1.c2) AND (NULL))));
SELECT * FROM rt1 WHERE (((((rt1.c0) IS TRUE))LIKE(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE))LIKE(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0) IS TRUE))LIKE(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS TRUE))LIKE(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0) IS TRUE))LIKE(rt1.c2 COLLATE RTRIM)));
SELECT * FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN ())) ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN ())) ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((rt1.c0 COLLATE RTRIM IN ())) ORDER BY ((NULL) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (rt1.c2) ORDER BY ((CASE WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON rt1.c1 ORDER BY ((CASE WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (rt1.c2) ORDER BY ((CASE WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON rt1.c1 ORDER BY ((CASE WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON rt1.c1 WHERE (rt1.c2) ORDER BY ((CASE WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT * FROM vt50 WHERE (0.3982321406503678);
SELECT SUM(count) FROM (SELECT ALL ((0.3982321406503678) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (0.3982321406503678);
SELECT SUM(count) FROM (SELECT ALL ((0.3982321406503678) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (0.3982321406503678);
SELECT * FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)) BETWEEN (((rt1.c2 IN (rt1.c0, rt1.c0)))) AND ((((rt1.c0)IS NOT(rt1.c1))))) WHERE ((((rt1.c0)<(vt50.c0)) IN ())) ORDER BY ((vt50.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(vt50.c0)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)) BETWEEN (((rt1.c2 IN (rt1.c0, rt1.c0)))) AND ((((rt1.c0)IS NOT(rt1.c1))))) ORDER BY ((vt50.c0) IS TRUE));
SELECT * FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)) BETWEEN (((rt1.c2 IN (rt1.c0, rt1.c0)))) AND ((((rt1.c0)IS NOT(rt1.c1))))) WHERE ((((rt1.c0)<(vt50.c0)) IN ())) ORDER BY ((vt50.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(vt50.c0)) IN ())) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)) BETWEEN (((rt1.c2 IN (rt1.c0, rt1.c0)))) AND ((((rt1.c0)IS NOT(rt1.c1))))) ORDER BY ((vt50.c0) IS TRUE));
SELECT * FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)) BETWEEN (((rt1.c2 IN (rt1.c0, rt1.c0)))) AND ((((rt1.c0)IS NOT(rt1.c1))))) WHERE ((((rt1.c0)<(vt50.c0)) IN ())) ORDER BY ((vt50.c0) IS TRUE);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((('2096068091' COLLATE NOCASE)==((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((('2096068091' COLLATE NOCASE)==((rt1.c0 IN ())))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((('2096068091' COLLATE NOCASE)==((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((('2096068091' COLLATE NOCASE)==((rt1.c0 IN ())))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((('2096068091' COLLATE NOCASE)==((rt1.c0 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt1, vt50 WHERE (CASE ((rt1.c0)IS(rt1.c2))  WHEN rt1.c0 COLLATE BINARY THEN ((((rt1.c0)AND(rt1.c0)))OR(vt50.c0)) ELSE IFNULL(DISTINCT vt50.c0, rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)IS(rt1.c2))  WHEN rt1.c0 COLLATE BINARY THEN ((((rt1.c0)AND(rt1.c0)))OR(vt50.c0)) ELSE IFNULL(DISTINCT vt50.c0, rt1.c1) END) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (CASE ((rt1.c0)IS(rt1.c2))  WHEN rt1.c0 COLLATE BINARY THEN ((((rt1.c0)AND(rt1.c0)))OR(vt50.c0)) ELSE IFNULL(DISTINCT vt50.c0, rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)IS(rt1.c2))  WHEN rt1.c0 COLLATE BINARY THEN ((((rt1.c0)AND(rt1.c0)))OR(vt50.c0)) ELSE IFNULL(DISTINCT vt50.c0, rt1.c1) END) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (CASE ((rt1.c0)IS(rt1.c2))  WHEN rt1.c0 COLLATE BINARY THEN ((((rt1.c0)AND(rt1.c0)))OR(vt50.c0)) ELSE IFNULL(DISTINCT vt50.c0, rt1.c1) END);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)OR(CAST(vt50.c0 AS BLOB))))AND(TRIM(DISTINCT vt50.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)OR(CAST(vt50.c0 AS BLOB))))AND(TRIM(DISTINCT vt50.c0, vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)OR(CAST(vt50.c0 AS BLOB))))AND(TRIM(DISTINCT vt50.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)OR(CAST(vt50.c0 AS BLOB))))AND(TRIM(DISTINCT vt50.c0, vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)OR(CAST(vt50.c0 AS BLOB))))AND(TRIM(DISTINCT vt50.c0, vt50.c0))));
SELECT ALL * FROM vt50, rt1 WHERE (rt1.c0 COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (rt1.c0 COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (rt1.c0 COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt50, rt1 WHERE ((NOT (rt1.c1 COLLATE RTRIM))) ORDER BY (((((vt50.c0, rt1.c0, rt1.c2))>=((vt50.c0, rt1.c0, rt1.c2))))>(UPPER(rt1.c0))) DESC  NULLS FIRST, (((rt1.c1)>>(x'')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((vt50.c0, rt1.c0, rt1.c2))>=((vt50.c0, rt1.c0, rt1.c2))))>(UPPER(rt1.c0))) DESC  NULLS FIRST, (((rt1.c1)>>(x'')) IN ()));
SELECT ALL * FROM vt50, rt1 WHERE ((NOT (rt1.c1 COLLATE RTRIM))) ORDER BY (((((vt50.c0, rt1.c0, rt1.c2))>=((vt50.c0, rt1.c0, rt1.c2))))>(UPPER(rt1.c0))) DESC  NULLS FIRST, (((rt1.c1)>>(x'')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((vt50.c0, rt1.c0, rt1.c2))>=((vt50.c0, rt1.c0, rt1.c2))))>(UPPER(rt1.c0))) DESC  NULLS FIRST, (((rt1.c1)>>(x'')) IN ()));
SELECT ALL * FROM vt50, rt1 WHERE ((NOT (rt1.c1 COLLATE RTRIM))) ORDER BY (((((vt50.c0, rt1.c0, rt1.c2))>=((vt50.c0, rt1.c0, rt1.c2))))>(UPPER(rt1.c0))) DESC  NULLS FIRST, (((rt1.c1)>>(x'')) IN ());
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN 0Xfffffffff36687db ELSE rt1.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN 0xfffffffff36687db ELSE rt1.c2 END) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN 0Xfffffffff36687db ELSE rt1.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN 0xfffffffff36687db ELSE rt1.c2 END) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN 0Xfffffffff36687db ELSE rt1.c2 END) IS FALSE));
SELECT * FROM vt50 WHERE ((+ (((vt50.c0) NOT NULL)))) ORDER BY (- (((vt50.c0)/('127368801')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt50.c0) NOT NULL)))) IS TRUE)  as count FROM vt50 ORDER BY (- (((vt50.c0)/('127368801')))) ASC);
SELECT * FROM vt50 WHERE ((+ (((vt50.c0) NOT NULL)))) ORDER BY (- (((vt50.c0)/('127368801')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt50.c0) NOT NULL)))) IS TRUE)  as count FROM vt50 ORDER BY (- (((vt50.c0)/('127368801')))) ASC);
SELECT * FROM vt50 WHERE ((+ (((vt50.c0) NOT NULL)))) ORDER BY (- (((vt50.c0)/('127368801')))) ASC;
SELECT COUNT(*) FROM vt50, rt1 WHERE (0.9557376449703704);
SELECT SUM(count) FROM (SELECT ((0.9557376449703704) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (0.9557376449703704);
SELECT SUM(count) FROM (SELECT ((0.9557376449703704) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (0.9557376449703704);
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c0) ORDER BY (((((('')AND(rt1.c1)))OR(vt50.c0))) NOT BETWEEN ((+ (rt1.c1))) AND (((0.26620809453729444) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((('')AND(rt1.c1)))OR(vt50.c0))) NOT BETWEEN ((+ (rt1.c1))) AND (((0.26620809453729444) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c0) ORDER BY (((((('')AND(rt1.c1)))OR(vt50.c0))) NOT BETWEEN ((+ (rt1.c1))) AND (((0.26620809453729444) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((('')AND(rt1.c1)))OR(vt50.c0))) NOT BETWEEN ((+ (rt1.c1))) AND (((0.26620809453729444) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c0) ORDER BY (((((('')AND(rt1.c1)))OR(vt50.c0))) NOT BETWEEN ((+ (rt1.c1))) AND (((0.26620809453729444) IS FALSE)))  NULLS LAST;
SELECT * FROM vt50 NOT INDEXED CROSS JOIN rt1 ON ((((((vt50.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, vt50.c0, rt1.c1, x'c3d5', rt1.c1)) AND ((rt1.c1, rt1.c2, x'7fa9', rt1.c1, rt1.c0))), ((rt1.c0)&(vt50.c0)), highlight(rt1.c2, rt1.c2, '', rt1.c2)))=((((rt1.c0)>=(vt50.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((rt1.c1)OR(rt1.c0)))AND(NULL))))) WHERE (NULLIF(DISTINCT (+ (rt1.c0)), rt1.c2 COLLATE RTRIM)) ORDER BY LOWER(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (+ (rt1.c0)), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((((((vt50.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, vt50.c0, rt1.c1, x'c3d5', rt1.c1)) AND ((rt1.c1, rt1.c2, x'7fa9', rt1.c1, rt1.c0))), ((rt1.c0)&(vt50.c0)), highlight(rt1.c2, rt1.c2, '', rt1.c2)))==((((rt1.c0)>=(vt50.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((rt1.c1)OR(rt1.c0)))AND(NULL))))) ORDER BY LOWER(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS LAST);
SELECT * FROM vt50 NOT INDEXED CROSS JOIN rt1 ON ((((((vt50.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, vt50.c0, rt1.c1, x'c3d5', rt1.c1)) AND ((rt1.c1, rt1.c2, x'7fa9', rt1.c1, rt1.c0))), ((rt1.c0)&(vt50.c0)), highlight(rt1.c2, rt1.c2, '', rt1.c2)))=((((rt1.c0)>=(vt50.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((rt1.c1)OR(rt1.c0)))AND(NULL))))) WHERE (NULLIF(DISTINCT (+ (rt1.c0)), rt1.c2 COLLATE RTRIM)) ORDER BY LOWER(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (+ (rt1.c0)), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((((((vt50.c0, rt1.c0, rt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, vt50.c0, rt1.c1, x'c3d5', rt1.c1)) AND ((rt1.c1, rt1.c2, x'7fa9', rt1.c1, rt1.c0))), ((rt1.c0)&(vt50.c0)), highlight(rt1.c2, rt1.c2, '', rt1.c2)))==((((rt1.c0)>=(vt50.c0)), CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((rt1.c1)OR(rt1.c0)))AND(NULL))))) ORDER BY LOWER(DISTINCT CAST(rt1.c0 AS NUMERIC))  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (0.9668448084603183);
SELECT SUM(count) FROM (SELECT ((0.9668448084603183) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (0.9668448084603183);
SELECT SUM(count) FROM (SELECT ((0.9668448084603183) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (0.9668448084603183);
SELECT COUNT(*) FROM vt50, rt1 WHERE (NULL) ORDER BY (+ ((- (x'f71d'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt50, rt1 ORDER BY (+ ((- (x'f71d'))))  NULLS FIRST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (NULL) ORDER BY (+ ((- (x'f71d'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt50, rt1 ORDER BY (+ ((- (x'f71d'))))  NULLS FIRST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (NULL) ORDER BY (+ ((- (x'f71d'))))  NULLS FIRST;
SELECT * FROM rt1, vt50 WHERE ((((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c2))))<=((((('ga')) BETWEEN ((rt1.c2)) AND ((vt50.c0))))))) ORDER BY (rt1.c2 IN ()) DESC  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c2))))<=((((('ga')) BETWEEN ((rt1.c2)) AND ((vt50.c0))))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (rt1.c2 IN ()) DESC  NULLS FIRST, NULL  NULLS FIRST);
SELECT * FROM rt1, vt50 WHERE ((((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c2))))<=((((('ga')) BETWEEN ((rt1.c2)) AND ((vt50.c0))))))) ORDER BY (rt1.c2 IN ()) DESC  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c2))))<=((((('ga')) BETWEEN ((rt1.c2)) AND ((vt50.c0))))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (rt1.c2 IN ()) DESC  NULLS FIRST, NULL  NULLS FIRST);
SELECT * FROM rt1, vt50 WHERE ((((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c2))))<=((((('ga')) BETWEEN ((rt1.c2)) AND ((vt50.c0))))))) ORDER BY (rt1.c2 IN ()) DESC  NULLS FIRST, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 WHERE ((((~ (0x1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (0X1))) NOTNULL)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((~ (0x1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (0X1))) NOTNULL)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((~ (0x1))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((((((((((vt50.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) IN ((NOT (vt50.c0))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((1725958982))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt50.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) IN ((NOT (vt50.c0))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((1725958982))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((((((((((vt50.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) IN ((NOT (vt50.c0))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((1725958982))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt50.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) IN ((NOT (vt50.c0))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((1725958982))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((((((((((vt50.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) IN ((NOT (vt50.c0))))) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((1725958982))) ASC  NULLS FIRST;
SELECT * FROM rt1, vt50 WHERE ((((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(vt50.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(vt50.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(vt50.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(vt50.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(vt50.c0)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE ((- (7.57606261E8))) ORDER BY ((rt1.c1 IN (rt1.c0, rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (7.57606261E8))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 IN (rt1.c0, rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE ((- (7.57606261E8))) ORDER BY ((rt1.c1 IN (rt1.c0, rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (7.57606261E8))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 IN (rt1.c0, rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE ((- (7.57606261E8))) ORDER BY ((rt1.c1 IN (rt1.c0, rt1.c2)) IN ());
SELECT ALL * FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ((rt1.c0 IN (rt1.c0))))) ORDER BY ((((rt1.c2) ISNULL))>=((rt1.c1 IN (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE BINARY IN ((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) ISNULL))>=((rt1.c1 IN (rt1.c2)))) ASC);
SELECT ALL * FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ((rt1.c0 IN (rt1.c0))))) ORDER BY ((((rt1.c2) ISNULL))>=((rt1.c1 IN (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE BINARY IN ((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) ISNULL))>=((rt1.c1 IN (rt1.c2)))) ASC);
SELECT ALL * FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ((rt1.c0 IN (rt1.c0))))) ORDER BY ((((rt1.c2) ISNULL))>=((rt1.c1 IN (rt1.c2)))) ASC;
SELECT * FROM vt50 WHERE (CASE TOTAL_CHANGES()  WHEN (((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))!=((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))) THEN (NOT (vt50.c0)) ELSE (~ (vt50.c0)) END) ORDER BY (NOT (((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))));
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN (((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))<>((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))) THEN (NOT (vt50.c0)) ELSE (~ (vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY (NOT (((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))));
SELECT * FROM vt50 WHERE (CASE TOTAL_CHANGES()  WHEN (((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))!=((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))) THEN (NOT (vt50.c0)) ELSE (~ (vt50.c0)) END) ORDER BY (NOT (((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))));
SELECT SUM(count) FROM (SELECT ((CASE TOTAL_CHANGES()  WHEN (((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))<>((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))) THEN (NOT (vt50.c0)) ELSE (~ (vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY (NOT (((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))));
SELECT * FROM vt50 WHERE (CASE TOTAL_CHANGES()  WHEN (((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))!=((vt50.c0, vt50.c0, vt50.c0, vt50.c0, vt50.c0))) THEN (NOT (vt50.c0)) ELSE (~ (vt50.c0)) END) ORDER BY (NOT (((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))));
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ((((NULL))=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS NUMERIC) IN ((((NULL))==((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ((((NULL))=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS NUMERIC) IN ((((NULL))==((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ((((NULL))=((rt1.c1))))));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (((CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.6033419620884166 END))!=((((rt1.c2)&(rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (((CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.6033419620884166 END))<>((((rt1.c2)&(rt1.c1))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (((CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.6033419620884166 END))!=((((rt1.c2)&(rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (((CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.6033419620884166 END))<>((((rt1.c2)&(rt1.c1))))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (((CASE WHEN rt1.c1 THEN rt1.c2 ELSE 0.6033419620884166 END))!=((((rt1.c2)&(rt1.c1))))) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((('-616373433') BETWEEN (x'') AND (((1641102852) IS TRUE)))) ORDER BY ((((-358603712)OR(((rt1.c2)%(x'')))))OR(rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-616373433') BETWEEN (x'') AND (((1641102852) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((-358603712)OR(((rt1.c2)%(x'')))))OR(rt1.c2)) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((('-616373433') BETWEEN (x'') AND (((1641102852) IS TRUE)))) ORDER BY ((((-358603712)OR(((rt1.c2)%(x'')))))OR(rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-616373433') BETWEEN (x'') AND (((1641102852) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((-358603712)OR(((rt1.c2)%(x'')))))OR(rt1.c2)) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((('-616373433') BETWEEN (x'') AND (((1641102852) IS TRUE)))) ORDER BY ((((-358603712)OR(((rt1.c2)%(x'')))))OR(rt1.c2)) ASC;
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c1) IS TRUE) THEN (rt1.c0 IN ()) WHEN ((rt1.c1) NOT BETWEEN (404490239) AND (rt1.c1)) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE RTRIM THEN (((rt1.c0, rt1.c0, rt1.c0)) BETWEEN (('y', rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) IS TRUE) THEN (rt1.c0 IN ()) WHEN ((rt1.c1) NOT BETWEEN (404490239) AND (rt1.c1)) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE RTRIM THEN (((rt1.c0, rt1.c0, rt1.c0)) BETWEEN (('y', rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c1) IS TRUE) THEN (rt1.c0 IN ()) WHEN ((rt1.c1) NOT BETWEEN (404490239) AND (rt1.c1)) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE RTRIM THEN (((rt1.c0, rt1.c0, rt1.c0)) BETWEEN (('y', rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) IS TRUE) THEN (rt1.c0 IN ()) WHEN ((rt1.c1) NOT BETWEEN (404490239) AND (rt1.c1)) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE RTRIM THEN (((rt1.c0, rt1.c0, rt1.c0)) BETWEEN (('y', rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c1) IS TRUE) THEN (rt1.c0 IN ()) WHEN ((rt1.c1) NOT BETWEEN (404490239) AND (rt1.c1)) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE RTRIM THEN (((rt1.c0, rt1.c0, rt1.c0)) BETWEEN (('y', rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c2))) ELSE rt1.c2 END);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)<=(vt50.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)<=(vt50.c0))) IS TRUE)) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)<=(vt50.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)<=(vt50.c0))) IS TRUE)) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)<=(vt50.c0))) IS TRUE));
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((rt1.c2 COLLATE BINARY)))) ORDER BY '1777126693'  NULLS FIRST, (((NULL))<=((NULL)))  NULLS FIRST, ((rt1.c2 COLLATE NOCASE)||(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 ORDER BY '1777126693'  NULLS FIRST, (((NULL))<=((NULL)))  NULLS FIRST, ((rt1.c2 COLLATE NOCASE)||(x''))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((rt1.c2 COLLATE BINARY)))) ORDER BY '1777126693'  NULLS FIRST, (((NULL))<=((NULL)))  NULLS FIRST, ((rt1.c2 COLLATE NOCASE)||(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 ORDER BY '1777126693'  NULLS FIRST, (((NULL))<=((NULL)))  NULLS FIRST, ((rt1.c2 COLLATE NOCASE)||(x''))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((rt1.c2 COLLATE BINARY)))) ORDER BY '1777126693'  NULLS FIRST, (((NULL))<=((NULL)))  NULLS FIRST, ((rt1.c2 COLLATE NOCASE)||(x''))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0))) NOT BETWEEN (vt50.c0 COLLATE BINARY) AND (vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0))) NOT BETWEEN (vt50.c0 COLLATE BINARY) AND (vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0))) NOT BETWEEN (vt50.c0 COLLATE BINARY) AND (vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0))) NOT BETWEEN (vt50.c0 COLLATE BINARY) AND (vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0))) NOT BETWEEN (vt50.c0 COLLATE BINARY) AND (vt50.c0 COLLATE BINARY)));
SELECT * FROM vt50 WHERE (CASE HEX(DISTINCT vt50.c0)  WHEN (+ (vt50.c0)) THEN CASE x'3773'  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END ELSE vt50.c0 END) ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<<(UNLIKELY(vt50.c0))) ASC, HEX(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE HEX(DISTINCT vt50.c0)  WHEN (+ (vt50.c0)) THEN CASE x'3773'  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END ELSE vt50.c0 END) IS TRUE)  as count FROM vt50 ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<<(UNLIKELY(vt50.c0))) ASC, HEX(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) DESC  NULLS FIRST);
SELECT * FROM vt50 WHERE (CASE HEX(DISTINCT vt50.c0)  WHEN (+ (vt50.c0)) THEN CASE x'3773'  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END ELSE vt50.c0 END) ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<<(UNLIKELY(vt50.c0))) ASC, HEX(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE HEX(DISTINCT vt50.c0)  WHEN (+ (vt50.c0)) THEN CASE x'3773'  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END ELSE vt50.c0 END) IS TRUE)  as count FROM vt50 ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<<(UNLIKELY(vt50.c0))) ASC, HEX(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) DESC  NULLS FIRST);
SELECT * FROM vt50 WHERE (CASE HEX(DISTINCT vt50.c0)  WHEN (+ (vt50.c0)) THEN CASE x'3773'  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END ELSE vt50.c0 END) ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<<(UNLIKELY(vt50.c0))) ASC, HEX(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON CASE WHEN ((rt1.c1)<(rt1.c0)) THEN (rt1.c0 IN (0.9668448084603183, rt1.c0)) END WHERE (CASE WHEN (rt1.c1 IN ()) THEN (((('-908994001')AND(vt50.c0)))OR(vt50.c0)) END) ORDER BY (NOT (json_insert(rt1.c1, vt50.c0, vt50.c0))) ASC, ((rt1.c0) NOTNULL) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c1 IN ()) THEN (((('-908994001')AND(vt50.c0)))OR(vt50.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON CASE WHEN ((rt1.c1)<(rt1.c0)) THEN (rt1.c0 IN (0.9668448084603183, rt1.c0)) END ORDER BY (NOT (json_insert(rt1.c1, vt50.c0, vt50.c0))) ASC, ((rt1.c0) NOTNULL) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON CASE WHEN ((rt1.c1)<(rt1.c0)) THEN (rt1.c0 IN (0.9668448084603183, rt1.c0)) END WHERE (CASE WHEN (rt1.c1 IN ()) THEN (((('-908994001')AND(vt50.c0)))OR(vt50.c0)) END) ORDER BY (NOT (json_insert(rt1.c1, vt50.c0, vt50.c0))) ASC, ((rt1.c0) NOTNULL) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c1 IN ()) THEN (((('-908994001')AND(vt50.c0)))OR(vt50.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON CASE WHEN ((rt1.c1)<(rt1.c0)) THEN (rt1.c0 IN (0.9668448084603183, rt1.c0)) END ORDER BY (NOT (json_insert(rt1.c1, vt50.c0, vt50.c0))) ASC, ((rt1.c0) NOTNULL) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()));
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON (- (CAST(rt1.c1 AS BLOB))) WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))<=(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))<=(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON (- (CAST(rt1.c1 AS BLOB))));
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON (- (CAST(rt1.c1 AS BLOB))) WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))<=(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))<=(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON (- (CAST(rt1.c1 AS BLOB))));
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON (- (CAST(rt1.c1 AS BLOB))) WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))<=(rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c1) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c1) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c1) NOTNULL)) ISNULL));
SELECT ALL * FROM vt50 WHERE (((~ (vt50.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt50.c0)) IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((~ (vt50.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt50.c0)) IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((~ (vt50.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1 COLLATE RTRIM)||(((((((((0.30248745715998326)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c2))))) ORDER BY ((1860638053)>=((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt50.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)||(((((((((0.30248745715998326)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((1860638053)>=((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt50.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1 COLLATE RTRIM)||(((((((((0.30248745715998326)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c2))))) ORDER BY ((1860638053)>=((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt50.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)||(((((((((0.30248745715998326)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((1860638053)>=((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt50.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1 COLLATE RTRIM)||(((((((((0.30248745715998326)OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c2))))) ORDER BY ((1860638053)>=((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((vt50.c0))))) DESC;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt50 ON ((rt1.c2 COLLATE BINARY)||(((rt1.c1) BETWEEN (vt50.c0) AND (x'47c4')))) WHERE (((rt1.c1 COLLATE NOCASE)%(CASE vt50.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt50.c0 THEN rt1.c0 WHEN '430911247' THEN vt50.c0 ELSE rt1.c0 END))) ORDER BY ((((((((rt1.c2 COLLATE RTRIM)OR(0.06650550606123029)))OR(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt50.c0 THEN rt1.c2 WHEN vt50.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 ELSE vt50.c0 END)))AND('ꏰ*')))OR(((vt50.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)%(CASE vt50.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt50.c0 THEN rt1.c0 WHEN '430911247' THEN vt50.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON ((rt1.c2 COLLATE BINARY)||(((rt1.c1) BETWEEN (vt50.c0) AND (x'47c4')))) ORDER BY ((((((((rt1.c2 COLLATE RTRIM)OR(0.06650550606123029)))OR(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt50.c0 THEN rt1.c2 WHEN vt50.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 ELSE vt50.c0 END)))AND('ꏰ*')))OR(((vt50.c0) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt50 ON ((rt1.c2 COLLATE BINARY)||(((rt1.c1) BETWEEN (vt50.c0) AND (x'47c4')))) WHERE (((rt1.c1 COLLATE NOCASE)%(CASE vt50.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt50.c0 THEN rt1.c0 WHEN '430911247' THEN vt50.c0 ELSE rt1.c0 END))) ORDER BY ((((((((rt1.c2 COLLATE RTRIM)OR(0.06650550606123029)))OR(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt50.c0 THEN rt1.c2 WHEN vt50.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 ELSE vt50.c0 END)))AND('ꏰ*')))OR(((vt50.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE NOCASE)%(CASE vt50.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt50.c0 THEN rt1.c0 WHEN '430911247' THEN vt50.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON ((rt1.c2 COLLATE BINARY)||(((rt1.c1) BETWEEN (vt50.c0) AND (x'47c4')))) ORDER BY ((((((((rt1.c2 COLLATE RTRIM)OR(0.06650550606123029)))OR(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt50.c0 THEN rt1.c2 WHEN vt50.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 ELSE vt50.c0 END)))AND('ꏰ*')))OR(((vt50.c0) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt50 ON ((rt1.c2 COLLATE BINARY)||(((rt1.c1) BETWEEN (vt50.c0) AND (x'47c4')))) WHERE (((rt1.c1 COLLATE NOCASE)%(CASE vt50.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt50.c0 THEN rt1.c0 WHEN '430911247' THEN vt50.c0 ELSE rt1.c0 END))) ORDER BY ((((((((rt1.c2 COLLATE RTRIM)OR(0.06650550606123029)))OR(CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt50.c0 THEN rt1.c2 WHEN vt50.c0 THEN x'' WHEN rt1.c1 THEN rt1.c1 ELSE vt50.c0 END)))AND('ꏰ*')))OR(((vt50.c0) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM vt50 WHERE (CASE ((vt50.c0)/(vt50.c0))  WHEN (x'' IN ()) THEN (((vt50.c0))<=((NULL))) WHEN ((vt50.c0)>=(vt50.c0)) THEN vt50.c0 WHEN json_object(NULL, vt50.c0, vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) ELSE ((vt50.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)/(vt50.c0))  WHEN (x'' IN ()) THEN (((vt50.c0))<=((NULL))) WHEN ((vt50.c0)>=(vt50.c0)) THEN vt50.c0 WHEN json_object(NULL, vt50.c0, vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) ELSE ((vt50.c0) IS TRUE) END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE ((vt50.c0)/(vt50.c0))  WHEN (x'' IN ()) THEN (((vt50.c0))<=((NULL))) WHEN ((vt50.c0)>=(vt50.c0)) THEN vt50.c0 WHEN json_object(NULL, vt50.c0, vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) ELSE ((vt50.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)/(vt50.c0))  WHEN (x'' IN ()) THEN (((vt50.c0))<=((NULL))) WHEN ((vt50.c0)>=(vt50.c0)) THEN vt50.c0 WHEN json_object(NULL, vt50.c0, vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) ELSE ((vt50.c0) IS TRUE) END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE ((vt50.c0)/(vt50.c0))  WHEN (x'' IN ()) THEN (((vt50.c0))<=((NULL))) WHEN ((vt50.c0)>=(vt50.c0)) THEN vt50.c0 WHEN json_object(NULL, vt50.c0, vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) ELSE ((vt50.c0) IS TRUE) END);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (LIKE(((rt1.c0)GLOB(rt1.c0)), (rt1.c1 IN ()))) ORDER BY ((CASE vt50.c0  WHEN rt1.c0 THEN rt1.c1 END) NOTNULL), ((NULL) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(((rt1.c0)GLOB(rt1.c0)), (rt1.c1 IN ()))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((CASE vt50.c0  WHEN rt1.c0 THEN rt1.c1 END) NOTNULL), ((NULL) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (LIKE(((rt1.c0)GLOB(rt1.c0)), (rt1.c1 IN ()))) ORDER BY ((CASE vt50.c0  WHEN rt1.c0 THEN rt1.c1 END) NOTNULL), ((NULL) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(((rt1.c0)GLOB(rt1.c0)), (rt1.c1 IN ()))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((CASE vt50.c0  WHEN rt1.c0 THEN rt1.c1 END) NOTNULL), ((NULL) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (LIKE(((rt1.c0)GLOB(rt1.c0)), (rt1.c1 IN ()))) ORDER BY ((CASE vt50.c0  WHEN rt1.c0 THEN rt1.c1 END) NOTNULL), ((NULL) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((- (json_patch(vt50.c0, vt50.c0)))) ORDER BY ((NULL)+(rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(vt50.c0, vt50.c0)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((NULL)+(rt1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((- (json_patch(vt50.c0, vt50.c0)))) ORDER BY ((NULL)+(rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(vt50.c0, vt50.c0)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((NULL)+(rt1.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((- (json_patch(vt50.c0, vt50.c0)))) ORDER BY ((NULL)+(rt1.c2 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50 WHERE (((CAST(797851084 AS REAL))|(CASE WHEN vt50.c0 THEN vt50.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(797851084 AS REAL))|(CASE WHEN vt50.c0 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (((CAST(797851084 AS REAL))|(CASE WHEN vt50.c0 THEN vt50.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(797851084 AS REAL))|(CASE WHEN vt50.c0 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (((CAST(797851084 AS REAL))|(CASE WHEN vt50.c0 THEN vt50.c0 END)));
SELECT COUNT(*) FROM rt1, vt50 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (x'');
SELECT COUNT(*) FROM vt50 WHERE ((((('9223372036854775807') IS TRUE))IS NOT(TRIM(vt50.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('9223372036854775807') IS TRUE))IS NOT(TRIM(vt50.c0, vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((('9223372036854775807') IS TRUE))IS NOT(TRIM(vt50.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((('9223372036854775807') IS TRUE))IS NOT(TRIM(vt50.c0, vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((('9223372036854775807') IS TRUE))IS NOT(TRIM(vt50.c0, vt50.c0))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((rt1.c1)>(vt50.c0)), ((rt1.c2)*(vt50.c0)), (~ (NULL))))>=(((- (rt1.c1)), ((rt1.c2) NOT NULL), rt1.c0)))) ORDER BY ((NULLIF(DISTINCT rt1.c1, vt50.c0))-(rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>(vt50.c0)), ((rt1.c2)*(vt50.c0)), (~ (NULL))))>=(((- (rt1.c1)), ((rt1.c2) NOT NULL), rt1.c0)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((NULLIF(DISTINCT rt1.c1, vt50.c0))-(rt1.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((rt1.c1)>(vt50.c0)), ((rt1.c2)*(vt50.c0)), (~ (NULL))))>=(((- (rt1.c1)), ((rt1.c2) NOT NULL), rt1.c0)))) ORDER BY ((NULLIF(DISTINCT rt1.c1, vt50.c0))-(rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)>(vt50.c0)), ((rt1.c2)*(vt50.c0)), (~ (NULL))))>=(((- (rt1.c1)), ((rt1.c2) NOT NULL), rt1.c0)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((NULLIF(DISTINCT rt1.c1, vt50.c0))-(rt1.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((rt1.c1)>(vt50.c0)), ((rt1.c2)*(vt50.c0)), (~ (NULL))))>=(((- (rt1.c1)), ((rt1.c2) NOT NULL), rt1.c0)))) ORDER BY ((NULLIF(DISTINCT rt1.c1, vt50.c0))-(rt1.c2 COLLATE BINARY));
SELECT ALL * FROM rt1, vt50 WHERE ((((NOT (rt1.c0)))&(((vt50.c0) NOTNULL)))) ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN '-1229095755' THEN ((rt1.c1)*(vt50.c0)) ELSE '4039097' COLLATE NOCASE END ASC  NULLS LAST, (~ (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, vt50.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))&(((vt50.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN '-1229095755' THEN ((rt1.c1)*(vt50.c0)) ELSE '4039097' COLLATE NOCASE END ASC  NULLS LAST, (~ (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, vt50.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt50 WHERE ((((NOT (rt1.c0)))&(((vt50.c0) NOTNULL)))) ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN '-1229095755' THEN ((rt1.c1)*(vt50.c0)) ELSE '4039097' COLLATE NOCASE END ASC  NULLS LAST, (~ (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, vt50.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))&(((vt50.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN '-1229095755' THEN ((rt1.c1)*(vt50.c0)) ELSE '4039097' COLLATE NOCASE END ASC  NULLS LAST, (~ (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, vt50.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt50 WHERE ((((NOT (rt1.c0)))&(((vt50.c0) NOTNULL)))) ORDER BY CASE ((rt1.c2) IS FALSE)  WHEN '-1229095755' THEN ((rt1.c1)*(vt50.c0)) ELSE '4039097' COLLATE NOCASE END ASC  NULLS LAST, (~ (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, vt50.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt50 WHERE (0.7041072205160982 COLLATE NOCASE) ORDER BY LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c2)))OR(vt50.c0)))OR(rt1.c0)))AND(rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7041072205160982 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50 ORDER BY LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c2)))OR(vt50.c0)))OR(rt1.c0)))AND(rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (0.7041072205160982 COLLATE NOCASE) ORDER BY LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c2)))OR(vt50.c0)))OR(rt1.c0)))AND(rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7041072205160982 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50 ORDER BY LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c2)))OR(vt50.c0)))OR(rt1.c0)))AND(rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (0.7041072205160982 COLLATE NOCASE) ORDER BY LIKELY(DISTINCT ((((((((rt1.c1)AND(rt1.c2)))OR(vt50.c0)))OR(rt1.c0)))AND(rt1.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c2 IN ())  WHEN CAST(rt1.c2 AS BLOB) THEN (NOT (rt1.c1)) WHEN NULL THEN NULL WHEN LOWER(rt1.c0) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2)&(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c2 IN ())  WHEN CAST(rt1.c2 AS BLOB) THEN (NOT (rt1.c1)) WHEN NULL THEN NULL WHEN LOWER(rt1.c0) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2)&(rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c2 IN ())  WHEN CAST(rt1.c2 AS BLOB) THEN (NOT (rt1.c1)) WHEN NULL THEN NULL WHEN LOWER(rt1.c0) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2)&(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c2 IN ())  WHEN CAST(rt1.c2 AS BLOB) THEN (NOT (rt1.c1)) WHEN NULL THEN NULL WHEN LOWER(rt1.c0) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2)&(rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c2 IN ())  WHEN CAST(rt1.c2 AS BLOB) THEN (NOT (rt1.c1)) WHEN NULL THEN NULL WHEN LOWER(rt1.c0) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2)&(rt1.c1)) END);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)<=(vt50.c0)))=(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) ORDER BY NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), ((0x33e00901)<>(vt50.c0)))  NULLS FIRST, (((((((((vt50.c0 IN ()))AND(vt50.c0)))AND(vt50.c0 COLLATE RTRIM)))OR(vt50.c0)))OR((- (vt50.c0)))) DESC  NULLS FIRST, 0X5d575e5f  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)<=(vt50.c0)))=(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), ((0x33e00901)<>(vt50.c0)))  NULLS FIRST, (((((((((vt50.c0 IN ()))AND(vt50.c0)))AND(vt50.c0 COLLATE RTRIM)))OR(vt50.c0)))OR((- (vt50.c0)))) DESC  NULLS FIRST, 0x5d575e5f  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)<=(vt50.c0)))=(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) ORDER BY NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), ((0x33e00901)<>(vt50.c0)))  NULLS FIRST, (((((((((vt50.c0 IN ()))AND(vt50.c0)))AND(vt50.c0 COLLATE RTRIM)))OR(vt50.c0)))OR((- (vt50.c0)))) DESC  NULLS FIRST, 0X5d575e5f  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)<=(vt50.c0)))=(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY NULLIF(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)), ((0x33e00901)<>(vt50.c0)))  NULLS FIRST, (((((((((vt50.c0 IN ()))AND(vt50.c0)))AND(vt50.c0 COLLATE RTRIM)))OR(vt50.c0)))OR((- (vt50.c0)))) DESC  NULLS FIRST, 0x5d575e5f  NULLS LAST);
SELECT * FROM vt50 WHERE (CASE WHEN ((vt50.c0)-(vt50.c0)) THEN CAST(vt50.c0 AS INTEGER) WHEN ((vt50.c0)*(vt50.c0)) THEN ((vt50.c0)*(vt50.c0)) WHEN (('2047671105')>(vt50.c0)) THEN vt50.c0 WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) ELSE 0Xffffffffc825d3e7 COLLATE BINARY END) ORDER BY ((((((0.6852695871219823)<(vt50.c0)))OR(((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))))OR(GLOB(vt50.c0, vt50.c0)))  NULLS LAST, ((NOT (vt50.c0)) IN ()), (('127368801')OR(((vt50.c0)&(vt50.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt50.c0)-(vt50.c0)) THEN CAST(vt50.c0 AS INTEGER) WHEN ((vt50.c0)*(vt50.c0)) THEN ((vt50.c0)*(vt50.c0)) WHEN (('2047671105')>(vt50.c0)) THEN vt50.c0 WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) ELSE 0Xffffffffc825d3e7 COLLATE BINARY END) IS TRUE)  as count FROM vt50 ORDER BY ((((((0.6852695871219823)<(vt50.c0)))OR(((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))))OR(GLOB(vt50.c0, vt50.c0)))  NULLS LAST, ((NOT (vt50.c0)) IN ()), (('127368801')OR(((vt50.c0)&(vt50.c0))))  NULLS FIRST);
SELECT * FROM vt50 WHERE (CASE WHEN ((vt50.c0)-(vt50.c0)) THEN CAST(vt50.c0 AS INTEGER) WHEN ((vt50.c0)*(vt50.c0)) THEN ((vt50.c0)*(vt50.c0)) WHEN (('2047671105')>(vt50.c0)) THEN vt50.c0 WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) ELSE 0Xffffffffc825d3e7 COLLATE BINARY END) ORDER BY ((((((0.6852695871219823)<(vt50.c0)))OR(((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))))OR(GLOB(vt50.c0, vt50.c0)))  NULLS LAST, ((NOT (vt50.c0)) IN ()), (('127368801')OR(((vt50.c0)&(vt50.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt50.c0)-(vt50.c0)) THEN CAST(vt50.c0 AS INTEGER) WHEN ((vt50.c0)*(vt50.c0)) THEN ((vt50.c0)*(vt50.c0)) WHEN (('2047671105')>(vt50.c0)) THEN vt50.c0 WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) ELSE 0Xffffffffc825d3e7 COLLATE BINARY END) IS TRUE)  as count FROM vt50 ORDER BY ((((((0.6852695871219823)<(vt50.c0)))OR(((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))))OR(GLOB(vt50.c0, vt50.c0)))  NULLS LAST, ((NOT (vt50.c0)) IN ()), (('127368801')OR(((vt50.c0)&(vt50.c0))))  NULLS FIRST);
SELECT * FROM vt50 WHERE (CASE WHEN ((vt50.c0)-(vt50.c0)) THEN CAST(vt50.c0 AS INTEGER) WHEN ((vt50.c0)*(vt50.c0)) THEN ((vt50.c0)*(vt50.c0)) WHEN (('2047671105')>(vt50.c0)) THEN vt50.c0 WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) ELSE 0Xffffffffc825d3e7 COLLATE BINARY END) ORDER BY ((((((0.6852695871219823)<(vt50.c0)))OR(((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))))OR(GLOB(vt50.c0, vt50.c0)))  NULLS LAST, ((NOT (vt50.c0)) IN ()), (('127368801')OR(((vt50.c0)&(vt50.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (rt1.c2) ORDER BY ((((rt1.c2)|(vt50.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END) AND (((((((((rt1.c2)OR(vt50.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(vt50.c0)))) ASC  NULLS LAST, x'391c';
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((rt1.c2)|(vt50.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END) AND (((((((((rt1.c2)OR(vt50.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(vt50.c0)))) ASC  NULLS LAST, x'391c');
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (rt1.c2) ORDER BY ((((rt1.c2)|(vt50.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END) AND (((((((((rt1.c2)OR(vt50.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(vt50.c0)))) ASC  NULLS LAST, x'391c';
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((rt1.c2)|(vt50.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END) AND (((((((((rt1.c2)OR(vt50.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(vt50.c0)))) ASC  NULLS LAST, x'391c');
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (rt1.c2) ORDER BY ((((rt1.c2)|(vt50.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END) AND (((((((((rt1.c2)OR(vt50.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(vt50.c0)))) ASC  NULLS LAST, x'391c';
SELECT ALL COUNT(*) FROM vt50 WHERE (((CAST(vt50.c0 AS TEXT))IS NOT(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) ORDER BY ((CAST(vt50.c0 AS INTEGER)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt50.c0 AS TEXT))IS NOT(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((CAST(vt50.c0 AS INTEGER)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((CAST(vt50.c0 AS TEXT))IS NOT(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) ORDER BY ((CAST(vt50.c0 AS INTEGER)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt50.c0 AS TEXT))IS NOT(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((CAST(vt50.c0 AS INTEGER)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((CAST(vt50.c0 AS TEXT))IS NOT(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) ORDER BY ((CAST(vt50.c0 AS INTEGER)) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c2) ORDER BY vt50.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt50, rt1 ORDER BY vt50.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c2) ORDER BY vt50.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt50, rt1 ORDER BY vt50.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c2) ORDER BY vt50.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY CASE WHEN (((rt1.c2))!=((rt1.c2))) THEN ((((NULL)OR(rt1.c1)))OR(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c2))!=((rt1.c2))) THEN ((((NULL)OR(rt1.c1)))OR(rt1.c0)) END);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY CASE WHEN (((rt1.c2))!=((rt1.c2))) THEN ((((NULL)OR(rt1.c1)))OR(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c2))!=((rt1.c2))) THEN ((((NULL)OR(rt1.c1)))OR(rt1.c0)) END);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY CASE WHEN (((rt1.c2))!=((rt1.c2))) THEN ((((NULL)OR(rt1.c1)))OR(rt1.c0)) END;
SELECT ALL * FROM rt1, vt50 WHERE (CAST(((rt1.c2) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (CAST(((rt1.c2) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (CAST(((rt1.c2) NOTNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (1777126693) ORDER BY (((- (rt1.c2)))>=(((rt1.c2)-(rt1.c1)))) DESC  NULLS LAST, NULLIF(NULL, ((rt1.c0) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1777126693) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((- (rt1.c2)))>=(((rt1.c2)-(rt1.c1)))) DESC  NULLS LAST, NULLIF(NULL, ((rt1.c0) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (1777126693) ORDER BY (((- (rt1.c2)))>=(((rt1.c2)-(rt1.c1)))) DESC  NULLS LAST, NULLIF(NULL, ((rt1.c0) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1777126693) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((- (rt1.c2)))>=(((rt1.c2)-(rt1.c1)))) DESC  NULLS LAST, NULLIF(NULL, ((rt1.c0) IS TRUE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (1777126693) ORDER BY (((- (rt1.c2)))>=(((rt1.c2)-(rt1.c1)))) DESC  NULLS LAST, NULLIF(NULL, ((rt1.c0) IS TRUE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c2 IN ()))GLOB(rt1.c0 COLLATE BINARY))) ORDER BY ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(ABS(DISTINCT vt50.c0))))AND(vt50.c0)) ASC  NULLS LAST, CASE ((vt50.c0) BETWEEN (vt50.c0) AND (rt1.c0))  WHEN ((rt1.c1)>(rt1.c2)) THEN ((vt50.c0)+(rt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))GLOB(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(ABS(DISTINCT vt50.c0))))AND(vt50.c0)) ASC  NULLS LAST, CASE ((vt50.c0) BETWEEN (vt50.c0) AND (rt1.c0))  WHEN ((rt1.c1)>(rt1.c2)) THEN ((vt50.c0)+(rt1.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c2 IN ()))GLOB(rt1.c0 COLLATE BINARY))) ORDER BY ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(ABS(DISTINCT vt50.c0))))AND(vt50.c0)) ASC  NULLS LAST, CASE ((vt50.c0) BETWEEN (vt50.c0) AND (rt1.c0))  WHEN ((rt1.c1)>(rt1.c2)) THEN ((vt50.c0)+(rt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))GLOB(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(ABS(DISTINCT vt50.c0))))AND(vt50.c0)) ASC  NULLS LAST, CASE ((vt50.c0) BETWEEN (vt50.c0) AND (rt1.c0))  WHEN ((rt1.c1)>(rt1.c2)) THEN ((vt50.c0)+(rt1.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c2 IN ()))GLOB(rt1.c0 COLLATE BINARY))) ORDER BY ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(ABS(DISTINCT vt50.c0))))AND(vt50.c0)) ASC  NULLS LAST, CASE ((vt50.c0) BETWEEN (vt50.c0) AND (rt1.c0))  WHEN ((rt1.c1)>(rt1.c2)) THEN ((vt50.c0)+(rt1.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c2)&(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c2)&(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c2)&(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c2)&(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) BETWEEN (TYPEOF(rt1.c1)) AND (((rt1.c2)&(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt50 WHERE (((vt50.c0 COLLATE RTRIM)>(((vt50.c0)<=(vt50.c0))))) ORDER BY ((((NULLIF(vt50.c0, vt50.c0))OR(((vt50.c0) IS FALSE))))OR(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0 COLLATE RTRIM)>(((vt50.c0)<=(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((((NULLIF(vt50.c0, vt50.c0))OR(((vt50.c0) IS FALSE))))OR(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((vt50.c0 COLLATE RTRIM)>(((vt50.c0)<=(vt50.c0))))) ORDER BY ((((NULLIF(vt50.c0, vt50.c0))OR(((vt50.c0) IS FALSE))))OR(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0 COLLATE RTRIM)>(((vt50.c0)<=(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((((NULLIF(vt50.c0, vt50.c0))OR(((vt50.c0) IS FALSE))))OR(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((vt50.c0 COLLATE RTRIM)>(((vt50.c0)<=(vt50.c0))))) ORDER BY ((((NULLIF(vt50.c0, vt50.c0))OR(((vt50.c0) IS FALSE))))OR(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0 IN (vt50.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (vt50.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0 IN (vt50.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (vt50.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0 IN (vt50.c0))) NOT NULL));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN '' ELSE rt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN '' ELSE rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN '' ELSE rt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN '' ELSE rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN '' ELSE rt1.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((vt50.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))+((- (rt1.c1))))) ORDER BY (((- (rt1.c1)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0)))), (- ((- (rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt50.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))+((- (rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((- (rt1.c1)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0)))), (- ((- (rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((vt50.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))+((- (rt1.c1))))) ORDER BY (((- (rt1.c1)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0)))), (- ((- (rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt50.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))+((- (rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((- (rt1.c1)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0)))), (- ((- (rt1.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((((vt50.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))+((- (rt1.c1))))) ORDER BY (((- (rt1.c1)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0)))), (- ((- (rt1.c2)))) ASC  NULLS LAST;
SELECT * FROM rt1, vt50 WHERE (TRIM(DISTINCT (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt1.c0 IN ()))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (TRIM(DISTINCT (rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt1.c0 IN ()))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (TRIM(DISTINCT (rt1.c0 IN ())));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt50 ON (+ ((rt1.c2 IN ()))) WHERE (CASE ((((((((rt1.c1)AND(NULL)))AND(rt1.c2)))AND(x'')))OR(rt1.c0))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 WHEN (- (rt1.c2)) THEN (NULL IN (rt1.c0)) ELSE ((((((((vt50.c0)AND(rt1.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c1)AND(NULL)))AND(rt1.c2)))AND(x'')))OR(rt1.c0))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 WHEN (- (rt1.c2)) THEN (NULL IN (rt1.c0)) ELSE ((((((((vt50.c0)AND(rt1.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (+ ((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt50 ON (+ ((rt1.c2 IN ()))) WHERE (CASE ((((((((rt1.c1)AND(NULL)))AND(rt1.c2)))AND(x'')))OR(rt1.c0))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 WHEN (- (rt1.c2)) THEN (NULL IN (rt1.c0)) ELSE ((((((((vt50.c0)AND(rt1.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt1.c1)AND(NULL)))AND(rt1.c2)))AND(x'')))OR(rt1.c0))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 WHEN (- (rt1.c2)) THEN (NULL IN (rt1.c0)) ELSE ((((((((vt50.c0)AND(rt1.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (+ ((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt50 ON (+ ((rt1.c2 IN ()))) WHERE (CASE ((((((((rt1.c1)AND(NULL)))AND(rt1.c2)))AND(x'')))OR(rt1.c0))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 WHEN rt1.c2 THEN vt50.c0 WHEN (- (rt1.c2)) THEN (NULL IN (rt1.c0)) ELSE ((((((((vt50.c0)AND(rt1.c0)))OR(rt1.c2)))AND(vt50.c0)))OR(rt1.c2)) END);
SELECT COUNT(*) FROM vt50 WHERE ((vt50.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt50.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((vt50.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt50.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((vt50.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((+ (((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt50.c0)))));
SELECT * FROM rt1 NATURAL JOIN vt50 WHERE (NULL COLLATE RTRIM) ORDER BY ((((rt1.c0)!=(rt1.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50 ORDER BY ((((rt1.c0)!=(rt1.c2))) IS TRUE));
SELECT * FROM rt1 NATURAL JOIN vt50 WHERE (NULL COLLATE RTRIM) ORDER BY ((((rt1.c0)!=(rt1.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50 ORDER BY ((((rt1.c0)!=(rt1.c2))) IS TRUE));
SELECT * FROM rt1 NATURAL JOIN vt50 WHERE (NULL COLLATE RTRIM) ORDER BY ((((rt1.c0)!=(rt1.c2))) IS TRUE);
SELECT COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN (vt50.c0)) THEN rt1.c1 ELSE ((rt1.c0) BETWEEN (vt50.c0) AND (x'')) END WHERE (CAST(((rt1.c2)<(rt1.c2)) AS NUMERIC)) ORDER BY ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN (vt50.c0)) THEN rt1.c1 ELSE ((rt1.c0) BETWEEN (vt50.c0) AND (x'')) END ORDER BY ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN (vt50.c0)) THEN rt1.c1 ELSE ((rt1.c0) BETWEEN (vt50.c0) AND (x'')) END WHERE (CAST(((rt1.c2)<(rt1.c2)) AS NUMERIC)) ORDER BY ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)<(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN (vt50.c0)) THEN rt1.c1 ELSE ((rt1.c0) BETWEEN (vt50.c0) AND (x'')) END ORDER BY ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c2 IN (vt50.c0)) THEN rt1.c1 ELSE ((rt1.c0) BETWEEN (vt50.c0) AND (x'')) END WHERE (CAST(((rt1.c2)<(rt1.c2)) AS NUMERIC)) ORDER BY ((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt1, vt50 WHERE ((~ (CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c2)>>(vt50.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c2)>>(vt50.c0)) END);
SELECT ALL * FROM rt1, vt50 WHERE ((~ (CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c2)>>(vt50.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c2)>>(vt50.c0)) END);
SELECT ALL * FROM rt1, vt50 WHERE ((~ (CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt50.c0 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY CASE WHEN rt1.c2 THEN ((rt1.c2)>>(vt50.c0)) END;
SELECT ALL * FROM rt1, vt50 WHERE ((~ (TRIM(DISTINCT vt50.c0, rt1.c2)))) ORDER BY ((rt1.c1)AND(rt1.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TRIM(DISTINCT vt50.c0, rt1.c2)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((rt1.c1)AND(rt1.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt50 WHERE ((~ (TRIM(DISTINCT vt50.c0, rt1.c2)))) ORDER BY ((rt1.c1)AND(rt1.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TRIM(DISTINCT vt50.c0, rt1.c2)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((rt1.c1)AND(rt1.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt50 WHERE ((~ (TRIM(DISTINCT vt50.c0, rt1.c2)))) ORDER BY ((rt1.c1)AND(rt1.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((rt1.c0)OR(CAST(rt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)OR(CAST(rt1.c0 AS REAL))));
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((rt1.c0)OR(CAST(rt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)OR(CAST(rt1.c0 AS REAL))));
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((rt1.c0)OR(CAST(rt1.c0 AS REAL)));
SELECT * FROM rt1 WHERE ((+ (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT ALL * FROM vt50 WHERE (((CAST(-2.11384357E8 AS TEXT)) NOT NULL)) ORDER BY ((CASE WHEN vt50.c0 THEN NULL END)<=((vt50.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-2.11384357E8 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt50 ORDER BY ((CASE WHEN vt50.c0 THEN NULL END)<=((vt50.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt50 WHERE (((CAST(-2.11384357E8 AS TEXT)) NOT NULL)) ORDER BY ((CASE WHEN vt50.c0 THEN NULL END)<=((vt50.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-2.11384357E8 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt50 ORDER BY ((CASE WHEN vt50.c0 THEN NULL END)<=((vt50.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt50 WHERE (((CAST(-2.11384357E8 AS TEXT)) NOT NULL)) ORDER BY ((CASE WHEN vt50.c0 THEN NULL END)<=((vt50.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM rt1, vt50 WHERE (((NULL COLLATE BINARY)IS NOT(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE BINARY)IS NOT(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((NULL COLLATE BINARY)IS NOT(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE BINARY)IS NOT(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((NULL COLLATE BINARY)IS NOT(rt1.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 WHERE (((0Xfffffffff52886a5) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffff52886a5) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((0Xfffffffff52886a5) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffff52886a5) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((0Xfffffffff52886a5) ISNULL));
SELECT ALL * FROM vt50 WHERE (('2083793930' IN ())) ORDER BY (CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((('2083793930' IN ())) IS TRUE)  as count FROM vt50 ORDER BY (CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()) ASC);
SELECT ALL * FROM vt50 WHERE (('2083793930' IN ())) ORDER BY (CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((('2083793930' IN ())) IS TRUE)  as count FROM vt50 ORDER BY (CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()) ASC);
SELECT ALL * FROM vt50 WHERE (('2083793930' IN ())) ORDER BY (CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END IN ()) ASC;
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (0Xfffffffff74e43dd);
SELECT SUM(count) FROM (SELECT ((0xfffffffff74e43dd) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (0Xfffffffff74e43dd);
SELECT SUM(count) FROM (SELECT ((0xfffffffff74e43dd) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (0Xfffffffff74e43dd);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1229095755');
SELECT SUM(count) FROM (SELECT (('-1229095755') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1229095755');
SELECT SUM(count) FROM (SELECT (('-1229095755') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1229095755');
SELECT * FROM vt50, rt1 WHERE (((IFNULL(DISTINCT rt1.c1, rt1.c0))==(rt1.c0))) ORDER BY ((CHANGES()) IS FALSE), ((((rt1.c0)+(rt1.c2))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt1.c1, rt1.c0))==(rt1.c0))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((CHANGES()) IS FALSE), ((((rt1.c0)+(rt1.c2))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM vt50, rt1 WHERE (((IFNULL(DISTINCT rt1.c1, rt1.c0))==(rt1.c0))) ORDER BY ((CHANGES()) IS FALSE), ((((rt1.c0)+(rt1.c2))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt1.c1, rt1.c0))==(rt1.c0))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((CHANGES()) IS FALSE), ((((rt1.c0)+(rt1.c2))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM vt50, rt1 WHERE (((IFNULL(DISTINCT rt1.c1, rt1.c0))==(rt1.c0))) ORDER BY ((CHANGES()) IS FALSE), ((((rt1.c0)+(rt1.c2))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) IS FALSE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((vt50.c0, rt1.c0, rt1.c0)) NOT BETWEEN (((x'1303' IN ()), CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, (vt50.c0 IN (rt1.c1, rt1.c1)))) AND ((json_type(rt1.c0), ((rt1.c1)>(0.05760969746826361)), ((vt50.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))))) ORDER BY (('_BLc?df~F')>(((rt1.c0)>>(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt50.c0, rt1.c0, rt1.c0)) NOT BETWEEN (((x'1303' IN ()), CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, (vt50.c0 IN (rt1.c1, rt1.c1)))) AND ((json_type(rt1.c0), ((rt1.c1)>(0.05760969746826361)), ((vt50.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (('_BLc?df~F')>(((rt1.c0)>>(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((vt50.c0, rt1.c0, rt1.c0)) NOT BETWEEN (((x'1303' IN ()), CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, (vt50.c0 IN (rt1.c1, rt1.c1)))) AND ((json_type(rt1.c0), ((rt1.c1)>(0.05760969746826361)), ((vt50.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))))) ORDER BY (('_BLc?df~F')>(((rt1.c0)>>(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt50.c0, rt1.c0, rt1.c0)) NOT BETWEEN (((x'1303' IN ()), CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, (vt50.c0 IN (rt1.c1, rt1.c1)))) AND ((json_type(rt1.c0), ((rt1.c1)>(0.05760969746826361)), ((vt50.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (('_BLc?df~F')>(((rt1.c0)>>(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((vt50.c0, rt1.c0, rt1.c0)) NOT BETWEEN (((x'1303' IN ()), CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, (vt50.c0 IN (rt1.c1, rt1.c1)))) AND ((json_type(rt1.c0), ((rt1.c1)>(0.05760969746826361)), ((vt50.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))))) ORDER BY (('_BLc?df~F')>(((rt1.c0)>>(rt1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (IFNULL(DISTINCT vt50.c0, rt1.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt50.c0, rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (IFNULL(DISTINCT vt50.c0, rt1.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt50.c0, rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (IFNULL(DISTINCT vt50.c0, rt1.c1) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE ((+ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (((rt1.c2)IS NOT(rt1.c0)) IN ()) ASC, CASE WHEN ((rt1.c0) NOTNULL) THEN (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN CAST(rt1.c0 AS REAL) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)) WHEN ((((-2.85191754E8)AND(rt1.c1)))AND(rt1.c2)) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c0)>>(rt1.c0)) THEN (- (rt1.c1)) WHEN (rt1.c2 IN ()) THEN NULL ELSE CAST(rt1.c1 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)IS NOT(rt1.c0)) IN ()) ASC, CASE WHEN ((rt1.c0) NOTNULL) THEN (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN CAST(rt1.c0 AS REAL) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)) WHEN ((((-2.85191754E8)AND(rt1.c1)))AND(rt1.c2)) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c0)>>(rt1.c0)) THEN (- (rt1.c1)) WHEN (rt1.c2 IN ()) THEN NULL ELSE CAST(rt1.c1 AS REAL) END DESC);
SELECT ALL * FROM rt1 WHERE ((+ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (((rt1.c2)IS NOT(rt1.c0)) IN ()) ASC, CASE WHEN ((rt1.c0) NOTNULL) THEN (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN CAST(rt1.c0 AS REAL) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)) WHEN ((((-2.85191754E8)AND(rt1.c1)))AND(rt1.c2)) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c0)>>(rt1.c0)) THEN (- (rt1.c1)) WHEN (rt1.c2 IN ()) THEN NULL ELSE CAST(rt1.c1 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)IS NOT(rt1.c0)) IN ()) ASC, CASE WHEN ((rt1.c0) NOTNULL) THEN (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN CAST(rt1.c0 AS REAL) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)) WHEN ((((-2.85191754E8)AND(rt1.c1)))AND(rt1.c2)) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c0)>>(rt1.c0)) THEN (- (rt1.c1)) WHEN (rt1.c2 IN ()) THEN NULL ELSE CAST(rt1.c1 AS REAL) END DESC);
SELECT ALL * FROM rt1 WHERE ((+ (CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (((rt1.c2)IS NOT(rt1.c0)) IN ()) ASC, CASE WHEN ((rt1.c0) NOTNULL) THEN (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN CAST(rt1.c0 AS REAL) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)) WHEN ((((-2.85191754E8)AND(rt1.c1)))AND(rt1.c2)) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) WHEN ((rt1.c0)>>(rt1.c0)) THEN (- (rt1.c1)) WHEN (rt1.c2 IN ()) THEN NULL ELSE CAST(rt1.c1 AS REAL) END DESC;
SELECT ALL * FROM rt1, vt50 WHERE (((vt50.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((vt50.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((vt50.c0 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (vt50.c0))) ORDER BY IFNULL(rt1.c1 COLLATE BINARY, rt1.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt50.c0))) IS TRUE)  as count FROM vt50, rt1 ORDER BY IFNULL(rt1.c1 COLLATE BINARY, rt1.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (vt50.c0))) ORDER BY IFNULL(rt1.c1 COLLATE BINARY, rt1.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt50.c0))) IS TRUE)  as count FROM vt50, rt1 ORDER BY IFNULL(rt1.c1 COLLATE BINARY, rt1.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (vt50.c0))) ORDER BY IFNULL(rt1.c1 COLLATE BINARY, rt1.c1 COLLATE BINARY);
SELECT * FROM rt1 WHERE (TRIM(CAST(x'f928' AS BLOB), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ORDER BY (((x'5ab8' IN (rt1.c2))) IS FALSE) ASC, CAST(((rt1.c2) IS FALSE) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(x'f928' AS BLOB), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((x'5ab8' IN (rt1.c2))) IS FALSE) ASC, CAST(((rt1.c2) IS FALSE) AS NUMERIC) DESC);
SELECT * FROM rt1 WHERE (TRIM(CAST(x'f928' AS BLOB), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ORDER BY (((x'5ab8' IN (rt1.c2))) IS FALSE) ASC, CAST(((rt1.c2) IS FALSE) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(x'f928' AS BLOB), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((x'5ab8' IN (rt1.c2))) IS FALSE) ASC, CAST(((rt1.c2) IS FALSE) AS NUMERIC) DESC);
SELECT * FROM rt1 WHERE (TRIM(CAST(x'f928' AS BLOB), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))) ORDER BY (((x'5ab8' IN (rt1.c2))) IS FALSE) ASC, CAST(((rt1.c2) IS FALSE) AS NUMERIC) DESC;
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((rt1.c2 IN (rt1.c2)))AND(rt1.c0))) ORDER BY ((rt1.c2 COLLATE RTRIM)<(((vt50.c0) BETWEEN (rt1.c0) AND (vt50.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt1.c2)))AND(rt1.c0))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((rt1.c2 COLLATE RTRIM)<(((vt50.c0) BETWEEN (rt1.c0) AND (vt50.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((rt1.c2 IN (rt1.c2)))AND(rt1.c0))) ORDER BY ((rt1.c2 COLLATE RTRIM)<(((vt50.c0) BETWEEN (rt1.c0) AND (vt50.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt1.c2)))AND(rt1.c0))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((rt1.c2 COLLATE RTRIM)<(((vt50.c0) BETWEEN (rt1.c0) AND (vt50.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((rt1.c2 IN (rt1.c2)))AND(rt1.c0))) ORDER BY ((rt1.c2 COLLATE RTRIM)<(((vt50.c0) BETWEEN (rt1.c0) AND (vt50.c0))))  NULLS LAST;
SELECT ALL * FROM vt50, rt1 WHERE ('-1763923022');
SELECT SUM(count) FROM (SELECT (('-1763923022') IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE ('-1763923022');
SELECT SUM(count) FROM (SELECT (('-1763923022') IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE ('-1763923022');
SELECT ALL * FROM rt1, vt50 WHERE (rt1.c2) ORDER BY CAST((rt1.c2 IN (rt1.c2, rt1.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt50 ORDER BY CAST((rt1.c2 IN (rt1.c2, rt1.c2)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt50 WHERE (rt1.c2) ORDER BY CAST((rt1.c2 IN (rt1.c2, rt1.c2)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt50 ORDER BY CAST((rt1.c2 IN (rt1.c2, rt1.c2)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt50 WHERE (rt1.c2) ORDER BY CAST((rt1.c2 IN (rt1.c2, rt1.c2)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c1 AS REAL))||(CASE WHEN NULL THEN vt50.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))||(CASE WHEN NULL THEN vt50.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c1 AS REAL))||(CASE WHEN NULL THEN vt50.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))||(CASE WHEN NULL THEN vt50.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c1 AS REAL))||(CASE WHEN NULL THEN vt50.c0 ELSE rt1.c0 END)));
SELECT ALL * FROM vt50, rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (x'66a5'))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))>=((((rt1.c0)) BETWEEN ((vt50.c0)) AND ((rt1.c2))))), ((((((rt1.c0)AND('⟧*Vd祝m')))OR(vt50.c0)))==(((((rt1.c0)AND(rt1.c0)))OR(NULL))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(x'') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (x'66a5'))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))>=((((rt1.c0)) BETWEEN ((vt50.c0)) AND ((rt1.c2))))), ((((((rt1.c0)AND('⟧*Vd祝m')))OR(vt50.c0)))=(((((rt1.c0)AND(rt1.c0)))OR(NULL))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(x'') ASC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (x'66a5'))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))>=((((rt1.c0)) BETWEEN ((vt50.c0)) AND ((rt1.c2))))), ((((((rt1.c0)AND('⟧*Vd祝m')))OR(vt50.c0)))==(((((rt1.c0)AND(rt1.c0)))OR(NULL))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(x'') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (x'66a5'))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))>=((((rt1.c0)) BETWEEN ((vt50.c0)) AND ((rt1.c2))))), ((((((rt1.c0)AND('⟧*Vd祝m')))OR(vt50.c0)))=(((((rt1.c0)AND(rt1.c0)))OR(NULL))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(x'') ASC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (x'66a5'))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))>=((((rt1.c0)) BETWEEN ((vt50.c0)) AND ((rt1.c2))))), ((((((rt1.c0)AND('⟧*Vd祝m')))OR(vt50.c0)))==(((((rt1.c0)AND(rt1.c0)))OR(NULL))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(x'') ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt50 WHERE (COALESCE(DISTINCT ((vt50.c0)GLOB(vt50.c0)), CAST(rt1.c1 AS INTEGER), vt50.c0, rt1.c1)) ORDER BY CAST(CASE WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN vt50.c0 WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt50.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt50.c0)GLOB(vt50.c0)), CAST(rt1.c1 AS INTEGER), vt50.c0, rt1.c1)) IS TRUE)  as count FROM rt1, vt50 ORDER BY CAST(CASE WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN vt50.c0 WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt50.c0 END AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt50 WHERE (COALESCE(DISTINCT ((vt50.c0)GLOB(vt50.c0)), CAST(rt1.c1 AS INTEGER), vt50.c0, rt1.c1)) ORDER BY CAST(CASE WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN vt50.c0 WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt50.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt50.c0)GLOB(vt50.c0)), CAST(rt1.c1 AS INTEGER), vt50.c0, rt1.c1)) IS TRUE)  as count FROM rt1, vt50 ORDER BY CAST(CASE WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN vt50.c0 WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt50.c0 END AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt50 WHERE (COALESCE(DISTINCT ((vt50.c0)GLOB(vt50.c0)), CAST(rt1.c1 AS INTEGER), vt50.c0, rt1.c1)) ORDER BY CAST(CASE WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN vt50.c0 WHEN vt50.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt50.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (((x'')==(rt1.c0))) ORDER BY ((((((vt50.c0)OR(vt50.c0)))OR(rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((x'')=(rt1.c0))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50 ORDER BY ((((((vt50.c0)OR(vt50.c0)))OR(rt1.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (((x'')==(rt1.c0))) ORDER BY ((((((vt50.c0)OR(vt50.c0)))OR(rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((x'')=(rt1.c0))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50 ORDER BY ((((((vt50.c0)OR(vt50.c0)))OR(rt1.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt50 WHERE (((x'')==(rt1.c0))) ORDER BY ((((((vt50.c0)OR(vt50.c0)))OR(rt1.c2))) IS FALSE);
SELECT * FROM rt1, vt50 WHERE ((('0.2635203474802609' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('0.2635203474802609' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((('0.2635203474802609' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('0.2635203474802609' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((('0.2635203474802609' COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))<<('')));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))<<(''))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))<<('')));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))<<(''))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))<<('')));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON rt1.c0 WHERE ((((((vt50.c0, rt1.c1, 0x7de439f5)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt50.c0, rt1.c0, vt50.c0))))+(((rt1.c1) IS FALSE)))) ORDER BY (+ (((rt1.c1) IS TRUE)))  NULLS LAST, ((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM ASC  NULLS LAST, ((((vt50.c0)LIKE(rt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((vt50.c0, rt1.c1, 0x7de439f5)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt50.c0, rt1.c0, vt50.c0))))+(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON rt1.c0 ORDER BY (+ (((rt1.c1) IS TRUE)))  NULLS LAST, ((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM ASC  NULLS LAST, ((((vt50.c0)LIKE(rt1.c2))) NOTNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON rt1.c0 WHERE ((((((vt50.c0, rt1.c1, 0x7de439f5)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt50.c0, rt1.c0, vt50.c0))))+(((rt1.c1) IS FALSE)))) ORDER BY (+ (((rt1.c1) IS TRUE)))  NULLS LAST, ((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM ASC  NULLS LAST, ((((vt50.c0)LIKE(rt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((((vt50.c0, rt1.c1, 0x7de439f5)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt50.c0, rt1.c0, vt50.c0))))+(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON rt1.c0 ORDER BY (+ (((rt1.c1) IS TRUE)))  NULLS LAST, ((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM ASC  NULLS LAST, ((((vt50.c0)LIKE(rt1.c2))) NOTNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON rt1.c0 WHERE ((((((vt50.c0, rt1.c1, 0x7de439f5)) BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt50.c0, rt1.c0, vt50.c0))))+(((rt1.c1) IS FALSE)))) ORDER BY (+ (((rt1.c1) IS TRUE)))  NULLS LAST, ((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE RTRIM ASC  NULLS LAST, ((((vt50.c0)LIKE(rt1.c2))) NOTNULL);
SELECT ALL * FROM rt1 WHERE (((NULL)GLOB((NOT (rt1.c1))))) ORDER BY (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR((rt1.c0 IN ()))))AND((~ (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR((rt1.c0 IN ()))))AND((~ (rt1.c1)))) ASC);
SELECT ALL * FROM rt1 WHERE (((NULL)GLOB((NOT (rt1.c1))))) ORDER BY (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR((rt1.c0 IN ()))))AND((~ (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR((rt1.c0 IN ()))))AND((~ (rt1.c1)))) ASC);
SELECT ALL * FROM rt1 WHERE (((NULL)GLOB((NOT (rt1.c1))))) ORDER BY (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))OR((rt1.c0 IN ()))))AND((~ (rt1.c1)))) ASC;
SELECT * FROM vt50, rt1 WHERE (((CAST(rt1.c2 AS BLOB)) BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB)) BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (rt1.c2))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((CAST(rt1.c2 AS BLOB)) BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB)) BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (rt1.c2))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((CAST(rt1.c2 AS BLOB)) BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) AND (rt1.c2)));
SELECT ALL * FROM vt50 WHERE (((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) NOT BETWEEN (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) NOT BETWEEN (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) NOT BETWEEN (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) NOT BETWEEN (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) NOT BETWEEN (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)));
SELECT * FROM rt1 CROSS JOIN vt50 ON ((((rt1.c2)GLOB(rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((+ (rt1.c2)))) WHERE (NULL) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('Z')))>=(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)))) ASC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)>(((((vt50.c0)AND(rt1.c2)))AND(vt50.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON ((((rt1.c2)GLOB(rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((+ (rt1.c2)))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('Z')))>=(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)))) ASC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)>(((((vt50.c0)AND(rt1.c2)))AND(vt50.c0)))) ASC  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt50 ON ((((rt1.c2)GLOB(rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((+ (rt1.c2)))) WHERE (NULL) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('Z')))>=(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)))) ASC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)>(((((vt50.c0)AND(rt1.c2)))AND(vt50.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON ((((rt1.c2)GLOB(rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((+ (rt1.c2)))) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('Z')))>=(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)))) ASC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)>(((((vt50.c0)AND(rt1.c2)))AND(vt50.c0)))) ASC  NULLS LAST);
SELECT * FROM rt1 CROSS JOIN vt50 ON ((((rt1.c2)GLOB(rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((+ (rt1.c2)))) WHERE (NULL) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c2) AND ('Z')))>=(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt50.c0)))) ASC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)>(((((vt50.c0)AND(rt1.c2)))AND(vt50.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt50, rt1 WHERE (((((((rt1.c0)OR(NULL)))OR(rt1.c0)))/(((0.3967174204213254)LIKE(rt1.c2))))) ORDER BY (((vt50.c0)) NOT BETWEEN (((((vt50.c0, vt50.c0, vt50.c0))=((rt1.c1, rt1.c1, rt1.c1))))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 ELSE rt1.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(NULL)))OR(rt1.c0)))/(((0.3967174204213254)LIKE(rt1.c2))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((vt50.c0)) NOT BETWEEN (((((vt50.c0, vt50.c0, vt50.c0))==((rt1.c1, rt1.c1, rt1.c1))))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 ELSE rt1.c1 END)))  NULLS FIRST);
SELECT ALL * FROM vt50, rt1 WHERE (((((((rt1.c0)OR(NULL)))OR(rt1.c0)))/(((0.3967174204213254)LIKE(rt1.c2))))) ORDER BY (((vt50.c0)) NOT BETWEEN (((((vt50.c0, vt50.c0, vt50.c0))=((rt1.c1, rt1.c1, rt1.c1))))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 ELSE rt1.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(NULL)))OR(rt1.c0)))/(((0.3967174204213254)LIKE(rt1.c2))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((vt50.c0)) NOT BETWEEN (((((vt50.c0, vt50.c0, vt50.c0))==((rt1.c1, rt1.c1, rt1.c1))))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 ELSE rt1.c1 END)))  NULLS FIRST);
SELECT ALL * FROM vt50, rt1 WHERE (((((((rt1.c0)OR(NULL)))OR(rt1.c0)))/(((0.3967174204213254)LIKE(rt1.c2))))) ORDER BY (((vt50.c0)) NOT BETWEEN (((((vt50.c0, vt50.c0, vt50.c0))=((rt1.c1, rt1.c1, rt1.c1))))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 ELSE rt1.c1 END)))  NULLS FIRST;
SELECT * FROM vt50, rt1 WHERE (((((((vt50.c0) IS TRUE))OR(vt50.c0)))OR((vt50.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt50.c0) IS TRUE))OR(vt50.c0)))OR((vt50.c0 IN ())))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((((vt50.c0) IS TRUE))OR(vt50.c0)))OR((vt50.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt50.c0) IS TRUE))OR(vt50.c0)))OR((vt50.c0 IN ())))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((((vt50.c0) IS TRUE))OR(vt50.c0)))OR((vt50.c0 IN ()))));
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN (vt50.c0, vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) ELSE vt50.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN (vt50.c0, vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) ELSE vt50.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN (vt50.c0, vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) ELSE vt50.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN (vt50.c0, vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) ELSE vt50.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN vt50.c0 COLLATE BINARY THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) WHEN (NOT (vt50.c0)) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN (vt50.c0, vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) ELSE vt50.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c0) ISNULL)) BETWEEN (CAST(vt50.c0 AS NUMERIC)) AND (((rt1.c1) ISNULL)))) ORDER BY (((rt1.c1 IN (vt50.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt50.c0))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, TRIM(DISTINCT ((rt1.c1) IS FALSE), ((rt1.c1)*(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL)) BETWEEN (CAST(vt50.c0 AS NUMERIC)) AND (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c1 IN (vt50.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt50.c0))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, TRIM(DISTINCT ((rt1.c1) IS FALSE), ((rt1.c1)*(rt1.c1))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c0) ISNULL)) BETWEEN (CAST(vt50.c0 AS NUMERIC)) AND (((rt1.c1) ISNULL)))) ORDER BY (((rt1.c1 IN (vt50.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt50.c0))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, TRIM(DISTINCT ((rt1.c1) IS FALSE), ((rt1.c1)*(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL)) BETWEEN (CAST(vt50.c0 AS NUMERIC)) AND (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c1 IN (vt50.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt50.c0))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, TRIM(DISTINCT ((rt1.c1) IS FALSE), ((rt1.c1)*(rt1.c1))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c0) ISNULL)) BETWEEN (CAST(vt50.c0 AS NUMERIC)) AND (((rt1.c1) ISNULL)))) ORDER BY (((rt1.c1 IN (vt50.c0))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt50.c0))) AND (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, TRIM(DISTINCT ((rt1.c1) IS FALSE), ((rt1.c1)*(rt1.c1)));
SELECT ALL * FROM rt1 WHERE (DATETIME((rt1.c1 IN ()), PRINTF(rt1.c1, rt1.c2, rt1.c1), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), rt1.c2, json_insert(rt1.c2, rt1.c2, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((rt1.c1 IN ()), PRINTF(rt1.c1, rt1.c2, rt1.c1), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), rt1.c2, json_insert(rt1.c2, rt1.c2, rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (DATETIME((rt1.c1 IN ()), PRINTF(rt1.c1, rt1.c2, rt1.c1), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), rt1.c2, json_insert(rt1.c2, rt1.c2, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((rt1.c1 IN ()), PRINTF(rt1.c1, rt1.c2, rt1.c1), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), rt1.c2, json_insert(rt1.c2, rt1.c2, rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0))>((rt1.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))>((rt1.c2)))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0))>((rt1.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))>((rt1.c2)))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0))>((rt1.c2)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ()));
SELECT * FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (vt50.c0);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((HEX(DISTINCT vt50.c0))OR(NULL)))OR(-764223135))) ORDER BY ((((vt50.c0)OR(vt50.c0)))IS NOT(QUOTE(vt50.c0))), vt50.c0  NULLS LAST, DATETIME((vt50.c0 IN (vt50.c0)), CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END, ((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)), ((vt50.c0)GLOB(vt50.c0)), ((vt50.c0)-(vt50.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT vt50.c0))OR(NULL)))OR(-764223135))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0)OR(vt50.c0)))IS NOT(QUOTE(vt50.c0))), vt50.c0  NULLS LAST, DATETIME((vt50.c0 IN (vt50.c0)), CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END, ((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)), ((vt50.c0)GLOB(vt50.c0)), ((vt50.c0)-(vt50.c0))) DESC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((HEX(DISTINCT vt50.c0))OR(NULL)))OR(-764223135))) ORDER BY ((((vt50.c0)OR(vt50.c0)))IS NOT(QUOTE(vt50.c0))), vt50.c0  NULLS LAST, DATETIME((vt50.c0 IN (vt50.c0)), CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END, ((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)), ((vt50.c0)GLOB(vt50.c0)), ((vt50.c0)-(vt50.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(DISTINCT vt50.c0))OR(NULL)))OR(-764223135))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0)OR(vt50.c0)))IS NOT(QUOTE(vt50.c0))), vt50.c0  NULLS LAST, DATETIME((vt50.c0 IN (vt50.c0)), CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END, ((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)), ((vt50.c0)GLOB(vt50.c0)), ((vt50.c0)-(vt50.c0))) DESC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((HEX(DISTINCT vt50.c0))OR(NULL)))OR(-764223135))) ORDER BY ((((vt50.c0)OR(vt50.c0)))IS NOT(QUOTE(vt50.c0))), vt50.c0  NULLS LAST, DATETIME((vt50.c0 IN (vt50.c0)), CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END, ((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)), ((vt50.c0)GLOB(vt50.c0)), ((vt50.c0)-(vt50.c0))) DESC;
SELECT COUNT(*) FROM rt1, vt50 WHERE (((COALESCE(rt1.c1, rt1.c1, rt1.c2, vt50.c0))AND(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt1.c1, rt1.c1, rt1.c2, vt50.c0))AND(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((COALESCE(rt1.c1, rt1.c1, rt1.c2, vt50.c0))AND(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt1.c1, rt1.c1, rt1.c2, vt50.c0))AND(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((COALESCE(rt1.c1, rt1.c1, rt1.c2, vt50.c0))AND(((NULL) IS FALSE))));
SELECT * FROM rt1 WHERE (((((rt1.c0)-(rt1.c0))) NOTNULL)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>>(x''))  NULLS LAST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)-(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>>(x''))  NULLS LAST, rt1.c0);
SELECT * FROM rt1 WHERE (((((rt1.c0)-(rt1.c0))) NOTNULL)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>>(x''))  NULLS LAST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)-(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>>(x''))  NULLS LAST, rt1.c0);
SELECT * FROM rt1 WHERE (((((rt1.c0)-(rt1.c0))) NOTNULL)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))>>(x''))  NULLS LAST, rt1.c0;
SELECT * FROM rt1 WHERE ((((rt1.c1)=(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND ('')), (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY 0.8119012838976183 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)==(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND ('')), (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY 0.8119012838976183 DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c1)=(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND ('')), (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY 0.8119012838976183 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)==(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND ('')), (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY 0.8119012838976183 DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c1)=(rt1.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND ('')), (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY 0.8119012838976183 DESC  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)-(rt1.c0)) IN ()) WHERE (((NOT (vt50.c0)) IN (((rt1.c0) NOT NULL), ((vt50.c0) BETWEEN (x'') AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt50.c0)) IN (((rt1.c0) NOT NULL), ((vt50.c0) BETWEEN (x'') AND (vt50.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)-(rt1.c0)) IN ()));
SELECT * FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)-(rt1.c0)) IN ()) WHERE (((NOT (vt50.c0)) IN (((rt1.c0) NOT NULL), ((vt50.c0) BETWEEN (x'') AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt50.c0)) IN (((rt1.c0) NOT NULL), ((vt50.c0) BETWEEN (x'') AND (vt50.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)-(rt1.c0)) IN ()));
SELECT * FROM rt1 FULL OUTER JOIN vt50 ON (((rt1.c0)-(rt1.c0)) IN ()) WHERE (((NOT (vt50.c0)) IN (((rt1.c0) NOT NULL), ((vt50.c0) BETWEEN (x'') AND (vt50.c0)))));
SELECT * FROM vt50, rt1 WHERE (((((((((((rt1.c0)OR(vt50.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(vt50.c0))) ISNULL)) ORDER BY vt50.c0, ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))%(((rt1.c0)>>(vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(vt50.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(vt50.c0))) ISNULL)) IS TRUE)  as count FROM vt50, rt1 ORDER BY vt50.c0, ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))%(((rt1.c0)>>(vt50.c0)))));
SELECT * FROM vt50, rt1 WHERE (((((((((((rt1.c0)OR(vt50.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(vt50.c0))) ISNULL)) ORDER BY vt50.c0, ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))%(((rt1.c0)>>(vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)OR(vt50.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(vt50.c0))) ISNULL)) IS TRUE)  as count FROM vt50, rt1 ORDER BY vt50.c0, ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))%(((rt1.c0)>>(vt50.c0)))));
SELECT * FROM vt50, rt1 WHERE (((((((((((rt1.c0)OR(vt50.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(vt50.c0))) ISNULL)) ORDER BY vt50.c0, ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))%(((rt1.c0)>>(vt50.c0))));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c2)))))OR(((rt1.c0) ISNULL))))OR(IFNULL(rt1.c0, rt1.c2))))OR(((rt1.c2)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c2)))))OR(((rt1.c0) ISNULL))))OR(IFNULL(rt1.c0, rt1.c2))))OR(((rt1.c2)!=(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c2)))))OR(((rt1.c0) ISNULL))))OR(IFNULL(rt1.c0, rt1.c2))))OR(((rt1.c2)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c2)))))OR(((rt1.c0) ISNULL))))OR(IFNULL(rt1.c0, rt1.c2))))OR(((rt1.c2)!=(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)))AND((NOT (rt1.c2)))))OR(((rt1.c0) ISNULL))))OR(IFNULL(rt1.c0, rt1.c2))))OR(((rt1.c2)!=(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE '-1379210846'  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)==((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-1379210846'  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE '-1379210846'  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)==((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '-1379210846'  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE '-1379210846'  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)==((rt1.c1 IN ()))));
SELECT * FROM vt50 WHERE (((SQLITE_VERSION()) NOT BETWEEN (vt50.c0) AND ((((vt50.c0)) BETWEEN ((x'')) AND ((vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) NOT BETWEEN (vt50.c0) AND ((((vt50.c0)) BETWEEN ((x'')) AND ((vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (((SQLITE_VERSION()) NOT BETWEEN (vt50.c0) AND ((((vt50.c0)) BETWEEN ((x'')) AND ((vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) NOT BETWEEN (vt50.c0) AND ((((vt50.c0)) BETWEEN ((x'')) AND ((vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (((SQLITE_VERSION()) NOT BETWEEN (vt50.c0) AND ((((vt50.c0)) BETWEEN ((x'')) AND ((vt50.c0))))));
SELECT ALL * FROM rt1 NOT INDEXED INNER JOIN vt50 ON (((rt1.c2)*(vt50.c0)) IN ()) WHERE ((((rt1.c0)) BETWEEN (((rt1.c0 IN ()))) AND ((rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((rt1.c0 IN ()))) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON (((rt1.c2)*(vt50.c0)) IN ()));
SELECT ALL * FROM rt1 NOT INDEXED INNER JOIN vt50 ON (((rt1.c2)*(vt50.c0)) IN ()) WHERE ((((rt1.c0)) BETWEEN (((rt1.c0 IN ()))) AND ((rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((rt1.c0 IN ()))) AND ((rt1.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON (((rt1.c2)*(vt50.c0)) IN ()));
SELECT ALL * FROM rt1 NOT INDEXED INNER JOIN vt50 ON (((rt1.c2)*(vt50.c0)) IN ()) WHERE ((((rt1.c0)) BETWEEN (((rt1.c0 IN ()))) AND ((rt1.c0))));
SELECT * FROM vt50, rt1 WHERE (((((rt1.c2)/(vt50.c0))) NOTNULL)) ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)/(vt50.c0))) NOTNULL)) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0))))));
SELECT * FROM vt50, rt1 WHERE (((((rt1.c2)/(vt50.c0))) NOTNULL)) ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)/(vt50.c0))) NOTNULL)) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0))))));
SELECT * FROM vt50, rt1 WHERE (((((rt1.c2)/(vt50.c0))) NOTNULL)) ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt50.c0) BETWEEN (rt1.c0) AND (rt1.c2)))) AND ((((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c0)))));
SELECT * FROM rt1, vt50 WHERE ((- (((rt1.c0)>(vt50.c0))))) ORDER BY CASE WHEN rt1.c0 THEN ((rt1.c1)||(rt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)>(vt50.c0))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN rt1.c0 THEN ((rt1.c1)||(rt1.c0)) END  NULLS FIRST);
SELECT * FROM rt1, vt50 WHERE ((- (((rt1.c0)>(vt50.c0))))) ORDER BY CASE WHEN rt1.c0 THEN ((rt1.c1)||(rt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)>(vt50.c0))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN rt1.c0 THEN ((rt1.c1)||(rt1.c0)) END  NULLS FIRST);
SELECT * FROM rt1, vt50 WHERE ((- (((rt1.c0)>(vt50.c0))))) ORDER BY CASE WHEN rt1.c0 THEN ((rt1.c1)||(rt1.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0)) NOT BETWEEN ((highlight(rt1.c1, rt1.c0, vt50.c0, rt1.c2))) AND ((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 ELSE rt1.c0 END)))) ORDER BY '-158056456' COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((highlight(rt1.c1, rt1.c0, vt50.c0, rt1.c2))) AND ((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY '-158056456' COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0)) NOT BETWEEN ((highlight(rt1.c1, rt1.c0, vt50.c0, rt1.c2))) AND ((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 ELSE rt1.c0 END)))) ORDER BY '-158056456' COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((highlight(rt1.c1, rt1.c0, vt50.c0, rt1.c2))) AND ((CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY '-158056456' COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0) NOT BETWEEN (NULL) AND ('-1379210846'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0) NOT BETWEEN (NULL) AND ('-1379210846'))) IS TRUE)) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0) NOT BETWEEN (NULL) AND ('-1379210846'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0) NOT BETWEEN (NULL) AND ('-1379210846'))) IS TRUE)) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0) NOT BETWEEN (NULL) AND ('-1379210846'))) IS TRUE));
SELECT COUNT(*) FROM vt50 WHERE (((((x'')AND((+ (vt50.c0)))))AND(vt50.c0))) ORDER BY CAST(vt50.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((+ (vt50.c0)))))AND(vt50.c0))) IS TRUE)  as count FROM vt50 ORDER BY CAST(vt50.c0 AS TEXT) DESC);
SELECT COUNT(*) FROM vt50 WHERE (((((x'')AND((+ (vt50.c0)))))AND(vt50.c0))) ORDER BY CAST(vt50.c0 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((+ (vt50.c0)))))AND(vt50.c0))) IS TRUE)  as count FROM vt50 ORDER BY CAST(vt50.c0 AS TEXT) DESC);
SELECT COUNT(*) FROM vt50 WHERE (((((x'')AND((+ (vt50.c0)))))AND(vt50.c0))) ORDER BY CAST(vt50.c0 AS TEXT) DESC;
SELECT * FROM rt1, vt50 WHERE ((('-175496151') BETWEEN ((((vt50.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) AND (CAST(vt50.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('-175496151') BETWEEN ((((vt50.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) AND (CAST(vt50.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((('-175496151') BETWEEN ((((vt50.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) AND (CAST(vt50.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((('-175496151') BETWEEN ((((vt50.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) AND (CAST(vt50.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((('-175496151') BETWEEN ((((vt50.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) AND (CAST(vt50.c0 AS BLOB))));
SELECT * FROM vt50 CROSS JOIN rt1 ON CAST((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS INTEGER) WHERE ((~ (vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON CAST((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS INTEGER));
SELECT * FROM vt50 CROSS JOIN rt1 ON CAST((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS INTEGER) WHERE ((~ (vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON CAST((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS INTEGER));
SELECT * FROM vt50 CROSS JOIN rt1 ON CAST((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) AS INTEGER) WHERE ((~ (vt50.c0 COLLATE BINARY)));
SELECT ALL * FROM vt50 WHERE (((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) BETWEEN (((vt50.c0) NOT NULL)) AND ((((vt50.c0))==((vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) BETWEEN (((vt50.c0) NOT NULL)) AND ((((vt50.c0))=((vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) BETWEEN (((vt50.c0) NOT NULL)) AND ((((vt50.c0))==((vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) BETWEEN (((vt50.c0) NOT NULL)) AND ((((vt50.c0))=((vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) BETWEEN (((vt50.c0) NOT NULL)) AND ((((vt50.c0))==((vt50.c0))))));
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON (NOT (vt50.c0)) COLLATE BINARY WHERE (((((((((((((((rt1.c0)<=(rt1.c0)))AND(vt50.c0 COLLATE BINARY)))AND(TRIM(DISTINCT vt50.c0, rt1.c1))))AND(((rt1.c1) NOT NULL))))OR(((rt1.c1) NOT NULL))))OR((vt50.c0 IN ()))))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0)<=(rt1.c0)))AND(vt50.c0 COLLATE BINARY)))AND(TRIM(DISTINCT vt50.c0, rt1.c1))))AND(((rt1.c1) NOT NULL))))OR(((rt1.c1) NOT NULL))))OR((vt50.c0 IN ()))))OR(rt1.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON (NOT (vt50.c0)) COLLATE BINARY);
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON (NOT (vt50.c0)) COLLATE BINARY WHERE (((((((((((((((rt1.c0)<=(rt1.c0)))AND(vt50.c0 COLLATE BINARY)))AND(TRIM(DISTINCT vt50.c0, rt1.c1))))AND(((rt1.c1) NOT NULL))))OR(((rt1.c1) NOT NULL))))OR((vt50.c0 IN ()))))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0)<=(rt1.c0)))AND(vt50.c0 COLLATE BINARY)))AND(TRIM(DISTINCT vt50.c0, rt1.c1))))AND(((rt1.c1) NOT NULL))))OR(((rt1.c1) NOT NULL))))OR((vt50.c0 IN ()))))OR(rt1.c0))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON (NOT (vt50.c0)) COLLATE BINARY);
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON (NOT (vt50.c0)) COLLATE BINARY WHERE (((((((((((((((rt1.c0)<=(rt1.c0)))AND(vt50.c0 COLLATE BINARY)))AND(TRIM(DISTINCT vt50.c0, rt1.c1))))AND(((rt1.c1) NOT NULL))))OR(((rt1.c1) NOT NULL))))OR((vt50.c0 IN ()))))OR(rt1.c0)));
SELECT ALL * FROM vt50 WHERE (((((((((CAST(vt50.c0 AS TEXT))AND(((vt50.c0) IS FALSE))))AND(((vt50.c0)AND(vt50.c0)))))OR(CAST(x'' AS INTEGER))))OR(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END))) ORDER BY (vt50.c0 IN (CAST(vt50.c0 AS BLOB), ((x'c51f65e5') NOT BETWEEN (vt50.c0) AND (vt50.c0))))  NULLS FIRST, (+ (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt50.c0 AS TEXT))AND(((vt50.c0) IS FALSE))))AND(((vt50.c0)AND(vt50.c0)))))OR(CAST(x'' AS INTEGER))))OR(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50 ORDER BY (vt50.c0 IN (CAST(vt50.c0 AS BLOB), ((x'c51f65e5') NOT BETWEEN (vt50.c0) AND (vt50.c0))))  NULLS FIRST, (+ (x'')) ASC  NULLS LAST);
SELECT ALL * FROM vt50 WHERE (((((((((CAST(vt50.c0 AS TEXT))AND(((vt50.c0) IS FALSE))))AND(((vt50.c0)AND(vt50.c0)))))OR(CAST(x'' AS INTEGER))))OR(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END))) ORDER BY (vt50.c0 IN (CAST(vt50.c0 AS BLOB), ((x'c51f65e5') NOT BETWEEN (vt50.c0) AND (vt50.c0))))  NULLS FIRST, (+ (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt50.c0 AS TEXT))AND(((vt50.c0) IS FALSE))))AND(((vt50.c0)AND(vt50.c0)))))OR(CAST(x'' AS INTEGER))))OR(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50 ORDER BY (vt50.c0 IN (CAST(vt50.c0 AS BLOB), ((x'c51f65e5') NOT BETWEEN (vt50.c0) AND (vt50.c0))))  NULLS FIRST, (+ (x'')) ASC  NULLS LAST);
SELECT ALL * FROM vt50 WHERE (((((((((CAST(vt50.c0 AS TEXT))AND(((vt50.c0) IS FALSE))))AND(((vt50.c0)AND(vt50.c0)))))OR(CAST(x'' AS INTEGER))))OR(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END))) ORDER BY (vt50.c0 IN (CAST(vt50.c0 AS BLOB), ((x'c51f65e5') NOT BETWEEN (vt50.c0) AND (vt50.c0))))  NULLS FIRST, (+ (x'')) ASC  NULLS LAST;
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN vt50.c0 THEN ((vt50.c0)%(rt1.c2)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt50.c0 THEN ((vt50.c0)%(rt1.c2)) ELSE NULL END) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN vt50.c0 THEN ((vt50.c0)%(rt1.c2)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt50.c0 THEN ((vt50.c0)%(rt1.c2)) ELSE NULL END) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN vt50.c0 THEN ((vt50.c0)%(rt1.c2)) ELSE NULL END);
SELECT * FROM vt50 WHERE (CASE ((vt50.c0)|(x'f7c9'))  WHEN ((vt50.c0)<(vt50.c0)) THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) ELSE ((((vt50.c0)OR(x'220f')))OR(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)|(x'f7c9'))  WHEN ((vt50.c0)<(vt50.c0)) THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) ELSE ((((vt50.c0)OR(x'220f')))OR(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CASE ((vt50.c0)|(x'f7c9'))  WHEN ((vt50.c0)<(vt50.c0)) THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) ELSE ((((vt50.c0)OR(x'220f')))OR(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)|(x'f7c9'))  WHEN ((vt50.c0)<(vt50.c0)) THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) ELSE ((((vt50.c0)OR(x'220f')))OR(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CASE ((vt50.c0)|(x'f7c9'))  WHEN ((vt50.c0)<(vt50.c0)) THEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) ELSE ((((vt50.c0)OR(x'220f')))OR(vt50.c0)) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt50 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (rt1.c2)) WHERE (CASE NULL  WHEN rt1.c2 THEN (+ (rt1.c1)) END) ORDER BY LOWER(DISTINCT (vt50.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN rt1.c2 THEN (+ (rt1.c1)) END) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (rt1.c2)) ORDER BY LOWER(DISTINCT (vt50.c0 IN ())));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt50 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (rt1.c2)) WHERE (CASE NULL  WHEN rt1.c2 THEN (+ (rt1.c1)) END) ORDER BY LOWER(DISTINCT (vt50.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN rt1.c2 THEN (+ (rt1.c1)) END) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (rt1.c2)) ORDER BY LOWER(DISTINCT (vt50.c0 IN ())));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt50 ON (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (CAST(rt1.c0 AS INTEGER)) AND (rt1.c2)) WHERE (CASE NULL  WHEN rt1.c2 THEN (+ (rt1.c1)) END) ORDER BY LOWER(DISTINCT (vt50.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (CAST(CAST('q,?i' AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('q,?i' AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (CAST(CAST('q,?i' AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('q,?i' AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (CAST(CAST('q,?i' AS BLOB) AS NUMERIC));
SELECT * FROM vt50, rt1 WHERE (rt1.c1) ORDER BY 127368801 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt50, rt1 ORDER BY 127368801 DESC  NULLS LAST);
SELECT * FROM vt50, rt1 WHERE (rt1.c1) ORDER BY 127368801 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt50, rt1 ORDER BY 127368801 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((vt50.c0)IS(NULL))) ORDER BY (((~ (rt1.c0)))|(((rt1.c0)|(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt50.c0)IS(NULL))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((~ (rt1.c0)))|(((rt1.c0)|(rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((vt50.c0)IS(NULL))) ORDER BY (((~ (rt1.c0)))|(((rt1.c0)|(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt50.c0)IS(NULL))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((~ (rt1.c0)))|(((rt1.c0)|(rt1.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((vt50.c0)IS(NULL))) ORDER BY (((~ (rt1.c0)))|(((rt1.c0)|(rt1.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((+ (INSTR(rt1.c1, rt1.c2)))) ORDER BY (((((((((rt1.c2)OR(0.8968268089110424)))OR(vt50.c0)))AND('1351623868')))OR(rt1.c1)) IN ()) DESC, CASE rt1.c2  WHEN ((rt1.c1) NOT NULL) THEN CAST(vt50.c0 AS TEXT) ELSE CAST(x'' AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (INSTR(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((((((rt1.c2)OR(0.8968268089110424)))OR(vt50.c0)))AND('1351623868')))OR(rt1.c1)) IN ()) DESC, CASE rt1.c2  WHEN ((rt1.c1) NOT NULL) THEN CAST(vt50.c0 AS TEXT) ELSE CAST(x'' AS TEXT) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((+ (INSTR(rt1.c1, rt1.c2)))) ORDER BY (((((((((rt1.c2)OR(0.8968268089110424)))OR(vt50.c0)))AND('1351623868')))OR(rt1.c1)) IN ()) DESC, CASE rt1.c2  WHEN ((rt1.c1) NOT NULL) THEN CAST(vt50.c0 AS TEXT) ELSE CAST(x'' AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (INSTR(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((((((rt1.c2)OR(0.8968268089110424)))OR(vt50.c0)))AND('1351623868')))OR(rt1.c1)) IN ()) DESC, CASE rt1.c2  WHEN ((rt1.c1) NOT NULL) THEN CAST(vt50.c0 AS TEXT) ELSE CAST(x'' AS TEXT) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((+ (INSTR(rt1.c1, rt1.c2)))) ORDER BY (((((((((rt1.c2)OR(0.8968268089110424)))OR(vt50.c0)))AND('1351623868')))OR(rt1.c1)) IN ()) DESC, CASE rt1.c2  WHEN ((rt1.c1) NOT NULL) THEN CAST(vt50.c0 AS TEXT) ELSE CAST(x'' AS TEXT) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON (~ ((- (x'793b4cc3')))) WHERE ((NOT ((((rt1.c0))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c0))>((rt1.c2)))))) IS TRUE)  as count FROM vt50 INNER JOIN rt1 ON (~ ((- (x'793b4cc3')))));
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON (~ ((- (x'793b4cc3')))) WHERE ((NOT ((((rt1.c0))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c0))>((rt1.c2)))))) IS TRUE)  as count FROM vt50 INNER JOIN rt1 ON (~ ((- (x'793b4cc3')))));
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON (~ ((- (x'793b4cc3')))) WHERE ((NOT ((((rt1.c0))>((rt1.c2))))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE BINARY) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE BINARY) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c2 COLLATE BINARY);
SELECT * FROM vt50, rt1 WHERE ((((((((((- (x'')))AND(((rt1.c1) NOT NULL))))OR((rt1.c2 IN ()))))AND(CAST(vt50.c0 AS TEXT))))AND(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (x'')))AND(((rt1.c1) NOT NULL))))OR((rt1.c2 IN ()))))AND(CAST(vt50.c0 AS TEXT))))AND(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((((((((((- (x'')))AND(((rt1.c1) NOT NULL))))OR((rt1.c2 IN ()))))AND(CAST(vt50.c0 AS TEXT))))AND(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (x'')))AND(((rt1.c1) NOT NULL))))OR((rt1.c2 IN ()))))AND(CAST(vt50.c0 AS TEXT))))AND(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((((((((((- (x'')))AND(((rt1.c1) NOT NULL))))OR((rt1.c2 IN ()))))AND(CAST(vt50.c0 AS TEXT))))AND(rt1.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt50 WHERE (CAST((vt50.c0 IN (vt50.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt50.c0 IN (vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (CAST((vt50.c0 IN (vt50.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt50.c0 IN (vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (CAST((vt50.c0 IN (vt50.c0)) AS INTEGER));
SELECT ALL * FROM vt50 WHERE (CASE WHEN IFNULL(vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN ()) THEN ((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(NULL)))OR(vt50.c0)) WHEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) THEN (- (vt50.c0)) ELSE (vt50.c0 IN (vt50.c0, vt50.c0)) END) ORDER BY (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)) IN ((+ (vt50.c0)), NULLIF(DISTINCT vt50.c0, vt50.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN IFNULL(vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN ()) THEN ((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(NULL)))OR(vt50.c0)) WHEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) THEN (- (vt50.c0)) ELSE (vt50.c0 IN (vt50.c0, vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)) IN ((+ (vt50.c0)), NULLIF(DISTINCT vt50.c0, vt50.c0))));
SELECT ALL * FROM vt50 WHERE (CASE WHEN IFNULL(vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN ()) THEN ((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(NULL)))OR(vt50.c0)) WHEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) THEN (- (vt50.c0)) ELSE (vt50.c0 IN (vt50.c0, vt50.c0)) END) ORDER BY (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)) IN ((+ (vt50.c0)), NULLIF(DISTINCT vt50.c0, vt50.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN IFNULL(vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN ()) THEN ((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(NULL)))OR(vt50.c0)) WHEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) THEN (- (vt50.c0)) ELSE (vt50.c0 IN (vt50.c0, vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)) IN ((+ (vt50.c0)), NULLIF(DISTINCT vt50.c0, vt50.c0))));
SELECT ALL * FROM vt50 WHERE (CASE WHEN IFNULL(vt50.c0, vt50.c0) THEN CAST(vt50.c0 AS TEXT) WHEN (vt50.c0 IN ()) THEN ((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))OR(NULL)))OR(vt50.c0)) WHEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) THEN (- (vt50.c0)) ELSE (vt50.c0 IN (vt50.c0, vt50.c0)) END) ORDER BY (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)))AND(vt50.c0)) IN ((+ (vt50.c0)), NULLIF(DISTINCT vt50.c0, vt50.c0)));
SELECT * FROM vt50 NOT INDEXED, rt1 WHERE ((((((((rt1.c2))>=((NULL))))OR(CAST('' AS NUMERIC))))AND(((rt1.c1) IS FALSE)))) ORDER BY (((~ (rt1.c2))) NOT BETWEEN (CAST(vt50.c0 AS TEXT)) AND ((rt1.c2 IN (vt50.c0, '367115998'))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2))>=((NULL))))OR(CAST('' AS NUMERIC))))AND(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((~ (rt1.c2))) NOT BETWEEN (CAST(vt50.c0 AS TEXT)) AND ((rt1.c2 IN (vt50.c0, '367115998')))));
SELECT * FROM vt50 NOT INDEXED, rt1 WHERE ((((((((rt1.c2))>=((NULL))))OR(CAST('' AS NUMERIC))))AND(((rt1.c1) IS FALSE)))) ORDER BY (((~ (rt1.c2))) NOT BETWEEN (CAST(vt50.c0 AS TEXT)) AND ((rt1.c2 IN (vt50.c0, '367115998'))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2))>=((NULL))))OR(CAST('' AS NUMERIC))))AND(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((~ (rt1.c2))) NOT BETWEEN (CAST(vt50.c0 AS TEXT)) AND ((rt1.c2 IN (vt50.c0, '367115998')))));
SELECT * FROM vt50 NOT INDEXED, rt1 WHERE ((((((((rt1.c2))>=((NULL))))OR(CAST('' AS NUMERIC))))AND(((rt1.c1) IS FALSE)))) ORDER BY (((~ (rt1.c2))) NOT BETWEEN (CAST(vt50.c0 AS TEXT)) AND ((rt1.c2 IN (vt50.c0, '367115998'))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY (((x'cb0e18f5', ((rt1.c2)&(rt1.c0)), ((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0))))=((ROUND(rt1.c1, 'brIMrMNEH'), CAST(0.00895311546873423 AS NUMERIC), CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((x'cb0e18f5', ((rt1.c2)&(rt1.c0)), ((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0))))=((ROUND(rt1.c1, 'brIMrMNEH'), CAST(0.00895311546873423 AS NUMERIC), CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY (((x'cb0e18f5', ((rt1.c2)&(rt1.c0)), ((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0))))=((ROUND(rt1.c1, 'brIMrMNEH'), CAST(0.00895311546873423 AS NUMERIC), CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((x'cb0e18f5', ((rt1.c2)&(rt1.c0)), ((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0))))=((ROUND(rt1.c1, 'brIMrMNEH'), CAST(0.00895311546873423 AS NUMERIC), CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY (((x'cb0e18f5', ((rt1.c2)&(rt1.c0)), ((((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0))))=((ROUND(rt1.c1, 'brIMrMNEH'), CAST(0.00895311546873423 AS NUMERIC), CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((((vt50.c0)=(vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((((vt50.c0)==(vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((((vt50.c0)=(vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((((vt50.c0)==(vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)) BETWEEN ((CAST(x'' AS REAL))) AND ((((vt50.c0)=(vt50.c0))))));
SELECT COUNT(*) FROM vt50 WHERE (NULL) ORDER BY CAST(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt50 ORDER BY CAST(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (NULL) ORDER BY CAST(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt50 ORDER BY CAST(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (NULL) ORDER BY CAST(CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((- (rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((- (rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((- (rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (x'');
SELECT ALL COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON ((((-1926923088)<>(rt1.c2)))OR(LOWER(rt1.c0))) WHERE (((UPPER(DISTINCT NULL)) BETWEEN (IFNULL(DISTINCT vt50.c0, rt1.c2)) AND (rt1.c0 COLLATE BINARY))) ORDER BY (((rt1.c1)LIKE(rt1.c2)) IN (CASE WHEN NULL THEN rt1.c0 END, NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT NULL)) BETWEEN (IFNULL(DISTINCT vt50.c0, rt1.c2)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON ((((-1926923088)!=(rt1.c2)))OR(LOWER(rt1.c0))) ORDER BY (((rt1.c1)LIKE(rt1.c2)) IN (CASE WHEN NULL THEN rt1.c0 END, NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON ((((-1926923088)<>(rt1.c2)))OR(LOWER(rt1.c0))) WHERE (((UPPER(DISTINCT NULL)) BETWEEN (IFNULL(DISTINCT vt50.c0, rt1.c2)) AND (rt1.c0 COLLATE BINARY))) ORDER BY (((rt1.c1)LIKE(rt1.c2)) IN (CASE WHEN NULL THEN rt1.c0 END, NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT NULL)) BETWEEN (IFNULL(DISTINCT vt50.c0, rt1.c2)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50 RIGHT OUTER JOIN rt1 ON ((((-1926923088)!=(rt1.c2)))OR(LOWER(rt1.c0))) ORDER BY (((rt1.c1)LIKE(rt1.c2)) IN (CASE WHEN NULL THEN rt1.c0 END, NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 RIGHT OUTER JOIN rt1 ON ((((-1926923088)<>(rt1.c2)))OR(LOWER(rt1.c0))) WHERE (((UPPER(DISTINCT NULL)) BETWEEN (IFNULL(DISTINCT vt50.c0, rt1.c2)) AND (rt1.c0 COLLATE BINARY))) ORDER BY (((rt1.c1)LIKE(rt1.c2)) IN (CASE WHEN NULL THEN rt1.c0 END, NULL))  NULLS FIRST;
SELECT * FROM vt50 WHERE (((((vt50.c0))<((vt50.c0))) IN ())) ORDER BY (((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) IN ()) DESC  NULLS LAST, ((((vt50.c0)IS NOT(vt50.c0))) NOTNULL)  NULLS LAST, CAST(LIKELIHOOD(vt50.c0, 0.3808748160601013) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((vt50.c0))<((vt50.c0))) IN ())) IS TRUE)  as count FROM vt50 ORDER BY (((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) IN ()) DESC  NULLS LAST, ((((vt50.c0)IS NOT(vt50.c0))) NOTNULL)  NULLS LAST, CAST(LIKELIHOOD(vt50.c0, 0.3808748160601013) AS BLOB));
SELECT * FROM vt50 WHERE (((((vt50.c0))<((vt50.c0))) IN ())) ORDER BY (((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) IN ()) DESC  NULLS LAST, ((((vt50.c0)IS NOT(vt50.c0))) NOTNULL)  NULLS LAST, CAST(LIKELIHOOD(vt50.c0, 0.3808748160601013) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((vt50.c0))<((vt50.c0))) IN ())) IS TRUE)  as count FROM vt50 ORDER BY (((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) IN ()) DESC  NULLS LAST, ((((vt50.c0)IS NOT(vt50.c0))) NOTNULL)  NULLS LAST, CAST(LIKELIHOOD(vt50.c0, 0.3808748160601013) AS BLOB));
SELECT * FROM vt50 WHERE (((((vt50.c0))<((vt50.c0))) IN ())) ORDER BY (((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) IN ()) DESC  NULLS LAST, ((((vt50.c0)IS NOT(vt50.c0))) NOTNULL)  NULLS LAST, CAST(LIKELIHOOD(vt50.c0, 0.3808748160601013) AS BLOB);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((vt50.c0)+(1860638053)) IN ())) ORDER BY ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)+(1860638053)) IN ())) IS TRUE)  as count FROM vt50 ORDER BY ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((vt50.c0)+(1860638053)) IN ())) ORDER BY ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)+(1860638053)) IN ())) IS TRUE)  as count FROM vt50 ORDER BY ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((vt50.c0)+(1860638053)) IN ())) ORDER BY ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM vt50, rt1 WHERE (CAST(rt1.c2 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CAST(rt1.c2 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CAST(rt1.c2 COLLATE RTRIM AS INTEGER));
SELECT COUNT(*) FROM vt50 WHERE ((((((0.06650550606123029)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))) IS TRUE)) ORDER BY ABS(vt50.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.06650550606123029)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))) IS TRUE)) IS TRUE)  as count FROM vt50 ORDER BY ABS(vt50.c0) DESC);
SELECT COUNT(*) FROM vt50 WHERE ((((((0.06650550606123029)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))) IS TRUE)) ORDER BY ABS(vt50.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((0.06650550606123029)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))) IS TRUE)) IS TRUE)  as count FROM vt50 ORDER BY ABS(vt50.c0) DESC);
SELECT COUNT(*) FROM vt50 WHERE ((((((0.06650550606123029)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))) IS TRUE)) ORDER BY ABS(vt50.c0) DESC;
SELECT * FROM vt50 WHERE (CAST(((vt50.c0)>=(vt50.c0)) AS INTEGER)) ORDER BY (- ((((vt50.c0))<((vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt50.c0)>=(vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50 ORDER BY (- ((((vt50.c0))<((vt50.c0))))));
SELECT * FROM vt50 WHERE (CAST(((vt50.c0)>=(vt50.c0)) AS INTEGER)) ORDER BY (- ((((vt50.c0))<((vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt50.c0)>=(vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50 ORDER BY (- ((((vt50.c0))<((vt50.c0))))));
SELECT * FROM vt50 WHERE (CAST(((vt50.c0)>=(vt50.c0)) AS INTEGER)) ORDER BY (- ((((vt50.c0))<((vt50.c0)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt50 ON ((0x19af2f0f)||(CAST(rt1.c2 AS TEXT))) WHERE ((((rt1.c2)) NOT BETWEEN (((vt50.c0 IN ()))) AND (((('⟧*Vd祝m')&(vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (((vt50.c0 IN ()))) AND (((('⟧*Vd祝m')&(vt50.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON ((0x19af2f0f)||(CAST(rt1.c2 AS TEXT))));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt50 ON ((0x19af2f0f)||(CAST(rt1.c2 AS TEXT))) WHERE ((((rt1.c2)) NOT BETWEEN (((vt50.c0 IN ()))) AND (((('⟧*Vd祝m')&(vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (((vt50.c0 IN ()))) AND (((('⟧*Vd祝m')&(vt50.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON ((0x19af2f0f)||(CAST(rt1.c2 AS TEXT))));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt50 ON ((0x19af2f0f)||(CAST(rt1.c2 AS TEXT))) WHERE ((((rt1.c2)) NOT BETWEEN (((vt50.c0 IN ()))) AND (((('⟧*Vd祝m')&(vt50.c0))))));
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST((NOT (vt50.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST((NOT (vt50.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST((NOT (vt50.c0)) AS INTEGER));
SELECT * FROM vt50 WHERE (CAST((((vt50.c0)) BETWEEN ((NULL)) AND ((vt50.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt50.c0)) BETWEEN ((NULL)) AND ((vt50.c0))) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CAST((((vt50.c0)) BETWEEN ((NULL)) AND ((vt50.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt50.c0)) BETWEEN ((NULL)) AND ((vt50.c0))) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CAST((((vt50.c0)) BETWEEN ((NULL)) AND ((vt50.c0))) AS INTEGER));
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))))%(UNICODE(vt50.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))))%(UNICODE(vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))))%(UNICODE(vt50.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))))%(UNICODE(vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))))%(UNICODE(vt50.c0))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (((rt1.c0)<<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0)<<(rt1.c1))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (((rt1.c0)<<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c0)<<(rt1.c1))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (((rt1.c0)<<(rt1.c1)))));
SELECT * FROM rt1 WHERE (((((x'') BETWEEN (rt1.c0) AND (rt1.c2)))*(LOWER(rt1.c2)))) ORDER BY LIKELY('1392042166') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (rt1.c0) AND (rt1.c2)))*(LOWER(rt1.c2)))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY LIKELY('1392042166') ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((x'') BETWEEN (rt1.c0) AND (rt1.c2)))*(LOWER(rt1.c2)))) ORDER BY LIKELY('1392042166') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (rt1.c0) AND (rt1.c2)))*(LOWER(rt1.c2)))) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY LIKELY('1392042166') ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((x'') BETWEEN (rt1.c0) AND (rt1.c2)))*(LOWER(rt1.c2)))) ORDER BY LIKELY('1392042166') ASC  NULLS FIRST;
SELECT * FROM vt50 WHERE (json_remove((vt50.c0 IN ()), CAST(vt50.c0 AS BLOB), ((vt50.c0)*(vt50.c0)), 'mPU')) ORDER BY CASE WHEN ((vt50.c0)!=(vt50.c0)) THEN CASE WHEN 0x232ee146 THEN vt50.c0 ELSE vt50.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove((vt50.c0 IN ()), CAST(vt50.c0 AS BLOB), ((vt50.c0)*(vt50.c0)), 'mPU')) IS TRUE)  as count FROM vt50 ORDER BY CASE WHEN ((vt50.c0)<>(vt50.c0)) THEN CASE WHEN 0X232ee146 THEN vt50.c0 ELSE vt50.c0 END END  NULLS FIRST);
SELECT * FROM vt50 WHERE (json_remove((vt50.c0 IN ()), CAST(vt50.c0 AS BLOB), ((vt50.c0)*(vt50.c0)), 'mPU')) ORDER BY CASE WHEN ((vt50.c0)!=(vt50.c0)) THEN CASE WHEN 0x232ee146 THEN vt50.c0 ELSE vt50.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove((vt50.c0 IN ()), CAST(vt50.c0 AS BLOB), ((vt50.c0)*(vt50.c0)), 'mPU')) IS TRUE)  as count FROM vt50 ORDER BY CASE WHEN ((vt50.c0)<>(vt50.c0)) THEN CASE WHEN 0X232ee146 THEN vt50.c0 ELSE vt50.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((((vt50.c0)GLOB('W|tꢋ^')))|(((vt50.c0) IS TRUE)))) ORDER BY '-1639545527';
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)GLOB('W|tꢋ^')))|(((vt50.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY '-1639545527');
SELECT COUNT(*) FROM rt1, vt50 WHERE (((((vt50.c0)GLOB('W|tꢋ^')))|(((vt50.c0) IS TRUE)))) ORDER BY '-1639545527';
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)GLOB('W|tꢋ^')))|(((vt50.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY '-1639545527');
SELECT COUNT(*) FROM rt1, vt50 WHERE (((((vt50.c0)GLOB('W|tꢋ^')))|(((vt50.c0) IS TRUE)))) ORDER BY '-1639545527';
SELECT * FROM vt50, rt1 WHERE (((((((((CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c1 END)AND('2083793930')))AND(CAST(rt1.c2 AS REAL))))AND(vt50.c0)))AND(x''))) ORDER BY ((((rt1.c1)AND(NULL)))IS(CASE WHEN 0.05235321300609308 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c1 END)AND('2083793930')))AND(CAST(rt1.c2 AS REAL))))AND(vt50.c0)))AND(x''))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c1)AND(NULL)))IS(CASE WHEN 0.05235321300609308 THEN rt1.c1 END))  NULLS FIRST);
SELECT * FROM vt50, rt1 WHERE (((((((((CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c1 END)AND('2083793930')))AND(CAST(rt1.c2 AS REAL))))AND(vt50.c0)))AND(x''))) ORDER BY ((((rt1.c1)AND(NULL)))IS(CASE WHEN 0.05235321300609308 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c1 END)AND('2083793930')))AND(CAST(rt1.c2 AS REAL))))AND(vt50.c0)))AND(x''))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c1)AND(NULL)))IS(CASE WHEN 0.05235321300609308 THEN rt1.c1 END))  NULLS FIRST);
SELECT * FROM vt50, rt1 WHERE (((((((((CASE WHEN vt50.c0 THEN rt1.c1 WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c1 END)AND('2083793930')))AND(CAST(rt1.c2 AS REAL))))AND(vt50.c0)))AND(x''))) ORDER BY ((((rt1.c1)AND(NULL)))IS(CASE WHEN 0.05235321300609308 THEN rt1.c1 END))  NULLS FIRST;
SELECT * FROM rt1, vt50 WHERE (((((IFNULL(rt1.c0, vt50.c0))AND((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt50.c0))))))OR(IFNULL(rt1.c2, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((IFNULL(rt1.c0, vt50.c0))AND((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt50.c0))))))OR(IFNULL(rt1.c2, rt1.c2)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((((IFNULL(rt1.c0, vt50.c0))AND((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt50.c0))))))OR(IFNULL(rt1.c2, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((IFNULL(rt1.c0, vt50.c0))AND((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt50.c0))))))OR(IFNULL(rt1.c2, rt1.c2)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((((IFNULL(rt1.c0, vt50.c0))AND((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((vt50.c0))))))OR(IFNULL(rt1.c2, rt1.c2))));
SELECT * FROM vt50 WHERE (((((NULL IN ())))!=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))) ORDER BY ((CAST(vt50.c0 AS INTEGER))<(CAST(vt50.c0 AS NUMERIC))), CAST(IFNULL(DISTINCT vt50.c0, vt50.c0) AS REAL), (+ ((~ (vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))<>((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))) IS TRUE)  as count FROM vt50 ORDER BY ((CAST(vt50.c0 AS INTEGER))<(CAST(vt50.c0 AS NUMERIC))), CAST(IFNULL(DISTINCT vt50.c0, vt50.c0) AS REAL), (+ ((~ (vt50.c0)))));
SELECT * FROM vt50 WHERE (((((NULL IN ())))!=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))) ORDER BY ((CAST(vt50.c0 AS INTEGER))<(CAST(vt50.c0 AS NUMERIC))), CAST(IFNULL(DISTINCT vt50.c0, vt50.c0) AS REAL), (+ ((~ (vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))<>((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))) IS TRUE)  as count FROM vt50 ORDER BY ((CAST(vt50.c0 AS INTEGER))<(CAST(vt50.c0 AS NUMERIC))), CAST(IFNULL(DISTINCT vt50.c0, vt50.c0) AS REAL), (+ ((~ (vt50.c0)))));
SELECT * FROM vt50 WHERE (((((NULL IN ())))!=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))) ORDER BY ((CAST(vt50.c0 AS INTEGER))<(CAST(vt50.c0 AS NUMERIC))), CAST(IFNULL(DISTINCT vt50.c0, vt50.c0) AS REAL), (+ ((~ (vt50.c0))));
SELECT COUNT(*) FROM rt1, vt50 WHERE (NULLIF(DISTINCT rt1.c1, rt1.c1) COLLATE BINARY) ORDER BY ((((LENGTH(rt1.c2))OR(((rt1.c2)==(vt50.c0)))))OR(rt1.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt1.c1, rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((LENGTH(rt1.c2))OR(((rt1.c2)==(vt50.c0)))))OR(rt1.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (NULLIF(DISTINCT rt1.c1, rt1.c1) COLLATE BINARY) ORDER BY ((((LENGTH(rt1.c2))OR(((rt1.c2)==(vt50.c0)))))OR(rt1.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt1.c1, rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((LENGTH(rt1.c2))OR(((rt1.c2)==(vt50.c0)))))OR(rt1.c1 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (NULLIF(DISTINCT rt1.c1, rt1.c1) COLLATE BINARY) ORDER BY ((((LENGTH(rt1.c2))OR(((rt1.c2)==(vt50.c0)))))OR(rt1.c1 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END COLLATE NOCASE) ORDER BY vt50.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END COLLATE NOCASE) ORDER BY vt50.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 END COLLATE NOCASE) ORDER BY vt50.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)&(rt1.c1)))OR(TRIM(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(rt1.c1)))OR(TRIM(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)&(rt1.c1)))OR(TRIM(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)&(rt1.c1)))OR(TRIM(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)&(rt1.c1)))OR(TRIM(rt1.c1))));
SELECT * FROM rt1 WHERE ((rt1.c1 IN (rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c1 IN (rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c1 IN (rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, vt50 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c2));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(rt1.c2)) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c2));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(rt1.c2)) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c2));
SELECT * FROM vt50 WHERE (((vt50.c0)%(vt50.c0)) COLLATE NOCASE) ORDER BY json_quote((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((vt50.c0)%(vt50.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt50 ORDER BY json_quote((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0)))));
SELECT * FROM vt50 WHERE (((vt50.c0)%(vt50.c0)) COLLATE NOCASE) ORDER BY json_quote((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((vt50.c0)%(vt50.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt50 ORDER BY json_quote((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0)))));
SELECT * FROM vt50 WHERE (((vt50.c0)%(vt50.c0)) COLLATE NOCASE) ORDER BY json_quote((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))));
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS TEXT));
SELECT * FROM rt1 WHERE (((0Xfffffffffaefa4e7 COLLATE BINARY) IS FALSE)) ORDER BY (((rt1.c0 COLLATE RTRIM))<=((CAST(rt1.c2 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffffaefa4e7 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 COLLATE RTRIM))<=((CAST(rt1.c2 AS TEXT))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((0Xfffffffffaefa4e7 COLLATE BINARY) IS FALSE)) ORDER BY (((rt1.c0 COLLATE RTRIM))<=((CAST(rt1.c2 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffffaefa4e7 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 COLLATE RTRIM))<=((CAST(rt1.c2 AS TEXT))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((0Xfffffffffaefa4e7 COLLATE BINARY) IS FALSE)) ORDER BY (((rt1.c0 COLLATE RTRIM))<=((CAST(rt1.c2 AS TEXT))))  NULLS LAST;
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c0);
SELECT ALL * FROM rt1 WHERE (((0.9557376449703704)<<(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0.9557376449703704)<<(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((0.9557376449703704)<<(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0.9557376449703704)<<(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((0.9557376449703704)<<(rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt50, rt1 WHERE (((rt1.c1)-(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)-(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((rt1.c1)-(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)-(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((rt1.c1)-(rt1.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt50 WHERE ('-516644494') ORDER BY CASE CAST(0.5688107810230003 AS BLOB)  WHEN vt50.c0 COLLATE BINARY THEN (vt50.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-516644494') IS TRUE)  as count FROM vt50 ORDER BY CASE CAST(0.5688107810230003 AS BLOB)  WHEN vt50.c0 COLLATE BINARY THEN (vt50.c0 IN ()) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 WHERE ('-516644494') ORDER BY CASE CAST(0.5688107810230003 AS BLOB)  WHEN vt50.c0 COLLATE BINARY THEN (vt50.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-516644494') IS TRUE)  as count FROM vt50 ORDER BY CASE CAST(0.5688107810230003 AS BLOB)  WHEN vt50.c0 COLLATE BINARY THEN (vt50.c0 IN ()) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 WHERE ('-516644494') ORDER BY CASE CAST(0.5688107810230003 AS BLOB)  WHEN vt50.c0 COLLATE BINARY THEN (vt50.c0 IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 WHERE ((((~ (vt50.c0))) NOT BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (-1196218086))) AND (((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(1.507810705E9)))AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt50.c0))) NOT BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (-1196218086))) AND (((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(1.507810705E9)))AND(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((~ (vt50.c0))) NOT BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (-1196218086))) AND (((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(1.507810705E9)))AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt50.c0))) NOT BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (-1196218086))) AND (((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(1.507810705E9)))AND(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((~ (vt50.c0))) NOT BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (-1196218086))) AND (((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(1.507810705E9)))AND(vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((CASE 0.3969147923618839  WHEN vt50.c0 THEN vt50.c0 END)<=((NOT (rt1.c2))))) ORDER BY CAST((- (vt50.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.3969147923618839  WHEN vt50.c0 THEN vt50.c0 END)<=((NOT (rt1.c2))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST((- (vt50.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((CASE 0.3969147923618839  WHEN vt50.c0 THEN vt50.c0 END)<=((NOT (rt1.c2))))) ORDER BY CAST((- (vt50.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.3969147923618839  WHEN vt50.c0 THEN vt50.c0 END)<=((NOT (rt1.c2))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST((- (vt50.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((CASE 0.3969147923618839  WHEN vt50.c0 THEN vt50.c0 END)<=((NOT (rt1.c2))))) ORDER BY CAST((- (vt50.c0)) AS REAL);
SELECT COUNT(*) FROM rt1 WHERE ('Ik-i') ORDER BY ((rt1.c0)&((- (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('Ik-i') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)&((- (rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ('Ik-i') ORDER BY ((rt1.c0)&((- (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('Ik-i') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)&((- (rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ('Ik-i') ORDER BY ((rt1.c0)&((- (rt1.c0))));
SELECT ALL * FROM rt1 WHERE (NULLIF(DISTINCT CAST(rt1.c2 AS NUMERIC), CAST(rt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(rt1.c2 AS NUMERIC), CAST(rt1.c0 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULLIF(DISTINCT CAST(rt1.c2 AS NUMERIC), CAST(rt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(rt1.c2 AS NUMERIC), CAST(rt1.c0 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULLIF(DISTINCT CAST(rt1.c2 AS NUMERIC), CAST(rt1.c0 AS NUMERIC)));
SELECT COUNT(*) FROM rt1, vt50 WHERE (CASE WHEN vt50.c0 COLLATE NOCASE THEN ((0.17598241740952947) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt50.c0 COLLATE NOCASE THEN ((0.17598241740952947) IS FALSE) END) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (CASE WHEN vt50.c0 COLLATE NOCASE THEN ((0.17598241740952947) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt50.c0 COLLATE NOCASE THEN ((0.17598241740952947) IS FALSE) END) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (CASE WHEN vt50.c0 COLLATE NOCASE THEN ((0.17598241740952947) IS FALSE) END);
SELECT * FROM vt50 WHERE (CASE ((vt50.c0)!=(vt50.c0))  WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END ELSE ((vt50.c0)%(vt50.c0)) END) ORDER BY vt50.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)!=(vt50.c0))  WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END ELSE ((vt50.c0)%(vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS FIRST);
SELECT * FROM vt50 WHERE (CASE ((vt50.c0)!=(vt50.c0))  WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END ELSE ((vt50.c0)%(vt50.c0)) END) ORDER BY vt50.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)!=(vt50.c0))  WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END ELSE ((vt50.c0)%(vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS FIRST);
SELECT * FROM vt50 WHERE (CASE ((vt50.c0)!=(vt50.c0))  WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END ELSE ((vt50.c0)%(vt50.c0)) END) ORDER BY vt50.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((0.18797909245128908))))<<(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (CASE WHEN (((0xfffffffff74e43dd, rt1.c0, vt50.c0)) BETWEEN ((vt50.c0, rt1.c0, rt1.c2)) AND ((vt50.c0, rt1.c2, rt1.c0))) THEN (('-665331757')&(rt1.c1)) ELSE ((rt1.c0)<=(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0xfffffffff74e43dd, rt1.c0, vt50.c0)) BETWEEN ((vt50.c0, rt1.c0, rt1.c2)) AND ((vt50.c0, rt1.c2, rt1.c0))) THEN (('-665331757')&(rt1.c1)) ELSE ((rt1.c0)<=(rt1.c1)) END) IS TRUE)  as count FROM vt50 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((0.18797909245128908))))<<(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((0.18797909245128908))))<<(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (CASE WHEN (((0xfffffffff74e43dd, rt1.c0, vt50.c0)) BETWEEN ((vt50.c0, rt1.c0, rt1.c2)) AND ((vt50.c0, rt1.c2, rt1.c0))) THEN (('-665331757')&(rt1.c1)) ELSE ((rt1.c0)<=(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0xfffffffff74e43dd, rt1.c0, vt50.c0)) BETWEEN ((vt50.c0, rt1.c0, rt1.c2)) AND ((vt50.c0, rt1.c2, rt1.c0))) THEN (('-665331757')&(rt1.c1)) ELSE ((rt1.c0)<=(rt1.c1)) END) IS TRUE)  as count FROM vt50 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((0.18797909245128908))))<<(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((0.18797909245128908))))<<(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (CASE WHEN (((0xfffffffff74e43dd, rt1.c0, vt50.c0)) BETWEEN ((vt50.c0, rt1.c0, rt1.c2)) AND ((vt50.c0, rt1.c2, rt1.c0))) THEN (('-665331757')&(rt1.c1)) ELSE ((rt1.c0)<=(rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('ꏰ*') NOTNULL)) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('ꏰ*') NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('ꏰ*') NOTNULL)) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('ꏰ*') NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('ꏰ*') NOTNULL)) ORDER BY NULL COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt50 WHERE ((((vt50.c0 IN ()))|(CASE rt1.c2  WHEN vt50.c0 THEN rt1.c1 END))) ORDER BY (- (vt50.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt50.c0 IN ()))|(CASE rt1.c2  WHEN vt50.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (- (vt50.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt1, vt50 WHERE ((((vt50.c0 IN ()))|(CASE rt1.c2  WHEN vt50.c0 THEN rt1.c1 END))) ORDER BY (- (vt50.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt50.c0 IN ()))|(CASE rt1.c2  WHEN vt50.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (- (vt50.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM rt1, vt50 WHERE ((((vt50.c0 IN ()))|(CASE rt1.c2  WHEN vt50.c0 THEN rt1.c1 END))) ORDER BY (- (vt50.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END)>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY CAST(((((x'')AND(vt50.c0)))AND(vt50.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END)>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CAST(((((x'')AND(vt50.c0)))AND(vt50.c0)) AS TEXT));
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END)>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY CAST(((((x'')AND(vt50.c0)))AND(vt50.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END)>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CAST(((((x'')AND(vt50.c0)))AND(vt50.c0)) AS TEXT));
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CASE WHEN rt1.c1 THEN vt50.c0 ELSE vt50.c0 END)>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY CAST(((((x'')AND(vt50.c0)))AND(vt50.c0)) AS TEXT);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1)==(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)=(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1)==(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)=(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1)==(rt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)>=(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)>=(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)>=(rt1.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((((((((((((rt1.c2)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(vt50.c0)))OR(NULL)))OR(ABS(DISTINCT rt1.c0))))OR(((vt50.c0)AND(rt1.c0)))))AND((((NULL, NULL, rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, vt50.c0, rt1.c1, rt1.c1)) AND ((vt50.c0, vt50.c0, rt1.c0, NULL, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c2)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(vt50.c0)))OR(NULL)))OR(ABS(DISTINCT rt1.c0))))OR(((vt50.c0)AND(rt1.c0)))))AND((((NULL, NULL, rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, vt50.c0, rt1.c1, rt1.c1)) AND ((vt50.c0, vt50.c0, rt1.c0, NULL, rt1.c2)))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((((((((((((rt1.c2)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(vt50.c0)))OR(NULL)))OR(ABS(DISTINCT rt1.c0))))OR(((vt50.c0)AND(rt1.c0)))))AND((((NULL, NULL, rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, vt50.c0, rt1.c1, rt1.c1)) AND ((vt50.c0, vt50.c0, rt1.c0, NULL, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c2)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(vt50.c0)))OR(NULL)))OR(ABS(DISTINCT rt1.c0))))OR(((vt50.c0)AND(rt1.c0)))))AND((((NULL, NULL, rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, vt50.c0, rt1.c1, rt1.c1)) AND ((vt50.c0, vt50.c0, rt1.c0, NULL, rt1.c2)))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((((((((((((rt1.c2)AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND(vt50.c0)))OR(NULL)))OR(ABS(DISTINCT rt1.c0))))OR(((vt50.c0)AND(rt1.c0)))))AND((((NULL, NULL, rt1.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, vt50.c0, rt1.c1, rt1.c1)) AND ((vt50.c0, vt50.c0, rt1.c0, NULL, rt1.c2))))));
SELECT * FROM vt50, rt1 WHERE ((('')&((((0.2256884587854444)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) ORDER BY CAST(rt1.c2 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((('')&((((0.2256884587854444)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST(rt1.c2 AS NUMERIC));
SELECT * FROM vt50, rt1 WHERE ((('')&((((0.2256884587854444)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) ORDER BY CAST(rt1.c2 AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((('')&((((0.2256884587854444)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST(rt1.c2 AS NUMERIC));
SELECT * FROM vt50, rt1 WHERE ((('')&((((0.2256884587854444)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) ORDER BY CAST(rt1.c2 AS NUMERIC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1))<((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))))) ORDER BY ((((((((CAST(rt1.c2 AS NUMERIC))OR(((0.6676463759984351) BETWEEN (rt1.c2) AND (0.14871858271866656)))))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))AND((((0.9608226319975885, rt1.c2, rt1.c2, rt1.c1, 'bt')) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1, rt1.c2, rt1.c1))))))AND(((((((((rt1.c0)OR(rt1.c2)))OR(0.5299259406213338)))AND(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, ((('!^', rt1.c1, rt1.c1)) BETWEEN (((NOT (rt1.c0)), (- (rt1.c0)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(0Xfffffffff6943ff8)))) AND ((COALESCE(rt1.c1, rt1.c2), CAST(rt1.c1 AS INTEGER), 'UZ	X{)'))) DESC  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1))<((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((CAST(rt1.c2 AS NUMERIC))OR(((0.6676463759984351) BETWEEN (rt1.c2) AND (0.14871858271866656)))))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))AND((((0.9608226319975885, rt1.c2, rt1.c2, rt1.c1, 'bt')) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1, rt1.c2, rt1.c1))))))AND(((((((((rt1.c0)OR(rt1.c2)))OR(0.5299259406213338)))AND(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, ((('!^', rt1.c1, rt1.c1)) BETWEEN (((NOT (rt1.c0)), (- (rt1.c0)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(0xfffffffff6943ff8)))) AND ((COALESCE(rt1.c1, rt1.c2), CAST(rt1.c1 AS INTEGER), 'UZ	X{)'))) DESC  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1))<((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))))) ORDER BY ((((((((CAST(rt1.c2 AS NUMERIC))OR(((0.6676463759984351) BETWEEN (rt1.c2) AND (0.14871858271866656)))))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))AND((((0.9608226319975885, rt1.c2, rt1.c2, rt1.c1, 'bt')) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1, rt1.c2, rt1.c1))))))AND(((((((((rt1.c0)OR(rt1.c2)))OR(0.5299259406213338)))AND(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, ((('!^', rt1.c1, rt1.c1)) BETWEEN (((NOT (rt1.c0)), (- (rt1.c0)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(0Xfffffffff6943ff8)))) AND ((COALESCE(rt1.c1, rt1.c2), CAST(rt1.c1 AS INTEGER), 'UZ	X{)'))) DESC  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1))<((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((CAST(rt1.c2 AS NUMERIC))OR(((0.6676463759984351) BETWEEN (rt1.c2) AND (0.14871858271866656)))))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))AND((((0.9608226319975885, rt1.c2, rt1.c2, rt1.c1, 'bt')) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1, rt1.c2, rt1.c1))))))AND(((((((((rt1.c0)OR(rt1.c2)))OR(0.5299259406213338)))AND(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, ((('!^', rt1.c1, rt1.c1)) BETWEEN (((NOT (rt1.c0)), (- (rt1.c0)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(0xfffffffff6943ff8)))) AND ((COALESCE(rt1.c1, rt1.c2), CAST(rt1.c1 AS INTEGER), 'UZ	X{)'))) DESC  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1))<((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))))) ORDER BY ((((((((CAST(rt1.c2 AS NUMERIC))OR(((0.6676463759984351) BETWEEN (rt1.c2) AND (0.14871858271866656)))))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))))AND((((0.9608226319975885, rt1.c2, rt1.c2, rt1.c1, 'bt')) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c1, rt1.c2, rt1.c1))))))AND(((((((((rt1.c0)OR(rt1.c2)))OR(0.5299259406213338)))AND(rt1.c0)))OR(rt1.c1)))) DESC  NULLS LAST, ((('!^', rt1.c1, rt1.c1)) BETWEEN (((NOT (rt1.c0)), (- (rt1.c0)), ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))OR(0Xfffffffff6943ff8)))) AND ((COALESCE(rt1.c1, rt1.c2), CAST(rt1.c1 AS INTEGER), 'UZ	X{)'))) DESC  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c1)))) NOT BETWEEN (vt50.c0 COLLATE RTRIM) AND ((((rt1.c0, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c0, vt50.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c1)))) NOT BETWEEN (vt50.c0 COLLATE RTRIM) AND ((((rt1.c0, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c0, vt50.c0)))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c1)))) NOT BETWEEN (vt50.c0 COLLATE RTRIM) AND ((((rt1.c0, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c0, vt50.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c1)))) NOT BETWEEN (vt50.c0 COLLATE RTRIM) AND ((((rt1.c0, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c0, vt50.c0)))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((rt1.c1)))) NOT BETWEEN (vt50.c0 COLLATE RTRIM) AND ((((rt1.c0, rt1.c2, rt1.c0))<=((rt1.c0, rt1.c0, vt50.c0))))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)>=(((rt1.c2)-(rt1.c0))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>=(((rt1.c2)-(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)>=(((rt1.c2)-(rt1.c0))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>=(((rt1.c2)-(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)>=(((rt1.c2)-(rt1.c0))))) ORDER BY rt1.c2;
SELECT ALL * FROM vt50, rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))OR(json_valid(rt1.c0))))AND(((rt1.c2)%(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))OR(json_valid(rt1.c0))))AND(((rt1.c2)%(rt1.c0))))) IS TRUE)  as count FROM vt50 NOT INDEXED, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))OR(json_valid(rt1.c0))))AND(((rt1.c2)%(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))OR(json_valid(rt1.c0))))AND(((rt1.c2)%(rt1.c0))))) IS TRUE)  as count FROM vt50 NOT INDEXED, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))OR(json_valid(rt1.c0))))AND(((rt1.c2)%(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (UPPER(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))) ORDER BY CASE WHEN ((((((((((((NULL)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END WHEN (rt1.c1 IN ()) THEN LIKELIHOOD(rt1.c1, 0.43830538344571857) WHEN '-1828377460' THEN CAST(rt1.c2 AS INTEGER) ELSE (NOT (rt1.c2)) END, ((LIKELY(DISTINCT rt1.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((((((((((((NULL)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END WHEN (rt1.c1 IN ()) THEN LIKELIHOOD(rt1.c1, 0.43830538344571857) WHEN '-1828377460' THEN CAST(rt1.c2 AS INTEGER) ELSE (NOT (rt1.c2)) END, ((LIKELY(DISTINCT rt1.c0)) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (UPPER(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))) ORDER BY CASE WHEN ((((((((((((NULL)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END WHEN (rt1.c1 IN ()) THEN LIKELIHOOD(rt1.c1, 0.43830538344571857) WHEN '-1828377460' THEN CAST(rt1.c2 AS INTEGER) ELSE (NOT (rt1.c2)) END, ((LIKELY(DISTINCT rt1.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((((((((((((NULL)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END WHEN (rt1.c1 IN ()) THEN LIKELIHOOD(rt1.c1, 0.43830538344571857) WHEN '-1828377460' THEN CAST(rt1.c2 AS INTEGER) ELSE (NOT (rt1.c2)) END, ((LIKELY(DISTINCT rt1.c0)) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (UPPER(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))) ORDER BY CASE WHEN ((((((((((((NULL)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END WHEN (rt1.c1 IN ()) THEN LIKELIHOOD(rt1.c1, 0.43830538344571857) WHEN '-1828377460' THEN CAST(rt1.c2 AS INTEGER) ELSE (NOT (rt1.c2)) END, ((LIKELY(DISTINCT rt1.c0)) IS TRUE);
SELECT COUNT(*) FROM rt1 WHERE ((~ (json_remove(rt1.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((~ (json_remove(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (json_remove(rt1.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((~ (json_remove(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt1.c2)) AND (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt1.c2)) AND (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt1.c2)) AND (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt1.c2)) AND (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE) NOT BETWEEN (HEX(rt1.c2)) AND (rt1.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt50 FULL OUTER JOIN rt1 ON (- (CAST(rt1.c1 AS NUMERIC))) WHERE (((((((rt1.c0)OR(0.14397066675882397)))AND(rt1.c0)))<<(('Ik-i' IN ())))) ORDER BY (NOT (vt50.c0)) DESC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN (('ga')) AND ((rt1.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(0.14397066675882397)))AND(rt1.c0)))<<(('Ik-i' IN ())))) IS TRUE)  as count FROM vt50 FULL OUTER JOIN rt1 ON (- (CAST(rt1.c1 AS NUMERIC))) ORDER BY (NOT (vt50.c0)) DESC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN (('ga')) AND ((rt1.c0)))) NOT NULL));
SELECT ALL COUNT(*) FROM vt50 FULL OUTER JOIN rt1 ON (- (CAST(rt1.c1 AS NUMERIC))) WHERE (((((((rt1.c0)OR(0.14397066675882397)))AND(rt1.c0)))<<(('Ik-i' IN ())))) ORDER BY (NOT (vt50.c0)) DESC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN (('ga')) AND ((rt1.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(0.14397066675882397)))AND(rt1.c0)))<<(('Ik-i' IN ())))) IS TRUE)  as count FROM vt50 FULL OUTER JOIN rt1 ON (- (CAST(rt1.c1 AS NUMERIC))) ORDER BY (NOT (vt50.c0)) DESC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN (('ga')) AND ((rt1.c0)))) NOT NULL));
SELECT ALL COUNT(*) FROM vt50 FULL OUTER JOIN rt1 ON (- (CAST(rt1.c1 AS NUMERIC))) WHERE (((((((rt1.c0)OR(0.14397066675882397)))AND(rt1.c0)))<<(('Ik-i' IN ())))) ORDER BY (NOT (vt50.c0)) DESC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN (('ga')) AND ((rt1.c0)))) NOT NULL);
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT CAST(rt1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt1.c2 AS BLOB))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT CAST(rt1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt1.c2 AS BLOB))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT CAST(rt1.c2 AS BLOB)));
SELECT ALL COUNT(*) FROM vt50 WHERE (((((vt50.c0)/(vt50.c0))) NOT BETWEEN ((vt50.c0 IN (vt50.c0, vt50.c0))) AND (NULLIF(DISTINCT vt50.c0, 0.9668448084603183)))) ORDER BY 0.5401034192724241;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)/(vt50.c0))) NOT BETWEEN ((vt50.c0 IN (vt50.c0, vt50.c0))) AND (NULLIF(DISTINCT vt50.c0, 0.9668448084603183)))) IS TRUE)  as count FROM vt50 ORDER BY 0.5401034192724241);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((vt50.c0)/(vt50.c0))) NOT BETWEEN ((vt50.c0 IN (vt50.c0, vt50.c0))) AND (NULLIF(DISTINCT vt50.c0, 0.9668448084603183)))) ORDER BY 0.5401034192724241;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)/(vt50.c0))) NOT BETWEEN ((vt50.c0 IN (vt50.c0, vt50.c0))) AND (NULLIF(DISTINCT vt50.c0, 0.9668448084603183)))) IS TRUE)  as count FROM vt50 ORDER BY 0.5401034192724241);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((vt50.c0)/(vt50.c0))) NOT BETWEEN ((vt50.c0 IN (vt50.c0, vt50.c0))) AND (NULLIF(DISTINCT vt50.c0, 0.9668448084603183)))) ORDER BY 0.5401034192724241;
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON x'' WHERE ((- (LIKE(rt1.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKE(rt1.c1, NULL)))) IS TRUE)  as count FROM vt50 INNER JOIN rt1 ON x'');
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON x'' WHERE ((- (LIKE(rt1.c1, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKE(rt1.c1, NULL)))) IS TRUE)  as count FROM vt50 INNER JOIN rt1 ON x'');
SELECT ALL COUNT(*) FROM vt50 INNER JOIN rt1 ON x'' WHERE ((- (LIKE(rt1.c1, NULL))));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((NOT (CAST(vt50.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt50.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((NOT (CAST(vt50.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt50.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((NOT (CAST(vt50.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1, vt50 WHERE (((((vt50.c0)IS NOT(vt50.c0)))>(((rt1.c2)>=(rt1.c2))))) ORDER BY ((((vt50.c0)OR(rt1.c1)))&(CAST(rt1.c2 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)IS NOT(vt50.c0)))>(((rt1.c2)>=(rt1.c2))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((vt50.c0)OR(rt1.c1)))&(CAST(rt1.c2 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((((vt50.c0)IS NOT(vt50.c0)))>(((rt1.c2)>=(rt1.c2))))) ORDER BY ((((vt50.c0)OR(rt1.c1)))&(CAST(rt1.c2 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)IS NOT(vt50.c0)))>(((rt1.c2)>=(rt1.c2))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((vt50.c0)OR(rt1.c1)))&(CAST(rt1.c2 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((((vt50.c0)IS NOT(vt50.c0)))>(((rt1.c2)>=(rt1.c2))))) ORDER BY ((((vt50.c0)OR(rt1.c1)))&(CAST(rt1.c2 AS BLOB))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array_length((NOT (rt1.c1)))) ORDER BY ((rt1.c2 COLLATE BINARY) NOTNULL) DESC, ABS(DISTINCT ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((NOT (rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE BINARY) NOTNULL) DESC, ABS(DISTINCT ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c2))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array_length((NOT (rt1.c1)))) ORDER BY ((rt1.c2 COLLATE BINARY) NOTNULL) DESC, ABS(DISTINCT ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((NOT (rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE BINARY) NOTNULL) DESC, ABS(DISTINCT ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c2))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array_length((NOT (rt1.c1)))) ORDER BY ((rt1.c2 COLLATE BINARY) NOTNULL) DESC, ABS(DISTINCT ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c2))) DESC;
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)-(vt50.c0)) IN (((vt50.c0) IS FALSE), (- (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)-(vt50.c0)) IN (((vt50.c0) IS FALSE), (- (vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)-(vt50.c0)) IN (((vt50.c0) IS FALSE), (- (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt50.c0)-(vt50.c0)) IN (((vt50.c0) IS FALSE), (- (vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((vt50.c0)-(vt50.c0)) IN (((vt50.c0) IS FALSE), (- (vt50.c0)))));
SELECT ALL * FROM vt50 WHERE (CAST(CAST(vt50.c0 AS TEXT) AS TEXT)) ORDER BY ((((vt50.c0) ISNULL)) BETWEEN (CASE x''  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) AND (((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt50.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0) ISNULL)) BETWEEN (CASE x''  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) AND (((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt50 WHERE (CAST(CAST(vt50.c0 AS TEXT) AS TEXT)) ORDER BY ((((vt50.c0) ISNULL)) BETWEEN (CASE x''  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) AND (((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt50.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0) ISNULL)) BETWEEN (CASE x''  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) AND (((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt50 WHERE (CAST(CAST(vt50.c0 AS TEXT) AS TEXT)) ORDER BY ((((vt50.c0) ISNULL)) BETWEEN (CASE x''  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 END) AND (((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END IN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (rt1.c1) AND ('..d〸有X#'))  NULLS LAST, INSTR(((rt1.c0)IS(rt1.c1)), ((NULL)AND(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END IN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (rt1.c1) AND ('..d〸有X#'))  NULLS LAST, INSTR(((rt1.c0)IS(rt1.c1)), ((NULL)AND(rt1.c1))) DESC);
SELECT ALL * FROM rt1 WHERE ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END IN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (rt1.c1) AND ('..d〸有X#'))  NULLS LAST, INSTR(((rt1.c0)IS(rt1.c1)), ((NULL)AND(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END IN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (rt1.c1) AND ('..d〸有X#'))  NULLS LAST, INSTR(((rt1.c0)IS(rt1.c1)), ((NULL)AND(rt1.c1))) DESC);
SELECT ALL * FROM rt1 WHERE ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END IN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))) BETWEEN (rt1.c1) AND ('..d〸有X#'))  NULLS LAST, INSTR(((rt1.c0)IS(rt1.c1)), ((NULL)AND(rt1.c1))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((CAST(rt1.c0 AS BLOB))))) ORDER BY ((((x'')OR(PRINTF('oi\r\'))))OR(0X574dac25 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((CAST(rt1.c0 AS BLOB))))) IS TRUE)  as count FROM rt1 ORDER BY ((((x'')OR(PRINTF('oi\r\'))))OR(0X574dac25 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((CAST(rt1.c0 AS BLOB))))) ORDER BY ((((x'')OR(PRINTF('oi\r\'))))OR(0X574dac25 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((CAST(rt1.c0 AS BLOB))))) IS TRUE)  as count FROM rt1 ORDER BY ((((x'')OR(PRINTF('oi\r\'))))OR(0X574dac25 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((CAST(rt1.c0 AS BLOB))))) ORDER BY ((((x'')OR(PRINTF('oi\r\'))))OR(0X574dac25 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c0)))>=(((rt1.c0) ISNULL)))) ORDER BY json_extract(rt1.c1 COLLATE NOCASE, (+ (rt1.c1))) ASC, CAST(rt1.c0 AS TEXT) COLLATE RTRIM DESC, ((((rt1.c2) IS TRUE))+((rt1.c0 IN (rt1.c0, rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))>=(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY json_extract(rt1.c1 COLLATE NOCASE, (+ (rt1.c1))) ASC, CAST(rt1.c0 AS TEXT) COLLATE RTRIM DESC, ((((rt1.c2) IS TRUE))+((rt1.c0 IN (rt1.c0, rt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c0)))>=(((rt1.c0) ISNULL)))) ORDER BY json_extract(rt1.c1 COLLATE NOCASE, (+ (rt1.c1))) ASC, CAST(rt1.c0 AS TEXT) COLLATE RTRIM DESC, ((((rt1.c2) IS TRUE))+((rt1.c0 IN (rt1.c0, rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0)))>=(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY json_extract(rt1.c1 COLLATE NOCASE, (+ (rt1.c1))) ASC, CAST(rt1.c0 AS TEXT) COLLATE RTRIM DESC, ((((rt1.c2) IS TRUE))+((rt1.c0 IN (rt1.c0, rt1.c2)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c0)/(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)/(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)/(rt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)/(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)/(rt1.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt50 ON (rt1.c1 IN ()) WHERE (rt1.c1) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON (rt1.c1 IN ()) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt50 ON (rt1.c1 IN ()) WHERE (rt1.c1) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON (rt1.c1 IN ()) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt50 ON (rt1.c1 IN ()) WHERE (rt1.c1) ORDER BY CAST(((rt1.c1)IS NOT(rt1.c2)) AS BLOB) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((x''))<=((rt1.c2))), (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), (rt1.c1 IN ())))>=((((rt1.c1) BETWEEN (-1.45865763E8) AND (rt1.c0)), TRIM(DISTINCT rt1.c1), (rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x''))<=((rt1.c2))), (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), (rt1.c1 IN ())))>=((((rt1.c1) BETWEEN (-1.45865763E8) AND (rt1.c0)), TRIM(DISTINCT rt1.c1), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((x''))<=((rt1.c2))), (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), (rt1.c1 IN ())))>=((((rt1.c1) BETWEEN (-1.45865763E8) AND (rt1.c0)), TRIM(DISTINCT rt1.c1), (rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x''))<=((rt1.c2))), (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), (rt1.c1 IN ())))>=((((rt1.c1) BETWEEN (-1.45865763E8) AND (rt1.c0)), TRIM(DISTINCT rt1.c1), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((x''))<=((rt1.c2))), (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))), (rt1.c1 IN ())))>=((((rt1.c1) BETWEEN (-1.45865763E8) AND (rt1.c0)), TRIM(DISTINCT rt1.c1), (rt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt50 WHERE ((((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0))))>(((vt50.c0)*(vt50.c0))))) ORDER BY (((vt50.c0) NOTNULL) IN (CASE WHEN vt50.c0 THEN vt50.c0 END, -1e500)) DESC, ((((((vt50.c0)>(vt50.c0)))OR(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))OR(CAST(vt50.c0 AS TEXT))) DESC, (- (CAST(vt50.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0))))>(((vt50.c0)*(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY (((vt50.c0) NOTNULL) IN (CASE WHEN vt50.c0 THEN vt50.c0 END, -1e500)) DESC, ((((((vt50.c0)>(vt50.c0)))OR(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))OR(CAST(vt50.c0 AS TEXT))) DESC, (- (CAST(vt50.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt50 WHERE ((((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0))))>(((vt50.c0)*(vt50.c0))))) ORDER BY (((vt50.c0) NOTNULL) IN (CASE WHEN vt50.c0 THEN vt50.c0 END, -1e500)) DESC, ((((((vt50.c0)>(vt50.c0)))OR(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))OR(CAST(vt50.c0 AS TEXT))) DESC, (- (CAST(vt50.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0))))>(((vt50.c0)*(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY (((vt50.c0) NOTNULL) IN (CASE WHEN vt50.c0 THEN vt50.c0 END, -1e500)) DESC, ((((((vt50.c0)>(vt50.c0)))OR(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))OR(CAST(vt50.c0 AS TEXT))) DESC, (- (CAST(vt50.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt50 WHERE ((((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0))))>(((vt50.c0)*(vt50.c0))))) ORDER BY (((vt50.c0) NOTNULL) IN (CASE WHEN vt50.c0 THEN vt50.c0 END, -1e500)) DESC, ((((((vt50.c0)>(vt50.c0)))OR(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))OR(CAST(vt50.c0 AS TEXT))) DESC, (- (CAST(vt50.c0 AS REAL)));
SELECT * FROM vt50 WHERE (x'') ORDER BY CAST(((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt50 ORDER BY CAST(((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt50 WHERE (x'') ORDER BY CAST(((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt50 ORDER BY CAST(((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt50 WHERE (x'') ORDER BY CAST(((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (NULL COLLATE BINARY) ORDER BY ((((+ (rt1.c2))))==((((rt1.c1)OR(rt1.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((+ (rt1.c2))))=((((rt1.c1)OR(rt1.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (NULL COLLATE BINARY) ORDER BY ((((+ (rt1.c2))))==((((rt1.c1)OR(rt1.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((+ (rt1.c2))))=((((rt1.c1)OR(rt1.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (NULL COLLATE BINARY) ORDER BY ((((+ (rt1.c2))))==((((rt1.c1)OR(rt1.c2))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST('-1823026071' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1823026071' AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST('-1823026071' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1823026071' AS REAL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST('-1823026071' AS REAL));
SELECT ALL * FROM vt50 LEFT OUTER JOIN rt1 ON CASE x''  WHEN 4039097 THEN (vt50.c0 IN (rt1.c0, rt1.c2)) WHEN '⟧*vd祝m' THEN ((rt1.c0)+(rt1.c2)) WHEN vt50.c0 COLLATE BINARY THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c0)) END WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0))) IS TRUE)) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON CASE x''  WHEN 4039097 THEN (vt50.c0 IN (rt1.c0, rt1.c2)) WHEN '⟧*vd祝m' THEN ((rt1.c0)+(rt1.c2)) WHEN vt50.c0 COLLATE BINARY THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT ALL * FROM vt50 LEFT OUTER JOIN rt1 ON CASE x''  WHEN 4039097 THEN (vt50.c0 IN (rt1.c0, rt1.c2)) WHEN '⟧*vd祝m' THEN ((rt1.c0)+(rt1.c2)) WHEN vt50.c0 COLLATE BINARY THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c0)) END WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0))) IS TRUE)) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON CASE x''  WHEN 4039097 THEN (vt50.c0 IN (rt1.c0, rt1.c2)) WHEN '⟧*vd祝m' THEN ((rt1.c0)+(rt1.c2)) WHEN vt50.c0 COLLATE BINARY THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT ALL * FROM vt50 LEFT OUTER JOIN rt1 ON CASE x''  WHEN 4039097 THEN (vt50.c0 IN (rt1.c0, rt1.c2)) WHEN '⟧*vd祝m' THEN ((rt1.c0)+(rt1.c2)) WHEN vt50.c0 COLLATE BINARY THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c0)) END WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (vt50.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END AS BLOB));
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c0) IS FALSE)))) ORDER BY ((((rt1.c2)AND(rt1.c1)))OR(((rt1.c0) NOTNULL))) ASC  NULLS LAST, (CAST(NULL AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)AND(rt1.c1)))OR(((rt1.c0) NOTNULL))) ASC  NULLS LAST, (CAST(NULL AS TEXT) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c0) IS FALSE)))) ORDER BY ((((rt1.c2)AND(rt1.c1)))OR(((rt1.c0) NOTNULL))) ASC  NULLS LAST, (CAST(NULL AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)AND(rt1.c1)))OR(((rt1.c0) NOTNULL))) ASC  NULLS LAST, (CAST(NULL AS TEXT) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((- (rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c0) IS FALSE)))) ORDER BY ((((rt1.c2)AND(rt1.c1)))OR(((rt1.c0) NOTNULL))) ASC  NULLS LAST, (CAST(NULL AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt50 ON (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ()) WHERE (((NULL)LIKE(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt50 ON (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ()) WHERE (((NULL)LIKE(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt50 ON (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END IN ()) WHERE (((NULL)LIKE(((rt1.c1) NOT NULL))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((rt1.c2 COLLATE BINARY) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((rt1.c2 COLLATE BINARY) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((rt1.c2 COLLATE BINARY) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c2)))));
SELECT * FROM vt50, rt1 WHERE ((((((rt1.c2) BETWEEN (vt50.c0) AND (vt50.c0))))<=((rt1.c1 COLLATE NOCASE)))) ORDER BY (NOT (((rt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (vt50.c0) AND (vt50.c0))))<=((rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (NOT (((rt1.c0) NOTNULL))) DESC);
SELECT * FROM vt50, rt1 WHERE ((((((rt1.c2) BETWEEN (vt50.c0) AND (vt50.c0))))<=((rt1.c1 COLLATE NOCASE)))) ORDER BY (NOT (((rt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (vt50.c0) AND (vt50.c0))))<=((rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (NOT (((rt1.c0) NOTNULL))) DESC);
SELECT * FROM vt50, rt1 WHERE ((((((rt1.c2) BETWEEN (vt50.c0) AND (vt50.c0))))<=((rt1.c1 COLLATE NOCASE)))) ORDER BY (NOT (((rt1.c0) NOTNULL))) DESC;
SELECT * FROM vt50 WHERE (((vt50.c0)>>((((vt50.c0, vt50.c0, vt50.c0))<>((vt50.c0, vt50.c0, x'927b6294')))))) ORDER BY vt50.c0  NULLS FIRST, ((vt50.c0 COLLATE BINARY)GLOB(((((vt50.c0)OR(vt50.c0)))OR(vt50.c0))))  NULLS LAST, CAST(vt50.c0 AS TEXT) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0)>>((((vt50.c0, vt50.c0, vt50.c0))!=((vt50.c0, vt50.c0, x'927b6294')))))) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS FIRST, ((vt50.c0 COLLATE BINARY)GLOB(((((vt50.c0)OR(vt50.c0)))OR(vt50.c0))))  NULLS LAST, CAST(vt50.c0 AS TEXT) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt50 WHERE (((vt50.c0)>>((((vt50.c0, vt50.c0, vt50.c0))<>((vt50.c0, vt50.c0, x'927b6294')))))) ORDER BY vt50.c0  NULLS FIRST, ((vt50.c0 COLLATE BINARY)GLOB(((((vt50.c0)OR(vt50.c0)))OR(vt50.c0))))  NULLS LAST, CAST(vt50.c0 AS TEXT) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt50.c0)>>((((vt50.c0, vt50.c0, vt50.c0))!=((vt50.c0, vt50.c0, x'927b6294')))))) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS FIRST, ((vt50.c0 COLLATE BINARY)GLOB(((((vt50.c0)OR(vt50.c0)))OR(vt50.c0))))  NULLS LAST, CAST(vt50.c0 AS TEXT) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt50 WHERE (((vt50.c0)>>((((vt50.c0, vt50.c0, vt50.c0))<>((vt50.c0, vt50.c0, x'927b6294')))))) ORDER BY vt50.c0  NULLS FIRST, ((vt50.c0 COLLATE BINARY)GLOB(((((vt50.c0)OR(vt50.c0)))OR(vt50.c0))))  NULLS LAST, CAST(vt50.c0 AS TEXT) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt50 WHERE (((((vt50.c0)<>(vt50.c0)))<=(((NULL)*(vt50.c0))))) ORDER BY (((vt50.c0, vt50.c0, vt50.c0))<=((vt50.c0, vt50.c0, vt50.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)!=(vt50.c0)))<=(((NULL)*(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY (((vt50.c0, vt50.c0, vt50.c0))<=((vt50.c0, vt50.c0, vt50.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt50 WHERE (((((vt50.c0)<>(vt50.c0)))<=(((NULL)*(vt50.c0))))) ORDER BY (((vt50.c0, vt50.c0, vt50.c0))<=((vt50.c0, vt50.c0, vt50.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)!=(vt50.c0)))<=(((NULL)*(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY (((vt50.c0, vt50.c0, vt50.c0))<=((vt50.c0, vt50.c0, vt50.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt50 WHERE (((((vt50.c0)<>(vt50.c0)))<=(((NULL)*(vt50.c0))))) ORDER BY (((vt50.c0, vt50.c0, vt50.c0))<=((vt50.c0, vt50.c0, vt50.c0))) COLLATE NOCASE;
SELECT * FROM vt50, rt1 WHERE (CAST(((rt1.c1)OR(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)OR(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (CAST(((rt1.c1)OR(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)OR(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (CAST(((rt1.c1)OR(rt1.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE RTRIM);
SELECT * FROM vt50 WHERE ((((((vt50.c0 IN ()))AND(x'ca23')))AND(vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0 IN ()))AND(x'ca23')))AND(vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE ((((((vt50.c0 IN ()))AND(x'ca23')))AND(vt50.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0 IN ()))AND(x'ca23')))AND(vt50.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE ((((((vt50.c0 IN ()))AND(x'ca23')))AND(vt50.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) ORDER BY CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) ORDER BY CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) ORDER BY CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt1, vt50 WHERE ((((((('0.9668448084603183')AND(x'3c95')))OR(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.9668448084603183')AND(x'3c95')))OR(rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((((((('0.9668448084603183')AND(x'3c95')))OR(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((('0.9668448084603183')AND(x'3c95')))OR(rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE ((((((('0.9668448084603183')AND(x'3c95')))OR(rt1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))%((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((LIKELIHOOD(rt1.c2, 0.8608709527202391))IS(LOWER(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT))%((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((LIKELIHOOD(rt1.c2, 0.8608709527202391))IS(LOWER(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))%((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((LIKELIHOOD(rt1.c2, 0.8608709527202391))IS(LOWER(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT))%((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((LIKELIHOOD(rt1.c2, 0.8608709527202391))IS(LOWER(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT))%((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((LIKELIHOOD(rt1.c2, 0.8608709527202391))IS(LOWER(DISTINCT rt1.c1)));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c0)), ((rt1.c1)+(rt1.c1)), ((rt1.c0) NOTNULL))) AND ((json_valid('530034842'), rt1.c0 COLLATE BINARY, ((((((((rt1.c2)OR(NULL)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c0)), ((rt1.c1)+(rt1.c1)), ((rt1.c0) NOTNULL))) AND ((json_valid('530034842'), rt1.c0 COLLATE BINARY, ((((((((rt1.c2)OR(NULL)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c0)), ((rt1.c1)+(rt1.c1)), ((rt1.c0) NOTNULL))) AND ((json_valid('530034842'), rt1.c0 COLLATE BINARY, ((((((((rt1.c2)OR(NULL)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c0)), ((rt1.c1)+(rt1.c1)), ((rt1.c0) NOTNULL))) AND ((json_valid('530034842'), rt1.c0 COLLATE BINARY, ((((((((rt1.c2)OR(NULL)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c0)), ((rt1.c1)+(rt1.c1)), ((rt1.c0) NOTNULL))) AND ((json_valid('530034842'), rt1.c0 COLLATE BINARY, ((((((((rt1.c2)OR(NULL)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1))))));
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c2)<(rt1.c1)) THEN (0xffffffffa817f19c IN ()) WHEN x'' COLLATE BINARY THEN CASE WHEN vt50.c0 THEN rt1.c1 END ELSE 'A#' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c2)<(rt1.c1)) THEN (0Xffffffffa817f19c IN ()) WHEN x'' COLLATE BINARY THEN CASE WHEN vt50.c0 THEN rt1.c1 END ELSE 'A#' END) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c2)<(rt1.c1)) THEN (0xffffffffa817f19c IN ()) WHEN x'' COLLATE BINARY THEN CASE WHEN vt50.c0 THEN rt1.c1 END ELSE 'A#' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c2)<(rt1.c1)) THEN (0Xffffffffa817f19c IN ()) WHEN x'' COLLATE BINARY THEN CASE WHEN vt50.c0 THEN rt1.c1 END ELSE 'A#' END) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c2)<(rt1.c1)) THEN (0xffffffffa817f19c IN ()) WHEN x'' COLLATE BINARY THEN CASE WHEN vt50.c0 THEN rt1.c1 END ELSE 'A#' END);
SELECT COUNT(*) FROM rt1 WHERE (LENGTH(x'')) ORDER BY 0.009268602533060166 ASC  NULLS LAST, CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.05760969746826361))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(x'')) IS TRUE)  as count FROM rt1 ORDER BY 0.009268602533060166 ASC  NULLS LAST, CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.05760969746826361))) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (LENGTH(x'')) ORDER BY 0.009268602533060166 ASC  NULLS LAST, CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.05760969746826361))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LENGTH(x'')) IS TRUE)  as count FROM rt1 ORDER BY 0.009268602533060166 ASC  NULLS LAST, CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.05760969746826361))) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (LENGTH(x'')) ORDER BY 0.009268602533060166 ASC  NULLS LAST, CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((0.05760969746826361))) AS INTEGER)  NULLS LAST;
SELECT * FROM vt50, rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR(rt1.c2)))AND(GLOB(-849465288, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS NUMERIC))OR(rt1.c2)))AND(GLOB(-849465288, rt1.c1)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR(rt1.c2)))AND(GLOB(-849465288, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS NUMERIC))OR(rt1.c2)))AND(GLOB(-849465288, rt1.c1)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((CAST(rt1.c2 AS NUMERIC))OR(rt1.c2)))AND(GLOB(-849465288, rt1.c1))));
SELECT ALL COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON ((((vt50.c0)>=(vt50.c0))) NOTNULL) WHERE (CASE WHEN (+ (vt50.c0)) THEN TYPEOF(rt1.c0) END) ORDER BY ((((rt1.c2)<=(vt50.c0)))/(NULLIF(DISTINCT vt50.c0, rt1.c2)))  NULLS LAST, '1091451577';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt50.c0)) THEN TYPEOF(rt1.c0) END) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON ((((vt50.c0)>=(vt50.c0))) NOTNULL) ORDER BY ((((rt1.c2)<=(vt50.c0)))/(NULLIF(DISTINCT vt50.c0, rt1.c2)))  NULLS LAST, '1091451577');
SELECT ALL COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON ((((vt50.c0)>=(vt50.c0))) NOTNULL) WHERE (CASE WHEN (+ (vt50.c0)) THEN TYPEOF(rt1.c0) END) ORDER BY ((((rt1.c2)<=(vt50.c0)))/(NULLIF(DISTINCT vt50.c0, rt1.c2)))  NULLS LAST, '1091451577';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt50.c0)) THEN TYPEOF(rt1.c0) END) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON ((((vt50.c0)>=(vt50.c0))) NOTNULL) ORDER BY ((((rt1.c2)<=(vt50.c0)))/(NULLIF(DISTINCT vt50.c0, rt1.c2)))  NULLS LAST, '1091451577');
SELECT ALL COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON ((((vt50.c0)>=(vt50.c0))) NOTNULL) WHERE (CASE WHEN (+ (vt50.c0)) THEN TYPEOF(rt1.c0) END) ORDER BY ((((rt1.c2)<=(vt50.c0)))/(NULLIF(DISTINCT vt50.c0, rt1.c2)))  NULLS LAST, '1091451577';
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN ((vt50.c0)+(NULL)) THEN CAST(vt50.c0 AS NUMERIC) ELSE 0.5763414889298534 END) ORDER BY CAST((~ (vt50.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt50.c0)+(NULL)) THEN CAST(vt50.c0 AS NUMERIC) ELSE 0.5763414889298534 END) IS TRUE)  as count FROM vt50 ORDER BY CAST((~ (vt50.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN ((vt50.c0)+(NULL)) THEN CAST(vt50.c0 AS NUMERIC) ELSE 0.5763414889298534 END) ORDER BY CAST((~ (vt50.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt50.c0)+(NULL)) THEN CAST(vt50.c0 AS NUMERIC) ELSE 0.5763414889298534 END) IS TRUE)  as count FROM vt50 ORDER BY CAST((~ (vt50.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN ((vt50.c0)+(NULL)) THEN CAST(vt50.c0 AS NUMERIC) ELSE 0.5763414889298534 END) ORDER BY CAST((~ (vt50.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) ORDER BY (NOT ((~ (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((~ (rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) ORDER BY (NOT ((~ (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (NOT ((~ (rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN ())) ORDER BY (NOT ((~ (rt1.c1))))  NULLS LAST;
SELECT * FROM vt50, rt1 WHERE ((((rt1.c0 IN (vt50.c0)))&(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (vt50.c0)))&(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((((rt1.c0 IN (vt50.c0)))&(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (vt50.c0)))&(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((((rt1.c0 IN (vt50.c0)))&(((rt1.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON ((((TRIM(rt1.c0))AND((rt1.c2 IN ()))))AND(((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c2)))) WHERE ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)) IN (((rt1.c2)IS NOT(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)) IN (((rt1.c2)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON ((((TRIM(rt1.c0))AND((rt1.c2 IN ()))))AND(((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON ((((TRIM(rt1.c0))AND((rt1.c2 IN ()))))AND(((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c2)))) WHERE ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)) IN (((rt1.c2)IS NOT(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)) IN (((rt1.c2)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON ((((TRIM(rt1.c0))AND((rt1.c2 IN ()))))AND(((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON ((((TRIM(rt1.c0))AND((rt1.c2 IN ()))))AND(((rt1.c2) BETWEEN (vt50.c0) AND (rt1.c2)))) WHERE ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)) IN (((rt1.c2)IS NOT(rt1.c0)))));
SELECT COUNT(*) FROM rt1, vt50 WHERE ((('%_Z4FS2N') ISNULL)) ORDER BY CASE WHEN vt50.c0 COLLATE BINARY THEN rt1.c2 COLLATE RTRIM END ASC  NULLS LAST, ((rt1.c1) BETWEEN (vt50.c0) AND (rt1.c1)) COLLATE NOCASE, ((CAST(rt1.c0 AS INTEGER))<((NOT (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('%_Z4FS2N') ISNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN vt50.c0 COLLATE BINARY THEN rt1.c2 COLLATE RTRIM END ASC  NULLS LAST, ((rt1.c1) BETWEEN (vt50.c0) AND (rt1.c1)) COLLATE NOCASE, ((CAST(rt1.c0 AS INTEGER))<((NOT (rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((('%_Z4FS2N') ISNULL)) ORDER BY CASE WHEN vt50.c0 COLLATE BINARY THEN rt1.c2 COLLATE RTRIM END ASC  NULLS LAST, ((rt1.c1) BETWEEN (vt50.c0) AND (rt1.c1)) COLLATE NOCASE, ((CAST(rt1.c0 AS INTEGER))<((NOT (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('%_Z4FS2N') ISNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN vt50.c0 COLLATE BINARY THEN rt1.c2 COLLATE RTRIM END ASC  NULLS LAST, ((rt1.c1) BETWEEN (vt50.c0) AND (rt1.c1)) COLLATE NOCASE, ((CAST(rt1.c0 AS INTEGER))<((NOT (rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((('%_Z4FS2N') ISNULL)) ORDER BY CASE WHEN vt50.c0 COLLATE BINARY THEN rt1.c2 COLLATE RTRIM END ASC  NULLS LAST, ((rt1.c1) BETWEEN (vt50.c0) AND (rt1.c1)) COLLATE NOCASE, ((CAST(rt1.c0 AS INTEGER))<((NOT (rt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((((rt1.c2) IS FALSE))||((NOT (rt1.c1))))) ORDER BY ((((vt50.c0) ISNULL))/((NOT (vt50.c0))))  NULLS FIRST, (((vt50.c0, rt1.c2, rt1.c1)) BETWEEN ((((vt50.c0)>=(rt1.c0)), (((rt1.c0, rt1.c2, 0.10854787214901529)) BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt1.c0, vt50.c0, rt1.c2))), (- (vt50.c0)))) AND ((rt1.c2, rt1.c1, (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))  NULLS LAST, ((vt50.c0)+(rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))||((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((vt50.c0) ISNULL))/((NOT (vt50.c0))))  NULLS FIRST, (((vt50.c0, rt1.c2, rt1.c1)) BETWEEN ((((vt50.c0)>=(rt1.c0)), (((rt1.c0, rt1.c2, 0.10854787214901529)) BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt1.c0, vt50.c0, rt1.c2))), (- (vt50.c0)))) AND ((rt1.c2, rt1.c1, (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))  NULLS LAST, ((vt50.c0)+(rt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((((rt1.c2) IS FALSE))||((NOT (rt1.c1))))) ORDER BY ((((vt50.c0) ISNULL))/((NOT (vt50.c0))))  NULLS FIRST, (((vt50.c0, rt1.c2, rt1.c1)) BETWEEN ((((vt50.c0)>=(rt1.c0)), (((rt1.c0, rt1.c2, 0.10854787214901529)) BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt1.c0, vt50.c0, rt1.c2))), (- (vt50.c0)))) AND ((rt1.c2, rt1.c1, (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))  NULLS LAST, ((vt50.c0)+(rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))||((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((vt50.c0) ISNULL))/((NOT (vt50.c0))))  NULLS FIRST, (((vt50.c0, rt1.c2, rt1.c1)) BETWEEN ((((vt50.c0)>=(rt1.c0)), (((rt1.c0, rt1.c2, 0.10854787214901529)) BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt1.c0, vt50.c0, rt1.c2))), (- (vt50.c0)))) AND ((rt1.c2, rt1.c1, (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))  NULLS LAST, ((vt50.c0)+(rt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((((rt1.c2) IS FALSE))||((NOT (rt1.c1))))) ORDER BY ((((vt50.c0) ISNULL))/((NOT (vt50.c0))))  NULLS FIRST, (((vt50.c0, rt1.c2, rt1.c1)) BETWEEN ((((vt50.c0)>=(rt1.c0)), (((rt1.c0, rt1.c2, 0.10854787214901529)) BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt1.c0, vt50.c0, rt1.c2))), (- (vt50.c0)))) AND ((rt1.c2, rt1.c1, (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))  NULLS LAST, ((vt50.c0)+(rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt50 WHERE (x'') ORDER BY ((- (rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt50 ORDER BY ((- (rt1.c0)) IN ()) DESC);
SELECT COUNT(*) FROM rt1, vt50 WHERE (x'') ORDER BY ((- (rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt50 ORDER BY ((- (rt1.c0)) IN ()) DESC);
SELECT COUNT(*) FROM rt1, vt50 WHERE (x'') ORDER BY ((- (rt1.c0)) IN ()) DESC;
SELECT COUNT(*) FROM rt1, vt50 WHERE (CAST(((rt1.c0)GLOB(rt1.c1)) AS NUMERIC)) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)GLOB(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 END)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (CAST(((rt1.c0)GLOB(rt1.c1)) AS NUMERIC)) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)GLOB(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 END)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (CAST(((rt1.c0)GLOB(rt1.c1)) AS NUMERIC)) ORDER BY (((rt1.c1)) NOT BETWEEN ((((rt1.c2)<(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 END)))  NULLS LAST;
SELECT * FROM rt1 INNER JOIN vt50 ON 0xfffffffff95f2752 WHERE ('') ORDER BY ((((((rt1.c1)*(x'b1e8')))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))))AND(vt50.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON 0Xfffffffff95f2752 ORDER BY ((((((rt1.c1)*(x'b1e8')))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))))AND(vt50.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt50 ON 0xfffffffff95f2752 WHERE ('') ORDER BY ((((((rt1.c1)*(x'b1e8')))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))))AND(vt50.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 INNER JOIN vt50 ON 0Xfffffffff95f2752 ORDER BY ((((((rt1.c1)*(x'b1e8')))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))))AND(vt50.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt50 ON 0xfffffffff95f2752 WHERE ('') ORDER BY ((((((rt1.c1)*(x'b1e8')))OR((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt50.c0))))))AND(vt50.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) BETWEEN (CAST('' AS TEXT)) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) BETWEEN (CAST('' AS TEXT)) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) BETWEEN (CAST('' AS TEXT)) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) BETWEEN (CAST('' AS TEXT)) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) BETWEEN (CAST('' AS TEXT)) AND ((rt1.c2 IN ()))));
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) IS FALSE)))<((CAST(vt50.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0) IS FALSE)))<((CAST(vt50.c0 AS REAL))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) IS FALSE)))<((CAST(vt50.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0) IS FALSE)))<((CAST(vt50.c0 AS REAL))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) IS FALSE)))<((CAST(vt50.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1, CASE WHEN rt1.c1 THEN 0.2910430640291799 ELSE rt1.c1 END, (NOT (rt1.c1))))<=((LIKELY(rt1.c0), vt50.c0, (+ (x''))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, CASE WHEN rt1.c1 THEN 0.2910430640291799 ELSE rt1.c1 END, (NOT (rt1.c1))))<=((LIKELY(rt1.c0), vt50.c0, (+ (x'')))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1, CASE WHEN rt1.c1 THEN 0.2910430640291799 ELSE rt1.c1 END, (NOT (rt1.c1))))<=((LIKELY(rt1.c0), vt50.c0, (+ (x''))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, CASE WHEN rt1.c1 THEN 0.2910430640291799 ELSE rt1.c1 END, (NOT (rt1.c1))))<=((LIKELY(rt1.c0), vt50.c0, (+ (x'')))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1, CASE WHEN rt1.c1 THEN 0.2910430640291799 ELSE rt1.c1 END, (NOT (rt1.c1))))<=((LIKELY(rt1.c0), vt50.c0, (+ (x''))))));
SELECT * FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (vt50.c0);
SELECT * FROM rt1, vt50 WHERE (((((rt1.c2)GLOB(vt50.c0)))IS(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)GLOB(vt50.c0)))IS(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((((rt1.c2)GLOB(vt50.c0)))IS(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)GLOB(vt50.c0)))IS(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((((rt1.c2)GLOB(vt50.c0)))IS(CAST(rt1.c1 AS BLOB))));
SELECT COUNT(*) FROM rt1 WHERE (CASE CAST(rt1.c1 AS TEXT)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 END THEN ((x'')GLOB(rt1.c2)) WHEN 0.4761499190946179 THEN ((rt1.c0)*(rt1.c1)) WHEN ((rt1.c0)<(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) ELSE '430911247' END) ORDER BY ((LTRIM(rt1.c0)) BETWEEN (rt1.c1) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS TEXT)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 END THEN ((x'')GLOB(rt1.c2)) WHEN 0.4761499190946179 THEN ((rt1.c0)*(rt1.c1)) WHEN ((rt1.c0)<(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) ELSE '430911247' END) IS TRUE)  as count FROM rt1 ORDER BY ((LTRIM(rt1.c0)) BETWEEN (rt1.c1) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE CAST(rt1.c1 AS TEXT)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 END THEN ((x'')GLOB(rt1.c2)) WHEN 0.4761499190946179 THEN ((rt1.c0)*(rt1.c1)) WHEN ((rt1.c0)<(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) ELSE '430911247' END) ORDER BY ((LTRIM(rt1.c0)) BETWEEN (rt1.c1) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS TEXT)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 END THEN ((x'')GLOB(rt1.c2)) WHEN 0.4761499190946179 THEN ((rt1.c0)*(rt1.c1)) WHEN ((rt1.c0)<(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) ELSE '430911247' END) IS TRUE)  as count FROM rt1 ORDER BY ((LTRIM(rt1.c0)) BETWEEN (rt1.c1) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE CAST(rt1.c1 AS TEXT)  WHEN CASE WHEN rt1.c1 THEN rt1.c1 END THEN ((x'')GLOB(rt1.c2)) WHEN 0.4761499190946179 THEN ((rt1.c0)*(rt1.c1)) WHEN ((rt1.c0)<(rt1.c1)) THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) ELSE '430911247' END) ORDER BY ((LTRIM(rt1.c0)) BETWEEN (rt1.c1) AND (((((rt1.c1)AND(rt1.c0)))OR(rt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c0)LIKE(rt1.c0))))) ORDER BY TIME(0.406825789271859, (((rt1.c1))<=((rt1.c2))), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (NULL))), highlight(LIKELIHOOD(rt1.c2, 0.5603965982205018), NULLIF(DISTINCT rt1.c1, rt1.c2), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), (NOT (rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c0)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY TIME(0.406825789271859, (((rt1.c1))<=((rt1.c2))), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (NULL))), highlight(LIKELIHOOD(rt1.c2, 0.5603965982205018), NULLIF(DISTINCT rt1.c1, rt1.c2), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), (NOT (rt1.c1))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c0)LIKE(rt1.c0))))) ORDER BY TIME(0.406825789271859, (((rt1.c1))<=((rt1.c2))), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (NULL))), highlight(LIKELIHOOD(rt1.c2, 0.5603965982205018), NULLIF(DISTINCT rt1.c1, rt1.c2), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), (NOT (rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) NOT BETWEEN ((~ (rt1.c2))) AND (((rt1.c0)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY TIME(0.406825789271859, (((rt1.c1))<=((rt1.c2))), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (NULL))), highlight(LIKELIHOOD(rt1.c2, 0.5603965982205018), NULLIF(DISTINCT rt1.c1, rt1.c2), ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)), (NOT (rt1.c1))) ASC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) IS FALSE)  WHEN CASE WHEN vt50.c0 THEN vt50.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END THEN (~ (rt1.c1)) ELSE CAST('⟧*VD祝M' AS NUMERIC) END WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) IS FALSE)  WHEN CASE WHEN vt50.c0 THEN vt50.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END THEN (~ (rt1.c1)) ELSE CAST('⟧*VD祝M' AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) IS FALSE)  WHEN CASE WHEN vt50.c0 THEN vt50.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END THEN (~ (rt1.c1)) ELSE CAST('⟧*VD祝M' AS NUMERIC) END WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) IS FALSE)  WHEN CASE WHEN vt50.c0 THEN vt50.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END THEN (~ (rt1.c1)) ELSE CAST('⟧*VD祝M' AS NUMERIC) END);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) IS FALSE)  WHEN CASE WHEN vt50.c0 THEN vt50.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END THEN (~ (rt1.c1)) ELSE CAST('⟧*VD祝M' AS NUMERIC) END WHERE ('');
SELECT COUNT(*) FROM rt1 WHERE (json_type((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_type((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_type((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0)))));
SELECT * FROM vt50, rt1 WHERE ((~ (((((rt1.c0)OR(vt50.c0)))AND(vt50.c0))))) ORDER BY ((((- (vt50.c0))))<((((vt50.c0)&(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c0)OR(vt50.c0)))AND(vt50.c0))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((- (vt50.c0))))<((((vt50.c0)&(rt1.c2))))) DESC);
SELECT * FROM vt50, rt1 WHERE ((~ (((((rt1.c0)OR(vt50.c0)))AND(vt50.c0))))) ORDER BY ((((- (vt50.c0))))<((((vt50.c0)&(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c0)OR(vt50.c0)))AND(vt50.c0))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((- (vt50.c0))))<((((vt50.c0)&(rt1.c2))))) DESC);
SELECT * FROM vt50, rt1 WHERE ((~ (((((rt1.c0)OR(vt50.c0)))AND(vt50.c0))))) ORDER BY ((((- (vt50.c0))))<((((vt50.c0)&(rt1.c2))))) DESC;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1))>=(((rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))>=(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1))>=(((rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))>=(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1))>=(((rt1.c1 IN ())))));
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((vt50.c0) ISNULL) IN ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) ISNULL) IN ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((vt50.c0) ISNULL) IN ((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) ISNULL) IN ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((vt50.c0) ISNULL) IN ((~ (rt1.c0)))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST((NOT (vt50.c0)) AS NUMERIC)) ORDER BY ((((rt1.c1)*(rt1.c1))) NOT BETWEEN (((vt50.c0)OR('XW'))) AND (UPPER(rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt50.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c1)*(rt1.c1))) NOT BETWEEN (((vt50.c0)OR('XW'))) AND (UPPER(rt1.c0))) DESC);
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST((NOT (vt50.c0)) AS NUMERIC)) ORDER BY ((((rt1.c1)*(rt1.c1))) NOT BETWEEN (((vt50.c0)OR('XW'))) AND (UPPER(rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt50.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c1)*(rt1.c1))) NOT BETWEEN (((vt50.c0)OR('XW'))) AND (UPPER(rt1.c0))) DESC);
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST((NOT (vt50.c0)) AS NUMERIC)) ORDER BY ((((rt1.c1)*(rt1.c1))) NOT BETWEEN (((vt50.c0)OR('XW'))) AND (UPPER(rt1.c0))) DESC;
SELECT ALL * FROM vt50 WHERE (((UNICODE(NULL))*(vt50.c0))) ORDER BY ((((vt50.c0)|(vt50.c0))) NOTNULL) DESC, 0.09784490425316306  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNICODE(NULL))*(vt50.c0))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0)|(vt50.c0))) NOTNULL) DESC, 0.09784490425316306  NULLS FIRST);
SELECT ALL * FROM vt50 WHERE (((UNICODE(NULL))*(vt50.c0))) ORDER BY ((((vt50.c0)|(vt50.c0))) NOTNULL) DESC, 0.09784490425316306  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNICODE(NULL))*(vt50.c0))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0)|(vt50.c0))) NOTNULL) DESC, 0.09784490425316306  NULLS FIRST);
SELECT ALL * FROM vt50 WHERE (((UNICODE(NULL))*(vt50.c0))) ORDER BY ((((vt50.c0)|(vt50.c0))) NOTNULL) DESC, 0.09784490425316306  NULLS FIRST;
SELECT * FROM vt50, rt1 WHERE ((+ (((((((((rt1.c1)AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))OR(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c1)AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))OR(vt50.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((+ (((((((((rt1.c1)AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))OR(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c1)AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))OR(vt50.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((+ (((((((((rt1.c1)AND(rt1.c1)))AND(vt50.c0)))AND(rt1.c1)))OR(vt50.c0)))));
SELECT * FROM vt50 WHERE ('') ORDER BY vt50.c0 DESC, CASE ((vt50.c0)|(vt50.c0))  WHEN NULL COLLATE NOCASE THEN (('')|(vt50.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt50 ORDER BY vt50.c0 DESC, CASE ((vt50.c0)|(vt50.c0))  WHEN NULL COLLATE NOCASE THEN (('')|(vt50.c0)) END ASC);
SELECT * FROM vt50 WHERE ('') ORDER BY vt50.c0 DESC, CASE ((vt50.c0)|(vt50.c0))  WHEN NULL COLLATE NOCASE THEN (('')|(vt50.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt50 ORDER BY vt50.c0 DESC, CASE ((vt50.c0)|(vt50.c0))  WHEN NULL COLLATE NOCASE THEN (('')|(vt50.c0)) END ASC);
SELECT * FROM vt50 WHERE ('') ORDER BY vt50.c0 DESC, CASE ((vt50.c0)|(vt50.c0))  WHEN NULL COLLATE NOCASE THEN (('')|(vt50.c0)) END ASC;
SELECT * FROM rt1 NATURAL JOIN vt50 WHERE ((((rt1.c1 COLLATE BINARY))<=((((((((((x'')OR(vt50.c0)))AND(vt50.c0)))OR(rt1.c1)))OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 COLLATE BINARY))<=((((((((((x'')OR(vt50.c0)))AND(vt50.c0)))OR(rt1.c1)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50);
SELECT * FROM rt1 NATURAL JOIN vt50 WHERE ((((rt1.c1 COLLATE BINARY))<=((((((((((x'')OR(vt50.c0)))AND(vt50.c0)))OR(rt1.c1)))OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 COLLATE BINARY))<=((((((((((x'')OR(vt50.c0)))AND(vt50.c0)))OR(rt1.c1)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt50);
SELECT * FROM rt1 NATURAL JOIN vt50 WHERE ((((rt1.c1 COLLATE BINARY))<=((((((((((x'')OR(vt50.c0)))AND(vt50.c0)))OR(rt1.c1)))OR(rt1.c1))))));
SELECT ALL * FROM rt1, vt50 WHERE ((~ ((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt1.c2))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE ((~ ((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt1.c2))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE ((~ ((- (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_valid(rt1.c0)) NOT NULL)) ORDER BY (((rt1.c2)&(rt1.c1)) IN ())  NULLS FIRST, (~ (((rt1.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_valid(rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)&(rt1.c1)) IN ())  NULLS FIRST, (~ (((rt1.c1) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_valid(rt1.c0)) NOT NULL)) ORDER BY (((rt1.c2)&(rt1.c1)) IN ())  NULLS FIRST, (~ (((rt1.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_valid(rt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)&(rt1.c1)) IN ())  NULLS FIRST, (~ (((rt1.c1) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_valid(rt1.c0)) NOT NULL)) ORDER BY (((rt1.c2)&(rt1.c1)) IN ())  NULLS FIRST, (~ (((rt1.c1) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM vt50 WHERE (CASE vt50.c0  WHEN CASE vt50.c0  WHEN NULL THEN vt50.c0 ELSE vt50.c0 END THEN (((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))) WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) WHEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) THEN ((vt50.c0)=(vt50.c0)) ELSE TYPEOF(vt50.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt50.c0  WHEN CASE vt50.c0  WHEN NULL THEN vt50.c0 ELSE vt50.c0 END THEN (((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))) WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) WHEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) THEN ((vt50.c0)=(vt50.c0)) ELSE TYPEOF(vt50.c0) END) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (CASE vt50.c0  WHEN CASE vt50.c0  WHEN NULL THEN vt50.c0 ELSE vt50.c0 END THEN (((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))) WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) WHEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) THEN ((vt50.c0)=(vt50.c0)) ELSE TYPEOF(vt50.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt50.c0  WHEN CASE vt50.c0  WHEN NULL THEN vt50.c0 ELSE vt50.c0 END THEN (((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))) WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) WHEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) THEN ((vt50.c0)=(vt50.c0)) ELSE TYPEOF(vt50.c0) END) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (CASE vt50.c0  WHEN CASE vt50.c0  WHEN NULL THEN vt50.c0 ELSE vt50.c0 END THEN (((vt50.c0, vt50.c0, vt50.c0)) BETWEEN ((vt50.c0, vt50.c0, vt50.c0)) AND ((vt50.c0, vt50.c0, vt50.c0))) WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) THEN CAST(vt50.c0 AS NUMERIC) WHEN ((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)) THEN ((vt50.c0)=(vt50.c0)) ELSE TYPEOF(vt50.c0) END);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY ((((vt50.c0)GLOB(vt50.c0))) NOT NULL) ASC  NULLS FIRST, (+ (((vt50.c0)%(vt50.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0)GLOB(vt50.c0))) NOT NULL) ASC  NULLS FIRST, (+ (((vt50.c0)%(vt50.c0)))) ASC);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY ((((vt50.c0)GLOB(vt50.c0))) NOT NULL) ASC  NULLS FIRST, (+ (((vt50.c0)%(vt50.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0)GLOB(vt50.c0))) NOT NULL) ASC  NULLS FIRST, (+ (((vt50.c0)%(vt50.c0)))) ASC);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY ((((vt50.c0)GLOB(vt50.c0))) NOT NULL) ASC  NULLS FIRST, (+ (((vt50.c0)%(vt50.c0)))) ASC;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)))&((+ (rt1.c1)))) WHERE (CAST(CAST(rt1.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)))&((+ (rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)))&((+ (rt1.c1)))) WHERE (CAST(CAST(rt1.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)))&((+ (rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON ((((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)))&((+ (rt1.c1)))) WHERE (CAST(CAST(rt1.c0 AS BLOB) AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 AS NUMERIC)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 AS NUMERIC)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 AS NUMERIC));
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)&(vt50.c0))) NOT NULL)) ORDER BY TYPEOF(CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)&(vt50.c0))) NOT NULL)) IS TRUE)  as count FROM vt50 ORDER BY TYPEOF(CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)&(vt50.c0))) NOT NULL)) ORDER BY TYPEOF(CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt50.c0)&(vt50.c0))) NOT NULL)) IS TRUE)  as count FROM vt50 ORDER BY TYPEOF(CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)&(vt50.c0))) NOT NULL)) ORDER BY TYPEOF(CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)) ORDER BY ((json_remove(vt50.c0, vt50.c0, vt50.c0, vt50.c0))<=(vt50.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)) IS TRUE)  as count FROM vt50 ORDER BY ((json_remove(vt50.c0, vt50.c0, vt50.c0, vt50.c0))<=(vt50.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)) ORDER BY ((json_remove(vt50.c0, vt50.c0, vt50.c0, vt50.c0))<=(vt50.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)) IS TRUE)  as count FROM vt50 ORDER BY ((json_remove(vt50.c0, vt50.c0, vt50.c0, vt50.c0))<=(vt50.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0) IS FALSE) IN (((vt50.c0)==(vt50.c0)), ((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) IS FALSE) IN (((vt50.c0)=(vt50.c0)), ((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0) IS FALSE) IN (((vt50.c0)==(vt50.c0)), ((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) IS FALSE) IN (((vt50.c0)=(vt50.c0)), ((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0) IS FALSE) IN (((vt50.c0)==(vt50.c0)), ((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1) ISNULL)) NOT NULL)) ORDER BY '-181893467'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt50, rt1 ORDER BY '-181893467'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1) ISNULL)) NOT NULL)) ORDER BY '-181893467'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) NOT NULL)) IS TRUE)  as count FROM vt50, rt1 ORDER BY '-181893467'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((((rt1.c1) ISNULL)) NOT NULL)) ORDER BY '-181893467'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (JULIANDAY(((rt1.c0) BETWEEN (x'1d81') AND (rt1.c1)), (rt1.c1 IN ()), (- (-4.76156883E8)), (((rt1.c1, rt1.c0, rt1.c0, rt1.c0, 0.6033419620884166)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0, rt1.c2, x''))), UNICODE(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((rt1.c0) BETWEEN (x'1d81') AND (rt1.c1)), (rt1.c1 IN ()), (- (-4.76156883E8)), (((rt1.c1, rt1.c0, rt1.c0, rt1.c0, 0.6033419620884166)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0, rt1.c2, x''))), UNICODE(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (JULIANDAY(((rt1.c0) BETWEEN (x'1d81') AND (rt1.c1)), (rt1.c1 IN ()), (- (-4.76156883E8)), (((rt1.c1, rt1.c0, rt1.c0, rt1.c0, 0.6033419620884166)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0, rt1.c2, x''))), UNICODE(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((rt1.c0) BETWEEN (x'1d81') AND (rt1.c1)), (rt1.c1 IN ()), (- (-4.76156883E8)), (((rt1.c1, rt1.c0, rt1.c0, rt1.c0, 0.6033419620884166)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0, rt1.c2, x''))), UNICODE(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (JULIANDAY(((rt1.c0) BETWEEN (x'1d81') AND (rt1.c1)), (rt1.c1 IN ()), (- (-4.76156883E8)), (((rt1.c1, rt1.c0, rt1.c0, rt1.c0, 0.6033419620884166)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c0, rt1.c2, x''))), UNICODE(rt1.c2)));
SELECT ALL COUNT(*) FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('');
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND ('')) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c2)||(rt1.c2)) WHEN CASE WHEN '0.5299259406213338' THEN rt1.c1 ELSE rt1.c0 END THEN UPPER(rt1.c0) END) ORDER BY CASE WHEN ((rt1.c1)==(rt1.c0)) THEN ((rt1.c1)*(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND ('')) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c2)||(rt1.c2)) WHEN CASE WHEN '0.5299259406213338' THEN rt1.c1 ELSE rt1.c0 END THEN UPPER(rt1.c0) END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1)=(rt1.c0)) THEN ((rt1.c1)*(rt1.c2)) END);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND ('')) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c2)||(rt1.c2)) WHEN CASE WHEN '0.5299259406213338' THEN rt1.c1 ELSE rt1.c0 END THEN UPPER(rt1.c0) END) ORDER BY CASE WHEN ((rt1.c1)==(rt1.c0)) THEN ((rt1.c1)*(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND ('')) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c2)||(rt1.c2)) WHEN CASE WHEN '0.5299259406213338' THEN rt1.c1 ELSE rt1.c0 END THEN UPPER(rt1.c0) END) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1)=(rt1.c0)) THEN ((rt1.c1)*(rt1.c2)) END);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND ('')) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c2)||(rt1.c2)) WHEN CASE WHEN '0.5299259406213338' THEN rt1.c1 ELSE rt1.c0 END THEN UPPER(rt1.c0) END) ORDER BY CASE WHEN ((rt1.c1)==(rt1.c0)) THEN ((rt1.c1)*(rt1.c2)) END;
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((vt50.c0)>(vt50.c0)))AND(vt50.c0)))OR(((vt50.c0)||(vt50.c0))))) ORDER BY ((((vt50.c0) BETWEEN (vt50.c0) AND (x''))) BETWEEN (((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) AND (vt50.c0))  NULLS FIRST, vt50.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt50.c0)>(vt50.c0)))AND(vt50.c0)))OR(((vt50.c0)||(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0) BETWEEN (vt50.c0) AND (x''))) BETWEEN (((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) AND (vt50.c0))  NULLS FIRST, vt50.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((vt50.c0)>(vt50.c0)))AND(vt50.c0)))OR(((vt50.c0)||(vt50.c0))))) ORDER BY ((((vt50.c0) BETWEEN (vt50.c0) AND (x''))) BETWEEN (((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) AND (vt50.c0))  NULLS FIRST, vt50.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt50.c0)>(vt50.c0)))AND(vt50.c0)))OR(((vt50.c0)||(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((((vt50.c0) BETWEEN (vt50.c0) AND (x''))) BETWEEN (((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) AND (vt50.c0))  NULLS FIRST, vt50.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((vt50.c0)>(vt50.c0)))AND(vt50.c0)))OR(((vt50.c0)||(vt50.c0))))) ORDER BY ((((vt50.c0) BETWEEN (vt50.c0) AND (x''))) BETWEEN (((((vt50.c0)AND(vt50.c0)))AND(vt50.c0))) AND (vt50.c0))  NULLS FIRST, vt50.c0  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON CASE CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END  WHEN (~ (rt1.c0)) THEN ((rt1.c0)IS NOT(rt1.c0)) WHEN ((rt1.c0)|(rt1.c2)) THEN CASE WHEN x'' THEN rt1.c2 WHEN '364821081' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c0)<<(rt1.c1)) THEN ((rt1.c0)AND(rt1.c2)) ELSE ((rt1.c0)>>(vt50.c0)) END WHERE (((((((((rt1.c2)OR((NOT (rt1.c2)))))AND(CAST(rt1.c0 AS TEXT))))AND(LIKE(rt1.c2, vt50.c0))))AND(rt1.c0 COLLATE RTRIM))) ORDER BY ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt50.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)OR((NOT (rt1.c2)))))AND(CAST(rt1.c0 AS TEXT))))AND(LIKE(rt1.c2, vt50.c0))))AND(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN vt50 ON CASE CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END  WHEN (~ (rt1.c0)) THEN ((rt1.c0)IS NOT(rt1.c0)) WHEN ((rt1.c0)|(rt1.c2)) THEN CASE WHEN x'' THEN rt1.c2 WHEN '364821081' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c0)<<(rt1.c1)) THEN ((rt1.c0)AND(rt1.c2)) ELSE ((rt1.c0)>>(vt50.c0)) END ORDER BY ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt50.c0)) COLLATE RTRIM DESC);
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON CASE CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END  WHEN (~ (rt1.c0)) THEN ((rt1.c0)IS NOT(rt1.c0)) WHEN ((rt1.c0)|(rt1.c2)) THEN CASE WHEN x'' THEN rt1.c2 WHEN '364821081' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c0)<<(rt1.c1)) THEN ((rt1.c0)AND(rt1.c2)) ELSE ((rt1.c0)>>(vt50.c0)) END WHERE (((((((((rt1.c2)OR((NOT (rt1.c2)))))AND(CAST(rt1.c0 AS TEXT))))AND(LIKE(rt1.c2, vt50.c0))))AND(rt1.c0 COLLATE RTRIM))) ORDER BY ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt50.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)OR((NOT (rt1.c2)))))AND(CAST(rt1.c0 AS TEXT))))AND(LIKE(rt1.c2, vt50.c0))))AND(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN vt50 ON CASE CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END  WHEN (~ (rt1.c0)) THEN ((rt1.c0)IS NOT(rt1.c0)) WHEN ((rt1.c0)|(rt1.c2)) THEN CASE WHEN x'' THEN rt1.c2 WHEN '364821081' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c0)<<(rt1.c1)) THEN ((rt1.c0)AND(rt1.c2)) ELSE ((rt1.c0)>>(vt50.c0)) END ORDER BY ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt50.c0)) COLLATE RTRIM DESC);
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON CASE CASE vt50.c0  WHEN vt50.c0 THEN rt1.c1 WHEN x'' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END  WHEN (~ (rt1.c0)) THEN ((rt1.c0)IS NOT(rt1.c0)) WHEN ((rt1.c0)|(rt1.c2)) THEN CASE WHEN x'' THEN rt1.c2 WHEN '364821081' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END WHEN ((rt1.c0)<<(rt1.c1)) THEN ((rt1.c0)AND(rt1.c2)) ELSE ((rt1.c0)>>(vt50.c0)) END WHERE (((((((((rt1.c2)OR((NOT (rt1.c2)))))AND(CAST(rt1.c0 AS TEXT))))AND(LIKE(rt1.c2, vt50.c0))))AND(rt1.c0 COLLATE RTRIM))) ORDER BY ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt50.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN '-285191754' THEN ((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(x'')))OR(vt50.c0)))OR(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-285191754' THEN ((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(x'')))OR(vt50.c0)))OR(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN '-285191754' THEN ((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(x'')))OR(vt50.c0)))OR(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-285191754' THEN ((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(x'')))OR(vt50.c0)))OR(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE WHEN '-285191754' THEN ((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(x'')))OR(vt50.c0)))OR(vt50.c0)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))||(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))||(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))||(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))||(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))||(rt1.c1 COLLATE RTRIM)));
SELECT * FROM vt50 LEFT OUTER JOIN rt1 ON ((vt50.c0)IS(CASE WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON ((vt50.c0)IS(CASE WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)));
SELECT * FROM vt50 LEFT OUTER JOIN rt1 ON ((vt50.c0)IS(CASE WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON ((vt50.c0)IS(CASE WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)));
SELECT * FROM vt50 LEFT OUTER JOIN rt1 ON ((vt50.c0)IS(CASE WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) WHERE (x'');
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST(vt50.c0 AS TEXT)) ORDER BY json_type((~ (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 AS TEXT)) IS TRUE)  as count FROM vt50, rt1 ORDER BY json_type((~ (rt1.c1))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST(vt50.c0 AS TEXT)) ORDER BY json_type((~ (rt1.c1)));
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 AS TEXT)) IS TRUE)  as count FROM vt50, rt1 ORDER BY json_type((~ (rt1.c1))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST(vt50.c0 AS TEXT)) ORDER BY json_type((~ (rt1.c1)));
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN ((vt50.c0)IS NOT(vt50.c0)) THEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) WHEN 452519022 THEN (~ (vt50.c0)) WHEN CAST(vt50.c0 AS TEXT) THEN ((vt50.c0)<<(vt50.c0)) WHEN ((vt50.c0) NOTNULL) THEN ((vt50.c0)<=(vt50.c0)) WHEN vt50.c0 THEN ((vt50.c0)|(vt50.c0)) WHEN (('')<(0.3222037832422736)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END WHEN (((vt50.c0, vt50.c0, 0.1242876528662974)) BETWEEN ((vt50.c0, vt50.c0, NULL)) AND ((vt50.c0, vt50.c0, vt50.c0))) THEN (+ (0.5060973437047872)) ELSE ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) END) ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN x'7646' THEN 0X45faa1f3 ELSE vt50.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt50.c0)IS NOT(vt50.c0)) THEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) WHEN 452519022 THEN (~ (vt50.c0)) WHEN CAST(vt50.c0 AS TEXT) THEN ((vt50.c0)<<(vt50.c0)) WHEN ((vt50.c0) NOTNULL) THEN ((vt50.c0)<=(vt50.c0)) WHEN vt50.c0 THEN ((vt50.c0)|(vt50.c0)) WHEN (('')<(0.3222037832422736)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END WHEN (((vt50.c0, vt50.c0, 0.1242876528662974)) BETWEEN ((vt50.c0, vt50.c0, NULL)) AND ((vt50.c0, vt50.c0, vt50.c0))) THEN (+ (0.5060973437047872)) ELSE ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN x'7646' THEN 0x45faa1f3 ELSE vt50.c0 END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN ((vt50.c0)IS NOT(vt50.c0)) THEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) WHEN 452519022 THEN (~ (vt50.c0)) WHEN CAST(vt50.c0 AS TEXT) THEN ((vt50.c0)<<(vt50.c0)) WHEN ((vt50.c0) NOTNULL) THEN ((vt50.c0)<=(vt50.c0)) WHEN vt50.c0 THEN ((vt50.c0)|(vt50.c0)) WHEN (('')<(0.3222037832422736)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END WHEN (((vt50.c0, vt50.c0, 0.1242876528662974)) BETWEEN ((vt50.c0, vt50.c0, NULL)) AND ((vt50.c0, vt50.c0, vt50.c0))) THEN (+ (0.5060973437047872)) ELSE ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) END) ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN x'7646' THEN 0X45faa1f3 ELSE vt50.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt50.c0)IS NOT(vt50.c0)) THEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) WHEN 452519022 THEN (~ (vt50.c0)) WHEN CAST(vt50.c0 AS TEXT) THEN ((vt50.c0)<<(vt50.c0)) WHEN ((vt50.c0) NOTNULL) THEN ((vt50.c0)<=(vt50.c0)) WHEN vt50.c0 THEN ((vt50.c0)|(vt50.c0)) WHEN (('')<(0.3222037832422736)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END WHEN (((vt50.c0, vt50.c0, 0.1242876528662974)) BETWEEN ((vt50.c0, vt50.c0, NULL)) AND ((vt50.c0, vt50.c0, vt50.c0))) THEN (+ (0.5060973437047872)) ELSE ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) END) IS TRUE)  as count FROM vt50 ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN x'7646' THEN 0x45faa1f3 ELSE vt50.c0 END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN ((vt50.c0)IS NOT(vt50.c0)) THEN ((vt50.c0) NOT BETWEEN (vt50.c0) AND (vt50.c0)) WHEN 452519022 THEN (~ (vt50.c0)) WHEN CAST(vt50.c0 AS TEXT) THEN ((vt50.c0)<<(vt50.c0)) WHEN ((vt50.c0) NOTNULL) THEN ((vt50.c0)<=(vt50.c0)) WHEN vt50.c0 THEN ((vt50.c0)|(vt50.c0)) WHEN (('')<(0.3222037832422736)) THEN CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END WHEN (((vt50.c0, vt50.c0, 0.1242876528662974)) BETWEEN ((vt50.c0, vt50.c0, NULL)) AND ((vt50.c0, vt50.c0, vt50.c0))) THEN (+ (0.5060973437047872)) ELSE ((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) END) ORDER BY ((CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN x'7646' THEN 0X45faa1f3 ELSE vt50.c0 END) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c2, NULL, rt1.c1)) BETWEEN (('-748319277', STRFTIME(-3.58603712E8, rt1.c2, rt1.c0), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c1)))) AND (((('367115998') NOT NULL), QUOTE(rt1.c0), LIKELY(DISTINCT rt1.c1))))) ORDER BY ((CAST(0.5060973437047872 AS TEXT)) BETWEEN (((rt1.c2) IS TRUE)) AND (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))OR(vt50.c0)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, NULL, rt1.c1)) BETWEEN (('-748319277', STRFTIME(-3.58603712E8, rt1.c2, rt1.c0), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c1)))) AND (((('367115998') NOT NULL), QUOTE(rt1.c0), LIKELY(DISTINCT rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((CAST(0.5060973437047872 AS TEXT)) BETWEEN (((rt1.c2) IS TRUE)) AND (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))OR(vt50.c0)))OR(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c2, NULL, rt1.c1)) BETWEEN (('-748319277', STRFTIME(-3.58603712E8, rt1.c2, rt1.c0), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c1)))) AND (((('367115998') NOT NULL), QUOTE(rt1.c0), LIKELY(DISTINCT rt1.c1))))) ORDER BY ((CAST(0.5060973437047872 AS TEXT)) BETWEEN (((rt1.c2) IS TRUE)) AND (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))OR(vt50.c0)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, NULL, rt1.c1)) BETWEEN (('-748319277', STRFTIME(-3.58603712E8, rt1.c2, rt1.c0), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c1)))) AND (((('367115998') NOT NULL), QUOTE(rt1.c0), LIKELY(DISTINCT rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((CAST(0.5060973437047872 AS TEXT)) BETWEEN (((rt1.c2) IS TRUE)) AND (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))OR(vt50.c0)))OR(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c2, NULL, rt1.c1)) BETWEEN (('-748319277', STRFTIME(-3.58603712E8, rt1.c2, rt1.c0), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c1)))) AND (((('367115998') NOT NULL), QUOTE(rt1.c0), LIKELY(DISTINCT rt1.c1))))) ORDER BY ((CAST(0.5060973437047872 AS TEXT)) BETWEEN (((rt1.c2) IS TRUE)) AND (((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))OR(vt50.c0)))OR(rt1.c2))));
SELECT * FROM vt50, rt1 WHERE (((rt1.c2)&(rt1.c2)) COLLATE NOCASE) ORDER BY ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt50.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)&(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt50.c0))) IN ()) DESC);
SELECT * FROM vt50, rt1 WHERE (((rt1.c2)&(rt1.c2)) COLLATE NOCASE) ORDER BY ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt50.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)&(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt50.c0))) IN ()) DESC);
SELECT * FROM vt50, rt1 WHERE (((rt1.c2)&(rt1.c2)) COLLATE NOCASE) ORDER BY ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((vt50.c0))) IN ()) DESC;
SELECT ALL * FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('');
SELECT ALL * FROM rt1 CROSS JOIN vt50 ON json_insert(rt1.c2, (((NULL))<=((rt1.c0))), rt1.c2 COLLATE NOCASE, rt1.c1 COLLATE RTRIM, (+ (rt1.c2)), rt1.c0 COLLATE NOCASE, ((rt1.c0) ISNULL)) WHERE (((json_object(rt1.c2, rt1.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((json_object(rt1.c2, rt1.c1)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON json_insert(rt1.c2, (((NULL))<=((rt1.c0))), rt1.c2 COLLATE NOCASE, rt1.c1 COLLATE RTRIM, (+ (rt1.c2)), rt1.c0 COLLATE NOCASE, ((rt1.c0) ISNULL)));
SELECT ALL * FROM rt1 CROSS JOIN vt50 ON json_insert(rt1.c2, (((NULL))<=((rt1.c0))), rt1.c2 COLLATE NOCASE, rt1.c1 COLLATE RTRIM, (+ (rt1.c2)), rt1.c0 COLLATE NOCASE, ((rt1.c0) ISNULL)) WHERE (((json_object(rt1.c2, rt1.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((json_object(rt1.c2, rt1.c1)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN vt50 ON json_insert(rt1.c2, (((NULL))<=((rt1.c0))), rt1.c2 COLLATE NOCASE, rt1.c1 COLLATE RTRIM, (+ (rt1.c2)), rt1.c0 COLLATE NOCASE, ((rt1.c0) ISNULL)));
SELECT * FROM vt50 NATURAL JOIN rt1 WHERE (CAST(((((vt50.c0)AND(NULL)))OR(vt50.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt50.c0)AND(NULL)))OR(vt50.c0)) AS TEXT)) IS TRUE)  as count FROM vt50 NATURAL JOIN rt1);
SELECT * FROM vt50 NATURAL JOIN rt1 WHERE (CAST(((((vt50.c0)AND(NULL)))OR(vt50.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt50.c0)AND(NULL)))OR(vt50.c0)) AS TEXT)) IS TRUE)  as count FROM vt50 NATURAL JOIN rt1);
SELECT * FROM vt50 NATURAL JOIN rt1 WHERE (CAST(((((vt50.c0)AND(NULL)))OR(vt50.c0)) AS TEXT));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0 IN (0.7041072205160982))) NOT BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) ORDER BY 0.6490447500705357 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (0.7041072205160982))) NOT BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY 0.6490447500705357 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0 IN (0.7041072205160982))) NOT BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) ORDER BY 0.6490447500705357 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (0.7041072205160982))) NOT BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY 0.6490447500705357 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0 IN (0.7041072205160982))) NOT BETWEEN ((rt1.c2 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))) ORDER BY 0.6490447500705357 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 WHERE (UPPER(vt50.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((UPPER(vt50.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (UPPER(vt50.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((UPPER(vt50.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (UPPER(vt50.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt50 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ('');
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN LIKELIHOOD(vt50.c0, 0.22925988799976638) THEN (((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))) END) ORDER BY (+ (CAST(vt50.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(vt50.c0, 0.22925988799976638) THEN (((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))) END) IS TRUE)  as count FROM vt50 ORDER BY (+ (CAST(vt50.c0 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN LIKELIHOOD(vt50.c0, 0.22925988799976638) THEN (((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))) END) ORDER BY (+ (CAST(vt50.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(vt50.c0, 0.22925988799976638) THEN (((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))) END) IS TRUE)  as count FROM vt50 ORDER BY (+ (CAST(vt50.c0 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN LIKELIHOOD(vt50.c0, 0.22925988799976638) THEN (((vt50.c0)) NOT BETWEEN ((vt50.c0)) AND ((vt50.c0))) END) ORDER BY (+ (CAST(vt50.c0 AS BLOB))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt50 WHERE (json_remove(TYPEOF(DISTINCT rt1.c0), rt1.c0, CAST(rt1.c1 AS INTEGER), rt1.c0));
SELECT SUM(count) FROM (SELECT ((json_remove(TYPEOF(DISTINCT rt1.c0), rt1.c0, CAST(rt1.c1 AS INTEGER), rt1.c0)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (json_remove(TYPEOF(DISTINCT rt1.c0), rt1.c0, CAST(rt1.c1 AS INTEGER), rt1.c0));
SELECT SUM(count) FROM (SELECT ((json_remove(TYPEOF(DISTINCT rt1.c0), rt1.c0, CAST(rt1.c1 AS INTEGER), rt1.c0)) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE ((- (TRIM(DISTINCT rt1.c2, rt1.c2)))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN NULL END)>=(((vt50.c0)OR(rt1.c2)))), ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))==((((vt50.c0) BETWEEN (rt1.c2) AND (vt50.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(DISTINCT rt1.c2, rt1.c2)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN NULL END)>=(((vt50.c0)OR(rt1.c2)))), ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))=((((vt50.c0) BETWEEN (rt1.c2) AND (vt50.c0)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt50 WHERE ((- (TRIM(DISTINCT rt1.c2, rt1.c2)))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN NULL END)>=(((vt50.c0)OR(rt1.c2)))), ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))==((((vt50.c0) BETWEEN (rt1.c2) AND (vt50.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(DISTINCT rt1.c2, rt1.c2)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN NULL END)>=(((vt50.c0)OR(rt1.c2)))), ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))=((((vt50.c0) BETWEEN (rt1.c2) AND (vt50.c0)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt50 WHERE ((- (TRIM(DISTINCT rt1.c2, rt1.c2)))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN NULL END)>=(((vt50.c0)OR(rt1.c2)))), ((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))==((((vt50.c0) BETWEEN (rt1.c2) AND (vt50.c0)))))  NULLS LAST;
SELECT * FROM vt50 WHERE ((((+ (vt50.c0)))LIKE(((vt50.c0)<(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt50.c0)))LIKE(((vt50.c0)<(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE ((((+ (vt50.c0)))LIKE(((vt50.c0)<(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt50.c0)))LIKE(((vt50.c0)<(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE ((((+ (vt50.c0)))LIKE(((vt50.c0)<(vt50.c0)))));
SELECT ALL * FROM vt50 NATURAL JOIN rt1 WHERE (((((((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(((rt1.c0)<=(rt1.c0)))))AND(((vt50.c0)GLOB(0.67929294657725)))))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)IS(rt1.c0))))) ORDER BY 0xffffffffc9d1da2f DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(((rt1.c0)<=(rt1.c0)))))AND(((vt50.c0)GLOB(0.67929294657725)))))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)IS(rt1.c0))))) IS TRUE)  as count FROM vt50 NATURAL JOIN rt1 ORDER BY 0xffffffffc9d1da2f DESC);
SELECT ALL * FROM vt50 NATURAL JOIN rt1 WHERE (((((((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(((rt1.c0)<=(rt1.c0)))))AND(((vt50.c0)GLOB(0.67929294657725)))))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)IS(rt1.c0))))) ORDER BY 0xffffffffc9d1da2f DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(((rt1.c0)<=(rt1.c0)))))AND(((vt50.c0)GLOB(0.67929294657725)))))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)IS(rt1.c0))))) IS TRUE)  as count FROM vt50 NATURAL JOIN rt1 ORDER BY 0xffffffffc9d1da2f DESC);
SELECT ALL * FROM vt50 NATURAL JOIN rt1 WHERE (((((((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(((rt1.c0)<=(rt1.c0)))))AND(((vt50.c0)GLOB(0.67929294657725)))))AND(CAST(rt1.c1 AS INTEGER))))AND(((rt1.c1)IS(rt1.c0))))) ORDER BY 0xffffffffc9d1da2f DESC;
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS BLOB))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))<=(NULL))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS BLOB))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS BLOB))<=(NULL))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((CAST(rt1.c0 AS BLOB))<=(NULL)));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (vt50.c0) ORDER BY ((('u')) NOT BETWEEN (((NOT (rt1.c2)))) AND (((((vt50.c0))==((vt50.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((('u')) NOT BETWEEN (((NOT (rt1.c2)))) AND (((((vt50.c0))==((vt50.c0)))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (vt50.c0) ORDER BY ((('u')) NOT BETWEEN (((NOT (rt1.c2)))) AND (((((vt50.c0))==((vt50.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((('u')) NOT BETWEEN (((NOT (rt1.c2)))) AND (((((vt50.c0))==((vt50.c0)))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (vt50.c0) ORDER BY ((('u')) NOT BETWEEN (((NOT (rt1.c2)))) AND (((((vt50.c0))==((vt50.c0)))))) DESC  NULLS FIRST;
SELECT * FROM vt50 WHERE (CAST(((1036918706)/(vt50.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((1036918706)/(vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CAST(((1036918706)/(vt50.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((1036918706)/(vt50.c0)) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CAST(((1036918706)/(vt50.c0)) AS INTEGER));
SELECT ALL * FROM vt50, rt1 WHERE (CASE '1'  WHEN DATETIME(rt1.c1, rt1.c2, rt1.c0) THEN (+ (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1'  WHEN DATETIME(rt1.c1, rt1.c2, rt1.c0) THEN (+ (rt1.c2)) END) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CASE '1'  WHEN DATETIME(rt1.c1, rt1.c2, rt1.c0) THEN (+ (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1'  WHEN DATETIME(rt1.c1, rt1.c2, rt1.c0) THEN (+ (rt1.c2)) END) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CASE '1'  WHEN DATETIME(rt1.c1, rt1.c2, rt1.c0) THEN (+ (rt1.c2)) END);
SELECT * FROM vt50 WHERE (CASE ''  WHEN STRFTIME(vt50.c0, vt50.c0, 0.2635203474802609, vt50.c0, vt50.c0) THEN CASE vt50.c0  WHEN 1.725958982E9 THEN vt50.c0 ELSE vt50.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN STRFTIME(vt50.c0, vt50.c0, 0.2635203474802609, vt50.c0, vt50.c0) THEN CASE vt50.c0  WHEN 1.725958982E9 THEN vt50.c0 ELSE vt50.c0 END END) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CASE ''  WHEN STRFTIME(vt50.c0, vt50.c0, 0.2635203474802609, vt50.c0, vt50.c0) THEN CASE vt50.c0  WHEN 1.725958982E9 THEN vt50.c0 ELSE vt50.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN STRFTIME(vt50.c0, vt50.c0, 0.2635203474802609, vt50.c0, vt50.c0) THEN CASE vt50.c0  WHEN 1.725958982E9 THEN vt50.c0 ELSE vt50.c0 END END) IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (CASE ''  WHEN STRFTIME(vt50.c0, vt50.c0, 0.2635203474802609, vt50.c0, vt50.c0) THEN CASE vt50.c0  WHEN 1.725958982E9 THEN vt50.c0 ELSE vt50.c0 END END);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0) NOT BETWEEN (0.7961075555913555) AND (vt50.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) NOT BETWEEN (0.7961075555913555) AND (vt50.c0)) IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0) NOT BETWEEN (0.7961075555913555) AND (vt50.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) NOT BETWEEN (0.7961075555913555) AND (vt50.c0)) IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0) NOT BETWEEN (0.7961075555913555) AND (vt50.c0)) IN ()));
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((((((('v4U|5t%6佊')OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(vt50.c0)))AND(((vt50.c0) NOTNULL))))AND((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt50.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((('v4U|5t%6佊')OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(vt50.c0)))AND(((vt50.c0) NOTNULL))))AND((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt50.c0)))))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((((((('v4U|5t%6佊')OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(vt50.c0)))AND(((vt50.c0) NOTNULL))))AND((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt50.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((('v4U|5t%6佊')OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(vt50.c0)))AND(((vt50.c0) NOTNULL))))AND((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt50.c0)))))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((((((('v4U|5t%6佊')OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(vt50.c0)))AND(((vt50.c0) NOTNULL))))AND((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt50.c0))))));
SELECT ALL * FROM rt1, vt50 WHERE (rt1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (rt1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (rt1.c2 COLLATE NOCASE);
SELECT ALL * FROM vt50, rt1 WHERE ((- (''))) ORDER BY (((rt1.c0 IN ()))==(vt50.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (''))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0 IN ()))==(vt50.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE ((- (''))) ORDER BY (((rt1.c0 IN ()))==(vt50.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (''))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0 IN ()))==(vt50.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE ((- (''))) ORDER BY (((rt1.c0 IN ()))==(vt50.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(x'' AS TEXT));
SELECT ALL * FROM vt50, rt1 WHERE (((rt1.c0 COLLATE NOCASE)>('-1474825828'))) ORDER BY rt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)>('-1474825828'))) IS TRUE)  as count FROM vt50, rt1 ORDER BY rt1.c0 COLLATE RTRIM);
SELECT ALL * FROM vt50, rt1 WHERE (((rt1.c0 COLLATE NOCASE)>('-1474825828'))) ORDER BY rt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)>('-1474825828'))) IS TRUE)  as count FROM vt50, rt1 ORDER BY rt1.c0 COLLATE RTRIM);
SELECT ALL * FROM vt50, rt1 WHERE (((rt1.c0 COLLATE NOCASE)>('-1474825828'))) ORDER BY rt1.c0 COLLATE RTRIM;
SELECT ALL * FROM vt50, rt1 WHERE (CAST(CAST(vt50.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt50.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CAST(CAST(vt50.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt50.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CAST(CAST(vt50.c0 AS REAL) AS TEXT));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON ((((vt50.c0)OR(rt1.c1)))AND(vt50.c0)) COLLATE BINARY WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON ((((vt50.c0)OR(rt1.c1)))AND(vt50.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON ((((vt50.c0)OR(rt1.c1)))AND(vt50.c0)) COLLATE BINARY WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON ((((vt50.c0)OR(rt1.c1)))AND(vt50.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON ((((vt50.c0)OR(rt1.c1)))AND(vt50.c0)) COLLATE BINARY WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB));
SELECT * FROM vt50 WHERE (((((((((vt50.c0)AND(vt50.c0)))AND(0.05235321300609308)))AND(((vt50.c0)!=(vt50.c0)))))OR(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0))))) ORDER BY ((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt50.c0)AND(vt50.c0)))AND(0.05235321300609308)))AND(((vt50.c0)<>(vt50.c0)))))OR(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))) IS FALSE)  NULLS LAST);
SELECT * FROM vt50 WHERE (((((((((vt50.c0)AND(vt50.c0)))AND(0.05235321300609308)))AND(((vt50.c0)!=(vt50.c0)))))OR(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0))))) ORDER BY ((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt50.c0)AND(vt50.c0)))AND(0.05235321300609308)))AND(((vt50.c0)<>(vt50.c0)))))OR(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))) IS FALSE)  NULLS LAST);
SELECT * FROM vt50 WHERE (((((((((vt50.c0)AND(vt50.c0)))AND(0.05235321300609308)))AND(((vt50.c0)!=(vt50.c0)))))OR(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0))))) ORDER BY ((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c2)==(rt1.c2)))||(((rt1.c0)>>(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)=(rt1.c2)))||(((rt1.c0)>>(vt50.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c2)==(rt1.c2)))||(((rt1.c0)>>(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)=(rt1.c2)))||(((rt1.c0)>>(vt50.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c2)==(rt1.c2)))||(((rt1.c0)>>(vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY ((vt50.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY ((vt50.c0 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY ((vt50.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY ((vt50.c0 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY ((vt50.c0 COLLATE BINARY) IS FALSE);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))>=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))>=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))>=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))>=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))>=((((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('1341973899')))IS NOT(((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('1341973899')))IS NOT(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('1341973899')))IS NOT(((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('1341973899')))IS NOT(((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c1) AND ('1341973899')))IS NOT(((rt1.c1) IS FALSE))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST((((x'617c'))<((rt1.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((x'617c'))<((rt1.c1))) AS INTEGER)) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST((((x'617c'))<((rt1.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((x'617c'))<((rt1.c1))) AS INTEGER)) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (CAST((((x'617c'))<((rt1.c1))) AS INTEGER));
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1 IN ())) NOTNULL)) ORDER BY ((((rt1.c2)+(rt1.c0)))IS(rt1.c0));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((rt1.c2)+(rt1.c0)))IS(rt1.c0)));
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1 IN ())) NOTNULL)) ORDER BY ((((rt1.c2)+(rt1.c0)))IS(rt1.c0));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((rt1.c2)+(rt1.c0)))IS(rt1.c0)));
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1 IN ())) NOTNULL)) ORDER BY ((((rt1.c2)+(rt1.c0)))IS(rt1.c0));
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c2))) IS FALSE));
SELECT ALL * FROM rt1, vt50 WHERE (CAST(CASE rt1.c1  WHEN vt50.c0 THEN NULL ELSE vt50.c0 END AS REAL)) ORDER BY ((LIKELIHOOD(rt1.c1, 0.8569595687289503)) IS FALSE) DESC  NULLS FIRST, json_extract(((rt1.c0)>=(rt1.c1)), ((NULL) NOT BETWEEN (NULL) AND ('|AEDa71L痖')), ((NULL)||(rt1.c0)), ((rt1.c2) NOTNULL), ((rt1.c1)GLOB(vt50.c0)), LIKELY(rt1.c2))  NULLS LAST, ((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE) ASC, CASE 'i<' COLLATE BINARY  WHEN rt1.c1 THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN ()) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) WHEN ((vt50.c0) NOT NULL) THEN (rt1.c1 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN vt50.c0 THEN NULL ELSE vt50.c0 END AS REAL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((LIKELIHOOD(rt1.c1, 0.8569595687289503)) IS FALSE) DESC  NULLS FIRST, json_extract(((rt1.c0)>=(rt1.c1)), ((NULL) NOT BETWEEN (NULL) AND ('|AEDa71L痖')), ((NULL)||(rt1.c0)), ((rt1.c2) NOTNULL), ((rt1.c1)GLOB(vt50.c0)), LIKELY(rt1.c2))  NULLS LAST, ((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE) ASC, CASE 'i<' COLLATE BINARY  WHEN rt1.c1 THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN ()) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) WHEN ((vt50.c0) NOT NULL) THEN (rt1.c1 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END ASC);
SELECT ALL * FROM rt1, vt50 WHERE (CAST(CASE rt1.c1  WHEN vt50.c0 THEN NULL ELSE vt50.c0 END AS REAL)) ORDER BY ((LIKELIHOOD(rt1.c1, 0.8569595687289503)) IS FALSE) DESC  NULLS FIRST, json_extract(((rt1.c0)>=(rt1.c1)), ((NULL) NOT BETWEEN (NULL) AND ('|AEDa71L痖')), ((NULL)||(rt1.c0)), ((rt1.c2) NOTNULL), ((rt1.c1)GLOB(vt50.c0)), LIKELY(rt1.c2))  NULLS LAST, ((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE) ASC, CASE 'i<' COLLATE BINARY  WHEN rt1.c1 THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN ()) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) WHEN ((vt50.c0) NOT NULL) THEN (rt1.c1 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN vt50.c0 THEN NULL ELSE vt50.c0 END AS REAL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((LIKELIHOOD(rt1.c1, 0.8569595687289503)) IS FALSE) DESC  NULLS FIRST, json_extract(((rt1.c0)>=(rt1.c1)), ((NULL) NOT BETWEEN (NULL) AND ('|AEDa71L痖')), ((NULL)||(rt1.c0)), ((rt1.c2) NOTNULL), ((rt1.c1)GLOB(vt50.c0)), LIKELY(rt1.c2))  NULLS LAST, ((((vt50.c0) BETWEEN (rt1.c1) AND (rt1.c0))) IS TRUE) ASC, CASE 'i<' COLLATE BINARY  WHEN rt1.c1 THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN ()) THEN ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) WHEN ((vt50.c0) NOT NULL) THEN (rt1.c1 IN ()) ELSE ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((rt1.c1 COLLATE BINARY IN ((((rt1.c2))>=((x''))), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE BINARY IN ((((rt1.c2))>=((x''))), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((rt1.c1 COLLATE BINARY IN ((((rt1.c2))>=((x''))), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE BINARY IN ((((rt1.c2))>=((x''))), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((rt1.c1 COLLATE BINARY IN ((((rt1.c2))>=((x''))), ((rt1.c2) NOT BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT ALL * FROM vt50, rt1 WHERE (CAST(1.725958982E9 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.725958982E9 AS REAL)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CAST(1.725958982E9 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.725958982E9 AS REAL)) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL * FROM vt50, rt1 WHERE (CAST(1.725958982E9 AS REAL));
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 COLLATE NOCASE AS REAL));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) NOT BETWEEN ('-1195483214') AND (rt1.c0)))OR(((rt1.c1)IS NOT(rt1.c1)))))OR(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT BETWEEN ('-1195483214') AND (rt1.c0)))OR(((rt1.c1)IS NOT(rt1.c1)))))OR(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) NOT BETWEEN ('-1195483214') AND (rt1.c0)))OR(((rt1.c1)IS NOT(rt1.c1)))))OR(((rt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT BETWEEN ('-1195483214') AND (rt1.c0)))OR(((rt1.c1)IS NOT(rt1.c1)))))OR(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) NOT BETWEEN ('-1195483214') AND (rt1.c0)))OR(((rt1.c1)IS NOT(rt1.c1)))))OR(((rt1.c0) NOTNULL))));
SELECT * FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 END) NOTNULL)) ORDER BY vt50.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt50.c0 THEN vt50.c0 END) NOTNULL)) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS FIRST);
SELECT * FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 END) NOTNULL)) ORDER BY vt50.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt50.c0 THEN vt50.c0 END) NOTNULL)) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0  NULLS FIRST);
SELECT * FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 END) NOTNULL)) ORDER BY vt50.c0  NULLS FIRST;
SELECT * FROM vt50, rt1 WHERE (CASE WHEN ((vt50.c0) ISNULL) THEN rt1.c0 COLLATE BINARY ELSE CASE WHEN rt1.c1 THEN rt1.c2 END END) ORDER BY (((rt1.c2)) BETWEEN ((ROUND(rt1.c0, '''W,'))) AND (('1841806873')));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt50.c0) ISNULL) THEN rt1.c0 COLLATE BINARY ELSE CASE WHEN rt1.c1 THEN rt1.c2 END END) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c2)) BETWEEN ((ROUND(rt1.c0, '''W,'))) AND (('1841806873'))));
SELECT * FROM vt50, rt1 WHERE (CASE WHEN ((vt50.c0) ISNULL) THEN rt1.c0 COLLATE BINARY ELSE CASE WHEN rt1.c1 THEN rt1.c2 END END) ORDER BY (((rt1.c2)) BETWEEN ((ROUND(rt1.c0, '''W,'))) AND (('1841806873')));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt50.c0) ISNULL) THEN rt1.c0 COLLATE BINARY ELSE CASE WHEN rt1.c1 THEN rt1.c2 END END) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c2)) BETWEEN ((ROUND(rt1.c0, '''W,'))) AND (('1841806873'))));
SELECT * FROM vt50, rt1 WHERE (CASE WHEN ((vt50.c0) ISNULL) THEN rt1.c0 COLLATE BINARY ELSE CASE WHEN rt1.c1 THEN rt1.c2 END END) ORDER BY (((rt1.c2)) BETWEEN ((ROUND(rt1.c0, '''W,'))) AND (('1841806873')));
SELECT * FROM rt1 WHERE (CAST((~ (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((~ (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((~ (rt1.c2)) AS TEXT));
SELECT COUNT(*) FROM rt1, vt50 WHERE (CASE WHEN ((rt1.c0)LIKE(rt1.c0)) THEN ((rt1.c1)>>(rt1.c2)) ELSE rt1.c0 END) ORDER BY (((((+ (rt1.c1)))OR(((rt1.c0)<<(vt50.c0)))))AND(((((rt1.c1)AND(NULL)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)LIKE(rt1.c0)) THEN ((rt1.c1)>>(rt1.c2)) ELSE rt1.c0 END) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((((+ (rt1.c1)))OR(((rt1.c0)<<(vt50.c0)))))AND(((((rt1.c1)AND(NULL)))AND(rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (CASE WHEN ((rt1.c0)LIKE(rt1.c0)) THEN ((rt1.c1)>>(rt1.c2)) ELSE rt1.c0 END) ORDER BY (((((+ (rt1.c1)))OR(((rt1.c0)<<(vt50.c0)))))AND(((((rt1.c1)AND(NULL)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)LIKE(rt1.c0)) THEN ((rt1.c1)>>(rt1.c2)) ELSE rt1.c0 END) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((((+ (rt1.c1)))OR(((rt1.c0)<<(vt50.c0)))))AND(((((rt1.c1)AND(NULL)))AND(rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE (CASE WHEN ((rt1.c0)LIKE(rt1.c0)) THEN ((rt1.c1)>>(rt1.c2)) ELSE rt1.c0 END) ORDER BY (((((+ (rt1.c1)))OR(((rt1.c0)<<(vt50.c0)))))AND(((((rt1.c1)AND(NULL)))AND(rt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c0) ORDER BY ((((((vt50.c0)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (((rt1.c1)>(vt50.c0))) AND (1956719755)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((((vt50.c0)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (((rt1.c1)>(vt50.c0))) AND (1956719755)) DESC);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c0) ORDER BY ((((((vt50.c0)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (((rt1.c1)>(vt50.c0))) AND (1956719755)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((((vt50.c0)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (((rt1.c1)>(vt50.c0))) AND (1956719755)) DESC);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (rt1.c0) ORDER BY ((((((vt50.c0)AND(rt1.c2)))AND(rt1.c2))) NOT BETWEEN (((rt1.c1)>(vt50.c0))) AND (1956719755)) DESC;
SELECT ALL * FROM rt1, vt50 WHERE (((CAST(vt50.c0 AS TEXT)) BETWEEN (NULL) AND ((- (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt50.c0 AS TEXT)) BETWEEN (NULL) AND ((- (vt50.c0))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((CAST(vt50.c0 AS TEXT)) BETWEEN (NULL) AND ((- (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt50.c0 AS TEXT)) BETWEEN (NULL) AND ((- (vt50.c0))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE (((CAST(vt50.c0 AS TEXT)) BETWEEN (NULL) AND ((- (vt50.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (vt50.c0) ORDER BY (+ (NULL));
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM rt1, vt50 ORDER BY (+ (NULL)));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (vt50.c0) ORDER BY (+ (NULL));
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM rt1, vt50 ORDER BY (+ (NULL)));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (vt50.c0) ORDER BY (+ (NULL));
SELECT ALL * FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<=(CAST(0xffffffff82f6cffe AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<=(CAST(0Xffffffff82f6cffe AS NUMERIC)))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<=(CAST(0xffffffff82f6cffe AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<=(CAST(0Xffffffff82f6cffe AS NUMERIC)))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (((CASE WHEN vt50.c0 THEN vt50.c0 ELSE vt50.c0 END)<=(CAST(0xffffffff82f6cffe AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND (((vt50.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND (((vt50.c0 IN ()))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND (((vt50.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND (((vt50.c0 IN ()))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c1)) BETWEEN ((rt1.c0 COLLATE RTRIM)) AND (((vt50.c0 IN ())))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))>(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))>(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))>(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))>(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))>(rt1.c2)));
SELECT ALL COUNT(*) FROM vt50 WHERE (ABS(((vt50.c0)=(vt50.c0)))) ORDER BY (((((vt50.c0)<<('')), ((-1586524458)==(vt50.c0)), ABS(DISTINCT 0x1f189ba8)))==((vt50.c0 COLLATE NOCASE, (('')>=(vt50.c0)), TRIM(DISTINCT vt50.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt50.c0)==(vt50.c0)))) IS TRUE)  as count FROM vt50 ORDER BY (((((vt50.c0)<<('')), ((-1586524458)=(vt50.c0)), ABS(DISTINCT 0X1f189ba8)))=((vt50.c0 COLLATE NOCASE, (('')>=(vt50.c0)), TRIM(DISTINCT vt50.c0, vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50 WHERE (ABS(((vt50.c0)=(vt50.c0)))) ORDER BY (((((vt50.c0)<<('')), ((-1586524458)==(vt50.c0)), ABS(DISTINCT 0x1f189ba8)))==((vt50.c0 COLLATE NOCASE, (('')>=(vt50.c0)), TRIM(DISTINCT vt50.c0, vt50.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt50.c0)==(vt50.c0)))) IS TRUE)  as count FROM vt50 ORDER BY (((((vt50.c0)<<('')), ((-1586524458)=(vt50.c0)), ABS(DISTINCT 0X1f189ba8)))=((vt50.c0 COLLATE NOCASE, (('')>=(vt50.c0)), TRIM(DISTINCT vt50.c0, vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50 WHERE (ABS(((vt50.c0)=(vt50.c0)))) ORDER BY (((((vt50.c0)<<('')), ((-1586524458)==(vt50.c0)), ABS(DISTINCT 0x1f189ba8)))==((vt50.c0 COLLATE NOCASE, (('')>=(vt50.c0)), TRIM(DISTINCT vt50.c0, vt50.c0))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (((rt1.c1) IS FALSE)))) ORDER BY (((rt1.c0, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER), ((rt1.c0)>>(vt50.c0)), CAST(x'796f' AS BLOB))) AND ((CAST(rt1.c1 AS INTEGER), (NOT (rt1.c0)), CAST(rt1.c2 AS REAL)))) DESC, (((x'')) NOT BETWEEN (((rt1.c0 IN ()))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER), ((rt1.c0)>>(vt50.c0)), CAST(x'796f' AS BLOB))) AND ((CAST(rt1.c1 AS INTEGER), (NOT (rt1.c0)), CAST(rt1.c2 AS REAL)))) DESC, (((x'')) NOT BETWEEN (((rt1.c0 IN ()))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (((rt1.c1) IS FALSE)))) ORDER BY (((rt1.c0, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER), ((rt1.c0)>>(vt50.c0)), CAST(x'796f' AS BLOB))) AND ((CAST(rt1.c1 AS INTEGER), (NOT (rt1.c0)), CAST(rt1.c2 AS REAL)))) DESC, (((x'')) NOT BETWEEN (((rt1.c0 IN ()))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER), ((rt1.c0)>>(vt50.c0)), CAST(x'796f' AS BLOB))) AND ((CAST(rt1.c1 AS INTEGER), (NOT (rt1.c0)), CAST(rt1.c2 AS REAL)))) DESC, (((x'')) NOT BETWEEN (((rt1.c0 IN ()))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((NOT (((rt1.c1) IS FALSE)))) ORDER BY (((rt1.c0, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c1 AS INTEGER), ((rt1.c0)>>(vt50.c0)), CAST(x'796f' AS BLOB))) AND ((CAST(rt1.c1 AS INTEGER), (NOT (rt1.c0)), CAST(rt1.c2 AS REAL)))) DESC, (((x'')) NOT BETWEEN (((rt1.c0 IN ()))) AND ((CASE WHEN rt1.c1 THEN vt50.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c0))==((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c0))=((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1))) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c0))==((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c0))=((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1))) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (((rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c0))==((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1))) COLLATE NOCASE;
SELECT COUNT(*) FROM vt50, rt1 WHERE (((rt1.c0) ISNULL) COLLATE BINARY) ORDER BY ((((rt1.c2) IS FALSE))<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c2) IS FALSE))<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((rt1.c0) ISNULL) COLLATE BINARY) ORDER BY ((((rt1.c2) IS FALSE))<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c2) IS FALSE))<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((rt1.c0) ISNULL) COLLATE BINARY) ORDER BY ((((rt1.c2) IS FALSE))<(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((((rt1.c0) ISNULL))AND(((rt1.c2) BETWEEN (rt1.c2) AND (vt50.c0)))))OR(((rt1.c2)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) ISNULL))AND(((rt1.c2) BETWEEN (rt1.c2) AND (vt50.c0)))))OR(((rt1.c2)>(rt1.c1))))) IS TRUE)  as count FROM vt50 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((((rt1.c0) ISNULL))AND(((rt1.c2) BETWEEN (rt1.c2) AND (vt50.c0)))))OR(((rt1.c2)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) ISNULL))AND(((rt1.c2) BETWEEN (rt1.c2) AND (vt50.c0)))))OR(((rt1.c2)>(rt1.c1))))) IS TRUE)  as count FROM vt50 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE (((((((rt1.c0) ISNULL))AND(((rt1.c2) BETWEEN (rt1.c2) AND (vt50.c0)))))OR(((rt1.c2)>(rt1.c1)))));
SELECT ALL * FROM rt1 WHERE ((('-1294889584')-(((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1294889584')-(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((('-1294889584')-(((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1294889584')-(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((('-1294889584')-(((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt50, rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt50.c0))  WHEN 'ry4fH1{' THEN (vt50.c0 IN ()) ELSE x'' END) ORDER BY (((((rt1.c2 IN ()))AND((rt1.c2 IN ()))))OR(((0.35313583303318763) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt50.c0))  WHEN 'ry4fH1{' THEN (vt50.c0 IN ()) ELSE x'' END) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((rt1.c2 IN ()))AND((rt1.c2 IN ()))))OR(((0.35313583303318763) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt50.c0))  WHEN 'ry4fH1{' THEN (vt50.c0 IN ()) ELSE x'' END) ORDER BY (((((rt1.c2 IN ()))AND((rt1.c2 IN ()))))OR(((0.35313583303318763) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt50.c0))  WHEN 'ry4fH1{' THEN (vt50.c0 IN ()) ELSE x'' END) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((((rt1.c2 IN ()))AND((rt1.c2 IN ()))))OR(((0.35313583303318763) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt50, rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt50.c0))  WHEN 'ry4fH1{' THEN (vt50.c0 IN ()) ELSE x'' END) ORDER BY (((((rt1.c2 IN ()))AND((rt1.c2 IN ()))))OR(((0.35313583303318763) NOT BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS LAST;
SELECT * FROM vt50, rt1 WHERE ((((((rt1.c1, rt1.c1, vt50.c0)) BETWEEN ((rt1.c1, NULL, 0.33893336460207146)) AND ((1.507810705E9, rt1.c1, vt50.c0)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)>=('kg'))))) ORDER BY CASE CASE rt1.c2  WHEN vt50.c0 THEN rt1.c0 END  WHEN ((NULL)+(rt1.c2)) THEN ((rt1.c2) NOT NULL) WHEN ((rt1.c2) IS FALSE) THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN (vt50.c0)) THEN ((rt1.c2)>(rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)) END ASC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((2086266798)) AND ((rt1.c2))))&(CASE WHEN rt1.c1 THEN vt50.c0 END)), RTRIM(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c1, vt50.c0)) BETWEEN ((rt1.c1, NULL, 0.33893336460207146)) AND ((1.507810705E9, rt1.c1, vt50.c0)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)>=('kg'))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CASE CASE rt1.c2  WHEN vt50.c0 THEN rt1.c0 END  WHEN ((NULL)+(rt1.c2)) THEN ((rt1.c2) NOT NULL) WHEN ((rt1.c2) IS FALSE) THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN (vt50.c0)) THEN ((rt1.c2)>(rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)) END ASC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((2086266798)) AND ((rt1.c2))))&(CASE WHEN rt1.c1 THEN vt50.c0 END)), RTRIM(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) DESC);
SELECT * FROM vt50, rt1 WHERE ((((((rt1.c1, rt1.c1, vt50.c0)) BETWEEN ((rt1.c1, NULL, 0.33893336460207146)) AND ((1.507810705E9, rt1.c1, vt50.c0)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)>=('kg'))))) ORDER BY CASE CASE rt1.c2  WHEN vt50.c0 THEN rt1.c0 END  WHEN ((NULL)+(rt1.c2)) THEN ((rt1.c2) NOT NULL) WHEN ((rt1.c2) IS FALSE) THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN (vt50.c0)) THEN ((rt1.c2)>(rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)) END ASC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((2086266798)) AND ((rt1.c2))))&(CASE WHEN rt1.c1 THEN vt50.c0 END)), RTRIM(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c1, vt50.c0)) BETWEEN ((rt1.c1, NULL, 0.33893336460207146)) AND ((1.507810705E9, rt1.c1, vt50.c0)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)>=('kg'))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CASE CASE rt1.c2  WHEN vt50.c0 THEN rt1.c0 END  WHEN ((NULL)+(rt1.c2)) THEN ((rt1.c2) NOT NULL) WHEN ((rt1.c2) IS FALSE) THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN (vt50.c0)) THEN ((rt1.c2)>(rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)) END ASC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((2086266798)) AND ((rt1.c2))))&(CASE WHEN rt1.c1 THEN vt50.c0 END)), RTRIM(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) DESC);
SELECT * FROM vt50, rt1 WHERE ((((((rt1.c1, rt1.c1, vt50.c0)) BETWEEN ((rt1.c1, NULL, 0.33893336460207146)) AND ((1.507810705E9, rt1.c1, vt50.c0)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c2)>=('kg'))))) ORDER BY CASE CASE rt1.c2  WHEN vt50.c0 THEN rt1.c0 END  WHEN ((NULL)+(rt1.c2)) THEN ((rt1.c2) NOT NULL) WHEN ((rt1.c2) IS FALSE) THEN (rt1.c2 IN ()) WHEN (rt1.c0 IN (vt50.c0)) THEN ((rt1.c2)>(rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (vt50.c0) AND (rt1.c0)) END ASC  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((2086266798)) AND ((rt1.c2))))&(CASE WHEN rt1.c1 THEN vt50.c0 END)), RTRIM(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))) DESC;
SELECT * FROM rt1, vt50 WHERE ((((rt1.c0, vt50.c0, vt50.c0)) BETWEEN ((rt1.c0 COLLATE NOCASE, rt1.c0 COLLATE NOCASE, rt1.c1 COLLATE RTRIM)) AND ((rt1.c1 COLLATE BINARY, ((((((((rt1.c1)OR(rt1.c1)))OR(vt50.c0)))OR(rt1.c1)))AND(rt1.c1)), (rt1.c1 IN (rt1.c2)))))) ORDER BY ((((rt1.c0)%(vt50.c0))) BETWEEN ('-1237796862') AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE 0Xffffffffd38b2e65 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, vt50.c0, vt50.c0)) BETWEEN ((rt1.c0 COLLATE NOCASE, rt1.c0 COLLATE NOCASE, rt1.c1 COLLATE RTRIM)) AND ((rt1.c1 COLLATE BINARY, ((((((((rt1.c1)OR(rt1.c1)))OR(vt50.c0)))OR(rt1.c1)))AND(rt1.c1)), (rt1.c1 IN (rt1.c2)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((rt1.c0)%(vt50.c0))) BETWEEN ('-1237796862') AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE 0xffffffffd38b2e65 END)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt50 WHERE ((((rt1.c0, vt50.c0, vt50.c0)) BETWEEN ((rt1.c0 COLLATE NOCASE, rt1.c0 COLLATE NOCASE, rt1.c1 COLLATE RTRIM)) AND ((rt1.c1 COLLATE BINARY, ((((((((rt1.c1)OR(rt1.c1)))OR(vt50.c0)))OR(rt1.c1)))AND(rt1.c1)), (rt1.c1 IN (rt1.c2)))))) ORDER BY ((((rt1.c0)%(vt50.c0))) BETWEEN ('-1237796862') AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE 0Xffffffffd38b2e65 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, vt50.c0, vt50.c0)) BETWEEN ((rt1.c0 COLLATE NOCASE, rt1.c0 COLLATE NOCASE, rt1.c1 COLLATE RTRIM)) AND ((rt1.c1 COLLATE BINARY, ((((((((rt1.c1)OR(rt1.c1)))OR(vt50.c0)))OR(rt1.c1)))AND(rt1.c1)), (rt1.c1 IN (rt1.c2)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((rt1.c0)%(vt50.c0))) BETWEEN ('-1237796862') AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE 0xffffffffd38b2e65 END)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt50 WHERE ((((rt1.c0, vt50.c0, vt50.c0)) BETWEEN ((rt1.c0 COLLATE NOCASE, rt1.c0 COLLATE NOCASE, rt1.c1 COLLATE RTRIM)) AND ((rt1.c1 COLLATE BINARY, ((((((((rt1.c1)OR(rt1.c1)))OR(vt50.c0)))OR(rt1.c1)))AND(rt1.c1)), (rt1.c1 IN (rt1.c2)))))) ORDER BY ((((rt1.c0)%(vt50.c0))) BETWEEN ('-1237796862') AND (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE 0Xffffffffd38b2e65 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY NULL ASC, (NOT (((vt50.c0)/(vt50.c0)))), ((((vt50.c0)) NOT BETWEEN (('ik')) AND ((vt50.c0))) IN ((((vt50.c0))<=((vt50.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY NULL ASC, (NOT (((vt50.c0)/(vt50.c0)))), ((((vt50.c0)) NOT BETWEEN (('ik')) AND ((vt50.c0))) IN ((((vt50.c0))<=((vt50.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY NULL ASC, (NOT (((vt50.c0)/(vt50.c0)))), ((((vt50.c0)) NOT BETWEEN (('ik')) AND ((vt50.c0))) IN ((((vt50.c0))<=((vt50.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY NULL ASC, (NOT (((vt50.c0)/(vt50.c0)))), ((((vt50.c0)) NOT BETWEEN (('ik')) AND ((vt50.c0))) IN ((((vt50.c0))<=((vt50.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY NULL ASC, (NOT (((vt50.c0)/(vt50.c0)))), ((((vt50.c0)) NOT BETWEEN (('ik')) AND ((vt50.c0))) IN ((((vt50.c0))<=((vt50.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((~ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS INTEGER) IN ())) ORDER BY (- (rt1.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c2 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS INTEGER) IN ())) ORDER BY (- (rt1.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c2 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS INTEGER) IN ())) ORDER BY (- (rt1.c2 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON (((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) IN ()) WHERE (((rt1.c0)<<(((vt50.c0)/(0.5456415752888226))))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(0.9427686971771781 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(((vt50.c0)/(0.5456415752888226))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON (((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) IN ()) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(0.9427686971771781 AS NUMERIC))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON (((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) IN ()) WHERE (((rt1.c0)<<(((vt50.c0)/(0.5456415752888226))))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(0.9427686971771781 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(((vt50.c0)/(0.5456415752888226))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON (((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) IN ()) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(0.9427686971771781 AS NUMERIC))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON (((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)) IN ()) WHERE (((rt1.c0)<<(((vt50.c0)/(0.5456415752888226))))) ORDER BY ((rt1.c1) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(0.9427686971771781 AS NUMERIC)));
SELECT ALL * FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (vt50.c0);
SELECT ALL * FROM vt50, rt1 WHERE ('-465080364') ORDER BY ((((((rt1.c1) NOT BETWEEN (vt50.c0) AND (rt1.c0)))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-465080364') IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((((rt1.c1) NOT BETWEEN (vt50.c0) AND (rt1.c0)))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) DESC);
SELECT ALL * FROM vt50, rt1 WHERE ('-465080364') ORDER BY ((((((rt1.c1) NOT BETWEEN (vt50.c0) AND (rt1.c0)))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-465080364') IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((((rt1.c1) NOT BETWEEN (vt50.c0) AND (rt1.c0)))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) DESC);
SELECT ALL * FROM vt50, rt1 WHERE ('-465080364') ORDER BY ((((((rt1.c1) NOT BETWEEN (vt50.c0) AND (rt1.c0)))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) DESC;
SELECT * FROM vt50, rt1 WHERE (((((vt50.c0 COLLATE RTRIM)OR(x'ecfc')))OR((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0 COLLATE RTRIM)OR(x'ecfc')))OR((- (rt1.c1))))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((vt50.c0 COLLATE RTRIM)OR(x'ecfc')))OR((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0 COLLATE RTRIM)OR(x'ecfc')))OR((- (rt1.c1))))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((vt50.c0 COLLATE RTRIM)OR(x'ecfc')))OR((- (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c2))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY ((rt1.c1 COLLATE NOCASE)|(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(0.7150972865062167))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE NOCASE)|(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(0.7150972865062167)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c2))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY ((rt1.c1 COLLATE NOCASE)|(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(0.7150972865062167))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) AND (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE NOCASE)|(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(0.7150972865062167)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c2))) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END) AND (CAST(rt1.c0 AS INTEGER)))) ORDER BY ((rt1.c1 COLLATE NOCASE)|(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(0.7150972865062167))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt50 ON (((((((vt50.c0)OR(rt1.c0)))AND(vt50.c0)), ((rt1.c1)-(rt1.c1)), rt1.c2))>((rt1.c0, ((x'9f22')>>(rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) WHERE (COALESCE(CAST(rt1.c1 AS INTEGER), (vt50.c0 IN (rt1.c1, rt1.c1)), CAST(rt1.c2 AS INTEGER), NULL)) ORDER BY (((rt1.c0 IN ())) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2)%(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt1.c1 AS INTEGER), (vt50.c0 IN (rt1.c1, rt1.c1)), CAST(rt1.c2 AS INTEGER), NULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (((((((vt50.c0)OR(rt1.c0)))AND(vt50.c0)), ((rt1.c1)-(rt1.c1)), rt1.c2))>((rt1.c0, ((x'9f22')>>(rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY (((rt1.c0 IN ())) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2)%(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt50 ON (((((((vt50.c0)OR(rt1.c0)))AND(vt50.c0)), ((rt1.c1)-(rt1.c1)), rt1.c2))>((rt1.c0, ((x'9f22')>>(rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) WHERE (COALESCE(CAST(rt1.c1 AS INTEGER), (vt50.c0 IN (rt1.c1, rt1.c1)), CAST(rt1.c2 AS INTEGER), NULL)) ORDER BY (((rt1.c0 IN ())) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2)%(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CAST(rt1.c1 AS INTEGER), (vt50.c0 IN (rt1.c1, rt1.c1)), CAST(rt1.c2 AS INTEGER), NULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON (((((((vt50.c0)OR(rt1.c0)))AND(vt50.c0)), ((rt1.c1)-(rt1.c1)), rt1.c2))>((rt1.c0, ((x'9f22')>>(rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY (((rt1.c0 IN ())) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2)%(rt1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt50 ON (((((((vt50.c0)OR(rt1.c0)))AND(vt50.c0)), ((rt1.c1)-(rt1.c1)), rt1.c2))>((rt1.c0, ((x'9f22')>>(rt1.c1)), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) WHERE (COALESCE(CAST(rt1.c1 AS INTEGER), (vt50.c0 IN (rt1.c1, rt1.c1)), CAST(rt1.c2 AS INTEGER), NULL)) ORDER BY (((rt1.c0 IN ())) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c2)%(rt1.c1))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>=(rt1.c1))) NOT BETWEEN ((NOT (rt1.c2))) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>=(rt1.c1))) NOT BETWEEN ((NOT (rt1.c2))) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>=(rt1.c1))) NOT BETWEEN ((NOT (rt1.c2))) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>=(rt1.c1))) NOT BETWEEN ((NOT (rt1.c2))) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>=(rt1.c1))) NOT BETWEEN ((NOT (rt1.c2))) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM vt50 CROSS JOIN rt1 ON ((vt50.c0) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND ((((rt1.c2, rt1.c0, rt1.c2, vt50.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt50.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2, rt1.c1, vt50.c0))))) WHERE (((((vt50.c0) NOT NULL))<<((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0) NOT NULL))<<((- (rt1.c0))))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((vt50.c0) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND ((((rt1.c2, rt1.c0, rt1.c2, vt50.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt50.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2, rt1.c1, vt50.c0))))));
SELECT COUNT(*) FROM vt50 CROSS JOIN rt1 ON ((vt50.c0) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND ((((rt1.c2, rt1.c0, rt1.c2, vt50.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt50.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2, rt1.c1, vt50.c0))))) WHERE (((((vt50.c0) NOT NULL))<<((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt50.c0) NOT NULL))<<((- (rt1.c0))))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((vt50.c0) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND ((((rt1.c2, rt1.c0, rt1.c2, vt50.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt50.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2, rt1.c1, vt50.c0))))));
SELECT COUNT(*) FROM vt50 CROSS JOIN rt1 ON ((vt50.c0) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND ((((rt1.c2, rt1.c0, rt1.c2, vt50.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt50.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2, rt1.c1, vt50.c0))))) WHERE (((((vt50.c0) NOT NULL))<<((- (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM) ORDER BY CAST(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt50 ORDER BY CAST(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM) ORDER BY CAST(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt50.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt50 ORDER BY CAST(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt50 WHERE (CAST(vt50.c0 AS INTEGER) COLLATE BINARY COLLATE RTRIM) ORDER BY CAST(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c1, rt1.c0, '1860638053'))>((rt1.c2, 0X458b6d70, NULL, rt1.c1, rt1.c1))))IS(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY ((rt1.c2) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, rt1.c2, rt1.c1, rt1.c0, '1860638053'))>((rt1.c2, 0X458b6d70, NULL, rt1.c1, rt1.c1))))IS(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c1, rt1.c0, '1860638053'))>((rt1.c2, 0X458b6d70, NULL, rt1.c1, rt1.c1))))IS(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY ((rt1.c2) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, rt1.c2, rt1.c1, rt1.c0, '1860638053'))>((rt1.c2, 0X458b6d70, NULL, rt1.c1, rt1.c1))))IS(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c0, rt1.c2, rt1.c1, rt1.c0, '1860638053'))>((rt1.c2, 0X458b6d70, NULL, rt1.c1, rt1.c1))))IS(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY ((rt1.c2) NOTNULL) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(x'' AS TEXT));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)OR((((('-665331757')OR(0.754038448997822)))OR(rt1.c0)))))AND((+ (rt1.c0))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)OR((((('-665331757')OR(0.754038448997822)))OR(rt1.c0)))))AND((+ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY '');
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)OR((((('-665331757')OR(0.754038448997822)))OR(rt1.c0)))))AND((+ (rt1.c0))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)OR((((('-665331757')OR(0.754038448997822)))OR(rt1.c0)))))AND((+ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY '');
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)OR((((('-665331757')OR(0.754038448997822)))OR(rt1.c0)))))AND((+ (rt1.c0))))) ORDER BY '';
SELECT ALL * FROM rt1, vt50 WHERE (((((rt1.c0)GLOB(rt1.c0)))IS NOT(rt1.c2))) ORDER BY (((rt1.c1, (vt50.c0 IN ()), (- (rt1.c1))))<>((NULL, ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt1.c0)))IS NOT(rt1.c2))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1, (vt50.c0 IN ()), (- (rt1.c1))))!=((NULL, ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT ALL * FROM rt1, vt50 WHERE (((((rt1.c0)GLOB(rt1.c0)))IS NOT(rt1.c2))) ORDER BY (((rt1.c1, (vt50.c0 IN ()), (- (rt1.c1))))<>((NULL, ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt1.c0)))IS NOT(rt1.c2))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1, (vt50.c0 IN ()), (- (rt1.c1))))!=((NULL, ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))));
SELECT ALL * FROM rt1, vt50 WHERE (((((rt1.c0)GLOB(rt1.c0)))IS NOT(rt1.c2))) ORDER BY (((rt1.c1, (vt50.c0 IN ()), (- (rt1.c1))))<>((NULL, ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT * FROM rt1, vt50 WHERE ((((((((((vt50.c0 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c0)||(x'')))))AND(rt1.c2 COLLATE NOCASE)))AND(((vt50.c0)<>(rt1.c1))))) ORDER BY ((UNLIKELY(DISTINCT vt50.c0))<=(((rt1.c2)<(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt50.c0 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c0)||(x'')))))AND(rt1.c2 COLLATE NOCASE)))AND(((vt50.c0)<>(rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((UNLIKELY(DISTINCT vt50.c0))<=(((rt1.c2)<(rt1.c0)))));
SELECT * FROM rt1, vt50 WHERE ((((((((((vt50.c0 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c0)||(x'')))))AND(rt1.c2 COLLATE NOCASE)))AND(((vt50.c0)<>(rt1.c1))))) ORDER BY ((UNLIKELY(DISTINCT vt50.c0))<=(((rt1.c2)<(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt50.c0 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c0)||(x'')))))AND(rt1.c2 COLLATE NOCASE)))AND(((vt50.c0)<>(rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((UNLIKELY(DISTINCT vt50.c0))<=(((rt1.c2)<(rt1.c0)))));
SELECT * FROM rt1, vt50 WHERE ((((((((((vt50.c0 IN ()))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c0)||(x'')))))AND(rt1.c2 COLLATE NOCASE)))AND(((vt50.c0)<>(rt1.c1))))) ORDER BY ((UNLIKELY(DISTINCT vt50.c0))<=(((rt1.c2)<(rt1.c0))));
SELECT COUNT(*) FROM vt50 WHERE (UNICODE(((vt50.c0) IS FALSE))) ORDER BY (+ ((((vt50.c0))<((vt50.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((vt50.c0) IS FALSE))) IS TRUE)  as count FROM vt50 ORDER BY (+ ((((vt50.c0))<((vt50.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (UNICODE(((vt50.c0) IS FALSE))) ORDER BY (+ ((((vt50.c0))<((vt50.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((vt50.c0) IS FALSE))) IS TRUE)  as count FROM vt50 ORDER BY (+ ((((vt50.c0))<((vt50.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt50 WHERE (UNICODE(((vt50.c0) IS FALSE))) ORDER BY (+ ((((vt50.c0))<((vt50.c0)))))  NULLS LAST;
SELECT * FROM vt50, rt1 WHERE (((((rt1.c1)|(vt50.c0)))+((~ (rt1.c2))))) ORDER BY (((rt1.c0)/(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(vt50.c0)))+((~ (rt1.c2))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0)/(rt1.c2)) IN ()));
SELECT * FROM vt50, rt1 WHERE (((((rt1.c1)|(vt50.c0)))+((~ (rt1.c2))))) ORDER BY (((rt1.c0)/(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(vt50.c0)))+((~ (rt1.c2))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((rt1.c0)/(rt1.c2)) IN ()));
SELECT * FROM vt50, rt1 WHERE (((((rt1.c1)|(vt50.c0)))+((~ (rt1.c2))))) ORDER BY (((rt1.c0)/(rt1.c2)) IN ());
SELECT ALL * FROM rt1, vt50 NOT INDEXED WHERE ((((((((('-616373433')OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c0 IN ()))))OR(rt1.c2 COLLATE RTRIM))) ORDER BY (~ (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((('-616373433')OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c0 IN ()))))OR(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (~ (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC);
SELECT ALL * FROM rt1, vt50 NOT INDEXED WHERE ((((((((('-616373433')OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c0 IN ()))))OR(rt1.c2 COLLATE RTRIM))) ORDER BY (~ (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((('-616373433')OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c0 IN ()))))OR(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (~ (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC);
SELECT ALL * FROM rt1, vt50 NOT INDEXED WHERE ((((((((('-616373433')OR(CAST(rt1.c0 AS BLOB))))OR(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND((rt1.c0 IN ()))))OR(rt1.c2 COLLATE RTRIM))) ORDER BY (~ (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c1))  WHEN ((vt50.c0)AND(rt1.c0)) THEN (('>)') ISNULL) ELSE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c1))  WHEN ((vt50.c0)AND(rt1.c0)) THEN (('>)') ISNULL) ELSE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) END);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c1))  WHEN ((vt50.c0)AND(rt1.c0)) THEN (('>)') ISNULL) ELSE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c1))  WHEN ((vt50.c0)AND(rt1.c0)) THEN (('>)') ISNULL) ELSE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) END);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt50 ON CASE ((rt1.c0) NOT BETWEEN (vt50.c0) AND (rt1.c1))  WHEN ((vt50.c0)AND(rt1.c0)) THEN (('>)') ISNULL) ELSE ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) END WHERE (NULL);
SELECT ALL COUNT(*) FROM vt50 WHERE (x'') ORDER BY vt50.c0 DESC, (+ ((~ (vt50.c0))))  NULLS FIRST, (vt50.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt50 ORDER BY vt50.c0 DESC, (+ ((~ (vt50.c0))))  NULLS FIRST, (vt50.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (x'') ORDER BY vt50.c0 DESC, (+ ((~ (vt50.c0))))  NULLS FIRST, (vt50.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt50 ORDER BY vt50.c0 DESC, (+ ((~ (vt50.c0))))  NULLS FIRST, (vt50.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE (x'') ORDER BY vt50.c0 DESC, (+ ((~ (vt50.c0))))  NULLS FIRST, (vt50.c0 IN ()) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50 NOT INDEXED WHERE ((- (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 NOT INDEXED WHERE ((- (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 NOT INDEXED WHERE ((- (((((((((vt50.c0)AND(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))));
SELECT * FROM rt1, vt50 WHERE (((((rt1.c2) NOTNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))) AND (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((((rt1.c2) NOTNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))) AND (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (((((rt1.c2) NOTNULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT ALL * FROM rt1 WHERE ((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)) IN ())) ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)) IN ())) ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)) IN ())) ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN '-1763923022' THEN CAST(vt50.c0 AS INTEGER) ELSE ((NULL)AND(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1763923022' THEN CAST(vt50.c0 AS INTEGER) ELSE ((NULL)AND(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN '-1763923022' THEN CAST(vt50.c0 AS INTEGER) ELSE ((NULL)AND(vt50.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1763923022' THEN CAST(vt50.c0 AS INTEGER) ELSE ((NULL)AND(vt50.c0)) END) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE (CASE WHEN '-1763923022' THEN CAST(vt50.c0 AS INTEGER) ELSE ((NULL)AND(vt50.c0)) END);
SELECT * FROM rt1 WHERE (CAST(((rt1.c1) IS TRUE) AS NUMERIC)) ORDER BY (CAST(rt1.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (CAST(rt1.c0 AS BLOB) IN ()));
SELECT * FROM rt1 WHERE (CAST(((rt1.c1) IS TRUE) AS NUMERIC)) ORDER BY (CAST(rt1.c0 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (CAST(rt1.c0 AS BLOB) IN ()));
SELECT * FROM rt1 WHERE (CAST(((rt1.c1) IS TRUE) AS NUMERIC)) ORDER BY (CAST(rt1.c0 AS BLOB) IN ());
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((((((((((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(TOTAL_CHANGES())))OR(CAST(vt50.c0 AS BLOB))))OR(((vt50.c0) BETWEEN (476771224) AND (vt50.c0))))) ORDER BY ((vt50.c0) BETWEEN (((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0))) AND ((vt50.c0 IN ()))) ASC, ((((vt50.c0) NOT NULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(TOTAL_CHANGES())))OR(CAST(vt50.c0 AS BLOB))))OR(((vt50.c0) BETWEEN (476771224) AND (vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((vt50.c0) BETWEEN (((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0))) AND ((vt50.c0 IN ()))) ASC, ((((vt50.c0) NOT NULL)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((((((((((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(TOTAL_CHANGES())))OR(CAST(vt50.c0 AS BLOB))))OR(((vt50.c0) BETWEEN (476771224) AND (vt50.c0))))) ORDER BY ((vt50.c0) BETWEEN (((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0))) AND ((vt50.c0 IN ()))) ASC, ((((vt50.c0) NOT NULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(TOTAL_CHANGES())))OR(CAST(vt50.c0 AS BLOB))))OR(((vt50.c0) BETWEEN (476771224) AND (vt50.c0))))) IS TRUE)  as count FROM vt50 ORDER BY ((vt50.c0) BETWEEN (((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0))) AND ((vt50.c0 IN ()))) ASC, ((((vt50.c0) NOT NULL)) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt50 WHERE (((((((((((((((((vt50.c0)OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))OR(TOTAL_CHANGES())))OR(CAST(vt50.c0 AS BLOB))))OR(((vt50.c0) BETWEEN (476771224) AND (vt50.c0))))) ORDER BY ((vt50.c0) BETWEEN (((((((((vt50.c0)AND(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))AND(vt50.c0))) AND ((vt50.c0 IN ()))) ASC, ((((vt50.c0) NOT NULL)) IS TRUE) ASC;
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON load_extension(((vt50.c0) NOT NULL), ((vt50.c0)>('>Af.'))) WHERE (-748319277) ORDER BY (((rt1.c1)) BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((ROUND(rt1.c1, rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((-748319277) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON load_extension(((vt50.c0) NOT NULL), ((vt50.c0)>('>Af.'))) ORDER BY (((rt1.c1)) BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((ROUND(rt1.c1, rt1.c2)))) DESC);
SELECT * FROM rt1 LEFT OUTER JOIN vt50 ON load_extension(((vt50.c0) NOT NULL), ((vt50.c0)>('>Af.'))) WHERE (-748319277) ORDER BY (((rt1.c1)) BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((ROUND(rt1.c1, rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((-748319277) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON load_extension(((vt50.c0) NOT NULL), ((vt50.c0)>('>Af.'))) ORDER BY (((rt1.c1)) BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((ROUND(rt1.c1, rt1.c2)))) DESC);
SELECT ALL * FROM rt1, vt50 WHERE ((((NULL, 'rs', ((vt50.c0)||(rt1.c1))))>((vt50.c0, rt1.c2, IFNULL(rt1.c0, 0.9502905361828896)))));
SELECT SUM(count) FROM (SELECT (((((NULL, 'rs', ((vt50.c0)||(rt1.c1))))>((vt50.c0, rt1.c2, IFNULL(rt1.c0, 0.9502905361828896))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE ((((NULL, 'rs', ((vt50.c0)||(rt1.c1))))>((vt50.c0, rt1.c2, IFNULL(rt1.c0, 0.9502905361828896)))));
SELECT SUM(count) FROM (SELECT (((((NULL, 'rs', ((vt50.c0)||(rt1.c1))))>((vt50.c0, rt1.c2, IFNULL(rt1.c0, 0.9502905361828896))))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL * FROM rt1, vt50 WHERE ((((NULL, 'rs', ((vt50.c0)||(rt1.c1))))>((vt50.c0, rt1.c2, IFNULL(rt1.c0, 0.9502905361828896)))));
SELECT ALL * FROM vt50 CROSS JOIN rt1 ON ((((CAST(vt50.c0 AS TEXT))AND(((rt1.c0)>=(rt1.c0)))))AND(((rt1.c2)>=(rt1.c0)))) WHERE (((((NULL) NOT BETWEEN (vt50.c0) AND (rt1.c0)))GLOB(CASE rt1.c1  WHEN rt1.c2 THEN '723670318' WHEN rt1.c1 THEN rt1.c0 WHEN vt50.c0 THEN vt50.c0 END))) ORDER BY ((rt1.c2) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt50.c0) AND (rt1.c0)))GLOB(CASE rt1.c1  WHEN rt1.c2 THEN '723670318' WHEN rt1.c1 THEN rt1.c0 WHEN vt50.c0 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((((CAST(vt50.c0 AS TEXT))AND(((rt1.c0)>=(rt1.c0)))))AND(((rt1.c2)>=(rt1.c0)))) ORDER BY ((rt1.c2) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt50 CROSS JOIN rt1 ON ((((CAST(vt50.c0 AS TEXT))AND(((rt1.c0)>=(rt1.c0)))))AND(((rt1.c2)>=(rt1.c0)))) WHERE (((((NULL) NOT BETWEEN (vt50.c0) AND (rt1.c0)))GLOB(CASE rt1.c1  WHEN rt1.c2 THEN '723670318' WHEN rt1.c1 THEN rt1.c0 WHEN vt50.c0 THEN vt50.c0 END))) ORDER BY ((rt1.c2) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (vt50.c0) AND (rt1.c0)))GLOB(CASE rt1.c1  WHEN rt1.c2 THEN '723670318' WHEN rt1.c1 THEN rt1.c0 WHEN vt50.c0 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((((CAST(vt50.c0 AS TEXT))AND(((rt1.c0)>=(rt1.c0)))))AND(((rt1.c2)>=(rt1.c0)))) ORDER BY ((rt1.c2) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt50 CROSS JOIN rt1 ON ((((CAST(vt50.c0 AS TEXT))AND(((rt1.c0)>=(rt1.c0)))))AND(((rt1.c2)>=(rt1.c0)))) WHERE (((((NULL) NOT BETWEEN (vt50.c0) AND (rt1.c0)))GLOB(CASE rt1.c1  WHEN rt1.c2 THEN '723670318' WHEN rt1.c1 THEN rt1.c0 WHEN vt50.c0 THEN vt50.c0 END))) ORDER BY ((rt1.c2) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON CASE WHEN '0.18797909245128908' THEN ((0.2367428032309753) NOT BETWEEN (rt1.c0) AND (vt50.c0)) END WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB)) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON CASE WHEN '0.18797909245128908' THEN ((0.2367428032309753) NOT BETWEEN (rt1.c0) AND (vt50.c0)) END ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT) ASC);
SELECT COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON CASE WHEN '0.18797909245128908' THEN ((0.2367428032309753) NOT BETWEEN (rt1.c0) AND (vt50.c0)) END WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB)) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt50 LEFT OUTER JOIN rt1 ON CASE WHEN '0.18797909245128908' THEN ((0.2367428032309753) NOT BETWEEN (rt1.c0) AND (vt50.c0)) END ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT) ASC);
SELECT COUNT(*) FROM vt50 LEFT OUTER JOIN rt1 ON CASE WHEN '0.18797909245128908' THEN ((0.2367428032309753) NOT BETWEEN (rt1.c0) AND (vt50.c0)) END WHERE (CAST(rt1.c0 COLLATE BINARY AS BLOB)) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS TEXT) ASC;
SELECT * FROM vt50 WHERE (x'fd80');
SELECT SUM(count) FROM (SELECT ALL ((x'fd80') IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (x'fd80');
SELECT SUM(count) FROM (SELECT ALL ((x'fd80') IS TRUE)  as count FROM vt50);
SELECT * FROM vt50 WHERE (x'fd80');
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (TYPEOF(((rt1.c1)AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt1.c1)AND(rt1.c2)))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (TYPEOF(((rt1.c1)AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt1.c1)AND(rt1.c2)))) IS TRUE)  as count FROM rt1, vt50);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (TYPEOF(((rt1.c1)AND(rt1.c2))));
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN ((((((((vt50.c0)OR(rt1.c2)))AND(rt1.c0)))OR(0.7961075555913555)))AND(vt50.c0)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CAST(vt50.c0 AS REAL) THEN ((((vt50.c0)AND(vt50.c0)))OR(rt1.c2)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CAST(rt1.c1 AS NUMERIC) ELSE (NOT (rt1.c0)) END) ORDER BY (((CAST(vt50.c0 AS REAL), rt1.c2, (NOT (rt1.c1)), (rt1.c0 IN (vt50.c0, rt1.c0)), COALESCE(DISTINCT rt1.c1, rt1.c1)))>(((((rt1.c0, rt1.c0, NULL))<=((rt1.c1, rt1.c2, rt1.c1))), (- (vt50.c0)), ((rt1.c1)OR(rt1.c0)), (NOT (rt1.c1)), -145865763))), ((((((vt50.c0)>>(rt1.c0)))OR(((rt1.c2)IS(vt50.c0)))))AND((NOT (rt1.c2)))) ASC  NULLS FIRST, ((vt50.c0) IS FALSE) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt50.c0)OR(rt1.c2)))AND(rt1.c0)))OR(0.7961075555913555)))AND(vt50.c0)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CAST(vt50.c0 AS REAL) THEN ((((vt50.c0)AND(vt50.c0)))OR(rt1.c2)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CAST(rt1.c1 AS NUMERIC) ELSE (NOT (rt1.c0)) END) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((CAST(vt50.c0 AS REAL), rt1.c2, (NOT (rt1.c1)), (rt1.c0 IN (vt50.c0, rt1.c0)), COALESCE(DISTINCT rt1.c1, rt1.c1)))>(((((rt1.c0, rt1.c0, NULL))<=((rt1.c1, rt1.c2, rt1.c1))), (- (vt50.c0)), ((rt1.c1)OR(rt1.c0)), (NOT (rt1.c1)), -145865763))), ((((((vt50.c0)>>(rt1.c0)))OR(((rt1.c2)IS(vt50.c0)))))AND((NOT (rt1.c2)))) ASC  NULLS FIRST, ((vt50.c0) IS FALSE) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN ((((((((vt50.c0)OR(rt1.c2)))AND(rt1.c0)))OR(0.7961075555913555)))AND(vt50.c0)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CAST(vt50.c0 AS REAL) THEN ((((vt50.c0)AND(vt50.c0)))OR(rt1.c2)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CAST(rt1.c1 AS NUMERIC) ELSE (NOT (rt1.c0)) END) ORDER BY (((CAST(vt50.c0 AS REAL), rt1.c2, (NOT (rt1.c1)), (rt1.c0 IN (vt50.c0, rt1.c0)), COALESCE(DISTINCT rt1.c1, rt1.c1)))>(((((rt1.c0, rt1.c0, NULL))<=((rt1.c1, rt1.c2, rt1.c1))), (- (vt50.c0)), ((rt1.c1)OR(rt1.c0)), (NOT (rt1.c1)), -145865763))), ((((((vt50.c0)>>(rt1.c0)))OR(((rt1.c2)IS(vt50.c0)))))AND((NOT (rt1.c2)))) ASC  NULLS FIRST, ((vt50.c0) IS FALSE) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt50.c0)OR(rt1.c2)))AND(rt1.c0)))OR(0.7961075555913555)))AND(vt50.c0)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CAST(vt50.c0 AS REAL) THEN ((((vt50.c0)AND(vt50.c0)))OR(rt1.c2)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CAST(rt1.c1 AS NUMERIC) ELSE (NOT (rt1.c0)) END) IS TRUE)  as count FROM vt50, rt1 ORDER BY (((CAST(vt50.c0 AS REAL), rt1.c2, (NOT (rt1.c1)), (rt1.c0 IN (vt50.c0, rt1.c0)), COALESCE(DISTINCT rt1.c1, rt1.c1)))>(((((rt1.c0, rt1.c0, NULL))<=((rt1.c1, rt1.c2, rt1.c1))), (- (vt50.c0)), ((rt1.c1)OR(rt1.c0)), (NOT (rt1.c1)), -145865763))), ((((((vt50.c0)>>(rt1.c0)))OR(((rt1.c2)IS(vt50.c0)))))AND((NOT (rt1.c2)))) ASC  NULLS FIRST, ((vt50.c0) IS FALSE) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE (CASE WHEN ((((((((vt50.c0)OR(rt1.c2)))AND(rt1.c0)))OR(0.7961075555913555)))AND(vt50.c0)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CAST(vt50.c0 AS REAL) THEN ((((vt50.c0)AND(vt50.c0)))OR(rt1.c2)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CAST(rt1.c1 AS NUMERIC) ELSE (NOT (rt1.c0)) END) ORDER BY (((CAST(vt50.c0 AS REAL), rt1.c2, (NOT (rt1.c1)), (rt1.c0 IN (vt50.c0, rt1.c0)), COALESCE(DISTINCT rt1.c1, rt1.c1)))>(((((rt1.c0, rt1.c0, NULL))<=((rt1.c1, rt1.c2, rt1.c1))), (- (vt50.c0)), ((rt1.c1)OR(rt1.c0)), (NOT (rt1.c1)), -145865763))), ((((((vt50.c0)>>(rt1.c0)))OR(((rt1.c2)IS(vt50.c0)))))AND((NOT (rt1.c2)))) ASC  NULLS FIRST, ((vt50.c0) IS FALSE) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c1) ISNULL)) IS FALSE)) ORDER BY '-341400966' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt50, rt1 ORDER BY '-341400966' ASC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c1) ISNULL)) IS FALSE)) ORDER BY '-341400966' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt50, rt1 ORDER BY '-341400966' ASC  NULLS LAST);
SELECT ALL * FROM vt50, rt1 WHERE (((((rt1.c1) ISNULL)) IS FALSE)) ORDER BY '-341400966' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((rt1.c2 COLLATE BINARY IN (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))AND(vt50.c0))))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((rt1.c2 COLLATE BINARY IN (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))AND(vt50.c0)))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))AND(vt50.c0))))) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((rt1.c2 COLLATE BINARY IN (((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))AND(vt50.c0)))));
SELECT * FROM vt50, rt1 WHERE ((NOT (((0x5bd1884d) IS TRUE)))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((0X5bd1884d) IS TRUE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT * FROM vt50, rt1 WHERE ((NOT (((0x5bd1884d) IS TRUE)))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((0X5bd1884d) IS TRUE)))) IS TRUE)  as count FROM vt50, rt1 ORDER BY rt1.c2 DESC  NULLS LAST);
SELECT * FROM vt50, rt1 WHERE ((NOT (((0x5bd1884d) IS TRUE)))) ORDER BY rt1.c2 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((vt50.c0, rt1.c0, rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)))) BETWEEN (x'') AND ((((rt1.c0, vt50.c0, vt50.c0))<((rt1.c0, vt50.c0, '><')))))) ORDER BY ((((x'e6fd')GLOB(vt50.c0)))IS((- (vt50.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0, rt1.c0, rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)))) BETWEEN (x'') AND ((((rt1.c0, vt50.c0, vt50.c0))<((rt1.c0, vt50.c0, '><')))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((x'e6fd')GLOB(vt50.c0)))IS((- (vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((vt50.c0, rt1.c0, rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)))) BETWEEN (x'') AND ((((rt1.c0, vt50.c0, vt50.c0))<((rt1.c0, vt50.c0, '><')))))) ORDER BY ((((x'e6fd')GLOB(vt50.c0)))IS((- (vt50.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt50.c0, rt1.c0, rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)))) BETWEEN (x'') AND ((((rt1.c0, vt50.c0, vt50.c0))<((rt1.c0, vt50.c0, '><')))))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((x'e6fd')GLOB(vt50.c0)))IS((- (vt50.c0)))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((((vt50.c0, rt1.c0, rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)))) BETWEEN (x'') AND ((((rt1.c0, vt50.c0, vt50.c0))<((rt1.c0, vt50.c0, '><')))))) ORDER BY ((((x'e6fd')GLOB(vt50.c0)))IS((- (vt50.c0))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((rt1.c0 COLLATE NOCASE)<=(rt1.c2 COLLATE BINARY))) ORDER BY ((((rt1.c1)%(rt1.c1))) IS TRUE)  NULLS LAST, (((json_patch(rt1.c1, rt1.c2)))==((((rt1.c0)-(rt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)<=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c1)%(rt1.c1))) IS TRUE)  NULLS LAST, (((json_patch(rt1.c1, rt1.c2)))=((((rt1.c0)-(rt1.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((rt1.c0 COLLATE NOCASE)<=(rt1.c2 COLLATE BINARY))) ORDER BY ((((rt1.c1)%(rt1.c1))) IS TRUE)  NULLS LAST, (((json_patch(rt1.c1, rt1.c2)))==((((rt1.c0)-(rt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE)<=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((((rt1.c1)%(rt1.c1))) IS TRUE)  NULLS LAST, (((json_patch(rt1.c1, rt1.c2)))=((((rt1.c0)-(rt1.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE (((rt1.c0 COLLATE NOCASE)<=(rt1.c2 COLLATE BINARY))) ORDER BY ((((rt1.c1)%(rt1.c1))) IS TRUE)  NULLS LAST, (((json_patch(rt1.c1, rt1.c2)))==((((rt1.c0)-(rt1.c1))))) DESC  NULLS LAST;
SELECT * FROM rt1, vt50 WHERE (((vt50.c0 COLLATE BINARY) ISNULL)) ORDER BY (~ ((NOT (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt50.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY (~ ((NOT (rt1.c0)))));
SELECT * FROM rt1, vt50 WHERE (((vt50.c0 COLLATE BINARY) ISNULL)) ORDER BY (~ ((NOT (rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt50.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY (~ ((NOT (rt1.c0)))));
SELECT * FROM rt1, vt50 WHERE (((vt50.c0 COLLATE BINARY) ISNULL)) ORDER BY (~ ((NOT (rt1.c0))));
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((rt1.c0)) BETWEEN ((CASE rt1.c1  WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) AND (((((rt1.c1, 'I4熃1 j01', rt1.c2))<=((rt1.c2, rt1.c1, rt1.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((CASE rt1.c1  WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) AND (((((rt1.c1, 'I4熃1 j01', rt1.c2))<=((rt1.c2, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((rt1.c0)) BETWEEN ((CASE rt1.c1  WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) AND (((((rt1.c1, 'I4熃1 j01', rt1.c2))<=((rt1.c2, rt1.c1, rt1.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((CASE rt1.c1  WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) AND (((((rt1.c1, 'I4熃1 j01', rt1.c2))<=((rt1.c2, rt1.c1, rt1.c2))))))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((((rt1.c0)) BETWEEN ((CASE rt1.c1  WHEN vt50.c0 THEN vt50.c0 ELSE rt1.c0 END)) AND (((((rt1.c1, 'I4熃1 j01', rt1.c2))<=((rt1.c2, rt1.c1, rt1.c2)))))));
SELECT * FROM vt50, rt1 WHERE ((vt50.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt50.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((vt50.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt50.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE ((vt50.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.22097725820959435) THEN (- (rt1.c0)) WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) WHEN (NOT (rt1.c1)) THEN CAST(rt1.c2 AS INTEGER) END) ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.22097725820959435) THEN (- (rt1.c0)) WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) WHEN (NOT (rt1.c1)) THEN CAST(rt1.c2 AS INTEGER) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.22097725820959435) THEN (- (rt1.c0)) WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) WHEN (NOT (rt1.c1)) THEN CAST(rt1.c2 AS INTEGER) END) ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.22097725820959435) THEN (- (rt1.c0)) WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) WHEN (NOT (rt1.c1)) THEN CAST(rt1.c2 AS INTEGER) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.22097725820959435) THEN (- (rt1.c0)) WHEN (rt1.c0 IN ()) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) WHEN (NOT (rt1.c1)) THEN CAST(rt1.c2 AS INTEGER) END) ORDER BY CAST(rt1.c2 AS TEXT) COLLATE BINARY ASC;
SELECT * FROM vt50, rt1 WHERE (NULL) ORDER BY ((json_valid(vt50.c0)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((0.00895311546873423) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((json_valid(vt50.c0)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((0.00895311546873423) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM vt50, rt1 WHERE (NULL) ORDER BY ((json_valid(vt50.c0)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((0.00895311546873423) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((json_valid(vt50.c0)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((0.00895311546873423) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM vt50, rt1 WHERE (NULL) ORDER BY ((json_valid(vt50.c0)) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((0.00895311546873423) NOT NULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((~ (((vt50.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt50.c0) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((~ (((vt50.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt50.c0) NOT NULL)))) IS TRUE)  as count FROM vt50, rt1);
SELECT ALL COUNT(*) FROM vt50, rt1 WHERE ((~ (((vt50.c0) NOT NULL))));
SELECT COUNT(*) FROM rt1 NOT INDEXED LEFT OUTER JOIN vt50 ON ((UPPER(vt50.c0))/(((('xj'))>=((rt1.c0))))) WHERE (CAST((((rt1.c0, rt1.c2, rt1.c2))>=((vt50.c0, rt1.c2, rt1.c0))) AS REAL)) ORDER BY (((CASE WHEN vt50.c0 THEN rt1.c0 ELSE vt50.c0 END))=((vt50.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0, rt1.c2, rt1.c2))>=((vt50.c0, rt1.c2, rt1.c0))) AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON ((UPPER(vt50.c0))/(((('xj'))>=((rt1.c0))))) ORDER BY (((CASE WHEN vt50.c0 THEN rt1.c0 ELSE vt50.c0 END))==((vt50.c0))) ASC);
SELECT COUNT(*) FROM rt1 NOT INDEXED LEFT OUTER JOIN vt50 ON ((UPPER(vt50.c0))/(((('xj'))>=((rt1.c0))))) WHERE (CAST((((rt1.c0, rt1.c2, rt1.c2))>=((vt50.c0, rt1.c2, rt1.c0))) AS REAL)) ORDER BY (((CASE WHEN vt50.c0 THEN rt1.c0 ELSE vt50.c0 END))=((vt50.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0, rt1.c2, rt1.c2))>=((vt50.c0, rt1.c2, rt1.c0))) AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON ((UPPER(vt50.c0))/(((('xj'))>=((rt1.c0))))) ORDER BY (((CASE WHEN vt50.c0 THEN rt1.c0 ELSE vt50.c0 END))==((vt50.c0))) ASC);
SELECT COUNT(*) FROM rt1 NOT INDEXED LEFT OUTER JOIN vt50 ON ((UPPER(vt50.c0))/(((('xj'))>=((rt1.c0))))) WHERE (CAST((((rt1.c0, rt1.c2, rt1.c2))>=((vt50.c0, rt1.c2, rt1.c0))) AS REAL)) ORDER BY (((CASE WHEN vt50.c0 THEN rt1.c0 ELSE vt50.c0 END))=((vt50.c0))) ASC;
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY x'' DESC, ((vt50.c0) NOT BETWEEN (LIKE(vt50.c0, vt50.c0, 'W')) AND (TRIM(DISTINCT vt50.c0, vt50.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY x'' DESC, ((vt50.c0) NOT BETWEEN (LIKE(vt50.c0, vt50.c0, 'W')) AND (TRIM(DISTINCT vt50.c0, vt50.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY x'' DESC, ((vt50.c0) NOT BETWEEN (LIKE(vt50.c0, vt50.c0, 'W')) AND (TRIM(DISTINCT vt50.c0, vt50.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50 ORDER BY x'' DESC, ((vt50.c0) NOT BETWEEN (LIKE(vt50.c0, vt50.c0, 'W')) AND (TRIM(DISTINCT vt50.c0, vt50.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0) ORDER BY x'' DESC, ((vt50.c0) NOT BETWEEN (LIKE(vt50.c0, vt50.c0, 'W')) AND (TRIM(DISTINCT vt50.c0, vt50.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt50 WHERE ((((vt50.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((vt50.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt50.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt50);
SELECT ALL COUNT(*) FROM vt50 WHERE ((((vt50.c0) IS FALSE) IN ()));
SELECT ALL * FROM vt50 CROSS JOIN rt1 ON ((LIKELY(vt50.c0)) NOT BETWEEN (vt50.c0) AND (NULLIF(DISTINCT rt1.c2, vt50.c0))) WHERE (((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))OR(CASE vt50.c0  WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c2 THEN vt50.c0 END))) ORDER BY ((((TRIM(DISTINCT rt1.c2))OR(rt1.c2)))OR('0.3982321406503678'));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))OR(CASE vt50.c0  WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c2 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((LIKELY(vt50.c0)) NOT BETWEEN (vt50.c0) AND (NULLIF(DISTINCT rt1.c2, vt50.c0))) ORDER BY ((((TRIM(DISTINCT rt1.c2))OR(rt1.c2)))OR('0.3982321406503678')));
SELECT ALL * FROM vt50 CROSS JOIN rt1 ON ((LIKELY(vt50.c0)) NOT BETWEEN (vt50.c0) AND (NULLIF(DISTINCT rt1.c2, vt50.c0))) WHERE (((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))OR(CASE vt50.c0  WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c2 THEN vt50.c0 END))) ORDER BY ((((TRIM(DISTINCT rt1.c2))OR(rt1.c2)))OR('0.3982321406503678'));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))OR(CASE vt50.c0  WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c2 THEN vt50.c0 END))) IS TRUE)  as count FROM vt50 CROSS JOIN rt1 ON ((LIKELY(vt50.c0)) NOT BETWEEN (vt50.c0) AND (NULLIF(DISTINCT rt1.c2, vt50.c0))) ORDER BY ((((TRIM(DISTINCT rt1.c2))OR(rt1.c2)))OR('0.3982321406503678')));
SELECT ALL * FROM vt50 CROSS JOIN rt1 ON ((LIKELY(vt50.c0)) NOT BETWEEN (vt50.c0) AND (NULLIF(DISTINCT rt1.c2, vt50.c0))) WHERE (((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))OR(CASE vt50.c0  WHEN vt50.c0 THEN rt1.c2 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c2 THEN vt50.c0 END))) ORDER BY ((((TRIM(DISTINCT rt1.c2))OR(rt1.c2)))OR('0.3982321406503678'));
SELECT ALL * FROM vt50 WHERE (((TRIM(DISTINCT vt50.c0, vt50.c0))&((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))))) ORDER BY LTRIM(RTRIM(vt50.c0), ((((1824065446)OR(vt50.c0)))AND(vt50.c0)))  NULLS FIRST, CAST(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt50.c0, vt50.c0))&((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))))) IS TRUE)  as count FROM vt50 ORDER BY LTRIM(RTRIM(vt50.c0), ((((1824065446)OR(vt50.c0)))AND(vt50.c0)))  NULLS FIRST, CAST(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt50 WHERE (((TRIM(DISTINCT vt50.c0, vt50.c0))&((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))))) ORDER BY LTRIM(RTRIM(vt50.c0), ((((1824065446)OR(vt50.c0)))AND(vt50.c0)))  NULLS FIRST, CAST(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt50.c0, vt50.c0))&((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))))) IS TRUE)  as count FROM vt50 ORDER BY LTRIM(RTRIM(vt50.c0), ((((1824065446)OR(vt50.c0)))AND(vt50.c0)))  NULLS FIRST, CAST(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt50 WHERE (((TRIM(DISTINCT vt50.c0, vt50.c0))&((((vt50.c0)) BETWEEN ((vt50.c0)) AND ((vt50.c0)))))) ORDER BY LTRIM(RTRIM(vt50.c0), ((((1824065446)OR(vt50.c0)))AND(vt50.c0)))  NULLS FIRST, CAST(((((((((((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)))OR(vt50.c0)))OR(vt50.c0)))AND(vt50.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt50 WHERE ((- ((((x''))<>((vt50.c0)))))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((x''))<>((vt50.c0)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM rt1, vt50 WHERE ((- ((((x''))<>((vt50.c0)))))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((x''))<>((vt50.c0)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM rt1, vt50 WHERE ((- ((((x''))<>((vt50.c0)))))) ORDER BY rt1.c2 ASC;
SELECT * FROM rt1, vt50 WHERE (-699257966 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-699257966 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (-699257966 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-699257966 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1, vt50 WHERE (-699257966 COLLATE BINARY);
SELECT ALL * FROM vt50 WHERE (NULL) ORDER BY ((LIKELIHOOD(DISTINCT vt50.c0, 0.2621157492298549))IS NOT((NOT (vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt50 ORDER BY ((LIKELIHOOD(DISTINCT vt50.c0, 0.2621157492298549))IS NOT((NOT (vt50.c0)))));
SELECT ALL * FROM vt50 WHERE (NULL) ORDER BY ((LIKELIHOOD(DISTINCT vt50.c0, 0.2621157492298549))IS NOT((NOT (vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt50 ORDER BY ((LIKELIHOOD(DISTINCT vt50.c0, 0.2621157492298549))IS NOT((NOT (vt50.c0)))));
SELECT ALL * FROM vt50 WHERE (NULL) ORDER BY ((LIKELIHOOD(DISTINCT vt50.c0, 0.2621157492298549))IS NOT((NOT (vt50.c0))));
SELECT COUNT(*) FROM rt1, vt50 WHERE ((-1719354205 IN ()) COLLATE NOCASE) ORDER BY ((x'afc2')>(((rt1.c2)==(rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1)%(rt1.c2)))||(CAST(vt50.c0 AS REAL)))  NULLS LAST, '1076607294' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1719354205 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((x'afc2')>(((rt1.c2)==(rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1)%(rt1.c2)))||(CAST(vt50.c0 AS REAL)))  NULLS LAST, '1076607294' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((-1719354205 IN ()) COLLATE NOCASE) ORDER BY ((x'afc2')>(((rt1.c2)==(rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1)%(rt1.c2)))||(CAST(vt50.c0 AS REAL)))  NULLS LAST, '1076607294' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((-1719354205 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((x'afc2')>(((rt1.c2)==(rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1)%(rt1.c2)))||(CAST(vt50.c0 AS REAL)))  NULLS LAST, '1076607294' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((-1719354205 IN ()) COLLATE NOCASE) ORDER BY ((x'afc2')>(((rt1.c2)==(rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1)%(rt1.c2)))||(CAST(vt50.c0 AS REAL)))  NULLS LAST, '1076607294' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt50 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY ((((vt50.c0) IS TRUE))OR(CAST(vt50.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((vt50.c0) IS TRUE))OR(CAST(vt50.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM rt1, vt50 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY ((((vt50.c0) IS TRUE))OR(CAST(vt50.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt50 ORDER BY ((((vt50.c0) IS TRUE))OR(CAST(vt50.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM rt1, vt50 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY ((((vt50.c0) IS TRUE))OR(CAST(vt50.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM vt50 WHERE (TYPEOF(DISTINCT ((vt50.c0)>=(vt50.c0)))) ORDER BY (((NULL IN ())) NOT BETWEEN (vt50.c0) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE x'' END))  NULLS LAST, ((((vt50.c0) NOT NULL)) BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) AND (CAST(x'' AS BLOB))), (((~ (vt50.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt50.c0)>=(vt50.c0)))) IS TRUE)  as count FROM vt50 ORDER BY (((NULL IN ())) NOT BETWEEN (vt50.c0) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE x'' END))  NULLS LAST, ((((vt50.c0) NOT NULL)) BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) AND (CAST(x'' AS BLOB))), (((~ (vt50.c0))) ISNULL));
SELECT ALL * FROM vt50 WHERE (TYPEOF(DISTINCT ((vt50.c0)>=(vt50.c0)))) ORDER BY (((NULL IN ())) NOT BETWEEN (vt50.c0) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE x'' END))  NULLS LAST, ((((vt50.c0) NOT NULL)) BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) AND (CAST(x'' AS BLOB))), (((~ (vt50.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt50.c0)>=(vt50.c0)))) IS TRUE)  as count FROM vt50 ORDER BY (((NULL IN ())) NOT BETWEEN (vt50.c0) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE x'' END))  NULLS LAST, ((((vt50.c0) NOT NULL)) BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) AND (CAST(x'' AS BLOB))), (((~ (vt50.c0))) ISNULL));
SELECT ALL * FROM vt50 WHERE (TYPEOF(DISTINCT ((vt50.c0)>=(vt50.c0)))) ORDER BY (((NULL IN ())) NOT BETWEEN (vt50.c0) AND (CASE vt50.c0  WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 WHEN vt50.c0 THEN vt50.c0 ELSE x'' END))  NULLS LAST, ((((vt50.c0) NOT NULL)) BETWEEN (((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))) AND (CAST(x'' AS BLOB))), (((~ (vt50.c0))) ISNULL);
SELECT * FROM rt1 NOT INDEXED, vt50 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (vt50.c0))) BETWEEN ((- (rt1.c2))) AND ((vt50.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (vt50.c0))) BETWEEN ((- (rt1.c2))) AND ((vt50.c0 IN ())))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1 NOT INDEXED, vt50 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (vt50.c0))) BETWEEN ((- (rt1.c2))) AND ((vt50.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (vt50.c0))) BETWEEN ((- (rt1.c2))) AND ((vt50.c0 IN ())))) IS TRUE)  as count FROM rt1, vt50);
SELECT * FROM rt1 NOT INDEXED, vt50 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (vt50.c0))) BETWEEN ((- (rt1.c2))) AND ((vt50.c0 IN ()))));
SELECT * FROM vt50 WHERE ((((vt50.c0)) NOT BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((x'')))) ORDER BY (+ (((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt50.c0)) NOT BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((x'')))) IS TRUE)  as count FROM vt50 ORDER BY (+ (((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))) ASC);
SELECT * FROM vt50 WHERE ((((vt50.c0)) NOT BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((x'')))) ORDER BY (+ (((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt50.c0)) NOT BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((x'')))) IS TRUE)  as count FROM vt50 ORDER BY (+ (((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))) ASC);
SELECT * FROM vt50 WHERE ((((vt50.c0)) NOT BETWEEN ((CAST(vt50.c0 AS REAL))) AND ((x'')))) ORDER BY (+ (((((vt50.c0)OR(vt50.c0)))OR(vt50.c0)))) ASC;
SELECT * FROM rt1 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ())) ORDER BY ((((((((rt1.c0)OR((+ (rt1.c2)))))AND((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS LAST, TRIM(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c2) ISNULL))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN '-1269637190' WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c1 END)GLOB(CAST(rt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c0)OR((+ (rt1.c2)))))AND((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS LAST, TRIM(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c2) ISNULL))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN '-1269637190' WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c1 END)GLOB(CAST(rt1.c1 AS REAL))));
SELECT * FROM rt1 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ())) ORDER BY ((((((((rt1.c0)OR((+ (rt1.c2)))))AND((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS LAST, TRIM(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c2) ISNULL))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN '-1269637190' WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c1 END)GLOB(CAST(rt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((((rt1.c0)OR((+ (rt1.c2)))))AND((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS LAST, TRIM(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c2) ISNULL))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN '-1269637190' WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c1 END)GLOB(CAST(rt1.c1 AS REAL))));
SELECT * FROM rt1 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ())) ORDER BY ((((((((rt1.c0)OR((+ (rt1.c2)))))AND((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS LAST, TRIM(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), ((rt1.c2) ISNULL))  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN '-1269637190' WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c1 END)GLOB(CAST(rt1.c1 AS REAL)));
SELECT ALL * FROM vt50 WHERE (CAST(CAST(vt50.c0 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt50.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (CAST(CAST(vt50.c0 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt50.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE (CAST(CAST(vt50.c0 AS INTEGER) AS INTEGER));
SELECT * FROM vt50, rt1 WHERE (INSTR(TRIM('	\n', rt1.c2), (((NULL))>=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((INSTR(TRIM('	\n', rt1.c2), (((NULL))>=((rt1.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (INSTR(TRIM('	\n', rt1.c2), (((NULL))>=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((INSTR(TRIM('	\n', rt1.c2), (((NULL))>=((rt1.c0))))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (INSTR(TRIM('	\n', rt1.c2), (((NULL))>=((rt1.c0)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON (CAST(vt50.c0 AS NUMERIC) IN ()) WHERE (((CASE WHEN vt50.c0 THEN rt1.c2 ELSE vt50.c0 END)!=((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt50.c0 THEN rt1.c2 ELSE vt50.c0 END)<>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON (CAST(vt50.c0 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON (CAST(vt50.c0 AS NUMERIC) IN ()) WHERE (((CASE WHEN vt50.c0 THEN rt1.c2 ELSE vt50.c0 END)!=((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt50.c0 THEN rt1.c2 ELSE vt50.c0 END)<>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON (CAST(vt50.c0 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON (CAST(vt50.c0 AS NUMERIC) IN ()) WHERE (((CASE WHEN vt50.c0 THEN rt1.c2 ELSE vt50.c0 END)!=((rt1.c1 IN ()))));
SELECT COUNT(*) FROM vt50 WHERE (((((((vt50.c0))>=((vt50.c0))), CAST(vt50.c0 AS REAL), ((vt50.c0)OR(vt50.c0))))<>((((vt50.c0)!=(vt50.c0)), ((vt50.c0) NOT NULL), vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt50.c0))>=((vt50.c0))), CAST(vt50.c0 AS REAL), ((vt50.c0)OR(vt50.c0))))<>((((vt50.c0)!=(vt50.c0)), ((vt50.c0) NOT NULL), vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((((vt50.c0))>=((vt50.c0))), CAST(vt50.c0 AS REAL), ((vt50.c0)OR(vt50.c0))))<>((((vt50.c0)!=(vt50.c0)), ((vt50.c0) NOT NULL), vt50.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt50.c0))>=((vt50.c0))), CAST(vt50.c0 AS REAL), ((vt50.c0)OR(vt50.c0))))<>((((vt50.c0)!=(vt50.c0)), ((vt50.c0) NOT NULL), vt50.c0)))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((((((vt50.c0))>=((vt50.c0))), CAST(vt50.c0 AS REAL), ((vt50.c0)OR(vt50.c0))))<>((((vt50.c0)!=(vt50.c0)), ((vt50.c0) NOT NULL), vt50.c0))));
SELECT COUNT(*) FROM vt50 WHERE (CASE ((vt50.c0)LIKE(vt50.c0))  WHEN TRIM(vt50.c0, vt50.c0) THEN LTRIM(vt50.c0, vt50.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)LIKE(vt50.c0))  WHEN TRIM(vt50.c0, vt50.c0) THEN LTRIM(vt50.c0, vt50.c0) END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE ((vt50.c0)LIKE(vt50.c0))  WHEN TRIM(vt50.c0, vt50.c0) THEN LTRIM(vt50.c0, vt50.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt50.c0)LIKE(vt50.c0))  WHEN TRIM(vt50.c0, vt50.c0) THEN LTRIM(vt50.c0, vt50.c0) END) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (CASE ((vt50.c0)LIKE(vt50.c0))  WHEN TRIM(vt50.c0, vt50.c0) THEN LTRIM(vt50.c0, vt50.c0) END);
SELECT * FROM rt1 WHERE (((((((((CAST(rt1.c2 AS NUMERIC))AND(((rt1.c0) IS TRUE))))OR((((('')AND(rt1.c2)))OR(rt1.c2)))))OR(((rt1.c2)=(rt1.c0)))))OR(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c2 AS NUMERIC))AND(((rt1.c0) IS TRUE))))OR((((('')AND(rt1.c2)))OR(rt1.c2)))))OR(((rt1.c2)=(rt1.c0)))))OR(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((CAST(rt1.c2 AS NUMERIC))AND(((rt1.c0) IS TRUE))))OR((((('')AND(rt1.c2)))OR(rt1.c2)))))OR(((rt1.c2)=(rt1.c0)))))OR(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c2 AS NUMERIC))AND(((rt1.c0) IS TRUE))))OR((((('')AND(rt1.c2)))OR(rt1.c2)))))OR(((rt1.c2)=(rt1.c0)))))OR(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((((CAST(rt1.c2 AS NUMERIC))AND(((rt1.c0) IS TRUE))))OR((((('')AND(rt1.c2)))OR(rt1.c2)))))OR(((rt1.c2)=(rt1.c0)))))OR(rt1.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT * FROM rt1, vt50 WHERE (rt1.c0) ORDER BY CASE WHEN UNLIKELY(rt1.c2) THEN ((rt1.c0)*(rt1.c0)) ELSE (~ (rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN UNLIKELY(rt1.c2) THEN ((rt1.c0)*(rt1.c0)) ELSE (~ (rt1.c0)) END DESC);
SELECT * FROM rt1, vt50 WHERE (rt1.c0) ORDER BY CASE WHEN UNLIKELY(rt1.c2) THEN ((rt1.c0)*(rt1.c0)) ELSE (~ (rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN UNLIKELY(rt1.c2) THEN ((rt1.c0)*(rt1.c0)) ELSE (~ (rt1.c0)) END DESC);
SELECT * FROM rt1, vt50 WHERE (rt1.c0) ORDER BY CASE WHEN UNLIKELY(rt1.c2) THEN ((rt1.c0)*(rt1.c0)) ELSE (~ (rt1.c0)) END DESC;
SELECT COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt50);
SELECT COUNT(*) FROM rt1, vt50 WHERE (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)IS NOT(NULL))) NOT NULL)) ORDER BY (- (((NULL) NOT BETWEEN (vt50.c0) AND (vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)IS NOT(NULL))) NOT NULL)) IS TRUE)  as count FROM vt50 ORDER BY (- (((NULL) NOT BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)IS NOT(NULL))) NOT NULL)) ORDER BY (- (((NULL) NOT BETWEEN (vt50.c0) AND (vt50.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt50.c0)IS NOT(NULL))) NOT NULL)) IS TRUE)  as count FROM vt50 ORDER BY (- (((NULL) NOT BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT COUNT(*) FROM vt50 WHERE (((((vt50.c0)IS NOT(NULL))) NOT NULL)) ORDER BY (- (((NULL) NOT BETWEEN (vt50.c0) AND (vt50.c0))));
SELECT COUNT(*) FROM vt50 WHERE (((NULL)-(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)-(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((NULL)-(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)-(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0))))) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (((NULL)-(((vt50.c0) BETWEEN (vt50.c0) AND (vt50.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-111204526')|(((NULL) IS FALSE)))) ORDER BY CAST(rt1.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-111204526')|(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS REAL) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-111204526')|(((NULL) IS FALSE)))) ORDER BY CAST(rt1.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-111204526')|(((NULL) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS REAL) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-111204526')|(((NULL) IS FALSE)))) ORDER BY CAST(rt1.c0 AS REAL) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(vt50.c0))) BETWEEN ((('')&(vt50.c0))) AND (((((vt50.c0)AND(rt1.c0)))OR(rt1.c1))))) ORDER BY CASE WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (0.3777604380916295)) THEN (rt1.c1 IN (rt1.c2)) ELSE (rt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c2)))OR(vt50.c0))) BETWEEN ((('')&(vt50.c0))) AND (((((vt50.c0)AND(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (0.3777604380916295)) THEN (rt1.c1 IN (rt1.c2)) ELSE (rt1.c0 IN ()) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(vt50.c0))) BETWEEN ((('')&(vt50.c0))) AND (((((vt50.c0)AND(rt1.c0)))OR(rt1.c1))))) ORDER BY CASE WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (0.3777604380916295)) THEN (rt1.c1 IN (rt1.c2)) ELSE (rt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c2)))OR(vt50.c0))) BETWEEN ((('')&(vt50.c0))) AND (((((vt50.c0)AND(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY CASE WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (0.3777604380916295)) THEN (rt1.c1 IN (rt1.c2)) ELSE (rt1.c0 IN ()) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt50 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(vt50.c0))) BETWEEN ((('')&(vt50.c0))) AND (((((vt50.c0)AND(rt1.c0)))OR(rt1.c1))))) ORDER BY CASE WHEN ((vt50.c0) BETWEEN (vt50.c0) AND (0.3777604380916295)) THEN (rt1.c1 IN (rt1.c2)) ELSE (rt1.c0 IN ()) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON ((((rt1.c1) NOT NULL)) IS TRUE) WHERE (((((((rt1.c0)==(rt1.c2)))AND(CASE WHEN x'528b' THEN -1528707600 END)))OR(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)==(rt1.c2)))AND(CASE WHEN x'528b' THEN -1528707600 END)))OR(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON ((((rt1.c1) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON ((((rt1.c1) NOT NULL)) IS TRUE) WHERE (((((((rt1.c0)==(rt1.c2)))AND(CASE WHEN x'528b' THEN -1528707600 END)))OR(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)==(rt1.c2)))AND(CASE WHEN x'528b' THEN -1528707600 END)))OR(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt50 ON ((((rt1.c1) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt50 ON ((((rt1.c1) NOT NULL)) IS TRUE) WHERE (((((((rt1.c0)==(rt1.c2)))AND(CASE WHEN x'528b' THEN -1528707600 END)))OR(CAST(rt1.c1 AS REAL))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt50 ON CAST('2112109045' AS TEXT) WHERE (GLOB((('452519022') NOT NULL), ((rt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((GLOB((('452519022') NOT NULL), ((rt1.c0) NOTNULL))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON CAST('2112109045' AS TEXT));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt50 ON CAST('2112109045' AS TEXT) WHERE (GLOB((('452519022') NOT NULL), ((rt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((GLOB((('452519022') NOT NULL), ((rt1.c0) NOTNULL))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt50 ON CAST('2112109045' AS TEXT));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt50 ON CAST('2112109045' AS TEXT) WHERE (GLOB((('452519022') NOT NULL), ((rt1.c0) NOTNULL)));
SELECT * FROM rt1 WHERE (((((x'c331') NOTNULL))GLOB(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c331') NOTNULL))GLOB(CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((x'c331') NOTNULL))GLOB(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c331') NOTNULL))GLOB(CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((x'c331') NOTNULL))GLOB(CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON (((vt50.c0)) BETWEEN ((LOWER('㥯-'))) AND ((((((vt50.c0)AND(0.5299259406213338)))AND(rt1.c0))))) WHERE (vt50.c0) ORDER BY 0.5339634711704045;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON (((vt50.c0)) BETWEEN ((LOWER('㥯-'))) AND ((((((vt50.c0)AND(0.5299259406213338)))AND(rt1.c0))))) ORDER BY 0.5339634711704045);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON (((vt50.c0)) BETWEEN ((LOWER('㥯-'))) AND ((((((vt50.c0)AND(0.5299259406213338)))AND(rt1.c0))))) WHERE (vt50.c0) ORDER BY 0.5339634711704045;
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt50 ON (((vt50.c0)) BETWEEN ((LOWER('㥯-'))) AND ((((((vt50.c0)AND(0.5299259406213338)))AND(rt1.c0))))) ORDER BY 0.5339634711704045);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt50 ON (((vt50.c0)) BETWEEN ((LOWER('㥯-'))) AND ((((((vt50.c0)AND(0.5299259406213338)))AND(rt1.c0))))) WHERE (vt50.c0) ORDER BY 0.5339634711704045;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL)) ORDER BY ((SQLITE_VERSION())<<(rt1.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((SQLITE_VERSION())<<(rt1.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL)) ORDER BY ((SQLITE_VERSION())<<(rt1.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((SQLITE_VERSION())<<(rt1.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL)) ORDER BY ((SQLITE_VERSION())<<(rt1.c1 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM rt1, vt50 WHERE ((((334716638))=((rt1.c0)))) ORDER BY (NOT (vt50.c0));
SELECT SUM(count) FROM (SELECT ALL (((((334716638))=((rt1.c0)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (NOT (vt50.c0)));
SELECT ALL * FROM rt1, vt50 WHERE ((((334716638))=((rt1.c0)))) ORDER BY (NOT (vt50.c0));
SELECT SUM(count) FROM (SELECT ALL (((((334716638))=((rt1.c0)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (NOT (vt50.c0)));
SELECT ALL * FROM rt1, vt50 WHERE ((((334716638))=((rt1.c0)))) ORDER BY (NOT (vt50.c0));
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) IS FALSE)))>=((((vt50.c0) NOTNULL))))) ORDER BY vt50.c0;
SELECT SUM(count) FROM (SELECT (((((((vt50.c0) IS FALSE)))>=((((vt50.c0) NOTNULL))))) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) IS FALSE)))>=((((vt50.c0) NOTNULL))))) ORDER BY vt50.c0;
SELECT SUM(count) FROM (SELECT (((((((vt50.c0) IS FALSE)))>=((((vt50.c0) NOTNULL))))) IS TRUE)  as count FROM vt50 ORDER BY vt50.c0);
SELECT COUNT(*) FROM vt50 WHERE ((((((vt50.c0) IS FALSE)))>=((((vt50.c0) NOTNULL))))) ORDER BY vt50.c0;
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0);
SELECT SUM(count) FROM (SELECT ((vt50.c0) IS TRUE)  as count FROM vt50);
SELECT COUNT(*) FROM vt50 WHERE (vt50.c0);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((+ (x''))) BETWEEN ((~ (NULL))) AND (((0x71865bec) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) BETWEEN ((~ (NULL))) AND (((0X71865bec) ISNULL)))) IS TRUE)  as count FROM vt50 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((+ (x''))) BETWEEN ((~ (NULL))) AND (((0x71865bec) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) BETWEEN ((~ (NULL))) AND (((0X71865bec) ISNULL)))) IS TRUE)  as count FROM vt50 NOT INDEXED, rt1);
SELECT COUNT(*) FROM vt50, rt1 WHERE ((((+ (x''))) BETWEEN ((~ (NULL))) AND (((0x71865bec) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))<>(CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY LIKE('-1828377460', ((rt1.c2)<<(rt1.c1)), '7') ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))!=(CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY LIKE('-1828377460', ((rt1.c2)<<(rt1.c1)), '7') ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))<>(CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY LIKE('-1828377460', ((rt1.c2)<<(rt1.c1)), '7') ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))!=(CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY LIKE('-1828377460', ((rt1.c2)<<(rt1.c1)), '7') ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1 IN ()))<>(CASE rt1.c2  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY LIKE('-1828377460', ((rt1.c2)<<(rt1.c1)), '7') ASC;
SELECT ALL * FROM vt50 WHERE ((((vt50.c0))<(((vt50.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt50.c0))<(((vt50.c0 IN ()))))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0))<(((vt50.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt50.c0))<(((vt50.c0 IN ()))))) IS TRUE)  as count FROM vt50);
SELECT ALL * FROM vt50 WHERE ((((vt50.c0))<(((vt50.c0 IN ())))));
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c1) ORDER BY 1.725958982E9 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt50, rt1 ORDER BY 1.725958982E9 COLLATE NOCASE);
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c1) ORDER BY 1.725958982E9 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt50, rt1 ORDER BY 1.725958982E9 COLLATE NOCASE);
SELECT COUNT(*) FROM vt50, rt1 WHERE (rt1.c1) ORDER BY 1.725958982E9 COLLATE NOCASE;
SELECT COUNT(*) FROM rt1, vt50 WHERE ((+ (((vt50.c0) NOTNULL)))) ORDER BY 3.67115998E8 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt50.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY 3.67115998E8 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((+ (((vt50.c0) NOTNULL)))) ORDER BY 3.67115998E8 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt50.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt50 ORDER BY 3.67115998E8 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((+ (((vt50.c0) NOTNULL)))) ORDER BY 3.67115998E8 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50 WHERE ((- (UPPER(vt50.c0)))) ORDER BY ((x'')OR(vt50.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(vt50.c0)))) IS TRUE)  as count FROM vt50 ORDER BY ((x'')OR(vt50.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE ((- (UPPER(vt50.c0)))) ORDER BY ((x'')OR(vt50.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (UPPER(vt50.c0)))) IS TRUE)  as count FROM vt50 ORDER BY ((x'')OR(vt50.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE ((- (UPPER(vt50.c0)))) ORDER BY ((x'')OR(vt50.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt50 WHERE ((TIME(vt50.c0, vt50.c0, vt50.c0, vt50.c0, '-2097754114') IN ())) ORDER BY (vt50.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TIME(vt50.c0, vt50.c0, vt50.c0, vt50.c0, '-2097754114') IN ())) IS TRUE)  as count FROM vt50 ORDER BY (vt50.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE ((TIME(vt50.c0, vt50.c0, vt50.c0, vt50.c0, '-2097754114') IN ())) ORDER BY (vt50.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TIME(vt50.c0, vt50.c0, vt50.c0, vt50.c0, '-2097754114') IN ())) IS TRUE)  as count FROM vt50 ORDER BY (vt50.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt50 WHERE ((TIME(vt50.c0, vt50.c0, vt50.c0, vt50.c0, '-2097754114') IN ())) ORDER BY (vt50.c0 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt50 NOT INDEXED, rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN ('PMz''') AND ('')));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) BETWEEN ('PMz''') AND (''))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50 NOT INDEXED, rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN ('PMz''') AND ('')));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) BETWEEN ('PMz''') AND (''))) IS TRUE)  as count FROM vt50, rt1);
SELECT COUNT(*) FROM vt50 NOT INDEXED, rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN ('PMz''') AND ('')));
SELECT ALL * FROM rt1 WHERE (RTRIM((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((rt1.c0 IN ()))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (RTRIM((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((rt1.c0 IN ()))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (RTRIM((rt1.c0 IN ())));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()));
SELECT ALL * FROM vt50, rt1 WHERE (((((GLOB(rt1.c2, vt50.c0))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(x''))) ORDER BY CAST((rt1.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((GLOB(rt1.c2, vt50.c0))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(x''))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST((rt1.c2 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM vt50, rt1 WHERE (((((GLOB(rt1.c2, vt50.c0))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(x''))) ORDER BY CAST((rt1.c2 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((GLOB(rt1.c2, vt50.c0))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(x''))) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST((rt1.c2 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM vt50, rt1 WHERE (((((GLOB(rt1.c2, vt50.c0))OR(((NULL) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(x''))) ORDER BY CAST((rt1.c2 IN ()) AS NUMERIC) DESC;
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))) ORDER BY (((rt1.c1 IN ()))<(((rt1.c2) IS TRUE))) DESC  NULLS LAST, ((vt50.c0) BETWEEN (LIKELIHOOD(rt1.c2, 0.7233269996791603)) AND (((rt1.c0)/(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1 IN ()))<(((rt1.c2) IS TRUE))) DESC  NULLS LAST, ((vt50.c0) BETWEEN (LIKELIHOOD(rt1.c2, 0.7233269996791603)) AND (((rt1.c0)/(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))) ORDER BY (((rt1.c1 IN ()))<(((rt1.c2) IS TRUE))) DESC  NULLS LAST, ((vt50.c0) BETWEEN (LIKELIHOOD(rt1.c2, 0.7233269996791603)) AND (((rt1.c0)/(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1 IN ()))<(((rt1.c2) IS TRUE))) DESC  NULLS LAST, ((vt50.c0) BETWEEN (LIKELIHOOD(rt1.c2, 0.7233269996791603)) AND (((rt1.c0)/(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt50 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))))) ORDER BY (((rt1.c1 IN ()))<(((rt1.c2) IS TRUE))) DESC  NULLS LAST, ((vt50.c0) BETWEEN (LIKELIHOOD(rt1.c2, 0.7233269996791603)) AND (((rt1.c0)/(rt1.c2))))  NULLS FIRST;
SELECT * FROM vt50, rt1 WHERE (SQLITE_COMPILEOPTION_USED((rt1.c1 IN ()))) ORDER BY ((json_type(rt1.c1)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((rt1.c1 IN ()))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((json_type(rt1.c1)) ISNULL)  NULLS FIRST);
SELECT * FROM vt50, rt1 WHERE (SQLITE_COMPILEOPTION_USED((rt1.c1 IN ()))) ORDER BY ((json_type(rt1.c1)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((rt1.c1 IN ()))) IS TRUE)  as count FROM vt50, rt1 ORDER BY ((json_type(rt1.c1)) ISNULL)  NULLS FIRST);
SELECT * FROM vt50, rt1 WHERE (SQLITE_COMPILEOPTION_USED((rt1.c1 IN ()))) ORDER BY ((json_type(rt1.c1)) ISNULL)  NULLS FIRST;
SELECT * FROM rt1 NOT INDEXED, vt50 WHERE (((((((vt50.c0)OR(rt1.c2)))OR(vt50.c0))) ISNULL)) ORDER BY (((rt1.c1) NOT NULL) IN (UPPER(rt1.c1), ((rt1.c1)LIKE(rt1.c2)))) DESC, rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt50.c0)OR(rt1.c2)))OR(vt50.c0))) ISNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1) NOT NULL) IN (UPPER(rt1.c1), ((rt1.c1)LIKE(rt1.c2)))) DESC, rt1.c2 ASC  NULLS FIRST);
SELECT * FROM rt1 NOT INDEXED, vt50 WHERE (((((((vt50.c0)OR(rt1.c2)))OR(vt50.c0))) ISNULL)) ORDER BY (((rt1.c1) NOT NULL) IN (UPPER(rt1.c1), ((rt1.c1)LIKE(rt1.c2)))) DESC, rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt50.c0)OR(rt1.c2)))OR(vt50.c0))) ISNULL)) IS TRUE)  as count FROM rt1, vt50 ORDER BY (((rt1.c1) NOT NULL) IN (UPPER(rt1.c1), ((rt1.c1)LIKE(rt1.c2)))) DESC, rt1.c2 ASC  NULLS FIRST);
SELECT * FROM rt1 NOT INDEXED, vt50 WHERE (((((((vt50.c0)OR(rt1.c2)))OR(vt50.c0))) ISNULL)) ORDER BY (((rt1.c1) NOT NULL) IN (UPPER(rt1.c1), ((rt1.c1)LIKE(rt1.c2)))) DESC, rt1.c2 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((LOWER(DISTINCT rt1.c0)) IS TRUE)) ORDER BY (((rt1.c1)) BETWEEN ((CAST(-20292715 AS REAL))) AND ((rt1.c2)))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 END)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE BINARY)))OR((rt1.c1 IN ()))))AND(x'')) DESC, ((((rt1.c0) NOTNULL))&(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt1.c0)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((CAST(-20292715 AS REAL))) AND ((rt1.c2)))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 END)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE BINARY)))OR((rt1.c1 IN ()))))AND(x'')) DESC, ((((rt1.c0) NOTNULL))&(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((LOWER(DISTINCT rt1.c0)) IS TRUE)) ORDER BY (((rt1.c1)) BETWEEN ((CAST(-20292715 AS REAL))) AND ((rt1.c2)))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 END)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE BINARY)))OR((rt1.c1 IN ()))))AND(x'')) DESC, ((((rt1.c0) NOTNULL))&(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt1.c0)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((CAST(-20292715 AS REAL))) AND ((rt1.c2)))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 END)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE BINARY)))OR((rt1.c1 IN ()))))AND(x'')) DESC, ((((rt1.c0) NOTNULL))&(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((LOWER(DISTINCT rt1.c0)) IS TRUE)) ORDER BY (((rt1.c1)) BETWEEN ((CAST(-20292715 AS REAL))) AND ((rt1.c2)))  NULLS FIRST, ((((((((CASE WHEN rt1.c2 THEN rt1.c0 END)OR(rt1.c0 COLLATE RTRIM)))OR(rt1.c2 COLLATE BINARY)))OR((rt1.c1 IN ()))))AND(x'')) DESC, ((((rt1.c0) NOTNULL))&(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (UPPER(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (UPPER(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (UPPER(DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END));
SELECT * FROM vt50, rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST(rt1.c2 AS REAL) DESC);
SELECT * FROM vt50, rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt50, rt1 ORDER BY CAST(rt1.c2 AS REAL) DESC);
SELECT * FROM vt50, rt1 WHERE (rt1.c1) ORDER BY CAST(rt1.c2 AS REAL) DESC;
SELECT * FROM vt50, rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))OR(1740212215)))AND(HEX(-9.08994001E8))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))OR(1740212215)))AND(HEX(-9.08994001E8)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))OR(1740212215)))AND(HEX(-9.08994001E8))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))OR(1740212215)))AND(HEX(-9.08994001E8)))) IS TRUE)  as count FROM vt50, rt1);
SELECT * FROM vt50, rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))OR(1740212215)))AND(HEX(-9.08994001E8))));
