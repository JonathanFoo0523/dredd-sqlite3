-- Time: 2024/06/10 14:24:51
-- Database: database33
-- Database version: 3.40.0
-- seed value: 519391233
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 3ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1, detail=column); -- 1ms;
UPDATE vt1 SET (c1)=(x'') WHERE CAST(-847767873 AS TEXT); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('#4'); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 0ms;
PRAGMA main.recursive_triggers = false; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 1ms;
UPDATE vt0 SET (c0)=(']靁_(I6⊸H') WHERE ((((vt0.c1) NOTNULL)) IS TRUE); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.6334877516947238; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
CREATE TABLE t0 (c0 REAL ); -- 1ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
CREATE UNIQUE INDEX i48 ON t0(((((c0)IS NOT(c0))) NOT BETWEEN (COALESCE(DISTINCT c0, '-PgrqpU')) AND ((c0 IN (c0)))) COLLATE RTRIM ASC); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
PRAGMA cache_spill = 9075539390991761202; -- 0ms;
UPDATE vt0 SET c1='-2113330504', c1=0.49361112541769425 WHERE vt0.c1; -- 0ms;
DROP INDEX "i48"; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i55 ON t0('0.49361112541769425') WHERE ((c0) BETWEEN (c0) AND (c0)) COLLATE NOCASE; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i1 ON t0(((NULLIF(DISTINCT c0, NULL))OR((((c0)) NOT BETWEEN ((c0)) AND ((c0))))) DESC) WHERE TYPEOF(DISTINCT ((c0)AND(c0))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
DELETE FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN ()); -- 0ms;
UPDATE vt0 SET (c0)=(0.7711980463113627) WHERE ((((((vt0.c0) IS FALSE))AND(((vt0.c1) IS TRUE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))); -- 0ms;
DROP TABLE IF EXISTS vt1; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
PRAGMA locking_mode; -- 0ms;
ANALYZE i1; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
REINDEX; -- 1ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1'); -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
REINDEX; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
PRAGMA temp.busy_timeout = 0; -- 1ms;
ALTER TABLE t0 ADD COLUMN c65 REAL; -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (+ (ABS(t0.c0))) FROM t0, vt0 WHERE (CHANGES()); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c90; -- 1ms;
PRAGMA cache_spill; -- 0ms;
CREATE UNIQUE INDEX i30 ON t0(CASE ((c65) IS TRUE)  WHEN c65 THEN (((c65))>((c90))) ELSE x'' END,((((c65)&(c65)))OR((((('-847767873')AND(c65)))OR(c65)))) COLLATE BINARY DESC) WHERE ((((CASE c65  WHEN c90 THEN NULL ELSE c90 END)OR(((c90)/(0.010126332796646986)))))AND(CAST(c90 AS TEXT))); -- 0ms;
UPDATE OR REPLACE t0 SET c90=NULL; -- 0ms;
UPDATE t0 SET c90=x'f4dc' WHERE (NOT ((- (t0.c65)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
ANALYZE i30; -- 0ms;
REINDEX i1; -- 0ms;
UPDATE vt0 SET (c1)=('') WHERE ((vt0.c1 COLLATE NOCASE) IS TRUE); -- 0ms;
END; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-2113330504,6');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c69 INTEGER; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2109761727,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44242'); -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE OF c0, c0, c0 ON v0 WHEN UPPER(DISTINCT (v0.c0 IN ())) BEGIN DELETE FROM t0;END; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET c90=']靁_(i6⊸h', c65=NULL WHERE ((((((t0.c65)AND(t0.c69)))AND(t0.c90)))<(((x'c048')>=(t0.c90)))); -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE ((TIME('-847767873', rt0.c1, rt0.c1))>=(((rt0.c2) IS FALSE))); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET (c65, c69)=(NULL, 0.011574415303746699) WHERE (((t0.c90) BETWEEN (t0.c90) AND ('-2113330504')) IN ()); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='' WHERE ((((rt0.c2)<(rt0.c1)))*(CAST(rt0.c2 AS BLOB))); -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0, vt0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))LIKE(('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))LIKE(('' IN ())))) IS TRUE)  as count FROM t0, vt1, rt0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0, vt0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))LIKE(('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))LIKE(('' IN ())))) IS TRUE)  as count FROM t0, vt1, rt0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, v0, vt0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))LIKE(('' IN ()))));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CASE WHEN CASE t0.c69  WHEN vt0.c1 THEN t0.c90 END THEN (((t0.c69)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) ELSE ((t0.c69)!=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c69  WHEN vt0.c1 THEN t0.c90 END THEN (((t0.c69)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) ELSE ((t0.c69)!=(rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CASE WHEN CASE t0.c69  WHEN vt0.c1 THEN t0.c90 END THEN (((t0.c69)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) ELSE ((t0.c69)!=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c69  WHEN vt0.c1 THEN t0.c90 END THEN (((t0.c69)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) ELSE ((t0.c69)!=(rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (CASE WHEN CASE t0.c69  WHEN vt0.c1 THEN t0.c90 END THEN (((t0.c69)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) ELSE ((t0.c69)!=(rt0.c0)) END);
SELECT COUNT(*) FROM t0, rt0, v0 WHERE ((((t0.c90 COLLATE BINARY))>=((x'8d49'))));
SELECT SUM(count) FROM (SELECT (((((t0.c90 COLLATE BINARY))>=((x'8d49')))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT COUNT(*) FROM t0, rt0, v0 WHERE ((((t0.c90 COLLATE BINARY))>=((x'8d49'))));
SELECT SUM(count) FROM (SELECT (((((t0.c90 COLLATE BINARY))>=((x'8d49')))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT COUNT(*) FROM t0, rt0, v0 WHERE ((((t0.c90 COLLATE BINARY))>=((x'8d49'))));
SELECT ALL * FROM rt0, vt1 WHERE ((~ (0.5403061728999295))) ORDER BY ((rt0.c1) ISNULL) ASC  NULLS LAST, ((((NULL)>=(rt0.c2)))&((rt0.c2 IN ()))) ASC, ((LIKE(vt1.c0, vt1.c0, 'w')) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((~ (0.5403061728999295))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1) ISNULL) ASC  NULLS LAST, ((((NULL)>=(rt0.c2)))&((rt0.c2 IN ()))) ASC, ((LIKE(vt1.c0, vt1.c0, 'w')) IS TRUE));
SELECT ALL * FROM rt0, vt1 WHERE ((~ (0.5403061728999295))) ORDER BY ((rt0.c1) ISNULL) ASC  NULLS LAST, ((((NULL)>=(rt0.c2)))&((rt0.c2 IN ()))) ASC, ((LIKE(vt1.c0, vt1.c0, 'w')) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((~ (0.5403061728999295))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1) ISNULL) ASC  NULLS LAST, ((((NULL)>=(rt0.c2)))&((rt0.c2 IN ()))) ASC, ((LIKE(vt1.c0, vt1.c0, 'w')) IS TRUE));
SELECT ALL * FROM rt0, vt1 WHERE ((~ (0.5403061728999295))) ORDER BY ((rt0.c1) ISNULL) ASC  NULLS LAST, ((((NULL)>=(rt0.c2)))&((rt0.c2 IN ()))) ASC, ((LIKE(vt1.c0, vt1.c0, 'w')) IS TRUE);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(COALESCE(v0.c0, v0.c0) AS INTEGER) WHERE ((+ ((+ (0.49361112541769425))))) ORDER BY ((((vt0.c0)>=(v0.c0)))-((((v0.c0))=((vt0.c1))))) DESC  NULLS FIRST, x'd52e' DESC;
SELECT SUM(count) FROM (SELECT (((+ ((+ (0.49361112541769425))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(COALESCE(v0.c0, v0.c0) AS INTEGER) ORDER BY ((((vt0.c0)>=(v0.c0)))-((((v0.c0))==((vt0.c1))))) DESC  NULLS FIRST, x'd52e' DESC);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(COALESCE(v0.c0, v0.c0) AS INTEGER) WHERE ((+ ((+ (0.49361112541769425))))) ORDER BY ((((vt0.c0)>=(v0.c0)))-((((v0.c0))=((vt0.c1))))) DESC  NULLS FIRST, x'd52e' DESC;
SELECT SUM(count) FROM (SELECT (((+ ((+ (0.49361112541769425))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(COALESCE(v0.c0, v0.c0) AS INTEGER) ORDER BY ((((vt0.c0)>=(v0.c0)))-((((v0.c0))==((vt0.c1))))) DESC  NULLS FIRST, x'd52e' DESC);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CAST(COALESCE(v0.c0, v0.c0) AS INTEGER) WHERE ((+ ((+ (0.49361112541769425))))) ORDER BY ((((vt0.c0)>=(v0.c0)))-((((v0.c0))=((vt0.c1))))) DESC  NULLS FIRST, x'd52e' DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))OR((x'' IN (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c1)>=(vt0.c0)))))AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c1)))OR((x'' IN (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c1)>=(vt0.c0)))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))OR((x'' IN (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c1)>=(vt0.c0)))))AND((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c1)))OR((x'' IN (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c1)>=(vt0.c0)))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))OR((x'' IN (vt0.c0)))))AND(((vt0.c0) ISNULL))))AND(((vt0.c1)>=(vt0.c0)))))AND((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(CAST('0.6334877516947238' AS BLOB) AS REAL)) ORDER BY ((vt0.c1 IN ()) IN ()), CAST(x'66f7' AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('0.6334877516947238' AS BLOB) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((vt0.c1 IN ()) IN ()), CAST(x'66f7' AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(CAST('0.6334877516947238' AS BLOB) AS REAL)) ORDER BY ((vt0.c1 IN ()) IN ()), CAST(x'66f7' AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('0.6334877516947238' AS BLOB) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((vt0.c1 IN ()) IN ()), CAST(x'66f7' AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CAST(CAST('0.6334877516947238' AS BLOB) AS REAL)) ORDER BY ((vt0.c1 IN ()) IN ()), CAST(x'66f7' AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c1) ISNULL)))<((TRIM(DISTINCT rt0.c2, t0.c69)))) WHERE ((((rt0.c1)|(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(rt0.c1)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt0 ON (((((rt0.c1) ISNULL)))<((TRIM(DISTINCT rt0.c2, t0.c69)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c1) ISNULL)))<((TRIM(DISTINCT rt0.c2, t0.c69)))) WHERE ((((rt0.c1)|(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(rt0.c1)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt0 ON (((((rt0.c1) ISNULL)))<((TRIM(DISTINCT rt0.c2, t0.c69)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c1) ISNULL)))<((TRIM(DISTINCT rt0.c2, t0.c69)))) WHERE ((((rt0.c1)|(rt0.c1)) IN ()));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN t0 ON ((t0.c69) NOT NULL) COLLATE RTRIM INNER JOIN vt0 ON NULL WHERE (((vt0.c0 COLLATE BINARY)=(((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)==(((NULL) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON ((t0.c69) NOT NULL) COLLATE RTRIM INNER JOIN vt0 ON NULL);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN t0 ON ((t0.c69) NOT NULL) COLLATE RTRIM INNER JOIN vt0 ON NULL WHERE (((vt0.c0 COLLATE BINARY)=(((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)==(((NULL) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON ((t0.c69) NOT NULL) COLLATE RTRIM INNER JOIN vt0 ON NULL);
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN t0 ON ((t0.c69) NOT NULL) COLLATE RTRIM INNER JOIN vt0 ON NULL WHERE (((vt0.c0 COLLATE BINARY)=(((NULL) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array_length((vt0.c1 IN ()), ((vt0.c0)LIKE(vt0.c1)))) ORDER BY ABS(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length((vt0.c1 IN ()), ((vt0.c0)LIKE(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array_length((vt0.c1 IN ()), ((vt0.c0)LIKE(vt0.c1)))) ORDER BY ABS(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length((vt0.c1 IN ()), ((vt0.c0)LIKE(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array_length((vt0.c1 IN ()), ((vt0.c0)LIKE(vt0.c1)))) ORDER BY ABS(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'' COLLATE NOCASE);
SELECT * FROM vt0, rt0, v0 FULL OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))) WHERE (((LIKELY(DISTINCT x'')) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT x'')) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, v0 FULL OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))));
SELECT * FROM vt0, rt0, v0 FULL OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))) WHERE (((LIKELY(DISTINCT x'')) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT x'')) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, v0 FULL OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))));
SELECT * FROM vt0, rt0, v0 FULL OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))) WHERE (((LIKELY(DISTINCT x'')) IS TRUE));
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN rt0 ON (((TRIM(DISTINCT t0.c90)))==((CASE WHEN v0.c0 THEN v0.c0 END))) RIGHT OUTER JOIN vt0 ON HEX(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c69))) LEFT OUTER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN t0.c65 WHEN 0.18582844396337106 THEN v0.c0 WHEN t0.c90 THEN rt0.c0 ELSE vt0.c1 END  WHEN ABS(DISTINCT rt0.c2) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE (t0.c65 IN (vt1.c0)) END WHERE (((((NULL)OR((- (vt0.c0)))))AND(-2113330504))) ORDER BY CASE (((1194506027, t0.c90, vt1.c0, '왂3U', rt0.c2))>=((rt0.c0, vt0.c1, NULL, x'', rt0.c1)))  WHEN (((vt0.c1, rt0.c1, v0.c0, NULL, vt1.c0))<((rt0.c1, v0.c0, rt0.c2, 1241137592, vt0.c1))) THEN ((rt0.c1) IS TRUE) END ASC, CAST(((0.7711980463113627)OR(t0.c65)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR((- (vt0.c0)))))AND(-2113330504))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN rt0 ON (((TRIM(DISTINCT t0.c90)))=((CASE WHEN v0.c0 THEN v0.c0 END))) RIGHT OUTER JOIN vt0 ON HEX(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c69))) LEFT OUTER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN t0.c65 WHEN 0.18582844396337106 THEN v0.c0 WHEN t0.c90 THEN rt0.c0 ELSE vt0.c1 END  WHEN ABS(DISTINCT rt0.c2) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE (t0.c65 IN (vt1.c0)) END ORDER BY CASE (((1194506027, t0.c90, vt1.c0, '왂3U', rt0.c2))>=((rt0.c0, vt0.c1, NULL, x'', rt0.c1)))  WHEN (((vt0.c1, rt0.c1, v0.c0, NULL, vt1.c0))<((rt0.c1, v0.c0, rt0.c2, 1241137592, vt0.c1))) THEN ((rt0.c1) IS TRUE) END ASC, CAST(((0.7711980463113627)OR(t0.c65)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN rt0 ON (((TRIM(DISTINCT t0.c90)))==((CASE WHEN v0.c0 THEN v0.c0 END))) RIGHT OUTER JOIN vt0 ON HEX(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c69))) LEFT OUTER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN t0.c65 WHEN 0.18582844396337106 THEN v0.c0 WHEN t0.c90 THEN rt0.c0 ELSE vt0.c1 END  WHEN ABS(DISTINCT rt0.c2) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE (t0.c65 IN (vt1.c0)) END WHERE (((((NULL)OR((- (vt0.c0)))))AND(-2113330504))) ORDER BY CASE (((1194506027, t0.c90, vt1.c0, '왂3U', rt0.c2))>=((rt0.c0, vt0.c1, NULL, x'', rt0.c1)))  WHEN (((vt0.c1, rt0.c1, v0.c0, NULL, vt1.c0))<((rt0.c1, v0.c0, rt0.c2, 1241137592, vt0.c1))) THEN ((rt0.c1) IS TRUE) END ASC, CAST(((0.7711980463113627)OR(t0.c65)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR((- (vt0.c0)))))AND(-2113330504))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN rt0 ON (((TRIM(DISTINCT t0.c90)))=((CASE WHEN v0.c0 THEN v0.c0 END))) RIGHT OUTER JOIN vt0 ON HEX(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c69))) LEFT OUTER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN t0.c65 WHEN 0.18582844396337106 THEN v0.c0 WHEN t0.c90 THEN rt0.c0 ELSE vt0.c1 END  WHEN ABS(DISTINCT rt0.c2) THEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE (t0.c65 IN (vt1.c0)) END ORDER BY CASE (((1194506027, t0.c90, vt1.c0, '왂3U', rt0.c2))>=((rt0.c0, vt0.c1, NULL, x'', rt0.c1)))  WHEN (((vt0.c1, rt0.c1, v0.c0, NULL, vt1.c0))<((rt0.c1, v0.c0, rt0.c2, 1241137592, vt0.c1))) THEN ((rt0.c1) IS TRUE) END ASC, CAST(((0.7711980463113627)OR(t0.c65)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (v0.c0) ORDER BY ((((rt0.c1) NOT NULL))IS(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1) NOT NULL))IS(rt0.c0))  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (v0.c0) ORDER BY ((((rt0.c1) NOT NULL))IS(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1) NOT NULL))IS(rt0.c0))  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (v0.c0) ORDER BY ((((rt0.c1) NOT NULL))IS(rt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (rt0.c2) AND ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (rt0.c2) AND ((- (rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (rt0.c2) AND ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (rt0.c2) AND ((- (rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (rt0.c2) AND ((- (rt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (json_remove((((vt0.c1))>=((vt0.c0))), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((vt0.c1))>=((vt0.c0))), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_remove((((vt0.c1))>=((vt0.c0))), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((vt0.c1))>=((vt0.c0))), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_remove((((vt0.c1))>=((vt0.c0))), vt0.c0 COLLATE NOCASE));
SELECT ALL * FROM v0, vt1 WHERE ((((vt1.c0)&(v0.c0)) IN ((((vt1.c0, v0.c0, x'')) BETWEEN ((vt1.c0, v0.c0, NULL)) AND ((v0.c0, '-857869476', '-2113330504')))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))=(((((vt1.c0)OR(v0.c0)))OR(0.7711980463113627)))), ((((((((((((((v0.c0)LIKE(vt1.c0)))OR(json_quote(vt1.c0))))AND((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((1.194506027E9, vt1.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (0.018704184094472165)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((0.36719639616656863 IN (x'')))), ((((((((CAST(vt1.c0 AS NUMERIC))AND((((v0.c0))>((vt1.c0))))))AND(((vt1.c0)||(v0.c0)))))OR(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(v0.c0)) IN ((((vt1.c0, v0.c0, x'')) BETWEEN ((vt1.c0, v0.c0, NULL)) AND ((v0.c0, '-857869476', '-2113330504')))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))==(((((vt1.c0)OR(v0.c0)))OR(0.7711980463113627)))), ((((((((((((((v0.c0)LIKE(vt1.c0)))OR(json_quote(vt1.c0))))AND((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((1.194506027E9, vt1.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (0.018704184094472165)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((0.36719639616656863 IN (x'')))), ((((((((CAST(vt1.c0 AS NUMERIC))AND((((v0.c0))>((vt1.c0))))))AND(((vt1.c0)||(v0.c0)))))OR(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE ((((vt1.c0)&(v0.c0)) IN ((((vt1.c0, v0.c0, x'')) BETWEEN ((vt1.c0, v0.c0, NULL)) AND ((v0.c0, '-857869476', '-2113330504')))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))=(((((vt1.c0)OR(v0.c0)))OR(0.7711980463113627)))), ((((((((((((((v0.c0)LIKE(vt1.c0)))OR(json_quote(vt1.c0))))AND((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((1.194506027E9, vt1.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (0.018704184094472165)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((0.36719639616656863 IN (x'')))), ((((((((CAST(vt1.c0 AS NUMERIC))AND((((v0.c0))>((vt1.c0))))))AND(((vt1.c0)||(v0.c0)))))OR(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(v0.c0)) IN ((((vt1.c0, v0.c0, x'')) BETWEEN ((vt1.c0, v0.c0, NULL)) AND ((v0.c0, '-857869476', '-2113330504')))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))==(((((vt1.c0)OR(v0.c0)))OR(0.7711980463113627)))), ((((((((((((((v0.c0)LIKE(vt1.c0)))OR(json_quote(vt1.c0))))AND((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((1.194506027E9, vt1.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (0.018704184094472165)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((0.36719639616656863 IN (x'')))), ((((((((CAST(vt1.c0 AS NUMERIC))AND((((v0.c0))>((vt1.c0))))))AND(((vt1.c0)||(v0.c0)))))OR(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE ((((vt1.c0)&(v0.c0)) IN ((((vt1.c0, v0.c0, x'')) BETWEEN ((vt1.c0, v0.c0, NULL)) AND ((v0.c0, '-857869476', '-2113330504')))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))=(((((vt1.c0)OR(v0.c0)))OR(0.7711980463113627)))), ((((((((((((((v0.c0)LIKE(vt1.c0)))OR(json_quote(vt1.c0))))AND((((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((1.194506027E9, vt1.c0, v0.c0)) AND ((v0.c0, NULL, v0.c0))))))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (0.018704184094472165)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((0.36719639616656863 IN (x'')))), ((((((((CAST(vt1.c0 AS NUMERIC))AND((((v0.c0))>((vt1.c0))))))AND(((vt1.c0)||(v0.c0)))))OR(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ('-1382456629') ORDER BY CASE WHEN CASE t0.c90  WHEN rt0.c1 THEN rt0.c1 WHEN t0.c65 THEN rt0.c0 WHEN '1043589151' THEN t0.c65 END THEN CAST(t0.c90 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 WHEN ((t0.c69)||('')) THEN CAST(t0.c90 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT (('-1382456629') IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CASE t0.c90  WHEN rt0.c1 THEN rt0.c1 WHEN t0.c65 THEN rt0.c0 WHEN '1043589151' THEN t0.c65 END THEN CAST(t0.c90 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 WHEN ((t0.c69)||('')) THEN CAST(t0.c90 AS REAL) END ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ('-1382456629') ORDER BY CASE WHEN CASE t0.c90  WHEN rt0.c1 THEN rt0.c1 WHEN t0.c65 THEN rt0.c0 WHEN '1043589151' THEN t0.c65 END THEN CAST(t0.c90 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 WHEN ((t0.c69)||('')) THEN CAST(t0.c90 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT (('-1382456629') IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CASE t0.c90  WHEN rt0.c1 THEN rt0.c1 WHEN t0.c65 THEN rt0.c0 WHEN '1043589151' THEN t0.c65 END THEN CAST(t0.c90 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 WHEN ((t0.c69)||('')) THEN CAST(t0.c90 AS REAL) END ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ('-1382456629') ORDER BY CASE WHEN CASE t0.c90  WHEN rt0.c1 THEN rt0.c1 WHEN t0.c65 THEN rt0.c0 WHEN '1043589151' THEN t0.c65 END THEN CAST(t0.c90 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 WHEN ((t0.c69)||('')) THEN CAST(t0.c90 AS REAL) END ASC;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<=(((((vt1.c0)OR(vt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)<=(((((vt1.c0)OR(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<=(((((vt1.c0)OR(vt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)<=(((((vt1.c0)OR(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<=(((((vt1.c0)OR(vt0.c1)))OR(rt0.c0)))));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((0.18582844396337106 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.18582844396337106 IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((0.18582844396337106 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.18582844396337106 IN ())) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((0.18582844396337106 IN ()));
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((rt0.c1)AND(t0.c65)) IN ())) ORDER BY ((((rt0.c0 IN ())))>((ABS(0.15391321224612986)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)AND(t0.c65)) IN ())) IS TRUE)  as count FROM rt0, v0, t0, vt0 ORDER BY ((((rt0.c0 IN ())))>((ABS(0.15391321224612986)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((rt0.c1)AND(t0.c65)) IN ())) ORDER BY ((((rt0.c0 IN ())))>((ABS(0.15391321224612986)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)AND(t0.c65)) IN ())) IS TRUE)  as count FROM rt0, v0, t0, vt0 ORDER BY ((((rt0.c0 IN ())))>((ABS(0.15391321224612986)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE ((((rt0.c1)AND(t0.c65)) IN ())) ORDER BY ((((rt0.c0 IN ())))>((ABS(0.15391321224612986)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE ((RTRIM(vt0.c1) IN ())) ORDER BY (((t0.c90, v0.c0, rt0.c0)) BETWEEN (('' COLLATE NOCASE, v0.c0 COLLATE NOCASE, (rt0.c0 IN (rt0.c1, rt0.c2)))) AND ((((((t0.c69)OR(vt0.c0)))AND(t0.c69)), t0.c69 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((RTRIM(vt0.c1) IN ())) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY (((t0.c90, v0.c0, rt0.c0)) BETWEEN (('' COLLATE NOCASE, v0.c0 COLLATE NOCASE, (rt0.c0 IN (rt0.c1, rt0.c2)))) AND ((((((t0.c69)OR(vt0.c0)))AND(t0.c69)), t0.c69 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE ((RTRIM(vt0.c1) IN ())) ORDER BY (((t0.c90, v0.c0, rt0.c0)) BETWEEN (('' COLLATE NOCASE, v0.c0 COLLATE NOCASE, (rt0.c0 IN (rt0.c1, rt0.c2)))) AND ((((((t0.c69)OR(vt0.c0)))AND(t0.c69)), t0.c69 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((RTRIM(vt0.c1) IN ())) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY (((t0.c90, v0.c0, rt0.c0)) BETWEEN (('' COLLATE NOCASE, v0.c0 COLLATE NOCASE, (rt0.c0 IN (rt0.c1, rt0.c2)))) AND ((((((t0.c69)OR(vt0.c0)))AND(t0.c69)), t0.c69 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE ((RTRIM(vt0.c1) IN ())) ORDER BY (((t0.c90, v0.c0, rt0.c0)) BETWEEN (('' COLLATE NOCASE, v0.c0 COLLATE NOCASE, (rt0.c0 IN (rt0.c1, rt0.c2)))) AND ((((((t0.c69)OR(vt0.c0)))AND(t0.c69)), t0.c69 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (-212206982);
SELECT SUM(count) FROM (SELECT ((-212206982) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (-212206982);
SELECT SUM(count) FROM (SELECT ((-212206982) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (-212206982);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i30, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))LIKE(((((((((vt1.c0)OR('_A}HYI뜫')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))LIKE(((((((((vt1.c0)OR('_A}HYI뜫')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i30, vt1);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i30, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))LIKE(((((((((vt1.c0)OR('_A}HYI뜫')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))LIKE(((((((((vt1.c0)OR('_A}HYI뜫')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i30, vt1);
SELECT * FROM rt0, vt0 INDEXED BY i1, v0, vt1, t0 WHERE (CASE WHEN LENGTH(vt0.c0) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LENGTH(vt0.c0) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt0 INDEXED BY i1, v0, vt1, t0);
SELECT * FROM rt0, vt0 INDEXED BY i1, v0, vt1, t0 WHERE (CASE WHEN LENGTH(vt0.c0) THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LENGTH(vt0.c0) THEN rt0.c0 END) IS TRUE)  as count FROM rt0, vt0 INDEXED BY i1, v0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, v0, t0, vt0 WHERE (((((((rt0.c2)OR(vt1.c0)))OR(vt0.c0)))-(rt0.c1))) ORDER BY ''  NULLS FIRST, TRIM(DISTINCT CAST(vt1.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(vt1.c0)))OR(vt0.c0)))-(rt0.c1))) IS TRUE)  as count FROM rt0, vt1, v0, t0, vt0 ORDER BY ''  NULLS FIRST, TRIM(DISTINCT CAST(vt1.c0 AS REAL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0, t0, vt0 WHERE (((((((rt0.c2)OR(vt1.c0)))OR(vt0.c0)))-(rt0.c1))) ORDER BY ''  NULLS FIRST, TRIM(DISTINCT CAST(vt1.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(vt1.c0)))OR(vt0.c0)))-(rt0.c1))) IS TRUE)  as count FROM rt0, vt1, v0, t0, vt0 ORDER BY ''  NULLS FIRST, TRIM(DISTINCT CAST(vt1.c0 AS REAL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0, t0, vt0 WHERE (((((((rt0.c2)OR(vt1.c0)))OR(vt0.c0)))-(rt0.c1))) ORDER BY ''  NULLS FIRST, TRIM(DISTINCT CAST(vt1.c0 AS REAL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST(v0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST(v0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (CAST(v0.c0 AS NUMERIC));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST, (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, (('+') BETWEEN (((v0.c0)OR(v0.c0))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST, (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, (('+') BETWEEN (((v0.c0)OR(v0.c0))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST, (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, (('+') BETWEEN (((v0.c0)OR(v0.c0))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST, (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, (('+') BETWEEN (((v0.c0)OR(v0.c0))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END  NULLS LAST, (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS LAST, (('+') BETWEEN (((v0.c0)OR(v0.c0))) AND ((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0, vt1 NOT INDEXED WHERE (((rt0.c1) NOT BETWEEN ('274066175') AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN ('274066175') AND (vt1.c0)))) AND ((LTRIM(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ('274066175') AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN ('274066175') AND (vt1.c0)))) AND ((LTRIM(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 NOT INDEXED WHERE (((rt0.c1) NOT BETWEEN ('274066175') AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN ('274066175') AND (vt1.c0)))) AND ((LTRIM(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ('274066175') AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN ('274066175') AND (vt1.c0)))) AND ((LTRIM(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt1 NOT INDEXED WHERE (((rt0.c1) NOT BETWEEN ('274066175') AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN ('274066175') AND (vt1.c0)))) AND ((LTRIM(vt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN NULL ELSE rt0.c2 END)<>(NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN NULL ELSE rt0.c2 END)<>(NULL))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN NULL ELSE rt0.c2 END)<>(NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN NULL ELSE rt0.c2 END)<>(NULL))) IS TRUE)  as count FROM v0, t0, vt0, rt0);
SELECT COUNT(*) FROM v0, t0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN NULL ELSE rt0.c2 END)<>(NULL)));
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT * FROM rt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN '224221849' THEN t0.c65 ELSE vt1.c0 END)<(((rt0.c1)=(t0.c65)))) LEFT OUTER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)&(CASE WHEN t0.c65 THEN t0.c65 END)) RIGHT OUTER JOIN vt0 ON (((t0.c69 IN (t0.c69, vt1.c0)))>>(HEX(DISTINCT vt0.c1))) CROSS JOIN t0 ON ((((((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 END)AND(((v0.c0)AND('-1382456629')))))AND(((((rt0.c1)AND(rt0.c2)))OR('d#*Q')))))OR('')))OR(((v0.c0)IS NOT(rt0.c0)))) WHERE (HEX(DISTINCT (NOT (rt0.c1)))) ORDER BY (((- (vt0.c1)))/(CASE v0.c0  WHEN 1.241137592E9 THEN 0.010126332796646986 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT (rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN '224221849' THEN t0.c65 ELSE vt1.c0 END)<(((rt0.c1)==(t0.c65)))) LEFT OUTER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)&(CASE WHEN t0.c65 THEN t0.c65 END)) RIGHT OUTER JOIN vt0 ON (((t0.c69 IN (t0.c69, vt1.c0)))>>(HEX(DISTINCT vt0.c1))) CROSS JOIN t0 ON ((((((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 END)AND(((v0.c0)AND('-1382456629')))))AND(((((rt0.c1)AND(rt0.c2)))OR('d#*Q')))))OR('')))OR(((v0.c0)IS NOT(rt0.c0)))) ORDER BY (((- (vt0.c1)))/(CASE v0.c0  WHEN 1.241137592E9 THEN 0.010126332796646986 ELSE v0.c0 END))  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN '224221849' THEN t0.c65 ELSE vt1.c0 END)<(((rt0.c1)=(t0.c65)))) LEFT OUTER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)&(CASE WHEN t0.c65 THEN t0.c65 END)) RIGHT OUTER JOIN vt0 ON (((t0.c69 IN (t0.c69, vt1.c0)))>>(HEX(DISTINCT vt0.c1))) CROSS JOIN t0 ON ((((((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 END)AND(((v0.c0)AND('-1382456629')))))AND(((((rt0.c1)AND(rt0.c2)))OR('d#*Q')))))OR('')))OR(((v0.c0)IS NOT(rt0.c0)))) WHERE (HEX(DISTINCT (NOT (rt0.c1)))) ORDER BY (((- (vt0.c1)))/(CASE v0.c0  WHEN 1.241137592E9 THEN 0.010126332796646986 ELSE v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT (rt0.c1)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CASE v0.c0  WHEN '224221849' THEN t0.c65 ELSE vt1.c0 END)<(((rt0.c1)==(t0.c65)))) LEFT OUTER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)&(CASE WHEN t0.c65 THEN t0.c65 END)) RIGHT OUTER JOIN vt0 ON (((t0.c69 IN (t0.c69, vt1.c0)))>>(HEX(DISTINCT vt0.c1))) CROSS JOIN t0 ON ((((((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 END)AND(((v0.c0)AND('-1382456629')))))AND(((((rt0.c1)AND(rt0.c2)))OR('d#*Q')))))OR('')))OR(((v0.c0)IS NOT(rt0.c0)))) ORDER BY (((- (vt0.c1)))/(CASE v0.c0  WHEN 1.241137592E9 THEN 0.010126332796646986 ELSE v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON IFNULL((~ (t0.c69)), (((rt0.c2))<=((t0.c69)))) RIGHT OUTER JOIN rt0 ON (((x'', rt0.c2, t0.c90)) NOT BETWEEN ((((t0.c90) NOT NULL), CASE vt0.c1  WHEN rt0.c2 THEN t0.c69 END, ((vt0.c0) NOTNULL))) AND ((((t0.c90)%(vt0.c1)), CASE WHEN t0.c90 THEN vt0.c0 ELSE rt0.c2 END, ((((((((t0.c90)OR(t0.c69)))AND(t0.c90)))OR(rt0.c1)))AND(rt0.c1))))) WHERE (((((rt0.c0) NOTNULL))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))OR((~ (rt0.c1))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON IFNULL((~ (t0.c69)), (((rt0.c2))<=((t0.c69)))) RIGHT OUTER JOIN rt0 ON (((x'', rt0.c2, t0.c90)) NOT BETWEEN ((((t0.c90) NOT NULL), CASE vt0.c1  WHEN rt0.c2 THEN t0.c69 END, ((vt0.c0) NOTNULL))) AND ((((t0.c90)%(vt0.c1)), CASE WHEN t0.c90 THEN vt0.c0 ELSE rt0.c2 END, ((((((((t0.c90)OR(t0.c69)))AND(t0.c90)))OR(rt0.c1)))AND(rt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON IFNULL((~ (t0.c69)), (((rt0.c2))<=((t0.c69)))) RIGHT OUTER JOIN rt0 ON (((x'', rt0.c2, t0.c90)) NOT BETWEEN ((((t0.c90) NOT NULL), CASE vt0.c1  WHEN rt0.c2 THEN t0.c69 END, ((vt0.c0) NOTNULL))) AND ((((t0.c90)%(vt0.c1)), CASE WHEN t0.c90 THEN vt0.c0 ELSE rt0.c2 END, ((((((((t0.c90)OR(t0.c69)))AND(t0.c90)))OR(rt0.c1)))AND(rt0.c1))))) WHERE (((((rt0.c0) NOTNULL))OR((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))OR((~ (rt0.c1))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON IFNULL((~ (t0.c69)), (((rt0.c2))<=((t0.c69)))) RIGHT OUTER JOIN rt0 ON (((x'', rt0.c2, t0.c90)) NOT BETWEEN ((((t0.c90) NOT NULL), CASE vt0.c1  WHEN rt0.c2 THEN t0.c69 END, ((vt0.c0) NOTNULL))) AND ((((t0.c90)%(vt0.c1)), CASE WHEN t0.c90 THEN vt0.c0 ELSE rt0.c2 END, ((((((((t0.c90)OR(t0.c69)))AND(t0.c90)))OR(rt0.c1)))AND(rt0.c1))))));
SELECT ALL * FROM t0, v0, rt0 INNER JOIN vt1 ON ((rt0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN vt0 ON (((vt1.c0 IN ())) IS TRUE) WHERE (((((t0.c69)IS NOT(t0.c90)))%('0.15391321224612986'))) ORDER BY (((+ (t0.c65))) NOT BETWEEN (DATETIME(vt0.c0, vt0.c1, t0.c90)) AND (x'56d1'))  NULLS FIRST, ((CASE WHEN -388583332 THEN NULL ELSE rt0.c2 END)%(0.4320450392410292)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69)IS NOT(t0.c90)))%('0.15391321224612986'))) IS TRUE)  as count FROM t0, v0, rt0 INNER JOIN vt1 ON ((rt0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN vt0 ON (((vt1.c0 IN ())) IS TRUE) ORDER BY (((+ (t0.c65))) NOT BETWEEN (DATETIME(vt0.c0, vt0.c1, t0.c90)) AND (x'56d1'))  NULLS FIRST, ((CASE WHEN -388583332 THEN NULL ELSE rt0.c2 END)%(0.4320450392410292)) DESC);
SELECT ALL * FROM t0, v0, rt0 INNER JOIN vt1 ON ((rt0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN vt0 ON (((vt1.c0 IN ())) IS TRUE) WHERE (((((t0.c69)IS NOT(t0.c90)))%('0.15391321224612986'))) ORDER BY (((+ (t0.c65))) NOT BETWEEN (DATETIME(vt0.c0, vt0.c1, t0.c90)) AND (x'56d1'))  NULLS FIRST, ((CASE WHEN -388583332 THEN NULL ELSE rt0.c2 END)%(0.4320450392410292)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69)IS NOT(t0.c90)))%('0.15391321224612986'))) IS TRUE)  as count FROM t0, v0, rt0 INNER JOIN vt1 ON ((rt0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN vt0 ON (((vt1.c0 IN ())) IS TRUE) ORDER BY (((+ (t0.c65))) NOT BETWEEN (DATETIME(vt0.c0, vt0.c1, t0.c90)) AND (x'56d1'))  NULLS FIRST, ((CASE WHEN -388583332 THEN NULL ELSE rt0.c2 END)%(0.4320450392410292)) DESC);
SELECT ALL * FROM t0, v0, rt0 INNER JOIN vt1 ON ((rt0.c1) IS TRUE) COLLATE NOCASE CROSS JOIN vt0 ON (((vt1.c0 IN ())) IS TRUE) WHERE (((((t0.c69)IS NOT(t0.c90)))%('0.15391321224612986'))) ORDER BY (((+ (t0.c65))) NOT BETWEEN (DATETIME(vt0.c0, vt0.c1, t0.c90)) AND (x'56d1'))  NULLS FIRST, ((CASE WHEN -388583332 THEN NULL ELSE rt0.c2 END)%(0.4320450392410292)) DESC;
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((((((((- (t0.c90)))OR(((t0.c69)+(vt0.c0)))))OR(((vt0.c1) IS TRUE))))AND((((vt1.c0))<((t0.c65))))))AND(vt0.c1)) CROSS JOIN t0 ON ((((((vt0.c0) NOT NULL))OR(((t0.c65)IS(t0.c90)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE x'' END)) WHERE ((t0.c65 IN (((vt0.c1)LIKE(vt0.c0)), ((vt1.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((t0.c65 IN (((vt0.c1)LIKE(vt0.c0)), ((vt1.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((((((((- (t0.c90)))OR(((t0.c69)+(vt0.c0)))))OR(((vt0.c1) IS TRUE))))AND((((vt1.c0))<((t0.c65))))))AND(vt0.c1)) CROSS JOIN t0 ON ((((((vt0.c0) NOT NULL))OR(((t0.c65)IS(t0.c90)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE x'' END)));
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((((((((- (t0.c90)))OR(((t0.c69)+(vt0.c0)))))OR(((vt0.c1) IS TRUE))))AND((((vt1.c0))<((t0.c65))))))AND(vt0.c1)) CROSS JOIN t0 ON ((((((vt0.c0) NOT NULL))OR(((t0.c65)IS(t0.c90)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE x'' END)) WHERE ((t0.c65 IN (((vt0.c1)LIKE(vt0.c0)), ((vt1.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((t0.c65 IN (((vt0.c1)LIKE(vt0.c0)), ((vt1.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((((((((- (t0.c90)))OR(((t0.c69)+(vt0.c0)))))OR(((vt0.c1) IS TRUE))))AND((((vt1.c0))<((t0.c65))))))AND(vt0.c1)) CROSS JOIN t0 ON ((((((vt0.c0) NOT NULL))OR(((t0.c65)IS(t0.c90)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE x'' END)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (((t0.c69, NULL, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c1)))) CROSS JOIN rt0 ON (- (-9223372036854775808)) CROSS JOIN vt1 ON ((((t0.c65) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c2)/(vt1.c0)))) CROSS JOIN t0 ON (('-727897960') NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(v0.c0)))AND(vt0.c0)))) WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((((t0.c65)OR('왂3u')))AND(t0.c90)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((((t0.c65)OR('왂3u')))AND(t0.c90)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (((t0.c69, NULL, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c1)))) CROSS JOIN rt0 ON (- (-9223372036854775808)) CROSS JOIN vt1 ON ((((t0.c65) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c2)/(vt1.c0)))) CROSS JOIN t0 ON (('-727897960') NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(v0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (((t0.c69, NULL, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c1)))) CROSS JOIN rt0 ON (- (-9223372036854775808)) CROSS JOIN vt1 ON ((((t0.c65) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c2)/(vt1.c0)))) CROSS JOIN t0 ON (('-727897960') NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(v0.c0)))AND(vt0.c0)))) WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN ((((t0.c65)OR('왂3u')))AND(t0.c90)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN ((((t0.c65)OR('왂3u')))AND(t0.c90)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (((t0.c69, NULL, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c1)))) CROSS JOIN rt0 ON (- (-9223372036854775808)) CROSS JOIN vt1 ON ((((t0.c65) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((rt0.c2)/(vt1.c0)))) CROSS JOIN t0 ON (('-727897960') NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(v0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((vt0.c1)>(vt1.c0))) IS TRUE) WHERE (CASE WHEN CASE WHEN vt0.c1 THEN 695768879 END THEN ((vt0.c0)*(t0.c65)) WHEN t0.c69 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY WHEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN IFNULL(DISTINCT t0.c69, t0.c69) WHEN ((vt0.c0) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN ((((x'6a17')OR(vt0.c0)))OR(vt1.c0)) WHEN (+ (vt0.c1)) THEN (NOT (t0.c69)) END) ORDER BY ((CAST(t0.c90 AS BLOB)) BETWEEN (((((((((t0.c69)AND(vt0.c0)))AND(vt1.c0)))OR(t0.c90)))OR(0.9637145721825757))) AND ((vt0.c1 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN 695768879 END THEN ((vt0.c0)*(t0.c65)) WHEN t0.c69 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY WHEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN IFNULL(DISTINCT t0.c69, t0.c69) WHEN ((vt0.c0) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN ((((x'6a17')OR(vt0.c0)))OR(vt1.c0)) WHEN (+ (vt0.c1)) THEN (NOT (t0.c69)) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((((vt0.c1)>(vt1.c0))) IS TRUE) ORDER BY ((CAST(t0.c90 AS BLOB)) BETWEEN (((((((((t0.c69)AND(vt0.c0)))AND(vt1.c0)))OR(t0.c90)))OR(0.9637145721825757))) AND ((vt0.c1 IN (vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((vt0.c1)>(vt1.c0))) IS TRUE) WHERE (CASE WHEN CASE WHEN vt0.c1 THEN 695768879 END THEN ((vt0.c0)*(t0.c65)) WHEN t0.c69 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY WHEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN IFNULL(DISTINCT t0.c69, t0.c69) WHEN ((vt0.c0) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN ((((x'6a17')OR(vt0.c0)))OR(vt1.c0)) WHEN (+ (vt0.c1)) THEN (NOT (t0.c69)) END) ORDER BY ((CAST(t0.c90 AS BLOB)) BETWEEN (((((((((t0.c69)AND(vt0.c0)))AND(vt1.c0)))OR(t0.c90)))OR(0.9637145721825757))) AND ((vt0.c1 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN 695768879 END THEN ((vt0.c0)*(t0.c65)) WHEN t0.c69 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY WHEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN IFNULL(DISTINCT t0.c69, t0.c69) WHEN ((vt0.c0) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN ((((x'6a17')OR(vt0.c0)))OR(vt1.c0)) WHEN (+ (vt0.c1)) THEN (NOT (t0.c69)) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((((vt0.c1)>(vt1.c0))) IS TRUE) ORDER BY ((CAST(t0.c90 AS BLOB)) BETWEEN (((((((((t0.c69)AND(vt0.c0)))AND(vt1.c0)))OR(t0.c90)))OR(0.9637145721825757))) AND ((vt0.c1 IN (vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t0 ON ((((vt0.c1)>(vt1.c0))) IS TRUE) WHERE (CASE WHEN CASE WHEN vt0.c1 THEN 695768879 END THEN ((vt0.c0)*(t0.c65)) WHEN t0.c69 COLLATE RTRIM THEN vt0.c1 COLLATE BINARY WHEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN IFNULL(DISTINCT t0.c69, t0.c69) WHEN ((vt0.c0) NOT BETWEEN (t0.c90) AND (t0.c90)) THEN ((((x'6a17')OR(vt0.c0)))OR(vt1.c0)) WHEN (+ (vt0.c1)) THEN (NOT (t0.c69)) END) ORDER BY ((CAST(t0.c90 AS BLOB)) BETWEEN (((((((((t0.c69)AND(vt0.c0)))AND(vt1.c0)))OR(t0.c90)))OR(0.9637145721825757))) AND ((vt0.c1 IN (vt1.c0))));
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) IS TRUE) THEN (- (vt1.c0)) END) ORDER BY (((vt1.c0))<=((UNLIKELY(DISTINCT vt1.c0)))) ASC  NULLS FIRST, (- (((vt1.c0)LIKE(vt1.c0)))) DESC  NULLS FIRST, '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN ((vt1.c0) IS TRUE) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<=((UNLIKELY(DISTINCT vt1.c0)))) ASC  NULLS FIRST, (- (((vt1.c0)LIKE(vt1.c0)))) DESC  NULLS FIRST, '' ASC);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) IS TRUE) THEN (- (vt1.c0)) END) ORDER BY (((vt1.c0))<=((UNLIKELY(DISTINCT vt1.c0)))) ASC  NULLS FIRST, (- (((vt1.c0)LIKE(vt1.c0)))) DESC  NULLS FIRST, '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN ((vt1.c0) IS TRUE) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<=((UNLIKELY(DISTINCT vt1.c0)))) ASC  NULLS FIRST, (- (((vt1.c0)LIKE(vt1.c0)))) DESC  NULLS FIRST, '' ASC);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0) IS TRUE) THEN (- (vt1.c0)) END) ORDER BY (((vt1.c0))<=((UNLIKELY(DISTINCT vt1.c0)))) ASC  NULLS FIRST, (- (((vt1.c0)LIKE(vt1.c0)))) DESC  NULLS FIRST, '' ASC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))-(((vt1.c0)+(rt0.c2)))) CROSS JOIN vt1 ON (CAST(t0.c69 AS INTEGER) IN ()) WHERE (ABS(DISTINCT TYPEOF(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT TYPEOF(DISTINCT vt1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))-(((vt1.c0)+(rt0.c2)))) CROSS JOIN vt1 ON (CAST(t0.c69 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))-(((vt1.c0)+(rt0.c2)))) CROSS JOIN vt1 ON (CAST(t0.c69 AS INTEGER) IN ()) WHERE (ABS(DISTINCT TYPEOF(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT TYPEOF(DISTINCT vt1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))-(((vt1.c0)+(rt0.c2)))) CROSS JOIN vt1 ON (CAST(t0.c69 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))-(((vt1.c0)+(rt0.c2)))) CROSS JOIN vt1 ON (CAST(t0.c69 AS INTEGER) IN ()) WHERE (ABS(DISTINCT TYPEOF(DISTINCT vt1.c0)));
SELECT * FROM vt1, v0, rt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, rt0);
SELECT * FROM vt1, v0, rt0 WHERE (NULL COLLATE BINARY);
SELECT COUNT(*) FROM t0, v0, vt1, vt0, rt0 WHERE (((((((vt0.c0)<=(rt0.c0)))AND(((vt0.c1) NOTNULL))))OR(CASE t0.c65  WHEN t0.c90 THEN vt1.c0 ELSE x'' END))) ORDER BY (NOT (((rt0.c0)>=(vt1.c0)))) DESC, ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (x'') AND (DATETIME(rt0.c1, v0.c0, v0.c0))), (((((- (v0.c0)))OR('w')))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(rt0.c0)))AND(((vt0.c1) NOTNULL))))OR(CASE t0.c65  WHEN t0.c90 THEN vt1.c0 ELSE x'' END))) IS TRUE)  as count FROM t0, v0, vt1, vt0, rt0 ORDER BY (NOT (((rt0.c0)>=(vt1.c0)))) DESC, ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (x'') AND (DATETIME(rt0.c1, v0.c0, v0.c0))), (((((- (v0.c0)))OR('w')))OR(NULL)) DESC);
SELECT COUNT(*) FROM t0, v0, vt1, vt0, rt0 WHERE (((((((vt0.c0)<=(rt0.c0)))AND(((vt0.c1) NOTNULL))))OR(CASE t0.c65  WHEN t0.c90 THEN vt1.c0 ELSE x'' END))) ORDER BY (NOT (((rt0.c0)>=(vt1.c0)))) DESC, ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (x'') AND (DATETIME(rt0.c1, v0.c0, v0.c0))), (((((- (v0.c0)))OR('w')))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(rt0.c0)))AND(((vt0.c1) NOTNULL))))OR(CASE t0.c65  WHEN t0.c90 THEN vt1.c0 ELSE x'' END))) IS TRUE)  as count FROM t0, v0, vt1, vt0, rt0 ORDER BY (NOT (((rt0.c0)>=(vt1.c0)))) DESC, ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (x'') AND (DATETIME(rt0.c1, v0.c0, v0.c0))), (((((- (v0.c0)))OR('w')))OR(NULL)) DESC);
SELECT COUNT(*) FROM t0, v0, vt1, vt0, rt0 WHERE (((((((vt0.c0)<=(rt0.c0)))AND(((vt0.c1) NOTNULL))))OR(CASE t0.c65  WHEN t0.c90 THEN vt1.c0 ELSE x'' END))) ORDER BY (NOT (((rt0.c0)>=(vt1.c0)))) DESC, ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (x'') AND (DATETIME(rt0.c1, v0.c0, v0.c0))), (((((- (v0.c0)))OR('w')))OR(NULL)) DESC;
SELECT ALL * FROM vt1, v0, vt0, rt0 WHERE (((rt0.c2)>>(v0.c0))) ORDER BY ((vt0.c0 IN ('L%S⢘j#', v0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(v0.c0))) IS TRUE)  as count FROM vt1, v0, vt0, rt0 ORDER BY ((vt0.c0 IN ('L%S⢘j#', v0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0, rt0 WHERE (((rt0.c2)>>(v0.c0))) ORDER BY ((vt0.c0 IN ('L%S⢘j#', v0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(v0.c0))) IS TRUE)  as count FROM vt1, v0, vt0, rt0 ORDER BY ((vt0.c0 IN ('L%S⢘j#', v0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0, vt0, rt0 WHERE (((rt0.c2)>>(v0.c0))) ORDER BY ((vt0.c0 IN ('L%S⢘j#', v0.c0)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON LIKELY(t0.c69) COLLATE RTRIM CROSS JOIN vt0 ON (((UPPER(v0.c0)))<=(((((x'')) NOT BETWEEN ((t0.c69)) AND ((rt0.c1)))))) FULL OUTER JOIN vt1 ON vt1.c0 FULL OUTER JOIN t0 ON (((((((rt0.c0)AND(vt0.c0)))OR(t0.c65)), ((((((((vt0.c1)AND(vt0.c1)))OR(t0.c65)))AND(vt1.c0)))OR(rt0.c0)), ((vt0.c0)+(vt0.c1))))<=(((vt0.c1 IN ()), t0.c65, v0.c0))) WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c0)IS('-212206982')) THEN ((t0.c69) BETWEEN (rt0.c1) AND (rt0.c1)) END) ORDER BY (((rt0.c0, rt0.c1, t0.c90)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, ((rt0.c2) ISNULL), json_quote(rt0.c1))) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))), NULL))), ((((((((((((((((t0.c65)OR(vt1.c0)))AND(-1718755382)))AND(rt0.c0)))OR(t0.c65)))OR(((((0.06632782100846812)AND(rt0.c2)))AND(vt0.c1)))))OR(x'b58053a0')))OR(((t0.c69)>=(vt1.c0)))))OR(CASE t0.c65  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c69 THEN vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN ((vt0.c0)IS('-212206982')) THEN ((t0.c69) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON LIKELY(t0.c69) COLLATE RTRIM CROSS JOIN vt0 ON (((UPPER(v0.c0)))<=(((((x'')) NOT BETWEEN ((t0.c69)) AND ((rt0.c1)))))) FULL OUTER JOIN vt1 ON vt1.c0 FULL OUTER JOIN t0 ON (((((((rt0.c0)AND(vt0.c0)))OR(t0.c65)), ((((((((vt0.c1)AND(vt0.c1)))OR(t0.c65)))AND(vt1.c0)))OR(rt0.c0)), ((vt0.c0)+(vt0.c1))))<=(((vt0.c1 IN ()), t0.c65, v0.c0))) ORDER BY (((rt0.c0, rt0.c1, t0.c90)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, ((rt0.c2) ISNULL), json_quote(rt0.c1))) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))), NULL))), ((((((((((((((((t0.c65)OR(vt1.c0)))AND(-1718755382)))AND(rt0.c0)))OR(t0.c65)))OR(((((0.06632782100846812)AND(rt0.c2)))AND(vt0.c1)))))OR(x'b58053a0')))OR(((t0.c69)>=(vt1.c0)))))OR(CASE t0.c65  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c69 THEN vt1.c0 END))  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON LIKELY(t0.c69) COLLATE RTRIM CROSS JOIN vt0 ON (((UPPER(v0.c0)))<=(((((x'')) NOT BETWEEN ((t0.c69)) AND ((rt0.c1)))))) FULL OUTER JOIN vt1 ON vt1.c0 FULL OUTER JOIN t0 ON (((((((rt0.c0)AND(vt0.c0)))OR(t0.c65)), ((((((((vt0.c1)AND(vt0.c1)))OR(t0.c65)))AND(vt1.c0)))OR(rt0.c0)), ((vt0.c0)+(vt0.c1))))<=(((vt0.c1 IN ()), t0.c65, v0.c0))) WHERE (CASE (NOT (vt0.c1))  WHEN ((vt0.c0)IS('-212206982')) THEN ((t0.c69) BETWEEN (rt0.c1) AND (rt0.c1)) END) ORDER BY (((rt0.c0, rt0.c1, t0.c90)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, ((rt0.c2) ISNULL), json_quote(rt0.c1))) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))), NULL))), ((((((((((((((((t0.c65)OR(vt1.c0)))AND(-1718755382)))AND(rt0.c0)))OR(t0.c65)))OR(((((0.06632782100846812)AND(rt0.c2)))AND(vt0.c1)))))OR(x'b58053a0')))OR(((t0.c69)>=(vt1.c0)))))OR(CASE t0.c65  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c69 THEN vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (vt0.c1))  WHEN ((vt0.c0)IS('-212206982')) THEN ((t0.c69) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON LIKELY(t0.c69) COLLATE RTRIM CROSS JOIN vt0 ON (((UPPER(v0.c0)))<=(((((x'')) NOT BETWEEN ((t0.c69)) AND ((rt0.c1)))))) FULL OUTER JOIN vt1 ON vt1.c0 FULL OUTER JOIN t0 ON (((((((rt0.c0)AND(vt0.c0)))OR(t0.c65)), ((((((((vt0.c1)AND(vt0.c1)))OR(t0.c65)))AND(vt1.c0)))OR(rt0.c0)), ((vt0.c0)+(vt0.c1))))<=(((vt0.c1 IN ()), t0.c65, v0.c0))) ORDER BY (((rt0.c0, rt0.c1, t0.c90)) NOT BETWEEN ((vt0.c1 COLLATE RTRIM, ((rt0.c2) ISNULL), json_quote(rt0.c1))) AND ((((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))), NULL))), ((((((((((((((((t0.c65)OR(vt1.c0)))AND(-1718755382)))AND(rt0.c0)))OR(t0.c65)))OR(((((0.06632782100846812)AND(rt0.c2)))AND(vt0.c1)))))OR(x'b58053a0')))OR(((t0.c69)>=(vt1.c0)))))OR(CASE t0.c65  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t0.c69 THEN vt1.c0 END))  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON 0.6334877516947238 WHERE ((((0.18582844396337106))!=(((vt1.c0 IN (vt1.c0, rt0.c1)))))) ORDER BY (~ (JULIANDAY(vt1.c0, '&d}k*A<ឹn', rt0.c1, rt0.c1, rt0.c2))) DESC, ((((CAST(rt0.c0 AS INTEGER))AND(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c2)))), COALESCE(DISTINCT 0.05651230380735972, vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.18582844396337106))!=(((vt1.c0 IN (vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON 0.6334877516947238 ORDER BY (~ (JULIANDAY(vt1.c0, '&d}k*A<ឹn', rt0.c1, rt0.c1, rt0.c2))) DESC, ((((CAST(rt0.c0 AS INTEGER))AND(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c2)))), COALESCE(DISTINCT 0.05651230380735972, vt1.c0) DESC);
SELECT * FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON 0.6334877516947238 WHERE ((((0.18582844396337106))!=(((vt1.c0 IN (vt1.c0, rt0.c1)))))) ORDER BY (~ (JULIANDAY(vt1.c0, '&d}k*A<ឹn', rt0.c1, rt0.c1, rt0.c2))) DESC, ((((CAST(rt0.c0 AS INTEGER))AND(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c2)))), COALESCE(DISTINCT 0.05651230380735972, vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.18582844396337106))!=(((vt1.c0 IN (vt1.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON 0.6334877516947238 ORDER BY (~ (JULIANDAY(vt1.c0, '&d}k*A<ឹn', rt0.c1, rt0.c1, rt0.c2))) DESC, ((((CAST(rt0.c0 AS INTEGER))AND(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c2)))), COALESCE(DISTINCT 0.05651230380735972, vt1.c0) DESC);
SELECT * FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON 0.6334877516947238 WHERE ((((0.18582844396337106))!=(((vt1.c0 IN (vt1.c0, rt0.c1)))))) ORDER BY (~ (JULIANDAY(vt1.c0, '&d}k*A<ឹn', rt0.c1, rt0.c1, rt0.c2))) DESC, ((((CAST(rt0.c0 AS INTEGER))AND(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c2)))), COALESCE(DISTINCT 0.05651230380735972, vt1.c0) DESC;
SELECT * FROM vt0, t0, vt1, rt0, v0 WHERE ((~ ('1106226549'))) ORDER BY (+ (((t0.c69)IS NOT(t0.c69))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ('1106226549'))) IS TRUE)  as count FROM vt0, t0, vt1, rt0, v0 ORDER BY (+ (((t0.c69)IS NOT(t0.c69))))  NULLS FIRST);
SELECT * FROM vt0, t0, vt1, rt0, v0 WHERE ((~ ('1106226549'))) ORDER BY (+ (((t0.c69)IS NOT(t0.c69))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ('1106226549'))) IS TRUE)  as count FROM vt0, t0, vt1, rt0, v0 ORDER BY (+ (((t0.c69)IS NOT(t0.c69))))  NULLS FIRST);
SELECT * FROM vt0, t0, vt1, rt0, v0 WHERE ((~ ('1106226549'))) ORDER BY (+ (((t0.c69)IS NOT(t0.c69))))  NULLS FIRST;
SELECT * FROM vt0, rt0, t0, v0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE t0.c69  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c65 END)) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE t0.c69  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c65 END)) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0, t0, v0, vt1);
SELECT * FROM vt0, rt0, t0, v0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE t0.c69  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c65 END)) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE t0.c69  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c65 END)) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0, t0, v0, vt1);
SELECT * FROM vt0, rt0, t0, v0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE t0.c69  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c65 END)) AND ((vt1.c0 COLLATE RTRIM))));
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (CAST((((rt0.c0))<=((x''))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<=((x''))) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (CAST((((rt0.c0))<=((x''))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<=((x''))) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (CAST((((rt0.c0))<=((x''))) AS BLOB));
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON CAST(x'a2129e17' COLLATE BINARY AS INTEGER) CROSS JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((rt0.c2) IS FALSE)) ORDER BY (('*x') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON CAST(x'a2129e17' COLLATE BINARY AS INTEGER) CROSS JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY (('*x') NOTNULL) ASC);
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON CAST(x'a2129e17' COLLATE BINARY AS INTEGER) CROSS JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON vt0.c0 WHERE (((rt0.c2) IS FALSE)) ORDER BY (('*x') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON CAST(x'a2129e17' COLLATE BINARY AS INTEGER) CROSS JOIN v0 ON CAST(((rt0.c2) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON vt0.c0 ORDER BY (('*x') NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0, vt1 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN json_array_length(0.3732126063378849, vt1.c0) ELSE ((v0.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS TRUE) THEN json_array_length(0.3732126063378849, vt1.c0) ELSE ((v0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0, vt1 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN json_array_length(0.3732126063378849, vt1.c0) ELSE ((v0.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS TRUE) THEN json_array_length(0.3732126063378849, vt1.c0) ELSE ((v0.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0, t0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0, vt1 WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN json_array_length(0.3732126063378849, vt1.c0) ELSE ((v0.c0)>(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS NUMERIC));
SELECT ALL * FROM v0, rt0, t0, vt1 WHERE ((((v0.c0)) BETWEEN ((NULL COLLATE RTRIM)) AND (((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((NULL COLLATE RTRIM)) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0, rt0, t0, vt1);
SELECT ALL * FROM v0, rt0, t0, vt1 WHERE ((((v0.c0)) BETWEEN ((NULL COLLATE RTRIM)) AND (((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((NULL COLLATE RTRIM)) AND (((- (v0.c0)))))) IS TRUE)  as count FROM v0, rt0, t0, vt1);
SELECT ALL * FROM v0, rt0, t0, vt1 WHERE ((((v0.c0)) BETWEEN ((NULL COLLATE RTRIM)) AND (((- (v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON ((vt1.c0)>>(rt0.c1)) COLLATE BINARY WHERE ((((rt0.c2 COLLATE NOCASE))>(((((vt1.c0))<=((x'e80e')))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))>(((((vt1.c0))<=((x'e80e'))))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON ((vt1.c0)>>(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON ((vt1.c0)>>(rt0.c1)) COLLATE BINARY WHERE ((((rt0.c2 COLLATE NOCASE))>(((((vt1.c0))<=((x'e80e')))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))>(((((vt1.c0))<=((x'e80e'))))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt1 ON ((vt1.c0)>>(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, rt0 INNER JOIN vt1 ON ((vt1.c0)>>(rt0.c1)) COLLATE BINARY WHERE ((((rt0.c2 COLLATE NOCASE))>(((((vt1.c0))<=((x'e80e')))))));
SELECT ALL * FROM vt1 WHERE (HEX((('1947059743') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((('1947059743') BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (HEX((('1947059743') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((('1947059743') BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (HEX((('1947059743') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c0)GLOB(vt0.c0)))) AND ((((t0.c65)<<(v0.c0))))) WHERE (((rt0.c1)*(((t0.c69)<=(rt0.c1))))) ORDER BY ((((t0.c90 IN ()), 0xffffffffe3ea6140, CAST(t0.c65 AS TEXT)))>=(((x'' IN ()), (~ (vt0.c0)), (vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)*(((t0.c69)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c0)GLOB(vt0.c0)))) AND ((((t0.c65)<<(v0.c0))))) ORDER BY ((((t0.c90 IN ()), 0xffffffffe3ea6140, CAST(t0.c65 AS TEXT)))>=(((x'' IN ()), (~ (vt0.c0)), (vt0.c1 IN ())))));
SELECT ALL * FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c0)GLOB(vt0.c0)))) AND ((((t0.c65)<<(v0.c0))))) WHERE (((rt0.c1)*(((t0.c69)<=(rt0.c1))))) ORDER BY ((((t0.c90 IN ()), 0xffffffffe3ea6140, CAST(t0.c65 AS TEXT)))>=(((x'' IN ()), (~ (vt0.c0)), (vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)*(((t0.c69)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c0)GLOB(vt0.c0)))) AND ((((t0.c65)<<(v0.c0))))) ORDER BY ((((t0.c90 IN ()), 0xffffffffe3ea6140, CAST(t0.c65 AS TEXT)))>=(((x'' IN ()), (~ (vt0.c0)), (vt0.c1 IN ())))));
SELECT ALL * FROM rt0, v0, vt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c0)GLOB(vt0.c0)))) AND ((((t0.c65)<<(v0.c0))))) WHERE (((rt0.c1)*(((t0.c69)<=(rt0.c1))))) ORDER BY ((((t0.c90 IN ()), 0xffffffffe3ea6140, CAST(t0.c65 AS TEXT)))>=(((x'' IN ()), (~ (vt0.c0)), (vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB) WHERE ((((((((((vt0.c1 IN (vt1.c0)))OR(((vt0.c0)OR(vt1.c0)))))AND(vt1.c0)))AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY CASE WHEN '-2113330504' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN (vt1.c0)))OR(((vt0.c0)OR(vt1.c0)))))AND(vt1.c0)))AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB) ORDER BY CASE WHEN '-2113330504' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt1.c0 END DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB) WHERE ((((((((((vt0.c1 IN (vt1.c0)))OR(((vt0.c0)OR(vt1.c0)))))AND(vt1.c0)))AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY CASE WHEN '-2113330504' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN (vt1.c0)))OR(((vt0.c0)OR(vt1.c0)))))AND(vt1.c0)))AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB) ORDER BY CASE WHEN '-2113330504' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt1.c0 END DESC);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS BLOB) WHERE ((((((((((vt0.c1 IN (vt1.c0)))OR(((vt0.c0)OR(vt1.c0)))))AND(vt1.c0)))AND((vt0.c0 IN (vt0.c1, vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY CASE WHEN '-2113330504' THEN ((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) WHEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt1.c0 END DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (CAST(t0.c69 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (CAST(t0.c69 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (CAST(t0.c69 AS NUMERIC))));
SELECT * FROM v0, t0 INNER JOIN vt0 ON CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS REAL) END FULL OUTER JOIN vt1 ON (((((t0.c69)) NOT BETWEEN ((v0.c0)) AND ((t0.c65)))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)-(t0.c90)))) LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((rt0.c1) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS REAL) END FULL OUTER JOIN vt1 ON (((((t0.c69)) NOT BETWEEN ((v0.c0)) AND ((t0.c65)))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)-(t0.c90)))) LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) ORDER BY ((rt0.c1) IS FALSE) DESC  NULLS LAST);
SELECT * FROM v0, t0 INNER JOIN vt0 ON CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS REAL) END FULL OUTER JOIN vt1 ON (((((t0.c69)) NOT BETWEEN ((v0.c0)) AND ((t0.c65)))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)-(t0.c90)))) LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((rt0.c1) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM v0, t0 INNER JOIN vt0 ON CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS REAL) END FULL OUTER JOIN vt1 ON (((((t0.c69)) NOT BETWEEN ((v0.c0)) AND ((t0.c65)))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)-(t0.c90)))) LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) ORDER BY ((rt0.c1) IS FALSE) DESC  NULLS LAST);
SELECT * FROM v0, t0 INNER JOIN vt0 ON CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS REAL) END FULL OUTER JOIN vt1 ON (((((t0.c69)) NOT BETWEEN ((v0.c0)) AND ((t0.c65)))) BETWEEN (((((vt0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)-(t0.c90)))) LEFT OUTER JOIN rt0 ON (+ (((rt0.c0) NOTNULL))) WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((rt0.c1) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (CASE t0.c65  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t0.c65  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (CASE t0.c65  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t0.c65  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (CASE t0.c65  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0, v0 WHERE (((CASE WHEN t0.c65 THEN rt0.c0 END) NOT BETWEEN (vt0.c1) AND ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c65 THEN rt0.c0 END) NOT BETWEEN (vt0.c1) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0, v0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0, v0 WHERE (((CASE WHEN t0.c65 THEN rt0.c0 END) NOT BETWEEN (vt0.c1) AND ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c65 THEN rt0.c0 END) NOT BETWEEN (vt0.c1) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0, v0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0, v0 WHERE (((CASE WHEN t0.c65 THEN rt0.c0 END) NOT BETWEEN (vt0.c1) AND ((NOT (rt0.c0)))));
SELECT ALL * FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON (((~ (t0.c90))) BETWEEN (((((vt1.c0)OR(t0.c65)))AND(t0.c69))) AND ((NOT (rt0.c2)))) WHERE (((((((t0.c69) BETWEEN (t0.c69) AND (t0.c69)))AND(LOWER(vt0.c0))))OR(vt1.c0))) ORDER BY ((((((((((t0.c90)AND(rt0.c2)))AND(t0.c65)))AND(rt0.c1)))AND(rt0.c1)))IS NOT((- (t0.c69)))) ASC  NULLS LAST, ((((vt0.c1)+(rt0.c1)))>=((rt0.c2 IN ()))) DESC, CASE t0.c69  WHEN rt0.c2 THEN -1718755382 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c69) BETWEEN (t0.c69) AND (t0.c69)))AND(LOWER(vt0.c0))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON (((~ (t0.c90))) BETWEEN (((((vt1.c0)OR(t0.c65)))AND(t0.c69))) AND ((NOT (rt0.c2)))) ORDER BY ((((((((((t0.c90)AND(rt0.c2)))AND(t0.c65)))AND(rt0.c1)))AND(rt0.c1)))IS NOT((- (t0.c69)))) ASC  NULLS LAST, ((((vt0.c1)+(rt0.c1)))>=((rt0.c2 IN ()))) DESC, CASE t0.c69  WHEN rt0.c2 THEN -1718755382 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON (((~ (t0.c90))) BETWEEN (((((vt1.c0)OR(t0.c65)))AND(t0.c69))) AND ((NOT (rt0.c2)))) WHERE (((((((t0.c69) BETWEEN (t0.c69) AND (t0.c69)))AND(LOWER(vt0.c0))))OR(vt1.c0))) ORDER BY ((((((((((t0.c90)AND(rt0.c2)))AND(t0.c65)))AND(rt0.c1)))AND(rt0.c1)))IS NOT((- (t0.c69)))) ASC  NULLS LAST, ((((vt0.c1)+(rt0.c1)))>=((rt0.c2 IN ()))) DESC, CASE t0.c69  WHEN rt0.c2 THEN -1718755382 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c69) BETWEEN (t0.c69) AND (t0.c69)))AND(LOWER(vt0.c0))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON (((~ (t0.c90))) BETWEEN (((((vt1.c0)OR(t0.c65)))AND(t0.c69))) AND ((NOT (rt0.c2)))) ORDER BY ((((((((((t0.c90)AND(rt0.c2)))AND(t0.c65)))AND(rt0.c1)))AND(rt0.c1)))IS NOT((- (t0.c69)))) ASC  NULLS LAST, ((((vt0.c1)+(rt0.c1)))>=((rt0.c2 IN ()))) DESC, CASE t0.c69  WHEN rt0.c2 THEN -1718755382 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON (((~ (t0.c90))) BETWEEN (((((vt1.c0)OR(t0.c65)))AND(t0.c69))) AND ((NOT (rt0.c2)))) WHERE (((((((t0.c69) BETWEEN (t0.c69) AND (t0.c69)))AND(LOWER(vt0.c0))))OR(vt1.c0))) ORDER BY ((((((((((t0.c90)AND(rt0.c2)))AND(t0.c65)))AND(rt0.c1)))AND(rt0.c1)))IS NOT((- (t0.c69)))) ASC  NULLS LAST, ((((vt0.c1)+(rt0.c1)))>=((rt0.c2 IN ()))) DESC, CASE t0.c69  WHEN rt0.c2 THEN -1718755382 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c69)) NOT BETWEEN ((((t0.c69)/(t0.c69)))) AND ((CASE t0.c90  WHEN t0.c90 THEN t0.c65 ELSE t0.c65 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c69)) NOT BETWEEN ((((t0.c69)/(t0.c69)))) AND ((CASE t0.c90  WHEN t0.c90 THEN t0.c65 ELSE t0.c65 END)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c69)) NOT BETWEEN ((((t0.c69)/(t0.c69)))) AND ((CASE t0.c90  WHEN t0.c90 THEN t0.c65 ELSE t0.c65 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c69)) NOT BETWEEN ((((t0.c69)/(t0.c69)))) AND ((CASE t0.c90  WHEN t0.c90 THEN t0.c65 ELSE t0.c65 END)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c69)) NOT BETWEEN ((((t0.c69)/(t0.c69)))) AND ((CASE t0.c90  WHEN t0.c90 THEN t0.c65 ELSE t0.c65 END))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((CAST(rt0.c0 AS REAL) IN (((vt0.c0) IS FALSE), ((rt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN (((vt0.c0) IS FALSE), ((rt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((CAST(rt0.c0 AS REAL) IN (((vt0.c0) IS FALSE), ((rt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN (((vt0.c0) IS FALSE), ((rt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((CAST(rt0.c0 AS REAL) IN (((vt0.c0) IS FALSE), ((rt0.c0)<(vt0.c0)))));
SELECT ALL * FROM vt1, v0 WHERE (TIME(CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE -2.113330504E9 END, (vt1.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END, (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), LAST_INSERT_ROWID())) ORDER BY '' ASC, TYPEOF(CAST(vt1.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE -2.113330504E9 END, (vt1.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END, (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), LAST_INSERT_ROWID())) IS TRUE)  as count FROM vt1, v0 ORDER BY '' ASC, TYPEOF(CAST(vt1.c0 AS BLOB)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE (TIME(CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE -2.113330504E9 END, (vt1.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END, (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), LAST_INSERT_ROWID())) ORDER BY '' ASC, TYPEOF(CAST(vt1.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE -2.113330504E9 END, (vt1.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END, (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), LAST_INSERT_ROWID())) IS TRUE)  as count FROM vt1, v0 ORDER BY '' ASC, TYPEOF(CAST(vt1.c0 AS BLOB)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 WHERE (TIME(CASE v0.c0  WHEN NULL THEN vt1.c0 ELSE -2.113330504E9 END, (vt1.c0 IN ()), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END, (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), LAST_INSERT_ROWID())) ORDER BY '' ASC, TYPEOF(CAST(vt1.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT * FROM vt0, v0, t0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN ((((v0.c0)) BETWEEN ((t0.c65)) AND ((t0.c90)))) AND (((v0.c0)%(t0.c69))))) ORDER BY (t0.c69 IN (t0.c69)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) BETWEEN ((((v0.c0)) BETWEEN ((t0.c65)) AND ((t0.c90)))) AND (((v0.c0)%(t0.c69))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (t0.c69 IN (t0.c69)) COLLATE BINARY DESC);
SELECT * FROM vt0, v0, t0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN ((((v0.c0)) BETWEEN ((t0.c65)) AND ((t0.c90)))) AND (((v0.c0)%(t0.c69))))) ORDER BY (t0.c69 IN (t0.c69)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) BETWEEN ((((v0.c0)) BETWEEN ((t0.c65)) AND ((t0.c90)))) AND (((v0.c0)%(t0.c69))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (t0.c69 IN (t0.c69)) COLLATE BINARY DESC);
SELECT * FROM vt0, v0, t0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN ((((v0.c0)) BETWEEN ((t0.c65)) AND ((t0.c90)))) AND (((v0.c0)%(t0.c69))))) ORDER BY (t0.c69 IN (t0.c69)) COLLATE BINARY DESC;
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN TYPEOF(vt1.c0) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c2 COLLATE BINARY THEN CAST('186173626' AS REAL) ELSE CASE vt0.c1  WHEN NULL THEN x'' END END LEFT OUTER JOIN vt1 ON (((NOT (rt0.c2)))&((rt0.c1 IN ()))) WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN TYPEOF(vt1.c0) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c2 COLLATE BINARY THEN CAST('186173626' AS REAL) ELSE CASE vt0.c1  WHEN NULL THEN x'' END END LEFT OUTER JOIN vt1 ON (((NOT (rt0.c2)))&((rt0.c1 IN ()))));
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN TYPEOF(vt1.c0) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c2 COLLATE BINARY THEN CAST('186173626' AS REAL) ELSE CASE vt0.c1  WHEN NULL THEN x'' END END LEFT OUTER JOIN vt1 ON (((NOT (rt0.c2)))&((rt0.c1 IN ()))) WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN TYPEOF(vt1.c0) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c2 COLLATE BINARY THEN CAST('186173626' AS REAL) ELSE CASE vt0.c1  WHEN NULL THEN x'' END END LEFT OUTER JOIN vt1 ON (((NOT (rt0.c2)))&((rt0.c1 IN ()))));
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN TYPEOF(vt1.c0) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c2 COLLATE BINARY THEN CAST('186173626' AS REAL) ELSE CASE vt0.c1  WHEN NULL THEN x'' END END LEFT OUTER JOIN vt1 ON (((NOT (rt0.c2)))&((rt0.c1 IN ()))) WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(((t0.c90)IS(t0.c69)))) ORDER BY (((t0.c69 IN ()))>>(0X538cfbbe)) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((t0.c90)IS(t0.c69)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c69 IN ()))>>(0X538cfbbe)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(((t0.c90)IS(t0.c69)))) ORDER BY (((t0.c69 IN ()))>>(0X538cfbbe)) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((t0.c90)IS(t0.c69)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c69 IN ()))>>(0X538cfbbe)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (UPPER(((t0.c90)IS(t0.c69)))) ORDER BY (((t0.c69 IN ()))>>(0X538cfbbe)) DESC;
SELECT * FROM vt1, v0, vt0, rt0, t0 WHERE (((((t0.c65) ISNULL))+(((((rt0.c1)OR(rt0.c0)))AND(v0.c0))))) ORDER BY '61743038' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c65) ISNULL))+(((((rt0.c1)OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0, rt0, t0 ORDER BY '61743038' ASC);
SELECT * FROM vt1, v0, vt0, rt0, t0 WHERE (((((t0.c65) ISNULL))+(((((rt0.c1)OR(rt0.c0)))AND(v0.c0))))) ORDER BY '61743038' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c65) ISNULL))+(((((rt0.c1)OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0, rt0, t0 ORDER BY '61743038' ASC);
SELECT * FROM vt1, v0, vt0, rt0, t0 WHERE (((((t0.c65) ISNULL))+(((((rt0.c1)OR(rt0.c0)))AND(v0.c0))))) ORDER BY '61743038' ASC;
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((- (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, t0, vt1, v0, rt0 NOT INDEXED WHERE (SUBSTR(((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c1)), ((t0.c69) IS FALSE))) ORDER BY ((CAST(t0.c65 AS NUMERIC))<=(((((((((t0.c65)AND(v0.c0)))AND(t0.c69)))AND(rt0.c0)))AND(t0.c69)))) ASC  NULLS FIRST, HEX(x'') COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c1)), ((t0.c69) IS FALSE))) IS TRUE)  as count FROM vt0, t0, vt1, v0, rt0 ORDER BY ((CAST(t0.c65 AS NUMERIC))<=(((((((((t0.c65)AND(v0.c0)))AND(t0.c69)))AND(rt0.c0)))AND(t0.c69)))) ASC  NULLS FIRST, HEX(x'') COLLATE NOCASE);
SELECT * FROM vt0, t0, vt1, v0, rt0 NOT INDEXED WHERE (SUBSTR(((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c1)), ((t0.c69) IS FALSE))) ORDER BY ((CAST(t0.c65 AS NUMERIC))<=(((((((((t0.c65)AND(v0.c0)))AND(t0.c69)))AND(rt0.c0)))AND(t0.c69)))) ASC  NULLS FIRST, HEX(x'') COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c1)), ((t0.c69) IS FALSE))) IS TRUE)  as count FROM vt0, t0, vt1, v0, rt0 ORDER BY ((CAST(t0.c65 AS NUMERIC))<=(((((((((t0.c65)AND(v0.c0)))AND(t0.c69)))AND(rt0.c0)))AND(t0.c69)))) ASC  NULLS FIRST, HEX(x'') COLLATE NOCASE);
SELECT * FROM vt0, t0, vt1, v0, rt0 NOT INDEXED WHERE (SUBSTR(((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c1)), ((t0.c69) IS FALSE))) ORDER BY ((CAST(t0.c65 AS NUMERIC))<=(((((((((t0.c65)AND(v0.c0)))AND(t0.c69)))AND(rt0.c0)))AND(t0.c69)))) ASC  NULLS FIRST, HEX(x'') COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c65)>=(t0.c69)) THEN CAST(vt0.c1 AS TEXT) WHEN ((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) THEN ((vt0.c1) NOTNULL) WHEN CAST(t0.c69 AS BLOB) THEN vt1.c0 END WHERE ((~ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c65)>=(t0.c69)) THEN CAST(vt0.c1 AS TEXT) WHEN ((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) THEN ((vt0.c1) NOTNULL) WHEN CAST(t0.c69 AS BLOB) THEN vt1.c0 END);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c65)>=(t0.c69)) THEN CAST(vt0.c1 AS TEXT) WHEN ((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) THEN ((vt0.c1) NOTNULL) WHEN CAST(t0.c69 AS BLOB) THEN vt1.c0 END WHERE ((~ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c65)>=(t0.c69)) THEN CAST(vt0.c1 AS TEXT) WHEN ((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) THEN ((vt0.c1) NOTNULL) WHEN CAST(t0.c69 AS BLOB) THEN vt1.c0 END);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON CASE WHEN ((t0.c65)>=(t0.c69)) THEN CAST(vt0.c1 AS TEXT) WHEN ((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) THEN ((vt0.c1) NOTNULL) WHEN CAST(t0.c69 AS BLOB) THEN vt1.c0 END WHERE ((~ ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON vt1.c0 RIGHT OUTER JOIN t0 ON JULIANDAY(((t0.c65) IS TRUE), (((t0.c69))>((t0.c69))), v0.c0 COLLATE NOCASE) LEFT OUTER JOIN rt0 ON CAST(CASE vt0.c0  WHEN t0.c69 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c69 WHEN NULL THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS NUMERIC) WHERE (CASE WHEN ((NULL)>>(rt0.c2)) THEN rt0.c0 END) ORDER BY (((vt0.c0)IS NOT(0.1975941243222893)) IN ()) ASC, (((- (t0.c69)))>>(((vt1.c0)%(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)>>(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON vt1.c0 RIGHT OUTER JOIN t0 ON JULIANDAY(((t0.c65) IS TRUE), (((t0.c69))>((t0.c69))), v0.c0 COLLATE NOCASE) LEFT OUTER JOIN rt0 ON CAST(CASE vt0.c0  WHEN t0.c69 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c69 WHEN NULL THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS NUMERIC) ORDER BY (((vt0.c0)IS NOT(0.1975941243222893)) IN ()) ASC, (((- (t0.c69)))>>(((vt1.c0)%(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON vt1.c0 RIGHT OUTER JOIN t0 ON JULIANDAY(((t0.c65) IS TRUE), (((t0.c69))>((t0.c69))), v0.c0 COLLATE NOCASE) LEFT OUTER JOIN rt0 ON CAST(CASE vt0.c0  WHEN t0.c69 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c69 WHEN NULL THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS NUMERIC) WHERE (CASE WHEN ((NULL)>>(rt0.c2)) THEN rt0.c0 END) ORDER BY (((vt0.c0)IS NOT(0.1975941243222893)) IN ()) ASC, (((- (t0.c69)))>>(((vt1.c0)%(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)>>(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON vt1.c0 RIGHT OUTER JOIN t0 ON JULIANDAY(((t0.c65) IS TRUE), (((t0.c69))>((t0.c69))), v0.c0 COLLATE NOCASE) LEFT OUTER JOIN rt0 ON CAST(CASE vt0.c0  WHEN t0.c69 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c69 WHEN NULL THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS NUMERIC) ORDER BY (((vt0.c0)IS NOT(0.1975941243222893)) IN ()) ASC, (((- (t0.c69)))>>(((vt1.c0)%(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON vt1.c0 RIGHT OUTER JOIN t0 ON JULIANDAY(((t0.c65) IS TRUE), (((t0.c69))>((t0.c69))), v0.c0 COLLATE NOCASE) LEFT OUTER JOIN rt0 ON CAST(CASE vt0.c0  WHEN t0.c69 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c69 WHEN NULL THEN v0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS NUMERIC) WHERE (CASE WHEN ((NULL)>>(rt0.c2)) THEN rt0.c0 END) ORDER BY (((vt0.c0)IS NOT(0.1975941243222893)) IN ()) ASC, (((- (t0.c69)))>>(((vt1.c0)%(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i1 WHERE (((NULLIF(vt0.c0, 0.01828596193063059)) NOT BETWEEN ((('1043589151') NOTNULL)) AND (((x'') BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, 0.01828596193063059)) NOT BETWEEN ((('1043589151') NOTNULL)) AND (((x'') BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i1 ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i1 WHERE (((NULLIF(vt0.c0, 0.01828596193063059)) NOT BETWEEN ((('1043589151') NOTNULL)) AND (((x'') BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, 0.01828596193063059)) NOT BETWEEN ((('1043589151') NOTNULL)) AND (((x'') BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i1 ORDER BY ((vt0.c0) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS INTEGER)  WHEN ((t0.c69)|(t0.c65)) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1)||(t0.c90)) END LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN ((NULL) NOT BETWEEN (t0.c69) AND (t0.c65)) WHEN (- (t0.c65)) THEN ((rt0.c2)*(t0.c90)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) ISNULL) END WHERE (((vt1.c0 COLLATE NOCASE)OR(TRIM(DISTINCT rt0.c2, rt0.c0)))) ORDER BY CASE '1947059743'  WHEN (t0.c90 IN ()) THEN CASE t0.c90  WHEN t0.c69 THEN t0.c69 ELSE rt0.c0 END ELSE x'' END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)OR(TRIM(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS INTEGER)  WHEN ((t0.c69)|(t0.c65)) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1)||(t0.c90)) END LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN ((NULL) NOT BETWEEN (t0.c69) AND (t0.c65)) WHEN (- (t0.c65)) THEN ((rt0.c2)*(t0.c90)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) ISNULL) END ORDER BY CASE '1947059743'  WHEN (t0.c90 IN ()) THEN CASE t0.c90  WHEN t0.c69 THEN t0.c69 ELSE rt0.c0 END ELSE x'' END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS INTEGER)  WHEN ((t0.c69)|(t0.c65)) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1)||(t0.c90)) END LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN ((NULL) NOT BETWEEN (t0.c69) AND (t0.c65)) WHEN (- (t0.c65)) THEN ((rt0.c2)*(t0.c90)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) ISNULL) END WHERE (((vt1.c0 COLLATE NOCASE)OR(TRIM(DISTINCT rt0.c2, rt0.c0)))) ORDER BY CASE '1947059743'  WHEN (t0.c90 IN ()) THEN CASE t0.c90  WHEN t0.c69 THEN t0.c69 ELSE rt0.c0 END ELSE x'' END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)OR(TRIM(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS INTEGER)  WHEN ((t0.c69)|(t0.c65)) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c1)||(t0.c90)) END LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0) NOT NULL) THEN ((NULL) NOT BETWEEN (t0.c69) AND (t0.c65)) WHEN (- (t0.c65)) THEN ((rt0.c2)*(t0.c90)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c1) ISNULL) END ORDER BY CASE '1947059743'  WHEN (t0.c90 IN ()) THEN CASE t0.c90  WHEN t0.c69 THEN t0.c69 ELSE rt0.c0 END ELSE x'' END);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (0xffffffffb6540d49) AND (t0.c90)))>>((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, t0.c69, t0.c65))))) INNER JOIN rt0 ON ((CAST(t0.c65 AS INTEGER)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON 0.3790125218653895 WHERE (CASE ((t0.c90)OR(vt0.c1))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) THEN t0.c65 END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c90)OR(vt0.c1))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) THEN t0.c65 END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (0xffffffffb6540d49) AND (t0.c90)))>>((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, t0.c69, t0.c65))))) INNER JOIN rt0 ON ((CAST(t0.c65 AS INTEGER)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON 0.3790125218653895);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (0xffffffffb6540d49) AND (t0.c90)))>>((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, t0.c69, t0.c65))))) INNER JOIN rt0 ON ((CAST(t0.c65 AS INTEGER)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON 0.3790125218653895 WHERE (CASE ((t0.c90)OR(vt0.c1))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) THEN t0.c65 END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c90)OR(vt0.c1))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) THEN t0.c65 END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (0xffffffffb6540d49) AND (t0.c90)))>>((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, t0.c69, t0.c65))))) INNER JOIN rt0 ON ((CAST(t0.c65 AS INTEGER)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON 0.3790125218653895);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (0xffffffffb6540d49) AND (t0.c90)))>>((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((vt0.c1, vt1.c0, x'')) AND ((rt0.c2, t0.c69, t0.c65))))) INNER JOIN rt0 ON ((CAST(t0.c65 AS INTEGER)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON 0.3790125218653895 WHERE (CASE ((t0.c90)OR(vt0.c1))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) THEN t0.c65 END);
SELECT ALL * FROM vt1, v0 WHERE ((+ (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((+ (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((+ (CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c90)IS NOT(t0.c69)) IN ())) ORDER BY t0.c90  NULLS FIRST, (+ (((t0.c69)IS(t0.c69)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c90)IS NOT(t0.c69)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c90  NULLS FIRST, (+ (((t0.c69)IS(t0.c69)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c90)IS NOT(t0.c69)) IN ())) ORDER BY t0.c90  NULLS FIRST, (+ (((t0.c69)IS(t0.c69)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c90)IS NOT(t0.c69)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c90  NULLS FIRST, (+ (((t0.c69)IS(t0.c69)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c90)IS NOT(t0.c69)) IN ())) ORDER BY t0.c90  NULLS FIRST, (+ (((t0.c69)IS(t0.c69)))) ASC  NULLS FIRST;
SELECT * FROM v0, vt1, vt0, rt0 WHERE (((((((rt0.c2) ISNULL))AND(CAST(NULL AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))AND(CAST(NULL AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT * FROM v0, vt1, vt0, rt0 WHERE (((((((rt0.c2) ISNULL))AND(CAST(NULL AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))AND(CAST(NULL AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT * FROM v0, vt1, vt0, rt0 WHERE (((((((rt0.c2) ISNULL))AND(CAST(NULL AS NUMERIC))))OR(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END)));
SELECT ALL * FROM vt0, rt0, vt1, t0, v0 WHERE ((CASE WHEN vt0.c1 THEN t0.c90 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN t0.c90 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0, v0);
SELECT ALL * FROM vt0, rt0, vt1, t0, v0 WHERE ((CASE WHEN vt0.c1 THEN t0.c90 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN t0.c90 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0, v0);
SELECT ALL * FROM vt0, rt0, vt1, t0, v0 WHERE ((CASE WHEN vt0.c1 THEN t0.c90 ELSE vt0.c1 END IN ()));
SELECT COUNT(*) FROM v0, vt0, vt1, t0 WHERE (CAST(0.1300671267632021 AS INTEGER) COLLATE BINARY) ORDER BY ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))) DESC  NULLS LAST, CASE WHEN (((vt1.c0))<>((vt0.c1))) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.1300671267632021 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))) DESC  NULLS LAST, CASE WHEN (((vt1.c0))<>((vt0.c1))) THEN NULL END);
SELECT COUNT(*) FROM v0, vt0, vt1, t0 WHERE (CAST(0.1300671267632021 AS INTEGER) COLLATE BINARY) ORDER BY ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))) DESC  NULLS LAST, CASE WHEN (((vt1.c0))<>((vt0.c1))) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.1300671267632021 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, vt1, t0 ORDER BY ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))) DESC  NULLS LAST, CASE WHEN (((vt1.c0))<>((vt0.c1))) THEN NULL END);
SELECT COUNT(*) FROM v0, vt0, vt1, t0 WHERE (CAST(0.1300671267632021 AS INTEGER) COLLATE BINARY) ORDER BY ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NOT (vt0.c1))) AND ((- (vt0.c1)))) DESC  NULLS LAST, CASE WHEN (((vt1.c0))<>((vt0.c1))) THEN NULL END;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.6736037866852005)) ORDER BY ((rt0.c1 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.6736037866852005)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1 COLLATE NOCASE) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.6736037866852005)) ORDER BY ((rt0.c1 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.6736037866852005)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c1 COLLATE NOCASE) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c0) NOTNULL), 0.6736037866852005)) ORDER BY ((rt0.c1 COLLATE NOCASE) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED, vt0, t0 WHERE ((~ ('^y')) COLLATE BINARY) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('^y')) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, t0 WHERE ((~ ('^y')) COLLATE BINARY) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('^y')) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED, vt0, t0 WHERE ((~ ('^y')) COLLATE BINARY) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY (NOT (t0.c90 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (NOT (t0.c90 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY (NOT (t0.c90 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (NOT (t0.c90 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0) ORDER BY (NOT (t0.c90 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT NULL));
SELECT ALL * FROM t0 NOT INDEXED, v0, rt0, vt0 WHERE ((('2047118841') NOT BETWEEN (CASE WHEN t0.c90 THEN rt0.c0 WHEN vt0.c1 THEN NULL WHEN NULL THEN v0.c0 ELSE t0.c65 END) AND (((t0.c69) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((('2047118841') NOT BETWEEN (CASE WHEN t0.c90 THEN rt0.c0 WHEN vt0.c1 THEN NULL WHEN NULL THEN v0.c0 ELSE t0.c65 END) AND (((t0.c69) ISNULL)))) IS TRUE)  as count FROM t0, v0, rt0, vt0);
SELECT ALL * FROM t0 NOT INDEXED, v0, rt0, vt0 WHERE ((('2047118841') NOT BETWEEN (CASE WHEN t0.c90 THEN rt0.c0 WHEN vt0.c1 THEN NULL WHEN NULL THEN v0.c0 ELSE t0.c65 END) AND (((t0.c69) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((('2047118841') NOT BETWEEN (CASE WHEN t0.c90 THEN rt0.c0 WHEN vt0.c1 THEN NULL WHEN NULL THEN v0.c0 ELSE t0.c65 END) AND (((t0.c69) ISNULL)))) IS TRUE)  as count FROM t0, v0, rt0, vt0);
SELECT ALL * FROM t0 NOT INDEXED, v0, rt0, vt0 WHERE ((('2047118841') NOT BETWEEN (CASE WHEN t0.c90 THEN rt0.c0 WHEN vt0.c1 THEN NULL WHEN NULL THEN v0.c0 ELSE t0.c65 END) AND (((t0.c69) ISNULL))));
SELECT ALL * FROM rt0 WHERE ('1420826553');
SELECT SUM(count) FROM (SELECT ALL (('1420826553') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1420826553');
SELECT SUM(count) FROM (SELECT ALL (('1420826553') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1420826553');
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (((0.3732126063378849) ISNULL)) ORDER BY (((rt0.c2)=(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3732126063378849) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY (((rt0.c2)=(vt0.c1)) IN ()) ASC);
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (((0.3732126063378849) ISNULL)) ORDER BY (((rt0.c2)=(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3732126063378849) ISNULL)) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY (((rt0.c2)=(vt0.c1)) IN ()) ASC);
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (((0.3732126063378849) ISNULL)) ORDER BY (((rt0.c2)=(vt0.c1)) IN ()) ASC;
SELECT * FROM v0, vt1, t0, rt0 WHERE (v0.c0) ORDER BY ((((((rt0.c1)==('224221849')))AND((((rt0.c1))!=((t0.c69))))))OR('220757100')) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1, t0, rt0 ORDER BY ((((((rt0.c1)=('224221849')))AND((((rt0.c1))<>((t0.c69))))))OR('220757100')) ASC);
SELECT * FROM v0, vt1, t0, rt0 WHERE (v0.c0) ORDER BY ((((((rt0.c1)==('224221849')))AND((((rt0.c1))!=((t0.c69))))))OR('220757100')) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt1, t0, rt0 ORDER BY ((((((rt0.c1)=('224221849')))AND((((rt0.c1))<>((t0.c69))))))OR('220757100')) ASC);
SELECT * FROM v0, vt1, t0, rt0 WHERE (v0.c0) ORDER BY ((((((rt0.c1)==('224221849')))AND((((rt0.c1))!=((t0.c69))))))OR('220757100')) ASC;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((((NULL))<=((vt0.c0)))) NOT BETWEEN (TRIM(DISTINCT v0.c0, rt0.c1)) AND (rt0.c2 COLLATE RTRIM))) ORDER BY (- (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<=((vt0.c0)))) NOT BETWEEN (TRIM(DISTINCT v0.c0, rt0.c1)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (- (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((((NULL))<=((vt0.c0)))) NOT BETWEEN (TRIM(DISTINCT v0.c0, rt0.c1)) AND (rt0.c2 COLLATE RTRIM))) ORDER BY (- (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))<=((vt0.c0)))) NOT BETWEEN (TRIM(DISTINCT v0.c0, rt0.c1)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (- (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((((NULL))<=((vt0.c0)))) NOT BETWEEN (TRIM(DISTINCT v0.c0, rt0.c1)) AND (rt0.c2 COLLATE RTRIM))) ORDER BY (- (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))));
SELECT ALL * FROM t0 WHERE (0.5393030883755592) ORDER BY ((TYPEOF(t0.c65)) BETWEEN (t0.c69 COLLATE BINARY) AND ((((NULL))!=((t0.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((0.5393030883755592) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(t0.c65)) BETWEEN (t0.c69 COLLATE BINARY) AND ((((NULL))<>((t0.c90))))));
SELECT ALL * FROM t0 WHERE (0.5393030883755592) ORDER BY ((TYPEOF(t0.c65)) BETWEEN (t0.c69 COLLATE BINARY) AND ((((NULL))!=((t0.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((0.5393030883755592) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(t0.c65)) BETWEEN (t0.c69 COLLATE BINARY) AND ((((NULL))<>((t0.c90))))));
SELECT ALL * FROM t0 WHERE (0.5393030883755592) ORDER BY ((TYPEOF(t0.c65)) BETWEEN (t0.c69 COLLATE BINARY) AND ((((NULL))!=((t0.c90)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t0, vt1 WHERE (CASE WHEN (((vt0.c0, t0.c69, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((((((((t0.c69)AND(x'')))OR(vt0.c1)))AND(t0.c90)))OR(rt0.c1)) END) ORDER BY t0.c69 COLLATE BINARY, (~ (((((((((((((x'')OR(vt0.c1)))AND(rt0.c0)))OR(t0.c90)))OR(t0.c65)))OR(vt1.c0)))OR(rt0.c2)))) DESC, CAST((- (vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, t0.c69, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((((((((t0.c69)AND(x'')))OR(vt0.c1)))AND(t0.c90)))OR(rt0.c1)) END) IS TRUE)  as count FROM v0, vt0, rt0, t0, vt1 ORDER BY t0.c69 COLLATE BINARY, (~ (((((((((((((x'')OR(vt0.c1)))AND(rt0.c0)))OR(t0.c90)))OR(t0.c65)))OR(vt1.c0)))OR(rt0.c2)))) DESC, CAST((- (vt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t0, vt1 WHERE (CASE WHEN (((vt0.c0, t0.c69, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((((((((t0.c69)AND(x'')))OR(vt0.c1)))AND(t0.c90)))OR(rt0.c1)) END) ORDER BY t0.c69 COLLATE BINARY, (~ (((((((((((((x'')OR(vt0.c1)))AND(rt0.c0)))OR(t0.c90)))OR(t0.c65)))OR(vt1.c0)))OR(rt0.c2)))) DESC, CAST((- (vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, t0.c69, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((((((((t0.c69)AND(x'')))OR(vt0.c1)))AND(t0.c90)))OR(rt0.c1)) END) IS TRUE)  as count FROM v0, vt0, rt0, t0, vt1 ORDER BY t0.c69 COLLATE BINARY, (~ (((((((((((((x'')OR(vt0.c1)))AND(rt0.c0)))OR(t0.c90)))OR(t0.c65)))OR(vt1.c0)))OR(rt0.c2)))) DESC, CAST((- (vt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t0, vt1 WHERE (CASE WHEN (((vt0.c0, t0.c69, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((((((((t0.c69)AND(x'')))OR(vt0.c1)))AND(t0.c90)))OR(rt0.c1)) END) ORDER BY t0.c69 COLLATE BINARY, (~ (((((((((((((x'')OR(vt0.c1)))AND(rt0.c0)))OR(t0.c90)))OR(t0.c65)))OR(vt1.c0)))OR(rt0.c2)))) DESC, CAST((- (vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0, vt1, t0 WHERE (((((rt0.c2)<(vt1.c0))) IS TRUE)) ORDER BY (CASE WHEN t0.c69 THEN rt0.c1 WHEN rt0.c0 THEN x'ff0c' WHEN rt0.c1 THEN v0.c0 END IN (((t0.c90)>(vt1.c0)))), ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NULL IN ())) AND (rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0, vt1, t0 ORDER BY (CASE WHEN t0.c69 THEN rt0.c1 WHEN rt0.c0 THEN x'ff0c' WHEN rt0.c1 THEN v0.c0 END IN (((t0.c90)>(vt1.c0)))), ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NULL IN ())) AND (rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0, rt0, vt1, t0 WHERE (((((rt0.c2)<(vt1.c0))) IS TRUE)) ORDER BY (CASE WHEN t0.c69 THEN rt0.c1 WHEN rt0.c0 THEN x'ff0c' WHEN rt0.c1 THEN v0.c0 END IN (((t0.c90)>(vt1.c0)))), ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NULL IN ())) AND (rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0, vt1, t0 ORDER BY (CASE WHEN t0.c69 THEN rt0.c1 WHEN rt0.c0 THEN x'ff0c' WHEN rt0.c1 THEN v0.c0 END IN (((t0.c90)>(vt1.c0)))), ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NULL IN ())) AND (rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0, rt0, vt1, t0 WHERE (((((rt0.c2)<(vt1.c0))) IS TRUE)) ORDER BY (CASE WHEN t0.c69 THEN rt0.c1 WHEN rt0.c0 THEN x'ff0c' WHEN rt0.c1 THEN v0.c0 END IN (((t0.c90)>(vt1.c0)))), ((CAST(t0.c69 AS TEXT)) NOT BETWEEN ((NULL IN ())) AND (rt0.c2 COLLATE RTRIM));
SELECT ALL * FROM t0, vt0, vt1, v0 WHERE (((t0.c90)LIKE((((''))>=((vt0.c0)))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN ((~ (t0.c65))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c90)LIKE((((''))>=((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1, v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN ((~ (t0.c65))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1, v0 WHERE (((t0.c90)LIKE((((''))>=((vt0.c0)))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN ((~ (t0.c65))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c90)LIKE((((''))>=((vt0.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1, v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN ((~ (t0.c65))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1, v0 WHERE (((t0.c90)LIKE((((''))>=((vt0.c0)))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) BETWEEN ((~ (t0.c65))) AND (vt0.c1 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0) IS FALSE) END);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)*(rt0.c0)))<<(IFNULL(rt0.c2, rt0.c1))) INNER JOIN v0 ON ((((~ (NULL)), ((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)), ((vt0.c0) NOT NULL)))=((LIKELY(vt0.c1), (vt0.c1 IN ()), CAST(vt0.c0 AS INTEGER)))) FULL OUTER JOIN rt0 ON ((((vt0.c1)+(vt0.c1)))IS NOT(CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE (((- (vt0.c1)) IN ())) ORDER BY GLOB(((x'') BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)*(rt0.c0)))<<(IFNULL(rt0.c2, rt0.c1))) INNER JOIN v0 ON ((((~ (NULL)), ((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)), ((vt0.c0) NOT NULL)))==((LIKELY(vt0.c1), (vt0.c1 IN ()), CAST(vt0.c0 AS INTEGER)))) FULL OUTER JOIN rt0 ON ((((vt0.c1)+(vt0.c1)))IS NOT(CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) ORDER BY GLOB(((x'') BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)*(rt0.c0)))<<(IFNULL(rt0.c2, rt0.c1))) INNER JOIN v0 ON ((((~ (NULL)), ((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)), ((vt0.c0) NOT NULL)))=((LIKELY(vt0.c1), (vt0.c1 IN ()), CAST(vt0.c0 AS INTEGER)))) FULL OUTER JOIN rt0 ON ((((vt0.c1)+(vt0.c1)))IS NOT(CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) WHERE (((- (vt0.c1)) IN ())) ORDER BY GLOB(((x'') BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c0)*(rt0.c0)))<<(IFNULL(rt0.c2, rt0.c1))) INNER JOIN v0 ON ((((~ (NULL)), ((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)), ((vt0.c0) NOT NULL)))==((LIKELY(vt0.c1), (vt0.c1 IN ()), CAST(vt0.c0 AS INTEGER)))) FULL OUTER JOIN rt0 ON ((((vt0.c1)+(vt0.c1)))IS NOT(CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) ORDER BY GLOB(((x'') BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN x'a057' THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, x'', NULL))))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN x'a057' THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, x'', NULL))))))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN x'a057' THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, x'', NULL))))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN x'a057' THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, x'', NULL))))))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN x'a057' THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c2, x'', NULL))))))OR(rt0.c0)));
SELECT * FROM v0, vt0 CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)%(vt0.c1)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 1.043589151E9 WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c1) AND ('')) END WHERE (vt0.c0) ORDER BY CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)%(vt0.c1)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 1.043589151E9 WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c1) AND ('')) END ORDER BY CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT)  NULLS FIRST);
SELECT * FROM v0, vt0 CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)%(vt0.c1)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 1.043589151E9 WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c1) AND ('')) END WHERE (vt0.c0) ORDER BY CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)%(vt0.c1)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 1.043589151E9 WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c1) AND ('')) END ORDER BY CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT)  NULLS FIRST);
SELECT * FROM v0, vt0 CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)%(vt0.c1)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN 1.043589151E9 WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt0.c1) AND ('')) END WHERE (vt0.c0) ORDER BY CAST(((vt0.c1)GLOB(vt0.c1)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 LEFT OUTER JOIN v0 ON x'a937' CROSS JOIN rt0 ON rt0.c0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0, t0, vt1 LEFT OUTER JOIN v0 ON x'a937' CROSS JOIN rt0 ON rt0.c0);
SELECT ALL * FROM vt0, t0, vt1 LEFT OUTER JOIN v0 ON x'a937' CROSS JOIN rt0 ON rt0.c0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0, t0, vt1 LEFT OUTER JOIN v0 ON x'a937' CROSS JOIN rt0 ON rt0.c0);
SELECT ALL * FROM vt0, t0, vt1 LEFT OUTER JOIN v0 ON x'a937' CROSS JOIN rt0 ON rt0.c0 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL)) ISNULL)) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((((v0.c0)!=(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((((v0.c0)<>(rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL)) ISNULL)) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((((v0.c0)!=(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((((v0.c0)<>(rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) NOT NULL)) ISNULL)) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((((v0.c0)!=(rt0.c2))))) ASC;
SELECT * FROM vt0, v0 WHERE (((TRIM(vt0.c1))<<((((v0.c0, v0.c0, 'G\n'))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c1))<<((((v0.c0, v0.c0, 'G\n'))<=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((TRIM(vt0.c1))<<((((v0.c0, v0.c0, 'G\n'))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c1))<<((((v0.c0, v0.c0, 'G\n'))<=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((TRIM(vt0.c1))<<((((v0.c0, v0.c0, 'G\n'))<=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM rt0, vt0, vt1, v0, t0 WHERE (((rt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (NOT (rt0.c1))  NULLS FIRST, LIKELY(CASE x''  WHEN rt0.c2 THEN vt0.c1 ELSE t0.c65 END);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1, v0, t0 ORDER BY (NOT (rt0.c1))  NULLS FIRST, LIKELY(CASE x''  WHEN rt0.c2 THEN vt0.c1 ELSE t0.c65 END));
SELECT ALL * FROM rt0, vt0, vt1, v0, t0 WHERE (((rt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (NOT (rt0.c1))  NULLS FIRST, LIKELY(CASE x''  WHEN rt0.c2 THEN vt0.c1 ELSE t0.c65 END);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1, v0, t0 ORDER BY (NOT (rt0.c1))  NULLS FIRST, LIKELY(CASE x''  WHEN rt0.c2 THEN vt0.c1 ELSE t0.c65 END));
SELECT ALL * FROM rt0, vt0, vt1, v0, t0 WHERE (((rt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (NOT (rt0.c1))  NULLS FIRST, LIKELY(CASE x''  WHEN rt0.c2 THEN vt0.c1 ELSE t0.c65 END);
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE 0X2ccf0143  WHEN t0.c65 THEN v0.c0 WHEN v0.c0 THEN t0.c65 WHEN 0.580392527760847 THEN v0.c0 END) NOT BETWEEN ('0.3790125218653895') AND (((t0.c65) IS FALSE)))) ORDER BY (NOT ((((t0.c90)) BETWEEN ((t0.c65)) AND ((t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((CASE 0X2ccf0143  WHEN t0.c65 THEN v0.c0 WHEN v0.c0 THEN t0.c65 WHEN 0.580392527760847 THEN v0.c0 END) NOT BETWEEN ('0.3790125218653895') AND (((t0.c65) IS FALSE)))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((((t0.c90)) BETWEEN ((t0.c65)) AND ((t0.c69))))));
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE 0X2ccf0143  WHEN t0.c65 THEN v0.c0 WHEN v0.c0 THEN t0.c65 WHEN 0.580392527760847 THEN v0.c0 END) NOT BETWEEN ('0.3790125218653895') AND (((t0.c65) IS FALSE)))) ORDER BY (NOT ((((t0.c90)) BETWEEN ((t0.c65)) AND ((t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((CASE 0X2ccf0143  WHEN t0.c65 THEN v0.c0 WHEN v0.c0 THEN t0.c65 WHEN 0.580392527760847 THEN v0.c0 END) NOT BETWEEN ('0.3790125218653895') AND (((t0.c65) IS FALSE)))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((((t0.c90)) BETWEEN ((t0.c65)) AND ((t0.c69))))));
SELECT COUNT(*) FROM t0, v0 WHERE (((CASE 0X2ccf0143  WHEN t0.c65 THEN v0.c0 WHEN v0.c0 THEN t0.c65 WHEN 0.580392527760847 THEN v0.c0 END) NOT BETWEEN ('0.3790125218653895') AND (((t0.c65) IS FALSE)))) ORDER BY (NOT ((((t0.c90)) BETWEEN ((t0.c65)) AND ((t0.c69)))));
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, rt0, t0, vt1 WHERE ((~ (((v0.c0)&(t0.c90))))) ORDER BY '*x' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)&(t0.c90))))) IS TRUE)  as count FROM v0, vt0, rt0, t0, vt1 ORDER BY '*x' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, rt0, t0, vt1 WHERE ((~ (((v0.c0)&(t0.c90))))) ORDER BY '*x' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)&(t0.c90))))) IS TRUE)  as count FROM v0, vt0, rt0, t0, vt1 ORDER BY '*x' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, rt0, t0, vt1 WHERE ((~ (((v0.c0)&(t0.c90))))) ORDER BY '*x' ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((t0.c65) IS FALSE) WHERE ((TRIM(t0.c90, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c90)), (+ (t0.c90))))) ORDER BY (((((t0.c90)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (CASE WHEN t0.c69 THEN t0.c65 END) AND (t0.c65))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(t0.c90, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c90)), (+ (t0.c90))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((t0.c65) IS FALSE) ORDER BY (((((t0.c90)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (CASE WHEN t0.c69 THEN t0.c65 END) AND (t0.c65))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((t0.c65) IS FALSE) WHERE ((TRIM(t0.c90, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c90)), (+ (t0.c90))))) ORDER BY (((((t0.c90)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (CASE WHEN t0.c69 THEN t0.c65 END) AND (t0.c65))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(t0.c90, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c90)), (+ (t0.c90))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((t0.c65) IS FALSE) ORDER BY (((((t0.c90)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (CASE WHEN t0.c69 THEN t0.c65 END) AND (t0.c65))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((t0.c65) IS FALSE) WHERE ((TRIM(t0.c90, rt0.c1) IN (((vt0.c0) BETWEEN (rt0.c1) AND (t0.c90)), (+ (t0.c90))))) ORDER BY (((((t0.c90)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (CASE WHEN t0.c69 THEN t0.c65 END) AND (t0.c65))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE)) BETWEEN (load_extension(vt0.c1)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) BETWEEN (load_extension(vt0.c1)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE)) BETWEEN (load_extension(vt0.c1)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) BETWEEN (load_extension(vt0.c1)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE)) BETWEEN (load_extension(vt0.c1)) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)<(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 END)<(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)<(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c2 END)<(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END)<(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN v0 ON (t0.c69 COLLATE RTRIM IN ()) WHERE (((t0.c69)&(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c69)&(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0 RIGHT OUTER JOIN v0 ON (t0.c69 COLLATE RTRIM IN ()));
SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN v0 ON (t0.c69 COLLATE RTRIM IN ()) WHERE (((t0.c69)&(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c69)&(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0 RIGHT OUTER JOIN v0 ON (t0.c69 COLLATE RTRIM IN ()));
SELECT ALL * FROM t0, vt1, vt0 RIGHT OUTER JOIN v0 ON (t0.c69 COLLATE RTRIM IN ()) WHERE (((t0.c69)&(vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (0xfffffffff359fa7a)) INNER JOIN t0 ON CAST((((NULL, x'b8d9', v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c65)) AND ((v0.c0, vt0.c0, t0.c90))) AS REAL) WHERE (-120905205) ORDER BY LIKELY((('')!=(t0.c90)));
SELECT SUM(count) FROM (SELECT ALL ((-120905205) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (0Xfffffffff359fa7a)) INNER JOIN t0 ON CAST((((NULL, x'b8d9', v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c65)) AND ((v0.c0, vt0.c0, t0.c90))) AS REAL) ORDER BY LIKELY((('')<>(t0.c90))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (0xfffffffff359fa7a)) INNER JOIN t0 ON CAST((((NULL, x'b8d9', v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c65)) AND ((v0.c0, vt0.c0, t0.c90))) AS REAL) WHERE (-120905205) ORDER BY LIKELY((('')!=(t0.c90)));
SELECT SUM(count) FROM (SELECT ALL ((-120905205) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (0Xfffffffff359fa7a)) INNER JOIN t0 ON CAST((((NULL, x'b8d9', v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c65)) AND ((v0.c0, vt0.c0, t0.c90))) AS REAL) ORDER BY LIKELY((('')<>(t0.c90))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (NOT (0xfffffffff359fa7a)) INNER JOIN t0 ON CAST((((NULL, x'b8d9', v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, t0.c65)) AND ((v0.c0, vt0.c0, t0.c90))) AS REAL) WHERE (-120905205) ORDER BY LIKELY((('')!=(t0.c90)));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (NULLIF(DISTINCT 0.7795969084675726, vt1.c0)) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (NULLIF(DISTINCT 0.7795969084675726, vt1.c0)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (NULLIF(DISTINCT 0.7795969084675726, vt1.c0)) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (NULLIF(DISTINCT 0.7795969084675726, vt1.c0)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (NULLIF(DISTINCT 0.7795969084675726, vt1.c0)) AND (vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((-1627232048) ISNULL))OR((NULL IN ()))))AND(CAST(rt0.c0 AS BLOB))))AND(((((rt0.c2)AND(v0.c0)))AND(rt0.c1)))))OR(-614081069))) ORDER BY ((((v0.c0)+(rt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((-1627232048) ISNULL))OR((NULL IN ()))))AND(CAST(rt0.c0 AS BLOB))))AND(((((rt0.c2)AND(v0.c0)))AND(rt0.c1)))))OR(-614081069))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)+(rt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((-1627232048) ISNULL))OR((NULL IN ()))))AND(CAST(rt0.c0 AS BLOB))))AND(((((rt0.c2)AND(v0.c0)))AND(rt0.c1)))))OR(-614081069))) ORDER BY ((((v0.c0)+(rt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((-1627232048) ISNULL))OR((NULL IN ()))))AND(CAST(rt0.c0 AS BLOB))))AND(((((rt0.c2)AND(v0.c0)))AND(rt0.c1)))))OR(-614081069))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0)+(rt0.c2))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((-1627232048) ISNULL))OR((NULL IN ()))))AND(CAST(rt0.c0 AS BLOB))))AND(((((rt0.c2)AND(v0.c0)))AND(rt0.c1)))))OR(-614081069))) ORDER BY ((((v0.c0)+(rt0.c2))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MAX(t0.c69, (NOT (rt0.c1))) CROSS JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((((t0.c69, vt1.c0, vt0.c1))>=((vt1.c0, vt1.c0, v0.c0))))) AND ((vt0.c1 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c69)) BETWEEN (load_extension(v0.c0)) AND (CAST(rt0.c2 AS TEXT))) WHERE (CASE WHEN vt0.c0 THEN ((v0.c0)IS(vt0.c1)) WHEN (('1665508298')+(t0.c69)) THEN (NOT (rt0.c1)) WHEN (((t0.c69))!=((NULL))) THEN 0.37971619141561097 ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((v0.c0)IS(vt0.c1)) WHEN (('1665508298')+(t0.c69)) THEN (NOT (rt0.c1)) WHEN (((t0.c69))!=((NULL))) THEN 0.37971619141561097 ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MAX(t0.c69, (NOT (rt0.c1))) CROSS JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((((t0.c69, vt1.c0, vt0.c1))>=((vt1.c0, vt1.c0, v0.c0))))) AND ((vt0.c1 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c69)) BETWEEN (load_extension(v0.c0)) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MAX(t0.c69, (NOT (rt0.c1))) CROSS JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((((t0.c69, vt1.c0, vt0.c1))>=((vt1.c0, vt1.c0, v0.c0))))) AND ((vt0.c1 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c69)) BETWEEN (load_extension(v0.c0)) AND (CAST(rt0.c2 AS TEXT))) WHERE (CASE WHEN vt0.c0 THEN ((v0.c0)IS(vt0.c1)) WHEN (('1665508298')+(t0.c69)) THEN (NOT (rt0.c1)) WHEN (((t0.c69))!=((NULL))) THEN 0.37971619141561097 ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((v0.c0)IS(vt0.c1)) WHEN (('1665508298')+(t0.c69)) THEN (NOT (rt0.c1)) WHEN (((t0.c69))!=((NULL))) THEN 0.37971619141561097 ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON MAX(t0.c69, (NOT (rt0.c1))) CROSS JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((((t0.c69, vt1.c0, vt0.c1))>=((vt1.c0, vt1.c0, v0.c0))))) AND ((vt0.c1 COLLATE NOCASE))) LEFT OUTER JOIN vt1 ON ((UNLIKELY(DISTINCT t0.c69)) BETWEEN (load_extension(v0.c0)) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (LTRIM((- (vt0.c1)))) ORDER BY ((((((t0.c65)OR('*o8B^c!')))AND(t0.c65)))AND((((v0.c0)) BETWEEN ((t0.c69)) AND ((vt0.c0))))), ((v0.c0) NOT BETWEEN ((t0.c65 IN ())) AND (((t0.c69) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((- (vt0.c1)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((t0.c65)OR('*o8B^c!')))AND(t0.c65)))AND((((v0.c0)) BETWEEN ((t0.c69)) AND ((vt0.c0))))), ((v0.c0) NOT BETWEEN ((t0.c65 IN ())) AND (((t0.c69) IS FALSE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (LTRIM((- (vt0.c1)))) ORDER BY ((((((t0.c65)OR('*o8B^c!')))AND(t0.c65)))AND((((v0.c0)) BETWEEN ((t0.c69)) AND ((vt0.c0))))), ((v0.c0) NOT BETWEEN ((t0.c65 IN ())) AND (((t0.c69) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((- (vt0.c1)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((((t0.c65)OR('*o8B^c!')))AND(t0.c65)))AND((((v0.c0)) BETWEEN ((t0.c69)) AND ((vt0.c0))))), ((v0.c0) NOT BETWEEN ((t0.c65 IN ())) AND (((t0.c69) IS FALSE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (LTRIM((- (vt0.c1)))) ORDER BY ((((((t0.c65)OR('*o8B^c!')))AND(t0.c65)))AND((((v0.c0)) BETWEEN ((t0.c69)) AND ((vt0.c0))))), ((v0.c0) NOT BETWEEN ((t0.c65 IN ())) AND (((t0.c69) IS FALSE))) ASC  NULLS LAST;
SELECT * FROM t0, vt0, vt1, v0 WHERE ((((0.05937906648209024 IN ()))IS NOT(((vt0.c0)LIKE(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE BINARY)%((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.05937906648209024 IN ()))IS NOT(((vt0.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1, v0 ORDER BY ((vt0.c0 COLLATE BINARY)%((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1, v0 WHERE ((((0.05937906648209024 IN ()))IS NOT(((vt0.c0)LIKE(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE BINARY)%((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.05937906648209024 IN ()))IS NOT(((vt0.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1, v0 ORDER BY ((vt0.c0 COLLATE BINARY)%((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1, v0 WHERE ((((0.05937906648209024 IN ()))IS NOT(((vt0.c0)LIKE(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE BINARY)%((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))>>((vt0.c1 IN (vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))>>((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)-(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))>>((vt0.c1 IN (vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))>>((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)-(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))>>((vt0.c1 IN (vt0.c0))))) ORDER BY ((vt1.c0)-(vt0.c1)) COLLATE BINARY;
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt1, v0, rt0, t0 ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM vt1, v0, rt0, t0 ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM vt1, v0, rt0, t0 WHERE ((~ ((v0.c0 IN ())))) ORDER BY ((v0.c0) IS FALSE) COLLATE BINARY;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN (x'985a' IN (-353615467)) THEN TYPEOF(vt1.c0) WHEN ((v0.c0) NOT BETWEEN ('1106226549') AND (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN '754606547' THEN SQLITE_COMPILEOPTION_GET(v0.c0) ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (x'985a' IN (-353615467)) THEN TYPEOF(vt1.c0) WHEN ((v0.c0) NOT BETWEEN ('1106226549') AND (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN '754606547' THEN SQLITE_COMPILEOPTION_GET(v0.c0) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN (x'985a' IN (-353615467)) THEN TYPEOF(vt1.c0) WHEN ((v0.c0) NOT BETWEEN ('1106226549') AND (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN '754606547' THEN SQLITE_COMPILEOPTION_GET(v0.c0) ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (x'985a' IN (-353615467)) THEN TYPEOF(vt1.c0) WHEN ((v0.c0) NOT BETWEEN ('1106226549') AND (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN '754606547' THEN SQLITE_COMPILEOPTION_GET(v0.c0) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN (x'985a' IN (-353615467)) THEN TYPEOF(vt1.c0) WHEN ((v0.c0) NOT BETWEEN ('1106226549') AND (v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN '754606547' THEN SQLITE_COMPILEOPTION_GET(v0.c0) ELSE rt0.c2 COLLATE NOCASE END);
SELECT ALL * FROM v0, vt0, vt1, rt0, t0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(1.665508298E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, vt1, rt0, t0 ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(1.665508298E9)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt1, rt0, t0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(1.665508298E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, vt1, rt0, t0 ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(1.665508298E9)) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt1, rt0, t0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(1.665508298E9)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0, v0, rt0 WHERE (((t0.c65) BETWEEN (((rt0.c2)==(t0.c90))) AND (CASE t0.c65  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c90 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c65) BETWEEN (((rt0.c2)=(t0.c90))) AND (CASE t0.c65  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c90 END))) IS TRUE)  as count FROM t0, vt1, vt0, v0, rt0);
SELECT COUNT(*) FROM t0, vt1, vt0, v0, rt0 WHERE (((t0.c65) BETWEEN (((rt0.c2)==(t0.c90))) AND (CASE t0.c65  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c90 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c65) BETWEEN (((rt0.c2)=(t0.c90))) AND (CASE t0.c65  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c90 END))) IS TRUE)  as count FROM t0, vt1, vt0, v0, rt0);
SELECT COUNT(*) FROM t0, vt1, vt0, v0, rt0 WHERE (((t0.c65) BETWEEN (((rt0.c2)==(t0.c90))) AND (CASE t0.c65  WHEN vt0.c0 THEN rt0.c0 ELSE t0.c90 END)));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND((rt0.c0 IN ()))));
SELECT * FROM rt0, vt1, v0, t0, vt0 WHERE (((~ ('')) IN ())) ORDER BY ((CAST(t0.c65 AS BLOB))OR(((t0.c90)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((~ ('')) IN ())) IS TRUE)  as count FROM rt0, vt1, v0, t0, vt0 ORDER BY ((CAST(t0.c65 AS BLOB))OR(((t0.c90)/(v0.c0)))));
SELECT * FROM rt0, vt1, v0, t0, vt0 WHERE (((~ ('')) IN ())) ORDER BY ((CAST(t0.c65 AS BLOB))OR(((t0.c90)/(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((~ ('')) IN ())) IS TRUE)  as count FROM rt0, vt1, v0, t0, vt0 ORDER BY ((CAST(t0.c65 AS BLOB))OR(((t0.c90)/(v0.c0)))));
SELECT * FROM rt0, vt1, v0, t0, vt0 WHERE (((~ ('')) IN ())) ORDER BY ((CAST(t0.c65 AS BLOB))OR(((t0.c90)/(v0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (CAST('1748613303' AS TEXT)) ORDER BY ((vt1.c0) NOT BETWEEN (((0.6449631929224536)>=(vt1.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('1748613303' AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (((0.6449631929224536)>=(vt1.c0))) AND (vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST('1748613303' AS TEXT)) ORDER BY ((vt1.c0) NOT BETWEEN (((0.6449631929224536)>=(vt1.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('1748613303' AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (((0.6449631929224536)>=(vt1.c0))) AND (vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST('1748613303' AS TEXT)) ORDER BY ((vt1.c0) NOT BETWEEN (((0.6449631929224536)>=(vt1.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE '224221849'  WHEN 0.37650846781978053 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) ASC, ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE '224221849'  WHEN 0.37650846781978053 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) ASC, ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE '224221849'  WHEN 0.37650846781978053 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) ASC, ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE '224221849'  WHEN 0.37650846781978053 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) ASC, ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE '224221849'  WHEN 0.37650846781978053 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST('' COLLATE RTRIM AS NUMERIC) ASC, ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ()) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN ((((x'')OR(t0.c69)))OR(x'c461d769')) WHEN (~ (t0.c90)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN t0.c90 COLLATE NOCASE WHEN (((vt0.c0)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c65) BETWEEN (t0.c69) AND (t0.c69)) WHEN (- (0.5801710069841591)) THEN TRIM(vt0.c1, t0.c90) ELSE (((t0.c69)) NOT BETWEEN ((t0.c90)) AND ((vt0.c1))) END) ORDER BY (((t0.c69)==(vt0.c1)) IN ()) DESC  NULLS LAST, (t0.c90 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN ((((x'')OR(t0.c69)))OR(x'c461d769')) WHEN (~ (t0.c90)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN t0.c90 COLLATE NOCASE WHEN (((vt0.c0)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c65) BETWEEN (t0.c69) AND (t0.c69)) WHEN (- (0.5801710069841591)) THEN TRIM(vt0.c1, t0.c90) ELSE (((t0.c69)) NOT BETWEEN ((t0.c90)) AND ((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY (((t0.c69)=(vt0.c1)) IN ()) DESC  NULLS LAST, (t0.c90 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN ((((x'')OR(t0.c69)))OR(x'c461d769')) WHEN (~ (t0.c90)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN t0.c90 COLLATE NOCASE WHEN (((vt0.c0)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c65) BETWEEN (t0.c69) AND (t0.c69)) WHEN (- (0.5801710069841591)) THEN TRIM(vt0.c1, t0.c90) ELSE (((t0.c69)) NOT BETWEEN ((t0.c90)) AND ((vt0.c1))) END) ORDER BY (((t0.c69)==(vt0.c1)) IN ()) DESC  NULLS LAST, (t0.c90 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN ((((x'')OR(t0.c69)))OR(x'c461d769')) WHEN (~ (t0.c90)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN t0.c90 COLLATE NOCASE WHEN (((vt0.c0)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c65) BETWEEN (t0.c69) AND (t0.c69)) WHEN (- (0.5801710069841591)) THEN TRIM(vt0.c1, t0.c90) ELSE (((t0.c69)) NOT BETWEEN ((t0.c90)) AND ((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY (((t0.c69)=(vt0.c1)) IN ()) DESC  NULLS LAST, (t0.c90 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c1 COLLATE RTRIM THEN ((((x'')OR(t0.c69)))OR(x'c461d769')) WHEN (~ (t0.c90)) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN t0.c90 COLLATE NOCASE WHEN (((vt0.c0)) NOT BETWEEN ((t0.c90)) AND ((t0.c90))) THEN ((t0.c65) BETWEEN (t0.c69) AND (t0.c69)) WHEN (- (0.5801710069841591)) THEN TRIM(vt0.c1, t0.c90) ELSE (((t0.c69)) NOT BETWEEN ((t0.c90)) AND ((vt0.c1))) END) ORDER BY (((t0.c69)==(vt0.c1)) IN ()) DESC  NULLS LAST, (t0.c90 IN ()) COLLATE BINARY DESC;
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST(CASE WHEN 0.37650846781978053 THEN vt1.c0 END AS TEXT)) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))) IS FALSE) DESC, ((vt0.c1)!=((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.37650846781978053 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))) IS FALSE) DESC, ((vt0.c1)!=((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST(CASE WHEN 0.37650846781978053 THEN vt1.c0 END AS TEXT)) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))) IS FALSE) DESC, ((vt0.c1)!=((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.37650846781978053 THEN vt1.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))) IS FALSE) DESC, ((vt0.c1)!=((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST(CASE WHEN 0.37650846781978053 THEN vt1.c0 END AS TEXT)) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))) IS FALSE) DESC, ((vt0.c1)!=((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c69) AND (rt0.c0))) AND ((- (rt0.c1)))) CROSS JOIN rt0 ON NULLIF(DISTINCT t0.c69 COLLATE RTRIM, ((t0.c69)<<(t0.c69))) WHERE (x'') ORDER BY ((((((((((t0.c65)<(v0.c0)))AND(NULL)))OR(CAST(t0.c69 AS BLOB))))AND(((t0.c69) IS FALSE))))OR((v0.c0 IN ()))) DESC, (((-6.14081069E8, v0.c0, t0.c65, t0.c69, rt0.c0)) NOT BETWEEN ((CAST(t0.c65 AS NUMERIC), t0.c69 COLLATE BINARY, ((rt0.c1) BETWEEN (v0.c0) AND (t0.c69)), ((t0.c69) NOT BETWEEN (rt0.c2) AND (x'')), t0.c69)) AND ((t0.c69, ((((rt0.c0)OR(rt0.c0)))OR(t0.c90)), LIKELIHOOD(v0.c0, 0.9252888815580387), t0.c65 COLLATE NOCASE, ((t0.c90) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c69) AND (rt0.c0))) AND ((- (rt0.c1)))) CROSS JOIN rt0 ON NULLIF(DISTINCT t0.c69 COLLATE RTRIM, ((t0.c69)<<(t0.c69))) ORDER BY ((((((((((t0.c65)<(v0.c0)))AND(NULL)))OR(CAST(t0.c69 AS BLOB))))AND(((t0.c69) IS FALSE))))OR((v0.c0 IN ()))) DESC, (((-6.14081069E8, v0.c0, t0.c65, t0.c69, rt0.c0)) NOT BETWEEN ((CAST(t0.c65 AS NUMERIC), t0.c69 COLLATE BINARY, ((rt0.c1) BETWEEN (v0.c0) AND (t0.c69)), ((t0.c69) NOT BETWEEN (rt0.c2) AND (x'')), t0.c69)) AND ((t0.c69, ((((rt0.c0)OR(rt0.c0)))OR(t0.c90)), LIKELIHOOD(v0.c0, 0.9252888815580387), t0.c65 COLLATE NOCASE, ((t0.c90) NOT BETWEEN (v0.c0) AND (rt0.c2))))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c69) AND (rt0.c0))) AND ((- (rt0.c1)))) CROSS JOIN rt0 ON NULLIF(DISTINCT t0.c69 COLLATE RTRIM, ((t0.c69)<<(t0.c69))) WHERE (x'') ORDER BY ((((((((((t0.c65)<(v0.c0)))AND(NULL)))OR(CAST(t0.c69 AS BLOB))))AND(((t0.c69) IS FALSE))))OR((v0.c0 IN ()))) DESC, (((-6.14081069E8, v0.c0, t0.c65, t0.c69, rt0.c0)) NOT BETWEEN ((CAST(t0.c65 AS NUMERIC), t0.c69 COLLATE BINARY, ((rt0.c1) BETWEEN (v0.c0) AND (t0.c69)), ((t0.c69) NOT BETWEEN (rt0.c2) AND (x'')), t0.c69)) AND ((t0.c69, ((((rt0.c0)OR(rt0.c0)))OR(t0.c90)), LIKELIHOOD(v0.c0, 0.9252888815580387), t0.c65 COLLATE NOCASE, ((t0.c90) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c69) AND (rt0.c0))) AND ((- (rt0.c1)))) CROSS JOIN rt0 ON NULLIF(DISTINCT t0.c69 COLLATE RTRIM, ((t0.c69)<<(t0.c69))) ORDER BY ((((((((((t0.c65)<(v0.c0)))AND(NULL)))OR(CAST(t0.c69 AS BLOB))))AND(((t0.c69) IS FALSE))))OR((v0.c0 IN ()))) DESC, (((-6.14081069E8, v0.c0, t0.c65, t0.c69, rt0.c0)) NOT BETWEEN ((CAST(t0.c65 AS NUMERIC), t0.c69 COLLATE BINARY, ((rt0.c1) BETWEEN (v0.c0) AND (t0.c69)), ((t0.c69) NOT BETWEEN (rt0.c2) AND (x'')), t0.c69)) AND ((t0.c69, ((((rt0.c0)OR(rt0.c0)))OR(t0.c90)), LIKELIHOOD(v0.c0, 0.9252888815580387), t0.c65 COLLATE NOCASE, ((t0.c90) NOT BETWEEN (v0.c0) AND (rt0.c2))))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (((+ (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c69) AND (rt0.c0))) AND ((- (rt0.c1)))) CROSS JOIN rt0 ON NULLIF(DISTINCT t0.c69 COLLATE RTRIM, ((t0.c69)<<(t0.c69))) WHERE (x'') ORDER BY ((((((((((t0.c65)<(v0.c0)))AND(NULL)))OR(CAST(t0.c69 AS BLOB))))AND(((t0.c69) IS FALSE))))OR((v0.c0 IN ()))) DESC, (((-6.14081069E8, v0.c0, t0.c65, t0.c69, rt0.c0)) NOT BETWEEN ((CAST(t0.c65 AS NUMERIC), t0.c69 COLLATE BINARY, ((rt0.c1) BETWEEN (v0.c0) AND (t0.c69)), ((t0.c69) NOT BETWEEN (rt0.c2) AND (x'')), t0.c69)) AND ((t0.c69, ((((rt0.c0)OR(rt0.c0)))OR(t0.c90)), LIKELIHOOD(v0.c0, 0.9252888815580387), t0.c65 COLLATE NOCASE, ((t0.c90) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT * FROM v0, rt0, vt0, vt1, t0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c2 AS TEXT))))OR(0.580392527760847))) ORDER BY ((((((((LIKELY(vt0.c1))AND((t0.c69 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND((((vt0.c0, rt0.c0, t0.c69))<=((rt0.c2, t0.c65, t0.c69))))))OR(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c2 AS TEXT))))OR(0.580392527760847))) IS TRUE)  as count FROM v0, rt0, vt0, vt1, t0 ORDER BY ((((((((LIKELY(vt0.c1))AND((t0.c69 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND((((vt0.c0, rt0.c0, t0.c69))<=((rt0.c2, t0.c65, t0.c69))))))OR(((rt0.c2) IS FALSE))));
SELECT * FROM v0, rt0, vt0, vt1, t0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c2 AS TEXT))))OR(0.580392527760847))) ORDER BY ((((((((LIKELY(vt0.c1))AND((t0.c69 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND((((vt0.c0, rt0.c0, t0.c69))<=((rt0.c2, t0.c65, t0.c69))))))OR(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c2 AS TEXT))))OR(0.580392527760847))) IS TRUE)  as count FROM v0, rt0, vt0, vt1, t0 ORDER BY ((((((((LIKELY(vt0.c1))AND((t0.c69 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND((((vt0.c0, rt0.c0, t0.c69))<=((rt0.c2, t0.c65, t0.c69))))))OR(((rt0.c2) IS FALSE))));
SELECT * FROM v0, rt0, vt0, vt1, t0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c2 AS TEXT))))OR(0.580392527760847))) ORDER BY ((((((((LIKELY(vt0.c1))AND((t0.c69 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND((((vt0.c0, rt0.c0, t0.c69))<=((rt0.c2, t0.c65, t0.c69))))))OR(((rt0.c2) IS FALSE)));
SELECT * FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (rt0.c2);
SELECT COUNT(*) FROM t0, rt0, vt1, v0 WHERE (load_extension((((rt0.c1))>=((0.6887954506794919)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((rt0.c1))>=((0.6887954506794919))))) IS TRUE)  as count FROM t0, rt0, vt1, v0);
SELECT COUNT(*) FROM t0, rt0, vt1, v0 WHERE (load_extension((((rt0.c1))>=((0.6887954506794919)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((rt0.c1))>=((0.6887954506794919))))) IS TRUE)  as count FROM t0, rt0, vt1, v0);
SELECT COUNT(*) FROM t0, rt0, vt1, v0 WHERE (load_extension((((rt0.c1))>=((0.6887954506794919)))));
SELECT * FROM rt0, t0, v0, vt1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt0.c2) NOT NULL)))) WHERE (x'c8bc') ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c65 THEN rt0.c2 WHEN t0.c65 THEN vt0.c1 ELSE vt0.c0 END)))AND((((rt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((x'', v0.c0, rt0.c1)) AND ((t0.c69, t0.c69, t0.c65))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'c8bc') IS TRUE)  as count FROM rt0, t0, v0, vt1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt0.c2) NOT NULL)))) ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c65 THEN rt0.c2 WHEN t0.c65 THEN vt0.c1 ELSE vt0.c0 END)))AND((((rt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((x'', v0.c0, rt0.c1)) AND ((t0.c69, t0.c69, t0.c65))))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0, v0, vt1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt0.c2) NOT NULL)))) WHERE (x'c8bc') ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c65 THEN rt0.c2 WHEN t0.c65 THEN vt0.c1 ELSE vt0.c0 END)))AND((((rt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((x'', v0.c0, rt0.c1)) AND ((t0.c69, t0.c69, t0.c65))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'c8bc') IS TRUE)  as count FROM rt0, t0, v0, vt1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt0.c2) NOT NULL)))) ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c65 THEN rt0.c2 WHEN t0.c65 THEN vt0.c1 ELSE vt0.c0 END)))AND((((rt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((x'', v0.c0, rt0.c1)) AND ((t0.c69, t0.c69, t0.c65))))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0, v0, vt1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt0.c2) NOT NULL)))) WHERE (x'c8bc') ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c65 THEN rt0.c2 WHEN t0.c65 THEN vt0.c1 ELSE vt0.c0 END)))AND((((rt0.c1, v0.c0, vt1.c0)) NOT BETWEEN ((x'', v0.c0, rt0.c1)) AND ((t0.c69, t0.c69, t0.c65))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ('R7') ORDER BY CASE rt0.c2  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0)<=(rt0.c1)) WHEN IFNULL(vt0.c1, vt0.c1) THEN x'' ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('R7') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE rt0.c2  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0)<=(rt0.c1)) WHEN IFNULL(vt0.c1, vt0.c1) THEN x'' ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ('R7') ORDER BY CASE rt0.c2  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0)<=(rt0.c1)) WHEN IFNULL(vt0.c1, vt0.c1) THEN x'' ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('R7') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE rt0.c2  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0)<=(rt0.c1)) WHEN IFNULL(vt0.c1, vt0.c1) THEN x'' ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ('R7') ORDER BY CASE rt0.c2  WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0)<=(rt0.c1)) WHEN IFNULL(vt0.c1, vt0.c1) THEN x'' ELSE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)) END DESC;
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (DATE(DATE(rt0.c1, vt1.c0, v0.c0), ((((rt0.c0)AND(NULL)))OR(t0.c69)), (('9yo郗j')=(t0.c69)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(DATE(rt0.c1, vt1.c0, v0.c0), ((((rt0.c0)AND(NULL)))OR(t0.c69)), (('9yo郗j')==(t0.c69)))) IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (DATE(DATE(rt0.c1, vt1.c0, v0.c0), ((((rt0.c0)AND(NULL)))OR(t0.c69)), (('9yo郗j')=(t0.c69)))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(DATE(rt0.c1, vt1.c0, v0.c0), ((((rt0.c0)AND(NULL)))OR(t0.c69)), (('9yo郗j')==(t0.c69)))) IS TRUE)  as count FROM vt1, t0, rt0, v0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, v0 WHERE (DATE(DATE(rt0.c1, vt1.c0, v0.c0), ((((rt0.c0)AND(NULL)))OR(t0.c69)), (('9yo郗j')=(t0.c69)))) ORDER BY NULL ASC  NULLS LAST;
SELECT * FROM t0, rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN (LOWER(DISTINCT rt0.c2))) WHERE (CASE ((NULL)LIKE(t0.c90))  WHEN UNLIKELY(t0.c69) THEN CAST(0.9032477713312422 AS REAL) WHEN ((rt0.c0) ISNULL) THEN ((1849787989)||(rt0.c2)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c65)) THEN ((vt0.c0) NOT NULL) ELSE CAST(t0.c90 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)LIKE(t0.c90))  WHEN UNLIKELY(t0.c69) THEN CAST(0.9032477713312422 AS REAL) WHEN ((rt0.c0) ISNULL) THEN ((1849787989)||(rt0.c2)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c65)) THEN ((vt0.c0) NOT NULL) ELSE CAST(t0.c90 AS NUMERIC) END) IS TRUE)  as count FROM t0, rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN (LOWER(DISTINCT rt0.c2))));
SELECT * FROM t0, rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN (LOWER(DISTINCT rt0.c2))) WHERE (CASE ((NULL)LIKE(t0.c90))  WHEN UNLIKELY(t0.c69) THEN CAST(0.9032477713312422 AS REAL) WHEN ((rt0.c0) ISNULL) THEN ((1849787989)||(rt0.c2)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c65)) THEN ((vt0.c0) NOT NULL) ELSE CAST(t0.c90 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)LIKE(t0.c90))  WHEN UNLIKELY(t0.c69) THEN CAST(0.9032477713312422 AS REAL) WHEN ((rt0.c0) ISNULL) THEN ((1849787989)||(rt0.c2)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c65)) THEN ((vt0.c0) NOT NULL) ELSE CAST(t0.c90 AS NUMERIC) END) IS TRUE)  as count FROM t0, rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN (LOWER(DISTINCT rt0.c2))));
SELECT * FROM t0, rt0, vt0, v0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN (LOWER(DISTINCT rt0.c2))) WHERE (CASE ((NULL)LIKE(t0.c90))  WHEN UNLIKELY(t0.c69) THEN CAST(0.9032477713312422 AS REAL) WHEN ((rt0.c0) ISNULL) THEN ((1849787989)||(rt0.c2)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c65)) THEN ((vt0.c0) NOT NULL) ELSE CAST(t0.c90 AS NUMERIC) END);
SELECT * FROM v0, vt1 WHERE (CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS REAL)) ORDER BY ABS(x'899b') ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS REAL)) IS TRUE)  as count FROM v0, vt1 ORDER BY ABS(x'899b') ASC);
SELECT * FROM v0, vt1 WHERE (CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS REAL)) ORDER BY ABS(x'899b') ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS REAL)) IS TRUE)  as count FROM v0, vt1 ORDER BY ABS(x'899b') ASC);
SELECT * FROM v0, vt1 WHERE (CAST(NULLIF(DISTINCT v0.c0, v0.c0) AS REAL)) ORDER BY ABS(x'899b') ASC;
SELECT * FROM vt1, v0 WHERE (CASE SQLITE_COMPILEOPTION_GET(v0.c0)  WHEN (NOT (vt1.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(vt1.c0)) END) ORDER BY ((vt1.c0)/(((v0.c0)<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_COMPILEOPTION_GET(v0.c0)  WHEN (NOT (vt1.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0)/(((v0.c0)<(v0.c0)))) ASC);
SELECT * FROM vt1, v0 WHERE (CASE SQLITE_COMPILEOPTION_GET(v0.c0)  WHEN (NOT (vt1.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(vt1.c0)) END) ORDER BY ((vt1.c0)/(((v0.c0)<(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_COMPILEOPTION_GET(v0.c0)  WHEN (NOT (vt1.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0)/(((v0.c0)<(v0.c0)))) ASC);
SELECT * FROM vt1, v0 WHERE (CASE SQLITE_COMPILEOPTION_GET(v0.c0)  WHEN (NOT (vt1.c0)) THEN ((((v0.c0)OR(v0.c0)))OR(vt1.c0)) END) ORDER BY ((vt1.c0)/(((v0.c0)<(v0.c0)))) ASC;
SELECT * FROM vt1, v0, t0 WHERE (CASE WHEN 0.3537663541873345 THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c69))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.3537663541873345 THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c69))) END) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE (CASE WHEN 0.3537663541873345 THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c69))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.3537663541873345 THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c69))) END) IS TRUE)  as count FROM vt1, v0, t0);
SELECT * FROM vt1, v0, t0 WHERE (CASE WHEN 0.3537663541873345 THEN (((t0.c90)) BETWEEN ((t0.c90)) AND ((t0.c69))) END);
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<(rt0.c1)) LEFT OUTER JOIN rt0 ON ((v0.c0)||(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END)) INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0) BETWEEN ('-2113330504') AND (vt0.c1)) THEN ((rt0.c0) NOT NULL) END WHERE (((((vt0.c1 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))OR(((vt1.c0) ISNULL)))) ORDER BY ((rt0.c2)/(CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt1.c0 WHEN '0.6334877516947238' THEN rt0.c1 ELSE vt1.c0 END))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<(rt0.c1)) LEFT OUTER JOIN rt0 ON ((v0.c0)||(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END)) INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0) BETWEEN ('-2113330504') AND (vt0.c1)) THEN ((rt0.c0) NOT NULL) END ORDER BY ((rt0.c2)/(CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt1.c0 WHEN '0.6334877516947238' THEN rt0.c1 ELSE vt1.c0 END))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) IN ()) DESC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<(rt0.c1)) LEFT OUTER JOIN rt0 ON ((v0.c0)||(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END)) INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0) BETWEEN ('-2113330504') AND (vt0.c1)) THEN ((rt0.c0) NOT NULL) END WHERE (((((vt0.c1 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))OR(((vt1.c0) ISNULL)))) ORDER BY ((rt0.c2)/(CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt1.c0 WHEN '0.6334877516947238' THEN rt0.c1 ELSE vt1.c0 END))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE RTRIM)OR(CAST(rt0.c0 AS BLOB))))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<(rt0.c1)) LEFT OUTER JOIN rt0 ON ((v0.c0)||(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END)) INNER JOIN vt0 ON CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c0) BETWEEN ('-2113330504') AND (vt0.c1)) THEN ((rt0.c0) NOT NULL) END ORDER BY ((rt0.c2)/(CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN vt1.c0 WHEN '0.6334877516947238' THEN rt0.c1 ELSE vt1.c0 END))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) IN ()) DESC  NULLS LAST);
SELECT * FROM v0, vt0, vt1, t0 WHERE (((((((((((t0.c65)OR(v0.c0)))OR(t0.c69)))AND(vt0.c0)))AND(vt0.c1)))AND(t0.c65)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c65)OR(v0.c0)))OR(t0.c69)))AND(vt0.c0)))AND(vt0.c1)))AND(t0.c65))) IS TRUE)  as count FROM v0, vt0, vt1, t0);
SELECT * FROM v0, vt0, vt1, t0 WHERE (((((((((((t0.c65)OR(v0.c0)))OR(t0.c69)))AND(vt0.c0)))AND(vt0.c1)))AND(t0.c65)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c65)OR(v0.c0)))OR(t0.c69)))AND(vt0.c0)))AND(vt0.c1)))AND(t0.c65))) IS TRUE)  as count FROM v0, vt0, vt1, t0);
SELECT * FROM v0, vt0, vt1, t0 WHERE (((((((((((t0.c65)OR(v0.c0)))OR(t0.c69)))AND(vt0.c0)))AND(vt0.c1)))AND(t0.c65)));
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND(t0.c65)))OR(t0.c90)))AND('!3\')) THEN (+ ('1572248801')) END) ORDER BY ((rt0.c1)%(t0.c90)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND(t0.c65)))OR(t0.c90)))AND('!3\')) THEN (+ ('1572248801')) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((rt0.c1)%(t0.c90)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND(t0.c65)))OR(t0.c90)))AND('!3\')) THEN (+ ('1572248801')) END) ORDER BY ((rt0.c1)%(t0.c90)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND(t0.c65)))OR(t0.c90)))AND('!3\')) THEN (+ ('1572248801')) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((rt0.c1)%(t0.c90)) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND(t0.c65)))OR(t0.c90)))AND('!3\')) THEN (+ ('1572248801')) END) ORDER BY ((rt0.c1)%(t0.c90)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 NOT INDEXED, t0 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0 NOT INDEXED, t0 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, t0);
SELECT COUNT(*) FROM vt1, v0 NOT INDEXED, t0 WHERE (vt1.c0 COLLATE BINARY);
SELECT * FROM v0, vt1, vt0, rt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT * FROM v0, vt1, vt0, rt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT * FROM v0, vt1, vt0, rt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY 'SჍ2xpF''' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY 'SჍ2xpF''' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY 'SჍ2xpF''' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY 'SჍ2xpF''' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY 'SჍ2xpF''' DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS BLOB) AS NUMERIC) WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS BLOB) AS NUMERIC));
SELECT ALL * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS BLOB) AS NUMERIC) WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS BLOB) AS NUMERIC));
SELECT ALL * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(v0.c0 AS BLOB) AS NUMERIC) WHERE (CAST(rt0.c2 AS TEXT));
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0 WHERE (t0.c65);
SELECT SUM(count) FROM (SELECT ((t0.c65) IS TRUE)  as count FROM v0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0 WHERE (t0.c65);
SELECT SUM(count) FROM (SELECT ((t0.c65) IS TRUE)  as count FROM v0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, t0 WHERE (t0.c65);
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN v0 ON ((t0.c90 COLLATE RTRIM) IS FALSE) FULL OUTER JOIN rt0 ON CASE WHEN NULL THEN CAST(vt1.c0 AS TEXT) ELSE (((rt0.c2)) BETWEEN ((t0.c69)) AND ((rt0.c0))) END WHERE ((((((((((t0.c69)OR(vt1.c0)))AND(t0.c90)))AND(t0.c90)))AND(0.9965474845371656)) IN ())) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c69)OR(vt1.c0)))AND(t0.c90)))AND(t0.c90)))AND(0.9965474845371656)) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON ((t0.c90 COLLATE RTRIM) IS FALSE) FULL OUTER JOIN rt0 ON CASE WHEN NULL THEN CAST(vt1.c0 AS TEXT) ELSE (((rt0.c2)) BETWEEN ((t0.c69)) AND ((rt0.c0))) END ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN v0 ON ((t0.c90 COLLATE RTRIM) IS FALSE) FULL OUTER JOIN rt0 ON CASE WHEN NULL THEN CAST(vt1.c0 AS TEXT) ELSE (((rt0.c2)) BETWEEN ((t0.c69)) AND ((rt0.c0))) END WHERE ((((((((((t0.c69)OR(vt1.c0)))AND(t0.c90)))AND(t0.c90)))AND(0.9965474845371656)) IN ())) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c69)OR(vt1.c0)))AND(t0.c90)))AND(t0.c90)))AND(0.9965474845371656)) IN ())) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON ((t0.c90 COLLATE RTRIM) IS FALSE) FULL OUTER JOIN rt0 ON CASE WHEN NULL THEN CAST(vt1.c0 AS TEXT) ELSE (((rt0.c2)) BETWEEN ((t0.c69)) AND ((rt0.c0))) END ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL));
SELECT ALL * FROM t0, vt1 LEFT OUTER JOIN v0 ON ((t0.c90 COLLATE RTRIM) IS FALSE) FULL OUTER JOIN rt0 ON CASE WHEN NULL THEN CAST(vt1.c0 AS TEXT) ELSE (((rt0.c2)) BETWEEN ((t0.c69)) AND ((rt0.c0))) END WHERE ((((((((((t0.c69)OR(vt1.c0)))AND(t0.c90)))AND(t0.c90)))AND(0.9965474845371656)) IN ())) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOTNULL);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 WHEN t0.c90 THEN vt0.c1 WHEN vt1.c0 THEN t0.c65 END IN ((((0.7325276616547896)) NOT BETWEEN ((t0.c69)) AND ((t0.c69)))))) ORDER BY (((((((((((vt0.c0)OR(t0.c90)))OR(NULL)))AND('%Z')))OR(t0.c69))))>=((((vt1.c0) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE t0.c69  WHEN t0.c65 THEN t0.c90 WHEN t0.c90 THEN vt0.c1 WHEN vt1.c0 THEN t0.c65 END IN ((((0.7325276616547896)) NOT BETWEEN ((t0.c69)) AND ((t0.c69)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((((((((vt0.c0)OR(t0.c90)))OR(NULL)))AND('%Z')))OR(t0.c69))))>=((((vt1.c0) ISNULL)))) DESC);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 WHEN t0.c90 THEN vt0.c1 WHEN vt1.c0 THEN t0.c65 END IN ((((0.7325276616547896)) NOT BETWEEN ((t0.c69)) AND ((t0.c69)))))) ORDER BY (((((((((((vt0.c0)OR(t0.c90)))OR(NULL)))AND('%Z')))OR(t0.c69))))>=((((vt1.c0) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE t0.c69  WHEN t0.c65 THEN t0.c90 WHEN t0.c90 THEN vt0.c1 WHEN vt1.c0 THEN t0.c65 END IN ((((0.7325276616547896)) NOT BETWEEN ((t0.c69)) AND ((t0.c69)))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((((((((vt0.c0)OR(t0.c90)))OR(NULL)))AND('%Z')))OR(t0.c69))))>=((((vt1.c0) ISNULL)))) DESC);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 WHEN t0.c90 THEN vt0.c1 WHEN vt1.c0 THEN t0.c65 END IN ((((0.7325276616547896)) NOT BETWEEN ((t0.c69)) AND ((t0.c69)))))) ORDER BY (((((((((((vt0.c0)OR(t0.c90)))OR(NULL)))AND('%Z')))OR(t0.c69))))>=((((vt1.c0) ISNULL)))) DESC;
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE (((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (UNICODE(0.14406384939802774)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2))))) ORDER BY (- (SQLITE_VERSION()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (UNICODE(0.14406384939802774)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 ORDER BY (- (SQLITE_VERSION()))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE (((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (UNICODE(0.14406384939802774)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2))))) ORDER BY (- (SQLITE_VERSION()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (UNICODE(0.14406384939802774)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 ORDER BY (- (SQLITE_VERSION()))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE (((((vt0.c0)GLOB(v0.c0))) NOT BETWEEN (UNICODE(0.14406384939802774)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2))))) ORDER BY (- (SQLITE_VERSION()))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (vt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, v0.c0, vt0.c0, 0.7018493577651754))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)AND(NULLIF(vt0.c0, vt0.c1))))AND((((vt0.c1, vt0.c0, v0.c0))=((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((((''))<=((vt0.c0)))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 END)AND(NULLIF(vt0.c0, vt0.c1))))AND((((vt0.c1, vt0.c0, v0.c0))=((v0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (vt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, v0.c0, vt0.c0, 0.7018493577651754))) ORDER BY (((((''))<=((vt0.c0)))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (vt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, v0.c0, vt0.c0, 0.7018493577651754))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)AND(NULLIF(vt0.c0, vt0.c1))))AND((((vt0.c1, vt0.c0, v0.c0))=((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((((''))<=((vt0.c0)))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 END)AND(NULLIF(vt0.c0, vt0.c1))))AND((((vt0.c1, vt0.c0, v0.c0))=((v0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (vt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, v0.c0, vt0.c0, 0.7018493577651754))) ORDER BY (((((''))<=((vt0.c0)))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (vt0.c1 IN (STRFTIME(vt0.c0, vt0.c0, v0.c0, vt0.c0, 0.7018493577651754))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)AND(NULLIF(vt0.c0, vt0.c1))))AND((((vt0.c1, vt0.c0, v0.c0))=((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY (((((''))<=((vt0.c0)))) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt1 NATURAL JOIN vt0 WHERE ((+ (t0.c90))) ORDER BY CAST(((t0.c90)>>(v0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c90))) IS TRUE)  as count FROM v0, t0, vt1 NATURAL JOIN vt0 ORDER BY CAST(((t0.c90)>>(v0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 NATURAL JOIN vt0 WHERE ((+ (t0.c90))) ORDER BY CAST(((t0.c90)>>(v0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c90))) IS TRUE)  as count FROM v0, t0, vt1 NATURAL JOIN vt0 ORDER BY CAST(((t0.c90)>>(v0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, vt1 NATURAL JOIN vt0 WHERE ((+ (t0.c90))) ORDER BY CAST(((t0.c90)>>(v0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON NULL COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))==(((((vt0.c0)OR(rt0.c1)))OR(t0.c65)))) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS REAL)) ORDER BY CASE WHEN vt0.c1 THEN t0.c90 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON NULL COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))=(((((vt0.c0)OR(rt0.c1)))OR(t0.c65)))) ORDER BY CASE WHEN vt0.c1 THEN t0.c90 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON NULL COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))==(((((vt0.c0)OR(rt0.c1)))OR(t0.c65)))) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS REAL)) ORDER BY CASE WHEN vt0.c1 THEN t0.c90 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON NULL COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))=(((((vt0.c0)OR(rt0.c1)))OR(t0.c65)))) ORDER BY CASE WHEN vt0.c1 THEN t0.c90 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON NULL COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c1)))==(((((vt0.c0)OR(rt0.c1)))OR(t0.c65)))) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS REAL)) ORDER BY CASE WHEN vt0.c1 THEN t0.c90 END COLLATE NOCASE;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)IS((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)IS((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)IS((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)IS((vt0.c1 IN ()))));
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0, v0);
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0, v0);
SELECT * FROM t0, vt0, rt0, v0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON NULL WHERE ('-1445946812') ORDER BY ((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('-1445946812') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON NULL ORDER BY ((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON NULL WHERE ('-1445946812') ORDER BY ((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('-1445946812') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON NULL ORDER BY ((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON NULL WHERE ('-1445946812') ORDER BY ((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) DESC;
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (((((t0.c69 COLLATE BINARY)OR(((v0.c0)&(0.6912824904389037)))))AND(CASE WHEN v0.c0 THEN t0.c90 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69 COLLATE BINARY)OR(((v0.c0)&(0.6912824904389037)))))AND(CASE WHEN v0.c0 THEN t0.c90 END))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (((((t0.c69 COLLATE BINARY)OR(((v0.c0)&(0.6912824904389037)))))AND(CASE WHEN v0.c0 THEN t0.c90 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69 COLLATE BINARY)OR(((v0.c0)&(0.6912824904389037)))))AND(CASE WHEN v0.c0 THEN t0.c90 END))) IS TRUE)  as count FROM v0, t0, vt1);
SELECT COUNT(*) FROM v0, t0, vt1 WHERE (((((t0.c69 COLLATE BINARY)OR(((v0.c0)&(0.6912824904389037)))))AND(CASE WHEN v0.c0 THEN t0.c90 END)));
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON 0.2900737573408825 INNER JOIN rt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2))) IS FALSE) LEFT OUTER JOIN vt1 ON GLOB(((((vt0.c1)AND(v0.c0)))AND(vt0.c0)), rtreenode(vt0.c0, rt0.c2)) WHERE ((((rt0.c2)) NOT BETWEEN (((((x'', vt0.c0, t0.c65))>((t0.c90, vt1.c0, t0.c90))))) AND ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((x'', vt0.c0, t0.c65))>((t0.c90, vt1.c0, t0.c90))))) AND ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON 0.2900737573408825 INNER JOIN rt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2))) IS FALSE) LEFT OUTER JOIN vt1 ON GLOB(((((vt0.c1)AND(v0.c0)))AND(vt0.c0)), rtreenode(vt0.c0, rt0.c2)) ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN t0 ON 0.2900737573408825 INNER JOIN rt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2))) IS FALSE) LEFT OUTER JOIN vt1 ON GLOB(((((vt0.c1)AND(v0.c0)))AND(vt0.c0)), rtreenode(vt0.c0, rt0.c2)) WHERE ((((rt0.c2)) NOT BETWEEN (((((x'', vt0.c0, t0.c65))>((t0.c90, vt1.c0, t0.c90))))) AND ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((x'', vt0.c0, t0.c65))>((t0.c90, vt1.c0, t0.c90))))) AND ((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN t0 ON 0.2900737573408825 INNER JOIN rt0 ON ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2))) IS FALSE) LEFT OUTER JOIN vt1 ON GLOB(((((vt0.c1)AND(v0.c0)))AND(vt0.c0)), rtreenode(vt0.c0, rt0.c2)) ORDER BY rt0.c0 DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0)=(v0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON '704102684' FULL OUTER JOIN vt1 ON ((((((((((((((rt0.c0)AND(v0.c0)))AND('X<')))OR(((rt0.c0)&(v0.c0)))))AND(t0.c69 COLLATE RTRIM)))OR(((((rt0.c1)AND(t0.c69)))OR(t0.c90)))))OR(((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(t0.c65)))))OR(t0.c69 COLLATE RTRIM)) WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY json_object(rt0.c1, t0.c90) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON '704102684' FULL OUTER JOIN vt1 ON ((((((((((((((rt0.c0)AND(v0.c0)))AND('X<')))OR(((rt0.c0)&(v0.c0)))))AND(t0.c69 COLLATE RTRIM)))OR(((((rt0.c1)AND(t0.c69)))OR(t0.c90)))))OR(((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(t0.c65)))))OR(t0.c69 COLLATE RTRIM)) ORDER BY json_object(rt0.c1, t0.c90) COLLATE BINARY);
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON '704102684' FULL OUTER JOIN vt1 ON ((((((((((((((rt0.c0)AND(v0.c0)))AND('X<')))OR(((rt0.c0)&(v0.c0)))))AND(t0.c69 COLLATE RTRIM)))OR(((((rt0.c1)AND(t0.c69)))OR(t0.c90)))))OR(((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(t0.c65)))))OR(t0.c69 COLLATE RTRIM)) WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY json_object(rt0.c1, t0.c90) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON '704102684' FULL OUTER JOIN vt1 ON ((((((((((((((rt0.c0)AND(v0.c0)))AND('X<')))OR(((rt0.c0)&(v0.c0)))))AND(t0.c69 COLLATE RTRIM)))OR(((((rt0.c1)AND(t0.c69)))OR(t0.c90)))))OR(((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(t0.c65)))))OR(t0.c69 COLLATE RTRIM)) ORDER BY json_object(rt0.c1, t0.c90) COLLATE BINARY);
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON '704102684' FULL OUTER JOIN vt1 ON ((((((((((((((rt0.c0)AND(v0.c0)))AND('X<')))OR(((rt0.c0)&(v0.c0)))))AND(t0.c69 COLLATE RTRIM)))OR(((((rt0.c1)AND(t0.c69)))OR(t0.c90)))))OR(((((((((vt1.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(t0.c65)))))OR(t0.c69 COLLATE RTRIM)) WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY json_object(rt0.c1, t0.c90) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (x'') AND (rt0.c0)) AS NUMERIC));
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)|(vt0.c0))) ORDER BY (((+ (vt0.c1)))>>(vt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)|(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((+ (vt0.c1)))>>(vt0.c1 COLLATE NOCASE)) ASC);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)|(vt0.c0))) ORDER BY (((+ (vt0.c1)))>>(vt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)|(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((+ (vt0.c1)))>>(vt0.c1 COLLATE NOCASE)) ASC);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM)|(vt0.c0))) ORDER BY (((+ (vt0.c1)))>>(vt0.c1 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER));
SELECT ALL * FROM vt0, vt1, t0, v0 WHERE (CAST((t0.c65 IN ()) AS TEXT)) ORDER BY (((vt0.c0)+(t0.c69)) IN (MAX(v0.c0, t0.c90, vt1.c0, vt1.c0), CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((('<{\rm6''䆸')*(vt1.c0)))IS(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c65 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0, v0 ORDER BY (((vt0.c0)+(t0.c69)) IN (MAX(v0.c0, t0.c90, vt1.c0, vt1.c0), CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((('<{\rm6''䆸')*(vt1.c0)))IS(vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, v0 WHERE (CAST((t0.c65 IN ()) AS TEXT)) ORDER BY (((vt0.c0)+(t0.c69)) IN (MAX(v0.c0, t0.c90, vt1.c0, vt1.c0), CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((('<{\rm6''䆸')*(vt1.c0)))IS(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c65 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, t0, v0 ORDER BY (((vt0.c0)+(t0.c69)) IN (MAX(v0.c0, t0.c90, vt1.c0, vt1.c0), CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((('<{\rm6''䆸')*(vt1.c0)))IS(vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, v0 WHERE (CAST((t0.c65 IN ()) AS TEXT)) ORDER BY (((vt0.c0)+(t0.c69)) IN (MAX(v0.c0, t0.c90, vt1.c0, vt1.c0), CAST(vt1.c0 AS TEXT)))  NULLS FIRST, (((('<{\rm6''䆸')*(vt1.c0)))IS(vt0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((NOT (((t0.c90) IS TRUE)))) ORDER BY ((((t0.c65)>=('0.01828596193063059'))) IS FALSE)  NULLS FIRST, (- (((vt1.c0) NOT BETWEEN (0Xffffffffe965406e) AND (t0.c90))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c90) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c65)>=('0.01828596193063059'))) IS FALSE)  NULLS FIRST, (- (((vt1.c0) NOT BETWEEN (0xffffffffe965406e) AND (t0.c90))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((NOT (((t0.c90) IS TRUE)))) ORDER BY ((((t0.c65)>=('0.01828596193063059'))) IS FALSE)  NULLS FIRST, (- (((vt1.c0) NOT BETWEEN (0Xffffffffe965406e) AND (t0.c90))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c90) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c65)>=('0.01828596193063059'))) IS FALSE)  NULLS FIRST, (- (((vt1.c0) NOT BETWEEN (0xffffffffe965406e) AND (t0.c90))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((NOT (((t0.c90) IS TRUE)))) ORDER BY ((((t0.c65)>=('0.01828596193063059'))) IS FALSE)  NULLS FIRST, (- (((vt1.c0) NOT BETWEEN (0Xffffffffe965406e) AND (t0.c90))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(0.2999719499562816)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(0.2999719499562816)))OR(rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(0.2999719499562816)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(0.2999719499562816)))OR(rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((((rt0.c0)OR(rt0.c0)))OR(NULL)))OR(0.2999719499562816)))OR(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(rt0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))))OR((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(rt0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))))OR((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(rt0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))))OR((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(rt0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))))OR((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(v0.c0)))AND(rt0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))))OR((((v0.c0, rt0.c1, v0.c0)) BETWEEN ((rt0.c0, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1))))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c65 THEN t0.c69 END)) LEFT OUTER JOIN t0 ON CAST(((((t0.c90)OR(t0.c69)))OR(t0.c90)) AS BLOB) WHERE (CASE WHEN (('-351897367')<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c69) AND (-2.113330504E9)) ELSE (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-351897367')<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c69) AND (-2.113330504E9)) ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c65 THEN t0.c69 END)) LEFT OUTER JOIN t0 ON CAST(((((t0.c90)OR(t0.c69)))OR(t0.c90)) AS BLOB));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c65 THEN t0.c69 END)) LEFT OUTER JOIN t0 ON CAST(((((t0.c90)OR(t0.c69)))OR(t0.c90)) AS BLOB) WHERE (CASE WHEN (('-351897367')<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c69) AND (-2.113330504E9)) ELSE (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-351897367')<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c69) AND (-2.113330504E9)) ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c65 THEN t0.c69 END)) LEFT OUTER JOIN t0 ON CAST(((((t0.c90)OR(t0.c69)))OR(t0.c90)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt1, vt0, t0 WHERE ((v0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(0.34387543857767333)))AND(v0.c0))))) ORDER BY (- (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(0.34387543857767333)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1, vt0, t0 ORDER BY (- (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt1, vt0, t0 WHERE ((v0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(0.34387543857767333)))AND(v0.c0))))) ORDER BY (- (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(0.34387543857767333)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt1, vt0, t0 ORDER BY (- (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt1, vt0, t0 WHERE ((v0.c0 COLLATE NOCASE IN (((((rt0.c1)OR(0.34387543857767333)))AND(v0.c0))))) ORDER BY (- (((vt0.c0) IS FALSE)));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN t0 ON ((vt1.c0)<(rt0.c0)) COLLATE NOCASE WHERE (((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))AND(t0.c90)))OR(t0.c90)))AND(CASE t0.c69  WHEN t0.c90 THEN rt0.c1 ELSE t0.c69 END)))AND((((vt1.c0))==((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))AND(t0.c90)))OR(t0.c90)))AND(CASE t0.c69  WHEN t0.c90 THEN rt0.c1 ELSE t0.c69 END)))AND((((vt1.c0))=((v0.c0)))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN t0 ON ((vt1.c0)<(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN t0 ON ((vt1.c0)<(rt0.c0)) COLLATE NOCASE WHERE (((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))AND(t0.c90)))OR(t0.c90)))AND(CASE t0.c69  WHEN t0.c90 THEN rt0.c1 ELSE t0.c69 END)))AND((((vt1.c0))==((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))AND(t0.c90)))OR(t0.c90)))AND(CASE t0.c69  WHEN t0.c90 THEN rt0.c1 ELSE t0.c69 END)))AND((((vt1.c0))=((v0.c0)))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN t0 ON ((vt1.c0)<(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN v0 ON NULL CROSS JOIN t0 ON ((vt1.c0)<(rt0.c0)) COLLATE NOCASE WHERE (((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))AND(t0.c90)))OR(t0.c90)))AND(CASE t0.c69  WHEN t0.c90 THEN rt0.c1 ELSE t0.c69 END)))AND((((vt1.c0))==((v0.c0))))));
SELECT * FROM rt0, vt1, vt0, v0 WHERE (((((((vt0.c0)<>(rt0.c1)))OR(x'ff84')))AND(((((rt0.c0)AND('')))OR(rt0.c2))))) ORDER BY NULL ASC, CASE WHEN DATE(rt0.c1, rt0.c2, rt0.c0) THEN x'' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)!=(rt0.c1)))OR(x'ff84')))AND(((((rt0.c0)AND('')))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0, v0 ORDER BY NULL ASC, CASE WHEN DATE(rt0.c1, rt0.c2, rt0.c0) THEN x'' END ASC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0, v0 WHERE (((((((vt0.c0)<>(rt0.c1)))OR(x'ff84')))AND(((((rt0.c0)AND('')))OR(rt0.c2))))) ORDER BY NULL ASC, CASE WHEN DATE(rt0.c1, rt0.c2, rt0.c0) THEN x'' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)!=(rt0.c1)))OR(x'ff84')))AND(((((rt0.c0)AND('')))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0, v0 ORDER BY NULL ASC, CASE WHEN DATE(rt0.c1, rt0.c2, rt0.c0) THEN x'' END ASC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0, v0 WHERE (((((((vt0.c0)<>(rt0.c1)))OR(x'ff84')))AND(((((rt0.c0)AND('')))OR(rt0.c2))))) ORDER BY NULL ASC, CASE WHEN DATE(rt0.c1, rt0.c2, rt0.c0) THEN x'' END ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, v0, t0, vt0);
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, v0, t0, vt0);
SELECT ALL * FROM rt0, v0, t0, vt0 WHERE (vt0.c0);
SELECT * FROM rt0, t0 INNER JOIN v0 ON LTRIM(((((v0.c0)OR(t0.c69)))OR('0.05651230380735972'))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) THEN (~ (rt0.c2)) END LEFT OUTER JOIN vt1 ON (NOT (((rt0.c0)*(t0.c69)))) WHERE (CASE WHEN x'' THEN (((vt0.c1, vt0.c1, rt0.c1, t0.c69, rt0.c0)) NOT BETWEEN ((t0.c69, rt0.c2, vt0.c1, vt1.c0, rt0.c0)) AND ((t0.c90, t0.c65, t0.c90, t0.c69, rt0.c1))) ELSE LIKELY(NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN (((vt0.c1, vt0.c1, rt0.c1, t0.c69, rt0.c0)) NOT BETWEEN ((t0.c69, rt0.c2, vt0.c1, vt1.c0, rt0.c0)) AND ((t0.c90, t0.c65, t0.c90, t0.c69, rt0.c1))) ELSE LIKELY(NULL) END) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON LTRIM(((((v0.c0)OR(t0.c69)))OR('0.05651230380735972'))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) THEN (~ (rt0.c2)) END LEFT OUTER JOIN vt1 ON (NOT (((rt0.c0)*(t0.c69)))));
SELECT * FROM rt0, t0 INNER JOIN v0 ON LTRIM(((((v0.c0)OR(t0.c69)))OR('0.05651230380735972'))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) THEN (~ (rt0.c2)) END LEFT OUTER JOIN vt1 ON (NOT (((rt0.c0)*(t0.c69)))) WHERE (CASE WHEN x'' THEN (((vt0.c1, vt0.c1, rt0.c1, t0.c69, rt0.c0)) NOT BETWEEN ((t0.c69, rt0.c2, vt0.c1, vt1.c0, rt0.c0)) AND ((t0.c90, t0.c65, t0.c90, t0.c69, rt0.c1))) ELSE LIKELY(NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN (((vt0.c1, vt0.c1, rt0.c1, t0.c69, rt0.c0)) NOT BETWEEN ((t0.c69, rt0.c2, vt0.c1, vt1.c0, rt0.c0)) AND ((t0.c90, t0.c65, t0.c90, t0.c69, rt0.c1))) ELSE LIKELY(NULL) END) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON LTRIM(((((v0.c0)OR(t0.c69)))OR('0.05651230380735972'))) RIGHT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) THEN (~ (rt0.c2)) END LEFT OUTER JOIN vt1 ON (NOT (((rt0.c0)*(t0.c69)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((LOWER(DISTINCT rt0.c2))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0)<<(rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(DISTINCT rt0.c2))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0)<<(rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((LOWER(DISTINCT rt0.c2))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0)<<(rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(DISTINCT rt0.c2))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0)<<(rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((LOWER(DISTINCT rt0.c2))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c0)<<(rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON 0.011574415303746699 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((- (t0.c90))) BETWEEN (((((v0.c0)AND(t0.c90)))AND(t0.c90))) AND (((t0.c69) BETWEEN ('-471178944') AND (t0.c90)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON 0.011574415303746699 ORDER BY (((- (t0.c90))) BETWEEN (((((v0.c0)AND(t0.c90)))AND(t0.c90))) AND (((t0.c69) BETWEEN ('-471178944') AND (t0.c90)))) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON 0.011574415303746699 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((- (t0.c90))) BETWEEN (((((v0.c0)AND(t0.c90)))AND(t0.c90))) AND (((t0.c69) BETWEEN ('-471178944') AND (t0.c90)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON 0.011574415303746699 ORDER BY (((- (t0.c90))) BETWEEN (((((v0.c0)AND(t0.c90)))AND(t0.c90))) AND (((t0.c69) BETWEEN ('-471178944') AND (t0.c90)))) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON 0.011574415303746699 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((- (t0.c90))) BETWEEN (((((v0.c0)AND(t0.c90)))AND(t0.c90))) AND (((t0.c69) BETWEEN ('-471178944') AND (t0.c90)))) DESC;
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c90)&(vt1.c0)))||(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c90)&(vt1.c0)))||(x'' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c90)&(vt1.c0)))||(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c90)&(vt1.c0)))||(x'' COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c90)&(vt1.c0)))||(x'' COLLATE NOCASE)));
SELECT * FROM v0, t0, vt1, rt0, vt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN t0.c65 ELSE vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN vt0.c0 THEN t0.c65 ELSE vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt1, rt0, vt0);
SELECT * FROM v0, t0, vt1, rt0, vt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN t0.c65 ELSE vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN vt0.c0 THEN t0.c65 ELSE vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt1, rt0, vt0);
SELECT * FROM v0, t0, vt1, rt0, vt0 WHERE (CASE rt0.c1  WHEN vt0.c0 THEN t0.c65 ELSE vt0.c1 END COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, 0.46381380777570236, rt0.c0)) AND ((x'', rt0.c0, 0x1eff2d50)))) BETWEEN (rt0.c2) AND (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, 0.46381380777570236, rt0.c0)) AND ((x'', rt0.c0, 0x1eff2d50)))) BETWEEN (rt0.c2) AND (x'')) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, 0.46381380777570236, rt0.c0)) AND ((x'', rt0.c0, 0x1eff2d50)))) BETWEEN (rt0.c2) AND (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, 0.46381380777570236, rt0.c0)) AND ((x'', rt0.c0, 0x1eff2d50)))) BETWEEN (rt0.c2) AND (x'')) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY (((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, 0.46381380777570236, rt0.c0)) AND ((x'', rt0.c0, 0x1eff2d50)))) BETWEEN (rt0.c2) AND (x'')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE))) ORDER BY INSTR(CASE WHEN vt1.c0 THEN '-1718755382' ELSE '-1683125170' END, (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY INSTR(CASE WHEN vt1.c0 THEN '-1718755382' ELSE '-1683125170' END, (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE))) ORDER BY INSTR(CASE WHEN vt1.c0 THEN '-1718755382' ELSE '-1683125170' END, (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY INSTR(CASE WHEN vt1.c0 THEN '-1718755382' ELSE '-1683125170' END, (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE))) ORDER BY INSTR(CASE WHEN vt1.c0 THEN '-1718755382' ELSE '-1683125170' END, (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, rt0, t0 WHERE (((CAST('1665508298' AS TEXT))=(vt0.c1 COLLATE BINARY))) ORDER BY (- (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((CAST('1665508298' AS TEXT))==(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY (- (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0, rt0, t0 WHERE (((CAST('1665508298' AS TEXT))=(vt0.c1 COLLATE BINARY))) ORDER BY (- (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((CAST('1665508298' AS TEXT))==(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0, t0 ORDER BY (- (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0, rt0, t0 WHERE (((CAST('1665508298' AS TEXT))=(vt0.c1 COLLATE BINARY))) ORDER BY (- (vt0.c0)) COLLATE BINARY;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 0x45d9c642 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))<=(((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0X45d9c642 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))<=(((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 0x45d9c642 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))<=(((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0X45d9c642 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))<=(((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON 0x45d9c642 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))<=(((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)+(rt0.c1)))>>(((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.18182561327670432)))) WHERE (CAST((+ (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)+(rt0.c1)))>>(((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.18182561327670432)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)+(rt0.c1)))>>(((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.18182561327670432)))) WHERE (CAST((+ (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)+(rt0.c1)))>>(((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.18182561327670432)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)+(rt0.c1)))>>(((rt0.c0) NOT BETWEEN (vt0.c1) AND (0.18182561327670432)))) WHERE (CAST((+ (vt0.c1)) AS INTEGER));
SELECT ALL * FROM v0, vt1, rt0, t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt1, rt0, t0, vt0);
SELECT ALL * FROM v0, vt1, rt0, t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt1, rt0, t0, vt0);
SELECT ALL * FROM v0, vt1, rt0, t0, vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, vt0, t0 CROSS JOIN vt1 ON ((rt0.c1)+(t0.c90)) COLLATE RTRIM WHERE (((highlight(t0.c90, vt0.c0, rt0.c1, t0.c69))|(((vt0.c1) BETWEEN (t0.c69) AND (vt1.c0))))) ORDER BY CAST(CAST(0.30207309681604877 AS REAL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((highlight(t0.c90, vt0.c0, rt0.c1, t0.c69))|(((vt0.c1) BETWEEN (t0.c69) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 CROSS JOIN vt1 ON ((rt0.c1)+(t0.c90)) COLLATE RTRIM ORDER BY CAST(CAST(0.30207309681604877 AS REAL) AS NUMERIC));
SELECT ALL * FROM rt0, vt0, t0 CROSS JOIN vt1 ON ((rt0.c1)+(t0.c90)) COLLATE RTRIM WHERE (((highlight(t0.c90, vt0.c0, rt0.c1, t0.c69))|(((vt0.c1) BETWEEN (t0.c69) AND (vt1.c0))))) ORDER BY CAST(CAST(0.30207309681604877 AS REAL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((highlight(t0.c90, vt0.c0, rt0.c1, t0.c69))|(((vt0.c1) BETWEEN (t0.c69) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 CROSS JOIN vt1 ON ((rt0.c1)+(t0.c90)) COLLATE RTRIM ORDER BY CAST(CAST(0.30207309681604877 AS REAL) AS NUMERIC));
SELECT ALL * FROM rt0, vt0, t0 CROSS JOIN vt1 ON ((rt0.c1)+(t0.c90)) COLLATE RTRIM WHERE (((highlight(t0.c90, vt0.c0, rt0.c1, t0.c69))|(((vt0.c1) BETWEEN (t0.c69) AND (vt1.c0))))) ORDER BY CAST(CAST(0.30207309681604877 AS REAL) AS NUMERIC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON t0.c69 RIGHT OUTER JOIN v0 ON (((((t0.c65, t0.c90, t0.c69))<=((vt0.c1, rt0.c2, vt0.c0))))%(vt0.c1)) RIGHT OUTER JOIN rt0 ON (~ (vt0.c1)) WHERE (((((x'adb8')+(rt0.c2)))<>(vt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(v0.c0 AS REAL))+(((rt0.c1)LIKE(t0.c65)))) ASC, ((((v0.c0)GLOB(t0.c69)))<<((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'adb8')+(rt0.c2)))<>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c69 RIGHT OUTER JOIN v0 ON (((((t0.c65, t0.c90, t0.c69))<=((vt0.c1, rt0.c2, vt0.c0))))%(vt0.c1)) RIGHT OUTER JOIN rt0 ON (~ (vt0.c1)) ORDER BY ((CAST(v0.c0 AS REAL))+(((rt0.c1)LIKE(t0.c65)))) ASC, ((((v0.c0)GLOB(t0.c69)))<<((~ (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON t0.c69 RIGHT OUTER JOIN v0 ON (((((t0.c65, t0.c90, t0.c69))<=((vt0.c1, rt0.c2, vt0.c0))))%(vt0.c1)) RIGHT OUTER JOIN rt0 ON (~ (vt0.c1)) WHERE (((((x'adb8')+(rt0.c2)))<>(vt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(v0.c0 AS REAL))+(((rt0.c1)LIKE(t0.c65)))) ASC, ((((v0.c0)GLOB(t0.c69)))<<((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'adb8')+(rt0.c2)))<>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c69 RIGHT OUTER JOIN v0 ON (((((t0.c65, t0.c90, t0.c69))<=((vt0.c1, rt0.c2, vt0.c0))))%(vt0.c1)) RIGHT OUTER JOIN rt0 ON (~ (vt0.c1)) ORDER BY ((CAST(v0.c0 AS REAL))+(((rt0.c1)LIKE(t0.c65)))) ASC, ((((v0.c0)GLOB(t0.c69)))<<((~ (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE WHEN (+ (t0.c65)) THEN 0.18182561327670432 ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c65)) THEN 0.18182561327670432 ELSE vt0.c1 END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE WHEN (+ (t0.c65)) THEN 0.18182561327670432 ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c65)) THEN 0.18182561327670432 ELSE vt0.c1 END) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (CASE WHEN (+ (t0.c65)) THEN 0.18182561327670432 ELSE vt0.c1 END);
SELECT ALL * FROM v0, vt1 WHERE (CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN ((vt1.c0) NOTNULL) END) ORDER BY (~ ((~ ('0.9965474845371656'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ ((~ ('0.9965474845371656'))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN ((vt1.c0) NOTNULL) END) ORDER BY (~ ((~ ('0.9965474845371656'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ ((~ ('0.9965474845371656'))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (CASE WHEN (((vt1.c0))>=((vt1.c0))) THEN ((vt1.c0) NOTNULL) END) ORDER BY (~ ((~ ('0.9965474845371656'))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))IS(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))IS(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))IS(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))IS(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))IS(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt1, v0 INDEXED BY i30, t0, rt0, vt0 WHERE (0Xffffffffcd7816bf) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((vt0.c1)%(NULL)) THEN ((vt0.c0)IS(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffcd7816bf) IS TRUE)  as count FROM vt1, v0 INDEXED BY i30, t0, rt0, vt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((vt0.c1)%(NULL)) THEN ((vt0.c0)IS(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt1, v0 INDEXED BY i30, t0, rt0, vt0 WHERE (0Xffffffffcd7816bf) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((vt0.c1)%(NULL)) THEN ((vt0.c0)IS(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffcd7816bf) IS TRUE)  as count FROM vt1, v0 INDEXED BY i30, t0, rt0, vt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((vt0.c1)%(NULL)) THEN ((vt0.c0)IS(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0))>((vt0.c1))))!=(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.48824780587975325)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>((vt0.c1))))!=(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.48824780587975325)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0))>((vt0.c1))))!=(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.48824780587975325)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>((vt0.c1))))!=(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.48824780587975325)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((v0.c0))>((vt0.c1))))!=(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.48824780587975325)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt1, t0, vt0, v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT)) ORDER BY (((0.7018493577651754)) BETWEEN (((t0.c69 IN ()))) AND (((t0.c65 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, t0, vt0, v0 ORDER BY (((0.7018493577651754)) BETWEEN (((t0.c69 IN ()))) AND (((t0.c65 IN ())))) ASC);
SELECT COUNT(*) FROM vt1, t0, vt0, v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT)) ORDER BY (((0.7018493577651754)) BETWEEN (((t0.c69 IN ()))) AND (((t0.c65 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, t0, vt0, v0 ORDER BY (((0.7018493577651754)) BETWEEN (((t0.c69 IN ()))) AND (((t0.c65 IN ())))) ASC);
SELECT COUNT(*) FROM vt1, t0, vt0, v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS TEXT)) ORDER BY (((0.7018493577651754)) BETWEEN (((t0.c69 IN ()))) AND (((t0.c65 IN ())))) ASC;
SELECT * FROM vt1, t0, rt0 WHERE (((((vt1.c0)OR((vt1.c0 IN ()))))AND((NOT (t0.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((vt1.c0 IN ()))))AND((NOT (t0.c65))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((vt1.c0)OR((vt1.c0 IN ()))))AND((NOT (t0.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((vt1.c0 IN ()))))AND((NOT (t0.c65))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((vt1.c0)OR((vt1.c0 IN ()))))AND((NOT (t0.c65)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0, v0, vt0 WHERE (((t0.c90 COLLATE BINARY) IS TRUE)) ORDER BY ((((('-727897960')IS NOT(rt0.c2))))>((((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c90 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0, v0, vt0 ORDER BY ((((('-727897960')IS NOT(rt0.c2))))>((((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, v0, vt0 WHERE (((t0.c90 COLLATE BINARY) IS TRUE)) ORDER BY ((((('-727897960')IS NOT(rt0.c2))))>((((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c90 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, t0, v0, vt0 ORDER BY ((((('-727897960')IS NOT(rt0.c2))))>((((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, v0, vt0 WHERE (((t0.c90 COLLATE BINARY) IS TRUE)) ORDER BY ((((('-727897960')IS NOT(rt0.c2))))>((((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c65)))>>(((t0.c90) NOT BETWEEN (t0.c65) AND (t0.c90)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c65)))>>(((t0.c90) NOT BETWEEN (t0.c65) AND (t0.c90))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c65)))>>(((t0.c90) NOT BETWEEN (t0.c65) AND (t0.c90)))));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c65)))>>(((t0.c90) NOT BETWEEN (t0.c65) AND (t0.c90))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c65)))>>(((t0.c90) NOT BETWEEN (t0.c65) AND (t0.c90)))));
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0 WHERE (CASE WHEN (t0.c69 IN ()) THEN ((('')) BETWEEN ((v0.c0)) AND ((t0.c69))) ELSE t0.c90 END) ORDER BY (t0.c90 COLLATE BINARY IN ()), ((((((vt0.c0) IS TRUE))AND(vt1.c0 COLLATE NOCASE)))AND(((0.20952797238633503) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c69 IN ()) THEN ((('')) BETWEEN ((v0.c0)) AND ((t0.c69))) ELSE t0.c90 END) IS TRUE)  as count FROM vt1, v0, t0 NOT INDEXED, vt0 ORDER BY (t0.c90 COLLATE BINARY IN ()), ((((((vt0.c0) IS TRUE))AND(vt1.c0 COLLATE NOCASE)))AND(((0.20952797238633503) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0 WHERE (CASE WHEN (t0.c69 IN ()) THEN ((('')) BETWEEN ((v0.c0)) AND ((t0.c69))) ELSE t0.c90 END) ORDER BY (t0.c90 COLLATE BINARY IN ()), ((((((vt0.c0) IS TRUE))AND(vt1.c0 COLLATE NOCASE)))AND(((0.20952797238633503) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c69 IN ()) THEN ((('')) BETWEEN ((v0.c0)) AND ((t0.c69))) ELSE t0.c90 END) IS TRUE)  as count FROM vt1, v0, t0 NOT INDEXED, vt0 ORDER BY (t0.c90 COLLATE BINARY IN ()), ((((((vt0.c0) IS TRUE))AND(vt1.c0 COLLATE NOCASE)))AND(((0.20952797238633503) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0 WHERE (CASE WHEN (t0.c69 IN ()) THEN ((('')) BETWEEN ((v0.c0)) AND ((t0.c69))) ELSE t0.c90 END) ORDER BY (t0.c90 COLLATE BINARY IN ()), ((((((vt0.c0) IS TRUE))AND(vt1.c0 COLLATE NOCASE)))AND(((0.20952797238633503) ISNULL)))  NULLS LAST;
SELECT ALL * FROM v0, vt0, vt1 NOT INDEXED WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 NOT INDEXED WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 NOT INDEXED WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB));
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE NOCASE WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE NOCASE WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 COLLATE NOCASE WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0, v0 WHERE ('\n7o3&M');
SELECT SUM(count) FROM (SELECT ALL (('\n7o3&M') IS TRUE)  as count FROM vt0, vt1, t0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0, v0 WHERE ('\n7o3&M');
SELECT SUM(count) FROM (SELECT ALL (('\n7o3&M') IS TRUE)  as count FROM vt0, vt1, t0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0, v0 WHERE ('\n7o3&M');
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c65 THEN t0.c69 WHEN t0.c69 THEN t0.c65 WHEN t0.c65 THEN t0.c65 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c65 THEN t0.c69 WHEN t0.c69 THEN t0.c65 WHEN t0.c65 THEN t0.c65 END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c65 THEN t0.c69 WHEN t0.c69 THEN t0.c65 WHEN t0.c65 THEN t0.c65 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c65 THEN t0.c69 WHEN t0.c69 THEN t0.c65 WHEN t0.c65 THEN t0.c65 END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, ((CASE vt0.c0  WHEN t0.c65 THEN t0.c69 WHEN t0.c69 THEN t0.c65 WHEN t0.c65 THEN t0.c65 END) NOT NULL) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND('ᡩ꼜')))OR((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN vt1.c0 WHEN IFNULL(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNICODE(vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0)) BETWEEN ((x'14b8')) AND ((vt1.c0))) END, NULL COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))AND('ᡩ꼜')))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN vt1.c0 WHEN IFNULL(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNICODE(vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0)) BETWEEN ((x'14b8')) AND ((vt1.c0))) END, NULL COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND('ᡩ꼜')))OR((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN vt1.c0 WHEN IFNULL(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNICODE(vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0)) BETWEEN ((x'14b8')) AND ((vt1.c0))) END, NULL COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS BLOB))AND('ᡩ꼜')))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN vt1.c0 WHEN IFNULL(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNICODE(vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0)) BETWEEN ((x'14b8')) AND ((vt1.c0))) END, NULL COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND('ᡩ꼜')))OR((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN vt1.c0 WHEN IFNULL(vt1.c0, vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN UNICODE(vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0)) BETWEEN ((x'14b8')) AND ((vt1.c0))) END, NULL COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON '-1758128023' FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) ISNULL) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((NOT (rt0.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '-1758128023' FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) ISNULL) ORDER BY (((NOT (rt0.c2))) NOT NULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON '-1758128023' FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) ISNULL) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((NOT (rt0.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '-1758128023' FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) ISNULL) ORDER BY (((NOT (rt0.c2))) NOT NULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON '-1758128023' FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE BINARY) ISNULL) WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((NOT (rt0.c2))) NOT NULL);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((t0.c65)OR(rt0.c1)))OR(vt1.c0)) COLLATE BINARY) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c65 AS REAL))) AND ((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c65)OR(rt0.c1)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c65 AS REAL))) AND ((vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((t0.c65)OR(rt0.c1)))OR(vt1.c0)) COLLATE BINARY) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c65 AS REAL))) AND ((vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c65)OR(rt0.c1)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c65 AS REAL))) AND ((vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((t0.c65)OR(rt0.c1)))OR(vt1.c0)) COLLATE BINARY) ORDER BY (((vt0.c0)) BETWEEN ((CAST(t0.c65 AS REAL))) AND ((vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, t0 WHERE ((((t0.c69 IN ('0.30207309681604877', rt0.c0))) IS TRUE)) ORDER BY (((t0.c90)) BETWEEN (((NOT (t0.c69)))) AND ((rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c69 IN ('0.30207309681604877', rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (((t0.c90)) BETWEEN (((NOT (t0.c69)))) AND ((rt0.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, t0 WHERE ((((t0.c69 IN ('0.30207309681604877', rt0.c0))) IS TRUE)) ORDER BY (((t0.c90)) BETWEEN (((NOT (t0.c69)))) AND ((rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c69 IN ('0.30207309681604877', rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY (((t0.c90)) BETWEEN (((NOT (t0.c69)))) AND ((rt0.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, t0 WHERE ((((t0.c69 IN ('0.30207309681604877', rt0.c0))) IS TRUE)) ORDER BY (((t0.c90)) BETWEEN (((NOT (t0.c69)))) AND ((rt0.c1)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM rt0, t0, v0 WHERE (((((((((((((((-1.236005559E9) IS TRUE))AND(((t0.c69)||(t0.c65)))))AND(((v0.c0) ISNULL))))OR(((v0.c0) ISNULL))))OR(((rt0.c0) IS TRUE))))AND((((t0.c65))==((rt0.c2))))))AND(TRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((-1.236005559E9) IS TRUE))AND(((t0.c69)||(t0.c65)))))AND(((v0.c0) ISNULL))))OR(((v0.c0) ISNULL))))OR(((rt0.c0) IS TRUE))))AND((((t0.c65))=((rt0.c2))))))AND(TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT COUNT(*) FROM rt0, t0, v0 WHERE (((((((((((((((-1.236005559E9) IS TRUE))AND(((t0.c69)||(t0.c65)))))AND(((v0.c0) ISNULL))))OR(((v0.c0) ISNULL))))OR(((rt0.c0) IS TRUE))))AND((((t0.c65))==((rt0.c2))))))AND(TRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((-1.236005559E9) IS TRUE))AND(((t0.c69)||(t0.c65)))))AND(((v0.c0) ISNULL))))OR(((v0.c0) ISNULL))))OR(((rt0.c0) IS TRUE))))AND((((t0.c65))=((rt0.c2))))))AND(TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0, t0, v0);
SELECT COUNT(*) FROM rt0, t0, v0 WHERE (((((((((((((((-1.236005559E9) IS TRUE))AND(((t0.c69)||(t0.c65)))))AND(((v0.c0) ISNULL))))OR(((v0.c0) ISNULL))))OR(((rt0.c0) IS TRUE))))AND((((t0.c65))==((rt0.c2))))))AND(TRIM(rt0.c0))));
SELECT ALL * FROM t0, vt0, rt0, vt1, v0 WHERE (DATE(((vt0.c1) ISNULL), CASE t0.c90  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c65 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c1) ISNULL), CASE t0.c90  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c65 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0, vt0, rt0, vt1, v0);
SELECT ALL * FROM t0, vt0, rt0, vt1, v0 WHERE (DATE(((vt0.c1) ISNULL), CASE t0.c90  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c65 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c1) ISNULL), CASE t0.c90  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c65 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0, vt0, rt0, vt1, v0);
SELECT ALL * FROM t0, vt0, rt0, vt1, v0 WHERE (DATE(((vt0.c1) ISNULL), CASE t0.c90  WHEN rt0.c2 THEN vt0.c1 WHEN t0.c65 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, rt0.c0 COLLATE NOCASE));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON (((t0.c69, 0.3554019470934666, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((t0.c65) NOTNULL), CAST(rt0.c0 AS NUMERIC), ((vt1.c0)<<(rt0.c0)), 0.6334877516947238, (NULL IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c69)), (t0.c65 IN (vt1.c0)), LOWER(DISTINCT rt0.c2), NULL, ''))) WHERE ((((CASE WHEN rt0.c1 THEN t0.c65 END))=((CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN t0.c65 END))=((CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON (((t0.c69, 0.3554019470934666, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((t0.c65) NOTNULL), CAST(rt0.c0 AS NUMERIC), ((vt1.c0)<<(rt0.c0)), 0.6334877516947238, (NULL IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c69)), (t0.c65 IN (vt1.c0)), LOWER(DISTINCT rt0.c2), NULL, ''))));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON (((t0.c69, 0.3554019470934666, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((t0.c65) NOTNULL), CAST(rt0.c0 AS NUMERIC), ((vt1.c0)<<(rt0.c0)), 0.6334877516947238, (NULL IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c69)), (t0.c65 IN (vt1.c0)), LOWER(DISTINCT rt0.c2), NULL, ''))) WHERE ((((CASE WHEN rt0.c1 THEN t0.c65 END))=((CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN t0.c65 END))=((CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t0 ON (((t0.c69, 0.3554019470934666, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((t0.c65) NOTNULL), CAST(rt0.c0 AS NUMERIC), ((vt1.c0)<<(rt0.c0)), 0.6334877516947238, (NULL IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c69)), (t0.c65 IN (vt1.c0)), LOWER(DISTINCT rt0.c2), NULL, ''))));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t0 ON (((t0.c69, 0.3554019470934666, rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((t0.c65) NOTNULL), CAST(rt0.c0 AS NUMERIC), ((vt1.c0)<<(rt0.c0)), 0.6334877516947238, (NULL IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c69)), (t0.c65 IN (vt1.c0)), LOWER(DISTINCT rt0.c2), NULL, ''))) WHERE ((((CASE WHEN rt0.c1 THEN t0.c65 END))=((CAST(rt0.c2 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((('695768879'))=((TRIM(t0.c65, t0.c90)))));
SELECT SUM(count) FROM (SELECT ((((('695768879'))=((TRIM(t0.c65, t0.c90))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((('695768879'))=((TRIM(t0.c65, t0.c90)))));
SELECT SUM(count) FROM (SELECT ((((('695768879'))=((TRIM(t0.c65, t0.c90))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((('695768879'))=((TRIM(t0.c65, t0.c90)))));
SELECT ALL * FROM vt1, v0, vt0 WHERE (CASE WHEN (((NULL, v0.c0, vt1.c0))<=((v0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL, v0.c0, vt1.c0))<=((v0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (CASE WHEN (((NULL, v0.c0, vt1.c0))<=((v0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL, v0.c0, vt1.c0))<=((v0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (CASE WHEN (((NULL, v0.c0, vt1.c0))<=((v0.c0, vt0.c1, vt0.c1))) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((t0.c69))>=((rt0.c1))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON t0.c90 RIGHT OUTER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) BETWEEN (LIKELY('1401748414')) AND ((((t0.c69, t0.c69, t0.c69))=((vt0.c1, vt0.c0, v0.c0))))) LEFT OUTER JOIN vt1 ON CAST((- (rt0.c0)) AS REAL) WHERE (((((rt0.c1)>=(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((t0.c69))>=((rt0.c1))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON t0.c90 RIGHT OUTER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) BETWEEN (LIKELY('1401748414')) AND ((((t0.c69, t0.c69, t0.c69))=((vt0.c1, vt0.c0, v0.c0))))) LEFT OUTER JOIN vt1 ON CAST((- (rt0.c0)) AS REAL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((t0.c69))>=((rt0.c1))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON t0.c90 RIGHT OUTER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) BETWEEN (LIKELY('1401748414')) AND ((((t0.c69, t0.c69, t0.c69))=((vt0.c1, vt0.c0, v0.c0))))) LEFT OUTER JOIN vt1 ON CAST((- (rt0.c0)) AS REAL) WHERE (((((rt0.c1)>=(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((t0.c69))>=((rt0.c1))) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON t0.c90 RIGHT OUTER JOIN t0 ON ((CAST(vt1.c0 AS TEXT)) BETWEEN (LIKELY('1401748414')) AND ((((t0.c69, t0.c69, t0.c69))=((vt0.c1, vt0.c0, v0.c0))))) LEFT OUTER JOIN vt1 ON CAST((- (rt0.c0)) AS REAL));
SELECT COUNT(*) FROM t0, vt0, rt0, v0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0, rt0, v0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, v0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0, rt0, v0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, v0, vt1 WHERE (vt0.c1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (0.7099292256392647);
SELECT SUM(count) FROM (SELECT ((0.7099292256392647) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (0.7099292256392647);
SELECT SUM(count) FROM (SELECT ((0.7099292256392647) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (0.7099292256392647);
SELECT ALL * FROM vt1, rt0 NOT INDEXED, t0, v0 WHERE (CASE WHEN x'' THEN t0.c65 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN t0.c65 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, t0, v0);
SELECT ALL * FROM vt1, rt0 NOT INDEXED, t0, v0 WHERE (CASE WHEN x'' THEN t0.c65 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN t0.c65 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, t0, v0);
SELECT ALL * FROM vt1, rt0 NOT INDEXED, t0, v0 WHERE (CASE WHEN x'' THEN t0.c65 END COLLATE NOCASE);
SELECT * FROM v0, t0 WHERE ((((t0.c69))<=((t0.c90))) COLLATE RTRIM) ORDER BY ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 END)==(((t0.c90)&(t0.c69)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c69))<=((t0.c90))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 END)==(((t0.c90)&(t0.c69)))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((((t0.c69))<=((t0.c90))) COLLATE RTRIM) ORDER BY ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 END)==(((t0.c90)&(t0.c69)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c69))<=((t0.c90))) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 END)==(((t0.c90)&(t0.c69)))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((((t0.c69))<=((t0.c90))) COLLATE RTRIM) ORDER BY ((CASE t0.c69  WHEN t0.c65 THEN t0.c90 END)==(((t0.c90)&(t0.c69)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((('-PGRQPU')<=('')))OR(((((-8.47767873E8)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c1  WHEN x'' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((('-PGRQPU')<=('')))OR(((((-8.47767873E8)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c1  WHEN x'' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((('-PGRQPU')<=('')))OR(((((-8.47767873E8)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c1  WHEN x'' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((('-PGRQPU')<=('')))OR(((((-8.47767873E8)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c1  WHEN x'' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((('-PGRQPU')<=('')))OR(((((-8.47767873E8)AND(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c1  WHEN x'' THEN vt0.c0 END)));
SELECT ALL * FROM t0, vt1, rt0, vt0, v0 WHERE (TYPEOF((('2047118841') NOT BETWEEN (v0.c0) AND (t0.c69)))) ORDER BY (((CAST(vt0.c1 AS REAL)))<>((IFNULL(rt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((('2047118841') NOT BETWEEN (v0.c0) AND (t0.c69)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0, v0 ORDER BY (((CAST(vt0.c1 AS REAL)))<>((IFNULL(rt0.c1, vt0.c1)))));
SELECT ALL * FROM t0, vt1, rt0, vt0, v0 WHERE (TYPEOF((('2047118841') NOT BETWEEN (v0.c0) AND (t0.c69)))) ORDER BY (((CAST(vt0.c1 AS REAL)))<>((IFNULL(rt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((('2047118841') NOT BETWEEN (v0.c0) AND (t0.c69)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0, v0 ORDER BY (((CAST(vt0.c1 AS REAL)))<>((IFNULL(rt0.c1, vt0.c1)))));
SELECT ALL * FROM t0, vt1, rt0, vt0, v0 WHERE (TYPEOF((('2047118841') NOT BETWEEN (v0.c0) AND (t0.c69)))) ORDER BY (((CAST(vt0.c1 AS REAL)))<>((IFNULL(rt0.c1, vt0.c1))));
SELECT COUNT(*) FROM t0, v0, rt0, vt0, vt1 WHERE (((((t0.c90)>=(t0.c69))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c90)>=(t0.c69))) IS FALSE)) IS TRUE)  as count FROM t0, v0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, v0, rt0, vt0, vt1 WHERE (((((t0.c90)>=(t0.c69))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c90)>=(t0.c69))) IS FALSE)) IS TRUE)  as count FROM t0, v0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, v0, rt0, vt0, vt1 WHERE (((((t0.c90)>=(t0.c69))) IS FALSE));
SELECT COUNT(*) FROM vt0, t0, vt1, v0 WHERE (CAST('327516627' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('327516627' AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1, v0);
SELECT COUNT(*) FROM vt0, t0, vt1, v0 WHERE (CAST('327516627' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('327516627' AS REAL)) IS TRUE)  as count FROM vt0, t0, vt1, v0);
SELECT COUNT(*) FROM vt0, t0, vt1, v0 WHERE (CAST('327516627' AS REAL));
SELECT * FROM rt0 WHERE (((json_remove(rt0.c0, NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_remove(rt0.c0, NULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((json_remove(rt0.c0, NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_remove(rt0.c0, NULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((json_remove(rt0.c0, NULL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((highlight(vt1.c0, vt0.c1, vt1.c0, vt0.c1)))) DESC  NULLS LAST, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((highlight(vt1.c0, vt0.c1, vt1.c0, vt0.c1)))) DESC  NULLS LAST, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((highlight(vt1.c0, vt0.c1, vt1.c0, vt0.c1)))) DESC  NULLS LAST, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((highlight(vt1.c0, vt0.c1, vt1.c0, vt0.c1)))) DESC  NULLS LAST, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 AS BLOB)) ORDER BY (((vt0.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((highlight(vt1.c0, vt0.c1, vt1.c0, vt0.c1)))) DESC  NULLS LAST, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0, v0, vt1 WHERE ((((((('')AND(t0.c65)))OR(t0.c69)))%(((t0.c90) IS FALSE)))) ORDER BY 0.0971339743048304 ASC, json_patch(CASE WHEN t0.c65 THEN 0.5379911632719309 WHEN rt0.c0 THEN t0.c90 WHEN vt0.c1 THEN t0.c65 ELSE rt0.c2 END, ((x'') IS FALSE)), (((((rt0.c0, t0.c69, rt0.c1)) NOT BETWEEN ((t0.c90, t0.c65, vt1.c0)) AND ((vt0.c1, vt0.c0, v0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(t0.c65)))OR(t0.c69)))%(((t0.c90) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0, v0, vt1 ORDER BY 0.0971339743048304 ASC, json_patch(CASE WHEN t0.c65 THEN 0.5379911632719309 WHEN rt0.c0 THEN t0.c90 WHEN vt0.c1 THEN t0.c65 ELSE rt0.c2 END, ((x'') IS FALSE)), (((((rt0.c0, t0.c69, rt0.c1)) NOT BETWEEN ((t0.c90, t0.c65, vt1.c0)) AND ((vt0.c1, vt0.c0, v0.c0)))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, v0, vt1 WHERE ((((((('')AND(t0.c65)))OR(t0.c69)))%(((t0.c90) IS FALSE)))) ORDER BY 0.0971339743048304 ASC, json_patch(CASE WHEN t0.c65 THEN 0.5379911632719309 WHEN rt0.c0 THEN t0.c90 WHEN vt0.c1 THEN t0.c65 ELSE rt0.c2 END, ((x'') IS FALSE)), (((((rt0.c0, t0.c69, rt0.c1)) NOT BETWEEN ((t0.c90, t0.c65, vt1.c0)) AND ((vt0.c1, vt0.c0, v0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(t0.c65)))OR(t0.c69)))%(((t0.c90) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0, v0, vt1 ORDER BY 0.0971339743048304 ASC, json_patch(CASE WHEN t0.c65 THEN 0.5379911632719309 WHEN rt0.c0 THEN t0.c90 WHEN vt0.c1 THEN t0.c65 ELSE rt0.c2 END, ((x'') IS FALSE)), (((((rt0.c0, t0.c69, rt0.c1)) NOT BETWEEN ((t0.c90, t0.c65, vt1.c0)) AND ((vt0.c1, vt0.c0, v0.c0)))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, v0, vt1 WHERE ((((((('')AND(t0.c65)))OR(t0.c69)))%(((t0.c90) IS FALSE)))) ORDER BY 0.0971339743048304 ASC, json_patch(CASE WHEN t0.c65 THEN 0.5379911632719309 WHEN rt0.c0 THEN t0.c90 WHEN vt0.c1 THEN t0.c65 ELSE rt0.c2 END, ((x'') IS FALSE)), (((((rt0.c0, t0.c69, rt0.c1)) NOT BETWEEN ((t0.c90, t0.c65, vt1.c0)) AND ((vt0.c1, vt0.c0, v0.c0)))) IS FALSE)  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((json(vt0.c0))) AND (((((v0.c0))<=((t0.c90)))))) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((vt1.c0) IS TRUE), 0.008167629866849047) RIGHT OUTER JOIN rt0 ON ((t0.c65) NOT BETWEEN (((t0.c69)+(x'c04d'))) AND (((rt0.c1)%(t0.c65)))) CROSS JOIN t0 ON (vt0.c0 COLLATE BINARY IN ((vt0.c1 IN (t0.c90)))) WHERE ((UPPER(DISTINCT vt0.c0) IN (((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT vt0.c0) IN (((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((json(vt0.c0))) AND (((((v0.c0))<=((t0.c90)))))) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((vt1.c0) IS TRUE), 0.008167629866849047) RIGHT OUTER JOIN rt0 ON ((t0.c65) NOT BETWEEN (((t0.c69)+(x'c04d'))) AND (((rt0.c1)%(t0.c65)))) CROSS JOIN t0 ON (vt0.c0 COLLATE BINARY IN ((vt0.c1 IN (t0.c90)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((json(vt0.c0))) AND (((((v0.c0))<=((t0.c90)))))) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((vt1.c0) IS TRUE), 0.008167629866849047) RIGHT OUTER JOIN rt0 ON ((t0.c65) NOT BETWEEN (((t0.c69)+(x'c04d'))) AND (((rt0.c1)%(t0.c65)))) CROSS JOIN t0 ON (vt0.c0 COLLATE BINARY IN ((vt0.c1 IN (t0.c90)))) WHERE ((UPPER(DISTINCT vt0.c0) IN (((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT vt0.c0) IN (((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((json(vt0.c0))) AND (((((v0.c0))<=((t0.c90)))))) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((vt1.c0) IS TRUE), 0.008167629866849047) RIGHT OUTER JOIN rt0 ON ((t0.c65) NOT BETWEEN (((t0.c69)+(x'c04d'))) AND (((rt0.c1)%(t0.c65)))) CROSS JOIN t0 ON (vt0.c0 COLLATE BINARY IN ((vt0.c1 IN (t0.c90)))));
SELECT * FROM t0, v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, rt0);
SELECT * FROM t0, v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, v0, rt0);
SELECT * FROM t0, v0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN v0 ON CAST(t0.c90 COLLATE BINARY AS TEXT) WHERE (((('4?')) BETWEEN (('')) AND ((((((x'8679')OR(vt1.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('4?')) BETWEEN (('')) AND ((((((x'8679')OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON CAST(t0.c90 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN v0 ON CAST(t0.c90 COLLATE BINARY AS TEXT) WHERE (((('4?')) BETWEEN (('')) AND ((((((x'8679')OR(vt1.c0)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('4?')) BETWEEN (('')) AND ((((((x'8679')OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN v0 ON CAST(t0.c90 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN v0 ON CAST(t0.c90 COLLATE BINARY AS TEXT) WHERE (((('4?')) BETWEEN (('')) AND ((((((x'8679')OR(vt1.c0)))OR(vt1.c0))))));
SELECT COUNT(*) FROM t0, rt0, vt0, vt1, v0 WHERE ((((t0.c90 IN ()))>(vt0.c1 COLLATE BINARY))) ORDER BY (((NOT (vt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c90 IN ()))>(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, vt0, vt1, v0 ORDER BY (((NOT (vt0.c1))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1, v0 WHERE ((((t0.c90 IN ()))>(vt0.c1 COLLATE BINARY))) ORDER BY (((NOT (vt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c90 IN ()))>(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, vt0, vt1, v0 ORDER BY (((NOT (vt0.c1))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1, v0 WHERE ((((t0.c90 IN ()))>(vt0.c1 COLLATE BINARY))) ORDER BY (((NOT (vt0.c1))) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69)))) NOT BETWEEN (t0.c69 COLLATE RTRIM) AND (t0.c65 COLLATE RTRIM))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69)))) NOT BETWEEN (t0.c69 COLLATE RTRIM) AND (t0.c65 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69)))) NOT BETWEEN (t0.c69 COLLATE RTRIM) AND (t0.c65 COLLATE RTRIM))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69)))) NOT BETWEEN (t0.c69 COLLATE RTRIM) AND (t0.c65 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69)))) NOT BETWEEN (t0.c69 COLLATE RTRIM) AND (t0.c65 COLLATE RTRIM))) ORDER BY NULL;
SELECT ALL * FROM vt0, v0, rt0, vt1, t0 WHERE (vt1.c0) ORDER BY CAST('1665508298' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))<<(NULL)) ASC, CASE WHEN ((t0.c65)IS(t0.c90)) THEN rt0.c2 ELSE vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, v0, rt0, vt1, t0 ORDER BY CAST('1665508298' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))<<(NULL)) ASC, CASE WHEN ((t0.c65)IS(t0.c90)) THEN rt0.c2 ELSE vt1.c0 END  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0, vt1, t0 WHERE (vt1.c0) ORDER BY CAST('1665508298' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))<<(NULL)) ASC, CASE WHEN ((t0.c65)IS(t0.c90)) THEN rt0.c2 ELSE vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, v0, rt0, vt1, t0 ORDER BY CAST('1665508298' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))<<(NULL)) ASC, CASE WHEN ((t0.c65)IS(t0.c90)) THEN rt0.c2 ELSE vt1.c0 END  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0, vt1, t0 WHERE (vt1.c0) ORDER BY CAST('1665508298' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))<<(NULL)) ASC, CASE WHEN ((t0.c65)IS(t0.c90)) THEN rt0.c2 ELSE vt1.c0 END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (((v0.c0) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (CAST(NULL AS NUMERIC)))) ORDER BY CAST((((rt0.c2))=((vt1.c0))) AS NUMERIC)  NULLS FIRST, CHANGES() DESC  NULLS LAST, ((x'17b0') BETWEEN ((+ ('1131909335'))) AND ((((rt0.c2))<=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY CAST((((rt0.c2))==((vt1.c0))) AS NUMERIC)  NULLS FIRST, CHANGES() DESC  NULLS LAST, ((x'17b0') BETWEEN ((+ ('1131909335'))) AND ((((rt0.c2))<=((rt0.c2))))));
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (((v0.c0) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (CAST(NULL AS NUMERIC)))) ORDER BY CAST((((rt0.c2))=((vt1.c0))) AS NUMERIC)  NULLS FIRST, CHANGES() DESC  NULLS LAST, ((x'17b0') BETWEEN ((+ ('1131909335'))) AND ((((rt0.c2))<=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY CAST((((rt0.c2))==((vt1.c0))) AS NUMERIC)  NULLS FIRST, CHANGES() DESC  NULLS LAST, ((x'17b0') BETWEEN ((+ ('1131909335'))) AND ((((rt0.c2))<=((rt0.c2))))));
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (((v0.c0) NOT BETWEEN (((rt0.c0)<>(rt0.c0))) AND (CAST(NULL AS NUMERIC)))) ORDER BY CAST((((rt0.c2))=((vt1.c0))) AS NUMERIC)  NULLS FIRST, CHANGES() DESC  NULLS LAST, ((x'17b0') BETWEEN ((+ ('1131909335'))) AND ((((rt0.c2))<=((rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt1, vt0, t0 CROSS JOIN v0 ON ((CASE WHEN t0.c65 THEN t0.c90 END) ISNULL) CROSS JOIN rt0 ON (x'b05d' IN (t0.c69)) COLLATE BINARY COLLATE NOCASE WHERE (((((((((t0.c90)OR(rt0.c1)))AND(1722084145)))AND(((vt0.c0)<=(rt0.c2)))))AND(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c90)OR(rt0.c1)))AND(1722084145)))AND(((vt0.c0)<=(rt0.c2)))))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, t0 CROSS JOIN v0 ON ((CASE WHEN t0.c65 THEN t0.c90 END) ISNULL) CROSS JOIN rt0 ON (x'b05d' IN (t0.c69)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt1, vt0, t0 CROSS JOIN v0 ON ((CASE WHEN t0.c65 THEN t0.c90 END) ISNULL) CROSS JOIN rt0 ON (x'b05d' IN (t0.c69)) COLLATE BINARY COLLATE NOCASE WHERE (((((((((t0.c90)OR(rt0.c1)))AND(1722084145)))AND(((vt0.c0)<=(rt0.c2)))))AND(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c90)OR(rt0.c1)))AND(1722084145)))AND(((vt0.c0)<=(rt0.c2)))))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, t0 CROSS JOIN v0 ON ((CASE WHEN t0.c65 THEN t0.c90 END) ISNULL) CROSS JOIN rt0 ON (x'b05d' IN (t0.c69)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt1, vt0, t0 CROSS JOIN v0 ON ((CASE WHEN t0.c65 THEN t0.c90 END) ISNULL) CROSS JOIN rt0 ON (x'b05d' IN (t0.c69)) COLLATE BINARY COLLATE NOCASE WHERE (((((((((t0.c90)OR(rt0.c1)))AND(1722084145)))AND(((vt0.c0)<=(rt0.c2)))))AND(CAST(v0.c0 AS REAL))));
SELECT ALL * FROM vt1, rt0, vt0 INDEXED BY i1, t0 WHERE (((((((t0.c90)>>(vt0.c1)))AND(CASE vt1.c0  WHEN rt0.c0 THEN t0.c69 ELSE t0.c90 END)))AND(((rt0.c2)-(t0.c65))))) ORDER BY CAST((rt0.c0 IN ()) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c90)>>(vt0.c1)))AND(CASE vt1.c0  WHEN rt0.c0 THEN t0.c69 ELSE t0.c90 END)))AND(((rt0.c2)-(t0.c65))))) IS TRUE)  as count FROM vt1, rt0, vt0 INDEXED BY i1, t0 ORDER BY CAST((rt0.c0 IN ()) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt0 INDEXED BY i1, t0 WHERE (((((((t0.c90)>>(vt0.c1)))AND(CASE vt1.c0  WHEN rt0.c0 THEN t0.c69 ELSE t0.c90 END)))AND(((rt0.c2)-(t0.c65))))) ORDER BY CAST((rt0.c0 IN ()) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c90)>>(vt0.c1)))AND(CASE vt1.c0  WHEN rt0.c0 THEN t0.c69 ELSE t0.c90 END)))AND(((rt0.c2)-(t0.c65))))) IS TRUE)  as count FROM vt1, rt0, vt0 INDEXED BY i1, t0 ORDER BY CAST((rt0.c0 IN ()) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c65)OR(t0.c69)) IN (t0.c90, ((t0.c65) BETWEEN (t0.c65) AND (t0.c69))))) ORDER BY ((t0.c90 COLLATE RTRIM)IS(CAST(t0.c90 AS REAL))) ASC  NULLS FIRST, x'', (('J-O]W5')||(((t0.c69) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c65)OR(t0.c69)) IN (t0.c90, ((t0.c65) BETWEEN (t0.c65) AND (t0.c69))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c90 COLLATE RTRIM)IS(CAST(t0.c90 AS REAL))) ASC  NULLS FIRST, x'', (('J-O]W5')||(((t0.c69) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c65)OR(t0.c69)) IN (t0.c90, ((t0.c65) BETWEEN (t0.c65) AND (t0.c69))))) ORDER BY ((t0.c90 COLLATE RTRIM)IS(CAST(t0.c90 AS REAL))) ASC  NULLS FIRST, x'', (('J-O]W5')||(((t0.c69) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c65)OR(t0.c69)) IN (t0.c90, ((t0.c65) BETWEEN (t0.c65) AND (t0.c69))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c90 COLLATE RTRIM)IS(CAST(t0.c90 AS REAL))) ASC  NULLS FIRST, x'', (('J-O]W5')||(((t0.c69) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c65)OR(t0.c69)) IN (t0.c90, ((t0.c65) BETWEEN (t0.c65) AND (t0.c69))))) ORDER BY ((t0.c90 COLLATE RTRIM)IS(CAST(t0.c90 AS REAL))) ASC  NULLS FIRST, x'', (('J-O]W5')||(((t0.c69) IS TRUE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS FALSE));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (- (((t0.c90)||(vt0.c0)))) WHERE ((((((NOT (NULL)))OR(t0.c65 COLLATE RTRIM)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (NULL)))OR(t0.c65 COLLATE RTRIM)))AND(NULL))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (- (((t0.c90)||(vt0.c0)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (- (((t0.c90)||(vt0.c0)))) WHERE ((((((NOT (NULL)))OR(t0.c65 COLLATE RTRIM)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (NULL)))OR(t0.c65 COLLATE RTRIM)))AND(NULL))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (- (((t0.c90)||(vt0.c0)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (- (((t0.c90)||(vt0.c0)))) WHERE ((((((NOT (NULL)))OR(t0.c65 COLLATE RTRIM)))AND(NULL)));
SELECT * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) IS FALSE)) ORDER BY v0.c0, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) IS FALSE)) ORDER BY v0.c0, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) IS FALSE)) ORDER BY v0.c0, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((x'1c7166a4') NOT NULL)) ISNULL)) ORDER BY (((v0.c0 IN ()))LIKE((v0.c0 IN (v0.c0, v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'1c7166a4') NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))LIKE((v0.c0 IN (v0.c0, v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((x'1c7166a4') NOT NULL)) ISNULL)) ORDER BY (((v0.c0 IN ()))LIKE((v0.c0 IN (v0.c0, v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'1c7166a4') NOT NULL)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))LIKE((v0.c0 IN (v0.c0, v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((x'1c7166a4') NOT NULL)) ISNULL)) ORDER BY (((v0.c0 IN ()))LIKE((v0.c0 IN (v0.c0, v0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0, v0, vt0, t0 WHERE (CAST(CASE 0.6961643168009238  WHEN t0.c69 THEN rt0.c0 WHEN '' THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS NUMERIC)) ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(0.37650846781978053)))AND(rt0.c2)))AND(v0.c0))) BETWEEN (((t0.c90) BETWEEN (t0.c90) AND (rt0.c2))) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 0.6961643168009238  WHEN t0.c69 THEN rt0.c0 WHEN '' THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0, t0 ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(0.37650846781978053)))AND(rt0.c2)))AND(v0.c0))) BETWEEN (((t0.c90) BETWEEN (t0.c90) AND (rt0.c2))) AND (x''))  NULLS FIRST);
SELECT * FROM rt0, v0, vt0, t0 WHERE (CAST(CASE 0.6961643168009238  WHEN t0.c69 THEN rt0.c0 WHEN '' THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS NUMERIC)) ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(0.37650846781978053)))AND(rt0.c2)))AND(v0.c0))) BETWEEN (((t0.c90) BETWEEN (t0.c90) AND (rt0.c2))) AND (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE 0.6961643168009238  WHEN t0.c69 THEN rt0.c0 WHEN '' THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0, t0 ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(0.37650846781978053)))AND(rt0.c2)))AND(v0.c0))) BETWEEN (((t0.c90) BETWEEN (t0.c90) AND (rt0.c2))) AND (x''))  NULLS FIRST);
SELECT * FROM rt0, v0, vt0, t0 WHERE (CAST(CASE 0.6961643168009238  WHEN t0.c69 THEN rt0.c0 WHEN '' THEN v0.c0 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS NUMERIC)) ORDER BY ((((((((((vt0.c0)AND(rt0.c0)))OR(0.37650846781978053)))AND(rt0.c2)))AND(v0.c0))) BETWEEN (((t0.c90) BETWEEN (t0.c90) AND (rt0.c2))) AND (x''))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c2)AND(t0.c65)))OR(vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON CASE (('?|')%(rt0.c2))  WHEN ((vt0.c1) NOT BETWEEN (t0.c90) AND (vt0.c1)) THEN ((rt0.c1)%('8c')) ELSE ((rt0.c1)%(v0.c0)) END FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE x'69cc' END) BETWEEN (t0.c90) AND ((vt0.c1 IN ()))) WHERE ((((vt1.c0)) BETWEEN ((x'')) AND ((DATE(rt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((x'')) AND ((DATE(rt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c2)AND(t0.c65)))OR(vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON CASE (('?|')%(rt0.c2))  WHEN ((vt0.c1) NOT BETWEEN (t0.c90) AND (vt0.c1)) THEN ((rt0.c1)%('8c')) ELSE ((rt0.c1)%(v0.c0)) END FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE x'69cc' END) BETWEEN (t0.c90) AND ((vt0.c1 IN ()))));
SELECT COUNT(*) FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c2)AND(t0.c65)))OR(vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON CASE (('?|')%(rt0.c2))  WHEN ((vt0.c1) NOT BETWEEN (t0.c90) AND (vt0.c1)) THEN ((rt0.c1)%('8c')) ELSE ((rt0.c1)%(v0.c0)) END FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE x'69cc' END) BETWEEN (t0.c90) AND ((vt0.c1 IN ()))) WHERE ((((vt1.c0)) BETWEEN ((x'')) AND ((DATE(rt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((x'')) AND ((DATE(rt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c2)AND(t0.c65)))OR(vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON CASE (('?|')%(rt0.c2))  WHEN ((vt0.c1) NOT BETWEEN (t0.c90) AND (vt0.c1)) THEN ((rt0.c1)%('8c')) ELSE ((rt0.c1)%(v0.c0)) END FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE x'69cc' END) BETWEEN (t0.c90) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt1 NOT INDEXED, rt0, vt0 WHERE (((- (vt0.c1)) IN (CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN (CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt1, rt0 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM v0, vt1 NOT INDEXED, rt0, vt0 WHERE (((- (vt0.c1)) IN (CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN (CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt1, rt0 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM v0, vt1 NOT INDEXED, rt0, vt0 WHERE (((- (vt0.c1)) IN (CASE vt0.c0  WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0, vt1, vt0 INNER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt1, vt0 NOT INDEXED INNER JOIN rt0 ON rt0.c0);
SELECT ALL * FROM v0, vt1, vt0 INNER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0, vt1, vt0 NOT INDEXED INNER JOIN rt0 ON rt0.c0);
SELECT ALL * FROM v0, vt1, vt0 INNER JOIN rt0 ON rt0.c0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND ((- (vt0.c1)))));
SELECT ALL * FROM rt0, v0, t0, vt0, vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c0, 0.02431911960614286));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT vt1.c0, 0.02431911960614286)) IS TRUE)  as count FROM rt0, v0, t0, vt0, vt1);
SELECT ALL * FROM rt0, v0, t0, vt0, vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c0, 0.02431911960614286));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT vt1.c0, 0.02431911960614286)) IS TRUE)  as count FROM rt0, v0, t0, vt0, vt1);
SELECT ALL * FROM rt0, v0, t0, vt0, vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c0, 0.02431911960614286));
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0, rt0 WHERE (CAST((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0, rt0 WHERE (CAST((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, v0, t0, vt0, rt0 WHERE (CAST((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) AS INTEGER));
SELECT COUNT(*) FROM vt1, t0, v0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, t0.c69, vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, t0.c65, (- (v0.c0)))) AND ((NULL, ((rt0.c0)AND(rt0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END))) INNER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) NOT BETWEEN ((~ (''))) AND (vt0.c1)) WHERE (((((rt0.c2)GLOB(v0.c0)))GLOB(((v0.c0) BETWEEN (t0.c65) AND (vt0.c1))))) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c2 END  WHEN ABS(t0.c69) THEN 0.09411242961903044 WHEN ((t0.c90)AND(t0.c65)) THEN (((t0.c90)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((t0.c69)|(vt1.c0)) THEN ((((((((t0.c69)AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)) WHEN ((t0.c69)>(v0.c0)) THEN t0.c65 WHEN CASE WHEN rt0.c2 THEN 2043916673 END THEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c69)) ELSE x'' END DESC  NULLS FIRST, (+ (((t0.c69)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(v0.c0)))GLOB(((v0.c0) BETWEEN (t0.c65) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, v0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, t0.c69, vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, t0.c65, (- (v0.c0)))) AND ((NULL, ((rt0.c0)AND(rt0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END))) INNER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) NOT BETWEEN ((~ (''))) AND (vt0.c1)) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c2 END  WHEN ABS(t0.c69) THEN 0.09411242961903044 WHEN ((t0.c90)AND(t0.c65)) THEN (((t0.c90)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((t0.c69)|(vt1.c0)) THEN ((((((((t0.c69)AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)) WHEN ((t0.c69)>(v0.c0)) THEN t0.c65 WHEN CASE WHEN rt0.c2 THEN 2043916673 END THEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c69)) ELSE x'' END DESC  NULLS FIRST, (+ (((t0.c69)|(v0.c0)))));
SELECT COUNT(*) FROM vt1, t0, v0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, t0.c69, vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, t0.c65, (- (v0.c0)))) AND ((NULL, ((rt0.c0)AND(rt0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END))) INNER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) NOT BETWEEN ((~ (''))) AND (vt0.c1)) WHERE (((((rt0.c2)GLOB(v0.c0)))GLOB(((v0.c0) BETWEEN (t0.c65) AND (vt0.c1))))) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c2 END  WHEN ABS(t0.c69) THEN 0.09411242961903044 WHEN ((t0.c90)AND(t0.c65)) THEN (((t0.c90)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((t0.c69)|(vt1.c0)) THEN ((((((((t0.c69)AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)) WHEN ((t0.c69)>(v0.c0)) THEN t0.c65 WHEN CASE WHEN rt0.c2 THEN 2043916673 END THEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c69)) ELSE x'' END DESC  NULLS FIRST, (+ (((t0.c69)|(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(v0.c0)))GLOB(((v0.c0) BETWEEN (t0.c65) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, v0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, t0.c69, vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, t0.c65, (- (v0.c0)))) AND ((NULL, ((rt0.c0)AND(rt0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 END))) INNER JOIN vt0 ON ((((vt0.c1)>=(v0.c0))) NOT BETWEEN ((~ (''))) AND (vt0.c1)) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c2 END  WHEN ABS(t0.c69) THEN 0.09411242961903044 WHEN ((t0.c90)AND(t0.c65)) THEN (((t0.c90)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((t0.c69)|(vt1.c0)) THEN ((((((((t0.c69)AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)) WHEN ((t0.c69)>(v0.c0)) THEN t0.c65 WHEN CASE WHEN rt0.c2 THEN 2043916673 END THEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c69)) ELSE x'' END DESC  NULLS FIRST, (+ (((t0.c69)|(v0.c0)))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON ((((((((((t0.c90)>(t0.c65)))AND(0xef01b92)))AND(t0.c90 COLLATE BINARY)))OR(((t0.c90)GLOB(vt0.c1)))))OR(((t0.c69) NOT BETWEEN (vt0.c1) AND (t0.c69)))) WHERE (((((v0.c0) NOT NULL))LIKE(UNLIKELY(t0.c69))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))LIKE(UNLIKELY(t0.c69)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON ((((((((((t0.c90)>(t0.c65)))AND(0Xef01b92)))AND(t0.c90 COLLATE BINARY)))OR(((t0.c90)GLOB(vt0.c1)))))OR(((t0.c69) NOT BETWEEN (vt0.c1) AND (t0.c69)))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON ((((((((((t0.c90)>(t0.c65)))AND(0xef01b92)))AND(t0.c90 COLLATE BINARY)))OR(((t0.c90)GLOB(vt0.c1)))))OR(((t0.c69) NOT BETWEEN (vt0.c1) AND (t0.c69)))) WHERE (((((v0.c0) NOT NULL))LIKE(UNLIKELY(t0.c69))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))LIKE(UNLIKELY(t0.c69)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN v0 ON ((((((((((t0.c90)>(t0.c65)))AND(0Xef01b92)))AND(t0.c90 COLLATE BINARY)))OR(((t0.c90)GLOB(vt0.c1)))))OR(((t0.c69) NOT BETWEEN (vt0.c1) AND (t0.c69)))));
SELECT ALL * FROM vt0, t0 FULL OUTER JOIN v0 ON ((((((((((t0.c90)>(t0.c65)))AND(0xef01b92)))AND(t0.c90 COLLATE BINARY)))OR(((t0.c90)GLOB(vt0.c1)))))OR(((t0.c69) NOT BETWEEN (vt0.c1) AND (t0.c69)))) WHERE (((((v0.c0) NOT NULL))LIKE(UNLIKELY(t0.c69))));
SELECT * FROM vt1 INNER JOIN t0 ON (vt0.c0 IN (((((((((vt1.c0)OR(vt1.c0)))AND(t0.c69)))OR(vt0.c0)))OR(vt0.c0)))) RIGHT OUTER JOIN rt0 ON json_extract(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), t0.c69 COLLATE BINARY) CROSS JOIN v0 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN vt1.c0 COLLATE RTRIM THEN ((vt0.c0)|(rt0.c0)) ELSE t0.c69 END LEFT OUTER JOIN vt0 ON ((((TRIM(DISTINCT v0.c0, ''))OR(((vt0.c1)OR(vt0.c1)))))OR(t0.c65)) WHERE (((1.401748414E9) BETWEEN ('769593549') AND (0.3705555285896168 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((1.401748414E9) BETWEEN ('769593549') AND (0.3705555285896168 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (vt0.c0 IN (((((((((vt1.c0)OR(vt1.c0)))AND(t0.c69)))OR(vt0.c0)))OR(vt0.c0)))) RIGHT OUTER JOIN rt0 ON json_extract(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), t0.c69 COLLATE BINARY) CROSS JOIN v0 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN vt1.c0 COLLATE RTRIM THEN ((vt0.c0)|(rt0.c0)) ELSE t0.c69 END LEFT OUTER JOIN vt0 ON ((((TRIM(DISTINCT v0.c0, ''))OR(((vt0.c1)OR(vt0.c1)))))OR(t0.c65)));
SELECT * FROM vt1 INNER JOIN t0 ON (vt0.c0 IN (((((((((vt1.c0)OR(vt1.c0)))AND(t0.c69)))OR(vt0.c0)))OR(vt0.c0)))) RIGHT OUTER JOIN rt0 ON json_extract(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), t0.c69 COLLATE BINARY) CROSS JOIN v0 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN vt1.c0 COLLATE RTRIM THEN ((vt0.c0)|(rt0.c0)) ELSE t0.c69 END LEFT OUTER JOIN vt0 ON ((((TRIM(DISTINCT v0.c0, ''))OR(((vt0.c1)OR(vt0.c1)))))OR(t0.c65)) WHERE (((1.401748414E9) BETWEEN ('769593549') AND (0.3705555285896168 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((1.401748414E9) BETWEEN ('769593549') AND (0.3705555285896168 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (vt0.c0 IN (((((((((vt1.c0)OR(vt1.c0)))AND(t0.c69)))OR(vt0.c0)))OR(vt0.c0)))) RIGHT OUTER JOIN rt0 ON json_extract(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)), t0.c69 COLLATE BINARY) CROSS JOIN v0 ON CASE CAST(rt0.c1 AS INTEGER)  WHEN vt1.c0 COLLATE RTRIM THEN ((vt0.c0)|(rt0.c0)) ELSE t0.c69 END LEFT OUTER JOIN vt0 ON ((((TRIM(DISTINCT v0.c0, ''))OR(((vt0.c1)OR(vt0.c1)))))OR(t0.c65)));
SELECT COUNT(*) FROM v0 WHERE (((NULL) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((NULL) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((NULL) BETWEEN (CAST(v0.c0 AS BLOB)) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0, v0 WHERE (LOWER((((v0.c0, vt0.c0, t0.c90))=(('籬|W', v0.c0, t0.c69))))) ORDER BY '1748613303' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((v0.c0, vt0.c0, t0.c90))==(('籬|W', v0.c0, t0.c69))))) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY '1748613303' DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, v0 WHERE (LOWER((((v0.c0, vt0.c0, t0.c90))=(('籬|W', v0.c0, t0.c69))))) ORDER BY '1748613303' DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((v0.c0, vt0.c0, t0.c90))==(('籬|W', v0.c0, t0.c69))))) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY '1748613303' DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, v0 WHERE (LOWER((((v0.c0, vt0.c0, t0.c90))=(('籬|W', v0.c0, t0.c69))))) ORDER BY '1748613303' DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t0, rt0 WHERE ((~ (((rt0.c2)||(t0.c69))))) ORDER BY (((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)||(t0.c69))))) IS TRUE)  as count FROM vt0, vt1, v0, t0, rt0 ORDER BY (((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t0, rt0 WHERE ((~ (((rt0.c2)||(t0.c69))))) ORDER BY (((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)||(t0.c69))))) IS TRUE)  as count FROM vt0, vt1, v0, t0, rt0 ORDER BY (((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t0, rt0 WHERE ((~ (((rt0.c2)||(t0.c69))))) ORDER BY (((t0.c65) BETWEEN (t0.c65) AND (vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) ISNULL) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(vt0.c0)) THEN (- (0.018704184094472165)) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) ISNULL) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(vt0.c0)) THEN (- (0.018704184094472165)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) ISNULL) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(vt0.c0)) THEN (- (0.018704184094472165)) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) ISNULL) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(vt0.c0)) THEN (- (0.018704184094472165)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) ISNULL) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)+(vt0.c0)) THEN (- (0.018704184094472165)) ELSE vt0.c1 END);
SELECT * FROM vt0, t0, vt1, rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)))) AND ((0.6348517505178145)))) ORDER BY ((((rt0.c1)AND(vt1.c0)))GLOB(((t0.c65)<<(0.47660330249680616)))), (((t0.c65)) BETWEEN ((((vt0.c1) BETWEEN (t0.c90) AND (rt0.c1)))) AND (('')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)))) AND ((0.6348517505178145)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0, v0 ORDER BY ((((rt0.c1)AND(vt1.c0)))GLOB(((t0.c65)<<(0.47660330249680616)))), (((t0.c65)) BETWEEN ((((vt0.c1) BETWEEN (t0.c90) AND (rt0.c1)))) AND (('')))  NULLS LAST);
SELECT * FROM vt0, t0, vt1, rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)))) AND ((0.6348517505178145)))) ORDER BY ((((rt0.c1)AND(vt1.c0)))GLOB(((t0.c65)<<(0.47660330249680616)))), (((t0.c65)) BETWEEN ((((vt0.c1) BETWEEN (t0.c90) AND (rt0.c1)))) AND (('')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)))) AND ((0.6348517505178145)))) IS TRUE)  as count FROM vt0, t0, vt1, rt0, v0 ORDER BY ((((rt0.c1)AND(vt1.c0)))GLOB(((t0.c65)<<(0.47660330249680616)))), (((t0.c65)) BETWEEN ((((vt0.c1) BETWEEN (t0.c90) AND (rt0.c1)))) AND (('')))  NULLS LAST);
SELECT * FROM vt0, t0, vt1, rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((x'')!=(vt1.c0)))) AND ((0.6348517505178145)))) ORDER BY ((((rt0.c1)AND(vt1.c0)))GLOB(((t0.c65)<<(0.47660330249680616)))), (((t0.c65)) BETWEEN ((((vt0.c1) BETWEEN (t0.c90) AND (rt0.c1)))) AND (('')))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c2 IN ()), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((rt0.c2)!=(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(rt0.c1 AS INTEGER))))) ORDER BY ((rt0.c2)<(CASE x'ad78c1ad'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c2 IN ()), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))!=((((rt0.c2)<>(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<(CASE x'ad78c1ad'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c2 IN ()), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((rt0.c2)!=(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(rt0.c1 AS INTEGER))))) ORDER BY ((rt0.c2)<(CASE x'ad78c1ad'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c2 IN ()), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))!=((((rt0.c2)<>(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<(CASE x'ad78c1ad'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c2 IN ()), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((rt0.c2)!=(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), CAST(rt0.c1 AS INTEGER))))) ORDER BY ((rt0.c2)<(CASE x'ad78c1ad'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT * FROM vt0, v0, vt1, rt0, t0 WHERE (((((NULL COLLATE BINARY)OR((NOT (vt0.c1)))))OR(((vt0.c1)+(t0.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL COLLATE BINARY)OR((NOT (vt0.c1)))))OR(((vt0.c1)+(t0.c90))))) IS TRUE)  as count FROM vt0, v0, vt1, rt0, t0);
SELECT * FROM vt0, v0, vt1, rt0, t0 WHERE (((((NULL COLLATE BINARY)OR((NOT (vt0.c1)))))OR(((vt0.c1)+(t0.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL COLLATE BINARY)OR((NOT (vt0.c1)))))OR(((vt0.c1)+(t0.c90))))) IS TRUE)  as count FROM vt0, v0, vt1, rt0, t0);
SELECT * FROM vt0, v0, vt1, rt0, t0 WHERE (((((NULL COLLATE BINARY)OR((NOT (vt0.c1)))))OR(((vt0.c1)+(t0.c90)))));
SELECT * FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON ((('')>(rt0.c1)) IN ()) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON ((('')>(rt0.c1)) IN ()));
SELECT * FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON ((('')>(rt0.c1)) IN ()) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON ((('')>(rt0.c1)) IN ()));
SELECT * FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON ((('')>(rt0.c1)) IN ()) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c1)>('')))) INNER JOIN t0 ON (((((rt0.c0))>=((t0.c69))))-(((v0.c0)IS(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((((t0.c65)) BETWEEN ((t0.c90)) AND ((0.3554019470934666)))) NOTNULL) WHERE (CASE WHEN (rt0.c1 IN (t0.c65)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) WHEN HEX(DISTINCT t0.c69) THEN NULL WHEN ((rt0.c2)*(0X5db69ce1)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (t0.c65)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) WHEN HEX(DISTINCT t0.c69) THEN NULL WHEN ((rt0.c2)*(0X5db69ce1)) THEN NULL END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c1)>('')))) INNER JOIN t0 ON (((((rt0.c0))>=((t0.c69))))-(((v0.c0)IS(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((((t0.c65)) BETWEEN ((t0.c90)) AND ((0.3554019470934666)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c1)>('')))) INNER JOIN t0 ON (((((rt0.c0))>=((t0.c69))))-(((v0.c0)IS(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((((t0.c65)) BETWEEN ((t0.c90)) AND ((0.3554019470934666)))) NOTNULL) WHERE (CASE WHEN (rt0.c1 IN (t0.c65)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) WHEN HEX(DISTINCT t0.c69) THEN NULL WHEN ((rt0.c2)*(0X5db69ce1)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (t0.c65)) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)) WHEN HEX(DISTINCT t0.c69) THEN NULL WHEN ((rt0.c2)*(0X5db69ce1)) THEN NULL END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (NOT (((vt0.c1)>('')))) INNER JOIN t0 ON (((((rt0.c0))>=((t0.c69))))-(((v0.c0)IS(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((((t0.c65)) BETWEEN ((t0.c90)) AND ((0.3554019470934666)))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)>(rt0.c1))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c0 IN (rt0.c0, rt0.c1, x'062c')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>(rt0.c1))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c0 IN (rt0.c0, rt0.c1, x'062c')))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)>(rt0.c1))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c0 IN (rt0.c0, rt0.c1, x'062c')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>(rt0.c1))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c0 IN (rt0.c0, rt0.c1, x'062c')))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)>(rt0.c1))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c0 IN (rt0.c0, rt0.c1, x'062c')))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((x'ff77')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY rt0.c0 ASC  NULLS FIRST, (~ (((rt0.c2)!=(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x'ff77')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST, (~ (((rt0.c2)<>(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((x'ff77')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY rt0.c0 ASC  NULLS FIRST, (~ (((rt0.c2)!=(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x'ff77')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST, (~ (((rt0.c2)<>(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((x'ff77')) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) ORDER BY rt0.c0 ASC  NULLS FIRST, (~ (((rt0.c2)!=(rt0.c2)))) ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((0.5040462932433615)/(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c90)))) CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN t0.c69 THEN vt0.c0 WHEN v0.c0 THEN t0.c90 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS INTEGER) CROSS JOIN v0 ON LTRIM(((((t0.c65)OR(vt0.c0)))AND(x'1dce')), ((((vt0.c0)AND(v0.c0)))AND(t0.c65))) WHERE (((((((vt1.c0) NOT BETWEEN (t0.c65) AND (rt0.c2)))AND((((vt0.c1))<=((t0.c69))))))OR((vt0.c0 IN (vt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (t0.c65) AND (rt0.c2)))AND((((vt0.c1))<=((t0.c69))))))OR((vt0.c0 IN (vt0.c1, rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((0.5040462932433615)/(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c90)))) CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN t0.c69 THEN vt0.c0 WHEN v0.c0 THEN t0.c90 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS INTEGER) CROSS JOIN v0 ON LTRIM(((((t0.c65)OR(vt0.c0)))AND(x'1dce')), ((((vt0.c0)AND(v0.c0)))AND(t0.c65))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((0.5040462932433615)/(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c90)))) CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN t0.c69 THEN vt0.c0 WHEN v0.c0 THEN t0.c90 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS INTEGER) CROSS JOIN v0 ON LTRIM(((((t0.c65)OR(vt0.c0)))AND(x'1dce')), ((((vt0.c0)AND(v0.c0)))AND(t0.c65))) WHERE (((((((vt1.c0) NOT BETWEEN (t0.c65) AND (rt0.c2)))AND((((vt0.c1))<=((t0.c69))))))OR((vt0.c0 IN (vt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (t0.c65) AND (rt0.c2)))AND((((vt0.c1))<=((t0.c69))))))OR((vt0.c0 IN (vt0.c1, rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((0.5040462932433615)/(((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(t0.c90)))) CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN t0.c69 THEN vt0.c0 WHEN v0.c0 THEN t0.c90 END COLLATE RTRIM RIGHT OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS INTEGER) CROSS JOIN v0 ON LTRIM(((((t0.c65)OR(vt0.c0)))AND(x'1dce')), ((((vt0.c0)AND(v0.c0)))AND(t0.c65))));
SELECT * FROM vt1, t0 WHERE ((((t0.c69 IN (t0.c65)))IS NOT((t0.c69 IN ())))) ORDER BY ((((((((((((((((SUBSTR(t0.c90, t0.c65))AND(CAST(vt1.c0 AS TEXT))))AND((- (t0.c65)))))AND(((t0.c69)|(t0.c90)))))AND(((t0.c90)OR(t0.c69)))))AND((((t0.c65))<((t0.c65))))))AND(((((t0.c90)OR(t0.c65)))OR(t0.c90)))))OR(CASE WHEN t0.c65 THEN t0.c65 END)))OR(CASE WHEN 'b<' THEN t0.c65 ELSE t0.c69 END)) DESC  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69 IN (t0.c65)))IS NOT((t0.c69 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((((((SUBSTR(t0.c90, t0.c65))AND(CAST(vt1.c0 AS TEXT))))AND((- (t0.c65)))))AND(((t0.c69)|(t0.c90)))))AND(((t0.c90)OR(t0.c69)))))AND((((t0.c65))<((t0.c65))))))AND(((((t0.c90)OR(t0.c65)))OR(t0.c90)))))OR(CASE WHEN t0.c65 THEN t0.c65 END)))OR(CASE WHEN 'b<' THEN t0.c65 ELSE t0.c69 END)) DESC  NULLS LAST, x''  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((t0.c69 IN (t0.c65)))IS NOT((t0.c69 IN ())))) ORDER BY ((((((((((((((((SUBSTR(t0.c90, t0.c65))AND(CAST(vt1.c0 AS TEXT))))AND((- (t0.c65)))))AND(((t0.c69)|(t0.c90)))))AND(((t0.c90)OR(t0.c69)))))AND((((t0.c65))<((t0.c65))))))AND(((((t0.c90)OR(t0.c65)))OR(t0.c90)))))OR(CASE WHEN t0.c65 THEN t0.c65 END)))OR(CASE WHEN 'b<' THEN t0.c65 ELSE t0.c69 END)) DESC  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69 IN (t0.c65)))IS NOT((t0.c69 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((((((((((((SUBSTR(t0.c90, t0.c65))AND(CAST(vt1.c0 AS TEXT))))AND((- (t0.c65)))))AND(((t0.c69)|(t0.c90)))))AND(((t0.c90)OR(t0.c69)))))AND((((t0.c65))<((t0.c65))))))AND(((((t0.c90)OR(t0.c65)))OR(t0.c90)))))OR(CASE WHEN t0.c65 THEN t0.c65 END)))OR(CASE WHEN 'b<' THEN t0.c65 ELSE t0.c69 END)) DESC  NULLS LAST, x''  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((t0.c69 IN (t0.c65)))IS NOT((t0.c69 IN ())))) ORDER BY ((((((((((((((((SUBSTR(t0.c90, t0.c65))AND(CAST(vt1.c0 AS TEXT))))AND((- (t0.c65)))))AND(((t0.c69)|(t0.c90)))))AND(((t0.c90)OR(t0.c69)))))AND((((t0.c65))<((t0.c65))))))AND(((((t0.c90)OR(t0.c65)))OR(t0.c90)))))OR(CASE WHEN t0.c65 THEN t0.c65 END)))OR(CASE WHEN 'b<' THEN t0.c65 ELSE t0.c69 END)) DESC  NULLS LAST, x''  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (- (CASE vt0.c1  WHEN x'' THEN rt0.c1 ELSE NULL END)) WHERE (rt0.c1) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS FIRST, (NOT (CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (CASE vt0.c1  WHEN x'' THEN rt0.c1 ELSE NULL END)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS FIRST, (NOT (CAST(vt0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (- (CASE vt0.c1  WHEN x'' THEN rt0.c1 ELSE NULL END)) WHERE (rt0.c1) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS FIRST, (NOT (CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (CASE vt0.c1  WHEN x'' THEN rt0.c1 ELSE NULL END)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS FIRST, (NOT (CAST(vt0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (- (CASE vt0.c1  WHEN x'' THEN rt0.c1 ELSE NULL END)) WHERE (rt0.c1) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) DESC  NULLS FIRST, (NOT (CAST(vt0.c1 AS REAL)))  NULLS FIRST;
SELECT * FROM vt0, v0, vt1, t0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c69 COLLATE NOCASE)) AND ((x'' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((t0.c69 COLLATE NOCASE)) AND ((x'' COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0, vt1, t0, rt0);
SELECT * FROM vt0, v0, vt1, t0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c69 COLLATE NOCASE)) AND ((x'' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((t0.c69 COLLATE NOCASE)) AND ((x'' COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0, vt1, t0, rt0);
SELECT * FROM vt0, v0, vt1, t0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c69 COLLATE NOCASE)) AND ((x'' COLLATE BINARY))));
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((1526989831) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((1526989831) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((1526989831) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((1526989831) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((1526989831) NOT NULL));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 INDEXED BY i1, v0 WHERE ((((rt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, vt0 INDEXED BY i1, v0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 INDEXED BY i1, v0 WHERE ((((rt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, vt0 INDEXED BY i1, v0);
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0 IN (vt1.c0, v0.c0)))AND((NOT (vt1.c0)))))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0 IN (vt1.c0, v0.c0)))AND((NOT (vt1.c0)))))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0 IN (vt1.c0, v0.c0)))AND((NOT (vt1.c0)))))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0 IN (vt1.c0, v0.c0)))AND((NOT (vt1.c0)))))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON (((((v0.c0 IN (vt1.c0, v0.c0)))AND((NOT (vt1.c0)))))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))) WHERE (NULL);
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((vt1.c0))==((vt0.c1)))) NOT BETWEEN (LTRIM(rt0.c1, vt0.c1)) AND (rt0.c1)) WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((vt1.c0))=((vt0.c1)))) NOT BETWEEN (LTRIM(rt0.c1, vt0.c1)) AND (rt0.c1)));
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((vt1.c0))==((vt0.c1)))) NOT BETWEEN (LTRIM(rt0.c1, vt0.c1)) AND (rt0.c1)) WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((vt1.c0))=((vt0.c1)))) NOT BETWEEN (LTRIM(rt0.c1, vt0.c1)) AND (rt0.c1)));
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((((vt1.c0))==((vt0.c1)))) NOT BETWEEN (LTRIM(rt0.c1, vt0.c1)) AND (rt0.c1)) WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c90 WHEN 0.18582844396337106 THEN t0.c90 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c90 WHEN 0.18582844396337106 THEN t0.c90 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c90 WHEN 0.18582844396337106 THEN t0.c90 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c90 WHEN 0.18582844396337106 THEN t0.c90 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c90 WHEN 0.18582844396337106 THEN t0.c90 END)));
SELECT * FROM rt0, v0, vt0, t0 WHERE ((- (CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) IN ()) DESC  NULLS FIRST, CAST(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffffeaec4195)) AS TEXT) ASC, (- (t0.c65)) ASC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0, t0 ORDER BY (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) IN ()) DESC  NULLS FIRST, CAST(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffffeaec4195)) AS TEXT) ASC, (- (t0.c65)) ASC);
SELECT * FROM rt0, v0, vt0, t0 WHERE ((- (CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) IN ()) DESC  NULLS FIRST, CAST(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffffeaec4195)) AS TEXT) ASC, (- (t0.c65)) ASC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0, t0 ORDER BY (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) IN ()) DESC  NULLS FIRST, CAST(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffffeaec4195)) AS TEXT) ASC, (- (t0.c65)) ASC);
SELECT * FROM rt0, v0, vt0, t0 WHERE ((- (CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) IN ()) DESC  NULLS FIRST, CAST(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffffeaec4195)) AS TEXT) ASC, (- (t0.c65)) ASC;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (NOT ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (NOT ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (NOT ((v0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM t0, vt1, rt0, v0, vt0 WHERE ((- ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0, vt1, rt0, v0, vt0);
SELECT ALL * FROM t0, vt1, rt0, v0, vt0 WHERE ((- ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c1))))) IS TRUE)  as count FROM t0, vt1, rt0, v0, vt0);
SELECT ALL * FROM t0, vt1, rt0, v0, vt0 WHERE ((- ((NOT (vt0.c1)))));
SELECT ALL * FROM v0, vt1, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT ALL * FROM v0, vt1, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT ALL * FROM v0, vt1, vt0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((json_patch(rt0.c0, t0.c65)) BETWEEN (((vt0.c1) BETWEEN (t0.c90) AND (vt0.c1))) AND (CAST(t0.c69 AS NUMERIC)))) ORDER BY (((((vt0.c1, rt0.c0, t0.c69)) BETWEEN (('#		(', t0.c65, t0.c69)) AND ((x'', rt0.c0, 0.08398413490198608))))%(((rt0.c1)&('-1864875203'))));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt0.c0, t0.c65)) BETWEEN (((vt0.c1) BETWEEN (t0.c90) AND (vt0.c1))) AND (CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c1, rt0.c0, t0.c69)) BETWEEN (('#		(', t0.c65, t0.c69)) AND ((x'', rt0.c0, 0.08398413490198608))))%(((rt0.c1)&('-1864875203')))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((json_patch(rt0.c0, t0.c65)) BETWEEN (((vt0.c1) BETWEEN (t0.c90) AND (vt0.c1))) AND (CAST(t0.c69 AS NUMERIC)))) ORDER BY (((((vt0.c1, rt0.c0, t0.c69)) BETWEEN (('#		(', t0.c65, t0.c69)) AND ((x'', rt0.c0, 0.08398413490198608))))%(((rt0.c1)&('-1864875203'))));
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt0.c0, t0.c65)) BETWEEN (((vt0.c1) BETWEEN (t0.c90) AND (vt0.c1))) AND (CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c1, rt0.c0, t0.c69)) BETWEEN (('#		(', t0.c65, t0.c69)) AND ((x'', rt0.c0, 0.08398413490198608))))%(((rt0.c1)&('-1864875203')))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((json_patch(rt0.c0, t0.c65)) BETWEEN (((vt0.c1) BETWEEN (t0.c90) AND (vt0.c1))) AND (CAST(t0.c69 AS NUMERIC)))) ORDER BY (((((vt0.c1, rt0.c0, t0.c69)) BETWEEN (('#		(', t0.c65, t0.c69)) AND ((x'', rt0.c0, 0.08398413490198608))))%(((rt0.c1)&('-1864875203'))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) IS FALSE)) ORDER BY ((((rt0.c0)|('	_.蝘')))>=(((rt0.c1) NOT BETWEEN ('-1382602910') AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c0)|('	_.蝘')))>=(((rt0.c1) NOT BETWEEN ('-1382602910') AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) IS FALSE)) ORDER BY ((((rt0.c0)|('	_.蝘')))>=(((rt0.c1) NOT BETWEEN ('-1382602910') AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c0)|('	_.蝘')))>=(((rt0.c1) NOT BETWEEN ('-1382602910') AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) IS FALSE)) ORDER BY ((((rt0.c0)|('	_.蝘')))>=(((rt0.c1) NOT BETWEEN ('-1382602910') AND (rt0.c0))));
SELECT * FROM t0, v0, rt0, vt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (t0.c69) AND (t0.c65))))) ORDER BY (((((rt0.c0)OR(vt0.c0)))AND(t0.c65)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (t0.c69) AND (t0.c65))))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY (((((rt0.c0)OR(vt0.c0)))AND(t0.c65)) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, v0, rt0, vt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (t0.c69) AND (t0.c65))))) ORDER BY (((((rt0.c0)OR(vt0.c0)))AND(t0.c65)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (t0.c69) AND (t0.c65))))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY (((((rt0.c0)OR(vt0.c0)))AND(t0.c65)) IN ()) ASC  NULLS FIRST);
SELECT * FROM t0, v0, rt0, vt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (t0.c69) AND (t0.c65))))) ORDER BY (((((rt0.c0)OR(vt0.c0)))AND(t0.c65)) IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0 INDEXED BY i1, v0, vt1 WHERE (ABS(DISTINCT (0.994742063494178 IN ()))) ORDER BY (+ (vt0.c1))  NULLS FIRST, (((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)), vt0.c1, vt1.c0 COLLATE BINARY, CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN '-379240338' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))=((HEX(DISTINCT vt1.c0), CAST(vt0.c1 AS NUMERIC), (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))), '#4' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (0.994742063494178 IN ()))) IS TRUE)  as count FROM vt0 INDEXED BY i1, v0, vt1 ORDER BY (+ (vt0.c1))  NULLS FIRST, (((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)), vt0.c1, vt1.c0 COLLATE BINARY, CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN '-379240338' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))==((HEX(DISTINCT vt1.c0), CAST(vt0.c1 AS NUMERIC), (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))), '#4' ASC  NULLS FIRST);
SELECT * FROM vt0 INDEXED BY i1, v0, vt1 WHERE (ABS(DISTINCT (0.994742063494178 IN ()))) ORDER BY (+ (vt0.c1))  NULLS FIRST, (((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)), vt0.c1, vt1.c0 COLLATE BINARY, CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN '-379240338' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))=((HEX(DISTINCT vt1.c0), CAST(vt0.c1 AS NUMERIC), (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))), '#4' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (0.994742063494178 IN ()))) IS TRUE)  as count FROM vt0 INDEXED BY i1, v0, vt1 ORDER BY (+ (vt0.c1))  NULLS FIRST, (((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)), vt0.c1, vt1.c0 COLLATE BINARY, CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN '-379240338' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))==((HEX(DISTINCT vt1.c0), CAST(vt0.c1 AS NUMERIC), (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))), '#4' ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, v0 CROSS JOIN rt0 ON CAST(((t0.c69) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT) WHERE ((~ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM vt1, t0, v0 CROSS JOIN rt0 ON CAST(((t0.c69) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT));
SELECT ALL * FROM vt1, t0, v0 CROSS JOIN rt0 ON CAST(((t0.c69) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT) WHERE ((~ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (rt0.c1))))) IS TRUE)  as count FROM vt1, t0, v0 CROSS JOIN rt0 ON CAST(((t0.c69) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT));
SELECT ALL * FROM vt1, t0, v0 CROSS JOIN rt0 ON CAST(((t0.c69) NOT BETWEEN (vt1.c0) AND (rt0.c1)) AS TEXT) WHERE ((~ ((- (rt0.c1)))));
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((rt0.c1)&(t0.c90)))>(CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(t0.c90)))>(CHANGES()))) IS TRUE)  as count FROM t0, v0, rt0, vt1);
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((rt0.c1)&(t0.c90)))>(CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(t0.c90)))>(CHANGES()))) IS TRUE)  as count FROM t0, v0, rt0, vt1);
SELECT COUNT(*) FROM t0, v0, rt0, vt1 WHERE (((((rt0.c1)&(t0.c90)))>(CHANGES())));
SELECT * FROM vt1, v0 WHERE (((((IFNULL(DISTINCT vt1.c0, v0.c0))OR((((v0.c0))<>((v0.c0))))))OR(0xffffffffb995ffac))) ORDER BY (((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.8047703639519882 WHEN v0.c0 THEN '\n#jW' ELSE vt1.c0 END))>=(((vt1.c0 IN ())))) DESC  NULLS LAST, ((((NULL)!=(vt1.c0)))&(v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT vt1.c0, v0.c0))OR((((v0.c0))<>((v0.c0))))))OR(0xffffffffb995ffac))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.8047703639519882 WHEN v0.c0 THEN '\n#jW' ELSE vt1.c0 END))>=(((vt1.c0 IN ())))) DESC  NULLS LAST, ((((NULL)!=(vt1.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT * FROM vt1, v0 WHERE (((((IFNULL(DISTINCT vt1.c0, v0.c0))OR((((v0.c0))<>((v0.c0))))))OR(0xffffffffb995ffac))) ORDER BY (((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.8047703639519882 WHEN v0.c0 THEN '\n#jW' ELSE vt1.c0 END))>=(((vt1.c0 IN ())))) DESC  NULLS LAST, ((((NULL)!=(vt1.c0)))&(v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(DISTINCT vt1.c0, v0.c0))OR((((v0.c0))<>((v0.c0))))))OR(0xffffffffb995ffac))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.8047703639519882 WHEN v0.c0 THEN '\n#jW' ELSE vt1.c0 END))>=(((vt1.c0 IN ())))) DESC  NULLS LAST, ((((NULL)!=(vt1.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT * FROM vt1, v0 WHERE (((((IFNULL(DISTINCT vt1.c0, v0.c0))OR((((v0.c0))<>((v0.c0))))))OR(0xffffffffb995ffac))) ORDER BY (((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 0.8047703639519882 WHEN v0.c0 THEN '\n#jW' ELSE vt1.c0 END))>=(((vt1.c0 IN ())))) DESC  NULLS LAST, ((((NULL)!=(vt1.c0)))&(v0.c0 COLLATE RTRIM));
SELECT ALL * FROM rt0, vt1 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY ((((vt1.c0 IN ())))=((LOWER(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY ((((vt1.c0 IN ())))=((LOWER(rt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY ((((vt1.c0 IN ())))=((LOWER(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY ((((vt1.c0 IN ())))=((LOWER(rt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY ((((vt1.c0 IN ())))=((LOWER(rt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (UPPER(DISTINCT -394809444)) ORDER BY (((((v0.c0))>((vt0.c0)))) IS FALSE) ASC  NULLS FIRST, ((JULIANDAY(vt0.c1, t0.c69, rt0.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT -394809444)) IS TRUE)  as count FROM vt0, rt0, v0, t0, vt1 ORDER BY (((((v0.c0))>((vt0.c0)))) IS FALSE) ASC  NULLS FIRST, ((JULIANDAY(vt0.c1, t0.c69, rt0.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (UPPER(DISTINCT -394809444)) ORDER BY (((((v0.c0))>((vt0.c0)))) IS FALSE) ASC  NULLS FIRST, ((JULIANDAY(vt0.c1, t0.c69, rt0.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT -394809444)) IS TRUE)  as count FROM vt0, rt0, v0, t0, vt1 ORDER BY (((((v0.c0))>((vt0.c0)))) IS FALSE) ASC  NULLS FIRST, ((JULIANDAY(vt0.c1, t0.c69, rt0.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (UPPER(DISTINCT -394809444)) ORDER BY (((((v0.c0))>((vt0.c0)))) IS FALSE) ASC  NULLS FIRST, ((JULIANDAY(vt0.c1, t0.c69, rt0.c0)) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))>=((v0.c0))))+(CASE v0.c0  WHEN 1.106226549E9 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>=((v0.c0))))+(CASE v0.c0  WHEN 1.106226549E9 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))>=((v0.c0))))+(CASE v0.c0  WHEN 1.106226549E9 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>=((v0.c0))))+(CASE v0.c0  WHEN 1.106226549E9 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))>=((v0.c0))))+(CASE v0.c0  WHEN 1.106226549E9 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt1, v0, vt0, t0 WHERE (((+ (rt0.c2)) IN ())) ORDER BY x'85f8' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1, v0, vt0, t0 ORDER BY x'85f8' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0, vt0, t0 WHERE (((+ (rt0.c2)) IN ())) ORDER BY x'85f8' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1, v0, vt0, t0 ORDER BY x'85f8' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0, vt0, t0 WHERE (((+ (rt0.c2)) IN ())) ORDER BY x'85f8' DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON 0.9573309426037557 COLLATE BINARY WHERE (((((((rt0.c2)) BETWEEN ((t0.c65)) AND ((rt0.c0)))))>=((rt0.c2)))) ORDER BY ((((((rt0.c1)AND(t0.c90)))AND(vt0.c1)))<(x'' COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)) BETWEEN ((t0.c65)) AND ((rt0.c0)))))>=((rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON 0.9573309426037557 COLLATE BINARY ORDER BY ((((((rt0.c1)AND(t0.c90)))AND(vt0.c1)))<(x'' COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON 0.9573309426037557 COLLATE BINARY WHERE (((((((rt0.c2)) BETWEEN ((t0.c65)) AND ((rt0.c0)))))>=((rt0.c2)))) ORDER BY ((((((rt0.c1)AND(t0.c90)))AND(vt0.c1)))<(x'' COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)) BETWEEN ((t0.c65)) AND ((rt0.c0)))))>=((rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON 0.9573309426037557 COLLATE BINARY ORDER BY ((((((rt0.c1)AND(t0.c90)))AND(vt0.c1)))<(x'' COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON 0.9573309426037557 COLLATE BINARY WHERE (((((((rt0.c2)) BETWEEN ((t0.c65)) AND ((rt0.c0)))))>=((rt0.c2)))) ORDER BY ((((((rt0.c1)AND(t0.c90)))AND(vt0.c1)))<(x'' COLLATE BINARY)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0, vt0 FULL OUTER JOIN rt0 ON HEX((vt0.c0 IN ())) WHERE ((('?|') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('?|') IS FALSE)) IS TRUE)  as count FROM vt1, v0, vt0 FULL OUTER JOIN rt0 ON HEX((vt0.c0 IN ())));
SELECT COUNT(*) FROM vt1, v0, vt0 FULL OUTER JOIN rt0 ON HEX((vt0.c0 IN ())) WHERE ((('?|') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('?|') IS FALSE)) IS TRUE)  as count FROM vt1, v0, vt0 FULL OUTER JOIN rt0 ON HEX((vt0.c0 IN ())));
SELECT COUNT(*) FROM vt1, v0, vt0 FULL OUTER JOIN rt0 ON HEX((vt0.c0 IN ())) WHERE ((('?|') IS FALSE));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS INTEGER) AS REAL) FULL OUTER JOIN vt0 ON (((('W*\nnt2g*')|(v0.c0)))IS NOT(((rt0.c0) NOTNULL))) LEFT OUTER JOIN rt0 ON x'' WHERE (CAST(((rt0.c2)>=(vt0.c0)) AS TEXT)) ORDER BY (+ (rt0.c0)) DESC, (((((((vt0.c1)AND(x'')))OR(v0.c0))))<>(('695768879')));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)>=(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS INTEGER) AS REAL) FULL OUTER JOIN vt0 ON (((('W*\nnt2g*')|(v0.c0)))IS NOT(((rt0.c0) NOTNULL))) LEFT OUTER JOIN rt0 ON x'' ORDER BY (+ (rt0.c0)) DESC, (((((((vt0.c1)AND(x'')))OR(v0.c0))))!=(('695768879'))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS INTEGER) AS REAL) FULL OUTER JOIN vt0 ON (((('W*\nnt2g*')|(v0.c0)))IS NOT(((rt0.c0) NOTNULL))) LEFT OUTER JOIN rt0 ON x'' WHERE (CAST(((rt0.c2)>=(vt0.c0)) AS TEXT)) ORDER BY (+ (rt0.c0)) DESC, (((((((vt0.c1)AND(x'')))OR(v0.c0))))<>(('695768879')));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)>=(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON CAST(CAST(v0.c0 AS INTEGER) AS REAL) FULL OUTER JOIN vt0 ON (((('W*\nnt2g*')|(v0.c0)))IS NOT(((rt0.c0) NOTNULL))) LEFT OUTER JOIN rt0 ON x'' ORDER BY (+ (rt0.c0)) DESC, (((((((vt0.c1)AND(x'')))OR(v0.c0))))!=(('695768879'))));
SELECT * FROM t0, vt1, rt0, vt0, v0 WHERE (rt0.c2) ORDER BY (((x'')) NOT BETWEEN ((((t0.c90) NOTNULL))) AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, vt1, rt0, vt0, v0 ORDER BY (((x'')) NOT BETWEEN ((((t0.c90) NOTNULL))) AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))));
SELECT * FROM t0, vt1, rt0, vt0, v0 WHERE (rt0.c2) ORDER BY (((x'')) NOT BETWEEN ((((t0.c90) NOTNULL))) AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, vt1, rt0, vt0, v0 ORDER BY (((x'')) NOT BETWEEN ((((t0.c90) NOTNULL))) AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))));
SELECT * FROM t0, vt1, rt0, vt0, v0 WHERE (rt0.c2) ORDER BY (((x'')) NOT BETWEEN ((((t0.c90) NOTNULL))) AND ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR(t0.c65)))OR(t0.c69)) COLLATE RTRIM INNER JOIN vt1 ON ((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c65)))OR(rt0.c1))) NOT BETWEEN (CASE vt1.c0  WHEN v0.c0 THEN t0.c69 END) AND (SQLITE_COMPILEOPTION_USED(NULL))) WHERE (((((((vt1.c0)OR(t0.c65)))AND(t0.c90))) NOTNULL)) ORDER BY (-8.47767873E8 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(t0.c65)))AND(t0.c90))) NOTNULL)) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR(t0.c65)))OR(t0.c69)) COLLATE RTRIM INNER JOIN vt1 ON ((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c65)))OR(rt0.c1))) NOT BETWEEN (CASE vt1.c0  WHEN v0.c0 THEN t0.c69 END) AND (SQLITE_COMPILEOPTION_USED(NULL))) ORDER BY (-8.47767873E8 IN ()));
SELECT ALL COUNT(*) FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR(t0.c65)))OR(t0.c69)) COLLATE RTRIM INNER JOIN vt1 ON ((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c65)))OR(rt0.c1))) NOT BETWEEN (CASE vt1.c0  WHEN v0.c0 THEN t0.c69 END) AND (SQLITE_COMPILEOPTION_USED(NULL))) WHERE (((((((vt1.c0)OR(t0.c65)))AND(t0.c90))) NOTNULL)) ORDER BY (-8.47767873E8 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(t0.c65)))AND(t0.c90))) NOTNULL)) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR(t0.c65)))OR(t0.c69)) COLLATE RTRIM INNER JOIN vt1 ON ((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c65)))OR(rt0.c1))) NOT BETWEEN (CASE vt1.c0  WHEN v0.c0 THEN t0.c69 END) AND (SQLITE_COMPILEOPTION_USED(NULL))) ORDER BY (-8.47767873E8 IN ()));
SELECT ALL COUNT(*) FROM v0, t0, rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1)OR(t0.c65)))OR(t0.c69)) COLLATE RTRIM INNER JOIN vt1 ON ((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c65)))OR(rt0.c1))) NOT BETWEEN (CASE vt1.c0  WHEN v0.c0 THEN t0.c69 END) AND (SQLITE_COMPILEOPTION_USED(NULL))) WHERE (((((((vt1.c0)OR(t0.c65)))AND(t0.c90))) NOTNULL)) ORDER BY (-8.47767873E8 IN ());
SELECT * FROM vt1 NOT INDEXED WHERE ((vt1.c0 IN ()) COLLATE BINARY COLLATE BINARY) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED WHERE ((vt1.c0 IN ()) COLLATE BINARY COLLATE BINARY) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED WHERE ((vt1.c0 IN ()) COLLATE BINARY COLLATE BINARY) ORDER BY NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON UPPER((((v0.c0, v0.c0, t0.c65))<=((v0.c0, rt0.c2, rt0.c2)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON UPPER((((v0.c0, v0.c0, t0.c65))<=((v0.c0, rt0.c2, rt0.c2)))));
SELECT COUNT(*) FROM t0, v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON UPPER((((v0.c0, v0.c0, t0.c65))<=((v0.c0, rt0.c2, rt0.c2)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c1 END) NOTNULL) FULL OUTER JOIN vt0 ON UPPER((((v0.c0, v0.c0, t0.c65))<=((v0.c0, rt0.c2, rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), RTRIM(vt0.c0), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)GLOB(vt0.c1)), STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.8886930214430974)))<=((CASE -862698880  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)+(vt0.c0)), (((vt0.c1))>=((vt0.c0))), ((1401748414)-(vt0.c1)), ((vt0.c0)GLOB(vt0.c1)))))) ORDER BY CAST((((vt0.c1))>((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), RTRIM(vt0.c0), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)GLOB(vt0.c1)), STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.8886930214430974)))<=((CASE -862698880  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)+(vt0.c0)), (((vt0.c1))>=((vt0.c0))), ((1401748414)-(vt0.c1)), ((vt0.c0)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c1))>((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), RTRIM(vt0.c0), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)GLOB(vt0.c1)), STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.8886930214430974)))<=((CASE -862698880  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)+(vt0.c0)), (((vt0.c1))>=((vt0.c0))), ((1401748414)-(vt0.c1)), ((vt0.c0)GLOB(vt0.c1)))))) ORDER BY CAST((((vt0.c1))>((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), RTRIM(vt0.c0), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)GLOB(vt0.c1)), STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.8886930214430974)))<=((CASE -862698880  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)+(vt0.c0)), (((vt0.c1))>=((vt0.c0))), ((1401748414)-(vt0.c1)), ((vt0.c0)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c1))>((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), RTRIM(vt0.c0), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)GLOB(vt0.c1)), STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.8886930214430974)))<=((CASE -862698880  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)+(vt0.c0)), (((vt0.c1))>=((vt0.c0))), ((1401748414)-(vt0.c1)), ((vt0.c0)GLOB(vt0.c1)))))) ORDER BY CAST((((vt0.c1))>((vt0.c0))) AS BLOB);
SELECT ALL * FROM rt0, t0, v0, vt0 WHERE ((+ (((rt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT ALL * FROM rt0, t0, v0, vt0 WHERE ((+ (((rt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM rt0, t0, v0, vt0);
SELECT ALL * FROM rt0, t0, v0, vt0 WHERE ((+ (((rt0.c0)<=(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c2 END)));
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE vt0.c1 END))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0)|(rt0.c0)))%(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(rt0.c0)))%(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)|(rt0.c0)))%(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(rt0.c0)))%(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)|(rt0.c0)))%(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (ABS(t0.c90) COLLATE BINARY) ORDER BY ((((rt0.c0)>(vt0.c1))) NOT BETWEEN (json_type(vt0.c0)) AND (CAST(vt0.c0 AS BLOB))) DESC, (((((+ (t0.c65)))AND(((1092888800)<=(t0.c65)))))AND(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(t0.c90) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((((rt0.c0)>(vt0.c1))) NOT BETWEEN (json_type(vt0.c0)) AND (CAST(vt0.c0 AS BLOB))) DESC, (((((+ (t0.c65)))AND(((1092888800)<=(t0.c65)))))AND(x'')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (ABS(t0.c90) COLLATE BINARY) ORDER BY ((((rt0.c0)>(vt0.c1))) NOT BETWEEN (json_type(vt0.c0)) AND (CAST(vt0.c0 AS BLOB))) DESC, (((((+ (t0.c65)))AND(((1092888800)<=(t0.c65)))))AND(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(t0.c90) COLLATE BINARY) IS TRUE)  as count FROM v0, t0, vt0, rt0 ORDER BY ((((rt0.c0)>(vt0.c1))) NOT BETWEEN (json_type(vt0.c0)) AND (CAST(vt0.c0 AS BLOB))) DESC, (((((+ (t0.c65)))AND(((1092888800)<=(t0.c65)))))AND(x'')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0 WHERE (ABS(t0.c90) COLLATE BINARY) ORDER BY ((((rt0.c0)>(vt0.c1))) NOT BETWEEN (json_type(vt0.c0)) AND (CAST(vt0.c0 AS BLOB))) DESC, (((((+ (t0.c65)))AND(((1092888800)<=(t0.c65)))))AND(x'')) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1, v0, rt0, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0, rt0, t0);
SELECT ALL * FROM vt0, vt1, v0, rt0, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, v0, rt0, t0);
SELECT ALL * FROM vt0, vt1, v0, rt0, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (0.6283971046017679);
SELECT SUM(count) FROM (SELECT ((0.6283971046017679) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (0.6283971046017679);
SELECT SUM(count) FROM (SELECT ((0.6283971046017679) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (0.6283971046017679);
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c2, rt0.c1))!=((vt1.c0, rt0.c0, rt0.c1)))) BETWEEN ((((v0.c0))<((vt1.c0)))) AND (((rt0.c1) NOTNULL))) WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c2, rt0.c1))!=((vt1.c0, rt0.c0, rt0.c1)))) BETWEEN ((((v0.c0))<((vt1.c0)))) AND (((rt0.c1) NOTNULL))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c2, rt0.c1))!=((vt1.c0, rt0.c0, rt0.c1)))) BETWEEN ((((v0.c0))<((vt1.c0)))) AND (((rt0.c1) NOTNULL))) WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c2, rt0.c1))!=((vt1.c0, rt0.c0, rt0.c1)))) BETWEEN ((((v0.c0))<((vt1.c0)))) AND (((rt0.c1) NOTNULL))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt1 ON (((((rt0.c2, rt0.c2, rt0.c1))!=((vt1.c0, rt0.c0, rt0.c1)))) BETWEEN ((((v0.c0))<((vt1.c0)))) AND (((rt0.c1) NOTNULL))) WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT * FROM rt0, t0, vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) ORDER BY rt0.c2, ((((t0.c90)OR(rt0.c2)))OR(t0.c90)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY rt0.c2, ((((t0.c90)OR(rt0.c2)))OR(t0.c90)) COLLATE RTRIM DESC);
SELECT * FROM rt0, t0, vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) ORDER BY rt0.c2, ((((t0.c90)OR(rt0.c2)))OR(t0.c90)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY rt0.c2, ((((t0.c90)OR(rt0.c2)))OR(t0.c90)) COLLATE RTRIM DESC);
SELECT * FROM rt0, t0, vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) IN ())) ORDER BY rt0.c2, ((((t0.c90)OR(rt0.c2)))OR(t0.c90)) COLLATE RTRIM DESC;
SELECT * FROM vt0, t0, rt0, v0, vt1 WHERE (NULL) ORDER BY t0.c69;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, v0, vt1 ORDER BY t0.c69);
SELECT * FROM vt0, t0, rt0, v0, vt1 WHERE (NULL) ORDER BY t0.c69;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, v0, vt1 ORDER BY t0.c69);
SELECT * FROM vt0, t0, rt0, v0, vt1 WHERE (NULL) ORDER BY t0.c69;
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CAST(((NULL)IS NOT(rt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((NULL)IS NOT(rt0.c2)) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CAST(((NULL)IS NOT(rt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((NULL)IS NOT(rt0.c2)) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CAST(((NULL)IS NOT(rt0.c2)) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON (((rt0.c0))=((0.9891843326304002))) WHERE (((((v0.c0) NOT NULL))>(CAST(t0.c69 AS NUMERIC)))) ORDER BY ((((t0.c90) ISNULL))<=((+ (t0.c65)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))>(CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON (((rt0.c0))=((0.9891843326304002))) ORDER BY ((((t0.c90) ISNULL))<=((+ (t0.c65)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON (((rt0.c0))=((0.9891843326304002))) WHERE (((((v0.c0) NOT NULL))>(CAST(t0.c69 AS NUMERIC)))) ORDER BY ((((t0.c90) ISNULL))<=((+ (t0.c65)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))>(CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON (((rt0.c0))=((0.9891843326304002))) ORDER BY ((((t0.c90) ISNULL))<=((+ (t0.c65)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt0 LEFT OUTER JOIN v0 ON (((rt0.c0))=((0.9891843326304002))) WHERE (((((v0.c0) NOT NULL))>(CAST(t0.c69 AS NUMERIC)))) ORDER BY ((((t0.c90) ISNULL))<=((+ (t0.c65)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0, v0, rt0 WHERE (((~ (v0.c0)) IN ((t0.c65 IN (t0.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN ((t0.c65 IN (t0.c65))))) IS TRUE)  as count FROM vt0, vt1, t0, v0, rt0);
SELECT ALL * FROM vt0, vt1, t0, v0, rt0 WHERE (((~ (v0.c0)) IN ((t0.c65 IN (t0.c65)))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN ((t0.c65 IN (t0.c65))))) IS TRUE)  as count FROM vt0, vt1, t0, v0, rt0);
SELECT ALL * FROM vt0, vt1, t0, v0, rt0 WHERE (((~ (v0.c0)) IN ((t0.c65 IN (t0.c65)))));
SELECT ALL * FROM vt1, t0 WHERE (((((CAST(t0.c65 AS NUMERIC))OR(((t0.c65) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE t0.c69  WHEN t0.c69 THEN t0.c65 ELSE t0.c65 END))) ORDER BY t0.c69 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c65 AS NUMERIC))OR(((t0.c65) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE t0.c69  WHEN t0.c69 THEN t0.c65 ELSE t0.c65 END))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c69 ASC);
SELECT ALL * FROM vt1, t0 WHERE (((((CAST(t0.c65 AS NUMERIC))OR(((t0.c65) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE t0.c69  WHEN t0.c69 THEN t0.c65 ELSE t0.c65 END))) ORDER BY t0.c69 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c65 AS NUMERIC))OR(((t0.c65) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE t0.c69  WHEN t0.c69 THEN t0.c65 ELSE t0.c65 END))) IS TRUE)  as count FROM vt1, t0 ORDER BY t0.c69 ASC);
SELECT ALL * FROM vt1, t0 WHERE (((((CAST(t0.c65 AS NUMERIC))OR(((t0.c65) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE t0.c69  WHEN t0.c69 THEN t0.c65 ELSE t0.c65 END))) ORDER BY t0.c69 ASC;
SELECT ALL * FROM vt1, vt0, v0, rt0, t0 WHERE (((((((0.28143918377150035)AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((((((vt0.c1)AND(rt0.c2)))OR(v0.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.28143918377150035)AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0, rt0, t0 ORDER BY ((((((vt0.c1)AND(rt0.c2)))OR(v0.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0, rt0, t0 WHERE (((((((0.28143918377150035)AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((((((vt0.c1)AND(rt0.c2)))OR(v0.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.28143918377150035)AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0, rt0, t0 ORDER BY ((((((vt0.c1)AND(rt0.c2)))OR(v0.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0, rt0, t0 WHERE (((((((0.28143918377150035)AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((((((vt0.c1)AND(rt0.c2)))OR(v0.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, vt0 RIGHT OUTER JOIN v0 ON (('')/(rt0.c0)) COLLATE BINARY WHERE (load_extension(CASE WHEN vt0.c1 THEN 'A' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE WHEN vt0.c1 THEN 'A' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0, vt1, vt0 RIGHT OUTER JOIN v0 ON (('')/(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1, vt0 RIGHT OUTER JOIN v0 ON (('')/(rt0.c0)) COLLATE BINARY WHERE (load_extension(CASE WHEN vt0.c1 THEN 'A' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE WHEN vt0.c1 THEN 'A' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0, vt1, vt0 RIGHT OUTER JOIN v0 ON (('')/(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1, vt0 RIGHT OUTER JOIN v0 ON (('')/(rt0.c0)) COLLATE BINARY WHERE (load_extension(CASE WHEN vt0.c1 THEN 'A' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END));
SELECT * FROM vt0, t0 WHERE (((((t0.c90)<<(t0.c69))) IS FALSE)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c90)<<(t0.c69))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'');
SELECT * FROM vt0, t0 WHERE (((((t0.c90)<<(t0.c69))) IS FALSE)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c90)<<(t0.c69))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 ORDER BY x'');
SELECT * FROM vt0, t0 WHERE (((((t0.c90)<<(t0.c69))) IS FALSE)) ORDER BY x'';
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST((('-471178944')*(v0.c0)) AS BLOB), ((v0.c0)-(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST((('-471178944')*(v0.c0)) AS BLOB), ((v0.c0)-(v0.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST((('-471178944')*(v0.c0)) AS BLOB), ((v0.c0)-(v0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST((('-471178944')*(v0.c0)) AS BLOB), ((v0.c0)-(v0.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY CAST((('-471178944')*(v0.c0)) AS BLOB), ((v0.c0)-(v0.c0)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((rt0.c1) ISNULL)) BETWEEN ((('9yo郗j') IS FALSE)) AND (((t0.c69)==(vt1.c0))))) ORDER BY ((((((((((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c69)))OR(((rt0.c0) NOT BETWEEN (t0.c90) AND (0X4fc0d368)))))OR(((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)))))AND(0.30106682267078666)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN ((('9yo郗j') IS FALSE)) AND (((t0.c69)=(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((((((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c69)))OR(((rt0.c0) NOT BETWEEN (t0.c90) AND (0X4fc0d368)))))OR(((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)))))AND(0.30106682267078666)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((rt0.c1) ISNULL)) BETWEEN ((('9yo郗j') IS FALSE)) AND (((t0.c69)==(vt1.c0))))) ORDER BY ((((((((((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c69)))OR(((rt0.c0) NOT BETWEEN (t0.c90) AND (0X4fc0d368)))))OR(((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)))))AND(0.30106682267078666)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN ((('9yo郗j') IS FALSE)) AND (((t0.c69)=(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((((((((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c69)))OR(((rt0.c0) NOT BETWEEN (t0.c90) AND (0X4fc0d368)))))OR(((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)))))AND(0.30106682267078666)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((((rt0.c1) ISNULL)) BETWEEN ((('9yo郗j') IS FALSE)) AND (((t0.c69)==(vt1.c0))))) ORDER BY ((((((((((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c69)))OR(((rt0.c0) NOT BETWEEN (t0.c90) AND (0X4fc0d368)))))OR(((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)))))AND(0.30106682267078666)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (~ (rt0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((rt0.c2 IN (rt0.c1)), ((rt0.c1) NOT NULL))) LEFT OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c2 IN (rt0.c0, t0.c65)))>>(((vt1.c0)||(vt0.c1))))) ORDER BY 'NL''#' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0, t0.c65)))>>(((vt1.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (~ (rt0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((rt0.c2 IN (rt0.c1)), ((rt0.c1) NOT NULL))) LEFT OUTER JOIN rt0 ON rt0.c1 ORDER BY 'NL''#' DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (~ (rt0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((rt0.c2 IN (rt0.c1)), ((rt0.c1) NOT NULL))) LEFT OUTER JOIN rt0 ON rt0.c1 WHERE ((((rt0.c2 IN (rt0.c0, t0.c65)))>>(((vt1.c0)||(vt0.c1))))) ORDER BY 'NL''#' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c0, t0.c65)))>>(((vt1.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (~ (rt0.c0 COLLATE BINARY)) INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((rt0.c2 IN (rt0.c1)), ((rt0.c1) NOT NULL))) LEFT OUTER JOIN rt0 ON rt0.c1 ORDER BY 'NL''#' DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((x'' IN (v0.c0))) NOTNULL)) ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((x'' IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((x'' IN (v0.c0))) NOTNULL)) ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((x'' IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((x'' IN (v0.c0))) NOTNULL)) ORDER BY (((vt0.c0)OR(vt0.c0)) IN ()) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c1 DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (CASE WHEN -8.6269888E8 THEN t0.c69 WHEN rt0.c0 THEN 7.69593549E8 WHEN 0.06632782100846812 THEN rt0.c1 END IN ()) WHERE (((((STRFTIME(x'', t0.c90, rt0.c1, rt0.c0, rt0.c1))OR(((t0.c69) IS TRUE))))AND(t0.c90 COLLATE BINARY))) ORDER BY (~ (((((rt0.c1)AND(t0.c90)))AND(t0.c69)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((STRFTIME(x'', t0.c90, rt0.c1, rt0.c0, rt0.c1))OR(((t0.c69) IS TRUE))))AND(t0.c90 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (CASE WHEN -8.6269888E8 THEN t0.c69 WHEN rt0.c0 THEN 7.69593549E8 WHEN 0.06632782100846812 THEN rt0.c1 END IN ()) ORDER BY (~ (((((rt0.c1)AND(t0.c90)))AND(t0.c69)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (CASE WHEN -8.6269888E8 THEN t0.c69 WHEN rt0.c0 THEN 7.69593549E8 WHEN 0.06632782100846812 THEN rt0.c1 END IN ()) WHERE (((((STRFTIME(x'', t0.c90, rt0.c1, rt0.c0, rt0.c1))OR(((t0.c69) IS TRUE))))AND(t0.c90 COLLATE BINARY))) ORDER BY (~ (((((rt0.c1)AND(t0.c90)))AND(t0.c69)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((STRFTIME(x'', t0.c90, rt0.c1, rt0.c0, rt0.c1))OR(((t0.c69) IS TRUE))))AND(t0.c90 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (CASE WHEN -8.6269888E8 THEN t0.c69 WHEN rt0.c0 THEN 7.69593549E8 WHEN 0.06632782100846812 THEN rt0.c1 END IN ()) ORDER BY (~ (((((rt0.c1)AND(t0.c90)))AND(t0.c69)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (CASE WHEN -8.6269888E8 THEN t0.c69 WHEN rt0.c0 THEN 7.69593549E8 WHEN 0.06632782100846812 THEN rt0.c1 END IN ()) WHERE (((((STRFTIME(x'', t0.c90, rt0.c1, rt0.c0, rt0.c1))OR(((t0.c69) IS TRUE))))AND(t0.c90 COLLATE BINARY))) ORDER BY (~ (((((rt0.c1)AND(t0.c90)))AND(t0.c69)))) DESC  NULLS FIRST;
SELECT * FROM rt0, t0, v0, vt1, vt0 WHERE (vt0.c1) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, t0, v0, vt1, vt0 ORDER BY x'' DESC);
SELECT * FROM rt0, t0, v0, vt1, vt0 WHERE (vt0.c1) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, t0, v0, vt1, vt0 ORDER BY x'' DESC);
SELECT * FROM rt0, t0, v0, vt1, vt0 WHERE (vt0.c1) ORDER BY x'' DESC;
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((rt0.c2) BETWEEN (CASE WHEN t0.c90 THEN t0.c90 ELSE rt0.c1 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CASE WHEN t0.c90 THEN t0.c90 ELSE rt0.c1 END) AND (x''))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((rt0.c2) BETWEEN (CASE WHEN t0.c90 THEN t0.c90 ELSE rt0.c1 END) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CASE WHEN t0.c90 THEN t0.c90 ELSE rt0.c1 END) AND (x''))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((rt0.c2) BETWEEN (CASE WHEN t0.c90 THEN t0.c90 ELSE rt0.c1 END) AND (x'')));
SELECT ALL * FROM rt0, t0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CHANGES());
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST((NOT (t0.c90)) AS INTEGER) WHERE (((rt0.c1) BETWEEN (rt0.c1 COLLATE BINARY) AND (IFNULL(rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c1 COLLATE BINARY) AND (IFNULL(rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST((NOT (t0.c90)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST((NOT (t0.c90)) AS INTEGER) WHERE (((rt0.c1) BETWEEN (rt0.c1 COLLATE BINARY) AND (IFNULL(rt0.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c1 COLLATE BINARY) AND (IFNULL(rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CAST((NOT (t0.c90)) AS INTEGER));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CAST((NOT (t0.c90)) AS INTEGER) WHERE (((rt0.c1) BETWEEN (rt0.c1 COLLATE BINARY) AND (IFNULL(rt0.c1, rt0.c1))));
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0, vt1 WHERE (((((((vt0.c1) NOT NULL))AND((~ (rt0.c0)))))OR((+ (rt0.c2))))) ORDER BY ((TYPEOF(DISTINCT rt0.c0)) BETWEEN (((t0.c90)LIKE(vt1.c0))) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT NULL))AND((~ (rt0.c0)))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM v0, t0, vt0, rt0, vt1 ORDER BY ((TYPEOF(DISTINCT rt0.c0)) BETWEEN (((t0.c90)LIKE(vt1.c0))) AND ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0, vt1 WHERE (((((((vt0.c1) NOT NULL))AND((~ (rt0.c0)))))OR((+ (rt0.c2))))) ORDER BY ((TYPEOF(DISTINCT rt0.c0)) BETWEEN (((t0.c90)LIKE(vt1.c0))) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT NULL))AND((~ (rt0.c0)))))OR((+ (rt0.c2))))) IS TRUE)  as count FROM v0, t0, vt0, rt0, vt1 ORDER BY ((TYPEOF(DISTINCT rt0.c0)) BETWEEN (((t0.c90)LIKE(vt1.c0))) AND ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM v0, t0, vt0, rt0, vt1 WHERE (((((((vt0.c1) NOT NULL))AND((~ (rt0.c0)))))OR((+ (rt0.c2))))) ORDER BY ((TYPEOF(DISTINCT rt0.c0)) BETWEEN (((t0.c90)LIKE(vt1.c0))) AND ((rt0.c1 IN ())));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c65 COLLATE RTRIM AS BLOB) WHERE (((t0.c65)LIKE(vt1.c0)) COLLATE BINARY) ORDER BY (t0.c65 IN ((((t0.c69)) BETWEEN ((t0.c90)) AND ((t0.c69))), (((t0.c90))<=((t0.c65))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c65)LIKE(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c65 COLLATE RTRIM AS BLOB) ORDER BY (t0.c65 IN ((((t0.c69)) BETWEEN ((t0.c90)) AND ((t0.c69))), (((t0.c90))<=((t0.c65))))) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c65 COLLATE RTRIM AS BLOB) WHERE (((t0.c65)LIKE(vt1.c0)) COLLATE BINARY) ORDER BY (t0.c65 IN ((((t0.c69)) BETWEEN ((t0.c90)) AND ((t0.c69))), (((t0.c90))<=((t0.c65))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c65)LIKE(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c65 COLLATE RTRIM AS BLOB) ORDER BY (t0.c65 IN ((((t0.c69)) BETWEEN ((t0.c90)) AND ((t0.c69))), (((t0.c90))<=((t0.c65))))) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON CAST(t0.c65 COLLATE RTRIM AS BLOB) WHERE (((t0.c65)LIKE(vt1.c0)) COLLATE BINARY) ORDER BY (t0.c65 IN ((((t0.c69)) BETWEEN ((t0.c90)) AND ((t0.c69))), (((t0.c90))<=((t0.c65))))) DESC;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c0);
SELECT * FROM vt0, vt1, t0 WHERE (IFNULL(((('-681790800')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), t0.c90));
SELECT SUM(count) FROM (SELECT ((IFNULL(((('-681790800')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), t0.c90)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (IFNULL(((('-681790800')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), t0.c90));
SELECT SUM(count) FROM (SELECT ((IFNULL(((('-681790800')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), t0.c90)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (IFNULL(((('-681790800')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), t0.c90));
SELECT COUNT(*) FROM v0, vt0, t0 CROSS JOIN vt1 ON (((((t0.c65)*(t0.c90)), ((((vt1.c0)AND(x'')))OR(vt0.c0)), t0.c65))<=((CASE WHEN NULL THEN t0.c90 END, (((vt0.c1))=((1665508298))), t0.c69))) WHERE ((((x'4a37'))<((NULL))));
SELECT SUM(count) FROM (SELECT (((((x'4a37'))<((NULL)))) IS TRUE)  as count FROM v0, vt0, t0 CROSS JOIN vt1 ON (((((t0.c65)*(t0.c90)), ((((vt1.c0)AND(x'')))OR(vt0.c0)), t0.c65))<=((CASE WHEN NULL THEN t0.c90 END, (((vt0.c1))=((1665508298))), t0.c69))));
SELECT COUNT(*) FROM v0, vt0, t0 CROSS JOIN vt1 ON (((((t0.c65)*(t0.c90)), ((((vt1.c0)AND(x'')))OR(vt0.c0)), t0.c65))<=((CASE WHEN NULL THEN t0.c90 END, (((vt0.c1))=((1665508298))), t0.c69))) WHERE ((((x'4a37'))<((NULL))));
SELECT SUM(count) FROM (SELECT (((((x'4a37'))<((NULL)))) IS TRUE)  as count FROM v0, vt0, t0 CROSS JOIN vt1 ON (((((t0.c65)*(t0.c90)), ((((vt1.c0)AND(x'')))OR(vt0.c0)), t0.c65))<=((CASE WHEN NULL THEN t0.c90 END, (((vt0.c1))=((1665508298))), t0.c69))));
SELECT COUNT(*) FROM v0, vt0, t0 CROSS JOIN vt1 ON (((((t0.c65)*(t0.c90)), ((((vt1.c0)AND(x'')))OR(vt0.c0)), t0.c65))<=((CASE WHEN NULL THEN t0.c90 END, (((vt0.c1))=((1665508298))), t0.c69))) WHERE ((((x'4a37'))<((NULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1) NOT NULL) WHERE (CASE WHEN ((vt0.c1)AND(rt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE UPPER(DISTINCT x'ceb1') END) ORDER BY ((x'')-(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)AND(rt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE UPPER(DISTINCT x'ceb1') END) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1) NOT NULL) ORDER BY ((x'')-(vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1) NOT NULL) WHERE (CASE WHEN ((vt0.c1)AND(rt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE UPPER(DISTINCT x'ceb1') END) ORDER BY ((x'')-(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)AND(rt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE UPPER(DISTINCT x'ceb1') END) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1) NOT NULL) ORDER BY ((x'')-(vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON ((rt0.c1) NOT NULL) WHERE (CASE WHEN ((vt0.c1)AND(rt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE UPPER(DISTINCT x'ceb1') END) ORDER BY ((x'')-(vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, vt1, rt0, vt0 WHERE ((((NOT (vt1.c0)))<=(((rt0.c1)<=(t0.c65)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<=(((rt0.c1)<=(t0.c65))))) IS TRUE)  as count FROM t0, v0, vt1, rt0, vt0);
SELECT COUNT(*) FROM t0, v0, vt1, rt0, vt0 WHERE ((((NOT (vt1.c0)))<=(((rt0.c1)<=(t0.c65)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<=(((rt0.c1)<=(t0.c65))))) IS TRUE)  as count FROM t0, v0, vt1, rt0, vt0);
SELECT COUNT(*) FROM t0, v0, vt1, rt0, vt0 WHERE ((((NOT (vt1.c0)))<=(((rt0.c1)<=(t0.c65)))));
SELECT * FROM v0, t0 WHERE (((('-240840945')) NOT BETWEEN ((CASE WHEN t0.c65 THEN v0.c0 ELSE NULL END)) AND ((((t0.c69)GLOB(t0.c69))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-240840945')) NOT BETWEEN ((CASE WHEN t0.c65 THEN v0.c0 ELSE NULL END)) AND ((((t0.c69)GLOB(t0.c69)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((('-240840945')) NOT BETWEEN ((CASE WHEN t0.c65 THEN v0.c0 ELSE NULL END)) AND ((((t0.c69)GLOB(t0.c69))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-240840945')) NOT BETWEEN ((CASE WHEN t0.c65 THEN v0.c0 ELSE NULL END)) AND ((((t0.c69)GLOB(t0.c69)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((('-240840945')) NOT BETWEEN ((CASE WHEN t0.c65 THEN v0.c0 ELSE NULL END)) AND ((((t0.c69)GLOB(t0.c69))))));
SELECT * FROM v0, vt0, rt0 CROSS JOIN t0 ON ((v0.c0)||(((((t0.c65)OR(vt1.c0)))OR(0.7128072369321926)))) LEFT OUTER JOIN vt1 ON (((((vt0.c0, t0.c90, rt0.c2)) BETWEEN ((rt0.c2, vt0.c1, t0.c65)) AND ((rt0.c2, t0.c90, vt0.c0))))>=(((t0.c65)IS(rt0.c1)))) WHERE (CASE v0.c0 COLLATE NOCASE  WHEN (~ (t0.c69)) THEN t0.c65 WHEN t0.c65 THEN CASE t0.c69  WHEN t0.c90 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END WHEN ((t0.c90)=(v0.c0)) THEN json_extract(rt0.c0, t0.c90, t0.c65, rt0.c0) ELSE CASE WHEN t0.c90 THEN v0.c0 ELSE x'' END END) ORDER BY ('-2100788866' IN (CAST(rt0.c2 AS REAL))) ASC, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN (~ (t0.c69)) THEN t0.c65 WHEN t0.c65 THEN CASE t0.c69  WHEN t0.c90 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END WHEN ((t0.c90)=(v0.c0)) THEN json_extract(rt0.c0, t0.c90, t0.c65, rt0.c0) ELSE CASE WHEN t0.c90 THEN v0.c0 ELSE x'' END END) IS TRUE)  as count FROM v0, vt0, rt0 CROSS JOIN t0 ON ((v0.c0)||(((((t0.c65)OR(vt1.c0)))OR(0.7128072369321926)))) LEFT OUTER JOIN vt1 ON (((((vt0.c0, t0.c90, rt0.c2)) BETWEEN ((rt0.c2, vt0.c1, t0.c65)) AND ((rt0.c2, t0.c90, vt0.c0))))>=(((t0.c65)IS(rt0.c1)))) ORDER BY ('-2100788866' IN (CAST(rt0.c2 AS REAL))) ASC, vt1.c0  NULLS LAST);
SELECT * FROM v0, vt0, rt0 CROSS JOIN t0 ON ((v0.c0)||(((((t0.c65)OR(vt1.c0)))OR(0.7128072369321926)))) LEFT OUTER JOIN vt1 ON (((((vt0.c0, t0.c90, rt0.c2)) BETWEEN ((rt0.c2, vt0.c1, t0.c65)) AND ((rt0.c2, t0.c90, vt0.c0))))>=(((t0.c65)IS(rt0.c1)))) WHERE (CASE v0.c0 COLLATE NOCASE  WHEN (~ (t0.c69)) THEN t0.c65 WHEN t0.c65 THEN CASE t0.c69  WHEN t0.c90 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END WHEN ((t0.c90)=(v0.c0)) THEN json_extract(rt0.c0, t0.c90, t0.c65, rt0.c0) ELSE CASE WHEN t0.c90 THEN v0.c0 ELSE x'' END END) ORDER BY ('-2100788866' IN (CAST(rt0.c2 AS REAL))) ASC, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN (~ (t0.c69)) THEN t0.c65 WHEN t0.c65 THEN CASE t0.c69  WHEN t0.c90 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END WHEN ((t0.c90)=(v0.c0)) THEN json_extract(rt0.c0, t0.c90, t0.c65, rt0.c0) ELSE CASE WHEN t0.c90 THEN v0.c0 ELSE x'' END END) IS TRUE)  as count FROM v0, vt0, rt0 CROSS JOIN t0 ON ((v0.c0)||(((((t0.c65)OR(vt1.c0)))OR(0.7128072369321926)))) LEFT OUTER JOIN vt1 ON (((((vt0.c0, t0.c90, rt0.c2)) BETWEEN ((rt0.c2, vt0.c1, t0.c65)) AND ((rt0.c2, t0.c90, vt0.c0))))>=(((t0.c65)IS(rt0.c1)))) ORDER BY ('-2100788866' IN (CAST(rt0.c2 AS REAL))) ASC, vt1.c0  NULLS LAST);
SELECT * FROM v0, vt0, rt0 CROSS JOIN t0 ON ((v0.c0)||(((((t0.c65)OR(vt1.c0)))OR(0.7128072369321926)))) LEFT OUTER JOIN vt1 ON (((((vt0.c0, t0.c90, rt0.c2)) BETWEEN ((rt0.c2, vt0.c1, t0.c65)) AND ((rt0.c2, t0.c90, vt0.c0))))>=(((t0.c65)IS(rt0.c1)))) WHERE (CASE v0.c0 COLLATE NOCASE  WHEN (~ (t0.c69)) THEN t0.c65 WHEN t0.c65 THEN CASE t0.c69  WHEN t0.c90 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c1 END WHEN ((t0.c90)=(v0.c0)) THEN json_extract(rt0.c0, t0.c90, t0.c65, rt0.c0) ELSE CASE WHEN t0.c90 THEN v0.c0 ELSE x'' END END) ORDER BY ('-2100788866' IN (CAST(rt0.c2 AS REAL))) ASC, vt1.c0  NULLS LAST;
SELECT * FROM vt1, vt0 INDEXED BY i1 WHERE (0.9917806280048582);
SELECT SUM(count) FROM (SELECT ALL ((0.9917806280048582) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i1);
SELECT * FROM vt1, vt0 INDEXED BY i1 WHERE (0.9917806280048582);
SELECT SUM(count) FROM (SELECT ALL ((0.9917806280048582) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i1);
SELECT COUNT(*) FROM t0, vt0, rt0, v0, vt1 WHERE ((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN (((-1.864875203E9)|(t0.c90))) AND (STRFTIME(rt0.c0, vt0.c0, t0.c65)))) ORDER BY (((((t0.c69, rt0.c0, '1748613303', t0.c90, rt0.c1))==((rt0.c0, v0.c0, rt0.c0, x'', t0.c65))))!=(t0.c65))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN (((-1.864875203E9)|(t0.c90))) AND (STRFTIME(rt0.c0, vt0.c0, t0.c65)))) IS TRUE)  as count FROM t0, vt0, rt0, v0, vt1 ORDER BY (((((t0.c69, rt0.c0, '1748613303', t0.c90, rt0.c1))=((rt0.c0, v0.c0, rt0.c0, x'', t0.c65))))<>(t0.c65))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, v0, vt1 WHERE ((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN (((-1.864875203E9)|(t0.c90))) AND (STRFTIME(rt0.c0, vt0.c0, t0.c65)))) ORDER BY (((((t0.c69, rt0.c0, '1748613303', t0.c90, rt0.c1))==((rt0.c0, v0.c0, rt0.c0, x'', t0.c65))))!=(t0.c65))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN (((-1.864875203E9)|(t0.c90))) AND (STRFTIME(rt0.c0, vt0.c0, t0.c65)))) IS TRUE)  as count FROM t0, vt0, rt0, v0, vt1 ORDER BY (((((t0.c69, rt0.c0, '1748613303', t0.c90, rt0.c1))=((rt0.c0, v0.c0, rt0.c0, x'', t0.c65))))<>(t0.c65))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, v0, vt1 WHERE ((((((rt0.c1))!=((rt0.c2)))) NOT BETWEEN (((-1.864875203E9)|(t0.c90))) AND (STRFTIME(rt0.c0, vt0.c0, t0.c65)))) ORDER BY (((((t0.c69, rt0.c0, '1748613303', t0.c90, rt0.c1))==((rt0.c0, v0.c0, rt0.c0, x'', t0.c65))))!=(t0.c65))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c1))<((rt0.c1)))) AND (vt0.c1))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN (NOT ('-351897367')) ELSE (NOT (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c1))<((rt0.c1)))) AND (vt0.c1))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN (NOT ('-351897367')) ELSE (NOT (v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c1))<((rt0.c1)))) AND (vt0.c1))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN (NOT ('-351897367')) ELSE (NOT (v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c1))<((rt0.c1)))) AND (vt0.c1))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN (NOT ('-351897367')) ELSE (NOT (v0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c1))<((rt0.c1)))) AND (vt0.c1))) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN (NOT ('-351897367')) ELSE (NOT (v0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, v0, t0 NATURAL JOIN vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, v0, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1, rt0, v0, t0 NATURAL JOIN vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, v0, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1, rt0, v0, t0 NATURAL JOIN vt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, v0, t0, vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.6912824904389037)) AND ((CAST(rt0.c2 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((0.6912824904389037)) AND ((CAST(rt0.c2 AS REAL))))) IS TRUE)  as count FROM rt0, v0, t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0, v0, t0, vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.6912824904389037)) AND ((CAST(rt0.c2 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((0.6912824904389037)) AND ((CAST(rt0.c2 AS REAL))))) IS TRUE)  as count FROM rt0, v0, t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0, v0, t0, vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.6912824904389037)) AND ((CAST(rt0.c2 AS REAL)))));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN t0.c90 THEN ((t0.c90)==(rt0.c0)) WHEN '!3\' COLLATE NOCASE THEN PRINTF(x'') WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (t0.c90)) WHEN ((t0.c69) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (NOT (rt0.c0)) THEN ((rt0.c0)!=(rt0.c0)) END) ORDER BY 0.5393030883755592  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c90 THEN ((t0.c90)=(rt0.c0)) WHEN '!3\' COLLATE NOCASE THEN PRINTF(x'') WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (t0.c90)) WHEN ((t0.c69) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (NOT (rt0.c0)) THEN ((rt0.c0)!=(rt0.c0)) END) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY 0.5393030883755592  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN t0.c90 THEN ((t0.c90)==(rt0.c0)) WHEN '!3\' COLLATE NOCASE THEN PRINTF(x'') WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (t0.c90)) WHEN ((t0.c69) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (NOT (rt0.c0)) THEN ((rt0.c0)!=(rt0.c0)) END) ORDER BY 0.5393030883755592  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c90 THEN ((t0.c90)=(rt0.c0)) WHEN '!3\' COLLATE NOCASE THEN PRINTF(x'') WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (t0.c90)) WHEN ((t0.c69) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (NOT (rt0.c0)) THEN ((rt0.c0)!=(rt0.c0)) END) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY 0.5393030883755592  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN t0.c90 THEN ((t0.c90)==(rt0.c0)) WHEN '!3\' COLLATE NOCASE THEN PRINTF(x'') WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (t0.c90)) WHEN ((t0.c69) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (NOT (rt0.c0)) THEN ((rt0.c0)!=(rt0.c0)) END) ORDER BY 0.5393030883755592  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((PRINTF(vt1.c0))<=(CAST(vt1.c0 AS REAL)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((PRINTF(vt1.c0))<=(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((PRINTF(vt1.c0))<=(CAST(vt1.c0 AS REAL)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((PRINTF(vt1.c0))<=(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((PRINTF(vt1.c0))<=(CAST(vt1.c0 AS REAL)))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c69 AS INTEGER)) NOT BETWEEN ((((rt0.c1))<>((t0.c69)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c69 AS INTEGER)) NOT BETWEEN ((((rt0.c1))!=((t0.c69)))) AND (NULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c69 AS INTEGER)) NOT BETWEEN ((((rt0.c1))<>((t0.c69)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c69 AS INTEGER)) NOT BETWEEN ((((rt0.c1))!=((t0.c69)))) AND (NULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(t0.c69 AS INTEGER)) NOT BETWEEN ((((rt0.c1))<>((t0.c69)))) AND (NULL)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (('153493434' COLLATE NOCASE) NOT BETWEEN ((('_/⿅X') NOT BETWEEN (rt0.c2) AND (v0.c0))) AND (CAST(t0.c65 AS BLOB))) RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY t0.c65, '+' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (('153493434' COLLATE NOCASE) NOT BETWEEN ((('_/⿅X') NOT BETWEEN (rt0.c2) AND (v0.c0))) AND (CAST(t0.c65 AS BLOB))) RIGHT OUTER JOIN t0 ON rt0.c1 ORDER BY t0.c65, '+' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (('153493434' COLLATE NOCASE) NOT BETWEEN ((('_/⿅X') NOT BETWEEN (rt0.c2) AND (v0.c0))) AND (CAST(t0.c65 AS BLOB))) RIGHT OUTER JOIN t0 ON rt0.c1 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY t0.c65, '+' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (('153493434' COLLATE NOCASE) NOT BETWEEN ((('_/⿅X') NOT BETWEEN (rt0.c2) AND (v0.c0))) AND (CAST(t0.c65 AS BLOB))) RIGHT OUTER JOIN t0 ON rt0.c1 ORDER BY t0.c65, '+' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0) NOT NULL))>=(((v0.c0)<<(v0.c0))))) ORDER BY (x'35445ba7' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))>=(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (x'35445ba7' IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0) NOT NULL))>=(((v0.c0)<<(v0.c0))))) ORDER BY (x'35445ba7' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))>=(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (x'35445ba7' IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0) NOT NULL))>=(((v0.c0)<<(v0.c0))))) ORDER BY (x'35445ba7' IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, v0, vt1, rt0 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE BINARY) ORDER BY json_insert(((v0.c0)<<(-455597031)), CASE WHEN t0.c90 THEN vt0.c1 END, (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c2, vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)!=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0, vt1, rt0 ORDER BY json_insert(((v0.c0)<<(-455597031)), CASE WHEN t0.c90 THEN vt0.c1 END, (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c2, vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0, vt1, rt0 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE BINARY) ORDER BY json_insert(((v0.c0)<<(-455597031)), CASE WHEN t0.c90 THEN vt0.c1 END, (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c2, vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)!=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0, vt1, rt0 ORDER BY json_insert(((v0.c0)<<(-455597031)), CASE WHEN t0.c90 THEN vt0.c1 END, (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c2, vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, v0, vt1, rt0 WHERE (((rt0.c2)<>(rt0.c1)) COLLATE BINARY) ORDER BY json_insert(((v0.c0)<<(-455597031)), CASE WHEN t0.c90 THEN vt0.c1 END, (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((v0.c0, rt0.c2, vt1.c0))))  NULLS LAST;
SELECT ALL * FROM t0, vt1, v0, rt0 WHERE (CAST(((t0.c65) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c65) ISNULL) AS BLOB)) IS TRUE)  as count FROM t0, vt1, v0, rt0);
SELECT ALL * FROM t0, vt1, v0, rt0 WHERE (CAST(((t0.c65) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c65) ISNULL) AS BLOB)) IS TRUE)  as count FROM t0, vt1, v0, rt0);
SELECT ALL * FROM t0, vt1, v0, rt0 WHERE (CAST(((t0.c65) ISNULL) AS BLOB));
SELECT ALL * FROM rt0, v0 INDEXED BY i30, vt0 WHERE (CASE LIKELIHOOD(DISTINCT rt0.c0, 0.22882138117182538)  WHEN json_array(NULL, rt0.c1) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT rt0.c0, 0.22882138117182538)  WHEN json_array(NULL, rt0.c1) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM rt0, v0 INDEXED BY i30, vt0);
SELECT ALL * FROM rt0, v0 INDEXED BY i30, vt0 WHERE (CASE LIKELIHOOD(DISTINCT rt0.c0, 0.22882138117182538)  WHEN json_array(NULL, rt0.c1) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE LIKELIHOOD(DISTINCT rt0.c0, 0.22882138117182538)  WHEN json_array(NULL, rt0.c1) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM rt0, v0 INDEXED BY i30, vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('-2109761727')))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('-2109761727')))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('-2109761727')))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('-2109761727')))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('-2109761727')))))AND((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL))<=((~ (rt0.c0)))) RIGHT OUTER JOIN v0 ON (- (((v0.c0)IS NOT(vt1.c0)))) WHERE ((((((vt0.c1))>((v0.c0)))) NOTNULL)) ORDER BY ((t0.c65) NOT NULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL))<=((~ (rt0.c0)))) RIGHT OUTER JOIN v0 ON (- (((v0.c0)IS NOT(vt1.c0)))) ORDER BY ((t0.c65) NOT NULL) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL))<=((~ (rt0.c0)))) RIGHT OUTER JOIN v0 ON (- (((v0.c0)IS NOT(vt1.c0)))) WHERE ((((((vt0.c1))>((v0.c0)))) NOTNULL)) ORDER BY ((t0.c65) NOT NULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL))<=((~ (rt0.c0)))) RIGHT OUTER JOIN v0 ON (- (((v0.c0)IS NOT(vt1.c0)))) ORDER BY ((t0.c65) NOT NULL) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 CROSS JOIN vt0 ON ((CAST(rt0.c0 AS REAL))<=((~ (rt0.c0)))) RIGHT OUTER JOIN v0 ON (- (((v0.c0)IS NOT(vt1.c0)))) WHERE ((((((vt0.c1))>((v0.c0)))) NOTNULL)) ORDER BY ((t0.c65) NOT NULL) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt1, t0, rt0, v0 WHERE (0.6584030373592002);
SELECT SUM(count) FROM (SELECT ALL ((0.6584030373592002) IS TRUE)  as count FROM vt1, t0, rt0, v0);
SELECT COUNT(*) FROM vt1, t0, rt0, v0 WHERE (0.6584030373592002);
SELECT SUM(count) FROM (SELECT ALL ((0.6584030373592002) IS TRUE)  as count FROM vt1, t0, rt0, v0);
SELECT COUNT(*) FROM vt1, t0, rt0, v0 WHERE (0.6584030373592002);
SELECT * FROM vt1, t0, v0, vt0 WHERE (((((vt0.c1)IS NOT(t0.c65)))<=(((v0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t0.c65)))<=(((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, v0, vt0);
SELECT * FROM vt1, t0, v0, vt0 WHERE (((((vt0.c1)IS NOT(t0.c65)))<=(((v0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t0.c65)))<=(((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, v0, vt0);
SELECT * FROM vt1, t0, v0, vt0 WHERE (((((vt0.c1)IS NOT(t0.c65)))<=(((v0.c0)<=(vt0.c0)))));
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE TYPEOF(vt0.c1)  WHEN ((((1.128738757E9)OR(vt0.c1)))AND(vt1.c0)) THEN (NOT (vt0.c1)) WHEN CAST(t0.c69 AS NUMERIC) THEN vt1.c0 COLLATE BINARY WHEN (((t0.c69)) NOT BETWEEN ((vt0.c0)) AND ((t0.c90))) THEN CAST(vt1.c0 AS REAL) ELSE ((t0.c69) ISNULL) END FULL OUTER JOIN vt1 ON LOWER(DISTINCT (NOT (t0.c90))) WHERE (CAST(((vt1.c0)>=(t0.c69)) AS REAL)) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS NUMERIC)), (((('')) NOT BETWEEN ((t0.c65)) AND ((t0.c65))) IN (CAST(t0.c65 AS REAL))) ASC, (((((((((t0.c69 IN ()))AND(((((vt0.c1)OR(t0.c90)))AND(t0.c90)))))AND(vt0.c1)))AND(((t0.c65)==(vt0.c0)))))OR((((vt0.c0, vt1.c0, t0.c69, t0.c90, t0.c65))=((t0.c65, t0.c65, t0.c65, vt0.c1, t0.c90)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(t0.c69)) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE TYPEOF(vt0.c1)  WHEN ((((1.128738757E9)OR(vt0.c1)))AND(vt1.c0)) THEN (NOT (vt0.c1)) WHEN CAST(t0.c69 AS NUMERIC) THEN vt1.c0 COLLATE BINARY WHEN (((t0.c69)) NOT BETWEEN ((vt0.c0)) AND ((t0.c90))) THEN CAST(vt1.c0 AS REAL) ELSE ((t0.c69) ISNULL) END FULL OUTER JOIN vt1 ON LOWER(DISTINCT (NOT (t0.c90))) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS NUMERIC)), (((('')) NOT BETWEEN ((t0.c65)) AND ((t0.c65))) IN (CAST(t0.c65 AS REAL))) ASC, (((((((((t0.c69 IN ()))AND(((((vt0.c1)OR(t0.c90)))AND(t0.c90)))))AND(vt0.c1)))AND(((t0.c65)==(vt0.c0)))))OR((((vt0.c0, vt1.c0, t0.c69, t0.c90, t0.c65))=((t0.c65, t0.c65, t0.c65, vt0.c1, t0.c90)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON CASE TYPEOF(vt0.c1)  WHEN ((((1.128738757E9)OR(vt0.c1)))AND(vt1.c0)) THEN (NOT (vt0.c1)) WHEN CAST(t0.c69 AS NUMERIC) THEN vt1.c0 COLLATE BINARY WHEN (((t0.c69)) NOT BETWEEN ((vt0.c0)) AND ((t0.c90))) THEN CAST(vt1.c0 AS REAL) ELSE ((t0.c69) ISNULL) END FULL OUTER JOIN vt1 ON LOWER(DISTINCT (NOT (t0.c90))) WHERE (CAST(((vt1.c0)>=(t0.c69)) AS REAL)) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS NUMERIC)), (((('')) NOT BETWEEN ((t0.c65)) AND ((t0.c65))) IN (CAST(t0.c65 AS REAL))) ASC, (((((((((t0.c69 IN ()))AND(((((vt0.c1)OR(t0.c90)))AND(t0.c90)))))AND(vt0.c1)))AND(((t0.c65)==(vt0.c0)))))OR((((vt0.c0, vt1.c0, t0.c69, t0.c90, t0.c65))=((t0.c65, t0.c65, t0.c65, vt0.c1, t0.c90)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(t0.c69)) AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CASE TYPEOF(vt0.c1)  WHEN ((((1.128738757E9)OR(vt0.c1)))AND(vt1.c0)) THEN (NOT (vt0.c1)) WHEN CAST(t0.c69 AS NUMERIC) THEN vt1.c0 COLLATE BINARY WHEN (((t0.c69)) NOT BETWEEN ((vt0.c0)) AND ((t0.c90))) THEN CAST(vt1.c0 AS REAL) ELSE ((t0.c69) ISNULL) END FULL OUTER JOIN vt1 ON LOWER(DISTINCT (NOT (t0.c90))) ORDER BY TYPEOF(DISTINCT CAST(vt0.c0 AS NUMERIC)), (((('')) NOT BETWEEN ((t0.c65)) AND ((t0.c65))) IN (CAST(t0.c65 AS REAL))) ASC, (((((((((t0.c69 IN ()))AND(((((vt0.c1)OR(t0.c90)))AND(t0.c90)))))AND(vt0.c1)))AND(((t0.c65)==(vt0.c0)))))OR((((vt0.c0, vt1.c0, t0.c69, t0.c90, t0.c65))=((t0.c65, t0.c65, t0.c65, vt0.c1, t0.c90)))))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((vt1.c0 COLLATE NOCASE IN ('695768879')));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ('695768879'))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((vt1.c0 COLLATE NOCASE IN ('695768879')));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ('695768879'))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((vt1.c0 COLLATE NOCASE IN ('695768879')));
SELECT * FROM vt1, rt0, t0, v0, vt0 WHERE ((((rt0.c2)>=(rt0.c2)) IN ())) ORDER BY ((vt0.c1) NOT BETWEEN (rt0.c0) AND ((NOT (t0.c65)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0, v0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (rt0.c0) AND ((NOT (t0.c65)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, t0, v0, vt0 WHERE ((((rt0.c2)>=(rt0.c2)) IN ())) ORDER BY ((vt0.c1) NOT BETWEEN (rt0.c0) AND ((NOT (t0.c65)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0, t0, v0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (rt0.c0) AND ((NOT (t0.c65)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, t0, v0, vt0 WHERE ((((rt0.c2)>=(rt0.c2)) IN ())) ORDER BY ((vt0.c1) NOT BETWEEN (rt0.c0) AND ((NOT (t0.c65)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 END) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 END) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 END) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('-1541113882');
SELECT SUM(count) FROM (SELECT (('-1541113882') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('-1541113882');
SELECT SUM(count) FROM (SELECT (('-1541113882') IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ('-1541113882');
SELECT * FROM v0 WHERE (CASE WHEN (((v0.c0))<=((v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0))<=((v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (((v0.c0))<=((v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0))<=((v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (((v0.c0))<=((v0.c0))) THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c65) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c69) AND (t0.c65))) AND ((t0.c69 IN (NULL))))) ORDER BY '404550060';
SELECT SUM(count) FROM (SELECT ALL ((((t0.c65) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c69) AND (t0.c65))) AND ((t0.c69 IN (NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '404550060');
SELECT ALL * FROM t0, vt0 WHERE (((t0.c65) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c69) AND (t0.c65))) AND ((t0.c69 IN (NULL))))) ORDER BY '404550060';
SELECT SUM(count) FROM (SELECT ALL ((((t0.c65) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c69) AND (t0.c65))) AND ((t0.c69 IN (NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '404550060');
SELECT ALL * FROM t0, vt0 WHERE (((t0.c65) NOT BETWEEN (((vt0.c0) BETWEEN (t0.c69) AND (t0.c65))) AND ((t0.c69 IN (NULL))))) ORDER BY '404550060';
SELECT * FROM vt1, rt0, v0 WHERE ((((vt1.c0) ISNULL) IN (LIKELY(rt0.c1), (~ (vt1.c0))))) ORDER BY (+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN (LIKELY(rt0.c1), (~ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE ((((vt1.c0) ISNULL) IN (LIKELY(rt0.c1), (~ (vt1.c0))))) ORDER BY (+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN (LIKELY(rt0.c1), (~ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END)) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, v0 WHERE ((((vt1.c0) ISNULL) IN (LIKELY(rt0.c1), (~ (vt1.c0))))) ORDER BY (+ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((('<yK') NOT BETWEEN (vt0.c1) AND (vt0.c0))))==(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('<yK') NOT BETWEEN (vt0.c1) AND (vt0.c0))))==(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((('<yK') NOT BETWEEN (vt0.c1) AND (vt0.c0))))==(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('<yK') NOT BETWEEN (vt0.c1) AND (vt0.c0))))==(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((('<yK') NOT BETWEEN (vt0.c1) AND (vt0.c0))))==(((+ (vt0.c0))))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND ((v0.c0 IN ())))) ORDER BY ((CAST(v0.c0 AS TEXT))>(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT))>(((v0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND ((v0.c0 IN ())))) ORDER BY ((CAST(v0.c0 AS TEXT))>(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT))>(((v0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND ((v0.c0 IN ())))) ORDER BY ((CAST(v0.c0 AS TEXT))>(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON 0.6621083573675509 WHERE (((rt0.c2 COLLATE BINARY)!=((((rt0.c0))<((rt0.c1)))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)!=((((rt0.c0))<((rt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON 0.6621083573675509 ORDER BY CAST((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON 0.6621083573675509 WHERE (((rt0.c2 COLLATE BINARY)!=((((rt0.c0))<((rt0.c1)))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)!=((((rt0.c0))<((rt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON 0.6621083573675509 ORDER BY CAST((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON 0.6621083573675509 WHERE (((rt0.c2 COLLATE BINARY)!=((((rt0.c0))<((rt0.c1)))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON IFNULL(DISTINCT ((t0.c69) NOT BETWEEN (1.468772124E9) AND (vt0.c1)), t0.c69 COLLATE RTRIM) LEFT OUTER JOIN vt1 ON ((((t0.c69)OR(t0.c90)))OR(((vt0.c1)GLOB(rt0.c1)))) WHERE (MAX(((rt0.c1)||(rt0.c1)), vt0.c0)) ORDER BY ((((((((((((t0.c90)AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(((rt0.c1)||(rt0.c1)), vt0.c0)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON IFNULL(DISTINCT ((t0.c69) NOT BETWEEN (1.468772124E9) AND (vt0.c1)), t0.c69 COLLATE RTRIM) LEFT OUTER JOIN vt1 ON ((((t0.c69)OR(t0.c90)))OR(((vt0.c1)GLOB(rt0.c1)))) ORDER BY ((((((((((((t0.c90)AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON IFNULL(DISTINCT ((t0.c69) NOT BETWEEN (1.468772124E9) AND (vt0.c1)), t0.c69 COLLATE RTRIM) LEFT OUTER JOIN vt1 ON ((((t0.c69)OR(t0.c90)))OR(((vt0.c1)GLOB(rt0.c1)))) WHERE (MAX(((rt0.c1)||(rt0.c1)), vt0.c0)) ORDER BY ((((((((((((t0.c90)AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(((rt0.c1)||(rt0.c1)), vt0.c0)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON IFNULL(DISTINCT ((t0.c69) NOT BETWEEN (1.468772124E9) AND (vt0.c1)), t0.c69 COLLATE RTRIM) LEFT OUTER JOIN vt1 ON ((((t0.c69)OR(t0.c90)))OR(((vt0.c1)GLOB(rt0.c1)))) ORDER BY ((((((((((((t0.c90)AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE RTRIM INNER JOIN t0 ON IFNULL(DISTINCT ((t0.c69) NOT BETWEEN (1.468772124E9) AND (vt0.c1)), t0.c69 COLLATE RTRIM) LEFT OUTER JOIN vt1 ON ((((t0.c69)OR(t0.c90)))OR(((vt0.c1)GLOB(rt0.c1)))) WHERE (MAX(((rt0.c1)||(rt0.c1)), vt0.c0)) ORDER BY ((((((((((((t0.c90)AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0))  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c0))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ()))) DESC);
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c0))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)-(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ()))) DESC);
SELECT * FROM v0 WHERE (((v0.c0)-(v0.c0))) ORDER BY ((v0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((v0.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (' ') ORDER BY ((0.49556204326473985) BETWEEN (CAST(t0.c65 AS INTEGER)) AND ((~ (t0.c65)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((' ') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((0.49556204326473985) BETWEEN (CAST(t0.c65 AS INTEGER)) AND ((~ (t0.c65)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (' ') ORDER BY ((0.49556204326473985) BETWEEN (CAST(t0.c65 AS INTEGER)) AND ((~ (t0.c65)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((' ') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((0.49556204326473985) BETWEEN (CAST(t0.c65 AS INTEGER)) AND ((~ (t0.c65)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (' ') ORDER BY ((0.49556204326473985) BETWEEN (CAST(t0.c65 AS INTEGER)) AND ((~ (t0.c65)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)>(((vt1.c0)==(0.5449593631666686)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END)>(((vt1.c0)=(0.5449593631666686))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)>(((vt1.c0)==(0.5449593631666686)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END)>(((vt1.c0)=(0.5449593631666686))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)>(((vt1.c0)==(0.5449593631666686)))));
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c0))) NOT NULL) FULL OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))>(v0.c0)) WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c0))) NOT NULL) FULL OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))>(v0.c0)));
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c0))) NOT NULL) FULL OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))>(v0.c0)) WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c0))) NOT NULL) FULL OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))>(v0.c0)));
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON (((vt1.c0 IN (vt1.c0))) NOT NULL) FULL OUTER JOIN v0 ON ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))>(v0.c0)) WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((((rt0.c2)%(rt0.c1)) IN ())) ORDER BY (((rt0.c1 IN (1.338037096E9))) NOT NULL) DESC, ((((((((('-1627232048')AND(t0.c65)))OR(rt0.c0)))OR(vt0.c0)))AND(t0.c90)) IN ()) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))<(((((t0.c69)AND(v0.c0)))AND(t0.c65)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)%(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((rt0.c1 IN (1.338037096E9))) NOT NULL) DESC, ((((((((('-1627232048')AND(t0.c65)))OR(rt0.c0)))OR(vt0.c0)))AND(t0.c90)) IN ()) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))<(((((t0.c69)AND(v0.c0)))AND(t0.c65)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((((rt0.c2)%(rt0.c1)) IN ())) ORDER BY (((rt0.c1 IN (1.338037096E9))) NOT NULL) DESC, ((((((((('-1627232048')AND(t0.c65)))OR(rt0.c0)))OR(vt0.c0)))AND(t0.c90)) IN ()) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))<(((((t0.c69)AND(v0.c0)))AND(t0.c65)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)%(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0, t0 ORDER BY (((rt0.c1 IN (1.338037096E9))) NOT NULL) DESC, ((((((((('-1627232048')AND(t0.c65)))OR(rt0.c0)))OR(vt0.c0)))AND(t0.c90)) IN ()) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))<(((((t0.c69)AND(v0.c0)))AND(t0.c65)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0, t0 WHERE ((((rt0.c2)%(rt0.c1)) IN ())) ORDER BY (((rt0.c1 IN (1.338037096E9))) NOT NULL) DESC, ((((((((('-1627232048')AND(t0.c65)))OR(rt0.c0)))OR(vt0.c0)))AND(t0.c90)) IN ()) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))<(((((t0.c69)AND(v0.c0)))AND(t0.c65)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((('') NOT NULL) IN (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((('') NOT NULL) IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((('') NOT NULL) IN (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((('') NOT NULL) IN (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((('') NOT NULL) IN (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)&(rt0.c0)))))OR(rt0.c1)))OR(vt1.c0 COLLATE BINARY)) WHERE (((TYPEOF(DISTINCT rt0.c2)) NOT NULL)) ORDER BY (((((((((rt0.c2 IN ()))OR((~ (vt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) IS TRUE))))AND(((rt0.c1)<<(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)&(rt0.c0)))))OR(rt0.c1)))OR(vt1.c0 COLLATE BINARY)) ORDER BY (((((((((rt0.c2 IN ()))OR((~ (vt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) IS TRUE))))AND(((rt0.c1)<<(v0.c0)))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)&(rt0.c0)))))OR(rt0.c1)))OR(vt1.c0 COLLATE BINARY)) WHERE (((TYPEOF(DISTINCT rt0.c2)) NOT NULL)) ORDER BY (((((((((rt0.c2 IN ()))OR((~ (vt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) IS TRUE))))AND(((rt0.c1)<<(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c2)) NOT NULL)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)&(rt0.c0)))))OR(rt0.c1)))OR(vt1.c0 COLLATE BINARY)) ORDER BY (((((((((rt0.c2 IN ()))OR((~ (vt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) IS TRUE))))AND(((rt0.c1)<<(v0.c0)))));
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS TEXT))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)&(rt0.c0)))))OR(rt0.c1)))OR(vt1.c0 COLLATE BINARY)) WHERE (((TYPEOF(DISTINCT rt0.c2)) NOT NULL)) ORDER BY (((((((((rt0.c2 IN ()))OR((~ (vt1.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c1) IS TRUE))))AND(((rt0.c1)<<(v0.c0))));
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c90)OR(t0.c69)))AND(rt0.c1)) IN ())) ORDER BY CASE (('0.37650846781978053')<<(t0.c90))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.2970964367026695) THEN CAST(t0.c90 AS REAL) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c90)OR(t0.c69)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE (('0.37650846781978053')<<(t0.c90))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.2970964367026695) THEN CAST(t0.c90 AS REAL) ELSE NULL END);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c90)OR(t0.c69)))AND(rt0.c1)) IN ())) ORDER BY CASE (('0.37650846781978053')<<(t0.c90))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.2970964367026695) THEN CAST(t0.c90 AS REAL) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c90)OR(t0.c69)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE (('0.37650846781978053')<<(t0.c90))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.2970964367026695) THEN CAST(t0.c90 AS REAL) ELSE NULL END);
SELECT ALL * FROM rt0, t0 WHERE ((((((t0.c90)OR(t0.c69)))AND(rt0.c1)) IN ())) ORDER BY CASE (('0.37650846781978053')<<(t0.c90))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.2970964367026695) THEN CAST(t0.c90 AS REAL) ELSE NULL END;
SELECT * FROM v0, vt0, rt0, t0, vt1 WHERE (CAST(((t0.c69) IS FALSE) AS BLOB)) ORDER BY ((((rt0.c0)>>(t0.c90))) BETWEEN ((((0.05651230380735972))>((vt0.c0)))) AND (HEX(t0.c65))) DESC  NULLS LAST, CASE vt0.c1  WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c69)) ELSE (('1401748414')>(v0.c0)) END DESC  NULLS FIRST, (((((((((rt0.c2 IN (t0.c90)))AND((~ (vt0.c0)))))AND(CAST('' AS INTEGER))))AND((((t0.c90))!=((rt0.c0))))))AND(((v0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c69) IS FALSE) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0, t0, vt1 ORDER BY ((((rt0.c0)>>(t0.c90))) BETWEEN ((((0.05651230380735972))>((vt0.c0)))) AND (HEX(t0.c65))) DESC  NULLS LAST, CASE vt0.c1  WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c69)) ELSE (('1401748414')>(v0.c0)) END DESC  NULLS FIRST, (((((((((rt0.c2 IN (t0.c90)))AND((~ (vt0.c0)))))AND(CAST('' AS INTEGER))))AND((((t0.c90))!=((rt0.c0))))))AND(((v0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM v0, vt0, rt0, t0, vt1 WHERE (CAST(((t0.c69) IS FALSE) AS BLOB)) ORDER BY ((((rt0.c0)>>(t0.c90))) BETWEEN ((((0.05651230380735972))>((vt0.c0)))) AND (HEX(t0.c65))) DESC  NULLS LAST, CASE vt0.c1  WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c69)) ELSE (('1401748414')>(v0.c0)) END DESC  NULLS FIRST, (((((((((rt0.c2 IN (t0.c90)))AND((~ (vt0.c0)))))AND(CAST('' AS INTEGER))))AND((((t0.c90))!=((rt0.c0))))))AND(((v0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c69) IS FALSE) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0, t0, vt1 ORDER BY ((((rt0.c0)>>(t0.c90))) BETWEEN ((((0.05651230380735972))>((vt0.c0)))) AND (HEX(t0.c65))) DESC  NULLS LAST, CASE vt0.c1  WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c69)) ELSE (('1401748414')>(v0.c0)) END DESC  NULLS FIRST, (((((((((rt0.c2 IN (t0.c90)))AND((~ (vt0.c0)))))AND(CAST('' AS INTEGER))))AND((((t0.c90))!=((rt0.c0))))))AND(((v0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM v0, vt0, rt0, t0, vt1 WHERE (CAST(((t0.c69) IS FALSE) AS BLOB)) ORDER BY ((((rt0.c0)>>(t0.c90))) BETWEEN ((((0.05651230380735972))>((vt0.c0)))) AND (HEX(t0.c65))) DESC  NULLS LAST, CASE vt0.c1  WHEN ((vt0.c0) NOTNULL) THEN (NOT (t0.c69)) ELSE (('1401748414')>(v0.c0)) END DESC  NULLS FIRST, (((((((((rt0.c2 IN (t0.c90)))AND((~ (vt0.c0)))))AND(CAST('' AS INTEGER))))AND((((t0.c90))!=((rt0.c0))))))AND(((v0.c0) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((0.24374442420163955, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((0.24374442420163955, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((0.24374442420163955, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((0.24374442420163955, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((((0.24374442420163955, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)<<(rt0.c2)))));
SELECT ALL * FROM t0 WHERE ((((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)) IN (((t0.c69) BETWEEN ('1750222950') AND (t0.c90)))));
SELECT SUM(count) FROM (SELECT (((((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)) IN (((t0.c69) BETWEEN ('1750222950') AND (t0.c90))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)) IN (((t0.c69) BETWEEN ('1750222950') AND (t0.c90)))));
SELECT SUM(count) FROM (SELECT (((((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)) IN (((t0.c69) BETWEEN ('1750222950') AND (t0.c90))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)) IN (((t0.c69) BETWEEN ('1750222950') AND (t0.c90)))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)GLOB(v0.c0))) NOT NULL) WHERE (((CAST(vt1.c0 AS INTEGER))IS((+ (vt1.c0))))) ORDER BY ((((((NULL)AND(vt1.c0)))AND(vt0.c0))) IS TRUE) ASC, TYPEOF((((vt0.c0))<>((vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))IS((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)GLOB(v0.c0))) NOT NULL) ORDER BY ((((((NULL)AND(vt1.c0)))AND(vt0.c0))) IS TRUE) ASC, TYPEOF((((vt0.c0))<>((vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)GLOB(v0.c0))) NOT NULL) WHERE (((CAST(vt1.c0 AS INTEGER))IS((+ (vt1.c0))))) ORDER BY ((((((NULL)AND(vt1.c0)))AND(vt0.c0))) IS TRUE) ASC, TYPEOF((((vt0.c0))<>((vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))IS((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)GLOB(v0.c0))) NOT NULL) ORDER BY ((((((NULL)AND(vt1.c0)))AND(vt0.c0))) IS TRUE) ASC, TYPEOF((((vt0.c0))<>((vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)GLOB(v0.c0))) NOT NULL) WHERE (((CAST(vt1.c0 AS INTEGER))IS((+ (vt1.c0))))) ORDER BY ((((((NULL)AND(vt1.c0)))AND(vt0.c0))) IS TRUE) ASC, TYPEOF((((vt0.c0))<>((vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)OR(vt0.c1)))AND(t0.c90)))OR(t0.c65)))AND(t0.c65)) IN ()) WHERE (((~ (t0.c65)) IN (TYPEOF(t0.c65))));
SELECT SUM(count) FROM (SELECT ((((~ (t0.c65)) IN (TYPEOF(t0.c65)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)OR(vt0.c1)))AND(t0.c90)))OR(t0.c65)))AND(t0.c65)) IN ()));
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)OR(vt0.c1)))AND(t0.c90)))OR(t0.c65)))AND(t0.c65)) IN ()) WHERE (((~ (t0.c65)) IN (TYPEOF(t0.c65))));
SELECT SUM(count) FROM (SELECT ((((~ (t0.c65)) IN (TYPEOF(t0.c65)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)OR(vt0.c1)))AND(t0.c90)))OR(t0.c65)))AND(t0.c65)) IN ()));
SELECT ALL COUNT(*) FROM v0, t0 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)OR(vt0.c1)))AND(t0.c90)))OR(t0.c65)))AND(t0.c65)) IN ()) WHERE (((~ (t0.c65)) IN (TYPEOF(t0.c65))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON rt0.c2 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT)) ORDER BY ((rt0.c2 COLLATE BINARY)=((((t0.c90))>((t0.c65)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON rt0.c2 ORDER BY ((rt0.c2 COLLATE BINARY)==((((t0.c90))>((t0.c65)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON rt0.c2 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT)) ORDER BY ((rt0.c2 COLLATE BINARY)=((((t0.c90))>((t0.c65)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON rt0.c2 ORDER BY ((rt0.c2 COLLATE BINARY)==((((t0.c90))>((t0.c65)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON rt0.c2 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT)) ORDER BY ((rt0.c2 COLLATE BINARY)=((((t0.c90))>((t0.c65)))))  NULLS LAST;
SELECT ALL * FROM t0, rt0, v0 WHERE (((((CAST(t0.c90 AS REAL))AND(((rt0.c0)-(v0.c0)))))OR(((t0.c65)+(t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c90 AS REAL))AND(((rt0.c0)-(v0.c0)))))OR(((t0.c65)+(t0.c69))))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE (((((CAST(t0.c90 AS REAL))AND(((rt0.c0)-(v0.c0)))))OR(((t0.c65)+(t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c90 AS REAL))AND(((rt0.c0)-(v0.c0)))))OR(((t0.c65)+(t0.c69))))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL * FROM t0, rt0, v0 WHERE (((((CAST(t0.c90 AS REAL))AND(((rt0.c0)-(v0.c0)))))OR(((t0.c65)+(t0.c69)))));
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT x'6314') LEFT OUTER JOIN vt0 ON CAST(CAST(t0.c90 AS REAL) AS NUMERIC) LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE RTRIM)LIKE(CASE t0.c90  WHEN v0.c0 THEN rt0.c2 END)) WHERE ((((NOT (vt0.c1))) NOT BETWEEN (RTRIM(t0.c65)) AND (LOWER(vt1.c0)))) ORDER BY (((rt0.c0 IN ()))IS NOT(((t0.c90) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN (RTRIM(t0.c65)) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT x'6314') LEFT OUTER JOIN vt0 ON CAST(CAST(t0.c90 AS REAL) AS NUMERIC) LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE RTRIM)LIKE(CASE t0.c90  WHEN v0.c0 THEN rt0.c2 END)) ORDER BY (((rt0.c0 IN ()))IS NOT(((t0.c90) ISNULL)))  NULLS LAST);
SELECT ALL * FROM v0, rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT x'6314') LEFT OUTER JOIN vt0 ON CAST(CAST(t0.c90 AS REAL) AS NUMERIC) LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE RTRIM)LIKE(CASE t0.c90  WHEN v0.c0 THEN rt0.c2 END)) WHERE ((((NOT (vt0.c1))) NOT BETWEEN (RTRIM(t0.c65)) AND (LOWER(vt1.c0)))) ORDER BY (((rt0.c0 IN ()))IS NOT(((t0.c90) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN (RTRIM(t0.c65)) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON ABS(DISTINCT x'6314') LEFT OUTER JOIN vt0 ON CAST(CAST(t0.c90 AS REAL) AS NUMERIC) LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE RTRIM)LIKE(CASE t0.c90  WHEN v0.c0 THEN rt0.c2 END)) ORDER BY (((rt0.c0 IN ()))IS NOT(((t0.c90) ISNULL)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c0))<=((rt0.c2)))))=((LOWER(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0))<=((rt0.c2)))))==((LOWER(x''))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0))<=((rt0.c2)))))=((LOWER(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0))<=((rt0.c2)))))==((LOWER(x''))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0))<=((rt0.c2)))))=((LOWER(x'')))));
SELECT ALL * FROM vt0, vt1, rt0, t0 CROSS JOIN v0 ON (rt0.c0 IN ()) WHERE (CAST((vt1.c0 IN (t0.c65, vt0.c0)) AS REAL)) ORDER BY CAST(((vt0.c0)|(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (t0.c65, vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0, t0 CROSS JOIN v0 ON (rt0.c0 IN ()) ORDER BY CAST(((vt0.c0)|(vt0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM vt0, vt1, rt0, t0 CROSS JOIN v0 ON (rt0.c0 IN ()) WHERE (CAST((vt1.c0 IN (t0.c65, vt0.c0)) AS REAL)) ORDER BY CAST(((vt0.c0)|(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (t0.c65, vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0, t0 CROSS JOIN v0 ON (rt0.c0 IN ()) ORDER BY CAST(((vt0.c0)|(vt0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM vt0, vt1, rt0, t0 CROSS JOIN v0 ON (rt0.c0 IN ()) WHERE (CAST((vt1.c0 IN (t0.c65, vt0.c0)) AS REAL)) ORDER BY CAST(((vt0.c0)|(vt0.c0)) AS INTEGER) DESC;
SELECT ALL * FROM vt0, t0, vt1 INNER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(((t0.c69)==(vt0.c1)))) LEFT OUTER JOIN v0 ON 0.15697499353813338 WHERE (((((~ (rt0.c0)), vt0.c0 COLLATE BINARY, ((((vt0.c1)AND(t0.c69)))OR(v0.c0)), ((t0.c65)+(vt0.c0)), v0.c0))>=((vt0.c0, vt1.c0, vt1.c0 COLLATE RTRIM, (('zE') BETWEEN (vt0.c0) AND (t0.c69)), ((rt0.c2)>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c0)), vt0.c0 COLLATE BINARY, ((((vt0.c1)AND(t0.c69)))OR(v0.c0)), ((t0.c65)+(vt0.c0)), v0.c0))>=((vt0.c0, vt1.c0, vt1.c0 COLLATE RTRIM, (('zE') BETWEEN (vt0.c0) AND (t0.c69)), ((rt0.c2)>(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1 INNER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(((t0.c69)=(vt0.c1)))) LEFT OUTER JOIN v0 ON 0.15697499353813338);
SELECT ALL * FROM vt0, t0, vt1 INNER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(((t0.c69)==(vt0.c1)))) LEFT OUTER JOIN v0 ON 0.15697499353813338 WHERE (((((~ (rt0.c0)), vt0.c0 COLLATE BINARY, ((((vt0.c1)AND(t0.c69)))OR(v0.c0)), ((t0.c65)+(vt0.c0)), v0.c0))>=((vt0.c0, vt1.c0, vt1.c0 COLLATE RTRIM, (('zE') BETWEEN (vt0.c0) AND (t0.c69)), ((rt0.c2)>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c0)), vt0.c0 COLLATE BINARY, ((((vt0.c1)AND(t0.c69)))OR(v0.c0)), ((t0.c65)+(vt0.c0)), v0.c0))>=((vt0.c0, vt1.c0, vt1.c0 COLLATE RTRIM, (('zE') BETWEEN (vt0.c0) AND (t0.c69)), ((rt0.c2)>(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1 INNER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(((t0.c69)=(vt0.c1)))) LEFT OUTER JOIN v0 ON 0.15697499353813338);
SELECT ALL * FROM vt0, t0, vt1 INNER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(((t0.c69)==(vt0.c1)))) LEFT OUTER JOIN v0 ON 0.15697499353813338 WHERE (((((~ (rt0.c0)), vt0.c0 COLLATE BINARY, ((((vt0.c1)AND(t0.c69)))OR(v0.c0)), ((t0.c65)+(vt0.c0)), v0.c0))>=((vt0.c0, vt1.c0, vt1.c0 COLLATE RTRIM, (('zE') BETWEEN (vt0.c0) AND (t0.c69)), ((rt0.c2)>(vt0.c0))))));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON NULLIF(CASE 1494714200  WHEN '|p' THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CASE t0.c69  WHEN vt0.c0 THEN t0.c65 WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN t0.c69 END) RIGHT OUTER JOIN rt0 ON (t0.c65 COLLATE RTRIM IN ()) FULL OUTER JOIN v0 ON vt0.c1 WHERE (t0.c69);
SELECT SUM(count) FROM (SELECT ((t0.c69) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON NULLIF(CASE 1494714200  WHEN '|p' THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CASE t0.c69  WHEN vt0.c0 THEN t0.c65 WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN t0.c69 END) RIGHT OUTER JOIN rt0 ON (t0.c65 COLLATE RTRIM IN ()) FULL OUTER JOIN v0 ON vt0.c1);
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON NULLIF(CASE 1494714200  WHEN '|p' THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CASE t0.c69  WHEN vt0.c0 THEN t0.c65 WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN t0.c69 END) RIGHT OUTER JOIN rt0 ON (t0.c65 COLLATE RTRIM IN ()) FULL OUTER JOIN v0 ON vt0.c1 WHERE (t0.c69);
SELECT SUM(count) FROM (SELECT ((t0.c69) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON NULLIF(CASE 1494714200  WHEN '|p' THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CASE t0.c69  WHEN vt0.c0 THEN t0.c65 WHEN x'' THEN vt0.c1 WHEN rt0.c0 THEN t0.c69 END) RIGHT OUTER JOIN rt0 ON (t0.c65 COLLATE RTRIM IN ()) FULL OUTER JOIN v0 ON vt0.c1);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))AND(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (1785654415)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS NUMERIC))AND(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (1785654415))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))AND(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (1785654415)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS NUMERIC))AND(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (1785654415))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))AND(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (1785654415)))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((v0.c0, v0.c0, 0.481504863053251, v0.c0, vt1.c0)) BETWEEN ((vt1.c0, NULL, v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, vt1.c0)))) IS FALSE)) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, 0.481504863053251, v0.c0, vt1.c0)) BETWEEN ((vt1.c0, NULL, v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((v0.c0, v0.c0, 0.481504863053251, v0.c0, vt1.c0)) BETWEEN ((vt1.c0, NULL, v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, vt1.c0)))) IS FALSE)) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, 0.481504863053251, v0.c0, vt1.c0)) BETWEEN ((vt1.c0, NULL, v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((v0.c0, v0.c0, 0.481504863053251, v0.c0, vt1.c0)) BETWEEN ((vt1.c0, NULL, v0.c0, vt1.c0, vt1.c0)) AND ((v0.c0, v0.c0, x'', v0.c0, vt1.c0)))) IS FALSE)) ORDER BY vt1.c0 COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM v0, rt0, vt1, vt0 WHERE ((((((rt0.c1))=((rt0.c0))))IS(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (rt0.c1)) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))==((rt0.c0))))IS(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0 ORDER BY (- (rt0.c1)) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM v0, rt0, vt1, vt0 WHERE ((((((rt0.c1))=((rt0.c0))))IS(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (rt0.c1)) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))==((rt0.c0))))IS(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0 ORDER BY (- (rt0.c1)) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM v0, rt0, vt1, vt0 WHERE ((((((rt0.c1))=((rt0.c0))))IS(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (rt0.c1)) COLLATE NOCASE COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i1, v0 WHERE (JULIANDAY(rt0.c2, NULL, (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(rt0.c2, NULL, (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i1, v0);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i1, v0 WHERE (JULIANDAY(rt0.c2, NULL, (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(rt0.c2, NULL, (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM rt0 INDEXED BY i1, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0, v0 WHERE (CASE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN '' WHEN IFNULL(DISTINCT t0.c65, rt0.c0) THEN CASE vt0.c0  WHEN t0.c65 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((((((vt0.c1 COLLATE NOCASE)AND((+ (t0.c69)))))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0)))))AND((vt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN '' WHEN IFNULL(DISTINCT t0.c65, rt0.c0) THEN CASE vt0.c0  WHEN t0.c65 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM rt0, vt0, vt1 NOT INDEXED, t0, v0 ORDER BY ((((((((vt0.c1 COLLATE NOCASE)AND((+ (t0.c69)))))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0)))))AND((vt0.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0, v0 WHERE (CASE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN '' WHEN IFNULL(DISTINCT t0.c65, rt0.c0) THEN CASE vt0.c0  WHEN t0.c65 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY ((((((((vt0.c1 COLLATE NOCASE)AND((+ (t0.c69)))))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0)))))AND((vt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))  WHEN ((rt0.c2)>=(rt0.c0)) THEN rt0.c2 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN '' WHEN IFNULL(DISTINCT t0.c65, rt0.c0) THEN CASE vt0.c0  WHEN t0.c65 THEN rt0.c1 ELSE vt0.c0 END ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM rt0, vt0, vt1 NOT INDEXED, t0, v0 ORDER BY ((((((((vt0.c1 COLLATE NOCASE)AND((+ (t0.c69)))))OR(vt0.c0 COLLATE NOCASE)))AND((+ (vt0.c0)))))AND((vt0.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((t0.c90) BETWEEN (t0.c90) AND (t0.c65)) COLLATE BINARY) ORDER BY ((((t0.c69) BETWEEN (t0.c90) AND (vt0.c1))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)LIKE(t0.c65)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c90) BETWEEN (t0.c90) AND (t0.c65)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY ((((t0.c69) BETWEEN (t0.c90) AND (vt0.c1))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)LIKE(t0.c65)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((t0.c90) BETWEEN (t0.c90) AND (t0.c65)) COLLATE BINARY) ORDER BY ((((t0.c69) BETWEEN (t0.c90) AND (vt0.c1))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)LIKE(t0.c65)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c90) BETWEEN (t0.c90) AND (t0.c65)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0, rt0 ORDER BY ((((t0.c69) BETWEEN (t0.c90) AND (vt0.c1))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)LIKE(t0.c65)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, t0, rt0 WHERE (((t0.c90) BETWEEN (t0.c90) AND (t0.c65)) COLLATE BINARY) ORDER BY ((((t0.c69) BETWEEN (t0.c90) AND (vt0.c1))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)LIKE(t0.c65)))) ASC;
SELECT COUNT(*) FROM t0, vt0, vt1, rt0, v0 WHERE (((('')) BETWEEN (((((t0.c69, 0X5803425f, vt0.c1))>((rt0.c0, vt1.c0, x''))))) AND ((((t0.c65)%(rt0.c1)))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN (((((t0.c69, 0X5803425f, vt0.c1))>((rt0.c0, vt1.c0, x''))))) AND ((((t0.c65)%(rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1, rt0, v0 WHERE (((('')) BETWEEN (((((t0.c69, 0X5803425f, vt0.c1))>((rt0.c0, vt1.c0, x''))))) AND ((((t0.c65)%(rt0.c1)))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN (((((t0.c69, 0X5803425f, vt0.c1))>((rt0.c0, vt1.c0, x''))))) AND ((((t0.c65)%(rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1, rt0, v0 WHERE (((('')) BETWEEN (((((t0.c69, 0X5803425f, vt0.c1))>((rt0.c0, vt1.c0, x''))))) AND ((((t0.c65)%(rt0.c1)))))) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt1, t0, v0 WHERE ((((vt1.c0, t0.c69, vt1.c0, v0.c0, v0.c0))!=((t0.c69, t0.c65, t0.c90, t0.c65, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c69, vt1.c0, v0.c0, v0.c0))<>((t0.c69, t0.c65, t0.c90, t0.c65, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, v0 NOT INDEXED);
SELECT * FROM vt1, t0, v0 WHERE ((((vt1.c0, t0.c69, vt1.c0, v0.c0, v0.c0))!=((t0.c69, t0.c65, t0.c90, t0.c65, v0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, t0.c69, vt1.c0, v0.c0, v0.c0))<>((t0.c69, t0.c65, t0.c90, t0.c65, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, v0 NOT INDEXED);
SELECT * FROM vt1, t0, v0 WHERE ((((vt1.c0, t0.c69, vt1.c0, v0.c0, v0.c0))!=((t0.c69, t0.c65, t0.c90, t0.c65, v0.c0))) COLLATE NOCASE);
SELECT * FROM t0, vt0, rt0, vt1 WHERE ((((t0.c69, rt0.c2, t0.c90)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c69), (NOT (rt0.c1)), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((LIKE(vt0.c1, rt0.c2, '9'), rt0.c2 COLLATE BINARY, (+ ('-785063055'))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69, rt0.c2, t0.c90)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c69), (NOT (rt0.c1)), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((LIKE(vt0.c1, rt0.c2, '9'), rt0.c2 COLLATE BINARY, (+ ('-785063055')))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT * FROM t0, vt0, rt0, vt1 WHERE ((((t0.c69, rt0.c2, t0.c90)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c69), (NOT (rt0.c1)), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((LIKE(vt0.c1, rt0.c2, '9'), rt0.c2 COLLATE BINARY, (+ ('-785063055'))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69, rt0.c2, t0.c90)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c69), (NOT (rt0.c1)), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((LIKE(vt0.c1, rt0.c2, '9'), rt0.c2 COLLATE BINARY, (+ ('-785063055')))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT * FROM t0, vt0, rt0, vt1 WHERE ((((t0.c69, rt0.c2, t0.c90)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c69), (NOT (rt0.c1)), CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) AND ((LIKE(vt0.c1, rt0.c2, '9'), rt0.c2 COLLATE BINARY, (+ ('-785063055'))))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON DATE((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, CASE rt0.c2  WHEN '' THEN vt1.c0 WHEN 0.843697995617449 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE -519857278 END) WHERE (CASE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c1))  WHEN 0.08535804238806266 THEN NULL WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((((0.5171549407107967)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((((((rt0.c2)AND((((rt0.c1))>=((vt1.c0))))))AND(((vt1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND(((rt0.c1)<=(0.6656870144205369))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c1))  WHEN 0.08535804238806266 THEN NULL WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((((0.5171549407107967)OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON DATE((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, CASE rt0.c2  WHEN '' THEN vt1.c0 WHEN 0.843697995617449 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE -519857278 END) ORDER BY ((((((((rt0.c2)AND((((rt0.c1))>=((vt1.c0))))))AND(((vt1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND(((rt0.c1)<=(0.6656870144205369))))  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON DATE((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, CASE rt0.c2  WHEN '' THEN vt1.c0 WHEN 0.843697995617449 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE -519857278 END) WHERE (CASE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c1))  WHEN 0.08535804238806266 THEN NULL WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((((0.5171549407107967)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((((((rt0.c2)AND((((rt0.c1))>=((vt1.c0))))))AND(((vt1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND(((rt0.c1)<=(0.6656870144205369))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c1))  WHEN 0.08535804238806266 THEN NULL WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((((0.5171549407107967)OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON DATE((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, CASE rt0.c2  WHEN '' THEN vt1.c0 WHEN 0.843697995617449 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE -519857278 END) ORDER BY ((((((((rt0.c2)AND((((rt0.c1))>=((vt1.c0))))))AND(((vt1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND(((rt0.c1)<=(0.6656870144205369))))  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON DATE((~ (rt0.c2)), rt0.c0 COLLATE NOCASE, CASE rt0.c2  WHEN '' THEN vt1.c0 WHEN 0.843697995617449 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE -519857278 END) WHERE (CASE ((((vt1.c0)OR(rt0.c2)))OR(rt0.c1))  WHEN 0.08535804238806266 THEN NULL WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((((0.5171549407107967)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((((((rt0.c2)AND((((rt0.c1))>=((vt1.c0))))))AND(((vt1.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND(((rt0.c1)<=(0.6656870144205369))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0, t0, vt1);
SELECT ALL COUNT(*) FROM v0, t0, vt1 WHERE ('');
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.7176619896259617 RIGHT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN vt1 ON ((((v0.c0)+(t0.c69)))>>(((vt1.c0) IS TRUE))) FULL OUTER JOIN v0 ON CASE WHEN t0.c65 COLLATE RTRIM THEN (rt0.c0 IN (vt0.c0)) END WHERE (t0.c65) ORDER BY t0.c90 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c65) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.7176619896259617 RIGHT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN vt1 ON ((((v0.c0)+(t0.c69)))>>(((vt1.c0) IS TRUE))) FULL OUTER JOIN v0 ON CASE WHEN t0.c65 COLLATE RTRIM THEN (rt0.c0 IN (vt0.c0)) END ORDER BY t0.c90 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.7176619896259617 RIGHT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN vt1 ON ((((v0.c0)+(t0.c69)))>>(((vt1.c0) IS TRUE))) FULL OUTER JOIN v0 ON CASE WHEN t0.c65 COLLATE RTRIM THEN (rt0.c0 IN (vt0.c0)) END WHERE (t0.c65) ORDER BY t0.c90 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c65) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.7176619896259617 RIGHT OUTER JOIN rt0 ON v0.c0 FULL OUTER JOIN vt1 ON ((((v0.c0)+(t0.c69)))>>(((vt1.c0) IS TRUE))) FULL OUTER JOIN v0 ON CASE WHEN t0.c65 COLLATE RTRIM THEN (rt0.c0 IN (vt0.c0)) END ORDER BY t0.c90 ASC  NULLS LAST);
SELECT * FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON CAST('-1029115356' AS INTEGER) INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))>=(CASE WHEN rt0.c0 THEN t0.c90 END)) WHERE ((t0.c69 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c69 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON CAST('-1029115356' AS INTEGER) INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))>=(CASE WHEN rt0.c0 THEN t0.c90 END)));
SELECT * FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON CAST('-1029115356' AS INTEGER) INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))>=(CASE WHEN rt0.c0 THEN t0.c90 END)) WHERE ((t0.c69 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c69 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON CAST('-1029115356' AS INTEGER) INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))>=(CASE WHEN rt0.c0 THEN t0.c90 END)));
SELECT * FROM t0, vt1, v0 RIGHT OUTER JOIN rt0 ON CAST('-1029115356' AS INTEGER) INNER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))>=(CASE WHEN rt0.c0 THEN t0.c90 END)) WHERE ((t0.c69 COLLATE NOCASE IN ()));
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)GLOB(vt0.c1)))))OR(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)GLOB(vt0.c1)))))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)GLOB(vt0.c1)))))OR(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)GLOB(vt0.c1)))))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)GLOB(vt0.c1)))))OR(LOWER(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c90)AND(t0.c90)))AND(t0.c69))) IS FALSE)) ORDER BY (((((t0.c69, t0.c65, NULL))<((t0.c65, t0.c90, t0.c65)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c90)AND(t0.c90)))AND(t0.c69))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69, t0.c65, NULL))<((t0.c65, t0.c90, t0.c65)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c90)AND(t0.c90)))AND(t0.c69))) IS FALSE)) ORDER BY (((((t0.c69, t0.c65, NULL))<((t0.c65, t0.c90, t0.c65)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c90)AND(t0.c90)))AND(t0.c69))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69, t0.c65, NULL))<((t0.c65, t0.c90, t0.c65)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c90)AND(t0.c90)))AND(t0.c69))) IS FALSE)) ORDER BY (((((t0.c69, t0.c65, NULL))<((t0.c65, t0.c90, t0.c65)))) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL) DESC);
SELECT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS REAL) DESC);
SELECT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS REAL) DESC;
SELECT * FROM v0, t0 WHERE (((t0.c90)+(t0.c65)) COLLATE NOCASE) ORDER BY CASE (+ (t0.c65))  WHEN CAST(t0.c69 AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c90) WHEN (((t0.c69)) BETWEEN (('R7')) AND ((t0.c65))) THEN ((((NULL)OR(t0.c65)))AND(t0.c69)) WHEN x'' THEN ((v0.c0) IS FALSE) END DESC, ((CAST(v0.c0 AS NUMERIC))>>(t0.c65));
SELECT SUM(count) FROM (SELECT ((((t0.c90)+(t0.c65)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (+ (t0.c65))  WHEN CAST(t0.c69 AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c90) WHEN (((t0.c69)) BETWEEN (('R7')) AND ((t0.c65))) THEN ((((NULL)OR(t0.c65)))AND(t0.c69)) WHEN x'' THEN ((v0.c0) IS FALSE) END DESC, ((CAST(v0.c0 AS NUMERIC))>>(t0.c65)));
SELECT * FROM v0, t0 WHERE (((t0.c90)+(t0.c65)) COLLATE NOCASE) ORDER BY CASE (+ (t0.c65))  WHEN CAST(t0.c69 AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c90) WHEN (((t0.c69)) BETWEEN (('R7')) AND ((t0.c65))) THEN ((((NULL)OR(t0.c65)))AND(t0.c69)) WHEN x'' THEN ((v0.c0) IS FALSE) END DESC, ((CAST(v0.c0 AS NUMERIC))>>(t0.c65));
SELECT SUM(count) FROM (SELECT ((((t0.c90)+(t0.c65)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (+ (t0.c65))  WHEN CAST(t0.c69 AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c90) WHEN (((t0.c69)) BETWEEN (('R7')) AND ((t0.c65))) THEN ((((NULL)OR(t0.c65)))AND(t0.c69)) WHEN x'' THEN ((v0.c0) IS FALSE) END DESC, ((CAST(v0.c0 AS NUMERIC))>>(t0.c65)));
SELECT * FROM v0, t0 WHERE (((t0.c90)+(t0.c65)) COLLATE NOCASE) ORDER BY CASE (+ (t0.c65))  WHEN CAST(t0.c69 AS INTEGER) THEN SQLITE_COMPILEOPTION_GET(t0.c90) WHEN (((t0.c69)) BETWEEN (('R7')) AND ((t0.c65))) THEN ((((NULL)OR(t0.c65)))AND(t0.c69)) WHEN x'' THEN ((v0.c0) IS FALSE) END DESC, ((CAST(v0.c0 AS NUMERIC))>>(t0.c65));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((((((((((((((('-681790800')OR(t0.c69)))OR(vt0.c0)))OR(v0.c0)))OR(t0.c65)))AND(vt0.c0)))OR(''))))<((JULIANDAY(t0.c65, t0.c69, t0.c65, t0.c90, vt0.c1)))) LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((((((vt0.c1)OR(t0.c90)))AND(v0.c0))) IS TRUE) WHERE (t0.c65);
SELECT SUM(count) FROM (SELECT ((t0.c65) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((((((((((((('-681790800')OR(t0.c69)))OR(vt0.c0)))OR(v0.c0)))OR(t0.c65)))AND(vt0.c0)))OR(''))))<((JULIANDAY(t0.c65, t0.c69, t0.c65, t0.c90, vt0.c1)))) LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((((((vt0.c1)OR(t0.c90)))AND(v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((((((((((((((('-681790800')OR(t0.c69)))OR(vt0.c0)))OR(v0.c0)))OR(t0.c65)))AND(vt0.c0)))OR(''))))<((JULIANDAY(t0.c65, t0.c69, t0.c65, t0.c90, vt0.c1)))) LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((((((vt0.c1)OR(t0.c90)))AND(v0.c0))) IS TRUE) WHERE (t0.c65);
SELECT SUM(count) FROM (SELECT ((t0.c65) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((((((((((((('-681790800')OR(t0.c69)))OR(vt0.c0)))OR(v0.c0)))OR(t0.c65)))AND(vt0.c0)))OR(''))))<((JULIANDAY(t0.c65, t0.c69, t0.c65, t0.c90, vt0.c1)))) LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((((((vt0.c1)OR(t0.c90)))AND(v0.c0))) IS TRUE));
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN t0.c90 WHEN t0.c90 THEN vt1.c0 ELSE rt0.c2 END AS REAL)) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN t0.c90 WHEN t0.c90 THEN vt1.c0 ELSE rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN t0.c90 WHEN t0.c90 THEN vt1.c0 ELSE rt0.c2 END AS REAL)) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN t0.c90 WHEN t0.c90 THEN vt1.c0 ELSE rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN t0.c90 WHEN t0.c90 THEN vt1.c0 ELSE rt0.c2 END AS REAL)) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((COALESCE(-552948484, rt0.c2, rt0.c1, rt0.c2))))) ORDER BY CASE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))  WHEN x'' THEN (0.7557628780293998 IN ()) WHEN HEX(DISTINCT x'') THEN rt0.c1 WHEN CAST(x'3c61' AS INTEGER) THEN rt0.c2 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((COALESCE(-552948484, rt0.c2, rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))  WHEN x'' THEN (0.7557628780293998 IN ()) WHEN HEX(DISTINCT x'') THEN rt0.c1 WHEN CAST(x'3c61' AS INTEGER) THEN rt0.c2 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((COALESCE(-552948484, rt0.c2, rt0.c1, rt0.c2))))) ORDER BY CASE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))  WHEN x'' THEN (0.7557628780293998 IN ()) WHEN HEX(DISTINCT x'') THEN rt0.c1 WHEN CAST(x'3c61' AS INTEGER) THEN rt0.c2 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((COALESCE(-552948484, rt0.c2, rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))  WHEN x'' THEN (0.7557628780293998 IN ()) WHEN HEX(DISTINCT x'') THEN rt0.c1 WHEN CAST(x'3c61' AS INTEGER) THEN rt0.c2 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((COALESCE(-552948484, rt0.c2, rt0.c1, rt0.c2))))) ORDER BY CASE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))  WHEN x'' THEN (0.7557628780293998 IN ()) WHEN HEX(DISTINCT x'') THEN rt0.c1 WHEN CAST(x'3c61' AS INTEGER) THEN rt0.c2 COLLATE RTRIM ELSE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) END DESC;
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((t0.c65 IN (t0.c69)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c65 IN (t0.c69)) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((t0.c65 IN (t0.c69)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c65 IN (t0.c69)) AS REAL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((t0.c65 IN (t0.c69)) AS REAL));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((v0.c0, rt0.c1, vt0.c0))<=((vt0.c0, rt0.c1, vt0.c1))))GLOB(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt0.c1, vt0.c0))<=((vt0.c0, rt0.c1, vt0.c1))))GLOB(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((v0.c0, rt0.c1, vt0.c0))<=((vt0.c0, rt0.c1, vt0.c1))))GLOB(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, rt0.c1, vt0.c0))<=((vt0.c0, rt0.c1, vt0.c1))))GLOB(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((v0.c0, rt0.c1, vt0.c0))<=((vt0.c0, rt0.c1, vt0.c1))))GLOB(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))));
SELECT * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c2, rt0.c0, rt0.c2))<>((rt0.c1, rt0.c2, rt0.c1))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0)))))AND(NULL))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c2, rt0.c0, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c1))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0)))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c2, rt0.c0, rt0.c2))<>((rt0.c1, rt0.c2, rt0.c1))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0)))))AND(NULL))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c2, rt0.c0, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c1))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0)))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)AND((((rt0.c2, rt0.c0, rt0.c2))<>((rt0.c1, rt0.c2, rt0.c1))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c0)))))AND(NULL))) ORDER BY rt0.c1 ASC;
SELECT COUNT(*) FROM vt0, rt0, t0, vt1, v0 WHERE (t0.c65);
SELECT SUM(count) FROM (SELECT ALL ((t0.c65) IS TRUE)  as count FROM vt0, rt0, t0, vt1, v0);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1, v0 WHERE (t0.c65);
SELECT SUM(count) FROM (SELECT ALL ((t0.c65) IS TRUE)  as count FROM vt0, rt0, t0, vt1, v0);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1, v0 WHERE (t0.c65);
SELECT * FROM v0, vt0 NOT INDEXED INNER JOIN t0 ON x'a8b66881' CROSS JOIN vt1 ON NULL FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c69)))>('1807422197')) WHERE (((((((((UPPER(t0.c90))OR((((rt0.c0, rt0.c2, t0.c69)) BETWEEN ((rt0.c1, t0.c69, vt1.c0)) AND ((t0.c90, vt0.c1, t0.c90))))))AND((- (t0.c90)))))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN x'' WHEN t0.c65 THEN rt0.c0 END)))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(t0.c90))OR((((rt0.c0, rt0.c2, t0.c69)) BETWEEN ((rt0.c1, t0.c69, vt1.c0)) AND ((t0.c90, vt0.c1, t0.c90))))))AND((- (t0.c90)))))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN x'' WHEN t0.c65 THEN rt0.c0 END)))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON x'a8b66881' CROSS JOIN vt1 ON NULL FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c69)))>('1807422197')));
SELECT * FROM v0, vt0 NOT INDEXED INNER JOIN t0 ON x'a8b66881' CROSS JOIN vt1 ON NULL FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c69)))>('1807422197')) WHERE (((((((((UPPER(t0.c90))OR((((rt0.c0, rt0.c2, t0.c69)) BETWEEN ((rt0.c1, t0.c69, vt1.c0)) AND ((t0.c90, vt0.c1, t0.c90))))))AND((- (t0.c90)))))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN x'' WHEN t0.c65 THEN rt0.c0 END)))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(t0.c90))OR((((rt0.c0, rt0.c2, t0.c69)) BETWEEN ((rt0.c1, t0.c69, vt1.c0)) AND ((t0.c90, vt0.c1, t0.c90))))))AND((- (t0.c90)))))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN x'' WHEN t0.c65 THEN rt0.c0 END)))OR((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON x'a8b66881' CROSS JOIN vt1 ON NULL FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c69)))>('1807422197')));
SELECT * FROM v0, vt0 NOT INDEXED INNER JOIN t0 ON x'a8b66881' CROSS JOIN vt1 ON NULL FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c69)))>('1807422197')) WHERE (((((((((UPPER(t0.c90))OR((((rt0.c0, rt0.c2, t0.c69)) BETWEEN ((rt0.c1, t0.c69, vt1.c0)) AND ((t0.c90, vt0.c1, t0.c90))))))AND((- (t0.c90)))))OR(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN x'' WHEN t0.c65 THEN rt0.c0 END)))OR((v0.c0 IN ()))));
SELECT * FROM vt1, t0, vt0, v0, rt0 WHERE (((t0.c90)<(((vt0.c0)LIKE(vt0.c0))))) ORDER BY 'i~' DESC  NULLS LAST, ((((((rt0.c2)OR(v0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c90)<(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, v0, rt0 ORDER BY 'i~' DESC  NULLS LAST, ((((((rt0.c2)OR(v0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1, t0, vt0, v0, rt0 WHERE (((t0.c90)<(((vt0.c0)LIKE(vt0.c0))))) ORDER BY 'i~' DESC  NULLS LAST, ((((((rt0.c2)OR(v0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c90)<(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, v0, rt0 ORDER BY 'i~' DESC  NULLS LAST, ((((((rt0.c2)OR(v0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1, t0, vt0, v0, rt0 WHERE (((t0.c90)<(((vt0.c0)LIKE(vt0.c0))))) ORDER BY 'i~' DESC  NULLS LAST, ((((((rt0.c2)OR(v0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((-1042830798)>=(('' IN ()))) WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(((vt0.c0)LIKE(0.4995000877156297)))))AND(((((((((1.241137592E9)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((6.95768879E8, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt1.c0)))AND(((vt0.c0)LIKE(0.4995000877156297)))))AND(((((((((1.241137592E9)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((6.95768879E8, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((-1042830798)>=(('' IN ()))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((-1042830798)>=(('' IN ()))) WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(((vt0.c0)LIKE(0.4995000877156297)))))AND(((((((((1.241137592E9)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((6.95768879E8, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt1.c0)))AND(((vt0.c0)LIKE(0.4995000877156297)))))AND(((((((((1.241137592E9)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((6.95768879E8, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((-1042830798)>=(('' IN ()))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((-1042830798)>=(('' IN ()))) WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(((vt0.c0)LIKE(0.4995000877156297)))))AND(((((((((1.241137592E9)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((6.95768879E8, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM t0 WHERE ((((IFNULL(DISTINCT t0.c90, t0.c69)))<=((((t0.c65)%(t0.c90)))))) ORDER BY (((+ (x''))) NOT BETWEEN (((t0.c65)AND(t0.c90))) AND (t0.c69));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT t0.c90, t0.c69)))<=((((t0.c65)%(t0.c90)))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (x''))) NOT BETWEEN (((t0.c65)AND(t0.c90))) AND (t0.c69)));
SELECT ALL * FROM t0 WHERE ((((IFNULL(DISTINCT t0.c90, t0.c69)))<=((((t0.c65)%(t0.c90)))))) ORDER BY (((+ (x''))) NOT BETWEEN (((t0.c65)AND(t0.c90))) AND (t0.c69));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT t0.c90, t0.c69)))<=((((t0.c65)%(t0.c90)))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (x''))) NOT BETWEEN (((t0.c65)AND(t0.c90))) AND (t0.c69)));
SELECT ALL * FROM t0 WHERE ((((IFNULL(DISTINCT t0.c90, t0.c69)))<=((((t0.c65)%(t0.c90)))))) ORDER BY (((+ (x''))) NOT BETWEEN (((t0.c65)AND(t0.c90))) AND (t0.c69));
SELECT ALL COUNT(*) FROM vt0, rt0, v0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, vt1 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 END);
SELECT * FROM t0, vt0, v0, rt0 WHERE (NULL COLLATE BINARY) ORDER BY ((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY ((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0, v0, rt0 WHERE (NULL COLLATE BINARY) ORDER BY ((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, v0, rt0 ORDER BY ((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0, v0, rt0 WHERE (NULL COLLATE BINARY) ORDER BY ((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON ((t0.c90) NOT BETWEEN ((~ (rt0.c1))) AND (((t0.c90) NOTNULL))) WHERE ((+ (x''))) ORDER BY ((((rt0.c1) BETWEEN (t0.c90) AND (rt0.c0))) NOT BETWEEN ((((0Xffffffffad9962cb)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (x''));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt1 ON ((t0.c90) NOT BETWEEN ((~ (rt0.c1))) AND (((t0.c90) NOTNULL))) ORDER BY ((((rt0.c1) BETWEEN (t0.c90) AND (rt0.c0))) NOT BETWEEN ((((0xffffffffad9962cb)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (x'')));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON ((t0.c90) NOT BETWEEN ((~ (rt0.c1))) AND (((t0.c90) NOTNULL))) WHERE ((+ (x''))) ORDER BY ((((rt0.c1) BETWEEN (t0.c90) AND (rt0.c0))) NOT BETWEEN ((((0Xffffffffad9962cb)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (x''));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt1 ON ((t0.c90) NOT BETWEEN ((~ (rt0.c1))) AND (((t0.c90) NOTNULL))) ORDER BY ((((rt0.c1) BETWEEN (t0.c90) AND (rt0.c0))) NOT BETWEEN ((((0xffffffffad9962cb)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (x'')));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON ((t0.c90) NOT BETWEEN ((~ (rt0.c1))) AND (((t0.c90) NOTNULL))) WHERE ((+ (x''))) ORDER BY ((((rt0.c1) BETWEEN (t0.c90) AND (rt0.c0))) NOT BETWEEN ((((0Xffffffffad9962cb)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) AND (x''));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL)) NOTNULL));
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0, v0 WHERE ('408740221');
SELECT SUM(count) FROM (SELECT ALL (('408740221') IS TRUE)  as count FROM rt0, vt1, t0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0, v0 WHERE ('408740221');
SELECT SUM(count) FROM (SELECT ALL (('408740221') IS TRUE)  as count FROM rt0, vt1, t0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0, v0 WHERE ('408740221');
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)*(IFNULL(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)*(IFNULL(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)*(IFNULL(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)*(IFNULL(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)*(IFNULL(DISTINCT vt1.c0, vt1.c0))));
SELECT ALL * FROM t0, vt0, v0 WHERE ((~ (0.36738570121065484)));
SELECT SUM(count) FROM (SELECT (((~ (0.36738570121065484))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((~ (0.36738570121065484)));
SELECT SUM(count) FROM (SELECT (((~ (0.36738570121065484))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE ((~ (0.36738570121065484)));
SELECT * FROM vt1, t0, rt0 WHERE ((((CAST(t0.c90 AS NUMERIC)))==((HEX(DISTINCT vt1.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c65) AND (rt0.c2))) BETWEEN (rt0.c2) AND ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c90 AS NUMERIC)))==((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c65) AND (rt0.c2))) BETWEEN (rt0.c2) AND ((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0 WHERE ((((CAST(t0.c90 AS NUMERIC)))==((HEX(DISTINCT vt1.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c65) AND (rt0.c2))) BETWEEN (rt0.c2) AND ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c90 AS NUMERIC)))==((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c65) AND (rt0.c2))) BETWEEN (rt0.c2) AND ((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0 WHERE ((((CAST(t0.c90 AS NUMERIC)))==((HEX(DISTINCT vt1.c0))))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c65) AND (rt0.c2))) BETWEEN (rt0.c2) AND ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE ((CAST(t0.c90 AS TEXT) IN (((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c90 AS TEXT) IN (((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE ((CAST(t0.c90 AS TEXT) IN (((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c90 AS TEXT) IN (((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))))) IS TRUE)  as count FROM vt1, t0, v0);
SELECT ALL COUNT(*) FROM vt1, t0, v0 WHERE ((CAST(t0.c90 AS TEXT) IN (((v0.c0) NOT BETWEEN (t0.c90) AND (t0.c69)))));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON ((((PRINTF(rt0.c0))OR(((t0.c90)*(rt0.c0)))))AND(t0.c69 COLLATE RTRIM)) WHERE (((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c69))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c69))) IS TRUE)) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON ((((PRINTF(rt0.c0))OR(((t0.c90)*(rt0.c0)))))AND(t0.c69 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON ((((PRINTF(rt0.c0))OR(((t0.c90)*(rt0.c0)))))AND(t0.c69 COLLATE RTRIM)) WHERE (((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c69))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c69))) IS TRUE)) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON ((((PRINTF(rt0.c0))OR(((t0.c90)*(rt0.c0)))))AND(t0.c69 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0 INNER JOIN v0 ON ((((PRINTF(rt0.c0))OR(((t0.c90)*(rt0.c0)))))AND(t0.c69 COLLATE RTRIM)) WHERE (((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c69))) IS TRUE));
SELECT * FROM vt0 WHERE (-0.0) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((-0.0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE));
SELECT * FROM vt0 WHERE (-0.0) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((-0.0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE));
SELECT * FROM vt0 WHERE (-0.0) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) IS FALSE);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (x'') ORDER BY (NOT (((((((((rt0.c1)AND(t0.c65)))AND(t0.c69)))AND(t0.c69)))OR(rt0.c2)))), ((((t0.c69)*(v0.c0)))||(PRINTF(0.13263424735911555)))  NULLS LAST, ((x'')AND(((rt0.c2)OR(vt0.c1)))), TRIM(DATE(t0.c90, v0.c0, rt0.c2), ((rt0.c1) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY (NOT (((((((((rt0.c1)AND(t0.c65)))AND(t0.c69)))AND(t0.c69)))OR(rt0.c2)))), ((((t0.c69)*(v0.c0)))||(PRINTF(0.13263424735911555)))  NULLS LAST, ((x'')AND(((rt0.c2)OR(vt0.c1)))), TRIM(DATE(t0.c90, v0.c0, rt0.c2), ((rt0.c1) NOTNULL)) DESC);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (x'') ORDER BY (NOT (((((((((rt0.c1)AND(t0.c65)))AND(t0.c69)))AND(t0.c69)))OR(rt0.c2)))), ((((t0.c69)*(v0.c0)))||(PRINTF(0.13263424735911555)))  NULLS LAST, ((x'')AND(((rt0.c2)OR(vt0.c1)))), TRIM(DATE(t0.c90, v0.c0, rt0.c2), ((rt0.c1) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0, vt0, t0 ORDER BY (NOT (((((((((rt0.c1)AND(t0.c65)))AND(t0.c69)))AND(t0.c69)))OR(rt0.c2)))), ((((t0.c69)*(v0.c0)))||(PRINTF(0.13263424735911555)))  NULLS LAST, ((x'')AND(((rt0.c2)OR(vt0.c1)))), TRIM(DATE(t0.c90, v0.c0, rt0.c2), ((rt0.c1) NOTNULL)) DESC);
SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (x'') ORDER BY (NOT (((((((((rt0.c1)AND(t0.c65)))AND(t0.c69)))AND(t0.c69)))OR(rt0.c2)))), ((((t0.c69)*(v0.c0)))||(PRINTF(0.13263424735911555)))  NULLS LAST, ((x'')AND(((rt0.c2)OR(vt0.c1)))), TRIM(DATE(t0.c90, v0.c0, rt0.c2), ((rt0.c1) NOTNULL)) DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (+ ((2.50616722E8 IN ()))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c69)))|(TRIM(DISTINCT vt1.c0, vt0.c0))) LEFT OUTER JOIN t0 ON (((rt0.c2)%(rt0.c2)) IN ()) RIGHT OUTER JOIN vt1 ON (((t0.c69) NOT BETWEEN (t0.c69) AND (v0.c0)) IN ()) WHERE (vt0.c1) ORDER BY LOWER((~ (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (+ ((2.50616722E8 IN ()))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c69)))|(TRIM(DISTINCT vt1.c0, vt0.c0))) LEFT OUTER JOIN t0 ON (((rt0.c2)%(rt0.c2)) IN ()) RIGHT OUTER JOIN vt1 ON (((t0.c69) NOT BETWEEN (t0.c69) AND (v0.c0)) IN ()) ORDER BY LOWER((~ (rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (+ ((2.50616722E8 IN ()))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c69)))|(TRIM(DISTINCT vt1.c0, vt0.c0))) LEFT OUTER JOIN t0 ON (((rt0.c2)%(rt0.c2)) IN ()) RIGHT OUTER JOIN vt1 ON (((t0.c69) NOT BETWEEN (t0.c69) AND (v0.c0)) IN ()) WHERE (vt0.c1) ORDER BY LOWER((~ (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (+ ((2.50616722E8 IN ()))) INNER JOIN rt0 ON ((((vt0.c0)LIKE(t0.c69)))|(TRIM(DISTINCT vt1.c0, vt0.c0))) LEFT OUTER JOIN t0 ON (((rt0.c2)%(rt0.c2)) IN ()) RIGHT OUTER JOIN vt1 ON (((t0.c69) NOT BETWEEN (t0.c69) AND (v0.c0)) IN ()) ORDER BY LOWER((~ (rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1, rt0, t0 WHERE (vt0.c0) ORDER BY ((((v0.c0)<=(t0.c69))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt1, rt0, t0 ORDER BY ((((v0.c0)<=(t0.c69))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1, rt0, t0 WHERE (vt0.c0) ORDER BY ((((v0.c0)<=(t0.c69))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt1, rt0, t0 ORDER BY ((((v0.c0)<=(t0.c69))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1, rt0, t0 WHERE (vt0.c0) ORDER BY ((((v0.c0)<=(t0.c69))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0, rt0, vt0 WHERE ((NOT (((t0.c65) NOTNULL)))) ORDER BY '1476608607';
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c65) NOTNULL)))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY '1476608607');
SELECT COUNT(*) FROM t0, v0, rt0, vt0 WHERE ((NOT (((t0.c65) NOTNULL)))) ORDER BY '1476608607';
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c65) NOTNULL)))) IS TRUE)  as count FROM t0, v0, rt0, vt0 ORDER BY '1476608607');
SELECT COUNT(*) FROM t0, v0, rt0, vt0 WHERE ((NOT (((t0.c65) NOTNULL)))) ORDER BY '1476608607';
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((0.6024722683890341)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((0.6024722683890341)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((0.6024722683890341)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((0.6024722683890341)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((0.6024722683890341)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (STRFTIME(CAST(t0.c65 AS INTEGER), ((0x140f9877) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c0 AS BLOB), (NOT (t0.c90)), (('<{\rm6''䆸')<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CAST(t0.c65 AS INTEGER), ((0X140f9877) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c0 AS BLOB), (NOT (t0.c90)), (('<{\rm6''䆸')<<(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (STRFTIME(CAST(t0.c65 AS INTEGER), ((0x140f9877) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c0 AS BLOB), (NOT (t0.c90)), (('<{\rm6''䆸')<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CAST(t0.c65 AS INTEGER), ((0X140f9877) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c0 AS BLOB), (NOT (t0.c90)), (('<{\rm6''䆸')<<(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (STRFTIME(CAST(t0.c65 AS INTEGER), ((0x140f9877) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c0 AS BLOB), (NOT (t0.c90)), (('<{\rm6''䆸')<<(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((x'', ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2)<(rt0.c0))))>=((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 726942930 ELSE rt0.c0 END, ((rt0.c1)+(rt0.c0)))))) ORDER BY ((('')) NOT BETWEEN ((UNLIKELY(x'a633'))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'', ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2)<(rt0.c0))))>=((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 726942930 ELSE rt0.c0 END, ((rt0.c1)+(rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY ((('')) NOT BETWEEN ((UNLIKELY(x'a633'))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((x'', ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2)<(rt0.c0))))>=((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 726942930 ELSE rt0.c0 END, ((rt0.c1)+(rt0.c0)))))) ORDER BY ((('')) NOT BETWEEN ((UNLIKELY(x'a633'))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'', ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2)<(rt0.c0))))>=((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 726942930 ELSE rt0.c0 END, ((rt0.c1)+(rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY ((('')) NOT BETWEEN ((UNLIKELY(x'a633'))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((x'', ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2)<(rt0.c0))))>=((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END, CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 726942930 ELSE rt0.c0 END, ((rt0.c1)+(rt0.c0)))))) ORDER BY ((('')) NOT BETWEEN ((UNLIKELY(x'a633'))) AND ((vt1.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS INTEGER))OR(((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)))))OR(((t0.c69) BETWEEN (t0.c69) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)&(vt0.c0)))OR((rt0.c2 IN ()))))AND(GLOB(rt0.c2, t0.c69))))OR(rt0.c2 COLLATE RTRIM)))OR((vt0.c1 IN ()))))OR((rt0.c2 IN ()))))OR((((t0.c90, t0.c69, t0.c90)) NOT BETWEEN ((vt0.c0, x'', t0.c90)) AND ((vt0.c0, vt0.c1, rt0.c1))))) WHERE (CAST(CAST(t0.c65 AS INTEGER) AS TEXT)) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c65 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS INTEGER))OR(((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)))))OR(((t0.c69) BETWEEN (t0.c69) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)&(vt0.c0)))OR((rt0.c2 IN ()))))AND(GLOB(rt0.c2, t0.c69))))OR(rt0.c2 COLLATE RTRIM)))OR((vt0.c1 IN ()))))OR((rt0.c2 IN ()))))OR((((t0.c90, t0.c69, t0.c90)) NOT BETWEEN ((vt0.c0, x'', t0.c90)) AND ((vt0.c0, vt0.c1, rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS INTEGER))OR(((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)))))OR(((t0.c69) BETWEEN (t0.c69) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)&(vt0.c0)))OR((rt0.c2 IN ()))))AND(GLOB(rt0.c2, t0.c69))))OR(rt0.c2 COLLATE RTRIM)))OR((vt0.c1 IN ()))))OR((rt0.c2 IN ()))))OR((((t0.c90, t0.c69, t0.c90)) NOT BETWEEN ((vt0.c0, x'', t0.c90)) AND ((vt0.c0, vt0.c1, rt0.c1))))) WHERE (CAST(CAST(t0.c65 AS INTEGER) AS TEXT)) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c65 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS INTEGER))OR(((t0.c65) NOT BETWEEN (t0.c69) AND (t0.c69)))))OR(((t0.c69) BETWEEN (t0.c69) AND (vt0.c0)))) LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)&(vt0.c0)))OR((rt0.c2 IN ()))))AND(GLOB(rt0.c2, t0.c69))))OR(rt0.c2 COLLATE RTRIM)))OR((vt0.c1 IN ()))))OR((rt0.c2 IN ()))))OR((((t0.c90, t0.c69, t0.c90)) NOT BETWEEN ((vt0.c0, x'', t0.c90)) AND ((vt0.c0, vt0.c1, rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (vt0.c1);
SELECT * FROM t0, vt0, vt1 WHERE (MAX(CASE vt0.c0  WHEN t0.c69 THEN vt0.c1 WHEN t0.c69 THEN vt0.c1 WHEN vt0.c0 THEN t0.c90 END, vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CASE vt0.c0  WHEN t0.c69 THEN vt0.c1 WHEN t0.c69 THEN vt0.c1 WHEN vt0.c0 THEN t0.c90 END, vt1.c0)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (MAX(CASE vt0.c0  WHEN t0.c69 THEN vt0.c1 WHEN t0.c69 THEN vt0.c1 WHEN vt0.c0 THEN t0.c90 END, vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CASE vt0.c0  WHEN t0.c69 THEN vt0.c1 WHEN t0.c69 THEN vt0.c1 WHEN vt0.c0 THEN t0.c90 END, vt1.c0)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (MAX(CASE vt0.c0  WHEN t0.c69 THEN vt0.c1 WHEN t0.c69 THEN vt0.c1 WHEN vt0.c0 THEN t0.c90 END, vt1.c0));
SELECT ALL * FROM rt0 INDEXED BY i1, v0, vt1, t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 INDEXED BY i1, v0, vt1, t0, vt0);
SELECT ALL * FROM rt0 INDEXED BY i1, v0, vt1, t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 INDEXED BY i1, v0, vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, v0, vt0 WHERE ((NOT (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t0, v0, vt0 NOT INDEXED);
SELECT ALL * FROM vt1, t0, v0, vt0 WHERE ((NOT (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, t0, v0, vt0 NOT INDEXED);
SELECT ALL * FROM vt1, t0, v0, vt0 WHERE ((NOT (((vt1.c0) NOT NULL))));
SELECT * FROM vt1, v0 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))))OR((((vt1.c0))<=((v0.c0))))))AND(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))))OR((((vt1.c0))<=((v0.c0))))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))))OR((((vt1.c0))<=((v0.c0))))))AND(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))))OR((((vt1.c0))<=((v0.c0))))))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))))OR((((vt1.c0))<=((v0.c0))))))AND(((vt1.c0) NOT NULL))));
SELECT * FROM vt1, t0, rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN '' THEN '*)4tㄎH A탗' WHEN ((t0.c65)AND(t0.c69)) THEN (~ ('-1579583857')) WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c69)IS(t0.c69)) ELSE CAST(t0.c65 AS REAL) END) ORDER BY (((((rt0.c0)&('1194506027'))))=((rt0.c1 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS INTEGER)  WHEN '' THEN '*)4tㄎH A탗' WHEN ((t0.c65)AND(t0.c69)) THEN (~ ('-1579583857')) WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c69)IS(t0.c69)) ELSE CAST(t0.c65 AS REAL) END) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((((rt0.c0)&('1194506027'))))=((rt0.c1 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN '' THEN '*)4tㄎH A탗' WHEN ((t0.c65)AND(t0.c69)) THEN (~ ('-1579583857')) WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c69)IS(t0.c69)) ELSE CAST(t0.c65 AS REAL) END) ORDER BY (((((rt0.c0)&('1194506027'))))=((rt0.c1 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS INTEGER)  WHEN '' THEN '*)4tㄎH A탗' WHEN ((t0.c65)AND(t0.c69)) THEN (~ ('-1579583857')) WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c69)IS(t0.c69)) ELSE CAST(t0.c65 AS REAL) END) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (((((rt0.c0)&('1194506027'))))=((rt0.c1 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM vt1, t0, rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN '' THEN '*)4tㄎH A탗' WHEN ((t0.c65)AND(t0.c69)) THEN (~ ('-1579583857')) WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c69)IS(t0.c69)) ELSE CAST(t0.c65 AS REAL) END) ORDER BY (((((rt0.c0)&('1194506027'))))=((rt0.c1 COLLATE BINARY)))  NULLS LAST;
SELECT * FROM vt1 WHERE (CASE '-26203647'  WHEN ((vt1.c0) IS TRUE) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3820721638446767)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY (UNLIKELY(DISTINCT vt1.c0) IN (((vt1.c0) ISNULL), SQLITE_COMPILEOPTION_USED(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE '-26203647'  WHEN ((vt1.c0) IS TRUE) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3820721638446767)) ELSE CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM vt1 ORDER BY (UNLIKELY(DISTINCT vt1.c0) IN (((vt1.c0) ISNULL), SQLITE_COMPILEOPTION_USED(vt1.c0))));
SELECT * FROM vt1 WHERE (CASE '-26203647'  WHEN ((vt1.c0) IS TRUE) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3820721638446767)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY (UNLIKELY(DISTINCT vt1.c0) IN (((vt1.c0) ISNULL), SQLITE_COMPILEOPTION_USED(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE '-26203647'  WHEN ((vt1.c0) IS TRUE) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3820721638446767)) ELSE CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM vt1 ORDER BY (UNLIKELY(DISTINCT vt1.c0) IN (((vt1.c0) ISNULL), SQLITE_COMPILEOPTION_USED(vt1.c0))));
SELECT * FROM vt1 WHERE (CASE '-26203647'  WHEN ((vt1.c0) IS TRUE) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3820721638446767)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY (UNLIKELY(DISTINCT vt1.c0) IN (((vt1.c0) ISNULL), SQLITE_COMPILEOPTION_USED(vt1.c0)));
SELECT * FROM vt1, rt0, t0 WHERE ((+ (((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c90))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((+ (((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c90))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((+ (((rt0.c0) NOT BETWEEN (t0.c65) AND (t0.c90)))));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((('0.30207309681604877') IS FALSE)) ORDER BY ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(t0.c65 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((('0.30207309681604877') IS FALSE)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(t0.c65 AS INTEGER))));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((('0.30207309681604877') IS FALSE)) ORDER BY ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(t0.c65 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((('0.30207309681604877') IS FALSE)) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(t0.c65 AS INTEGER))));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE ((('0.30207309681604877') IS FALSE)) ORDER BY ((CAST(rt0.c2 AS NUMERIC))GLOB(CAST(t0.c65 AS INTEGER)));
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, v0, rt0);
SELECT ALL * FROM t0, vt0, v0, rt0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM t0, rt0 INNER JOIN vt1 ON (((((t0.c65))>=((rt0.c2)))) NOT BETWEEN (((rt0.c0)GLOB(t0.c65))) AND (t0.c65)) LEFT OUTER JOIN v0 ON UNLIKELY(0.4287373285689665) WHERE (CASE WHEN rt0.c2 THEN ((rt0.c0) BETWEEN (t0.c90) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c0) BETWEEN (t0.c90) AND (rt0.c1)) END) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON (((((t0.c65))>=((rt0.c2)))) NOT BETWEEN (((rt0.c0)GLOB(t0.c65))) AND (t0.c65)) LEFT OUTER JOIN v0 ON UNLIKELY(0.4287373285689665));
SELECT * FROM t0, rt0 INNER JOIN vt1 ON (((((t0.c65))>=((rt0.c2)))) NOT BETWEEN (((rt0.c0)GLOB(t0.c65))) AND (t0.c65)) LEFT OUTER JOIN v0 ON UNLIKELY(0.4287373285689665) WHERE (CASE WHEN rt0.c2 THEN ((rt0.c0) BETWEEN (t0.c90) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c0) BETWEEN (t0.c90) AND (rt0.c1)) END) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON (((((t0.c65))>=((rt0.c2)))) NOT BETWEEN (((rt0.c0)GLOB(t0.c65))) AND (t0.c65)) LEFT OUTER JOIN v0 ON UNLIKELY(0.4287373285689665));
SELECT * FROM t0, rt0 INNER JOIN vt1 ON (((((t0.c65))>=((rt0.c2)))) NOT BETWEEN (((rt0.c0)GLOB(t0.c65))) AND (t0.c65)) LEFT OUTER JOIN v0 ON UNLIKELY(0.4287373285689665) WHERE (CASE WHEN rt0.c2 THEN ((rt0.c0) BETWEEN (t0.c90) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ORDER BY CAST(CASE WHEN t0.c90 THEN t0.c69 WHEN v0.c0 THEN t0.c65 WHEN vt0.c0 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN vt0.c1 THEN vt0.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(CASE WHEN t0.c90 THEN t0.c69 WHEN v0.c0 THEN t0.c65 WHEN vt0.c0 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN vt0.c1 THEN vt0.c0 END AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ORDER BY CAST(CASE WHEN t0.c90 THEN t0.c69 WHEN v0.c0 THEN t0.c65 WHEN vt0.c0 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN vt0.c1 THEN vt0.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY CAST(CASE WHEN t0.c90 THEN t0.c69 WHEN v0.c0 THEN t0.c65 WHEN vt0.c0 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN vt0.c1 THEN vt0.c0 END AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ORDER BY CAST(CASE WHEN t0.c90 THEN t0.c69 WHEN v0.c0 THEN t0.c65 WHEN vt0.c0 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN vt0.c1 THEN vt0.c0 END AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, vt1, rt0, t0 WHERE ((NOT (NULL))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN ((0.4128240726117418)<(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM v0, vt0, vt1, rt0, t0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN ((0.4128240726117418)<(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1, rt0, t0 WHERE ((NOT (NULL))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN ((0.4128240726117418)<(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM v0, vt0, vt1, rt0, t0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN ((0.4128240726117418)<(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1, rt0, t0 WHERE ((NOT (NULL))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 END THEN ((0.4128240726117418)<(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ('-819013629' IN ()) ASC  NULLS FIRST, ((((((NULL) NOTNULL))AND(((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c1) AND (t0.c65)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ('-819013629' IN ()) ASC  NULLS FIRST, ((((((NULL) NOTNULL))AND(((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c1) AND (t0.c65)))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ('-819013629' IN ()) ASC  NULLS FIRST, ((((((NULL) NOTNULL))AND(((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c1) AND (t0.c65)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ('-819013629' IN ()) ASC  NULLS FIRST, ((((((NULL) NOTNULL))AND(((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c1) AND (t0.c65)))) DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ('-819013629' IN ()) ASC  NULLS FIRST, ((((((NULL) NOTNULL))AND(((t0.c90) BETWEEN (t0.c90) AND (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c1) AND (t0.c65)))) DESC;
SELECT COUNT(*) FROM t0, rt0, v0 FULL OUTER JOIN vt1 ON CAST(x'' AS TEXT) WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, v0 FULL OUTER JOIN vt1 ON CAST(x'' AS TEXT));
SELECT COUNT(*) FROM t0, rt0, v0 FULL OUTER JOIN vt1 ON CAST(x'' AS TEXT) WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM t0, rt0, v0 FULL OUTER JOIN vt1 ON CAST(x'' AS TEXT));
SELECT COUNT(*) FROM t0, rt0, v0 FULL OUTER JOIN vt1 ON CAST(x'' AS TEXT) WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (t0.c69) AND (t0.c65)))AND(vt0.c0 COLLATE NOCASE)))AND('1468772124')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (t0.c69) AND (t0.c65)))AND(vt0.c0 COLLATE NOCASE)))AND('1468772124'))) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (t0.c69) AND (t0.c65)))AND(vt0.c0 COLLATE NOCASE)))AND('1468772124')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (t0.c69) AND (t0.c65)))AND(vt0.c0 COLLATE NOCASE)))AND('1468772124'))) IS TRUE)  as count FROM v0, t0, rt0, vt0);
SELECT COUNT(*) FROM v0, t0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (t0.c69) AND (t0.c65)))AND(vt0.c0 COLLATE NOCASE)))AND('1468772124')));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON CASE ((t0.c90) IS FALSE)  WHEN (((t0.c65)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN NULL WHEN (~ (t0.c90)) THEN CASE t0.c65  WHEN t0.c65 THEN t0.c65 END WHEN ((t0.c69)*(t0.c90)) THEN ((((t0.c65)OR(t0.c90)))OR(t0.c69)) END LEFT OUTER JOIN vt1 ON CAST(((t0.c65) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) WHERE (((v0.c0 COLLATE RTRIM)<(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE ((t0.c90) IS FALSE)  WHEN (((t0.c65)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN NULL WHEN (~ (t0.c90)) THEN CASE t0.c65  WHEN t0.c65 THEN t0.c65 END WHEN ((t0.c69)*(t0.c90)) THEN ((((t0.c65)OR(t0.c90)))OR(t0.c69)) END LEFT OUTER JOIN vt1 ON CAST(((t0.c65) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON CASE ((t0.c90) IS FALSE)  WHEN (((t0.c65)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN NULL WHEN (~ (t0.c90)) THEN CASE t0.c65  WHEN t0.c65 THEN t0.c65 END WHEN ((t0.c69)*(t0.c90)) THEN ((((t0.c65)OR(t0.c90)))OR(t0.c69)) END LEFT OUTER JOIN vt1 ON CAST(((t0.c65) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) WHERE (((v0.c0 COLLATE RTRIM)<(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE ((t0.c90) IS FALSE)  WHEN (((t0.c65)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN NULL WHEN (~ (t0.c90)) THEN CASE t0.c65  WHEN t0.c65 THEN t0.c65 END WHEN ((t0.c69)*(t0.c90)) THEN ((((t0.c65)OR(t0.c90)))OR(t0.c69)) END LEFT OUTER JOIN vt1 ON CAST(((t0.c65) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON CASE ((t0.c90) IS FALSE)  WHEN (((t0.c65)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) THEN NULL WHEN (~ (t0.c90)) THEN CASE t0.c65  WHEN t0.c65 THEN t0.c65 END WHEN ((t0.c69)*(t0.c90)) THEN ((((t0.c65)OR(t0.c90)))OR(t0.c69)) END LEFT OUTER JOIN vt1 ON CAST(((t0.c65) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB) WHERE (((v0.c0 COLLATE RTRIM)<(v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0, v0, rt0, vt1 WHERE (((((((rt0.c2)!=(v0.c0)))OR(t0.c65 COLLATE RTRIM)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)!=(v0.c0)))OR(t0.c65 COLLATE RTRIM)))AND(x''))) IS TRUE)  as count FROM vt0, t0, v0, rt0, vt1);
SELECT ALL * FROM vt0, t0, v0, rt0, vt1 WHERE (((((((rt0.c2)!=(v0.c0)))OR(t0.c65 COLLATE RTRIM)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)!=(v0.c0)))OR(t0.c65 COLLATE RTRIM)))AND(x''))) IS TRUE)  as count FROM vt0, t0, v0, rt0, vt1);
SELECT ALL * FROM vt0, t0, v0, rt0, vt1 WHERE (((((((rt0.c2)!=(v0.c0)))OR(t0.c65 COLLATE RTRIM)))AND(x'')));
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (((((rt0.c2)/(rt0.c1)))%(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))))) ORDER BY (((+ (v0.c0)))&(((rt0.c2) NOT BETWEEN (t0.c90) AND (t0.c69)))) ASC, '-819013629', CAST(((rt0.c1) NOTNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1)))%(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY (((+ (v0.c0)))&(((rt0.c2) NOT BETWEEN (t0.c90) AND (t0.c69)))) ASC, '-819013629', CAST(((rt0.c1) NOTNULL) AS BLOB) ASC);
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (((((rt0.c2)/(rt0.c1)))%(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))))) ORDER BY (((+ (v0.c0)))&(((rt0.c2) NOT BETWEEN (t0.c90) AND (t0.c69)))) ASC, '-819013629', CAST(((rt0.c1) NOTNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1)))%(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, v0 ORDER BY (((+ (v0.c0)))&(((rt0.c2) NOT BETWEEN (t0.c90) AND (t0.c69)))) ASC, '-819013629', CAST(((rt0.c1) NOTNULL) AS BLOB) ASC);
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (((((rt0.c2)/(rt0.c1)))%(((((rt0.c0)AND(rt0.c2)))OR(vt0.c0))))) ORDER BY (((+ (v0.c0)))&(((rt0.c2) NOT BETWEEN (t0.c90) AND (t0.c69)))) ASC, '-819013629', CAST(((rt0.c1) NOTNULL) AS BLOB) ASC;
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON '-285062973' WHERE (((((((vt0.c1)<=(vt0.c0)))OR(CAST(v0.c0 AS REAL))))AND((+ (vt0.c1))))) ORDER BY (((+ (v0.c0)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<=(vt0.c0)))OR(CAST(v0.c0 AS REAL))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 RIGHT OUTER JOIN v0 ON '-285062973' ORDER BY (((+ (v0.c0)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON '-285062973' WHERE (((((((vt0.c1)<=(vt0.c0)))OR(CAST(v0.c0 AS REAL))))AND((+ (vt0.c1))))) ORDER BY (((+ (v0.c0)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<=(vt0.c0)))OR(CAST(v0.c0 AS REAL))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 RIGHT OUTER JOIN v0 ON '-285062973' ORDER BY (((+ (v0.c0)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN v0 ON '-285062973' WHERE (((((((vt0.c1)<=(vt0.c0)))OR(CAST(v0.c0 AS REAL))))AND((+ (vt0.c1))))) ORDER BY (((+ (v0.c0)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))<(-1876933450)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))<(-1876933450))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))<(-1876933450)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))<(-1876933450))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))<(-1876933450)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (((v0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (LTRIM(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST, LIKE((NOT (rt0.c1)), '1748629386', '8') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (LTRIM(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0, v0 NOT INDEXED, t0, vt1 ORDER BY vt0.c1 DESC  NULLS FIRST, LIKE((NOT (rt0.c1)), '1748629386', '8') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (((v0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (LTRIM(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST, LIKE((NOT (rt0.c1)), '1748629386', '8') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (LTRIM(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0, v0 NOT INDEXED, t0, vt1 ORDER BY vt0.c1 DESC  NULLS FIRST, LIKE((NOT (rt0.c1)), '1748629386', '8') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t0, vt1 WHERE (((v0.c0) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (LTRIM(vt0.c1)))) ORDER BY vt0.c1 DESC  NULLS FIRST, LIKE((NOT (rt0.c1)), '1748629386', '8') ASC  NULLS FIRST;
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, ((rt0.c2)&(rt0.c2))) CROSS JOIN vt1 ON NULL WHERE (-1.029115356E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.029115356E9) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, ((rt0.c2)&(rt0.c2))) CROSS JOIN vt1 ON NULL);
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, ((rt0.c2)&(rt0.c2))) CROSS JOIN vt1 ON NULL WHERE (-1.029115356E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.029115356E9) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, ((rt0.c2)&(rt0.c2))) CROSS JOIN vt1 ON NULL);
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON IFNULL(DISTINCT vt0.c1 COLLATE RTRIM, ((rt0.c2)&(rt0.c2))) CROSS JOIN vt1 ON NULL WHERE (-1.029115356E9);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c1))) NOT BETWEEN (MIN(rt0.c2, rt0.c0)) AND (vt1.c0))) ORDER BY ((+ (rt0.c1)) IN ()) ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt1.c0, rt0.c2) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1))) NOT BETWEEN (MIN(rt0.c2, rt0.c0)) AND (vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((+ (rt0.c1)) IN ()) ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt1.c0, rt0.c2) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c1))) NOT BETWEEN (MIN(rt0.c2, rt0.c0)) AND (vt1.c0))) ORDER BY ((+ (rt0.c1)) IN ()) ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt1.c0, rt0.c2) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c1))) NOT BETWEEN (MIN(rt0.c2, rt0.c0)) AND (vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((+ (rt0.c1)) IN ()) ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt1.c0, rt0.c2) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c1))) NOT BETWEEN (MIN(rt0.c2, rt0.c0)) AND (vt1.c0))) ORDER BY ((+ (rt0.c1)) IN ()) ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt1.c0, rt0.c2) AS BLOB);
SELECT * FROM vt0, v0 INNER JOIN vt1 ON (+ ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) WHERE ((((((vt0.c1))>=((vt1.c0)))) NOT BETWEEN ('*x') AND (0.20408354039785315))) ORDER BY NULLIF(DISTINCT NULL COLLATE NOCASE, (vt0.c0 IN (v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt1.c0)))) NOT BETWEEN ('*x') AND (0.20408354039785315))) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON (+ ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) ORDER BY NULLIF(DISTINCT NULL COLLATE NOCASE, (vt0.c0 IN (v0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 INNER JOIN vt1 ON (+ ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) WHERE ((((((vt0.c1))>=((vt1.c0)))) NOT BETWEEN ('*x') AND (0.20408354039785315))) ORDER BY NULLIF(DISTINCT NULL COLLATE NOCASE, (vt0.c0 IN (v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt1.c0)))) NOT BETWEEN ('*x') AND (0.20408354039785315))) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON (+ ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) ORDER BY NULLIF(DISTINCT NULL COLLATE NOCASE, (vt0.c0 IN (v0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 INNER JOIN vt1 ON (+ ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) WHERE ((((((vt0.c1))>=((vt1.c0)))) NOT BETWEEN ('*x') AND (0.20408354039785315))) ORDER BY NULLIF(DISTINCT NULL COLLATE NOCASE, (vt0.c0 IN (v0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN 0Xffffffff9bad8c4e WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN vt1.c0 THEN 0xffffffff9bad8c4e WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN 0Xffffffff9bad8c4e WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt1.c0  WHEN vt1.c0 THEN 0xffffffff9bad8c4e WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN 0Xffffffff9bad8c4e WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((CAST(vt1.c0 AS TEXT)))));
SELECT * FROM rt0, t0 WHERE (t0.c69) ORDER BY (+ (((((t0.c90)AND(t0.c90)))OR(t0.c90)))) DESC  NULLS FIRST, ((((((rt0.c0)OR(t0.c90)))OR(rt0.c2))) IS FALSE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c69) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (((((t0.c90)AND(t0.c90)))OR(t0.c90)))) DESC  NULLS FIRST, ((((((rt0.c0)OR(t0.c90)))OR(rt0.c2))) IS FALSE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (t0.c69) ORDER BY (+ (((((t0.c90)AND(t0.c90)))OR(t0.c90)))) DESC  NULLS FIRST, ((((((rt0.c0)OR(t0.c90)))OR(rt0.c2))) IS FALSE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c69) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (((((t0.c90)AND(t0.c90)))OR(t0.c90)))) DESC  NULLS FIRST, ((((((rt0.c0)OR(t0.c90)))OR(rt0.c2))) IS FALSE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (t0.c69) ORDER BY (+ (((((t0.c90)AND(t0.c90)))OR(t0.c90)))) DESC  NULLS FIRST, ((((((rt0.c0)OR(t0.c90)))OR(rt0.c2))) IS FALSE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (t0.c90) AND (t0.c69))) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((763636118)AND((('-1736905442')LIKE(rt0.c1)))))OR(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((763636118)AND((('-1736905442')LIKE(rt0.c1)))))OR(x'' COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((763636118)AND((('-1736905442')LIKE(rt0.c1)))))OR(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((763636118)AND((('-1736905442')LIKE(rt0.c1)))))OR(x'' COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((763636118)AND((('-1736905442')LIKE(rt0.c1)))))OR(x'' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY ((((v0.c0) NOT NULL))IS NOT(CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((v0.c0) NOT NULL))IS NOT(CAST(vt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY ((((v0.c0) NOT NULL))IS NOT(CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((v0.c0) NOT NULL))IS NOT(CAST(vt0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY ((((v0.c0) NOT NULL))IS NOT(CAST(vt0.c0 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt1 INNER JOIN rt0 ON IFNULL(t0.c69, rt0.c0) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (((((t0.c69, x'', rt0.c1, t0.c90, vt0.c1)) NOT BETWEEN ((rt0.c1, -2058067001, vt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c90, vt1.c0, vt0.c0, NULL))))%(((vt1.c0)<(v0.c0)))) WHERE (rt0.c0) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c1 END) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c69)))) AND (((vt0.c0) BETWEEN (v0.c0) AND (''))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, v0, vt1 INNER JOIN rt0 ON IFNULL(t0.c69, rt0.c0) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (((((t0.c69, x'', rt0.c1, t0.c90, vt0.c1)) NOT BETWEEN ((rt0.c1, -2058067001, vt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c90, vt1.c0, vt0.c0, NULL))))%(((vt1.c0)<(v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c1 END) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c69)))) AND (((vt0.c0) BETWEEN (v0.c0) AND ('')))));
SELECT COUNT(*) FROM t0, v0, vt1 INNER JOIN rt0 ON IFNULL(t0.c69, rt0.c0) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (((((t0.c69, x'', rt0.c1, t0.c90, vt0.c1)) NOT BETWEEN ((rt0.c1, -2058067001, vt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c90, vt1.c0, vt0.c0, NULL))))%(((vt1.c0)<(v0.c0)))) WHERE (rt0.c0) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c1 END) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c69)))) AND (((vt0.c0) BETWEEN (v0.c0) AND (''))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, v0, vt1 INNER JOIN rt0 ON IFNULL(t0.c69, rt0.c0) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (((((t0.c69, x'', rt0.c1, t0.c90, vt0.c1)) NOT BETWEEN ((rt0.c1, -2058067001, vt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c90, vt1.c0, vt0.c0, NULL))))%(((vt1.c0)<(v0.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c1 END) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c69)))) AND (((vt0.c0) BETWEEN (v0.c0) AND ('')))));
SELECT COUNT(*) FROM t0, v0, vt1 INNER JOIN rt0 ON IFNULL(t0.c69, rt0.c0) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (((((t0.c69, x'', rt0.c1, t0.c90, vt0.c1)) NOT BETWEEN ((rt0.c1, -2058067001, vt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c0, t0.c90, vt1.c0, vt0.c0, NULL))))%(((vt1.c0)<(v0.c0)))) WHERE (rt0.c0) ORDER BY ((CASE WHEN v0.c0 THEN rt0.c1 END) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c69)))) AND (((vt0.c0) BETWEEN (v0.c0) AND (''))));
SELECT * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((vt0.c1) IS FALSE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((vt0.c1) IS FALSE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c1) IS FALSE)));
SELECT ALL * FROM t0, rt0, vt1, vt0, v0 WHERE (((((CAST(rt0.c1 AS REAL))AND(t0.c69 COLLATE BINARY)))AND((rt0.c1 IN ())))) ORDER BY (((((vt1.c0)+(rt0.c0)), ((rt0.c1)*(t0.c69)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c90)))))<((CASE t0.c65  WHEN v0.c0 THEN vt1.c0 WHEN t0.c90 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 END, ((0.3735876313036689) NOT BETWEEN (v0.c0) AND (rt0.c1)), 0.7128072369321926))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS REAL))AND(t0.c69 COLLATE BINARY)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, vt1, vt0, v0 ORDER BY (((((vt1.c0)+(rt0.c0)), ((rt0.c1)*(t0.c69)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c90)))))<((CASE t0.c65  WHEN v0.c0 THEN vt1.c0 WHEN t0.c90 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 END, ((0.3735876313036689) NOT BETWEEN (v0.c0) AND (rt0.c1)), 0.7128072369321926))) DESC);
SELECT ALL * FROM t0, rt0, vt1, vt0, v0 WHERE (((((CAST(rt0.c1 AS REAL))AND(t0.c69 COLLATE BINARY)))AND((rt0.c1 IN ())))) ORDER BY (((((vt1.c0)+(rt0.c0)), ((rt0.c1)*(t0.c69)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c90)))))<((CASE t0.c65  WHEN v0.c0 THEN vt1.c0 WHEN t0.c90 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 END, ((0.3735876313036689) NOT BETWEEN (v0.c0) AND (rt0.c1)), 0.7128072369321926))) DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c1 AS REAL))AND(t0.c69 COLLATE BINARY)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, vt1, vt0, v0 ORDER BY (((((vt1.c0)+(rt0.c0)), ((rt0.c1)*(t0.c69)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c90)))))<((CASE t0.c65  WHEN v0.c0 THEN vt1.c0 WHEN t0.c90 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 END, ((0.3735876313036689) NOT BETWEEN (v0.c0) AND (rt0.c1)), 0.7128072369321926))) DESC);
SELECT ALL * FROM t0, rt0, vt1, vt0, v0 WHERE (((((CAST(rt0.c1 AS REAL))AND(t0.c69 COLLATE BINARY)))AND((rt0.c1 IN ())))) ORDER BY (((((vt1.c0)+(rt0.c0)), ((rt0.c1)*(t0.c69)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c90)))))<((CASE t0.c65  WHEN v0.c0 THEN vt1.c0 WHEN t0.c90 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 END, ((0.3735876313036689) NOT BETWEEN (v0.c0) AND (rt0.c1)), 0.7128072369321926))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c65)))>=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c65)))>=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c65)))>=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c65)))>=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, v0);
SELECT ALL COUNT(*) FROM t0, rt0, v0 WHERE (((((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c65)))>=((rt0.c1 IN ()))));
SELECT ALL * FROM t0, vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN ((rt0.c1) NOTNULL) END FULL OUTER JOIN rt0 ON (vt0.c0 IN ()) WHERE (CAST((NOT (t0.c69)) AS NUMERIC)) ORDER BY ((((t0.c65)OR(t0.c69)))IS(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c69)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN ((rt0.c1) NOTNULL) END FULL OUTER JOIN rt0 ON (vt0.c0 IN ()) ORDER BY ((((t0.c65)OR(t0.c69)))IS(rt0.c2)) DESC);
SELECT ALL * FROM t0, vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN ((rt0.c1) NOTNULL) END FULL OUTER JOIN rt0 ON (vt0.c0 IN ()) WHERE (CAST((NOT (t0.c69)) AS NUMERIC)) ORDER BY ((((t0.c65)OR(t0.c69)))IS(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c69)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON CASE WHEN NULL THEN ((rt0.c1) NOTNULL) END FULL OUTER JOIN rt0 ON (vt0.c0 IN ()) ORDER BY ((((t0.c65)OR(t0.c69)))IS(rt0.c2)) DESC);
SELECT * FROM v0, rt0, vt1 CROSS JOIN vt0 ON TRIM(DISTINCT vt1.c0) WHERE (((((((vt1.c0)OR(vt0.c1)))OR(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c1)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt1 CROSS JOIN vt0 ON TRIM(DISTINCT vt1.c0));
SELECT * FROM v0, rt0, vt1 CROSS JOIN vt0 ON TRIM(DISTINCT vt1.c0) WHERE (((((((vt1.c0)OR(vt0.c1)))OR(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c1)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt1 CROSS JOIN vt0 ON TRIM(DISTINCT vt1.c0));
SELECT * FROM v0, rt0, vt1 CROSS JOIN vt0 ON TRIM(DISTINCT vt1.c0) WHERE (((((((vt1.c0)OR(vt0.c1)))OR(rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY (('-1541113882')<>(CAST(vt1.c0 AS TEXT))), ('-1317771096' IN ());
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY (('-1541113882')!=(CAST(vt1.c0 AS TEXT))), ('-1317771096' IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY (('-1541113882')<>(CAST(vt1.c0 AS TEXT))), ('-1317771096' IN ());
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY (('-1541113882')!=(CAST(vt1.c0 AS TEXT))), ('-1317771096' IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY (('-1541113882')<>(CAST(vt1.c0 AS TEXT))), ('-1317771096' IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)*(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)*(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)*(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)*(vt0.c0)))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))GLOB(((vt1.c0) ISNULL)))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '153044160' THEN vt1.c0 ELSE vt1.c0 END))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))GLOB(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '153044160' THEN vt1.c0 ELSE vt1.c0 END))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))GLOB(((vt1.c0) ISNULL)))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '153044160' THEN vt1.c0 ELSE vt1.c0 END))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))GLOB(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '153044160' THEN vt1.c0 ELSE vt1.c0 END))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))GLOB(((vt1.c0) ISNULL)))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '153044160' THEN vt1.c0 ELSE vt1.c0 END))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1) BETWEEN (x'') AND (rt0.c2))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1) BETWEEN (x'') AND (rt0.c2))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1) BETWEEN (x'') AND (rt0.c2))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1) BETWEEN (x'') AND (rt0.c2))))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1) BETWEEN (x'') AND (rt0.c2))))) WHERE (x'');
SELECT * FROM rt0, vt1 WHERE ((((- (rt0.c1)))-(3.36566391E8))) ORDER BY ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))-(3.36566391E8))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((- (rt0.c1)))-(3.36566391E8))) ORDER BY ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))-(3.36566391E8))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((- (rt0.c1)))-(3.36566391E8))) ORDER BY ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0, v0, vt1, vt0 WHERE ((((((+ (rt0.c1)))AND(((v0.c0) NOTNULL))))AND((- (rt0.c1))))) ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(IFNULL(DISTINCT rt0.c2, v0.c0))))OR(((vt0.c1)<(rt0.c2)))) ASC, CASE ((('')) NOT BETWEEN ((vt0.c1)) AND ((1.420826553E9)))  WHEN ((vt0.c0)!=(vt1.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN ((((v0.c0)AND(NULL)))AND(vt0.c1)) WHEN ((rt0.c1) IS FALSE) THEN ((vt0.c0) NOTNULL) ELSE ((((((((rt0.c0)AND(vt0.c1)))OR('-921813824')))OR('-1312968109')))OR(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))AND(((v0.c0) NOTNULL))))AND((- (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1, vt0 ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(IFNULL(DISTINCT rt0.c2, v0.c0))))OR(((vt0.c1)<(rt0.c2)))) ASC, CASE ((('')) NOT BETWEEN ((vt0.c1)) AND ((1.420826553E9)))  WHEN ((vt0.c0)<>(vt1.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN ((((v0.c0)AND(NULL)))AND(vt0.c1)) WHEN ((rt0.c1) IS FALSE) THEN ((vt0.c0) NOTNULL) ELSE ((((((((rt0.c0)AND(vt0.c1)))OR('-921813824')))OR('-1312968109')))OR(vt1.c0)) END  NULLS LAST);
SELECT * FROM rt0, v0, vt1, vt0 WHERE ((((((+ (rt0.c1)))AND(((v0.c0) NOTNULL))))AND((- (rt0.c1))))) ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(IFNULL(DISTINCT rt0.c2, v0.c0))))OR(((vt0.c1)<(rt0.c2)))) ASC, CASE ((('')) NOT BETWEEN ((vt0.c1)) AND ((1.420826553E9)))  WHEN ((vt0.c0)!=(vt1.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN ((((v0.c0)AND(NULL)))AND(vt0.c1)) WHEN ((rt0.c1) IS FALSE) THEN ((vt0.c0) NOTNULL) ELSE ((((((((rt0.c0)AND(vt0.c1)))OR('-921813824')))OR('-1312968109')))OR(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))AND(((v0.c0) NOTNULL))))AND((- (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt1, vt0 ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(IFNULL(DISTINCT rt0.c2, v0.c0))))OR(((vt0.c1)<(rt0.c2)))) ASC, CASE ((('')) NOT BETWEEN ((vt0.c1)) AND ((1.420826553E9)))  WHEN ((vt0.c0)<>(vt1.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN ((((v0.c0)AND(NULL)))AND(vt0.c1)) WHEN ((rt0.c1) IS FALSE) THEN ((vt0.c0) NOTNULL) ELSE ((((((((rt0.c0)AND(vt0.c1)))OR('-921813824')))OR('-1312968109')))OR(vt1.c0)) END  NULLS LAST);
SELECT * FROM rt0, v0, vt1, vt0 WHERE ((((((+ (rt0.c1)))AND(((v0.c0) NOTNULL))))AND((- (rt0.c1))))) ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(IFNULL(DISTINCT rt0.c2, v0.c0))))OR(((vt0.c1)<(rt0.c2)))) ASC, CASE ((('')) NOT BETWEEN ((vt0.c1)) AND ((1.420826553E9)))  WHEN ((vt0.c0)!=(vt1.c0)) THEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN ((((v0.c0)AND(NULL)))AND(vt0.c1)) WHEN ((rt0.c1) IS FALSE) THEN ((vt0.c0) NOTNULL) ELSE ((((((((rt0.c0)AND(vt0.c1)))OR('-921813824')))OR('-1312968109')))OR(vt1.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST(NULL AS TEXT)) ORDER BY 0.3124867269468663  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, vt1 ORDER BY 0.3124867269468663  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST(NULL AS TEXT)) ORDER BY 0.3124867269468663  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0, vt1 ORDER BY 0.3124867269468663  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (CAST(NULL AS TEXT)) ORDER BY 0.3124867269468663  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST(t0.c69 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c69 AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST(t0.c69 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c69 AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST(t0.c69 AS TEXT));
SELECT ALL * FROM t0 WHERE (((((CASE t0.c90  WHEN t0.c69 THEN t0.c65 WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c69 END)OR(((t0.c90)+(t0.c90)))))OR(t0.c90 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c90  WHEN t0.c69 THEN t0.c65 WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c69 END)OR(((t0.c90)+(t0.c90)))))OR(t0.c90 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((CASE t0.c90  WHEN t0.c69 THEN t0.c65 WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c69 END)OR(((t0.c90)+(t0.c90)))))OR(t0.c90 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE t0.c90  WHEN t0.c69 THEN t0.c65 WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c69 END)OR(((t0.c90)+(t0.c90)))))OR(t0.c90 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((CASE t0.c90  WHEN t0.c69 THEN t0.c65 WHEN t0.c90 THEN t0.c90 WHEN t0.c69 THEN t0.c69 END)OR(((t0.c90)+(t0.c90)))))OR(t0.c90 COLLATE BINARY)));
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)IS NOT('DX∋䉟9t')))+(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT('DX∋䉟9t')))+(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)IS NOT('DX∋䉟9t')))+(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT('DX∋䉟9t')))+(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0)IS NOT('DX∋䉟9t')))+(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM vt1, v0, t0, vt0, rt0 WHERE (((((((((((t0.c90)AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))LIKE(LIKELY(vt1.c0)))) ORDER BY ((TYPEOF(t0.c65))*(CAST(t0.c90 AS INTEGER)))  NULLS FIRST, t0.c65 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c90)AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))LIKE(LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, v0, t0, vt0, rt0 ORDER BY ((TYPEOF(t0.c65))*(CAST(t0.c90 AS INTEGER)))  NULLS FIRST, t0.c65 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, t0, vt0, rt0 WHERE (((((((((((t0.c90)AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))LIKE(LIKELY(vt1.c0)))) ORDER BY ((TYPEOF(t0.c65))*(CAST(t0.c90 AS INTEGER)))  NULLS FIRST, t0.c65 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c90)AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))LIKE(LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, v0, t0, vt0, rt0 ORDER BY ((TYPEOF(t0.c65))*(CAST(t0.c90 AS INTEGER)))  NULLS FIRST, t0.c65 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, t0, vt0, rt0 WHERE (((((((((((t0.c90)AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))LIKE(LIKELY(vt1.c0)))) ORDER BY ((TYPEOF(t0.c65))*(CAST(t0.c90 AS INTEGER)))  NULLS FIRST, t0.c65 DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (PRINTF(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((PRINTF(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (PRINTF(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((PRINTF(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (PRINTF(CAST(rt0.c1 AS TEXT)));
SELECT COUNT(*) FROM t0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(x'' AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((t0.c90)IS(t0.c65)))<(((((t0.c90)AND(t0.c69)))AND(t0.c69)))) WHERE (CASE t0.c65  WHEN t0.c69 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c65  WHEN t0.c69 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((t0.c90)IS(t0.c65)))<(((((t0.c90)AND(t0.c69)))AND(t0.c69)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((t0.c90)IS(t0.c65)))<(((((t0.c90)AND(t0.c69)))AND(t0.c69)))) WHERE (CASE t0.c65  WHEN t0.c69 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c65  WHEN t0.c69 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((t0.c90)IS(t0.c65)))<(((((t0.c90)AND(t0.c69)))AND(t0.c69)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((t0.c90)IS(t0.c65)))<(((((t0.c90)AND(t0.c69)))AND(t0.c69)))) WHERE (CASE t0.c65  WHEN t0.c69 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN x'4d8c' THEN vt0.c1 END)%(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'4d8c' THEN vt0.c1 END)%(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN x'4d8c' THEN vt0.c1 END)%(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'4d8c' THEN vt0.c1 END)%(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN x'4d8c' THEN vt0.c1 END)%(((rt0.c2) NOTNULL))));
SELECT * FROM rt0, t0, vt0, v0 WHERE (CAST(((vt0.c0)>>(t0.c90)) AS TEXT)) ORDER BY (((((t0.c69) NOT BETWEEN (x'ba97') AND (NULL))))=(('-1312968109')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(t0.c90)) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY (((((t0.c69) NOT BETWEEN (x'ba97') AND (NULL))))==(('-1312968109')))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0, v0 WHERE (CAST(((vt0.c0)>>(t0.c90)) AS TEXT)) ORDER BY (((((t0.c69) NOT BETWEEN (x'ba97') AND (NULL))))=(('-1312968109')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(t0.c90)) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY (((((t0.c69) NOT BETWEEN (x'ba97') AND (NULL))))==(('-1312968109')))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0, v0 WHERE (CAST(((vt0.c0)>>(t0.c90)) AS TEXT)) ORDER BY (((((t0.c69) NOT BETWEEN (x'ba97') AND (NULL))))=(('-1312968109')))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0, v0 WHERE (NULL) ORDER BY ABS(DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))), ((((vt0.c0) ISNULL)) NOT BETWEEN (((((rt0.c0)AND(NULL)))OR(vt1.c0))) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0, vt0, v0 ORDER BY ABS(DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))), ((((vt0.c0) ISNULL)) NOT BETWEEN (((((rt0.c0)AND(NULL)))OR(vt1.c0))) AND ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt1, rt0, vt0, v0 WHERE (NULL) ORDER BY ABS(DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))), ((((vt0.c0) ISNULL)) NOT BETWEEN (((((rt0.c0)AND(NULL)))OR(vt1.c0))) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0, vt0, v0 ORDER BY ABS(DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))), ((((vt0.c0) ISNULL)) NOT BETWEEN (((((rt0.c0)AND(NULL)))OR(vt1.c0))) AND ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt1, rt0, vt0, v0 WHERE (NULL) ORDER BY ABS(DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))), ((((vt0.c0) ISNULL)) NOT BETWEEN (((((rt0.c0)AND(NULL)))OR(vt1.c0))) AND ((rt0.c2 IN ())));
SELECT * FROM t0 WHERE (((((t0.c90) NOT BETWEEN (t0.c69) AND (t0.c69)))-(((((((((t0.c90)OR(t0.c65)))OR(t0.c69)))OR(t0.c69)))OR(t0.c69))))) ORDER BY ((((t0.c65 IN (t0.c90))))=((((t0.c65)LIKE(t0.c65)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c90) NOT BETWEEN (t0.c69) AND (t0.c69)))-(((((((((t0.c90)OR(t0.c65)))OR(t0.c69)))OR(t0.c69)))OR(t0.c69))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c65 IN (t0.c90))))==((((t0.c65)LIKE(t0.c65))))));
SELECT * FROM t0 WHERE (((((t0.c90) NOT BETWEEN (t0.c69) AND (t0.c69)))-(((((((((t0.c90)OR(t0.c65)))OR(t0.c69)))OR(t0.c69)))OR(t0.c69))))) ORDER BY ((((t0.c65 IN (t0.c90))))=((((t0.c65)LIKE(t0.c65)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c90) NOT BETWEEN (t0.c69) AND (t0.c69)))-(((((((((t0.c90)OR(t0.c65)))OR(t0.c69)))OR(t0.c69)))OR(t0.c69))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c65 IN (t0.c90))))==((((t0.c65)LIKE(t0.c65))))));
SELECT * FROM t0 WHERE (((((t0.c90) NOT BETWEEN (t0.c69) AND (t0.c69)))-(((((((((t0.c90)OR(t0.c65)))OR(t0.c69)))OR(t0.c69)))OR(t0.c69))))) ORDER BY ((((t0.c65 IN (t0.c90))))=((((t0.c65)LIKE(t0.c65)))));
SELECT ALL COUNT(*) FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, t0.c65, vt0.c0)) BETWEEN ((((x'')/(vt1.c0)), CAST(v0.c0 AS TEXT), (- (vt0.c0)))) AND ((((v0.c0) IS FALSE), CAST(rt0.c1 AS REAL), 'O'))) FULL OUTER JOIN vt1 ON 565401319 WHERE (((((rt0.c1))=((t0.c65))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))==((t0.c65))) IN ())) IS TRUE)  as count FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, t0.c65, vt0.c0)) BETWEEN ((((x'')/(vt1.c0)), CAST(v0.c0 AS TEXT), (- (vt0.c0)))) AND ((((v0.c0) IS FALSE), CAST(rt0.c1 AS REAL), 'O'))) FULL OUTER JOIN vt1 ON 565401319);
SELECT ALL COUNT(*) FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, t0.c65, vt0.c0)) BETWEEN ((((x'')/(vt1.c0)), CAST(v0.c0 AS TEXT), (- (vt0.c0)))) AND ((((v0.c0) IS FALSE), CAST(rt0.c1 AS REAL), 'O'))) FULL OUTER JOIN vt1 ON 565401319 WHERE (((((rt0.c1))=((t0.c65))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))==((t0.c65))) IN ())) IS TRUE)  as count FROM t0, v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, t0.c65, vt0.c0)) BETWEEN ((((x'')/(vt1.c0)), CAST(v0.c0 AS TEXT), (- (vt0.c0)))) AND ((((v0.c0) IS FALSE), CAST(rt0.c1 AS REAL), 'O'))) FULL OUTER JOIN vt1 ON 565401319);
SELECT * FROM t0, rt0, vt0 WHERE (((((((((((rt0.c0)OR(t0.c90)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((('<3{\n}''') NOTNULL)) AND (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(t0.c90)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((('<3{\n}''') NOTNULL)) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((((((((rt0.c0)OR(t0.c90)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((('<3{\n}''') NOTNULL)) AND (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(t0.c90)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((('<3{\n}''') NOTNULL)) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((((((((((rt0.c0)OR(t0.c90)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((('<3{\n}''') NOTNULL)) AND (CAST(rt0.c0 AS INTEGER))));
SELECT * FROM v0, t0 WHERE (((~ (t0.c69)) IN ())) ORDER BY ((((t0.c90) NOT NULL))|(t0.c65 COLLATE NOCASE)) DESC, ((v0.c0)OR(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST, t0.c69  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c69)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c90) NOT NULL))|(t0.c65 COLLATE NOCASE)) DESC, ((v0.c0)OR(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST, t0.c69  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (((~ (t0.c69)) IN ())) ORDER BY ((((t0.c90) NOT NULL))|(t0.c65 COLLATE NOCASE)) DESC, ((v0.c0)OR(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST, t0.c69  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c69)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c90) NOT NULL))|(t0.c65 COLLATE NOCASE)) DESC, ((v0.c0)OR(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST, t0.c69  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (((~ (t0.c69)) IN ())) ORDER BY ((((t0.c90) NOT NULL))|(t0.c65 COLLATE NOCASE)) DESC, ((v0.c0)OR(((v0.c0)/(v0.c0)))) DESC  NULLS FIRST, t0.c69  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt0 INNER JOIN v0 ON ((CAST(vt0.c1 AS REAL)) BETWEEN ((rt0.c1 IN (t0.c65, t0.c69))) AND ((rt0.c1 IN (vt0.c0, t0.c90)))) WHERE (QUOTE((('')<(x''))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((('')<(x'')))) IS TRUE)  as count FROM t0, vt0, rt0 INNER JOIN v0 ON ((CAST(vt0.c1 AS REAL)) BETWEEN ((rt0.c1 IN (t0.c65, t0.c69))) AND ((rt0.c1 IN (vt0.c0, t0.c90)))));
SELECT COUNT(*) FROM t0, vt0, rt0 INNER JOIN v0 ON ((CAST(vt0.c1 AS REAL)) BETWEEN ((rt0.c1 IN (t0.c65, t0.c69))) AND ((rt0.c1 IN (vt0.c0, t0.c90)))) WHERE (QUOTE((('')<(x''))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((('')<(x'')))) IS TRUE)  as count FROM t0, vt0, rt0 INNER JOIN v0 ON ((CAST(vt0.c1 AS REAL)) BETWEEN ((rt0.c1 IN (t0.c65, t0.c69))) AND ((rt0.c1 IN (vt0.c0, t0.c90)))));
SELECT COUNT(*) FROM t0, vt0, rt0 INNER JOIN v0 ON ((CAST(vt0.c1 AS REAL)) BETWEEN ((rt0.c1 IN (t0.c65, t0.c69))) AND ((rt0.c1 IN (vt0.c0, t0.c90)))) WHERE (QUOTE((('')<(x''))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR(((vt1.c0)IS NOT(rt0.c0)))))OR(x'9c77')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR(((vt1.c0)IS NOT(rt0.c0)))))OR(x'9c77'))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR(((vt1.c0)IS NOT(rt0.c0)))))OR(x'9c77')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR(((vt1.c0)IS NOT(rt0.c0)))))OR(x'9c77'))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR(((vt1.c0)IS NOT(rt0.c0)))))OR(x'9c77')));
SELECT * FROM rt0 INNER JOIN vt1 ON TYPEOF((rt0.c0 IN ())) WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON TYPEOF((rt0.c0 IN ())));
SELECT * FROM rt0 INNER JOIN vt1 ON TYPEOF((rt0.c0 IN ())) WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON TYPEOF((rt0.c0 IN ())));
SELECT * FROM rt0 INNER JOIN vt1 ON TYPEOF((rt0.c0 IN ())) WHERE (((rt0.c1) NOTNULL));
SELECT ALL * FROM vt0 WHERE (DATE(vt0.c1, ((vt0.c1)%(vt0.c0)), vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c1, ((vt0.c1)%(vt0.c0)), vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (DATE(vt0.c1, ((vt0.c1)%(vt0.c0)), vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c1, ((vt0.c1)%(vt0.c0)), vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (DATE(vt0.c1, ((vt0.c1)%(vt0.c0)), vt0.c1));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((UPPER(t0.c90) IN ())) ORDER BY (- (t0.c65)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UPPER(t0.c90) IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (t0.c65)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((UPPER(t0.c90) IN ())) ORDER BY (- (t0.c65)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UPPER(t0.c90) IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (t0.c65)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((UPPER(t0.c90) IN ())) ORDER BY (- (t0.c65)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS LAST;
SELECT * FROM t0 INNER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))))*(((rt0.c0)%(vt0.c1)))) LEFT OUTER JOIN vt0 ON (rt0.c0 IN (((rt0.c2)IS(vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1))) FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt0.c1) NOT NULL) THEN CASE NULL  WHEN t0.c69 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN 0.1903777388596437 THEN vt1.c0 END WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) ELSE ((t0.c65)*(t0.c90)) END WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1) NOT BETWEEN (t0.c65) AND (vt0.c0))))) ORDER BY CAST(UPPER(DISTINCT t0.c90) AS TEXT), ((CAST(rt0.c0 AS BLOB))>>(((t0.c90)LIKE(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1) NOT BETWEEN (t0.c65) AND (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))))*(((rt0.c0)%(vt0.c1)))) LEFT OUTER JOIN vt0 ON (rt0.c0 IN (((rt0.c2)IS(vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1))) FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt0.c1) NOT NULL) THEN CASE NULL  WHEN t0.c69 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN 0.1903777388596437 THEN vt1.c0 END WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) ELSE ((t0.c65)*(t0.c90)) END ORDER BY CAST(UPPER(DISTINCT t0.c90) AS TEXT), ((CAST(rt0.c0 AS BLOB))>>(((t0.c90)LIKE(vt0.c1)))) DESC);
SELECT * FROM t0 INNER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))))*(((rt0.c0)%(vt0.c1)))) LEFT OUTER JOIN vt0 ON (rt0.c0 IN (((rt0.c2)IS(vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1))) FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt0.c1) NOT NULL) THEN CASE NULL  WHEN t0.c69 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN 0.1903777388596437 THEN vt1.c0 END WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) ELSE ((t0.c65)*(t0.c90)) END WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1) NOT BETWEEN (t0.c65) AND (vt0.c0))))) ORDER BY CAST(UPPER(DISTINCT t0.c90) AS TEXT), ((CAST(rt0.c0 AS BLOB))>>(((t0.c90)LIKE(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c1) NOT BETWEEN (t0.c65) AND (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c90))))*(((rt0.c0)%(vt0.c1)))) LEFT OUTER JOIN vt0 ON (rt0.c0 IN (((rt0.c2)IS(vt0.c0)), COALESCE(DISTINCT rt0.c2, rt0.c1))) FULL OUTER JOIN vt1 ON CASE WHEN ((rt0.c2) NOT NULL) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt0.c1) NOT NULL) THEN CASE NULL  WHEN t0.c69 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c0 WHEN 0.1903777388596437 THEN vt1.c0 END WHEN rt0.c1 THEN ((rt0.c1) NOT BETWEEN (x'') AND (NULL)) ELSE ((t0.c65)*(t0.c90)) END ORDER BY CAST(UPPER(DISTINCT t0.c90) AS TEXT), ((CAST(rt0.c0 AS BLOB))>>(((t0.c90)LIKE(vt0.c1)))) DESC);
SELECT * FROM rt0, vt0, v0, t0 INNER JOIN vt1 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((((((t0.c90, t0.c69, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((t0.c90, rt0.c1, vt0.c1))))/(((vt1.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c90, t0.c69, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((t0.c90, rt0.c1, vt0.c1))))/(((vt1.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 INNER JOIN vt1 ON (CAST(rt0.c2 AS NUMERIC) IN ()));
SELECT * FROM rt0, vt0, v0, t0 INNER JOIN vt1 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((((((t0.c90, t0.c69, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((t0.c90, rt0.c1, vt0.c1))))/(((vt1.c0)&(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c90, t0.c69, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((t0.c90, rt0.c1, vt0.c1))))/(((vt1.c0)&(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, t0 INNER JOIN vt1 ON (CAST(rt0.c2 AS NUMERIC) IN ()));
SELECT * FROM rt0, vt0, v0, t0 INNER JOIN vt1 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((((((t0.c90, t0.c69, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c1)) AND ((t0.c90, rt0.c1, vt0.c1))))/(((vt1.c0)&(rt0.c2)))));
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((- (json_remove(NULL, '1173422931'))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_remove(NULL, '1173422931')))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((- (json_remove(NULL, '1173422931'))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_remove(NULL, '1173422931')))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ((- (json_remove(NULL, '1173422931'))));
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0)<>(rt0.c0))  WHEN rt0.c1 THEN ((rt0.c0) NOT NULL) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c2) END) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)!=(rt0.c0))  WHEN rt0.c1 THEN ((rt0.c0) NOT NULL) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0)<>(rt0.c0))  WHEN rt0.c1 THEN ((rt0.c0) NOT NULL) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c2) END) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)!=(rt0.c0))  WHEN rt0.c1 THEN ((rt0.c0) NOT NULL) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0)<>(rt0.c0))  WHEN rt0.c1 THEN ((rt0.c0) NOT NULL) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c2) END) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT NULL);
SELECT ALL * FROM t0, v0, vt1 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ''  NULLS FIRST, 0Xffffffffeb73f6f4 ASC, (+ ((NOT (t0.c69))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ''  NULLS FIRST, 0xffffffffeb73f6f4 ASC, (+ ((NOT (t0.c69)))));
SELECT ALL * FROM t0, v0, vt1 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ''  NULLS FIRST, 0Xffffffffeb73f6f4 ASC, (+ ((NOT (t0.c69))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0, vt1 ORDER BY ''  NULLS FIRST, 0xffffffffeb73f6f4 ASC, (+ ((NOT (t0.c69)))));
SELECT ALL * FROM t0, v0, vt1 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE) ORDER BY ''  NULLS FIRST, 0Xffffffffeb73f6f4 ASC, (+ ((NOT (t0.c69))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, t0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, v0 WHERE ((rt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0, rt0 INDEXED BY i1 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE BINARY)<>(((0.14589921153781904)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)!=(((0.14589921153781904)>=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i1 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, rt0 INDEXED BY i1 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE BINARY)<>(((0.14589921153781904)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY)!=(((0.14589921153781904)>=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (('')IS(vt0.c1))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt0.c1)AND(NULL)) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')IS(vt0.c1))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt0.c1)AND(NULL)) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (('')IS(vt0.c1))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt0.c1)AND(NULL)) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')IS(vt0.c1))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt0.c1)AND(NULL)) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (('')IS(vt0.c1))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt0.c1)AND(NULL)) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM rt0, vt1, v0, t0 WHERE ((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, v0, t0);
SELECT ALL * FROM rt0, vt1, v0, t0 WHERE ((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, v0, t0);
SELECT ALL * FROM rt0, vt1, v0, t0 WHERE ((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((json_array(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((json_array(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((json_array(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((json_array(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((json_array(rt0.c0, rt0.c0, rt0.c0, rt0.c2)))=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))));
SELECT ALL * FROM vt1, rt0, t0, v0, vt0 WHERE ((('1168594084') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('1168594084') NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0, v0, vt0);
SELECT ALL * FROM vt1, rt0, t0, v0, vt0 WHERE ((('1168594084') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('1168594084') NOT NULL)) IS TRUE)  as count FROM vt1, rt0, t0, v0, vt0);
SELECT ALL * FROM vt1, rt0, t0, v0, vt0 WHERE ((('1168594084') NOT NULL));
SELECT * FROM t0, v0 CROSS JOIN rt0 ON ((((((t0.c69)<>(t0.c65)))AND((~ (vt1.c0)))))AND(CASE t0.c90  WHEN x'' THEN t0.c90 WHEN t0.c90 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 ELSE t0.c65 END)) LEFT OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))) AND ((2047118841 COLLATE RTRIM))) WHERE ((((rt0.c2)+(t0.c65)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)+(t0.c65)) IN ())) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt0 ON ((((((t0.c69)!=(t0.c65)))AND((~ (vt1.c0)))))AND(CASE t0.c90  WHEN x'' THEN t0.c90 WHEN t0.c90 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 ELSE t0.c65 END)) LEFT OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))) AND ((2047118841 COLLATE RTRIM))));
SELECT * FROM t0, v0 CROSS JOIN rt0 ON ((((((t0.c69)<>(t0.c65)))AND((~ (vt1.c0)))))AND(CASE t0.c90  WHEN x'' THEN t0.c90 WHEN t0.c90 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 ELSE t0.c65 END)) LEFT OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))) AND ((2047118841 COLLATE RTRIM))) WHERE ((((rt0.c2)+(t0.c65)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)+(t0.c65)) IN ())) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt0 ON ((((((t0.c69)!=(t0.c65)))AND((~ (vt1.c0)))))AND(CASE t0.c90  WHEN x'' THEN t0.c90 WHEN t0.c90 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 ELSE t0.c65 END)) LEFT OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))) AND ((2047118841 COLLATE RTRIM))));
SELECT * FROM t0, v0 CROSS JOIN rt0 ON ((((((t0.c69)<>(t0.c65)))AND((~ (vt1.c0)))))AND(CASE t0.c90  WHEN x'' THEN t0.c90 WHEN t0.c90 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 ELSE t0.c65 END)) LEFT OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((((v0.c0)AND(rt0.c1)))OR(v0.c0)))) AND ((2047118841 COLLATE RTRIM))) WHERE ((((rt0.c2)+(t0.c65)) IN ()));
SELECT * FROM vt0, v0, vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, vt1, t0);
SELECT * FROM vt0, v0, vt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, v0, vt1, t0);
SELECT * FROM vt0, v0, vt1, t0 WHERE (x'');
SELECT ALL * FROM rt0, vt1 NOT INDEXED, vt0, v0, t0 WHERE ((NOT ((((t0.c90, rt0.c1, vt1.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c0, t0.c65, rt0.c0)))))) ORDER BY -8.47767873E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c90, rt0.c1, vt1.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c0, t0.c65, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1, vt0, v0, t0 ORDER BY -8.47767873E8  NULLS LAST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED, vt0, v0, t0 WHERE ((NOT ((((t0.c90, rt0.c1, vt1.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c0, t0.c65, rt0.c0)))))) ORDER BY -8.47767873E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c90, rt0.c1, vt1.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c0, t0.c65, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1, vt0, v0, t0 ORDER BY -8.47767873E8  NULLS LAST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED, vt0, v0, t0 WHERE ((NOT ((((t0.c90, rt0.c1, vt1.c0)) BETWEEN ((rt0.c1, vt0.c1, rt0.c0)) AND ((rt0.c0, t0.c65, rt0.c0)))))) ORDER BY -8.47767873E8  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (((t0.c90)=('9yo郗j'))))) ORDER BY ((t0.c65) BETWEEN (t0.c65) AND (((v0.c0) ISNULL))), (- ((+ (t0.c69)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c90)==('9yo郗j'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c65) BETWEEN (t0.c65) AND (((v0.c0) ISNULL))), (- ((+ (t0.c69)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (((t0.c90)=('9yo郗j'))))) ORDER BY ((t0.c65) BETWEEN (t0.c65) AND (((v0.c0) ISNULL))), (- ((+ (t0.c69)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c90)==('9yo郗j'))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c65) BETWEEN (t0.c65) AND (((v0.c0) ISNULL))), (- ((+ (t0.c69)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (((t0.c90)=('9yo郗j'))))) ORDER BY ((t0.c65) BETWEEN (t0.c65) AND (((v0.c0) ISNULL))), (- ((+ (t0.c69)))) DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((t0.c90, ((vt0.c1) BETWEEN (vt0.c1) AND ('Hga矦mre')), (((rt0.c0, t0.c90, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c1)))))<>((((vt0.c0)/(t0.c65)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), rt0.c2 COLLATE BINARY))) LEFT OUTER JOIN v0 ON CAST(NULL AS NUMERIC) LEFT OUTER JOIN rt0 ON LOWER(((rt0.c0)>=(rt0.c0))) LEFT OUTER JOIN t0 ON ((((CASE WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END)AND(((vt0.c1) BETWEEN (vt0.c0) AND (-240824756)))))AND(((vt0.c0) ISNULL))) WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((t0.c90, ((vt0.c1) BETWEEN (vt0.c1) AND ('Hga矦mre')), (((rt0.c0, t0.c90, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c1)))))<>((((vt0.c0)/(t0.c65)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), rt0.c2 COLLATE BINARY))) LEFT OUTER JOIN v0 ON CAST(NULL AS NUMERIC) LEFT OUTER JOIN rt0 ON LOWER(((rt0.c0)>=(rt0.c0))) LEFT OUTER JOIN t0 ON ((((CASE WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END)AND(((vt0.c1) BETWEEN (vt0.c0) AND (-240824756)))))AND(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((t0.c90, ((vt0.c1) BETWEEN (vt0.c1) AND ('Hga矦mre')), (((rt0.c0, t0.c90, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c1)))))<>((((vt0.c0)/(t0.c65)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), rt0.c2 COLLATE BINARY))) LEFT OUTER JOIN v0 ON CAST(NULL AS NUMERIC) LEFT OUTER JOIN rt0 ON LOWER(((rt0.c0)>=(rt0.c0))) LEFT OUTER JOIN t0 ON ((((CASE WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END)AND(((vt0.c1) BETWEEN (vt0.c0) AND (-240824756)))))AND(((vt0.c0) ISNULL))) WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((t0.c90, ((vt0.c1) BETWEEN (vt0.c1) AND ('Hga矦mre')), (((rt0.c0, t0.c90, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c1)))))<>((((vt0.c0)/(t0.c65)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), rt0.c2 COLLATE BINARY))) LEFT OUTER JOIN v0 ON CAST(NULL AS NUMERIC) LEFT OUTER JOIN rt0 ON LOWER(((rt0.c0)>=(rt0.c0))) LEFT OUTER JOIN t0 ON ((((CASE WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END)AND(((vt0.c1) BETWEEN (vt0.c0) AND (-240824756)))))AND(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((t0.c90, ((vt0.c1) BETWEEN (vt0.c1) AND ('Hga矦mre')), (((rt0.c0, t0.c90, rt0.c2)) BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c1)))))<>((((vt0.c0)/(t0.c65)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)), rt0.c2 COLLATE BINARY))) LEFT OUTER JOIN v0 ON CAST(NULL AS NUMERIC) LEFT OUTER JOIN rt0 ON LOWER(((rt0.c0)>=(rt0.c0))) LEFT OUTER JOIN t0 ON ((((CASE WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END)AND(((vt0.c1) BETWEEN (vt0.c0) AND (-240824756)))))AND(((vt0.c0) ISNULL))) WHERE (rt0.c0 COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN t0 ON (((vt0.c0)&(t0.c90)) IN (2.047118841E9 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON rt0.c2 WHERE (ABS(((t0.c90) BETWEEN (t0.c69) AND (t0.c69)))) ORDER BY (NOT (rt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c90) BETWEEN (t0.c69) AND (t0.c69)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((vt0.c0)&(t0.c90)) IN (2.047118841E9 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON rt0.c2 ORDER BY (NOT (rt0.c0 COLLATE BINARY)) ASC);
SELECT * FROM rt0 CROSS JOIN t0 ON (((vt0.c0)&(t0.c90)) IN (2.047118841E9 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON rt0.c2 WHERE (ABS(((t0.c90) BETWEEN (t0.c69) AND (t0.c69)))) ORDER BY (NOT (rt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c90) BETWEEN (t0.c69) AND (t0.c69)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((vt0.c0)&(t0.c90)) IN (2.047118841E9 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN vt1 ON rt0.c2 ORDER BY (NOT (rt0.c0 COLLATE BINARY)) ASC);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN '1043589151' END) IS TRUE) DESC  NULLS FIRST, (- (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN '1043589151' END) IS TRUE) DESC  NULLS FIRST, (- (vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN '1043589151' END) IS TRUE) DESC  NULLS FIRST, (- (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN '1043589151' END) IS TRUE) DESC  NULLS FIRST, (- (vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN '1043589151' END) IS TRUE) DESC  NULLS FIRST, (- (vt0.c0))  NULLS FIRST;
SELECT * FROM vt1, v0, t0, vt0 WHERE (((CAST(t0.c90 AS REAL)) IS TRUE)) ORDER BY ((UNLIKELY(t0.c65))&(((t0.c90) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c90 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt1 NOT INDEXED, v0, t0, vt0 ORDER BY ((UNLIKELY(t0.c65))&(((t0.c90) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt1, v0, t0, vt0 WHERE (((CAST(t0.c90 AS REAL)) IS TRUE)) ORDER BY ((UNLIKELY(t0.c65))&(((t0.c90) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c90 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt1 NOT INDEXED, v0, t0, vt0 ORDER BY ((UNLIKELY(t0.c65))&(((t0.c90) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt1, v0, t0, vt0 WHERE (((CAST(t0.c90 AS REAL)) IS TRUE)) ORDER BY ((UNLIKELY(t0.c65))&(((t0.c90) IS FALSE)))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((+ (vt1.c0)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))GLOB(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))GLOB(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0)))GLOB(NULL)));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE t0.c69 END) BETWEEN (0xffffffffa80b7a42) AND (((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) INNER JOIN v0 ON NULL CROSS JOIN t0 ON CAST((((v0.c0))>=((t0.c65))) AS NUMERIC) WHERE (x'6ef4');
SELECT SUM(count) FROM (SELECT ALL ((x'6ef4') IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE t0.c69 END) BETWEEN (0xffffffffa80b7a42) AND (((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) INNER JOIN v0 ON NULL CROSS JOIN t0 ON CAST((((v0.c0))>=((t0.c65))) AS NUMERIC));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE t0.c69 END) BETWEEN (0xffffffffa80b7a42) AND (((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) INNER JOIN v0 ON NULL CROSS JOIN t0 ON CAST((((v0.c0))>=((t0.c65))) AS NUMERIC) WHERE (x'6ef4');
SELECT SUM(count) FROM (SELECT ALL ((x'6ef4') IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE t0.c69 END) BETWEEN (0xffffffffa80b7a42) AND (((t0.c90) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) INNER JOIN v0 ON NULL CROSS JOIN t0 ON CAST((((v0.c0))>=((t0.c65))) AS NUMERIC));
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c65 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c65 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c65 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c65 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c65 THEN t0.c65 WHEN t0.c69 THEN t0.c90 WHEN t0.c65 THEN t0.c69 ELSE t0.c65 END AS REAL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 COLLATE NOCASE WHERE (CAST(((v0.c0)<=(rt0.c0)) AS NUMERIC)) ORDER BY ((((v0.c0)OR(rt0.c2))) BETWEEN ((+ (rt0.c0))) AND (((((((((0.5417507434344023)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 COLLATE NOCASE ORDER BY ((((v0.c0)OR(rt0.c2))) BETWEEN ((+ (rt0.c0))) AND (((((((((0.5417507434344023)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(x'')))) ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 COLLATE NOCASE WHERE (CAST(((v0.c0)<=(rt0.c0)) AS NUMERIC)) ORDER BY ((((v0.c0)OR(rt0.c2))) BETWEEN ((+ (rt0.c0))) AND (((((((((0.5417507434344023)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 COLLATE NOCASE ORDER BY ((((v0.c0)OR(rt0.c2))) BETWEEN ((+ (rt0.c0))) AND (((((((((0.5417507434344023)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(x'')))) ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 COLLATE NOCASE WHERE (CAST(((v0.c0)<=(rt0.c0)) AS NUMERIC)) ORDER BY ((((v0.c0)OR(rt0.c2))) BETWEEN ((+ (rt0.c0))) AND (((((((((0.5417507434344023)OR(rt0.c2)))OR(v0.c0)))AND(rt0.c1)))OR(x'')))) ASC;
SELECT ALL * FROM vt1 CROSS JOIN v0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((t0.c69 IN ())) AND (t0.c90)) RIGHT OUTER JOIN rt0 ON (((NOT (vt0.c1)))%(((rt0.c2)%(t0.c69)))) INNER JOIN t0 ON ((CASE vt0.c1  WHEN 0X3b1c2183 THEN rt0.c2 WHEN rt0.c0 THEN t0.c90 WHEN vt1.c0 THEN t0.c69 ELSE t0.c90 END) NOTNULL) LEFT OUTER JOIN vt0 ON (((((((rt0.c1))=((rt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 END)) AND ((CAST(v0.c0 AS BLOB))))) ORDER BY ((CAST(t0.c90 AS INTEGER)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 END)) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((t0.c69 IN ())) AND (t0.c90)) RIGHT OUTER JOIN rt0 ON (((NOT (vt0.c1)))%(((rt0.c2)%(t0.c69)))) INNER JOIN t0 ON ((CASE vt0.c1  WHEN 0X3b1c2183 THEN rt0.c2 WHEN rt0.c0 THEN t0.c90 WHEN vt1.c0 THEN t0.c69 ELSE t0.c90 END) NOTNULL) LEFT OUTER JOIN vt0 ON (((((((rt0.c1))==((rt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c0)))) ORDER BY ((CAST(t0.c90 AS INTEGER)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((t0.c69 IN ())) AND (t0.c90)) RIGHT OUTER JOIN rt0 ON (((NOT (vt0.c1)))%(((rt0.c2)%(t0.c69)))) INNER JOIN t0 ON ((CASE vt0.c1  WHEN 0X3b1c2183 THEN rt0.c2 WHEN rt0.c0 THEN t0.c90 WHEN vt1.c0 THEN t0.c69 ELSE t0.c90 END) NOTNULL) LEFT OUTER JOIN vt0 ON (((((((rt0.c1))=((rt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 END)) AND ((CAST(v0.c0 AS BLOB))))) ORDER BY ((CAST(t0.c90 AS INTEGER)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c1 THEN v0.c0 END)) AND ((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((t0.c69 IN ())) AND (t0.c90)) RIGHT OUTER JOIN rt0 ON (((NOT (vt0.c1)))%(((rt0.c2)%(t0.c69)))) INNER JOIN t0 ON ((CASE vt0.c1  WHEN 0X3b1c2183 THEN rt0.c2 WHEN rt0.c0 THEN t0.c90 WHEN vt1.c0 THEN t0.c69 ELSE t0.c90 END) NOTNULL) LEFT OUTER JOIN vt0 ON (((((((rt0.c1))==((rt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)))OR((v0.c0 IN (vt0.c0)))) ORDER BY ((CAST(t0.c90 AS INTEGER)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1) NOT NULL) IN ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT NULL) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1) NOT NULL) IN ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT NULL) IN ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1) NOT NULL) IN ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC, TRIM(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt1.c0)), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC, TRIM(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt1.c0)), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC, TRIM(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt1.c0)), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC, TRIM(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt1.c0)), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC, TRIM(((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt1.c0)), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(((t0.c90) NOT NULL) AS TEXT) FULL OUTER JOIN t0 ON (NOT (((vt0.c0)OR(t0.c90)))) WHERE (LTRIM(((vt0.c1) BETWEEN (vt0.c0) AND (-1244042386)), (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt0.c1) BETWEEN (vt0.c0) AND (-1244042386)), (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((t0.c90) NOT NULL) AS TEXT) FULL OUTER JOIN t0 ON (NOT (((vt0.c0)OR(t0.c90)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(((t0.c90) NOT NULL) AS TEXT) FULL OUTER JOIN t0 ON (NOT (((vt0.c0)OR(t0.c90)))) WHERE (LTRIM(((vt0.c1) BETWEEN (vt0.c0) AND (-1244042386)), (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((vt0.c1) BETWEEN (vt0.c0) AND (-1244042386)), (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((t0.c90) NOT NULL) AS TEXT) FULL OUTER JOIN t0 ON (NOT (((vt0.c0)OR(t0.c90)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY JULIANDAY((('~H') ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))), ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))), ((((vt0.c0) NOTNULL))<=(((vt0.c1)=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY JULIANDAY((('~H') ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))), ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))), ((((vt0.c0) NOTNULL))<=(((vt0.c1)==(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY JULIANDAY((('~H') ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))), ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))), ((((vt0.c0) NOTNULL))<=(((vt0.c1)=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY JULIANDAY((('~H') ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))), ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))), ((((vt0.c0) NOTNULL))<=(((vt0.c1)==(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY JULIANDAY((('~H') ISNULL), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL))), ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((+ (vt0.c0)), ((vt0.c0)<=(vt0.c0)))), ((((vt0.c0) NOTNULL))<=(((vt0.c1)=(vt0.c1))));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((v0.c0) NOTNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((((197233242)OR(v0.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOTNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((((197233242)OR(v0.c0)))OR(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((v0.c0) NOTNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((((197233242)OR(v0.c0)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOTNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((((197233242)OR(v0.c0)))OR(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY ((((((v0.c0) NOTNULL))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((((197233242)OR(v0.c0)))OR(v0.c0)))) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt0 WHERE (((((NULL)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NULL)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NULL)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN (CASE WHEN 0.7269317030295133 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN (CASE WHEN 0.7269317030295133 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN (CASE WHEN 0.7269317030295133 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN (CASE WHEN 0.7269317030295133 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN (CASE WHEN 0.7269317030295133 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((v0.c0) NOTNULL)) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)) NOT BETWEEN (((+ (rt0.c0)))) AND ((v0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(vt0.c0) COLLATE BINARY) ORDER BY (- (QUOTE(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (QUOTE(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(vt0.c0) COLLATE BINARY) ORDER BY (- (QUOTE(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (QUOTE(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(vt0.c0) COLLATE BINARY) ORDER BY (- (QUOTE(vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0, vt1, v0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (((((vt1.c0))<=((rt0.c1))))>>(CASE WHEN vt1.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, vt1, v0 ORDER BY (((((vt1.c0))<=((rt0.c1))))>>(CASE WHEN vt1.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1, v0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (((((vt1.c0))<=((rt0.c1))))>>(CASE WHEN vt1.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, vt1, v0 ORDER BY (((((vt1.c0))<=((rt0.c1))))>>(CASE WHEN vt1.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1, v0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (((((vt1.c0))<=((rt0.c1))))>>(CASE WHEN vt1.c0 THEN vt0.c1 END));
SELECT * FROM rt0, t0, vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((t0.c65 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((t0.c65 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((t0.c65 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM rt0, t0, vt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((t0.c65 COLLATE NOCASE))) DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((t0.c65 COLLATE NOCASE))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB), NULL COLLATE RTRIM, x'' COLLATE RTRIM))>((((-1236005559) NOT NULL), CASE WHEN '404550060' THEN vt1.c0 END, (((vt1.c0))<>((vt1.c0))))))) ORDER BY GLOB((NOT (x'')), ((vt1.c0)>=(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS BLOB), NULL COLLATE RTRIM, x'' COLLATE RTRIM))>((((-1236005559) NOT NULL), CASE WHEN '404550060' THEN vt1.c0 END, (((vt1.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY GLOB((NOT (x'')), ((vt1.c0)>=(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB), NULL COLLATE RTRIM, x'' COLLATE RTRIM))>((((-1236005559) NOT NULL), CASE WHEN '404550060' THEN vt1.c0 END, (((vt1.c0))<>((vt1.c0))))))) ORDER BY GLOB((NOT (x'')), ((vt1.c0)>=(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS BLOB), NULL COLLATE RTRIM, x'' COLLATE RTRIM))>((((-1236005559) NOT NULL), CASE WHEN '404550060' THEN vt1.c0 END, (((vt1.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY GLOB((NOT (x'')), ((vt1.c0)>=(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB), NULL COLLATE RTRIM, x'' COLLATE RTRIM))>((((-1236005559) NOT NULL), CASE WHEN '404550060' THEN vt1.c0 END, (((vt1.c0))<>((vt1.c0))))))) ORDER BY GLOB((NOT (x'')), ((vt1.c0)>=(vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, vt1, v0 WHERE (((((vt0.c0))<>((t0.c65))) IN ((x'45b2' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<>((t0.c65))) IN ((x'45b2' IN (v0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, v0 WHERE (((((vt0.c0))<>((t0.c65))) IN ((x'45b2' IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<>((t0.c65))) IN ((x'45b2' IN (v0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, v0 WHERE (((((vt0.c0))<>((t0.c65))) IN ((x'45b2' IN (v0.c0)))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (((((((((t0.c69 COLLATE RTRIM)AND((vt0.c1 IN (t0.c69)))))OR(((((vt0.c0)AND(t0.c69)))OR(t0.c69)))))AND(((t0.c90)=(vt0.c1)))))AND(t0.c90 COLLATE RTRIM))) ORDER BY (((((((((((t0.c90))<((vt0.c1))))OR(((vt0.c1) BETWEEN (t0.c90) AND (t0.c69)))))OR(-3.88583332E8)))AND(((vt0.c0)LIKE(t0.c90)))))AND(((t0.c65) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c69 COLLATE RTRIM)AND((vt0.c1 IN (t0.c69)))))OR(((((vt0.c0)AND(t0.c69)))OR(t0.c69)))))AND(((t0.c90)==(vt0.c1)))))AND(t0.c90 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) ORDER BY (((((((((((t0.c90))<((vt0.c1))))OR(((vt0.c1) BETWEEN (t0.c90) AND (t0.c69)))))OR(-3.88583332E8)))AND(((vt0.c0)LIKE(t0.c90)))))AND(((t0.c65) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (((((((((t0.c69 COLLATE RTRIM)AND((vt0.c1 IN (t0.c69)))))OR(((((vt0.c0)AND(t0.c69)))OR(t0.c69)))))AND(((t0.c90)=(vt0.c1)))))AND(t0.c90 COLLATE RTRIM))) ORDER BY (((((((((((t0.c90))<((vt0.c1))))OR(((vt0.c1) BETWEEN (t0.c90) AND (t0.c69)))))OR(-3.88583332E8)))AND(((vt0.c0)LIKE(t0.c90)))))AND(((t0.c65) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c69 COLLATE RTRIM)AND((vt0.c1 IN (t0.c69)))))OR(((((vt0.c0)AND(t0.c69)))OR(t0.c69)))))AND(((t0.c90)==(vt0.c1)))))AND(t0.c90 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) ORDER BY (((((((((((t0.c90))<((vt0.c1))))OR(((vt0.c1) BETWEEN (t0.c90) AND (t0.c69)))))OR(-3.88583332E8)))AND(((vt0.c0)LIKE(t0.c90)))))AND(((t0.c65) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (((((((((t0.c69 COLLATE RTRIM)AND((vt0.c1 IN (t0.c69)))))OR(((((vt0.c0)AND(t0.c69)))OR(t0.c69)))))AND(((t0.c90)=(vt0.c1)))))AND(t0.c90 COLLATE RTRIM))) ORDER BY (((((((((((t0.c90))<((vt0.c1))))OR(((vt0.c1) BETWEEN (t0.c90) AND (t0.c69)))))OR(-3.88583332E8)))AND(((vt0.c0)LIKE(t0.c90)))))AND(((t0.c65) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM v0, rt0, t0 FULL OUTER JOIN vt0 ON (- (t0.c69)) WHERE (((t0.c65 COLLATE BINARY)|(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c65 COLLATE BINARY)|(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, t0 FULL OUTER JOIN vt0 ON (- (t0.c69)));
SELECT ALL COUNT(*) FROM v0, rt0, t0 FULL OUTER JOIN vt0 ON (- (t0.c69)) WHERE (((t0.c65 COLLATE BINARY)|(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c65 COLLATE BINARY)|(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, t0 FULL OUTER JOIN vt0 ON (- (t0.c69)));
SELECT ALL COUNT(*) FROM v0, rt0, t0 FULL OUTER JOIN vt0 ON (- (t0.c69)) WHERE (((t0.c65 COLLATE BINARY)|(((rt0.c1) IS FALSE))));
SELECT ALL * FROM vt1 WHERE (NULLIF(vt1.c0, vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULLIF(vt1.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULLIF(vt1.c0, vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULLIF(vt1.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULLIF(vt1.c0, vt1.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) WHERE (((((vt0.c0)<(vt1.c0))) IS TRUE)) ORDER BY ((((((((vt1.c0 COLLATE BINARY)OR(json_insert(vt0.c1, vt0.c1, vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) ORDER BY ((((((((vt1.c0 COLLATE BINARY)OR(json_insert(vt0.c1, vt0.c1, vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) WHERE (((((vt0.c0)<(vt1.c0))) IS TRUE)) ORDER BY ((((((((vt1.c0 COLLATE BINARY)OR(json_insert(vt0.c1, vt0.c1, vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) ORDER BY ((((((((vt1.c0 COLLATE BINARY)OR(json_insert(vt0.c1, vt0.c1, vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN v0 ON CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) WHERE (((((vt0.c0)<(vt1.c0))) IS TRUE)) ORDER BY ((((((((vt1.c0 COLLATE BINARY)OR(json_insert(vt0.c1, vt0.c1, vt0.c1))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((((t0.c65, rt0.c2, vt0.c0, vt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, t0.c65)) AND ((0.4359907187721621, rt0.c2, rt0.c1, v0.c0, rt0.c1))) AS BLOB) INNER JOIN v0 ON ((ABS(t0.c65)) NOTNULL) INNER JOIN t0 ON (NOT ((~ (rt0.c2)))) WHERE ((~ (((t0.c90)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c90)=(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((((t0.c65, rt0.c2, vt0.c0, vt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, t0.c65)) AND ((0.4359907187721621, rt0.c2, rt0.c1, v0.c0, rt0.c1))) AS BLOB) INNER JOIN v0 ON ((ABS(t0.c65)) NOTNULL) INNER JOIN t0 ON (NOT ((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((((t0.c65, rt0.c2, vt0.c0, vt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, t0.c65)) AND ((0.4359907187721621, rt0.c2, rt0.c1, v0.c0, rt0.c1))) AS BLOB) INNER JOIN v0 ON ((ABS(t0.c65)) NOTNULL) INNER JOIN t0 ON (NOT ((~ (rt0.c2)))) WHERE ((~ (((t0.c90)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c90)=(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((((t0.c65, rt0.c2, vt0.c0, vt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, t0.c65)) AND ((0.4359907187721621, rt0.c2, rt0.c1, v0.c0, rt0.c1))) AS BLOB) INNER JOIN v0 ON ((ABS(t0.c65)) NOTNULL) INNER JOIN t0 ON (NOT ((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((((t0.c65, rt0.c2, vt0.c0, vt0.c1, v0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, t0.c65)) AND ((0.4359907187721621, rt0.c2, rt0.c1, v0.c0, rt0.c1))) AS BLOB) INNER JOIN v0 ON ((ABS(t0.c65)) NOTNULL) INNER JOIN t0 ON (NOT ((~ (rt0.c2)))) WHERE ((~ (((t0.c90)=(rt0.c0)))));
SELECT * FROM rt0, v0, vt1 CROSS JOIN t0 ON 0.8265295047445407 FULL OUTER JOIN vt0 ON ((((((x'') BETWEEN (0.9277668149716483) AND (rt0.c1)))OR(((vt0.c0) NOTNULL))))AND(((vt0.c1)<(t0.c69)))) WHERE ((CASE WHEN '-379702239' THEN t0.c90 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN '-379702239' THEN t0.c90 END IN ())) IS TRUE)  as count FROM rt0, v0, vt1 CROSS JOIN t0 ON 0.8265295047445407 FULL OUTER JOIN vt0 ON ((((((x'') BETWEEN (0.9277668149716483) AND (rt0.c1)))OR(((vt0.c0) NOTNULL))))AND(((vt0.c1)<(t0.c69)))));
SELECT * FROM rt0, v0, vt1 CROSS JOIN t0 ON 0.8265295047445407 FULL OUTER JOIN vt0 ON ((((((x'') BETWEEN (0.9277668149716483) AND (rt0.c1)))OR(((vt0.c0) NOTNULL))))AND(((vt0.c1)<(t0.c69)))) WHERE ((CASE WHEN '-379702239' THEN t0.c90 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN '-379702239' THEN t0.c90 END IN ())) IS TRUE)  as count FROM rt0, v0, vt1 CROSS JOIN t0 ON 0.8265295047445407 FULL OUTER JOIN vt0 ON ((((((x'') BETWEEN (0.9277668149716483) AND (rt0.c1)))OR(((vt0.c0) NOTNULL))))AND(((vt0.c1)<(t0.c69)))));
SELECT * FROM rt0, v0, vt1 CROSS JOIN t0 ON 0.8265295047445407 FULL OUTER JOIN vt0 ON ((((((x'') BETWEEN (0.9277668149716483) AND (rt0.c1)))OR(((vt0.c0) NOTNULL))))AND(((vt0.c1)<(t0.c69)))) WHERE ((CASE WHEN '-379702239' THEN t0.c90 END IN ()));
SELECT * FROM rt0, t0, vt1, vt0, v0 WHERE (x'277d');
SELECT SUM(count) FROM (SELECT ((x'277d') IS TRUE)  as count FROM rt0, t0, vt1, vt0, v0);
SELECT * FROM rt0, t0, vt1, vt0, v0 WHERE (x'277d');
SELECT SUM(count) FROM (SELECT ((x'277d') IS TRUE)  as count FROM rt0, t0, vt1, vt0, v0);
SELECT * FROM rt0, t0, vt1, vt0, v0 WHERE (x'277d');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CAST(t0.c69 AS REAL) IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND((((v0.c0, t0.c69, t0.c65)) BETWEEN ((vt1.c0, t0.c90, t0.c69)) AND ((vt1.c0, v0.c0, vt1.c0))))))AND(((t0.c69)LIKE(t0.c69)))) WHERE ((((((vt1.c0)GLOB(t0.c69))))>((t0.c69 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)GLOB(t0.c69))))>((t0.c69 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (CAST(t0.c69 AS REAL) IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND((((v0.c0, t0.c69, t0.c65)) BETWEEN ((vt1.c0, t0.c90, t0.c69)) AND ((vt1.c0, v0.c0, vt1.c0))))))AND(((t0.c69)LIKE(t0.c69)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CAST(t0.c69 AS REAL) IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND((((v0.c0, t0.c69, t0.c65)) BETWEEN ((vt1.c0, t0.c90, t0.c69)) AND ((vt1.c0, v0.c0, vt1.c0))))))AND(((t0.c69)LIKE(t0.c69)))) WHERE ((((((vt1.c0)GLOB(t0.c69))))>((t0.c69 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)GLOB(t0.c69))))>((t0.c69 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (CAST(t0.c69 AS REAL) IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND((((v0.c0, t0.c69, t0.c65)) BETWEEN ((vt1.c0, t0.c90, t0.c69)) AND ((vt1.c0, v0.c0, vt1.c0))))))AND(((t0.c69)LIKE(t0.c69)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON (CAST(t0.c69 AS REAL) IN ()) FULL OUTER JOIN v0 ON (((((v0.c0 IN ()))AND((((v0.c0, t0.c69, t0.c65)) BETWEEN ((vt1.c0, t0.c90, t0.c69)) AND ((vt1.c0, v0.c0, vt1.c0))))))AND(((t0.c69)LIKE(t0.c69)))) WHERE ((((((vt1.c0)GLOB(t0.c69))))>((t0.c69 COLLATE NOCASE))));
SELECT ALL * FROM vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN ('w1\r902JL') AND (v0.c0))))==((((v0.c0)<>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN ('w1\r902JL') AND (v0.c0))))=((((v0.c0)!=(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN ('w1\r902JL') AND (v0.c0))))==((((v0.c0)<>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN ('w1\r902JL') AND (v0.c0))))=((((v0.c0)!=(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN ('w1\r902JL') AND (v0.c0))))==((((v0.c0)<>(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (1.338037096E9) ORDER BY ((((vt1.c0 IN ())))>((((x'') NOT NULL)))) DESC  NULLS LAST, ((vt1.c0)+(vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((1.338037096E9) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))>((((x'') NOT NULL)))) DESC  NULLS LAST, ((vt1.c0)+(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (1.338037096E9) ORDER BY ((((vt1.c0 IN ())))>((((x'') NOT NULL)))) DESC  NULLS LAST, ((vt1.c0)+(vt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((1.338037096E9) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))>((((x'') NOT NULL)))) DESC  NULLS LAST, ((vt1.c0)+(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (1.338037096E9) ORDER BY ((((vt1.c0 IN ())))>((((x'') NOT NULL)))) DESC  NULLS LAST, ((vt1.c0)+(vt1.c0)) COLLATE RTRIM;
SELECT ALL * FROM v0 WHERE (((((v0.c0)%('-1864875203'))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((v0.c0 IN (v0.c0))))) ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOTNULL) WHEN ((v0.c0) NOT NULL) THEN CAST(NULL AS REAL) END  NULLS LAST, CAST(v0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%('-1864875203'))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOTNULL) WHEN ((v0.c0) NOT NULL) THEN CAST(NULL AS REAL) END  NULLS LAST, CAST(v0.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM v0 WHERE (((((v0.c0)%('-1864875203'))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((v0.c0 IN (v0.c0))))) ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOTNULL) WHEN ((v0.c0) NOT NULL) THEN CAST(NULL AS REAL) END  NULLS LAST, CAST(v0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)%('-1864875203'))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOTNULL) WHEN ((v0.c0) NOT NULL) THEN CAST(NULL AS REAL) END  NULLS LAST, CAST(v0.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM v0 WHERE (((((v0.c0)%('-1864875203'))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND ((v0.c0 IN (v0.c0))))) ORDER BY CASE WHEN (v0.c0 IN ()) THEN v0.c0 WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) NOTNULL) WHEN ((v0.c0) NOT NULL) THEN CAST(NULL AS REAL) END  NULLS LAST, CAST(v0.c0 COLLATE NOCASE AS INTEGER);
SELECT * FROM v0, t0 WHERE (((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c69))) BETWEEN ((t0.c69 IN ())) AND ((('탗㿇氉NXn?')>=('%%vq/{p')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c69))) BETWEEN ((t0.c69 IN ())) AND ((('탗㿇氉NXn?')>=('%%vq/{p'))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c69))) BETWEEN ((t0.c69 IN ())) AND ((('탗㿇氉NXn?')>=('%%vq/{p')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c69))) BETWEEN ((t0.c69 IN ())) AND ((('탗㿇氉NXn?')>=('%%vq/{p'))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c90) NOT BETWEEN (t0.c90) AND (t0.c69))) BETWEEN ((t0.c69 IN ())) AND ((('탗㿇氉NXn?')>=('%%vq/{p')))));
SELECT COUNT(*) FROM v0 WHERE (0.9296207815526332 COLLATE RTRIM) ORDER BY (+ (0.8023592211322721))  NULLS LAST, ((((v0.c0)GLOB(v0.c0)))<(TRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ((0.9296207815526332 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (+ (0.8023592211322721))  NULLS LAST, ((((v0.c0)GLOB(v0.c0)))<(TRIM(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (0.9296207815526332 COLLATE RTRIM) ORDER BY (+ (0.8023592211322721))  NULLS LAST, ((((v0.c0)GLOB(v0.c0)))<(TRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ((0.9296207815526332 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY (+ (0.8023592211322721))  NULLS LAST, ((((v0.c0)GLOB(v0.c0)))<(TRIM(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (0.9296207815526332 COLLATE RTRIM) ORDER BY (+ (0.8023592211322721))  NULLS LAST, ((((v0.c0)GLOB(v0.c0)))<(TRIM(v0.c0)));
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) IS FALSE), ((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2) IS FALSE), ((rt0.c0) NOT BETWEEN ('') AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) IS FALSE), ((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2) IS FALSE), ((rt0.c0) NOT BETWEEN ('') AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) IS FALSE), ((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 2.50616722E8 THEN vt0.c0 WHEN vt0.c1 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c2 END) AND (CASE v0.c0  WHEN vt1.c0 THEN t0.c90 END)) RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN rt0 ON ((((t0.c90 IN ()), '', ((v0.c0) BETWEEN (t0.c69) AND (0.6823322646612644))))<((((rt0.c2)IS NOT(rt0.c0)), ((rt0.c2)>=(v0.c0)), (((rt0.c1))=((t0.c90)))))) CROSS JOIN vt1 ON TRIM(vt0.c0, rt0.c2) COLLATE RTRIM WHERE (((((v0.c0)|(t0.c69))) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(t0.c69))) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 2.50616722E8 THEN vt0.c0 WHEN vt0.c1 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c2 END) AND (CASE v0.c0  WHEN vt1.c0 THEN t0.c90 END)) RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN rt0 ON ((((t0.c90 IN ()), '', ((v0.c0) BETWEEN (t0.c69) AND (0.6823322646612644))))<((((rt0.c2)IS NOT(rt0.c0)), ((rt0.c2)>=(v0.c0)), (((rt0.c1))==((t0.c90)))))) CROSS JOIN vt1 ON TRIM(vt0.c0, rt0.c2) COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 2.50616722E8 THEN vt0.c0 WHEN vt0.c1 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c2 END) AND (CASE v0.c0  WHEN vt1.c0 THEN t0.c90 END)) RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN rt0 ON ((((t0.c90 IN ()), '', ((v0.c0) BETWEEN (t0.c69) AND (0.6823322646612644))))<((((rt0.c2)IS NOT(rt0.c0)), ((rt0.c2)>=(v0.c0)), (((rt0.c1))=((t0.c90)))))) CROSS JOIN vt1 ON TRIM(vt0.c0, rt0.c2) COLLATE RTRIM WHERE (((((v0.c0)|(t0.c69))) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(t0.c69))) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN 2.50616722E8 THEN vt0.c0 WHEN vt0.c1 THEN t0.c65 WHEN vt0.c0 THEN x'' ELSE rt0.c2 END) AND (CASE v0.c0  WHEN vt1.c0 THEN t0.c90 END)) RIGHT OUTER JOIN t0 ON x'' LEFT OUTER JOIN rt0 ON ((((t0.c90 IN ()), '', ((v0.c0) BETWEEN (t0.c69) AND (0.6823322646612644))))<((((rt0.c2)IS NOT(rt0.c0)), ((rt0.c2)>=(v0.c0)), (((rt0.c1))==((t0.c90)))))) CROSS JOIN vt1 ON TRIM(vt0.c0, rt0.c2) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 CROSS JOIN v0 ON (~ (t0.c65 COLLATE NOCASE)) WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM rt0, t0, vt0 CROSS JOIN v0 ON (~ (t0.c65 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 CROSS JOIN v0 ON (~ (t0.c65 COLLATE NOCASE)) WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM rt0, t0, vt0 CROSS JOIN v0 ON (~ (t0.c65 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 CROSS JOIN v0 ON (~ (t0.c65 COLLATE NOCASE)) WHERE ((v0.c0 IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON HEX(NULL) CROSS JOIN vt0 ON ((CASE t0.c65  WHEN rt0.c0 THEN vt1.c0 END)!=(((t0.c69) NOT NULL))) LEFT OUTER JOIN t0 ON t0.c65 COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((((t0.c65)>(vt1.c0)))<<(json(vt1.c0))) WHERE (((t0.c65) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c65) NOT NULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON HEX(NULL) CROSS JOIN vt0 ON ((CASE t0.c65  WHEN rt0.c0 THEN vt1.c0 END)<>(((t0.c69) NOT NULL))) LEFT OUTER JOIN t0 ON t0.c65 COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((((t0.c65)>(vt1.c0)))<<(json(vt1.c0))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON HEX(NULL) CROSS JOIN vt0 ON ((CASE t0.c65  WHEN rt0.c0 THEN vt1.c0 END)!=(((t0.c69) NOT NULL))) LEFT OUTER JOIN t0 ON t0.c65 COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((((t0.c65)>(vt1.c0)))<<(json(vt1.c0))) WHERE (((t0.c65) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c65) NOT NULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON HEX(NULL) CROSS JOIN vt0 ON ((CASE t0.c65  WHEN rt0.c0 THEN vt1.c0 END)<>(((t0.c69) NOT NULL))) LEFT OUTER JOIN t0 ON t0.c65 COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((((t0.c65)>(vt1.c0)))<<(json(vt1.c0))));
SELECT ALL * FROM t0, vt1, vt0, rt0 INNER JOIN v0 ON ((((t0.c65)>=(vt1.c0)))!=(vt1.c0)) WHERE (CASE WHEN CAST(t0.c65 AS BLOB) THEN t0.c69 WHEN LIKELY(rt0.c1) THEN (t0.c90 IN ()) WHEN NULLIF(vt1.c0, '\n''') THEN (rt0.c1 IN ()) ELSE ((vt0.c1)IS(t0.c90)) END) ORDER BY CAST(t0.c69 COLLATE NOCASE AS BLOB) DESC, (((((((t0.c90))<((vt0.c0))))OR(CHAR(t0.c90))))AND(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c65 AS BLOB) THEN t0.c69 WHEN LIKELY(rt0.c1) THEN (t0.c90 IN ()) WHEN NULLIF(vt1.c0, '\n''') THEN (rt0.c1 IN ()) ELSE ((vt0.c1)IS(t0.c90)) END) IS TRUE)  as count FROM t0, vt1, vt0, rt0 INNER JOIN v0 ON ((((t0.c65)>=(vt1.c0)))!=(vt1.c0)) ORDER BY CAST(t0.c69 COLLATE NOCASE AS BLOB) DESC, (((((((t0.c90))<((vt0.c0))))OR(CHAR(t0.c90))))AND(v0.c0)));
SELECT ALL * FROM t0, vt1, vt0, rt0 INNER JOIN v0 ON ((((t0.c65)>=(vt1.c0)))!=(vt1.c0)) WHERE (CASE WHEN CAST(t0.c65 AS BLOB) THEN t0.c69 WHEN LIKELY(rt0.c1) THEN (t0.c90 IN ()) WHEN NULLIF(vt1.c0, '\n''') THEN (rt0.c1 IN ()) ELSE ((vt0.c1)IS(t0.c90)) END) ORDER BY CAST(t0.c69 COLLATE NOCASE AS BLOB) DESC, (((((((t0.c90))<((vt0.c0))))OR(CHAR(t0.c90))))AND(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c65 AS BLOB) THEN t0.c69 WHEN LIKELY(rt0.c1) THEN (t0.c90 IN ()) WHEN NULLIF(vt1.c0, '\n''') THEN (rt0.c1 IN ()) ELSE ((vt0.c1)IS(t0.c90)) END) IS TRUE)  as count FROM t0, vt1, vt0, rt0 INNER JOIN v0 ON ((((t0.c65)>=(vt1.c0)))!=(vt1.c0)) ORDER BY CAST(t0.c69 COLLATE NOCASE AS BLOB) DESC, (((((((t0.c90))<((vt0.c0))))OR(CHAR(t0.c90))))AND(v0.c0)));
SELECT ALL * FROM t0, vt1, vt0, rt0 INNER JOIN v0 ON ((((t0.c65)>=(vt1.c0)))!=(vt1.c0)) WHERE (CASE WHEN CAST(t0.c65 AS BLOB) THEN t0.c69 WHEN LIKELY(rt0.c1) THEN (t0.c90 IN ()) WHEN NULLIF(vt1.c0, '\n''') THEN (rt0.c1 IN ()) ELSE ((vt0.c1)IS(t0.c90)) END) ORDER BY CAST(t0.c69 COLLATE NOCASE AS BLOB) DESC, (((((((t0.c90))<((vt0.c0))))OR(CHAR(t0.c90))))AND(v0.c0));
SELECT * FROM vt1, rt0, v0 CROSS JOIN t0 ON ((((((vt1.c0)+(vt1.c0)))AND((x'' IN (t0.c65)))))OR(rt0.c2 COLLATE BINARY)) WHERE ((((((t0.c90)) BETWEEN ((t0.c69)) AND ((vt1.c0)))) NOT BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((vt1.c0)GLOB(rt0.c1))))) ORDER BY (- (HEX(v0.c0))) ASC, (- (t0.c65)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((t0.c90)) BETWEEN ((t0.c69)) AND ((vt1.c0)))) NOT BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((vt1.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, v0 CROSS JOIN t0 ON ((((((vt1.c0)+(vt1.c0)))AND((x'' IN (t0.c65)))))OR(rt0.c2 COLLATE BINARY)) ORDER BY (- (HEX(v0.c0))) ASC, (- (t0.c65)) COLLATE RTRIM);
SELECT * FROM vt1, rt0, v0 CROSS JOIN t0 ON ((((((vt1.c0)+(vt1.c0)))AND((x'' IN (t0.c65)))))OR(rt0.c2 COLLATE BINARY)) WHERE ((((((t0.c90)) BETWEEN ((t0.c69)) AND ((vt1.c0)))) NOT BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((vt1.c0)GLOB(rt0.c1))))) ORDER BY (- (HEX(v0.c0))) ASC, (- (t0.c65)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((t0.c90)) BETWEEN ((t0.c69)) AND ((vt1.c0)))) NOT BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((vt1.c0)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, v0 CROSS JOIN t0 ON ((((((vt1.c0)+(vt1.c0)))AND((x'' IN (t0.c65)))))OR(rt0.c2 COLLATE BINARY)) ORDER BY (- (HEX(v0.c0))) ASC, (- (t0.c65)) COLLATE RTRIM);
SELECT * FROM vt1, rt0, v0 CROSS JOIN t0 ON ((((((vt1.c0)+(vt1.c0)))AND((x'' IN (t0.c65)))))OR(rt0.c2 COLLATE BINARY)) WHERE ((((((t0.c90)) BETWEEN ((t0.c69)) AND ((vt1.c0)))) NOT BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (((vt1.c0)GLOB(rt0.c1))))) ORDER BY (- (HEX(v0.c0))) ASC, (- (t0.c65)) COLLATE RTRIM;
SELECT * FROM t0 WHERE (((((((((t0.c65)AND(LIKELIHOOD(0.4707711566160765, 0.3094873962040373))))OR((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69))))))OR(((((t0.c69)AND(t0.c65)))OR(t0.c69)))))OR(t0.c69))) ORDER BY t0.c65  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c65)AND(LIKELIHOOD(0.4707711566160765, 0.3094873962040373))))OR((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69))))))OR(((((t0.c69)AND(t0.c65)))OR(t0.c69)))))OR(t0.c69))) IS TRUE)  as count FROM t0 ORDER BY t0.c65  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((t0.c65)AND(LIKELIHOOD(0.4707711566160765, 0.3094873962040373))))OR((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69))))))OR(((((t0.c69)AND(t0.c65)))OR(t0.c69)))))OR(t0.c69))) ORDER BY t0.c65  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c65)AND(LIKELIHOOD(0.4707711566160765, 0.3094873962040373))))OR((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69))))))OR(((((t0.c69)AND(t0.c65)))OR(t0.c69)))))OR(t0.c69))) IS TRUE)  as count FROM t0 ORDER BY t0.c65  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((t0.c65)AND(LIKELIHOOD(0.4707711566160765, 0.3094873962040373))))OR((((t0.c90)) BETWEEN ((t0.c69)) AND ((t0.c69))))))OR(((((t0.c69)AND(t0.c65)))OR(t0.c69)))))OR(t0.c69))) ORDER BY t0.c65  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))|((~ ('-1042830798'))))) ORDER BY ((((- (v0.c0))))<>((v0.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0)))|((~ ('-1042830798'))))) IS TRUE)  as count FROM v0 ORDER BY ((((- (v0.c0))))!=((v0.c0 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))|((~ ('-1042830798'))))) ORDER BY ((((- (v0.c0))))<>((v0.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0)))|((~ ('-1042830798'))))) IS TRUE)  as count FROM v0 ORDER BY ((((- (v0.c0))))!=((v0.c0 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))|((~ ('-1042830798'))))) ORDER BY ((((- (v0.c0))))<>((v0.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (0.37971619141561097 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (0.37971619141561097 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (0.37971619141561097 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (0.37971619141561097 COLLATE BINARY IN ()) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (0.37971619141561097 COLLATE BINARY IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t0, rt0, v0 WHERE ((((((((vt0.c1)AND(t0.c90)))OR(vt0.c1)), ((vt0.c0)<<(vt0.c0)), ((((t0.c90)OR(rt0.c2)))OR(vt0.c1)), ((vt0.c0) NOTNULL), (-2.12206982E8 IN (vt0.c0))))<=((('' IN ()), ((v0.c0)AND(t0.c90)), t0.c65 COLLATE NOCASE, (rt0.c0 IN ()), rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(t0.c90)))OR(vt0.c1)), ((vt0.c0)<<(vt0.c0)), ((((t0.c90)OR(rt0.c2)))OR(vt0.c1)), ((vt0.c0) NOTNULL), (-2.12206982E8 IN (vt0.c0))))<=((('' IN ()), ((v0.c0)AND(t0.c90)), t0.c65 COLLATE NOCASE, (rt0.c0 IN ()), rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0, v0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0, v0 WHERE ((((((((vt0.c1)AND(t0.c90)))OR(vt0.c1)), ((vt0.c0)<<(vt0.c0)), ((((t0.c90)OR(rt0.c2)))OR(vt0.c1)), ((vt0.c0) NOTNULL), (-2.12206982E8 IN (vt0.c0))))<=((('' IN ()), ((v0.c0)AND(t0.c90)), t0.c65 COLLATE NOCASE, (rt0.c0 IN ()), rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(t0.c90)))OR(vt0.c1)), ((vt0.c0)<<(vt0.c0)), ((((t0.c90)OR(rt0.c2)))OR(vt0.c1)), ((vt0.c0) NOTNULL), (-2.12206982E8 IN (vt0.c0))))<=((('' IN ()), ((v0.c0)AND(t0.c90)), t0.c65 COLLATE NOCASE, (rt0.c0 IN ()), rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0, v0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0, v0 WHERE ((((((((vt0.c1)AND(t0.c90)))OR(vt0.c1)), ((vt0.c0)<<(vt0.c0)), ((((t0.c90)OR(rt0.c2)))OR(vt0.c1)), ((vt0.c0) NOTNULL), (-2.12206982E8 IN (vt0.c0))))<=((('' IN ()), ((v0.c0)AND(t0.c90)), t0.c65 COLLATE NOCASE, (rt0.c0 IN ()), rt0.c0))));
