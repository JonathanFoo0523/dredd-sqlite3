-- Time: 2024/06/10 00:35:28
-- Database: database2
-- Database version: 3.40.0
-- seed value: 2540919502
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 2ms;
PRAGMA automatic_index = false; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 'i.BD', NULL, '', NULL); -- 1ms;
PRAGMA optimize; -- 1ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2 UNINDEXED, content=''); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES ('-1820773761', 0.2165927510221769, 0X55a2ecc9, '', NULL), (0x28cbab3e, '', NULL, '1802668202', 0.2563380457929869), (0.31261823714199943, x'70f0931c', 0.3074051058302161, x'', 0.44793902444924283); -- 0ms;
PRAGMA main.journal_mode = MEMORY; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3, c4) VALUES (x'', '', '', x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1820773761'); -- 0ms;
PRAGMA stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 noskipscan'); -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (0xffffffffddc04a30, x'c455', 0.808009935178735, x'', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL); -- 0ms;
DELETE FROM rt0; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c2, c3, c0) VALUES (NULL, NULL, '1436740809', 0X2be0fb75); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2, c4) VALUES (x'', NULL, x'', '284245452'), (NULL, '322770844', x'3b1a', 'Aꬾ8Z'), (0.2987630984570997, NULL, 0.31261823714199943, x''), (0.7861029666545202, x'', '1802668202', '1761314370'), (NULL, NULL, x'', 0xffffffffe2a2c64f); -- 0ms;
DROP TABLE vt0; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c4, c0, c2) VALUES (x'a727', 0.2563380457929869, 0.7079530467743993, NULL); -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.busy_timeout = 8134155306937881355; -- 0ms;
INSERT OR REPLACE INTO rt0(c4) VALUES (''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0xfffffffff3000db1) WHERE rt0.c1; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c4, c2) VALUES (((((('1761314370' IN ()))AND((((563125185, 0.9524357400041199, 0.2987630984570997))<=((0.2987630984570997, x'', x''))))))OR((x'' IN ()))), x'', '0.44793902444924283'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c4, c3, c1) VALUES ('', x'', '', -128025745); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1) VALUES ('', 'aꬾ8z'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES ('322770844', x''); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c0, c4) VALUES (NULL, x'', '2020449120'), (0.2987630984570997, '322770844', '0.2165927510221769'), ('', x'', 'Yd]k'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt0 SET c2='3', c2=x'', c3=NULL WHERE ((CAST('' AS NUMERIC))OR(UNLIKELY(DISTINCT rt0.c0))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0.068044663687167); -- 1ms;
PRAGMA mmap_size = -8081546743413635790; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x''), (0Xffffffffdb1b57ca), (NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c3, c2) VALUES (0.31261823714199943, NULL, NULL); -- 0ms;
PRAGMA optimize; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(563125185); -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR FAIL INTO rt0(c2, c4) VALUES (x'', x'0b91'); -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT (((rt1.c0 IN ()))+(MAX(rt1.c2))), (+ ((- ('呼eCrN')))), (((((((((((((((rt0.c1)AND(rt0.c4)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1))))>((((((rt0.c4)AND(rt1.c0)))OR(rt0.c1))))) FROM rt1, rt0 WHERE (CAST((((''))>=((x''))) AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (0.14634791099054056), (-1608660555), (x'031d'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('YS(%q', NULL, NULL, x'', x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(235259957) WHERE CASE rt0.c2  WHEN rt0.c2 THEN x'' ELSE NULL END COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c0) VALUES (NULL, x''); -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES ('-375354280'); -- 1ms;
INSERT OR FAIL INTO rt1(c1, c2) VALUES (0.9524357400041199, NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON 0.6450879680107194 LEFT OUTER JOIN rt1 ON '1436740809' WHERE (((((rt0.c0)<>(NULL))) NOT BETWEEN ((NOT (rt0.c3))) AND (TRIM(DISTINCT rt0.c1, rt1.c1)))) ORDER BY ((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c4)))AND((rt0.c1 IN ()))))AND(((rt0.c3)<=(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(NULL))) NOT BETWEEN ((NOT (rt0.c3))) AND (TRIM(DISTINCT rt0.c1, rt1.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON 0.6450879680107194 LEFT OUTER JOIN rt1 ON '1436740809' ORDER BY ((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c4)))AND((rt0.c1 IN ()))))AND(((rt0.c3)<=(rt0.c4))))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON 0.6450879680107194 LEFT OUTER JOIN rt1 ON '1436740809' WHERE (((((rt0.c0)<>(NULL))) NOT BETWEEN ((NOT (rt0.c3))) AND (TRIM(DISTINCT rt0.c1, rt1.c1)))) ORDER BY ((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c4)))AND((rt0.c1 IN ()))))AND(((rt0.c3)<=(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(NULL))) NOT BETWEEN ((NOT (rt0.c3))) AND (TRIM(DISTINCT rt0.c1, rt1.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON 0.6450879680107194 LEFT OUTER JOIN rt1 ON '1436740809' ORDER BY ((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c4)))AND((rt0.c1 IN ()))))AND(((rt0.c3)<=(rt0.c4))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (TRIM(((rt0.c4)GLOB(rt1.c2)), ((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c4)GLOB(rt1.c2)), ((rt0.c1) IS TRUE))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (TRIM(((rt0.c4)GLOB(rt1.c2)), ((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c4)GLOB(rt1.c2)), ((rt0.c1) IS TRUE))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (TRIM(((rt0.c4)GLOB(rt1.c2)), ((rt0.c1) IS TRUE)));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c3)/(rt0.c0)) IN ()) WHERE (((((CAST(rt1.c2 AS TEXT))OR((rt1.c1 IN ()))))OR(CAST(rt0.c4 AS BLOB)))) ORDER BY (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)) IN (((rt1.c2) NOT BETWEEN (NULL) AND (rt0.c2)), rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS TEXT))OR((rt1.c1 IN ()))))OR(CAST(rt0.c4 AS BLOB)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c3)/(rt0.c0)) IN ()) ORDER BY (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)) IN (((rt1.c2) NOT BETWEEN (NULL) AND (rt0.c2)), rt0.c1)));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c3)/(rt0.c0)) IN ()) WHERE (((((CAST(rt1.c2 AS TEXT))OR((rt1.c1 IN ()))))OR(CAST(rt0.c4 AS BLOB)))) ORDER BY (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)) IN (((rt1.c2) NOT BETWEEN (NULL) AND (rt0.c2)), rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS TEXT))OR((rt1.c1 IN ()))))OR(CAST(rt0.c4 AS BLOB)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c3)/(rt0.c0)) IN ()) ORDER BY (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)) IN (((rt1.c2) NOT BETWEEN (NULL) AND (rt0.c2)), rt0.c1)));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON (((rt0.c3)/(rt0.c0)) IN ()) WHERE (((((CAST(rt1.c2 AS TEXT))OR((rt1.c1 IN ()))))OR(CAST(rt0.c4 AS BLOB)))) ORDER BY (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c3)) IN (((rt1.c2) NOT BETWEEN (NULL) AND (rt0.c2)), rt0.c1));
SELECT * FROM rt0 WHERE ((CAST(0.8025517605911158 AS NUMERIC) IN ('1e500000'))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, 0.8670857432816451) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(0.8025517605911158 AS NUMERIC) IN ('1e500000'))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, 0.8670857432816451) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((CAST(0.8025517605911158 AS NUMERIC) IN ('1e500000'))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, 0.8670857432816451) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(0.8025517605911158 AS NUMERIC) IN ('1e500000'))) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, 0.8670857432816451) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((CAST(0.8025517605911158 AS NUMERIC) IN ('1e500000'))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END, 0.8670857432816451) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (CAST('P,' AS INTEGER)) ORDER BY '1671670406' DESC;
SELECT SUM(count) FROM (SELECT ((CAST('P,' AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY '1671670406' DESC);
SELECT ALL * FROM rt0, v0 WHERE (CAST('P,' AS INTEGER)) ORDER BY '1671670406' DESC;
SELECT SUM(count) FROM (SELECT ((CAST('P,' AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY '1671670406' DESC);
SELECT ALL * FROM rt0, v0 WHERE (CAST('P,' AS INTEGER)) ORDER BY '1671670406' DESC;
SELECT COUNT(*) FROM rt1, v0 WHERE (CASE WHEN rt1.c2 THEN NULL ELSE ((rt1.c1)+(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN NULL ELSE ((rt1.c1)+(v0.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED, v0 NOT INDEXED);
SELECT COUNT(*) FROM rt1, v0 WHERE (CASE WHEN rt1.c2 THEN NULL ELSE ((rt1.c1)+(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN NULL ELSE ((rt1.c1)+(v0.c1)) END) IS TRUE)  as count FROM rt1 NOT INDEXED, v0 NOT INDEXED);
SELECT COUNT(*) FROM rt1, v0 WHERE (CASE WHEN rt1.c2 THEN NULL ELSE ((rt1.c1)+(v0.c1)) END);
SELECT COUNT(*) FROM v0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (x'')));
SELECT ALL * FROM v0, rt1 WHERE ((((((rt1.c1) IS TRUE)))<((((0.7695985322769118) BETWEEN (rt1.c2) AND (v0.c1)))))) ORDER BY ((- (v0.c1)) IN ((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) IS TRUE)))<((((0.7695985322769118) BETWEEN (rt1.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((- (v0.c1)) IN ((~ (rt1.c0)))));
SELECT ALL * FROM v0, rt1 WHERE ((((((rt1.c1) IS TRUE)))<((((0.7695985322769118) BETWEEN (rt1.c2) AND (v0.c1)))))) ORDER BY ((- (v0.c1)) IN ((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) IS TRUE)))<((((0.7695985322769118) BETWEEN (rt1.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((- (v0.c1)) IN ((~ (rt1.c0)))));
SELECT ALL * FROM v0, rt1 WHERE ((((((rt1.c1) IS TRUE)))<((((0.7695985322769118) BETWEEN (rt1.c2) AND (v0.c1)))))) ORDER BY ((- (v0.c1)) IN ((~ (rt1.c0))));
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC))<=(CAST(rt1.c2 AS REAL)))) ORDER BY (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC))<=(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC))<=(CAST(rt1.c2 AS REAL)))) ORDER BY (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC))<=(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC))<=(CAST(rt1.c2 AS REAL)))) ORDER BY (((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)) IN ())  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY CASE NULL  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE NULL  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY CASE NULL  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE NULL  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (rt0.c0) ORDER BY CASE NULL  WHEN v0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN v0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE NOCASE;
SELECT * FROM rt0, v0 WHERE ((NOT (v0.c2))) ORDER BY (((rt0.c2 IN ())) NOT NULL)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c2))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2 IN ())) NOT NULL)  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((NOT (v0.c2))) ORDER BY (((rt0.c2 IN ())) NOT NULL)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (v0.c2))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c2 IN ())) NOT NULL)  NULLS LAST, rt0.c2  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((NOT (v0.c2))) ORDER BY (((rt0.c2 IN ())) NOT NULL)  NULLS LAST, rt0.c2  NULLS FIRST;
SELECT * FROM v0 WHERE (0.9338094043637375);
SELECT SUM(count) FROM (SELECT ((0.9338094043637375) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.9338094043637375);
SELECT SUM(count) FROM (SELECT ((0.9338094043637375) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.9338094043637375);
SELECT ALL * FROM rt0 WHERE (x'e353');
SELECT SUM(count) FROM (SELECT ALL ((x'e353') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'e353');
SELECT SUM(count) FROM (SELECT ALL ((x'e353') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'e353');
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((rt1.c0 IN ())))) ORDER BY ((((rt1.c0) IS FALSE))<=(((rt1.c0)GLOB(rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) IS FALSE))<=(((rt1.c0)GLOB(rt1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((rt1.c0 IN ())))) ORDER BY ((((rt1.c0) IS FALSE))<=(((rt1.c0)GLOB(rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) IS FALSE))<=(((rt1.c0)GLOB(rt1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ ((rt1.c0 IN ())))) ORDER BY ((((rt1.c0) IS FALSE))<=(((rt1.c0)GLOB(rt1.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c2)%(rt0.c0)), ((rt0.c0)+(rt0.c4)))) ORDER BY ((((rt0.c3)%(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c4)) DESC, CASE CAST(rt0.c4 AS BLOB)  WHEN CASE WHEN rt0.c4 THEN x'6e71' ELSE rt0.c3 END THEN NULLIF(rt0.c4, rt0.c3) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c3))=((rt0.c1))) WHEN ((rt0.c4)LIKE(x'')) THEN ((rt0.c0)<(rt0.c3)) ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c2)%(rt0.c0)), ((rt0.c0)+(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)%(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c4)) DESC, CASE CAST(rt0.c4 AS BLOB)  WHEN CASE WHEN rt0.c4 THEN x'6e71' ELSE rt0.c3 END THEN NULLIF(rt0.c4, rt0.c3) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c3))==((rt0.c1))) WHEN ((rt0.c4)LIKE(x'')) THEN ((rt0.c0)<(rt0.c3)) ELSE (rt0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c2)%(rt0.c0)), ((rt0.c0)+(rt0.c4)))) ORDER BY ((((rt0.c3)%(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c4)) DESC, CASE CAST(rt0.c4 AS BLOB)  WHEN CASE WHEN rt0.c4 THEN x'6e71' ELSE rt0.c3 END THEN NULLIF(rt0.c4, rt0.c3) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c3))=((rt0.c1))) WHEN ((rt0.c4)LIKE(x'')) THEN ((rt0.c0)<(rt0.c3)) ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c2)%(rt0.c0)), ((rt0.c0)+(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)%(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c4)) DESC, CASE CAST(rt0.c4 AS BLOB)  WHEN CASE WHEN rt0.c4 THEN x'6e71' ELSE rt0.c3 END THEN NULLIF(rt0.c4, rt0.c3) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c3))==((rt0.c1))) WHEN ((rt0.c4)LIKE(x'')) THEN ((rt0.c0)<(rt0.c3)) ELSE (rt0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c2)%(rt0.c0)), ((rt0.c0)+(rt0.c4)))) ORDER BY ((((rt0.c3)%(rt0.c3))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c4)) DESC, CASE CAST(rt0.c4 AS BLOB)  WHEN CASE WHEN rt0.c4 THEN x'6e71' ELSE rt0.c3 END THEN NULLIF(rt0.c4, rt0.c3) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c3))=((rt0.c1))) WHEN ((rt0.c4)LIKE(x'')) THEN ((rt0.c0)<(rt0.c3)) ELSE (rt0.c1 IN ()) END;
SELECT * FROM rt1 WHERE (((((rt1.c2)IS(rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS(rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS(rt1.c0))) IS TRUE));
SELECT * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0)<>(v0.c2)) AS BLOB) CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))) WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY (~ (LIKELY(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0)!=(v0.c2)) AS BLOB) CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))) ORDER BY (~ (LIKELY(DISTINCT rt0.c4))));
SELECT * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0)<>(v0.c2)) AS BLOB) CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))) WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY (~ (LIKELY(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0)!=(v0.c2)) AS BLOB) CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))) ORDER BY (~ (LIKELY(DISTINCT rt0.c4))));
SELECT * FROM rt0 INNER JOIN rt1 ON CAST(((rt1.c0)<>(v0.c2)) AS BLOB) CROSS JOIN v0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) BETWEEN (rt0.c1) AND (v0.c1))) WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY (~ (LIKELY(DISTINCT rt0.c4)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN -2007608363 ELSE CASE WHEN rt0.c4 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN -2007608363 ELSE CASE WHEN rt0.c4 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN -2007608363 ELSE CASE WHEN rt0.c4 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN -2007608363 ELSE CASE WHEN rt0.c4 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN -2007608363 ELSE CASE WHEN rt0.c4 THEN rt0.c1 END END);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c2 AS REAL) END) ORDER BY NULL  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN ('')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN ('')))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c2 AS REAL) END) ORDER BY NULL  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN ('')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM rt1 ORDER BY NULL  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN ('')))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE WHEN (rt1.c1 IN ()) THEN CAST(rt1.c2 AS REAL) END) ORDER BY NULL  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE BINARY)) AND (((rt1.c1 IN ('')))))  NULLS FIRST;
SELECT * FROM rt1, v0 WHERE (CASE WHEN HEX('-1153150163') THEN v0.c2 WHEN ((v0.c1)||(rt1.c1)) THEN ('~*' IN (rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN rt1.c2 ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX('-1153150163') THEN v0.c2 WHEN ((v0.c1)||(rt1.c1)) THEN ('~*' IN (rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN rt1.c2 ELSE v0.c0 END) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (CASE WHEN HEX('-1153150163') THEN v0.c2 WHEN ((v0.c1)||(rt1.c1)) THEN ('~*' IN (rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN rt1.c2 ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX('-1153150163') THEN v0.c2 WHEN ((v0.c1)||(rt1.c1)) THEN ('~*' IN (rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN rt1.c2 ELSE v0.c0 END) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (CASE WHEN HEX('-1153150163') THEN v0.c2 WHEN ((v0.c1)||(rt1.c1)) THEN ('~*' IN (rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN rt1.c2 ELSE v0.c0 END);
SELECT * FROM rt0 NOT INDEXED, rt1, v0 WHERE (((CASE rt1.c1  WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0 NOT INDEXED, rt1, v0 WHERE (((CASE rt1.c1  WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0 NOT INDEXED, rt1, v0 WHERE (((CASE rt1.c1  WHEN rt0.c0 THEN v0.c1 WHEN rt0.c1 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 END) IS TRUE));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((+ (rt0.c0))))!=((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c0))))<>((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((+ (rt0.c0))))!=((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c0))))<>((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((+ (rt0.c0))))!=((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2))))));
SELECT ALL * FROM v0 WHERE (-365219673) ORDER BY CASE WHEN v0.c0 THEN ((v0.c1)>(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((-365219673) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c1)>(v0.c0)) END ASC);
SELECT ALL * FROM v0 WHERE (-365219673) ORDER BY CASE WHEN v0.c0 THEN ((v0.c1)>(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((-365219673) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c1)>(v0.c0)) END ASC);
SELECT ALL * FROM v0 WHERE (-365219673) ORDER BY CASE WHEN v0.c0 THEN ((v0.c1)>(v0.c0)) END ASC;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((CASE WHEN rt0.c1 THEN v0.c0 END)%((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt0.c2)))))) ORDER BY (((v0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN v0.c0 END)%((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((v0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((CASE WHEN rt0.c1 THEN v0.c0 END)%((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt0.c2)))))) ORDER BY (((v0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN v0.c0 END)%((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((v0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((CASE WHEN rt0.c1 THEN v0.c0 END)%((((rt1.c2)) BETWEEN ((v0.c2)) AND ((rt0.c2)))))) ORDER BY (((v0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT * FROM rt1 WHERE (json_extract((NOT (rt1.c2)), ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) ORDER BY (- (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract((NOT (rt1.c2)), ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (- (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (json_extract((NOT (rt1.c2)), ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) ORDER BY (- (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract((NOT (rt1.c2)), ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (- (((((rt1.c2)AND(rt1.c2)))OR(rt1.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c2 END)GLOB(((v0.c0) BETWEEN (NULL) AND (v0.c1))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c2 END)GLOB(((v0.c0) BETWEEN (NULL) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c2 END)GLOB(((v0.c0) BETWEEN (NULL) AND (v0.c1))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c2 END)GLOB(((v0.c0) BETWEEN (NULL) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c2 END)GLOB(((v0.c0) BETWEEN (NULL) AND (v0.c1))))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((rt1.c0)!=(rt0.c0)))/(((((rt0.c2)AND(v0.c0)))AND(v0.c2))))) ORDER BY ((rt1.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))) AND (((v0.c1)OR(rt0.c3)))), (((v0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))), CAST(rt1.c1 AS BLOB))) AND ((((rt1.c0)&(rt0.c4)), CASE WHEN v0.c1 THEN rt0.c2 ELSE rt0.c0 END, ((v0.c1)IS(v0.c2))))), rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)!=(rt0.c0)))/(((((rt0.c2)AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((rt1.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))) AND (((v0.c1)OR(rt0.c3)))), (((v0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))), CAST(rt1.c1 AS BLOB))) AND ((((rt1.c0)&(rt0.c4)), CASE WHEN v0.c1 THEN rt0.c2 ELSE rt0.c0 END, ((v0.c1)IS(v0.c2))))), rt0.c0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((rt1.c0)!=(rt0.c0)))/(((((rt0.c2)AND(v0.c0)))AND(v0.c2))))) ORDER BY ((rt1.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))) AND (((v0.c1)OR(rt0.c3)))), (((v0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))), CAST(rt1.c1 AS BLOB))) AND ((((rt1.c0)&(rt0.c4)), CASE WHEN v0.c1 THEN rt0.c2 ELSE rt0.c0 END, ((v0.c1)IS(v0.c2))))), rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)!=(rt0.c0)))/(((((rt0.c2)AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((rt1.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))) AND (((v0.c1)OR(rt0.c3)))), (((v0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))), CAST(rt1.c1 AS BLOB))) AND ((((rt1.c0)&(rt0.c4)), CASE WHEN v0.c1 THEN rt0.c2 ELSE rt0.c0 END, ((v0.c1)IS(v0.c2))))), rt0.c0);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((rt1.c0)!=(rt0.c0)))/(((((rt0.c2)AND(v0.c0)))AND(v0.c2))))) ORDER BY ((rt1.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2))) AND (((v0.c1)OR(rt0.c3)))), (((v0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((((rt1.c2) NOT NULL), (((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))), CAST(rt1.c1 AS BLOB))) AND ((((rt1.c0)&(rt0.c4)), CASE WHEN v0.c1 THEN rt0.c2 ELSE rt0.c0 END, ((v0.c1)IS(v0.c2))))), rt0.c0;
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (rt1.c1)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)), ((((((((0x68fb8642)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)), rt1.c1 COLLATE BINARY))>(((~ ('-1153150163')), ((rt1.c2) IS FALSE), TRIM(DISTINCT rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)), ((((((((0x68fb8642)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)), rt1.c1 COLLATE BINARY))>(((~ ('-1153150163')), ((rt1.c2) IS FALSE), TRIM(DISTINCT rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)), ((((((((0x68fb8642)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)), rt1.c1 COLLATE BINARY))>(((~ ('-1153150163')), ((rt1.c2) IS FALSE), TRIM(DISTINCT rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)), ((((((((0x68fb8642)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)), rt1.c1 COLLATE BINARY))>(((~ ('-1153150163')), ((rt1.c2) IS FALSE), TRIM(DISTINCT rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)), ((((((((0x68fb8642)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)), rt1.c1 COLLATE BINARY))>(((~ ('-1153150163')), ((rt1.c2) IS FALSE), TRIM(DISTINCT rt1.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (~ ((((rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, x'', rt1.c1, 0.4859505261551501, rt0.c2)) AND ((x'', '', x'', rt1.c2, rt0.c2))))) WHERE ((((((rt0.c4))==((rt0.c3))))IS(rt0.c3))) ORDER BY (((((- (0.009156331269626672)))OR((- (rt0.c2)))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))=((rt0.c3))))IS(rt0.c3))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (~ ((((rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, x'', rt1.c1, 0.4859505261551501, rt0.c2)) AND ((x'', '', x'', rt1.c2, rt0.c2))))) ORDER BY (((((- (0.009156331269626672)))OR((- (rt0.c2)))))AND(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (~ ((((rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, x'', rt1.c1, 0.4859505261551501, rt0.c2)) AND ((x'', '', x'', rt1.c2, rt0.c2))))) WHERE ((((((rt0.c4))==((rt0.c3))))IS(rt0.c3))) ORDER BY (((((- (0.009156331269626672)))OR((- (rt0.c2)))))AND(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))=((rt0.c3))))IS(rt0.c3))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (~ ((((rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, x'', rt1.c1, 0.4859505261551501, rt0.c2)) AND ((x'', '', x'', rt1.c2, rt0.c2))))) ORDER BY (((((- (0.009156331269626672)))OR((- (rt0.c2)))))AND(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (~ ((((rt0.c0, rt1.c1, rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((rt0.c3, x'', rt1.c1, 0.4859505261551501, rt0.c2)) AND ((x'', '', x'', rt1.c2, rt0.c2))))) WHERE ((((((rt0.c4))==((rt0.c3))))IS(rt0.c3))) ORDER BY (((((- (0.009156331269626672)))OR((- (rt0.c2)))))AND(NULL))  NULLS FIRST;
SELECT * FROM rt1, v0, rt0 WHERE (CAST(((NULL) BETWEEN (v0.c1) AND ('322810226')) AS TEXT)) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (v0.c1) AND ('322810226')) AS TEXT)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY rt1.c2);
SELECT * FROM rt1, v0, rt0 WHERE (CAST(((NULL) BETWEEN (v0.c1) AND ('322810226')) AS TEXT)) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (v0.c1) AND ('322810226')) AS TEXT)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY rt1.c2);
SELECT * FROM rt1, v0, rt0 WHERE (CAST(((NULL) BETWEEN (v0.c1) AND ('322810226')) AS TEXT)) ORDER BY rt1.c2;
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((v0.c0) ISNULL)) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN 0.7695985322769118 WHEN v0.c1 THEN rt0.c1 ELSE rt0.c4 END)AND(rt0.c4 COLLATE BINARY)))OR(UNLIKELY(rt0.c1))), LOWER(DISTINCT CAST(rt1.c2 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN 0.7695985322769118 WHEN v0.c1 THEN rt0.c1 ELSE rt0.c4 END)AND(rt0.c4 COLLATE BINARY)))OR(UNLIKELY(rt0.c1))), LOWER(DISTINCT CAST(rt1.c2 AS BLOB))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((v0.c0) ISNULL)) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN 0.7695985322769118 WHEN v0.c1 THEN rt0.c1 ELSE rt0.c4 END)AND(rt0.c4 COLLATE BINARY)))OR(UNLIKELY(rt0.c1))), LOWER(DISTINCT CAST(rt1.c2 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN 0.7695985322769118 WHEN v0.c1 THEN rt0.c1 ELSE rt0.c4 END)AND(rt0.c4 COLLATE BINARY)))OR(UNLIKELY(rt0.c1))), LOWER(DISTINCT CAST(rt1.c2 AS BLOB))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0 WHERE (((v0.c0) ISNULL)) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN 0.7695985322769118 WHEN v0.c1 THEN rt0.c1 ELSE rt0.c4 END)AND(rt0.c4 COLLATE BINARY)))OR(UNLIKELY(rt0.c1))), LOWER(DISTINCT CAST(rt1.c2 AS BLOB))  NULLS FIRST;
SELECT * FROM v0, rt1 WHERE (NULL) ORDER BY CAST(((v0.c2)OR(rt1.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(((v0.c2)OR(rt1.c2)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE (NULL) ORDER BY CAST(((v0.c2)OR(rt1.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt1 ORDER BY CAST(((v0.c2)OR(rt1.c2)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM v0, rt1 WHERE (NULL) ORDER BY CAST(((v0.c2)OR(rt1.c2)) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (json_remove(((rt0.c4)|(rt0.c2)), CAST(rt0.c2 AS NUMERIC))) ORDER BY (((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c1))))>((((rt0.c0) NOT NULL)))) DESC  NULLS LAST, x'' DESC  NULLS LAST, (+ (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, CASE (NOT (rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c3))>((rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND ('-1110004909')) END;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt0.c4)|(rt0.c2)), CAST(rt0.c2 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c1))))>((((rt0.c0) NOT NULL)))) DESC  NULLS LAST, x'' DESC  NULLS LAST, (+ (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, CASE (NOT (rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c3))>((rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND ('-1110004909')) END);
SELECT COUNT(*) FROM rt0 WHERE (json_remove(((rt0.c4)|(rt0.c2)), CAST(rt0.c2 AS NUMERIC))) ORDER BY (((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c1))))>((((rt0.c0) NOT NULL)))) DESC  NULLS LAST, x'' DESC  NULLS LAST, (+ (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, CASE (NOT (rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c3))>((rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND ('-1110004909')) END;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt0.c4)|(rt0.c2)), CAST(rt0.c2 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c1))))>((((rt0.c0) NOT NULL)))) DESC  NULLS LAST, x'' DESC  NULLS LAST, (+ (CAST(rt0.c0 AS NUMERIC)))  NULLS FIRST, CASE (NOT (rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((rt0.c3))>((rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND ('-1110004909')) END);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))>(((rt1.c1)LIKE(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))>(((rt1.c1)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))>(((rt1.c1)LIKE(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))>(((rt1.c1)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))>(((rt1.c1)LIKE(rt1.c1)))));
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY '863843427'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY '863843427'  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY '863843427'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0 ORDER BY '863843427'  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (NULL) ORDER BY '863843427'  NULLS FIRST;
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM rt1, rt0 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0Xffffffffd217a369))) AS BLOB)) ORDER BY ((((((rt1.c1)=(rt0.c2)))AND((rt0.c3 IN ()))))AND(rt0.c2 COLLATE NOCASE))  NULLS LAST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffd217a369))) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c1)==(rt0.c2)))AND((rt0.c3 IN ()))))AND(rt0.c2 COLLATE NOCASE))  NULLS LAST, rt1.c0 DESC);
SELECT * FROM rt1, rt0 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0Xffffffffd217a369))) AS BLOB)) ORDER BY ((((((rt1.c1)=(rt0.c2)))AND((rt0.c3 IN ()))))AND(rt0.c2 COLLATE NOCASE))  NULLS LAST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffd217a369))) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c1)==(rt0.c2)))AND((rt0.c3 IN ()))))AND(rt0.c2 COLLATE NOCASE))  NULLS LAST, rt1.c0 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN -1.153150163E9 ELSE rt1.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN -1.153150163E9 ELSE rt1.c2 END) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN -1.153150163E9 ELSE rt1.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN -1.153150163E9 ELSE rt1.c2 END) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN -1.153150163E9 ELSE rt1.c2 END) IS FALSE));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN v0.c2 THEN rt1.c2 END COLLATE BINARY WHERE (((((rt0.c2)=(v0.c0)))<(((NULL)AND(rt1.c0))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)==(v0.c0)))<(((NULL)AND(rt1.c0))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN v0.c2 THEN rt1.c2 END COLLATE BINARY ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN v0.c2 THEN rt1.c2 END COLLATE BINARY WHERE (((((rt0.c2)=(v0.c0)))<(((NULL)AND(rt1.c0))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)==(v0.c0)))<(((NULL)AND(rt1.c0))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN v0.c2 THEN rt1.c2 END COLLATE BINARY ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN rt1 ON CASE rt1.c0  WHEN v0.c2 THEN rt1.c2 END COLLATE BINARY WHERE (((((rt0.c2)=(v0.c0)))<(((NULL)AND(rt1.c0))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c0)) AS BLOB) WHERE (x'') ORDER BY (((rt1.c1) IS FALSE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c0)) AS BLOB) ORDER BY (((rt1.c1) IS FALSE) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c0)) AS BLOB) WHERE (x'') ORDER BY (((rt1.c1) IS FALSE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c0)) AS BLOB) ORDER BY (((rt1.c1) IS FALSE) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c0)) AS BLOB) WHERE (x'') ORDER BY (((rt1.c1) IS FALSE) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((x'', rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, 235259957, rt1.c0)) AND ((rt0.c4, rt0.c3, rt0.c4)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((x'', rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, 235259957, rt1.c0)) AND ((rt0.c4, rt0.c3, rt0.c4)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((x'', rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, 235259957, rt1.c0)) AND ((rt0.c4, rt0.c3, rt0.c4)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((x'', rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, 235259957, rt1.c0)) AND ((rt0.c4, rt0.c3, rt0.c4)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((x'', rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c0, 235259957, rt1.c0)) AND ((rt0.c4, rt0.c3, rt0.c4)))) IS TRUE));
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c4) NOT BETWEEN (v0.c1) AND (0.054497586465780734)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) NOT BETWEEN (v0.c1) AND (0.054497586465780734)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c4) NOT BETWEEN (v0.c1) AND (0.054497586465780734)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) NOT BETWEEN (v0.c1) AND (0.054497586465780734)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE ((((rt0.c4) NOT BETWEEN (v0.c1) AND (0.054497586465780734)) IN (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('-1014410673') ORDER BY (((v0.c1)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ())))) DESC, ((TOTAL_CHANGES())&(((7.36164725E8)>(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1014410673') IS TRUE)  as count FROM rt1, v0 ORDER BY (((v0.c1)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ())))) DESC, ((TOTAL_CHANGES())&(((7.36164725E8)>(v0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('-1014410673') ORDER BY (((v0.c1)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ())))) DESC, ((TOTAL_CHANGES())&(((7.36164725E8)>(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1014410673') IS TRUE)  as count FROM rt1, v0 ORDER BY (((v0.c1)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ())))) DESC, ((TOTAL_CHANGES())&(((7.36164725E8)>(v0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ('-1014410673') ORDER BY (((v0.c1)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ())))) DESC, ((TOTAL_CHANGES())&(((7.36164725E8)>(v0.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c4)LIKE(rt0.c1))) AND (((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((rt0.c4)LIKE(rt0.c1))) AND (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c4)LIKE(rt0.c1))) AND (((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((rt0.c4)LIKE(rt0.c1))) AND (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c4)LIKE(rt0.c1))) AND (((rt0.c3) ISNULL))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((NOT ((~ (rt0.c1))))) ORDER BY ((x'')<=(((((rt0.c2)OR(rt1.c1)))OR(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt0.c1))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((x'')<=(((((rt0.c2)OR(rt1.c1)))OR(rt0.c4)))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((NOT ((~ (rt0.c1))))) ORDER BY ((x'')<=(((((rt0.c2)OR(rt1.c1)))OR(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt0.c1))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((x'')<=(((((rt0.c2)OR(rt1.c1)))OR(rt0.c4)))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE ((NOT ((~ (rt0.c1))))) ORDER BY ((x'')<=(((((rt0.c2)OR(rt1.c1)))OR(rt0.c4))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM v0, rt1 WHERE (UPPER(rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt1.c1)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (UPPER(rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt1.c1)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (UPPER(rt1.c1));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c4 IN (v0.c0)))IS NOT(v0.c2 COLLATE BINARY)) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c4 IN (v0.c0)))IS NOT(v0.c2 COLLATE BINARY)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c4 IN (v0.c0)))IS NOT(v0.c2 COLLATE BINARY)) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c4 IN (v0.c0)))IS NOT(v0.c2 COLLATE BINARY)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((rt0.c4 IN (v0.c0)))IS NOT(v0.c2 COLLATE BINARY)) WHERE (rt0.c4);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((((rt0.c2) BETWEEN (rt0.c1) AND ('')))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c1)))))OR(CASE rt1.c1  WHEN v0.c2 THEN rt1.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))OR('|{\.w')))AND(rt0.c2)))AND(rt0.c1))) ORDER BY CASE ((rt1.c1) IS TRUE)  WHEN ((0.9624909972363052)OR('')) THEN (- (rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2) BETWEEN (rt0.c1) AND ('')))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c1)))))OR(CASE rt1.c1  WHEN v0.c2 THEN rt1.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))OR('|{\.w')))AND(rt0.c2)))AND(rt0.c1))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE ((rt1.c1) IS TRUE)  WHEN ((0.9624909972363052)OR('')) THEN (- (rt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((((rt0.c2) BETWEEN (rt0.c1) AND ('')))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c1)))))OR(CASE rt1.c1  WHEN v0.c2 THEN rt1.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))OR('|{\.w')))AND(rt0.c2)))AND(rt0.c1))) ORDER BY CASE ((rt1.c1) IS TRUE)  WHEN ((0.9624909972363052)OR('')) THEN (- (rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2) BETWEEN (rt0.c1) AND ('')))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c1)))))OR(CASE rt1.c1  WHEN v0.c2 THEN rt1.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))OR('|{\.w')))AND(rt0.c2)))AND(rt0.c1))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CASE ((rt1.c1) IS TRUE)  WHEN ((0.9624909972363052)OR('')) THEN (- (rt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((((rt0.c2) BETWEEN (rt0.c1) AND ('')))AND(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c1)))))OR(CASE rt1.c1  WHEN v0.c2 THEN rt1.c0 ELSE rt0.c4 END)))OR(((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))OR('|{\.w')))AND(rt0.c2)))AND(rt0.c1))) ORDER BY CASE ((rt1.c1) IS TRUE)  WHEN ((0.9624909972363052)OR('')) THEN (- (rt1.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS INTEGER) ELSE (v0.c2 IN ()) END);
SELECT ALL * FROM rt0, rt1 WHERE (CASE (((rt0.c4, rt1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c2, rt0.c3))>=((rt1.c0, rt1.c1, rt0.c1, rt1.c1, rt0.c4, rt0.c4, rt0.c4)))  WHEN CAST(rt0.c4 AS REAL) THEN ((rt1.c2)|(rt0.c2)) WHEN (rt0.c4 IN ()) THEN ((0.3815733000850394)<=(rt0.c4)) WHEN x'9e1c' THEN (((rt1.c0))<>((rt0.c0))) END) ORDER BY ((rt0.c1)LIKE(LIKELIHOOD(DISTINCT rt1.c0, 0.6556106616767232)))  NULLS LAST, CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)  NULLS FIRST, (- ((rt0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c4, rt1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c2, rt0.c3))>=((rt1.c0, rt1.c1, rt0.c1, rt1.c1, rt0.c4, rt0.c4, rt0.c4)))  WHEN CAST(rt0.c4 AS REAL) THEN ((rt1.c2)|(rt0.c2)) WHEN (rt0.c4 IN ()) THEN ((0.3815733000850394)<=(rt0.c4)) WHEN x'9e1c' THEN (((rt1.c0))!=((rt0.c0))) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1)LIKE(LIKELIHOOD(DISTINCT rt1.c0, 0.6556106616767232)))  NULLS LAST, CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)  NULLS FIRST, (- ((rt0.c3 IN ()))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (CASE (((rt0.c4, rt1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c2, rt0.c3))>=((rt1.c0, rt1.c1, rt0.c1, rt1.c1, rt0.c4, rt0.c4, rt0.c4)))  WHEN CAST(rt0.c4 AS REAL) THEN ((rt1.c2)|(rt0.c2)) WHEN (rt0.c4 IN ()) THEN ((0.3815733000850394)<=(rt0.c4)) WHEN x'9e1c' THEN (((rt1.c0))<>((rt0.c0))) END) ORDER BY ((rt0.c1)LIKE(LIKELIHOOD(DISTINCT rt1.c0, 0.6556106616767232)))  NULLS LAST, CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)  NULLS FIRST, (- ((rt0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c4, rt1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c2, rt0.c3))>=((rt1.c0, rt1.c1, rt0.c1, rt1.c1, rt0.c4, rt0.c4, rt0.c4)))  WHEN CAST(rt0.c4 AS REAL) THEN ((rt1.c2)|(rt0.c2)) WHEN (rt0.c4 IN ()) THEN ((0.3815733000850394)<=(rt0.c4)) WHEN x'9e1c' THEN (((rt1.c0))!=((rt0.c0))) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1)LIKE(LIKELIHOOD(DISTINCT rt1.c0, 0.6556106616767232)))  NULLS LAST, CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)  NULLS FIRST, (- ((rt0.c3 IN ()))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (CASE (((rt0.c4, rt1.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c2, rt0.c3))>=((rt1.c0, rt1.c1, rt0.c1, rt1.c1, rt0.c4, rt0.c4, rt0.c4)))  WHEN CAST(rt0.c4 AS REAL) THEN ((rt1.c2)|(rt0.c2)) WHEN (rt0.c4 IN ()) THEN ((0.3815733000850394)<=(rt0.c4)) WHEN x'9e1c' THEN (((rt1.c0))<>((rt0.c0))) END) ORDER BY ((rt0.c1)LIKE(LIKELIHOOD(DISTINCT rt1.c0, 0.6556106616767232)))  NULLS LAST, CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)) AS REAL)  NULLS FIRST, (- ((rt0.c3 IN ()))) DESC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, v0.c1)) BETWEEN (((v0.c1 IN (v0.c1)), v0.c1 COLLATE RTRIM, v0.c0)) AND ((((v0.c2)>(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c0, v0.c1)) BETWEEN (((v0.c1 IN (v0.c1)), v0.c1 COLLATE RTRIM, v0.c0)) AND ((((v0.c2)>(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, v0.c1)) BETWEEN (((v0.c1 IN (v0.c1)), v0.c1 COLLATE RTRIM, v0.c0)) AND ((((v0.c2)>(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c0, v0.c1)) BETWEEN (((v0.c1 IN (v0.c1)), v0.c1 COLLATE RTRIM, v0.c0)) AND ((((v0.c2)>(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1, v0.c0, v0.c1)) BETWEEN (((v0.c1 IN (v0.c1)), v0.c1 COLLATE RTRIM, v0.c0)) AND ((((v0.c2)>(v0.c1)), v0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2)||(v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)||(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2)||(v0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)||(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2)||(v0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c0 IN ()))LIKE(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))LIKE(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c0 IN ()))LIKE(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))LIKE(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c0 IN ()))LIKE(((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((HEX(v0.c1)) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c4) AND (x'ec72'))) AND (((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY ((((rt0.c2) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((HEX(v0.c1)) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c4) AND (x'ec72'))) AND (((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt0.c2) ISNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((HEX(v0.c1)) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c4) AND (x'ec72'))) AND (((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY ((((rt0.c2) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((HEX(v0.c1)) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c4) AND (x'ec72'))) AND (((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((rt0.c2) ISNULL)) NOT NULL));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((HEX(v0.c1)) BETWEEN (((v0.c0) NOT BETWEEN (rt0.c4) AND (x'ec72'))) AND (((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY ((((rt0.c2) ISNULL)) NOT NULL);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((rt0.c0)IS(rt1.c2)))<<((+ (rt1.c0))))) ORDER BY (- (((0X337d3463)>=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(rt1.c2)))<<((+ (rt1.c0))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (- (((0X337d3463)>=(v0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((rt0.c0)IS(rt1.c2)))<<((+ (rt1.c0))))) ORDER BY (- (((0X337d3463)>=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS(rt1.c2)))<<((+ (rt1.c0))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (- (((0X337d3463)>=(v0.c1)))));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((rt0.c0)IS(rt1.c2)))<<((+ (rt1.c0))))) ORDER BY (- (((0X337d3463)>=(v0.c1))));
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c3)) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) WHEN '-375354280' THEN x'95d22112' WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN ((((rt1.c0)OR(NULL)))OR(rt0.c0)) END) ORDER BY ((((((rt1.c0) BETWEEN (v0.c2) AND ('-340585869')))AND(v0.c2 COLLATE BINARY)))AND(((rt0.c3)LIKE(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c3)) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) WHEN '-375354280' THEN x'95d22112' WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN ((((rt1.c0)OR(NULL)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((((rt1.c0) BETWEEN (v0.c2) AND ('-340585869')))AND(v0.c2 COLLATE BINARY)))AND(((rt0.c3)LIKE(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c3)) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) WHEN '-375354280' THEN x'95d22112' WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN ((((rt1.c0)OR(NULL)))OR(rt0.c0)) END) ORDER BY ((((((rt1.c0) BETWEEN (v0.c2) AND ('-340585869')))AND(v0.c2 COLLATE BINARY)))AND(((rt0.c3)LIKE(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c3)) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) WHEN '-375354280' THEN x'95d22112' WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN ((((rt1.c0)OR(NULL)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((((rt1.c0) BETWEEN (v0.c2) AND ('-340585869')))AND(v0.c2 COLLATE BINARY)))AND(((rt0.c3)LIKE(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c3)) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt0.c4)) WHEN '-375354280' THEN x'95d22112' WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c2)) THEN ((((rt1.c0)OR(NULL)))OR(rt0.c0)) END) ORDER BY ((((((rt1.c0) BETWEEN (v0.c2) AND ('-340585869')))AND(v0.c2 COLLATE BINARY)))AND(((rt0.c3)LIKE(rt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, v0 WHERE (((v0.c2)&(v0.c1)) COLLATE NOCASE) ORDER BY CASE ((v0.c0)!=(rt1.c1))  WHEN (+ (v0.c2)) THEN (NOT (v0.c1)) ELSE (((v0.c2, rt1.c2, rt1.c0)) BETWEEN (('Yd]k', v0.c0, v0.c0)) AND ((rt1.c2, v0.c0, rt1.c2))) END DESC  NULLS LAST, ((IFNULL(DISTINCT v0.c1, v0.c2))+(rt1.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2)&(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE ((v0.c0)<>(rt1.c1))  WHEN (+ (v0.c2)) THEN (NOT (v0.c1)) ELSE (((v0.c2, rt1.c2, rt1.c0)) BETWEEN (('Yd]k', v0.c0, v0.c0)) AND ((rt1.c2, v0.c0, rt1.c2))) END DESC  NULLS LAST, ((IFNULL(DISTINCT v0.c1, v0.c2))+(rt1.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((v0.c2)&(v0.c1)) COLLATE NOCASE) ORDER BY CASE ((v0.c0)!=(rt1.c1))  WHEN (+ (v0.c2)) THEN (NOT (v0.c1)) ELSE (((v0.c2, rt1.c2, rt1.c0)) BETWEEN (('Yd]k', v0.c0, v0.c0)) AND ((rt1.c2, v0.c0, rt1.c2))) END DESC  NULLS LAST, ((IFNULL(DISTINCT v0.c1, v0.c2))+(rt1.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2)&(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0 ORDER BY CASE ((v0.c0)<>(rt1.c1))  WHEN (+ (v0.c2)) THEN (NOT (v0.c1)) ELSE (((v0.c2, rt1.c2, rt1.c0)) BETWEEN (('Yd]k', v0.c0, v0.c0)) AND ((rt1.c2, v0.c0, rt1.c2))) END DESC  NULLS LAST, ((IFNULL(DISTINCT v0.c1, v0.c2))+(rt1.c2 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((v0.c2)&(v0.c1)) COLLATE NOCASE) ORDER BY CASE ((v0.c0)!=(rt1.c1))  WHEN (+ (v0.c2)) THEN (NOT (v0.c1)) ELSE (((v0.c2, rt1.c2, rt1.c0)) BETWEEN (('Yd]k', v0.c0, v0.c0)) AND ((rt1.c2, v0.c0, rt1.c2))) END DESC  NULLS LAST, ((IFNULL(DISTINCT v0.c1, v0.c2))+(rt1.c2 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0 WHERE ((- (CASE rt0.c0  WHEN rt0.c0 THEN v0.c1 END))) ORDER BY (((v0.c1)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((((((((((rt0.c3)OR(0.9971400053047687)))OR(v0.c0)))AND(-700976159)))OR(rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt0.c0 THEN v0.c1 END))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((v0.c1)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((((((((((rt0.c3)OR(0.9971400053047687)))OR(v0.c0)))AND(-700976159)))OR(rt0.c3)))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((- (CASE rt0.c0  WHEN rt0.c0 THEN v0.c1 END))) ORDER BY (((v0.c1)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((((((((((rt0.c3)OR(0.9971400053047687)))OR(v0.c0)))AND(-700976159)))OR(rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt0.c0 THEN v0.c1 END))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((v0.c1)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((((((((((rt0.c3)OR(0.9971400053047687)))OR(v0.c0)))AND(-700976159)))OR(rt0.c3)))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((- (CASE rt0.c0  WHEN rt0.c0 THEN v0.c1 END))) ORDER BY (((v0.c1)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((((((((((rt0.c3)OR(0.9971400053047687)))OR(v0.c0)))AND(-700976159)))OR(rt0.c3)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY(((rt1.c0)IS(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c0)IS(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY(((rt1.c0)IS(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c0)IS(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY(((rt1.c0)IS(rt1.c1))));
SELECT * FROM rt1, v0, rt0 WHERE (0.3639316184199899);
SELECT SUM(count) FROM (SELECT ALL ((0.3639316184199899) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (0.3639316184199899);
SELECT SUM(count) FROM (SELECT ALL ((0.3639316184199899) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (0.3639316184199899);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c0 WHERE (((((((rt0.c1)OR('~*')))OR(rt0.c3)))>(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('~*')))OR(rt0.c3)))>(rt0.c4))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON v0.c0);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c0 WHERE (((((((rt0.c1)OR('~*')))OR(rt0.c3)))>(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('~*')))OR(rt0.c3)))>(rt0.c4))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON v0.c0);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON v0.c0 WHERE (((((((rt0.c1)OR('~*')))OR(rt0.c3)))>(rt0.c4)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c4))  WHEN CAST(rt0.c4 AS INTEGER) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN (rt0.c4))  WHEN CAST(rt0.c4 AS INTEGER) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c4))  WHEN CAST(rt0.c4 AS INTEGER) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN (rt0.c4))  WHEN CAST(rt0.c4 AS INTEGER) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c4))  WHEN CAST(rt0.c4 AS INTEGER) THEN CAST(rt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c2)%(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE ((rt1.c0)%(rt0.c0))  WHEN ((((((((rt1.c2)OR(rt0.c0)))AND(v0.c2)))AND(rt1.c0)))AND(v0.c1)) THEN (((rt0.c1))<=((rt1.c2))) ELSE ((rt0.c1)OR(rt0.c0)) END WHERE ((((v0.c1, rt0.c1, v0.c0))==((rt0.c2, rt1.c2, x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((v0.c1, rt0.c1, v0.c0))=((rt0.c2, rt1.c2, x''))) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c2)%(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE ((rt1.c0)%(rt0.c0))  WHEN ((((((((rt1.c2)OR(rt0.c0)))AND(v0.c2)))AND(rt1.c0)))AND(v0.c1)) THEN (((rt0.c1))<=((rt1.c2))) ELSE ((rt0.c1)OR(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c2)%(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE ((rt1.c0)%(rt0.c0))  WHEN ((((((((rt1.c2)OR(rt0.c0)))AND(v0.c2)))AND(rt1.c0)))AND(v0.c1)) THEN (((rt0.c1))<=((rt1.c2))) ELSE ((rt0.c1)OR(rt0.c0)) END WHERE ((((v0.c1, rt0.c1, v0.c0))==((rt0.c2, rt1.c2, x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((v0.c1, rt0.c1, v0.c0))=((rt0.c2, rt1.c2, x''))) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((v0.c2)%(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON CASE ((rt1.c0)%(rt0.c0))  WHEN ((((((((rt1.c2)OR(rt0.c0)))AND(v0.c2)))AND(rt1.c0)))AND(v0.c1)) THEN (((rt0.c1))<=((rt1.c2))) ELSE ((rt0.c1)OR(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)!=(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)<>(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)!=(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)<>(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)!=(rt0.c3)) IN ()));
SELECT * FROM rt1 WHERE (((((((((((rt1.c2)AND('')))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1))) IS TRUE)) ORDER BY ((((rt1.c2)>>(rt1.c2))) NOT NULL)  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND('')))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)>>(rt1.c2))) NOT NULL)  NULLS LAST, NULL);
SELECT * FROM rt1 WHERE (((((((((((rt1.c2)AND('')))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1))) IS TRUE)) ORDER BY ((((rt1.c2)>>(rt1.c2))) NOT NULL)  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND('')))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)>>(rt1.c2))) NOT NULL)  NULLS LAST, NULL);
SELECT * FROM rt1 WHERE (((((((((((rt1.c2)AND('')))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1))) IS TRUE)) ORDER BY ((((rt1.c2)>>(rt1.c2))) NOT NULL)  NULLS LAST, NULL;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(rt0.c1))) IS FALSE) WHERE (((((((((rt0.c4)OR(v0.c0)))AND(v0.c2)))AND(IFNULL(v0.c0, rt0.c0))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ (((v0.c2)!=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c4)OR(v0.c0)))AND(v0.c2)))AND(IFNULL(v0.c0, rt0.c0))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(rt0.c1))) IS FALSE) ORDER BY (~ (((v0.c2)!=(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(rt0.c1))) IS FALSE) WHERE (((((((((rt0.c4)OR(v0.c0)))AND(v0.c2)))AND(IFNULL(v0.c0, rt0.c0))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ (((v0.c2)!=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c4)OR(v0.c0)))AND(v0.c2)))AND(IFNULL(v0.c0, rt0.c0))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(rt0.c1))) IS FALSE) ORDER BY (~ (((v0.c2)!=(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(rt0.c1))) IS FALSE) WHERE (((((((((rt0.c4)OR(v0.c0)))AND(v0.c2)))AND(IFNULL(v0.c0, rt0.c0))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY (~ (((v0.c2)!=(v0.c0))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (CASE WHEN rt1.c1 THEN v0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt1.c1 THEN v0.c2 END))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (CASE WHEN rt1.c1 THEN v0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt1.c1 THEN v0.c2 END))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (CASE WHEN rt1.c1 THEN v0.c2 END)));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c1))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c1))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((~ (v0.c1)));
SELECT ALL COUNT(*) FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED((- (rt1.c2)))) ORDER BY CASE CAST(rt1.c0 AS NUMERIC)  WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) THEN json_array_length(rt1.c2, rt1.c2) WHEN ((rt1.c0) BETWEEN (8.63843427E8) AND (rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END THEN ((rt1.c2)>('')) ELSE ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((- (rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c0 AS NUMERIC)  WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) THEN json_array_length(rt1.c2, rt1.c2) WHEN ((rt1.c0) BETWEEN (8.63843427E8) AND (rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END THEN ((rt1.c2)>('')) ELSE ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED((- (rt1.c2)))) ORDER BY CASE CAST(rt1.c0 AS NUMERIC)  WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) THEN json_array_length(rt1.c2, rt1.c2) WHEN ((rt1.c0) BETWEEN (8.63843427E8) AND (rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END THEN ((rt1.c2)>('')) ELSE ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((- (rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c0 AS NUMERIC)  WHEN ((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)) THEN json_array_length(rt1.c2, rt1.c2) WHEN ((rt1.c0) BETWEEN (8.63843427E8) AND (rt1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END THEN ((rt1.c2)>('')) ELSE ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)) END  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN (TRIM(rt1.c0)))) ORDER BY ((((v0.c0)==(v0.c1))) BETWEEN (rt1.c0) AND (((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))  NULLS FIRST, CASE CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c0 COLLATE RTRIM THEN ((rt1.c1)%(v0.c2)) WHEN (~ (rt1.c0)) THEN IFNULL(rt1.c1, v0.c2) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)>(v0.c0)) ELSE CAST(v0.c0 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS TEXT) IN (TRIM(rt1.c0)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((v0.c0)=(v0.c1))) BETWEEN (rt1.c0) AND (((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))  NULLS FIRST, CASE CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c0 COLLATE RTRIM THEN ((rt1.c1)%(v0.c2)) WHEN (~ (rt1.c0)) THEN IFNULL(rt1.c1, v0.c2) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)>(v0.c0)) ELSE CAST(v0.c0 AS BLOB) END ASC);
SELECT ALL * FROM v0, rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN (TRIM(rt1.c0)))) ORDER BY ((((v0.c0)==(v0.c1))) BETWEEN (rt1.c0) AND (((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))  NULLS FIRST, CASE CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c0 COLLATE RTRIM THEN ((rt1.c1)%(v0.c2)) WHEN (~ (rt1.c0)) THEN IFNULL(rt1.c1, v0.c2) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)>(v0.c0)) ELSE CAST(v0.c0 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS TEXT) IN (TRIM(rt1.c0)))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((v0.c0)=(v0.c1))) BETWEEN (rt1.c0) AND (((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))  NULLS FIRST, CASE CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c0 COLLATE RTRIM THEN ((rt1.c1)%(v0.c2)) WHEN (~ (rt1.c0)) THEN IFNULL(rt1.c1, v0.c2) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)>(v0.c0)) ELSE CAST(v0.c0 AS BLOB) END ASC);
SELECT ALL * FROM v0, rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN (TRIM(rt1.c0)))) ORDER BY ((((v0.c0)==(v0.c1))) BETWEEN (rt1.c0) AND (((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c2))))  NULLS FIRST, CASE CASE v0.c1  WHEN v0.c0 THEN NULL ELSE v0.c1 END  WHEN v0.c0 COLLATE RTRIM THEN ((rt1.c1)%(v0.c2)) WHEN (~ (rt1.c0)) THEN IFNULL(rt1.c1, v0.c2) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)>(v0.c0)) ELSE CAST(v0.c0 AS BLOB) END ASC;
SELECT COUNT(*) FROM v0 WHERE (x'dc2e');
SELECT SUM(count) FROM (SELECT ((x'dc2e') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'dc2e');
SELECT SUM(count) FROM (SELECT ((x'dc2e') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'dc2e');
SELECT * FROM v0, rt1 WHERE ((((- (rt1.c2)))|((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))|((rt1.c2 IN ())))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((((- (rt1.c2)))|((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))|((rt1.c2 IN ())))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((((- (rt1.c2)))|((rt1.c2 IN ()))));
SELECT ALL * FROM rt1, v0, rt0 WHERE (((((((rt1.c2)AND(rt0.c3)))AND(rt0.c4))) IS FALSE)) ORDER BY CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt0.c3)))AND(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE (((((((rt1.c2)AND(rt0.c3)))AND(rt0.c4))) IS FALSE)) ORDER BY CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt0.c3)))AND(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE (((((((rt1.c2)AND(rt0.c3)))AND(rt0.c4))) IS FALSE)) ORDER BY CAST(CASE WHEN v0.c1 THEN v0.c1 END AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 CROSS JOIN v0 ON ((rt0.c0)&(rt1.c2)) COLLATE RTRIM WHERE (((json_patch(rt0.c4, rt0.c2))<>(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY 0.13495020574166305;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt0.c4, rt0.c2))<>(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON ((rt0.c0)&(rt1.c2)) COLLATE RTRIM ORDER BY 0.13495020574166305);
SELECT ALL * FROM rt1, rt0 CROSS JOIN v0 ON ((rt0.c0)&(rt1.c2)) COLLATE RTRIM WHERE (((json_patch(rt0.c4, rt0.c2))<>(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY 0.13495020574166305;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(rt0.c4, rt0.c2))<>(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON ((rt0.c0)&(rt1.c2)) COLLATE RTRIM ORDER BY 0.13495020574166305);
SELECT ALL * FROM rt1, rt0 CROSS JOIN v0 ON ((rt0.c0)&(rt1.c2)) COLLATE RTRIM WHERE (((json_patch(rt0.c4, rt0.c2))<>(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY 0.13495020574166305;
SELECT * FROM rt0 INNER JOIN v0 ON (((rt0.c3)>>(rt0.c3)) IN (rt0.c3, TRIM(v0.c1, rt0.c1))) WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ABS(((v0.c2)|(rt0.c3))) ASC, (((NULL))>=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c3)>>(rt0.c3)) IN (rt0.c3, TRIM(v0.c1, rt0.c1))) ORDER BY ABS(((v0.c2)|(rt0.c3))) ASC, (((NULL))>=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (v0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((rt0.c3)>>(rt0.c3)) IN (rt0.c3, TRIM(v0.c1, rt0.c1))) WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ABS(((v0.c2)|(rt0.c3))) ASC, (((NULL))>=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c3)>>(rt0.c3)) IN (rt0.c3, TRIM(v0.c1, rt0.c1))) ORDER BY ABS(((v0.c2)|(rt0.c3))) ASC, (((NULL))>=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (v0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((rt0.c3)>>(rt0.c3)) IN (rt0.c3, TRIM(v0.c1, rt0.c1))) WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ABS(((v0.c2)|(rt0.c3))) ASC, (((NULL))>=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (v0.c0)))))  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (NULLIF((NOT (rt0.c4)), CAST(rt0.c4 AS TEXT))) ORDER BY (((rt0.c1 IN ())) BETWEEN ((('-1110004909') BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0)>>(1753845854)))), (((((rt0.c3)AND(v0.c1)))AND(rt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((NOT (rt0.c4)), CAST(rt0.c4 AS TEXT))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN ())) BETWEEN ((('-1110004909') BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0)>>(1753845854)))), (((((rt0.c3)AND(v0.c1)))AND(rt0.c0)) IN ()) DESC);
SELECT ALL * FROM rt0, v0 WHERE (NULLIF((NOT (rt0.c4)), CAST(rt0.c4 AS TEXT))) ORDER BY (((rt0.c1 IN ())) BETWEEN ((('-1110004909') BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0)>>(1753845854)))), (((((rt0.c3)AND(v0.c1)))AND(rt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((NOT (rt0.c4)), CAST(rt0.c4 AS TEXT))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1 IN ())) BETWEEN ((('-1110004909') BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0)>>(1753845854)))), (((((rt0.c3)AND(v0.c1)))AND(rt0.c0)) IN ()) DESC);
SELECT ALL * FROM rt0, v0 WHERE (NULLIF((NOT (rt0.c4)), CAST(rt0.c4 AS TEXT))) ORDER BY (((rt0.c1 IN ())) BETWEEN ((('-1110004909') BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c0)>>(1753845854)))), (((((rt0.c3)AND(v0.c1)))AND(rt0.c0)) IN ()) DESC;
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON HEX(NULLIF(rt1.c2, v0.c2)) WHERE (CAST(((((rt1.c0)OR(rt1.c0)))OR(v0.c1)) AS INTEGER)) ORDER BY v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c0)))OR(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON HEX(NULLIF(rt1.c2, v0.c2)) ORDER BY v0.c1  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON HEX(NULLIF(rt1.c2, v0.c2)) WHERE (CAST(((((rt1.c0)OR(rt1.c0)))OR(v0.c1)) AS INTEGER)) ORDER BY v0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c0)))OR(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON HEX(NULLIF(rt1.c2, v0.c2)) ORDER BY v0.c1  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON HEX(NULLIF(rt1.c2, v0.c2)) WHERE (CAST(((((rt1.c0)OR(rt1.c0)))OR(v0.c1)) AS INTEGER)) ORDER BY v0.c1  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN rt0.c3 THEN '' WHEN v0.c2 THEN 0.3934750758579766 WHEN v0.c2 THEN rt0.c0 END IN ())) ORDER BY ((CAST(v0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c3 THEN '' WHEN v0.c2 THEN 0.3934750758579766 WHEN v0.c2 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN rt0.c3 THEN '' WHEN v0.c2 THEN 0.3934750758579766 WHEN v0.c2 THEN rt0.c0 END IN ())) ORDER BY ((CAST(v0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c3 THEN '' WHEN v0.c2 THEN 0.3934750758579766 WHEN v0.c2 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((CASE WHEN rt0.c3 THEN '' WHEN v0.c2 THEN 0.3934750758579766 WHEN v0.c2 THEN rt0.c0 END IN ())) ORDER BY ((CAST(v0.c1 AS NUMERIC)) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((CASE v0.c2  WHEN v0.c2 THEN rt0.c4 ELSE rt0.c2 END IN (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c2  WHEN v0.c2 THEN rt0.c4 ELSE rt0.c2 END IN (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((CASE v0.c2  WHEN v0.c2 THEN rt0.c4 ELSE rt0.c2 END IN (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c2  WHEN v0.c2 THEN rt0.c4 ELSE rt0.c2 END IN (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE ((CASE v0.c2  WHEN v0.c2 THEN rt0.c4 ELSE rt0.c2 END IN (CAST(rt0.c1 AS BLOB))));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) NOTNULL)) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=(((((rt0.c1))==((rt0.c4)))))), ((rt0.c3)-(rt0.c3)) COLLATE NOCASE ASC, (((NOT (rt0.c0))) NOT BETWEEN ((((rt0.c4))>((v0.c1)))) AND (((rt0.c1) NOT NULL)))  NULLS LAST, (~ (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=(((((rt0.c1))=((rt0.c4)))))), ((rt0.c3)-(rt0.c3)) COLLATE NOCASE ASC, (((NOT (rt0.c0))) NOT BETWEEN ((((rt0.c4))>((v0.c1)))) AND (((rt0.c1) NOT NULL)))  NULLS LAST, (~ (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) NOTNULL)) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=(((((rt0.c1))==((rt0.c4)))))), ((rt0.c3)-(rt0.c3)) COLLATE NOCASE ASC, (((NOT (rt0.c0))) NOT BETWEEN ((((rt0.c4))>((v0.c1)))) AND (((rt0.c1) NOT NULL)))  NULLS LAST, (~ (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=(((((rt0.c1))=((rt0.c4)))))), ((rt0.c3)-(rt0.c3)) COLLATE NOCASE ASC, (((NOT (rt0.c0))) NOT BETWEEN ((((rt0.c4))>((v0.c1)))) AND (((rt0.c1) NOT NULL)))  NULLS LAST, (~ (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) NOTNULL)) ORDER BY (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<=(((((rt0.c1))==((rt0.c4)))))), ((rt0.c3)-(rt0.c3)) COLLATE NOCASE ASC, (((NOT (rt0.c0))) NOT BETWEEN ((((rt0.c4))>((v0.c1)))) AND (((rt0.c1) NOT NULL)))  NULLS LAST, (~ (v0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (((((((((((rt0.c4)AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c1)))OR(rt1.c0)))LIKE(((((((((rt1.c1)OR(rt0.c0)))AND('yd]k')))OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c1)))OR(rt1.c0)))LIKE(((((((((rt1.c1)OR(rt0.c0)))AND('yd]k')))OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((((((rt0.c4)AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c1)))OR(rt1.c0)))LIKE(((((((((rt1.c1)OR(rt0.c0)))AND('yd]k')))OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c1)))OR(rt1.c0)))LIKE(((((((((rt1.c1)OR(rt0.c0)))AND('yd]k')))OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((((((((rt0.c4)AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c1)))OR(rt1.c0)))LIKE(((((((((rt1.c1)OR(rt0.c0)))AND('yd]k')))OR(rt0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(0.9442377902574997)))||(((((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(0.9442377902574997)))||(((((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(0.9442377902574997)))||(((((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(0.9442377902574997)))||(((((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))AND(0.9442377902574997)))||(((((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE rt1.c0  WHEN (- (rt1.c0)) THEN ((((((((rt1.c0)OR(v0.c0)))AND('(W')))OR(v0.c0)))AND(rt1.c0)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c2)IS(rt1.c0)) WHEN ((v0.c1) NOT NULL) THEN (v0.c1 IN ()) ELSE NULL END) ORDER BY ((~ (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN (- (rt1.c0)) THEN ((((((((rt1.c0)OR(v0.c0)))AND('(W')))OR(v0.c0)))AND(rt1.c0)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c2)IS(rt1.c0)) WHEN ((v0.c1) NOT NULL) THEN (v0.c1 IN ()) ELSE NULL END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((~ (rt1.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE rt1.c0  WHEN (- (rt1.c0)) THEN ((((((((rt1.c0)OR(v0.c0)))AND('(W')))OR(v0.c0)))AND(rt1.c0)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c2)IS(rt1.c0)) WHEN ((v0.c1) NOT NULL) THEN (v0.c1 IN ()) ELSE NULL END) ORDER BY ((~ (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN (- (rt1.c0)) THEN ((((((((rt1.c0)OR(v0.c0)))AND('(W')))OR(v0.c0)))AND(rt1.c0)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c2)IS(rt1.c0)) WHEN ((v0.c1) NOT NULL) THEN (v0.c1 IN ()) ELSE NULL END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((~ (rt1.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE rt1.c0  WHEN (- (rt1.c0)) THEN ((((((((rt1.c0)OR(v0.c0)))AND('(W')))OR(v0.c0)))AND(rt1.c0)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c2)IS(rt1.c0)) WHEN ((v0.c1) NOT NULL) THEN (v0.c1 IN ()) ELSE NULL END) ORDER BY ((~ (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((((v0.c2))!=((rt0.c3))))<=((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2))<>((rt0.c3))))<=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((((v0.c2))!=((rt0.c3))))<=((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2))<>((rt0.c3))))<=((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((((v0.c2))!=((rt0.c3))))<=((rt0.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE (CASE UNLIKELY(rt0.c0)  WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)) THEN ((((rt0.c1)AND('-455530431')))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(rt0.c0)  WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)) THEN ((((rt0.c1)AND('-455530431')))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE UNLIKELY(rt0.c0)  WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)) THEN ((((rt0.c1)AND('-455530431')))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(rt0.c0)  WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)) THEN ((((rt0.c1)AND('-455530431')))OR(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE UNLIKELY(rt0.c0)  WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)) THEN ((((rt0.c1)AND('-455530431')))OR(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN 'GO[7&ԣ' THEN rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'GO[7&ԣ' THEN rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN 'GO[7&ԣ' THEN rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'GO[7&ԣ' THEN rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN 'GO[7&ԣ' THEN rt1.c2 COLLATE RTRIM END);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c1) AS INTEGER) LEFT OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))OR((v0.c2 IN ()))))OR(rt1.c0)))OR(((rt1.c2) IS FALSE))))AND((v0.c0 IN ()))) WHERE ((((rt0.c2) ISNULL) IN (rt1.c2))) ORDER BY LIKE((~ (rt1.c0)), ((rt0.c0) NOTNULL), '-')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN (rt1.c2))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c1) AS INTEGER) LEFT OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))OR((v0.c2 IN ()))))OR(rt1.c0)))OR(((rt1.c2) IS FALSE))))AND((v0.c0 IN ()))) ORDER BY LIKE((~ (rt1.c0)), ((rt0.c0) NOTNULL), '-')  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c1) AS INTEGER) LEFT OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))OR((v0.c2 IN ()))))OR(rt1.c0)))OR(((rt1.c2) IS FALSE))))AND((v0.c0 IN ()))) WHERE ((((rt0.c2) ISNULL) IN (rt1.c2))) ORDER BY LIKE((~ (rt1.c0)), ((rt0.c0) NOTNULL), '-')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN (rt1.c2))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c1) AS INTEGER) LEFT OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))OR((v0.c2 IN ()))))OR(rt1.c0)))OR(((rt1.c2) IS FALSE))))AND((v0.c0 IN ()))) ORDER BY LIKE((~ (rt1.c0)), ((rt0.c0) NOTNULL), '-')  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST(LIKELY(rt0.c1) AS INTEGER) LEFT OUTER JOIN v0 ON ((((((((((v0.c0) IS TRUE))OR((v0.c2 IN ()))))OR(rt1.c0)))OR(((rt1.c2) IS FALSE))))AND((v0.c0 IN ()))) WHERE ((((rt0.c2) ISNULL) IN (rt1.c2))) ORDER BY LIKE((~ (rt1.c0)), ((rt0.c0) NOTNULL), '-')  NULLS LAST;
SELECT * FROM rt0, v0, rt1 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS TEXT));
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((~ (v0.c1)) IN ()) WHERE (HEX(LIKELIHOOD(rt1.c2, 0.7674902752670708))) ORDER BY ((((CAST(v0.c1 AS INTEGER))AND(((v0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) DESC, ((rtreenode(rt1.c1, '剳j')) NOT BETWEEN ('0.2165927510221769') AND (UNLIKELY(v0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(LIKELIHOOD(rt1.c2, 0.7674902752670708))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((~ (v0.c1)) IN ()) ORDER BY ((((CAST(v0.c1 AS INTEGER))AND(((v0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) DESC, ((rtreenode(rt1.c1, '剳j')) NOT BETWEEN ('0.2165927510221769') AND (UNLIKELY(v0.c2))) ASC);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((~ (v0.c1)) IN ()) WHERE (HEX(LIKELIHOOD(rt1.c2, 0.7674902752670708))) ORDER BY ((((CAST(v0.c1 AS INTEGER))AND(((v0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) DESC, ((rtreenode(rt1.c1, '剳j')) NOT BETWEEN ('0.2165927510221769') AND (UNLIKELY(v0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(LIKELIHOOD(rt1.c2, 0.7674902752670708))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON ((~ (v0.c1)) IN ()) ORDER BY ((((CAST(v0.c1 AS INTEGER))AND(((v0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) DESC, ((rtreenode(rt1.c1, '剳j')) NOT BETWEEN ('0.2165927510221769') AND (UNLIKELY(v0.c2))) ASC);
SELECT ALL * FROM rt1 CROSS JOIN v0 ON ((~ (v0.c1)) IN ()) WHERE (HEX(LIKELIHOOD(rt1.c2, 0.7674902752670708))) ORDER BY ((((CAST(v0.c1 AS INTEGER))AND(((v0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) DESC, ((rtreenode(rt1.c1, '剳j')) NOT BETWEEN ('0.2165927510221769') AND (UNLIKELY(v0.c2))) ASC;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (STRFTIME(rt0.c4, CASE v0.c2  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END, (~ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(rt0.c4, CASE v0.c2  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END, (~ (rt1.c1)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (STRFTIME(rt0.c4, CASE v0.c2  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END, (~ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(rt0.c4, CASE v0.c2  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END, (~ (rt1.c1)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (STRFTIME(rt0.c4, CASE v0.c2  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c3 END, (~ (rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN 0.7779144853805318 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN 0.7779144853805318 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN 0.7779144853805318 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN 0.7779144853805318 END))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CASE WHEN v0.c0 THEN rt0.c3 WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN 0.7779144853805318 END)));
SELECT * FROM v0, rt0 WHERE (((NULL)-((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)-((- (rt0.c2))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT * FROM v0, rt0 WHERE (((NULL)-((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)-((- (rt0.c2))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT * FROM v0, rt0 WHERE (((NULL)-((- (rt0.c2)))));
SELECT * FROM v0, rt1 WHERE (((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))<(((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))<(((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY rt1.c1);
SELECT * FROM v0, rt1 WHERE (((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))<(((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))<(((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM v0, rt1 ORDER BY rt1.c1);
SELECT * FROM v0, rt1 WHERE (((((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))<(((v0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY rt1.c1;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON '322810226' INNER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) AND ((((rt1.c1, rt1.c1, rt1.c1))>=((v0.c1, rt1.c1, v0.c1))))) WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON '322810226' INNER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) AND ((((rt1.c1, rt1.c1, rt1.c1))>=((v0.c1, rt1.c1, v0.c1))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON '322810226' INNER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) AND ((((rt1.c1, rt1.c1, rt1.c1))>=((v0.c1, rt1.c1, v0.c1))))) WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON '322810226' INNER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) AND ((((rt1.c1, rt1.c1, rt1.c1))>=((v0.c1, rt1.c1, v0.c1))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON '322810226' INNER JOIN rt1 ON ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 ELSE v0.c0 END) AND ((((rt1.c1, rt1.c1, rt1.c1))>=((v0.c1, rt1.c1, v0.c1))))) WHERE (((rt0.c1 IN ()) IN ()));
SELECT ALL * FROM v0, rt0 WHERE ((~ (RTRIM(v0.c2)))) ORDER BY CASE ((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c1))  WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((v0.c0)+(0.8779873457915437)) WHEN ((NULL) NOTNULL) THEN (rt0.c1 IN (x'')) WHEN ((rt0.c2)<>(v0.c2)) THEN ((NULL) ISNULL) WHEN (rt0.c4 IN ('FALSE')) THEN v0.c2 WHEN NULLIF(rt0.c2, 0x7a5a8d62) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE NULLIF(v0.c2, rt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT (((~ (RTRIM(v0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c1))  WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((v0.c0)+(0.8779873457915437)) WHEN ((NULL) NOTNULL) THEN (rt0.c1 IN (x'')) WHEN ((rt0.c2)!=(v0.c2)) THEN ((NULL) ISNULL) WHEN (rt0.c4 IN ('FALSE')) THEN v0.c2 WHEN NULLIF(rt0.c2, 0x7a5a8d62) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE NULLIF(v0.c2, rt0.c0) END DESC);
SELECT ALL * FROM v0, rt0 WHERE ((~ (RTRIM(v0.c2)))) ORDER BY CASE ((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c1))  WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((v0.c0)+(0.8779873457915437)) WHEN ((NULL) NOTNULL) THEN (rt0.c1 IN (x'')) WHEN ((rt0.c2)<>(v0.c2)) THEN ((NULL) ISNULL) WHEN (rt0.c4 IN ('FALSE')) THEN v0.c2 WHEN NULLIF(rt0.c2, 0x7a5a8d62) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE NULLIF(v0.c2, rt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT (((~ (RTRIM(v0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c1))  WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((v0.c0)+(0.8779873457915437)) WHEN ((NULL) NOTNULL) THEN (rt0.c1 IN (x'')) WHEN ((rt0.c2)!=(v0.c2)) THEN ((NULL) ISNULL) WHEN (rt0.c4 IN ('FALSE')) THEN v0.c2 WHEN NULLIF(rt0.c2, 0x7a5a8d62) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE NULLIF(v0.c2, rt0.c0) END DESC);
SELECT ALL * FROM v0, rt0 WHERE ((~ (RTRIM(v0.c2)))) ORDER BY CASE ((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c1))  WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN ((v0.c0)+(0.8779873457915437)) WHEN ((NULL) NOTNULL) THEN (rt0.c1 IN (x'')) WHEN ((rt0.c2)<>(v0.c2)) THEN ((NULL) ISNULL) WHEN (rt0.c4 IN ('FALSE')) THEN v0.c2 WHEN NULLIF(rt0.c2, 0x7a5a8d62) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE NULLIF(v0.c2, rt0.c0) END DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN v0 ON ((((((((HEX(DISTINCT v0.c2))AND('3' COLLATE NOCASE)))AND(((v0.c1) IS TRUE))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN 1523656840 WHEN v0.c2 THEN rt0.c4 ELSE 'U-QV5uk2' END)) WHERE (CASE WHEN 0.16154003694470298 THEN ((v0.c2)AND(rt0.c2)) ELSE CASE ''  WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.16154003694470298 THEN ((v0.c2)AND(rt0.c2)) ELSE CASE ''  WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c3 END END) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON ((((((((HEX(DISTINCT v0.c2))AND('3' COLLATE NOCASE)))AND(((v0.c1) IS TRUE))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN 1523656840 WHEN v0.c2 THEN rt0.c4 ELSE 'U-QV5uk2' END)));
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN v0 ON ((((((((HEX(DISTINCT v0.c2))AND('3' COLLATE NOCASE)))AND(((v0.c1) IS TRUE))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN 1523656840 WHEN v0.c2 THEN rt0.c4 ELSE 'U-QV5uk2' END)) WHERE (CASE WHEN 0.16154003694470298 THEN ((v0.c2)AND(rt0.c2)) ELSE CASE ''  WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.16154003694470298 THEN ((v0.c2)AND(rt0.c2)) ELSE CASE ''  WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c3 END END) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON ((((((((HEX(DISTINCT v0.c2))AND('3' COLLATE NOCASE)))AND(((v0.c1) IS TRUE))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN 1523656840 WHEN v0.c2 THEN rt0.c4 ELSE 'U-QV5uk2' END)));
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN v0 ON ((((((((HEX(DISTINCT v0.c2))AND('3' COLLATE NOCASE)))AND(((v0.c1) IS TRUE))))AND(CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN 1523656840 WHEN v0.c2 THEN rt0.c4 ELSE 'U-QV5uk2' END)) WHERE (CASE WHEN 0.16154003694470298 THEN ((v0.c2)AND(rt0.c2)) ELSE CASE ''  WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c3 END END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((UNICODE(x'')) BETWEEN (NULLIF(DISTINCT rt0.c2, rt1.c1)) AND (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((UNICODE(x'')) BETWEEN (NULLIF(DISTINCT rt0.c2, rt1.c1)) AND (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((UNICODE(x'')) BETWEEN (NULLIF(DISTINCT rt0.c2, rt1.c1)) AND (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((UNICODE(x'')) BETWEEN (NULLIF(DISTINCT rt0.c2, rt1.c1)) AND (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((UNICODE(x'')) BETWEEN (NULLIF(DISTINCT rt0.c2, rt1.c1)) AND (rt1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((NULL) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((NULL) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((NULL) IS FALSE)) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>=(((((v0.c2)AND(v0.c2)))OR(0.782510300138241))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)>=(((((v0.c2)AND(v0.c2)))OR(0.782510300138241))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>=(((((v0.c2)AND(v0.c2)))OR(0.782510300138241))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)>=(((((v0.c2)AND(v0.c2)))OR(0.782510300138241))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>=(((((v0.c2)AND(v0.c2)))OR(0.782510300138241))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS NOT(((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE)) ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE)) ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE)) ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM ASC;
SELECT ALL * FROM v0, rt1 WHERE ((~ (x''))) ORDER BY (LIKELY(0.7695985322769118) IN ()) ASC  NULLS LAST, ((((rt1.c2)+(rt1.c2))) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND (NULL));
SELECT SUM(count) FROM (SELECT (((~ (x''))) IS TRUE)  as count FROM v0, rt1 ORDER BY (LIKELY(0.7695985322769118) IN ()) ASC  NULLS LAST, ((((rt1.c2)+(rt1.c2))) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND (NULL)));
SELECT ALL * FROM v0, rt1 WHERE ((~ (x''))) ORDER BY (LIKELY(0.7695985322769118) IN ()) ASC  NULLS LAST, ((((rt1.c2)+(rt1.c2))) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND (NULL));
SELECT SUM(count) FROM (SELECT (((~ (x''))) IS TRUE)  as count FROM v0, rt1 ORDER BY (LIKELY(0.7695985322769118) IN ()) ASC  NULLS LAST, ((((rt1.c2)+(rt1.c2))) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND (NULL)));
SELECT ALL * FROM v0, rt1 WHERE ((~ (x''))) ORDER BY (LIKELY(0.7695985322769118) IN ()) ASC  NULLS LAST, ((((rt1.c2)+(rt1.c2))) NOT BETWEEN (TRIM(DISTINCT v0.c0)) AND (NULL));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CAST(v0.c2 AS TEXT) COLLATE NOCASE) ORDER BY v0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY v0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CAST(v0.c2 AS TEXT) COLLATE NOCASE) ORDER BY v0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY v0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CAST(v0.c2 AS TEXT) COLLATE NOCASE) ORDER BY v0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1 IN ()))<(((((rt0.c0)OR(x'')))OR(rt0.c3))))) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c3)IS(x'')) ELSE ((rt0.c2)>>(rt0.c4)) END ASC  NULLS FIRST, ((((((((rt0.c3 COLLATE RTRIM)OR(rt1.c2 COLLATE NOCASE)))OR(((-753970573)GLOB(NULL)))))OR(((rt1.c2) IS TRUE))))OR(CASE 0.391157675727308  WHEN rt1.c1 THEN rt0.c1 END)) DESC  NULLS LAST, (((rt0.c1, rt0.c1, rt1.c1, rt0.c0, rt0.c0))==((rt0.c3, rt1.c0, rt0.c3, rt0.c3, rt0.c2))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))<(((((rt0.c0)OR(x'')))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c3)IS(x'')) ELSE ((rt0.c2)>>(rt0.c4)) END ASC  NULLS FIRST, ((((((((rt0.c3 COLLATE RTRIM)OR(rt1.c2 COLLATE NOCASE)))OR(((-753970573)GLOB(NULL)))))OR(((rt1.c2) IS TRUE))))OR(CASE 0.391157675727308  WHEN rt1.c1 THEN rt0.c1 END)) DESC  NULLS LAST, (((rt0.c1, rt0.c1, rt1.c1, rt0.c0, rt0.c0))=((rt0.c3, rt1.c0, rt0.c3, rt0.c3, rt0.c2))) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1 IN ()))<(((((rt0.c0)OR(x'')))OR(rt0.c3))))) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c3)IS(x'')) ELSE ((rt0.c2)>>(rt0.c4)) END ASC  NULLS FIRST, ((((((((rt0.c3 COLLATE RTRIM)OR(rt1.c2 COLLATE NOCASE)))OR(((-753970573)GLOB(NULL)))))OR(((rt1.c2) IS TRUE))))OR(CASE 0.391157675727308  WHEN rt1.c1 THEN rt0.c1 END)) DESC  NULLS LAST, (((rt0.c1, rt0.c1, rt1.c1, rt0.c0, rt0.c0))==((rt0.c3, rt1.c0, rt0.c3, rt0.c3, rt0.c2))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ()))<(((((rt0.c0)OR(x'')))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c3)IS(x'')) ELSE ((rt0.c2)>>(rt0.c4)) END ASC  NULLS FIRST, ((((((((rt0.c3 COLLATE RTRIM)OR(rt1.c2 COLLATE NOCASE)))OR(((-753970573)GLOB(NULL)))))OR(((rt1.c2) IS TRUE))))OR(CASE 0.391157675727308  WHEN rt1.c1 THEN rt0.c1 END)) DESC  NULLS LAST, (((rt0.c1, rt0.c1, rt1.c1, rt0.c0, rt0.c0))=((rt0.c3, rt1.c0, rt0.c3, rt0.c3, rt0.c2))) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c1 IN ()))<(((((rt0.c0)OR(x'')))OR(rt0.c3))))) ORDER BY CASE WHEN rt0.c2 THEN ((rt0.c3)IS(x'')) ELSE ((rt0.c2)>>(rt0.c4)) END ASC  NULLS FIRST, ((((((((rt0.c3 COLLATE RTRIM)OR(rt1.c2 COLLATE NOCASE)))OR(((-753970573)GLOB(NULL)))))OR(((rt1.c2) IS TRUE))))OR(CASE 0.391157675727308  WHEN rt1.c1 THEN rt0.c1 END)) DESC  NULLS LAST, (((rt0.c1, rt0.c1, rt1.c1, rt0.c0, rt0.c0))==((rt0.c3, rt1.c0, rt0.c3, rt0.c3, rt0.c2))) COLLATE NOCASE ASC;
SELECT ALL * FROM v0 WHERE (json_type(LTRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ((json_type(LTRIM(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_type(LTRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ((json_type(LTRIM(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_type(LTRIM(v0.c0)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)AND(UNLIKELY(DISTINCT 0.9442377902574997))))OR(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(UNLIKELY(DISTINCT 0.9442377902574997))))OR(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)AND(UNLIKELY(DISTINCT 0.9442377902574997))))OR(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(UNLIKELY(DISTINCT 0.9442377902574997))))OR(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)AND(UNLIKELY(DISTINCT 0.9442377902574997))))OR(rt1.c1 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE ((((((((((((v0.c0))<((v0.c0))))OR(((v0.c0) NOT NULL))))AND(((((v0.c2)AND(v0.c1)))OR(v0.c0)))))AND(NULL)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0))<((v0.c0))))OR(((v0.c0) NOT NULL))))AND(((((v0.c2)AND(v0.c1)))OR(v0.c0)))))AND(NULL)))OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((((v0.c0))<((v0.c0))))OR(((v0.c0) NOT NULL))))AND(((((v0.c2)AND(v0.c1)))OR(v0.c0)))))AND(NULL)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c0))<((v0.c0))))OR(((v0.c0) NOT NULL))))AND(((((v0.c2)AND(v0.c1)))OR(v0.c0)))))AND(NULL)))OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((((v0.c0))<((v0.c0))))OR(((v0.c0) NOT NULL))))AND(((((v0.c2)AND(v0.c1)))OR(v0.c0)))))AND(NULL)))OR(v0.c0)));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE WHEN (((rt0.c3))>=((rt0.c1))) THEN CAST(rt0.c2 AS TEXT) END) ORDER BY ((((NULL)AND(rt0.c3)))AND(x'')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c3))>=((rt0.c1))) THEN CAST(rt0.c2 AS TEXT) END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((NULL)AND(rt0.c3)))AND(x'')) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE WHEN (((rt0.c3))>=((rt0.c1))) THEN CAST(rt0.c2 AS TEXT) END) ORDER BY ((((NULL)AND(rt0.c3)))AND(x'')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c3))>=((rt0.c1))) THEN CAST(rt0.c2 AS TEXT) END) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((NULL)AND(rt0.c3)))AND(x'')) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CASE WHEN (((rt0.c3))>=((rt0.c1))) THEN CAST(rt0.c2 AS TEXT) END) ORDER BY ((((NULL)AND(rt0.c3)))AND(x'')) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((v0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (((rt1.c1)||(rt0.c3))) AND (((rt0.c3) NOT NULL))) FULL OUTER JOIN v0 ON (CAST(rt1.c1 AS REAL) IN (((v0.c0)!=(x'51bd')))) WHERE ((NOT ((~ (rt1.c0))))) ORDER BY 0Xfffffffff3000db1, (((rt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((LOWER(x'2369'))))  NULLS LAST, ((((((((((((((((((v0.c0) IS FALSE))AND(((((v0.c2)OR(rt0.c3)))AND(rt0.c2)))))AND(x'')))OR(736164725)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c0 END)))AND((((rt1.c2))>=((rt1.c1))))))OR(v0.c1 COLLATE RTRIM)))AND((((((((('X,r,')OR(rt0.c0)))AND(rt0.c4)))AND(rt1.c0)))AND(v0.c1)))))AND(((rt1.c2)<(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((v0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (((rt1.c1)||(rt0.c3))) AND (((rt0.c3) NOT NULL))) FULL OUTER JOIN v0 ON (CAST(rt1.c1 AS REAL) IN (((v0.c0)!=(x'51bd')))) ORDER BY 0Xfffffffff3000db1, (((rt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((LOWER(x'2369'))))  NULLS LAST, ((((((((((((((((((v0.c0) IS FALSE))AND(((((v0.c2)OR(rt0.c3)))AND(rt0.c2)))))AND(x'')))OR(736164725)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c0 END)))AND((((rt1.c2))>=((rt1.c1))))))OR(v0.c1 COLLATE RTRIM)))AND((((((((('X,r,')OR(rt0.c0)))AND(rt0.c4)))AND(rt1.c0)))AND(v0.c1)))))AND(((rt1.c2)<(rt1.c2))))  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((v0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (((rt1.c1)||(rt0.c3))) AND (((rt0.c3) NOT NULL))) FULL OUTER JOIN v0 ON (CAST(rt1.c1 AS REAL) IN (((v0.c0)!=(x'51bd')))) WHERE ((NOT ((~ (rt1.c0))))) ORDER BY 0Xfffffffff3000db1, (((rt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((LOWER(x'2369'))))  NULLS LAST, ((((((((((((((((((v0.c0) IS FALSE))AND(((((v0.c2)OR(rt0.c3)))AND(rt0.c2)))))AND(x'')))OR(736164725)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c0 END)))AND((((rt1.c2))>=((rt1.c1))))))OR(v0.c1 COLLATE RTRIM)))AND((((((((('X,r,')OR(rt0.c0)))AND(rt0.c4)))AND(rt1.c0)))AND(v0.c1)))))AND(((rt1.c2)<(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((v0.c0) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (((rt1.c1)||(rt0.c3))) AND (((rt0.c3) NOT NULL))) FULL OUTER JOIN v0 ON (CAST(rt1.c1 AS REAL) IN (((v0.c0)!=(x'51bd')))) ORDER BY 0Xfffffffff3000db1, (((rt1.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((LOWER(x'2369'))))  NULLS LAST, ((((((((((((((((((v0.c0) IS FALSE))AND(((((v0.c2)OR(rt0.c3)))AND(rt0.c2)))))AND(x'')))OR(736164725)))AND(CASE v0.c1  WHEN rt0.c2 THEN rt0.c0 END)))AND((((rt1.c2))>=((rt1.c1))))))OR(v0.c1 COLLATE RTRIM)))AND((((((((('X,r,')OR(rt0.c0)))AND(rt0.c4)))AND(rt1.c0)))AND(v0.c1)))))AND(((rt1.c2)<(rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c1)+(rt1.c0)) IN (CASE rt0.c2  WHEN 'mt' THEN rt0.c1 END, CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)+(rt1.c0)) IN (CASE rt0.c2  WHEN 'mt' THEN rt0.c1 END, CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED NATURAL JOIN rt0);
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c1)+(rt1.c0)) IN (CASE rt0.c2  WHEN 'mt' THEN rt0.c1 END, CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)+(rt1.c0)) IN (CASE rt0.c2  WHEN 'mt' THEN rt0.c1 END, CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt1 NOT INDEXED NATURAL JOIN rt0);
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c1)+(rt1.c0)) IN (CASE rt0.c2  WHEN 'mt' THEN rt0.c1 END, CAST(rt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((((((((x'b29c')OR(rt0.c1)))OR(rt0.c1)))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((x'b29c')OR(rt0.c1)))OR(rt0.c1)))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((x'b29c')OR(rt0.c1)))OR(rt0.c1)))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((x'b29c')OR(rt0.c1)))OR(rt0.c1)))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((x'b29c')OR(rt0.c1)))OR(rt0.c1)))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)))OR((rt0.c3 IN ()))));
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((((((((((rt0.c1 IN ()))AND(NULLIF(rt0.c1, rt0.c4))))OR(((rt0.c3)&(rt0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END)))OR((v0.c0 IN ()))))AND(rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c1 IN ()))AND(NULLIF(rt0.c1, rt0.c4))))OR(((rt0.c3)&(rt0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END)))OR((v0.c0 IN ()))))AND(rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((((((((((rt0.c1 IN ()))AND(NULLIF(rt0.c1, rt0.c4))))OR(((rt0.c3)&(rt0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END)))OR((v0.c0 IN ()))))AND(rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c1 IN ()))AND(NULLIF(rt0.c1, rt0.c4))))OR(((rt0.c3)&(rt0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END)))OR((v0.c0 IN ()))))AND(rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((((((((((rt0.c1 IN ()))AND(NULLIF(rt0.c1, rt0.c4))))OR(((rt0.c3)&(rt0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END)))OR((v0.c0 IN ()))))AND(rt0.c2)))OR(CASE WHEN rt0.c2 THEN rt1.c0 END)));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c0 ELSE v0.c0 END)GLOB((+ (v0.c2)))) RIGHT OUTER JOIN v0 ON 0.5776374104076409 WHERE (((('6ebm]苈B?4')>=(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('6ebm]苈B?4')>=(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c0 ELSE v0.c0 END)GLOB((+ (v0.c2)))) RIGHT OUTER JOIN v0 ON 0.5776374104076409);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c0 ELSE v0.c0 END)GLOB((+ (v0.c2)))) RIGHT OUTER JOIN v0 ON 0.5776374104076409 WHERE (((('6ebm]苈B?4')>=(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('6ebm]苈B?4')>=(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c0 ELSE v0.c0 END)GLOB((+ (v0.c2)))) RIGHT OUTER JOIN v0 ON 0.5776374104076409);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((CASE WHEN v0.c2 THEN rt0.c2 END) NOT BETWEEN ((rt1.c0 IN ())) AND (0.8006845820799583))) ORDER BY ((((((rt1.c0)AND(0xffffffffbee55c29)))AND(rt0.c2))) BETWEEN (((0.3753073249006551) BETWEEN (rt1.c1) AND (rt1.c0))) AND ((NOT (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c2 THEN rt0.c2 END) NOT BETWEEN ((rt1.c0 IN ())) AND (0.8006845820799583))) IS TRUE)  as count FROM v0 NOT INDEXED, rt1, rt0 ORDER BY ((((((rt1.c0)AND(0xffffffffbee55c29)))AND(rt0.c2))) BETWEEN (((0.3753073249006551) BETWEEN (rt1.c1) AND (rt1.c0))) AND ((NOT (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((CASE WHEN v0.c2 THEN rt0.c2 END) NOT BETWEEN ((rt1.c0 IN ())) AND (0.8006845820799583))) ORDER BY ((((((rt1.c0)AND(0xffffffffbee55c29)))AND(rt0.c2))) BETWEEN (((0.3753073249006551) BETWEEN (rt1.c1) AND (rt1.c0))) AND ((NOT (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c2 THEN rt0.c2 END) NOT BETWEEN ((rt1.c0 IN ())) AND (0.8006845820799583))) IS TRUE)  as count FROM v0 NOT INDEXED, rt1, rt0 ORDER BY ((((((rt1.c0)AND(0xffffffffbee55c29)))AND(rt0.c2))) BETWEEN (((0.3753073249006551) BETWEEN (rt1.c1) AND (rt1.c0))) AND ((NOT (rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((CASE WHEN v0.c2 THEN rt0.c2 END) NOT BETWEEN ((rt1.c0 IN ())) AND (0.8006845820799583))) ORDER BY ((((((rt1.c0)AND(0xffffffffbee55c29)))AND(rt0.c2))) BETWEEN (((0.3753073249006551) BETWEEN (rt1.c1) AND (rt1.c0))) AND ((NOT (rt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON v0.c2 COLLATE NOCASE INNER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) ISNULL) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON v0.c2 COLLATE NOCASE INNER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON v0.c2 COLLATE NOCASE INNER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) ISNULL) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON v0.c2 COLLATE NOCASE INNER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON v0.c2 COLLATE NOCASE INNER JOIN rt1 ON ((v0.c2 COLLATE RTRIM) ISNULL) WHERE (rt0.c2);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY 'P,';
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY 'P,');
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY 'P,';
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY 'P,');
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY 'P,';
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4  WHEN CAST(rt0.c0 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((NULL) IS FALSE) END) ORDER BY (((rt0.c0))>((rt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN CAST(rt0.c0 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((NULL) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))>((rt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4  WHEN CAST(rt0.c0 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((NULL) IS FALSE) END) ORDER BY (((rt0.c0))>((rt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN CAST(rt0.c0 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((NULL) IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))>((rt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c4  WHEN CAST(rt0.c0 AS NUMERIC) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((NULL) IS FALSE) END) ORDER BY (((rt0.c0))>((rt0.c0))) COLLATE BINARY;
SELECT * FROM rt1, v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))&(((((((((v0.c2)AND(rt0.c1)))AND(rt1.c2)))OR(v0.c2)))OR(v0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c0, 0.43237119212268516))) AND ((IFNULL(DISTINCT rt0.c0, rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))&(((((((((v0.c2)AND(rt0.c1)))AND(rt1.c2)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c0, 0.43237119212268516))) AND ((IFNULL(DISTINCT rt0.c0, rt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))&(((((((((v0.c2)AND(rt0.c1)))AND(rt1.c2)))OR(v0.c2)))OR(v0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c0, 0.43237119212268516))) AND ((IFNULL(DISTINCT rt0.c0, rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))&(((((((((v0.c2)AND(rt0.c1)))AND(rt1.c2)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c0, 0.43237119212268516))) AND ((IFNULL(DISTINCT rt0.c0, rt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((CAST(rt0.c0 AS TEXT))&(((((((((v0.c2)AND(rt0.c1)))AND(rt1.c2)))OR(v0.c2)))OR(v0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((LIKELIHOOD(rt1.c0, 0.43237119212268516))) AND ((IFNULL(DISTINCT rt0.c0, rt1.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((-166229925) BETWEEN ('') AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((-166229925) BETWEEN ('') AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((-166229925) BETWEEN ('') AND (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((-166229925) BETWEEN ('') AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((-166229925) BETWEEN ('') AND (v0.c0 COLLATE BINARY)));
SELECT * FROM v0, rt0 WHERE ((rt0.c4 IN (rt0.c0, rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN (rt0.c0, rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((rt0.c4 IN (rt0.c0, rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c4 IN (rt0.c0, rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((rt0.c4 IN (rt0.c0, rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON QUOTE(((v0.c1) NOT NULL)) WHERE (((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((v0.c2) NOT NULL)) AND ((- (rt0.c1))))) ORDER BY CAST(((v0.c0)OR(v0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((v0.c2) NOT NULL)) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON QUOTE(((v0.c1) NOT NULL)) ORDER BY CAST(((v0.c0)OR(v0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON QUOTE(((v0.c1) NOT NULL)) WHERE (((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((v0.c2) NOT NULL)) AND ((- (rt0.c1))))) ORDER BY CAST(((v0.c0)OR(v0.c1)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC)) BETWEEN (((v0.c2) NOT NULL)) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON rt0.c1 LEFT OUTER JOIN rt0 ON QUOTE(((v0.c1) NOT NULL)) ORDER BY CAST(((v0.c0)OR(v0.c1)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c2) IS TRUE)) NOTNULL)) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT * FROM v0 WHERE (((((v0.c2) IS TRUE)) NOTNULL)) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c2);
SELECT * FROM v0 WHERE (((((v0.c2) IS TRUE)) NOTNULL)) ORDER BY v0.c2;
SELECT ALL * FROM rt0, rt1 CROSS JOIN v0 ON 0.9534993210962754 WHERE (((((rt0.c0, rt0.c2, v0.c2, rt1.c0, rt0.c1))==((v0.c2, rt0.c4, v0.c1, rt1.c0, v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c2, v0.c2, rt1.c0, rt0.c1))=((v0.c2, rt0.c4, v0.c1, rt1.c0, v0.c1))) IN ())) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN v0 ON 0.9534993210962754);
SELECT ALL * FROM rt0, rt1 CROSS JOIN v0 ON 0.9534993210962754 WHERE (((((rt0.c0, rt0.c2, v0.c2, rt1.c0, rt0.c1))==((v0.c2, rt0.c4, v0.c1, rt1.c0, v0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c2, v0.c2, rt1.c0, rt0.c1))=((v0.c2, rt0.c4, v0.c1, rt1.c0, v0.c1))) IN ())) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN v0 ON 0.9534993210962754);
SELECT ALL * FROM rt0, rt1 CROSS JOIN v0 ON 0.9534993210962754 WHERE (((((rt0.c0, rt0.c2, v0.c2, rt1.c0, rt0.c1))==((v0.c2, rt0.c4, v0.c1, rt1.c0, v0.c1))) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (TRIM((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt1.c0 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt1.c0 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM((rt1.c0 IN ())));
SELECT COUNT(*) FROM rt1, rt0 WHERE (LIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) ORDER BY TIME(STRFTIME(rt0.c3, rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt0.c1, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1, ((rt0.c1)IS(rt0.c3)), ((x'0cb3') IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt1, rt0 ORDER BY TIME(STRFTIME(rt0.c3, rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt0.c1, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1, ((rt0.c1)IS(rt0.c3)), ((x'0cb3') IS TRUE)) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (LIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) ORDER BY TIME(STRFTIME(rt0.c3, rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt0.c1, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1, ((rt0.c1)IS(rt0.c3)), ((x'0cb3') IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) IS TRUE)  as count FROM rt1, rt0 ORDER BY TIME(STRFTIME(rt0.c3, rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt0.c1, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1, ((rt0.c1)IS(rt0.c3)), ((x'0cb3') IS TRUE)) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (LIKELY(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) ORDER BY TIME(STRFTIME(rt0.c3, rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt0.c1, rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1, ((rt0.c1)IS(rt0.c3)), ((x'0cb3') IS TRUE)) ASC;
SELECT COUNT(*) FROM rt1, v0 WHERE ((- (((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((- (((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE ((- (((rt1.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt0.c3 IN ()))GLOB(COALESCE(v0.c0, rt0.c3))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((v0.c2, rt0.c0, rt0.c0))))AND(((rt0.c4)+(v0.c2)))))OR(((rt0.c2)<(rt1.c0)))) WHERE (((rt0.c3) BETWEEN (rt1.c0) AND (v0.c1)) COLLATE NOCASE) ORDER BY ((+ (-2068650644)) IN ((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((0.543792270431952))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt1.c0) AND (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((rt0.c3 IN ()))GLOB(COALESCE(v0.c0, rt0.c3))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((v0.c2, rt0.c0, rt0.c0))))AND(((rt0.c4)+(v0.c2)))))OR(((rt0.c2)<(rt1.c0)))) ORDER BY ((+ (-2068650644)) IN ((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((0.543792270431952))))) DESC  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN v0 ON (((rt0.c3 IN ()))GLOB(COALESCE(v0.c0, rt0.c3))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((v0.c2, rt0.c0, rt0.c0))))AND(((rt0.c4)+(v0.c2)))))OR(((rt0.c2)<(rt1.c0)))) WHERE (((rt0.c3) BETWEEN (rt1.c0) AND (v0.c1)) COLLATE NOCASE) ORDER BY ((+ (-2068650644)) IN ((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((0.543792270431952))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt1.c0) AND (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON (((rt0.c3 IN ()))GLOB(COALESCE(v0.c0, rt0.c3))) RIGHT OUTER JOIN rt0 ON (((((((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((v0.c2, rt0.c0, rt0.c0))))AND(((rt0.c4)+(v0.c2)))))OR(((rt0.c2)<(rt1.c0)))) ORDER BY ((+ (-2068650644)) IN ((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((0.543792270431952))))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) ORDER BY CAST((+ (rt0.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((+ (rt0.c3)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) ORDER BY CAST((+ (rt0.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST((+ (rt0.c3)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE RTRIM COLLATE BINARY) ORDER BY CAST((+ (rt0.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 NATURAL JOIN v0 WHERE (((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c4)))OR(v0.c1)))AND(rt0.c0)))>((rt1.c1 IN (v0.c0))))) ORDER BY LIKELY(((((rt0.c2)OR(v0.c1)))OR(rt0.c3))), CASE WHEN ((((rt1.c1)OR(v0.c1)))AND(rt1.c2)) THEN (~ (v0.c1)) WHEN (2.02044912E9 IN ()) THEN INSTR(rt0.c3, v0.c1) WHEN rt1.c1 THEN (((v0.c1, v0.c0, '1558218775', rt0.c4, v0.c0)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c2, rt1.c0, v0.c2)) AND ((x'd182', rt0.c4, rt0.c3, rt1.c1, rt0.c3))) END ASC, ((((v0.c1)>(v0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c4)))OR(v0.c1)))AND(rt0.c0)))>((rt1.c1 IN (v0.c0))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0 ORDER BY LIKELY(((((rt0.c2)OR(v0.c1)))OR(rt0.c3))), CASE WHEN ((((rt1.c1)OR(v0.c1)))AND(rt1.c2)) THEN (~ (v0.c1)) WHEN (2.02044912E9 IN ()) THEN INSTR(rt0.c3, v0.c1) WHEN rt1.c1 THEN (((v0.c1, v0.c0, '1558218775', rt0.c4, v0.c0)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c2, rt1.c0, v0.c2)) AND ((x'd182', rt0.c4, rt0.c3, rt1.c1, rt0.c3))) END ASC, ((((v0.c1)>(v0.c2))) IS TRUE));
SELECT * FROM rt0, rt1 NATURAL JOIN v0 WHERE (((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c4)))OR(v0.c1)))AND(rt0.c0)))>((rt1.c1 IN (v0.c0))))) ORDER BY LIKELY(((((rt0.c2)OR(v0.c1)))OR(rt0.c3))), CASE WHEN ((((rt1.c1)OR(v0.c1)))AND(rt1.c2)) THEN (~ (v0.c1)) WHEN (2.02044912E9 IN ()) THEN INSTR(rt0.c3, v0.c1) WHEN rt1.c1 THEN (((v0.c1, v0.c0, '1558218775', rt0.c4, v0.c0)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c2, rt1.c0, v0.c2)) AND ((x'd182', rt0.c4, rt0.c3, rt1.c1, rt0.c3))) END ASC, ((((v0.c1)>(v0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c4)))OR(v0.c1)))AND(rt0.c0)))>((rt1.c1 IN (v0.c0))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0 ORDER BY LIKELY(((((rt0.c2)OR(v0.c1)))OR(rt0.c3))), CASE WHEN ((((rt1.c1)OR(v0.c1)))AND(rt1.c2)) THEN (~ (v0.c1)) WHEN (2.02044912E9 IN ()) THEN INSTR(rt0.c3, v0.c1) WHEN rt1.c1 THEN (((v0.c1, v0.c0, '1558218775', rt0.c4, v0.c0)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c2, rt1.c0, v0.c2)) AND ((x'd182', rt0.c4, rt0.c3, rt1.c1, rt0.c3))) END ASC, ((((v0.c1)>(v0.c2))) IS TRUE));
SELECT * FROM rt0, rt1 NATURAL JOIN v0 WHERE (((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c4)))OR(v0.c1)))AND(rt0.c0)))>((rt1.c1 IN (v0.c0))))) ORDER BY LIKELY(((((rt0.c2)OR(v0.c1)))OR(rt0.c3))), CASE WHEN ((((rt1.c1)OR(v0.c1)))AND(rt1.c2)) THEN (~ (v0.c1)) WHEN (2.02044912E9 IN ()) THEN INSTR(rt0.c3, v0.c1) WHEN rt1.c1 THEN (((v0.c1, v0.c0, '1558218775', rt0.c4, v0.c0)) NOT BETWEEN ((rt0.c3, rt1.c0, rt0.c2, rt1.c0, v0.c2)) AND ((x'd182', rt0.c4, rt0.c3, rt1.c1, rt0.c3))) END ASC, ((((v0.c1)>(v0.c2))) IS TRUE);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END AS INTEGER)) ORDER BY CASE ((((((((v0.c2)OR(v0.c2)))OR('/S|Ut耎j\')))AND(v0.c2)))AND(v0.c1))  WHEN CASE WHEN v0.c2 THEN v0.c2 END THEN ((v0.c2)<<(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((v0.c2) NOTNULL) IN (((v0.c1)&(0.14794480455447456))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c2)OR(v0.c2)))OR('/S|Ut耎j\')))AND(v0.c2)))AND(v0.c1))  WHEN CASE WHEN v0.c2 THEN v0.c2 END THEN ((v0.c2)<<(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((v0.c2) NOTNULL) IN (((v0.c1)&(0.14794480455447456)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END AS INTEGER)) ORDER BY CASE ((((((((v0.c2)OR(v0.c2)))OR('/S|Ut耎j\')))AND(v0.c2)))AND(v0.c1))  WHEN CASE WHEN v0.c2 THEN v0.c2 END THEN ((v0.c2)<<(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((v0.c2) NOTNULL) IN (((v0.c1)&(0.14794480455447456))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c2)OR(v0.c2)))OR('/S|Ut耎j\')))AND(v0.c2)))AND(v0.c1))  WHEN CASE WHEN v0.c2 THEN v0.c2 END THEN ((v0.c2)<<(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((v0.c2) NOTNULL) IN (((v0.c1)&(0.14794480455447456)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END AS INTEGER)) ORDER BY CASE ((((((((v0.c2)OR(v0.c2)))OR('/S|Ut耎j\')))AND(v0.c2)))AND(v0.c1))  WHEN CASE WHEN v0.c2 THEN v0.c2 END THEN ((v0.c2)<<(v0.c2)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) END, (((v0.c2) NOTNULL) IN (((v0.c1)&(0.14794480455447456))));
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((NOT (rt1.c0))))==((((rt0.c1)IS(0.18147923163008828)))))) ORDER BY CAST((NOT (0.9351030841684218)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt1.c0))))=((((rt0.c1)IS(0.18147923163008828)))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CAST((NOT (0.9351030841684218)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((NOT (rt1.c0))))==((((rt0.c1)IS(0.18147923163008828)))))) ORDER BY CAST((NOT (0.9351030841684218)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt1.c0))))=((((rt0.c1)IS(0.18147923163008828)))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CAST((NOT (0.9351030841684218)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((NOT (rt1.c0))))==((((rt0.c1)IS(0.18147923163008828)))))) ORDER BY CAST((NOT (0.9351030841684218)) AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ((((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ((((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ((((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST('k' AS BLOB) COLLATE BINARY) ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN rt0.c0 COLLATE BINARY ELSE (- (v0.c2)) END, (((((rt0.c0, rt0.c2, v0.c2))=((v0.c0, '', NULL)))) IS FALSE) ASC, (((CAST(v0.c1 AS BLOB)))<=((((380912981) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('k' AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN rt0.c0 COLLATE BINARY ELSE (- (v0.c2)) END, (((((rt0.c0, rt0.c2, v0.c2))==((v0.c0, '', NULL)))) IS FALSE) ASC, (((CAST(v0.c1 AS BLOB)))<=((((380912981) NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST('k' AS BLOB) COLLATE BINARY) ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN rt0.c0 COLLATE BINARY ELSE (- (v0.c2)) END, (((((rt0.c0, rt0.c2, v0.c2))=((v0.c0, '', NULL)))) IS FALSE) ASC, (((CAST(v0.c1 AS BLOB)))<=((((380912981) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('k' AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN rt0.c0 COLLATE BINARY ELSE (- (v0.c2)) END, (((((rt0.c0, rt0.c2, v0.c2))==((v0.c0, '', NULL)))) IS FALSE) ASC, (((CAST(v0.c1 AS BLOB)))<=((((380912981) NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (CAST('k' AS BLOB) COLLATE BINARY) ORDER BY CASE WHEN ((v0.c2) ISNULL) THEN rt0.c0 COLLATE BINARY ELSE (- (v0.c2)) END, (((((rt0.c0, rt0.c2, v0.c2))=((v0.c0, '', NULL)))) IS FALSE) ASC, (((CAST(v0.c1 AS BLOB)))<=((((380912981) NOTNULL))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (LIKELY(((rt0.c3) NOTNULL))) ORDER BY (rt0.c1 COLLATE BINARY IN ((+ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c1 COLLATE BINARY IN ((+ (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (LIKELY(((rt0.c3) NOTNULL))) ORDER BY (rt0.c1 COLLATE BINARY IN ((+ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c3) NOTNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (rt0.c1 COLLATE BINARY IN ((+ (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (LIKELY(((rt0.c3) NOTNULL))) ORDER BY (rt0.c1 COLLATE BINARY IN ((+ (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((LIKELY(rt0.c4)) BETWEEN (v0.c2) AND ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c4)) BETWEEN (v0.c2) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((LIKELY(rt0.c4)) BETWEEN (v0.c2) AND ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c4)) BETWEEN (v0.c2) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((LIKELY(rt0.c4)) BETWEEN (v0.c2) AND ((rt0.c4 IN ()))));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt0.c4) ORDER BY ((rt1.c1 COLLATE NOCASE)IS NOT('''l 5')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c1 COLLATE NOCASE)IS NOT('''l 5')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt0.c4) ORDER BY ((rt1.c1 COLLATE NOCASE)IS NOT('''l 5')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c1 COLLATE NOCASE)IS NOT('''l 5')) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt0.c4) ORDER BY ((rt1.c1 COLLATE NOCASE)IS NOT('''l 5')) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN CAST(v0.c2 AS BLOB) THEN v0.c2 ELSE (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c2 AS BLOB) THEN v0.c2 ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN CAST(v0.c2 AS BLOB) THEN v0.c2 ELSE (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c2 AS BLOB) THEN v0.c2 ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN CAST(v0.c2 AS BLOB) THEN v0.c2 ELSE (v0.c2 IN ()) END);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c3 WHERE (0.7079530467743993);
SELECT SUM(count) FROM (SELECT ALL ((0.7079530467743993) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c3);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c3 WHERE (0.7079530467743993);
SELECT SUM(count) FROM (SELECT ALL ((0.7079530467743993) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c3);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c3 WHERE (0.7079530467743993);
SELECT ALL * FROM v0, rt1 WHERE ((((v0.c1, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), ((rt1.c1)%(rt1.c0)), 'P,')) AND ((((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((((rt1.c0)AND(0.5396474981871743)))AND(v0.c1)), ((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), ((rt1.c1)%(rt1.c0)), 'P,')) AND ((((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((((rt1.c0)AND(0.5396474981871743)))AND(v0.c1)), ((v0.c0) NOTNULL))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE ((((v0.c1, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), ((rt1.c1)%(rt1.c0)), 'P,')) AND ((((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((((rt1.c0)AND(0.5396474981871743)))AND(v0.c1)), ((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), ((rt1.c1)%(rt1.c0)), 'P,')) AND ((((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((((rt1.c0)AND(0.5396474981871743)))AND(v0.c1)), ((v0.c0) NOTNULL))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE ((((v0.c1, rt1.c0, NULL)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB), ((rt1.c1)%(rt1.c0)), 'P,')) AND ((((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)), ((((rt1.c0)AND(0.5396474981871743)))AND(v0.c1)), ((v0.c0) NOTNULL)))));
SELECT COUNT(*) FROM v0, rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY NULLIF(DISTINCT ((v0.c0)AND('6ebm]苈b?4')), TRIM(rt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0, rt1 ORDER BY NULLIF(DISTINCT ((v0.c0)AND('6ebm]苈b?4')), TRIM(rt1.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY NULLIF(DISTINCT ((v0.c0)AND('6ebm]苈b?4')), TRIM(rt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0, rt1 ORDER BY NULLIF(DISTINCT ((v0.c0)AND('6ebm]苈b?4')), TRIM(rt1.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY NULLIF(DISTINCT ((v0.c0)AND('6ebm]苈b?4')), TRIM(rt1.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0) ORDER BY CAST(CAST('' AS NUMERIC) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST(CAST('' AS NUMERIC) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0) ORDER BY CAST(CAST('' AS NUMERIC) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1, v0 ORDER BY CAST(CAST('' AS NUMERIC) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (v0.c0) ORDER BY CAST(CAST('' AS NUMERIC) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN ((v0.c1 IN (rt0.c3, x'91a2'))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN ((v0.c1 IN (rt0.c3, x'91a2'))) AND (x''))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN ((v0.c1 IN (rt0.c3, x'91a2'))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) BETWEEN ((v0.c1 IN (rt0.c3, x'91a2'))) AND (x''))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((rt0.c1 COLLATE RTRIM) BETWEEN ((v0.c1 IN (rt0.c3, x'91a2'))) AND (x'')));
SELECT * FROM rt0, rt1, v0 WHERE ('-535863151') ORDER BY (((TYPEOF(v0.c2)))<>((((rt0.c3) IS FALSE)))) ASC, 0.12520738817410038  NULLS FIRST, '~*' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-535863151') IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((TYPEOF(v0.c2)))!=((((rt0.c3) IS FALSE)))) ASC, 0.12520738817410038  NULLS FIRST, '~*' DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE ('-535863151') ORDER BY (((TYPEOF(v0.c2)))<>((((rt0.c3) IS FALSE)))) ASC, 0.12520738817410038  NULLS FIRST, '~*' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-535863151') IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((TYPEOF(v0.c2)))!=((((rt0.c3) IS FALSE)))) ASC, 0.12520738817410038  NULLS FIRST, '~*' DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE ('-535863151') ORDER BY (((TYPEOF(v0.c2)))<>((((rt0.c3) IS FALSE)))) ASC, 0.12520738817410038  NULLS FIRST, '~*' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((((((~ (v0.c2)))AND(((rt0.c4) IS TRUE))))OR((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c2)))AND(((rt0.c4) IS TRUE))))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((((((~ (v0.c2)))AND(((rt0.c4) IS TRUE))))OR((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c2)))AND(((rt0.c4) IS TRUE))))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((((((~ (v0.c2)))AND(((rt0.c4) IS TRUE))))OR((NOT (v0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))!=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY CAST(CAST('147924988' AS TEXT) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))<>(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST('147924988' AS TEXT) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))!=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY CAST(CAST('147924988' AS TEXT) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))<>(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST('147924988' AS TEXT) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)))!=(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY CAST(CAST('147924988' AS TEXT) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (CAST(((v0.c2)&(v0.c2)) AS TEXT)) ORDER BY ((((v0.c1)LIKE(v0.c1)))>(rt1.c2))  NULLS LAST, 0xffffffffcec1db01 COLLATE BINARY  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)&(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((v0.c1)LIKE(v0.c1)))>(rt1.c2))  NULLS LAST, 0Xffffffffcec1db01 COLLATE BINARY  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (CAST(((v0.c2)&(v0.c2)) AS TEXT)) ORDER BY ((((v0.c1)LIKE(v0.c1)))>(rt1.c2))  NULLS LAST, 0xffffffffcec1db01 COLLATE BINARY  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2)&(v0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((v0.c1)LIKE(v0.c1)))>(rt1.c2))  NULLS LAST, 0Xffffffffcec1db01 COLLATE BINARY  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (CAST(((v0.c2)&(v0.c2)) AS TEXT)) ORDER BY ((((v0.c1)LIKE(v0.c1)))>(rt1.c2))  NULLS LAST, 0xffffffffcec1db01 COLLATE BINARY  NULLS FIRST, NULL  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((((NOT ('-1153150163')))OR((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c0, '-770202775')) AND ((v0.c2, v0.c2, v0.c2))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY (NOT (((v0.c1)IS(v0.c0))))  NULLS FIRST, (NOT (((NULL) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT ('-1153150163')))OR((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c0, '-770202775')) AND ((v0.c2, v0.c2, v0.c2))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c1)IS(v0.c0))))  NULLS FIRST, (NOT (((NULL) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((NOT ('-1153150163')))OR((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c0, '-770202775')) AND ((v0.c2, v0.c2, v0.c2))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY (NOT (((v0.c1)IS(v0.c0))))  NULLS FIRST, (NOT (((NULL) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT ('-1153150163')))OR((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c0, '-770202775')) AND ((v0.c2, v0.c2, v0.c2))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c1)IS(v0.c0))))  NULLS FIRST, (NOT (((NULL) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((((NOT ('-1153150163')))OR((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c0, '-770202775')) AND ((v0.c2, v0.c2, v0.c2))))))AND(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY (NOT (((v0.c1)IS(v0.c0))))  NULLS FIRST, (NOT (((NULL) NOT NULL)))  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (((x'') NOT BETWEEN (rt1.c2) AND (v0.c1)) COLLATE BINARY) ORDER BY ((v0.c2 COLLATE NOCASE)IS NOT(x'')) DESC  NULLS FIRST, CAST(v0.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt1.c2)<>(rt1.c1))) AND ((((v0.c0))<((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (rt1.c2) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0 ORDER BY ((v0.c2 COLLATE NOCASE)IS NOT(x'')) DESC  NULLS FIRST, CAST(v0.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt1.c2)!=(rt1.c1))) AND ((((v0.c0))<((rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((x'') NOT BETWEEN (rt1.c2) AND (v0.c1)) COLLATE BINARY) ORDER BY ((v0.c2 COLLATE NOCASE)IS NOT(x'')) DESC  NULLS FIRST, CAST(v0.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt1.c2)<>(rt1.c1))) AND ((((v0.c0))<((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (rt1.c2) AND (v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, v0 ORDER BY ((v0.c2 COLLATE NOCASE)IS NOT(x'')) DESC  NULLS FIRST, CAST(v0.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt1.c2)!=(rt1.c1))) AND ((((v0.c0))<((rt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (((x'') NOT BETWEEN (rt1.c2) AND (v0.c1)) COLLATE BINARY) ORDER BY ((v0.c2 COLLATE NOCASE)IS NOT(x'')) DESC  NULLS FIRST, CAST(v0.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST, ((CAST(v0.c2 AS BLOB)) BETWEEN (((rt1.c2)<>(rt1.c1))) AND ((((v0.c0))<((rt1.c1)))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((v0.c2)AND(CAST(v0.c0 AS TEXT)))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2)AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((v0.c2)AND(CAST(v0.c0 AS TEXT)))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c2)AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((v0.c2)AND(CAST(v0.c0 AS TEXT)))) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE)!=((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=((rt1.c1 IN (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE)<>((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE RTRIM)>=((rt1.c1 IN (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE)!=((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=((rt1.c1 IN (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE)<>((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 COLLATE RTRIM)>=((rt1.c1 IN (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE)!=((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((rt1.c2 COLLATE RTRIM)>=((rt1.c1 IN (rt1.c2)))) ASC;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)!=(rt1.c0)))<=(((((((((rt0.c4)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))OR(rt0.c2)))) WHERE (x'') ORDER BY CAST(((rt1.c0) NOTNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)<>(rt1.c0)))<=(((((((((rt0.c4)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))OR(rt0.c2)))) ORDER BY CAST(((rt1.c0) NOTNULL) AS TEXT));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)!=(rt1.c0)))<=(((((((((rt0.c4)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))OR(rt0.c2)))) WHERE (x'') ORDER BY CAST(((rt1.c0) NOTNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)<>(rt1.c0)))<=(((((((((rt0.c4)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))OR(rt0.c2)))) ORDER BY CAST(((rt1.c0) NOTNULL) AS TEXT));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c0)!=(rt1.c0)))<=(((((((((rt0.c4)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))OR(rt0.c2)))) WHERE (x'') ORDER BY CAST(((rt1.c0) NOTNULL) AS TEXT);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS TEXT)) IS FALSE)) ORDER BY (+ (((v0.c2)&(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2)&(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS TEXT)) IS FALSE)) ORDER BY (+ (((v0.c2)&(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c2)&(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS TEXT)) IS FALSE)) ORDER BY (+ (((v0.c2)&(v0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c1)|(v0.c1)))AND(rt1.c0 COLLATE NOCASE))) ORDER BY ((((CAST(0.3606715431526262 AS REAL))AND(v0.c2 COLLATE RTRIM)))AND(CASE WHEN v0.c0 THEN rt1.c2 ELSE rt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(v0.c1)))AND(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((CAST(0.3606715431526262 AS REAL))AND(v0.c2 COLLATE RTRIM)))AND(CASE WHEN v0.c0 THEN rt1.c2 ELSE rt1.c1 END))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c1)|(v0.c1)))AND(rt1.c0 COLLATE NOCASE))) ORDER BY ((((CAST(0.3606715431526262 AS REAL))AND(v0.c2 COLLATE RTRIM)))AND(CASE WHEN v0.c0 THEN rt1.c2 ELSE rt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(v0.c1)))AND(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1 ORDER BY ((((CAST(0.3606715431526262 AS REAL))AND(v0.c2 COLLATE RTRIM)))AND(CASE WHEN v0.c0 THEN rt1.c2 ELSE rt1.c1 END))  NULLS LAST);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c1)|(v0.c1)))AND(rt1.c0 COLLATE NOCASE))) ORDER BY ((((CAST(0.3606715431526262 AS REAL))AND(v0.c2 COLLATE RTRIM)))AND(CASE WHEN v0.c0 THEN rt1.c2 ELSE rt1.c1 END))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)LIKE(NULL))) ORDER BY ((v0.c2)LIKE(v0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)LIKE(NULL))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)LIKE(v0.c2)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)LIKE(NULL))) ORDER BY ((v0.c2)LIKE(v0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)LIKE(NULL))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)LIKE(v0.c2)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)LIKE(NULL))) ORDER BY ((v0.c2)LIKE(v0.c2)) COLLATE BINARY ASC;
SELECT * FROM v0 WHERE (v0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2 COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c2 COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)) IN ((rt1.c2 IN (rt1.c2)), CAST(rt1.c1 AS REAL)))) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE), ((rt1.c1 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)) IN ((rt1.c2 IN (rt1.c2)), CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE), ((rt1.c1 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)) IN ((rt1.c2 IN (rt1.c2)), CAST(rt1.c1 AS REAL)))) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE), ((rt1.c1 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)) IN ((rt1.c2 IN (rt1.c2)), CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE), ((rt1.c1 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)) IN ((rt1.c2 IN (rt1.c2)), CAST(rt1.c1 AS REAL)))) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE), ((rt1.c1 COLLATE NOCASE) ISNULL);
SELECT ALL * FROM v0, rt0 NATURAL JOIN rt1 WHERE (((rt0.c3 IN ('-365219673')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ('-365219673')) IN ())) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN rt1);
SELECT ALL * FROM v0, rt0 NATURAL JOIN rt1 WHERE (((rt0.c3 IN ('-365219673')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ('-365219673')) IN ())) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN rt1);
SELECT ALL * FROM v0, rt0 NATURAL JOIN rt1 WHERE (((rt0.c3 IN ('-365219673')) IN ()));
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))<=((v0.c0)))) ORDER BY ((TRIM(DISTINCT v0.c1, v0.c2))*(((((v0.c1)AND(v0.c1)))OR(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS TEXT)))<=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((TRIM(DISTINCT v0.c1, v0.c2))*(((((v0.c1)AND(v0.c1)))OR(v0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))<=((v0.c0)))) ORDER BY ((TRIM(DISTINCT v0.c1, v0.c2))*(((((v0.c1)AND(v0.c1)))OR(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS TEXT)))<=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((TRIM(DISTINCT v0.c1, v0.c2))*(((((v0.c1)AND(v0.c1)))OR(v0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))<=((v0.c0)))) ORDER BY ((TRIM(DISTINCT v0.c1, v0.c2))*(((((v0.c1)AND(v0.c1)))OR(v0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(rt1.c2)))OR(rt0.c1)))OR(((x'')*(rt1.c2)))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(rt1.c2)))OR(rt0.c1)))OR(((x'')*(rt1.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(rt1.c2)))OR(rt0.c1)))OR(((x'')*(rt1.c2)))) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(rt1.c2)))OR(rt0.c1)))OR(((x'')*(rt1.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((((rt1.c2)AND(rt1.c2)))OR(rt0.c1)))OR(((x'')*(rt1.c2)))) WHERE ('');
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c2);
SELECT * FROM v0, rt1 INNER JOIN rt0 ON (('Of') IS FALSE) WHERE ((((CASE WHEN rt0.c0 THEN v0.c0 END))>((((((((((v0.c0)AND(rt0.c1)))OR(v0.c2)))OR(rt1.c2)))AND(rt0.c0)))))) ORDER BY (NOT (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN v0.c0 END))>((((((((((v0.c0)AND(rt0.c1)))OR(v0.c2)))OR(rt1.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0, rt1 INNER JOIN rt0 ON (('Of') IS FALSE) ORDER BY (NOT (x''))  NULLS FIRST);
SELECT * FROM v0, rt1 INNER JOIN rt0 ON (('Of') IS FALSE) WHERE ((((CASE WHEN rt0.c0 THEN v0.c0 END))>((((((((((v0.c0)AND(rt0.c1)))OR(v0.c2)))OR(rt1.c2)))AND(rt0.c0)))))) ORDER BY (NOT (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN v0.c0 END))>((((((((((v0.c0)AND(rt0.c1)))OR(v0.c2)))OR(rt1.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM v0, rt1 INNER JOIN rt0 ON (('Of') IS FALSE) ORDER BY (NOT (x''))  NULLS FIRST);
SELECT * FROM v0, rt1 INNER JOIN rt0 ON (('Of') IS FALSE) WHERE ((((CASE WHEN rt0.c0 THEN v0.c0 END))>((((((((((v0.c0)AND(rt0.c1)))OR(v0.c2)))OR(rt1.c2)))AND(rt0.c0)))))) ORDER BY (NOT (x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ('') ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE ('') ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE ('') ORDER BY rt1.c0;
SELECT ALL COUNT(*) FROM v0 WHERE (('-1890924477' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1890924477' IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (('-1890924477' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1890924477' IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (('-1890924477' IN ()));
SELECT * FROM rt0 WHERE (1.558218775E9);
SELECT SUM(count) FROM (SELECT ((1.558218775E9) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (1.558218775E9);
SELECT SUM(count) FROM (SELECT ((1.558218775E9) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (1.558218775E9);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((CASE v0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '''d' THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)/((~ (rt1.c2))))) ORDER BY ((rtreenode(rt1.c0, rt0.c4))LIKE((~ (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '''d' THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)/((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((rtreenode(rt1.c0, rt0.c4))LIKE((~ (NULL)))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((CASE v0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '''d' THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)/((~ (rt1.c2))))) ORDER BY ((rtreenode(rt1.c0, rt0.c4))LIKE((~ (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '''d' THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)/((~ (rt1.c2))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((rtreenode(rt1.c0, rt0.c4))LIKE((~ (NULL)))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((CASE v0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '''d' THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 ELSE v0.c2 END)/((~ (rt1.c2))))) ORDER BY ((rtreenode(rt1.c0, rt0.c4))LIKE((~ (NULL)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)>=(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)>=(rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)>=(rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (rt0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (rt0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (rt0.c2 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (0.45221346536739915) AND (((rt0.c2)>>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (0.45221346536739915) AND (((rt0.c2)>>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (0.45221346536739915) AND (((rt0.c2)>>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (0.45221346536739915) AND (((rt0.c2)>>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (0.45221346536739915) AND (((rt0.c2)>>(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((NULL)OR(rt1.c2)))OR(rt0.c1)) COLLATE BINARY CROSS JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY WHERE ((((rt1.c2)) NOT BETWEEN ((x'e2bb' COLLATE NOCASE)) AND ((((((((((rt0.c4)OR(v0.c2)))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((((0X3d637f2a) NOT BETWEEN (v0.c1) AND (6.84436286E8))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((x'e2bb' COLLATE NOCASE)) AND ((((((((((rt0.c4)OR(v0.c2)))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((NULL)OR(rt1.c2)))OR(rt0.c1)) COLLATE BINARY CROSS JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY ORDER BY ((((0x3d637f2a) NOT BETWEEN (v0.c1) AND (6.84436286E8))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((NULL)OR(rt1.c2)))OR(rt0.c1)) COLLATE BINARY CROSS JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY WHERE ((((rt1.c2)) NOT BETWEEN ((x'e2bb' COLLATE NOCASE)) AND ((((((((((rt0.c4)OR(v0.c2)))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((((0X3d637f2a) NOT BETWEEN (v0.c1) AND (6.84436286E8))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((x'e2bb' COLLATE NOCASE)) AND ((((((((((rt0.c4)OR(v0.c2)))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((NULL)OR(rt1.c2)))OR(rt0.c1)) COLLATE BINARY CROSS JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY ORDER BY ((((0x3d637f2a) NOT BETWEEN (v0.c1) AND (6.84436286E8))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((NULL)OR(rt1.c2)))OR(rt0.c1)) COLLATE BINARY CROSS JOIN v0 ON (NOT (rt0.c0)) COLLATE BINARY WHERE ((((rt1.c2)) NOT BETWEEN ((x'e2bb' COLLATE NOCASE)) AND ((((((((((rt0.c4)OR(v0.c2)))AND(rt1.c2)))OR(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((((0X3d637f2a) NOT BETWEEN (v0.c1) AND (6.84436286E8))) ISNULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN '' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c4 END THEN rt0.c4 WHEN (+ (x'bb340497')) THEN ((rt0.c1)<(rt0.c0)) END ASC  NULLS LAST, (NOT (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN '' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c4 END THEN rt0.c4 WHEN (+ (x'bb340497')) THEN ((rt0.c1)<(rt0.c0)) END ASC  NULLS LAST, (NOT (((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN '' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c4 END THEN rt0.c4 WHEN (+ (x'bb340497')) THEN ((rt0.c1)<(rt0.c0)) END ASC  NULLS LAST, (NOT (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN '' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c4 END THEN rt0.c4 WHEN (+ (x'bb340497')) THEN ((rt0.c1)<(rt0.c0)) END ASC  NULLS LAST, (NOT (((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN '' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c4 END THEN rt0.c4 WHEN (+ (x'bb340497')) THEN ((rt0.c1)<(rt0.c0)) END ASC  NULLS LAST, (NOT (((rt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c1)AND(rt1.c0)))OR(rt0.c4)) COLLATE RTRIM) ORDER BY (((rt1.c2 COLLATE NOCASE))>(('G]hq&C'))) DESC  NULLS LAST, CASE WHEN '-769359858' THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt1.c0)))OR(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c2 COLLATE NOCASE))>(('G]hq&C'))) DESC  NULLS LAST, CASE WHEN '-769359858' THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c1)AND(rt1.c0)))OR(rt0.c4)) COLLATE RTRIM) ORDER BY (((rt1.c2 COLLATE NOCASE))>(('G]hq&C'))) DESC  NULLS LAST, CASE WHEN '-769359858' THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt1.c0)))OR(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c2 COLLATE NOCASE))>(('G]hq&C'))) DESC  NULLS LAST, CASE WHEN '-769359858' THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c1)AND(rt1.c0)))OR(rt0.c4)) COLLATE RTRIM) ORDER BY (((rt1.c2 COLLATE NOCASE))>(('G]hq&C'))) DESC  NULLS LAST, CASE WHEN '-769359858' THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)) END ASC  NULLS FIRST;
SELECT * FROM rt1, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (rt1.c2);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS(v0.c1)))-(((v0.c1)<(v0.c1))))) ORDER BY UNLIKELY(STRFTIME(v0.c1, v0.c1, v0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(v0.c1)))-(((v0.c1)<(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(STRFTIME(v0.c1, v0.c1, v0.c2)) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS(v0.c1)))-(((v0.c1)<(v0.c1))))) ORDER BY UNLIKELY(STRFTIME(v0.c1, v0.c1, v0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(v0.c1)))-(((v0.c1)<(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(STRFTIME(v0.c1, v0.c1, v0.c2)) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS(v0.c1)))-(((v0.c1)<(v0.c1))))) ORDER BY UNLIKELY(STRFTIME(v0.c1, v0.c1, v0.c2)) DESC;
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (rt0.c0);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL)) ORDER BY (((NULL IN (v0.c1)))*(v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((NULL IN (v0.c1)))*(v0.c1)) ASC);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL)) ORDER BY (((NULL IN (v0.c1)))*(v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((NULL IN (v0.c1)))*(v0.c1)) ASC);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS INTEGER) AS REAL)) ORDER BY (((NULL IN (v0.c1)))*(v0.c1)) ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c0) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) ORDER BY 'w60tHY' COLLATE NOCASE, ((rt0.c1)IS(rt0.c2)) COLLATE NOCASE ASC, (((('剳')|(x'')))>(CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(((rt0.c0) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 'w60tHY' COLLATE NOCASE, ((rt0.c1)IS(rt0.c2)) COLLATE NOCASE ASC, (((('剳')|(x'')))>(CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c0) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) ORDER BY 'w60tHY' COLLATE NOCASE, ((rt0.c1)IS(rt0.c2)) COLLATE NOCASE ASC, (((('剳')|(x'')))>(CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(((rt0.c0) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 'w60tHY' COLLATE NOCASE, ((rt0.c1)IS(rt0.c2)) COLLATE NOCASE ASC, (((('剳')|(x'')))>(CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c0) NOT NULL))))OR(rt0.c1 COLLATE BINARY))) ORDER BY 'w60tHY' COLLATE NOCASE, ((rt0.c1)IS(rt0.c2)) COLLATE NOCASE ASC, (((('剳')|(x'')))>(CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY (((NOT (rt1.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c3 COLLATE BINARY)) DESC, ((((((rt0.c2)<(rt0.c4)))OR(((rt1.c1)|(rt1.c1)))))AND(((((rt0.c0)OR(x'1fd2')))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NOT (rt1.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c3 COLLATE BINARY)) DESC, ((((((rt0.c2)<(rt0.c4)))OR(((rt1.c1)|(rt1.c1)))))AND(((((rt0.c0)OR(x'1fd2')))OR(rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY (((NOT (rt1.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c3 COLLATE BINARY)) DESC, ((((((rt0.c2)<(rt0.c4)))OR(((rt1.c1)|(rt1.c1)))))AND(((((rt0.c0)OR(x'1fd2')))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NOT (rt1.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c3 COLLATE BINARY)) DESC, ((((((rt0.c2)<(rt0.c4)))OR(((rt1.c1)|(rt1.c1)))))AND(((((rt0.c0)OR(x'1fd2')))OR(rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY (((NOT (rt1.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c3 COLLATE BINARY)) DESC, ((((((rt0.c2)<(rt0.c4)))OR(((rt1.c1)|(rt1.c1)))))AND(((((rt0.c0)OR(x'1fd2')))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(rt1.c2)))AND(((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)))))AND((~ (rt1.c1)))))AND(((rt1.c0) IS FALSE))))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN x'' THEN rt1.c1 END))) ORDER BY 1921231583 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(rt1.c2)))AND(((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)))))AND((~ (rt1.c1)))))AND(((rt1.c0) IS FALSE))))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN x'' THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY 1921231583 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(rt1.c2)))AND(((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)))))AND((~ (rt1.c1)))))AND(((rt1.c0) IS FALSE))))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN x'' THEN rt1.c1 END))) ORDER BY 1921231583 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))AND('')))OR(rt1.c2)))OR(rt1.c2)))AND(((rt1.c2) NOT BETWEEN (x'') AND (rt1.c1)))))AND((~ (rt1.c1)))))AND(((rt1.c0) IS FALSE))))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN x'' THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 ORDER BY 1921231583 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN CASE rt1.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt1.c0 END THEN ((rt1.c1)IS(rt0.c0)) ELSE rt0.c0 END) ORDER BY (((((rt1.c2, rt1.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c2, rt0.c2)) AND ((rt1.c0, rt0.c3, rt0.c2))))-(((rt0.c2) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt1.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt1.c0 END THEN ((rt1.c1)IS(rt0.c0)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY (((((rt1.c2, rt1.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c2, rt0.c2)) AND ((rt1.c0, rt0.c3, rt0.c2))))-(((rt0.c2) NOTNULL))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN CASE rt1.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt1.c0 END THEN ((rt1.c1)IS(rt0.c0)) ELSE rt0.c0 END) ORDER BY (((((rt1.c2, rt1.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c2, rt0.c2)) AND ((rt1.c0, rt0.c3, rt0.c2))))-(((rt0.c2) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt1.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt1.c0 END THEN ((rt1.c1)IS(rt0.c0)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY (((((rt1.c2, rt1.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c2, rt0.c2)) AND ((rt1.c0, rt0.c3, rt0.c2))))-(((rt0.c2) NOTNULL))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN CASE rt1.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt1.c0 END THEN ((rt1.c1)IS(rt0.c0)) ELSE rt0.c0 END) ORDER BY (((((rt1.c2, rt1.c2, rt0.c2)) NOT BETWEEN ((rt1.c0, rt0.c2, rt0.c2)) AND ((rt1.c0, rt0.c3, rt0.c2))))-(((rt0.c2) NOTNULL))) ASC;
SELECT ALL * FROM v0, rt1 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1)<<(rt0.c1)))) AND ((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c1)<<(rt0.c1)))) AND ((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1)<<(rt0.c1)))) AND ((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c1)<<(rt0.c1)))) AND ((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1)<<(rt0.c1)))) AND ((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c1))))));
SELECT * FROM v0 WHERE (((((((NULL, '-455530431', v0.c2)) NOT BETWEEN ((NULL, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, NULL)))))<(((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))))))) ORDER BY ((((v0.c1) NOT BETWEEN (x'3daa') AND (v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((NULL, '-455530431', v0.c2)) NOT BETWEEN ((NULL, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, NULL)))))<(((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT BETWEEN (x'3daa') AND (v0.c0))) IS FALSE));
SELECT * FROM v0 WHERE (((((((NULL, '-455530431', v0.c2)) NOT BETWEEN ((NULL, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, NULL)))))<(((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))))))) ORDER BY ((((v0.c1) NOT BETWEEN (x'3daa') AND (v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((NULL, '-455530431', v0.c2)) NOT BETWEEN ((NULL, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, NULL)))))<(((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) NOT BETWEEN (x'3daa') AND (v0.c0))) IS FALSE));
SELECT * FROM v0 WHERE (((((((NULL, '-455530431', v0.c2)) NOT BETWEEN ((NULL, v0.c2, v0.c1)) AND ((v0.c0, v0.c0, NULL)))))<(((((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))))))) ORDER BY ((((v0.c1) NOT BETWEEN (x'3daa') AND (v0.c0))) IS FALSE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CASE rt1.c1  WHEN v0.c2 THEN v0.c1 END  WHEN ((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c3 IN (rt0.c4)) ELSE ((v0.c2) IS TRUE) END INNER JOIN v0 ON CAST(((rt0.c2)IS NOT(rt0.c3)) AS BLOB) WHERE (((NULL)LIKE(rt1.c1)) COLLATE RTRIM) ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(MIN(rt0.c0, rt1.c2, rt1.c1, rt1.c2))))AND(CAST(rt0.c1 AS BLOB))))OR((- (rt1.c2)))))AND((((rt1.c1, v0.c2, rt1.c1)) NOT BETWEEN ((rt0.c1, rt1.c0, x'29ce8142')) AND ((v0.c0, rt1.c1, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CASE rt1.c1  WHEN v0.c2 THEN v0.c1 END  WHEN ((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c3 IN (rt0.c4)) ELSE ((v0.c2) IS TRUE) END INNER JOIN v0 ON CAST(((rt0.c2)IS NOT(rt0.c3)) AS BLOB) ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(MIN(rt0.c0, rt1.c2, rt1.c1, rt1.c2))))AND(CAST(rt0.c1 AS BLOB))))OR((- (rt1.c2)))))AND((((rt1.c1, v0.c2, rt1.c1)) NOT BETWEEN ((rt0.c1, rt1.c0, x'29ce8142')) AND ((v0.c0, rt1.c1, rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CASE rt1.c1  WHEN v0.c2 THEN v0.c1 END  WHEN ((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c3 IN (rt0.c4)) ELSE ((v0.c2) IS TRUE) END INNER JOIN v0 ON CAST(((rt0.c2)IS NOT(rt0.c3)) AS BLOB) WHERE (((NULL)LIKE(rt1.c1)) COLLATE RTRIM) ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(MIN(rt0.c0, rt1.c2, rt1.c1, rt1.c2))))AND(CAST(rt0.c1 AS BLOB))))OR((- (rt1.c2)))))AND((((rt1.c1, v0.c2, rt1.c1)) NOT BETWEEN ((rt0.c1, rt1.c0, x'29ce8142')) AND ((v0.c0, rt1.c1, rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE CASE rt1.c1  WHEN v0.c2 THEN v0.c1 END  WHEN ((v0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN (rt0.c3 IN (rt0.c4)) ELSE ((v0.c2) IS TRUE) END INNER JOIN v0 ON CAST(((rt0.c2)IS NOT(rt0.c3)) AS BLOB) ORDER BY ((((((((((v0.c0)<=(v0.c1)))AND(MIN(rt0.c0, rt1.c2, rt1.c1, rt1.c2))))AND(CAST(rt0.c1 AS BLOB))))OR((- (rt1.c2)))))AND((((rt1.c1, v0.c2, rt1.c1)) NOT BETWEEN ((rt0.c1, rt1.c0, x'29ce8142')) AND ((v0.c0, rt1.c1, rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))OR(((rt0.c2)IS NOT(rt0.c4)))))OR(((-1546352289) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))OR(((rt0.c2)IS NOT(rt0.c4)))))OR(((-1546352289) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))OR(((rt0.c2)IS NOT(rt0.c4)))))OR(((-1546352289) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))OR(((rt0.c2)IS NOT(rt0.c4)))))OR(((-1546352289) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL)) ORDER BY ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))OR(((rt0.c2)IS NOT(rt0.c4)))))OR(((-1546352289) NOTNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE ((CASE WHEN rt1.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN 0.08311515602913944 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END IN ())) ORDER BY '2007732711'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN 0.08311515602913944 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY '2007732711'  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((CASE WHEN rt1.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN 0.08311515602913944 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END IN ())) ORDER BY '2007732711'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN 0.08311515602913944 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY '2007732711'  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((CASE WHEN rt1.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN 0.08311515602913944 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END IN ())) ORDER BY '2007732711'  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (0.019196936653609775) AND (v0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (ROUND(((rt0.c2) IS TRUE), (((rt0.c2))==((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((ROUND(((rt0.c2) IS TRUE), (((rt0.c2))=((rt0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (0.019196936653609775) AND (v0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (0.019196936653609775) AND (v0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (ROUND(((rt0.c2) IS TRUE), (((rt0.c2))==((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((ROUND(((rt0.c2) IS TRUE), (((rt0.c2))=((rt0.c4))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (0.019196936653609775) AND (v0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (0.019196936653609775) AND (v0.c0))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (ROUND(((rt0.c2) IS TRUE), (((rt0.c2))==((rt0.c4)))));
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c1 AS TEXT)))>=((((((v0.c2)AND(0.068044663687167)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c1 AS TEXT)))>=((((((v0.c2)AND(0.068044663687167)))OR(NULL)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c1 AS TEXT)))>=((((((v0.c2)AND(0.068044663687167)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c1 AS TEXT)))>=((((((v0.c2)AND(0.068044663687167)))OR(NULL)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((CAST(v0.c1 AS TEXT)))>=((((((v0.c2)AND(0.068044663687167)))OR(NULL))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')*(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'')*(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')*(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'')*(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')*(rt1.c2)) COLLATE BINARY);
SELECT * FROM rt1 INNER JOIN rt0 ON (~ (((rt0.c0)AND(rt1.c2)))) RIGHT OUTER JOIN v0 ON SQLITE_SOURCE_ID() WHERE (((((((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(''))) ISNULL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (~ (((rt0.c0)AND(rt1.c2)))) RIGHT OUTER JOIN v0 ON SQLITE_SOURCE_ID());
SELECT * FROM rt1 INNER JOIN rt0 ON (~ (((rt0.c0)AND(rt1.c2)))) RIGHT OUTER JOIN v0 ON SQLITE_SOURCE_ID() WHERE (((((((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(''))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(''))) ISNULL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (~ (((rt0.c0)AND(rt1.c2)))) RIGHT OUTER JOIN v0 ON SQLITE_SOURCE_ID());
SELECT * FROM rt1 INNER JOIN rt0 ON (~ (((rt0.c0)AND(rt1.c2)))) RIGHT OUTER JOIN v0 ON SQLITE_SOURCE_ID() WHERE (((((((((((v0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(''))) ISNULL));
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((NULL)GLOB(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c2)) BETWEEN ((v0.c2, v0.c2, rt0.c4)) AND ((rt1.c2, NULL, rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((NULL)GLOB(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c2)) BETWEEN ((v0.c2, v0.c2, rt0.c4)) AND ((rt1.c2, NULL, rt0.c3))))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((NULL)GLOB(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c2)) BETWEEN ((v0.c2, v0.c2, rt0.c4)) AND ((rt1.c2, NULL, rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((NULL)GLOB(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c2)) BETWEEN ((v0.c2, v0.c2, rt0.c4)) AND ((rt1.c2, NULL, rt0.c3))))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((NULL)GLOB(rt0.c0)))) AND (((((rt0.c2, v0.c0, v0.c2)) BETWEEN ((v0.c2, v0.c2, rt0.c4)) AND ((rt1.c2, NULL, rt0.c3)))))));
SELECT * FROM rt1, v0, rt0 WHERE ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((((v0.c1)OR(v0.c0)))OR(rt0.c3))) IS TRUE) CROSS JOIN v0 ON (LIKE(rt0.c4, rt0.c1) IN ()) WHERE (NULLIF((rt0.c0 IN (rt0.c4)), ((rt1.c2)LIKE(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((rt0.c0 IN (rt0.c4)), ((rt1.c2)LIKE(v0.c2)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((((v0.c1)OR(v0.c0)))OR(rt0.c3))) IS TRUE) CROSS JOIN v0 ON (LIKE(rt0.c4, rt0.c1) IN ()));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((((v0.c1)OR(v0.c0)))OR(rt0.c3))) IS TRUE) CROSS JOIN v0 ON (LIKE(rt0.c4, rt0.c1) IN ()) WHERE (NULLIF((rt0.c0 IN (rt0.c4)), ((rt1.c2)LIKE(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((rt0.c0 IN (rt0.c4)), ((rt1.c2)LIKE(v0.c2)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((((v0.c1)OR(v0.c0)))OR(rt0.c3))) IS TRUE) CROSS JOIN v0 ON (LIKE(rt0.c4, rt0.c1) IN ()));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((((v0.c1)OR(v0.c0)))OR(rt0.c3))) IS TRUE) CROSS JOIN v0 ON (LIKE(rt0.c4, rt0.c1) IN ()) WHERE (NULLIF((rt0.c0 IN (rt0.c4)), ((rt1.c2)LIKE(v0.c2))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c1)*(v0.c2))) IS FALSE) WHERE (CASE WHEN (('1vhr.')>=(v0.c2)) THEN (~ (v0.c1)) ELSE 1.753845854E9 END) ORDER BY (- (CAST(rt1.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('1vhr.')>=(v0.c2)) THEN (~ (v0.c1)) ELSE 1.753845854E9 END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c1)*(v0.c2))) IS FALSE) ORDER BY (- (CAST(rt1.c0 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c1)*(v0.c2))) IS FALSE) WHERE (CASE WHEN (('1vhr.')>=(v0.c2)) THEN (~ (v0.c1)) ELSE 1.753845854E9 END) ORDER BY (- (CAST(rt1.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('1vhr.')>=(v0.c2)) THEN (~ (v0.c1)) ELSE 1.753845854E9 END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c1)*(v0.c2))) IS FALSE) ORDER BY (- (CAST(rt1.c0 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt1 ON ((((rt1.c1)*(v0.c2))) IS FALSE) WHERE (CASE WHEN (('1vhr.')>=(v0.c2)) THEN (~ (v0.c1)) ELSE 1.753845854E9 END) ORDER BY (- (CAST(rt1.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((- ('-128025745')));
SELECT SUM(count) FROM (SELECT (((- ('-128025745'))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((- ('-128025745')));
SELECT SUM(count) FROM (SELECT (((- ('-128025745'))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE ((- ('-128025745')));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(CASE '412217308'  WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c0 THEN v0.c2 WHEN rt0.c2 THEN rt1.c2 END AS INTEGER)) ORDER BY ((((rt1.c0 IN (v0.c1))))<(((((rt1.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((rt1.c2, 0.04662027492527454, v0.c0)) AND ((rt1.c1, v0.c2, rt0.c3)))))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt1.c0)|(rt0.c4)), 0.49206320024062367);
SELECT SUM(count) FROM (SELECT ((CAST(CASE '412217308'  WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c0 THEN v0.c2 WHEN rt0.c2 THEN rt1.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((rt1.c0 IN (v0.c1))))<(((((rt1.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((rt1.c2, 0.04662027492527454, v0.c0)) AND ((rt1.c1, v0.c2, rt0.c3)))))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt1.c0)|(rt0.c4)), 0.49206320024062367));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(CASE '412217308'  WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c0 THEN v0.c2 WHEN rt0.c2 THEN rt1.c2 END AS INTEGER)) ORDER BY ((((rt1.c0 IN (v0.c1))))<(((((rt1.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((rt1.c2, 0.04662027492527454, v0.c0)) AND ((rt1.c1, v0.c2, rt0.c3)))))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt1.c0)|(rt0.c4)), 0.49206320024062367);
SELECT SUM(count) FROM (SELECT ((CAST(CASE '412217308'  WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c0 THEN v0.c2 WHEN rt0.c2 THEN rt1.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((rt1.c0 IN (v0.c1))))<(((((rt1.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((rt1.c2, 0.04662027492527454, v0.c0)) AND ((rt1.c1, v0.c2, rt0.c3)))))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt1.c0)|(rt0.c4)), 0.49206320024062367));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CAST(CASE '412217308'  WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c0 THEN v0.c2 WHEN rt0.c2 THEN rt1.c2 END AS INTEGER)) ORDER BY ((((rt1.c0 IN (v0.c1))))<(((((rt1.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((rt1.c2, 0.04662027492527454, v0.c0)) AND ((rt1.c1, v0.c2, rt0.c3)))))) ASC  NULLS LAST, IFNULL(DISTINCT ((rt1.c0)|(rt0.c4)), 0.49206320024062367);
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)))IS NOT(rt0.c3 COLLATE NOCASE)) WHERE (((((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)))IS NOT(rt0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)))IS NOT(rt0.c3 COLLATE NOCASE)) WHERE (((((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)))IS NOT(rt0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON ((((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)))IS NOT(rt0.c3 COLLATE NOCASE)) WHERE (((((rt0.c4) NOT BETWEEN (v0.c2) AND (v0.c0))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (- ((((0.8921371841319763))<>((rt0.c1))))) CROSS JOIN v0 ON rt1.c1 WHERE ((((v0.c2)||(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)||(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (- ((((0.8921371841319763))<>((rt0.c1))))) CROSS JOIN v0 ON rt1.c1);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (- ((((0.8921371841319763))<>((rt0.c1))))) CROSS JOIN v0 ON rt1.c1 WHERE ((((v0.c2)||(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)||(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (- ((((0.8921371841319763))<>((rt0.c1))))) CROSS JOIN v0 ON rt1.c1);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (- ((((0.8921371841319763))<>((rt0.c1))))) CROSS JOIN v0 ON rt1.c1 WHERE ((((v0.c2)||(rt0.c0)) IN ()));
SELECT * FROM rt1, rt0 CROSS JOIN v0 ON ((((((((0.9534993210962754)AND((('1423203975')IS(0.4156323616855164)))))OR((((v0.c1))<=((rt0.c4))))))AND(rt0.c4)))OR(CASE rt1.c0  WHEN v0.c1 THEN v0.c0 ELSE rt1.c1 END)) WHERE (((((x'' COLLATE RTRIM)AND(((rt0.c1) ISNULL))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE RTRIM)AND(((rt0.c1) ISNULL))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON ((((((((0.9534993210962754)AND((('1423203975')IS(0.4156323616855164)))))OR((((v0.c1))<=((rt0.c4))))))AND(rt0.c4)))OR(CASE rt1.c0  WHEN v0.c1 THEN v0.c0 ELSE rt1.c1 END)));
SELECT * FROM rt1, rt0 CROSS JOIN v0 ON ((((((((0.9534993210962754)AND((('1423203975')IS(0.4156323616855164)))))OR((((v0.c1))<=((rt0.c4))))))AND(rt0.c4)))OR(CASE rt1.c0  WHEN v0.c1 THEN v0.c0 ELSE rt1.c1 END)) WHERE (((((x'' COLLATE RTRIM)AND(((rt0.c1) ISNULL))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((x'' COLLATE RTRIM)AND(((rt0.c1) ISNULL))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN v0 ON ((((((((0.9534993210962754)AND((('1423203975')IS(0.4156323616855164)))))OR((((v0.c1))<=((rt0.c4))))))AND(rt0.c4)))OR(CASE rt1.c0  WHEN v0.c1 THEN v0.c0 ELSE rt1.c1 END)));
SELECT * FROM rt1, rt0 CROSS JOIN v0 ON ((((((((0.9534993210962754)AND((('1423203975')IS(0.4156323616855164)))))OR((((v0.c1))<=((rt0.c4))))))AND(rt0.c4)))OR(CASE rt1.c0  WHEN v0.c1 THEN v0.c0 ELSE rt1.c1 END)) WHERE (((((x'' COLLATE RTRIM)AND(((rt0.c1) ISNULL))))OR(NULL)));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2) NOTNULL)))>=(((((v0.c1))<((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOTNULL)))>=(((((v0.c1))<((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2) NOTNULL)))>=(((((v0.c1))<((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOTNULL)))>=(((((v0.c1))<((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2) NOTNULL)))>=(((((v0.c1))<((v0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN v0 ON ((((((((rt1.c0)OR(x'')))OR(v0.c0)))AND(rt1.c1)))OR('734465748')) COLLATE BINARY WHERE (-3.65219673E8);
SELECT SUM(count) FROM (SELECT ALL ((-3.65219673E8) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN v0 ON ((((((((rt1.c0)OR(x'')))OR(v0.c0)))AND(rt1.c1)))OR('734465748')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN v0 ON ((((((((rt1.c0)OR(x'')))OR(v0.c0)))AND(rt1.c1)))OR('734465748')) COLLATE BINARY WHERE (-3.65219673E8);
SELECT SUM(count) FROM (SELECT ALL ((-3.65219673E8) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN v0 ON ((((((((rt1.c0)OR(x'')))OR(v0.c0)))AND(rt1.c1)))OR('734465748')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON x'' INNER JOIN v0 ON ((((((((rt1.c0)OR(x'')))OR(v0.c0)))AND(rt1.c1)))OR('734465748')) COLLATE BINARY WHERE (-3.65219673E8);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*((((rt0.c2, rt0.c1, rt0.c4))>((rt0.c3, NULL, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*((((rt0.c2, rt0.c1, rt0.c4))>((rt0.c3, NULL, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*((((rt0.c2, rt0.c1, rt0.c4))>((rt0.c3, NULL, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*((((rt0.c2, rt0.c1, rt0.c4))>((rt0.c3, NULL, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*((((rt0.c2, rt0.c1, rt0.c4))>((rt0.c3, NULL, rt0.c1))))));
SELECT * FROM v0, rt0 WHERE ((NOT (v0.c2))) ORDER BY ((((rt0.c3)OR(''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3)OR(''))) IS FALSE));
SELECT * FROM v0, rt0 WHERE ((NOT (v0.c2))) ORDER BY ((((rt0.c3)OR(''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3)OR(''))) IS FALSE));
SELECT * FROM v0, rt0 WHERE ((NOT (v0.c2))) ORDER BY ((((rt0.c3)OR(''))) IS FALSE);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((- (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c3))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((- (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c3))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((- (rt0.c3)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)-(rt1.c1))))<(((((rt1.c0))<=((rt1.c2))))))) ORDER BY 0x2e6eaed4 DESC  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.7088757978057657))*(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)-(rt1.c1))))<(((((rt1.c0))<=((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY 0x2e6eaed4 DESC  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.7088757978057657))*(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)-(rt1.c1))))<(((((rt1.c0))<=((rt1.c2))))))) ORDER BY 0x2e6eaed4 DESC  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.7088757978057657))*(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)-(rt1.c1))))<(((((rt1.c0))<=((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY 0x2e6eaed4 DESC  NULLS FIRST, ((LIKELIHOOD(rt1.c2, 0.7088757978057657))*(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (load_extension('''dXrJ') COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((load_extension('''dXrJ') COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (load_extension('''dXrJ') COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((load_extension('''dXrJ') COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((~ (rt0.c2)))<(CAST(0.8921371841319763 AS REAL)))) ORDER BY (((rt1.c1 IN ()))>=(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))<(CAST(0.8921371841319763 AS REAL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1 IN ()))>=(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt1.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((~ (rt0.c2)))<(CAST(0.8921371841319763 AS REAL)))) ORDER BY (((rt1.c1 IN ()))>=(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))<(CAST(0.8921371841319763 AS REAL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1 IN ()))>=(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt1.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((~ (rt0.c2)))<(CAST(0.8921371841319763 AS REAL)))) ORDER BY (((rt1.c1 IN ()))>=(CAST(rt0.c0 AS INTEGER)))  NULLS LAST, rt1.c0 DESC;
SELECT ALL * FROM v0 INNER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((((((NULL)AND(rt1.c0)))AND('')))OR(v0.c1)))OR(rt1.c2)) AS REAL) WHERE ((((+ (rt0.c1)))>=(UPPER(rt0.c1)))) ORDER BY ((((((((v0.c2 COLLATE NOCASE)AND((rt0.c0 IN ()))))OR(CASE ''  WHEN rt1.c2 THEN rt1.c2 ELSE v0.c2 END)))OR(((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))))OR(CAST(rt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>=(UPPER(rt0.c1)))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((((((NULL)AND(rt1.c0)))AND('')))OR(v0.c1)))OR(rt1.c2)) AS REAL) ORDER BY ((((((((v0.c2 COLLATE NOCASE)AND((rt0.c0 IN ()))))OR(CASE ''  WHEN rt1.c2 THEN rt1.c2 ELSE v0.c2 END)))OR(((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))))OR(CAST(rt0.c0 AS BLOB))) ASC);
SELECT ALL * FROM v0 INNER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((((((NULL)AND(rt1.c0)))AND('')))OR(v0.c1)))OR(rt1.c2)) AS REAL) WHERE ((((+ (rt0.c1)))>=(UPPER(rt0.c1)))) ORDER BY ((((((((v0.c2 COLLATE NOCASE)AND((rt0.c0 IN ()))))OR(CASE ''  WHEN rt1.c2 THEN rt1.c2 ELSE v0.c2 END)))OR(((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))))OR(CAST(rt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>=(UPPER(rt0.c1)))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((((((NULL)AND(rt1.c0)))AND('')))OR(v0.c1)))OR(rt1.c2)) AS REAL) ORDER BY ((((((((v0.c2 COLLATE NOCASE)AND((rt0.c0 IN ()))))OR(CASE ''  WHEN rt1.c2 THEN rt1.c2 ELSE v0.c2 END)))OR(((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))))OR(CAST(rt0.c0 AS BLOB))) ASC);
SELECT ALL * FROM v0 INNER JOIN rt1 ON (- ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt1.c2))))) LEFT OUTER JOIN rt0 ON CAST(((((((((NULL)AND(rt1.c0)))AND('')))OR(v0.c1)))OR(rt1.c2)) AS REAL) WHERE ((((+ (rt0.c1)))>=(UPPER(rt0.c1)))) ORDER BY ((((((((v0.c2 COLLATE NOCASE)AND((rt0.c0 IN ()))))OR(CASE ''  WHEN rt1.c2 THEN rt1.c2 ELSE v0.c2 END)))OR(((v0.c2) BETWEEN (rt1.c1) AND (rt1.c1)))))OR(CAST(rt0.c0 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c1)*(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN x'' ELSE v0.c1 END THEN ((v0.c1) NOT NULL) ELSE ((v0.c1) ISNULL) END) ORDER BY v0.c1, ((v0.c2)LIKE((~ (v0.c2)))) DESC  NULLS FIRST, (((((((((((v0.c0, v0.c2, v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c2, v0.c1)) AND ((v0.c2, v0.c1, v0.c1, v0.c1, v0.c2))))AND((- (v0.c2)))))AND(((v0.c0) IS FALSE))))AND(((v0.c2)==(v0.c1)))))AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE 0.5678422753229315 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)*(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN x'' ELSE v0.c1 END THEN ((v0.c1) NOT NULL) ELSE ((v0.c1) ISNULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c1, ((v0.c2)LIKE((~ (v0.c2)))) DESC  NULLS FIRST, (((((((((((v0.c0, v0.c2, v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c2, v0.c1)) AND ((v0.c2, v0.c1, v0.c1, v0.c1, v0.c2))))AND((- (v0.c2)))))AND(((v0.c0) IS FALSE))))AND(((v0.c2)==(v0.c1)))))AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE 0.5678422753229315 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c1)*(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN x'' ELSE v0.c1 END THEN ((v0.c1) NOT NULL) ELSE ((v0.c1) ISNULL) END) ORDER BY v0.c1, ((v0.c2)LIKE((~ (v0.c2)))) DESC  NULLS FIRST, (((((((((((v0.c0, v0.c2, v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c2, v0.c1)) AND ((v0.c2, v0.c1, v0.c1, v0.c1, v0.c2))))AND((- (v0.c2)))))AND(((v0.c0) IS FALSE))))AND(((v0.c2)==(v0.c1)))))AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE 0.5678422753229315 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)*(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN x'' ELSE v0.c1 END THEN ((v0.c1) NOT NULL) ELSE ((v0.c1) ISNULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c1, ((v0.c2)LIKE((~ (v0.c2)))) DESC  NULLS FIRST, (((((((((((v0.c0, v0.c2, v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c2, v0.c1)) AND ((v0.c2, v0.c1, v0.c1, v0.c1, v0.c2))))AND((- (v0.c2)))))AND(((v0.c0) IS FALSE))))AND(((v0.c2)==(v0.c1)))))AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE 0.5678422753229315 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c1)*(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN x'' ELSE v0.c1 END THEN ((v0.c1) NOT NULL) ELSE ((v0.c1) ISNULL) END) ORDER BY v0.c1, ((v0.c2)LIKE((~ (v0.c2)))) DESC  NULLS FIRST, (((((((((((v0.c0, v0.c2, v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c2, v0.c1)) AND ((v0.c2, v0.c1, v0.c1, v0.c1, v0.c2))))AND((- (v0.c2)))))AND(((v0.c0) IS FALSE))))AND(((v0.c2)==(v0.c1)))))AND(CASE v0.c0  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE 0.5678422753229315 END));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c1)<>(NULL))  WHEN ((((((((rt0.c3)OR(v0.c1)))AND(v0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN (((v0.c0))=((rt0.c1))) WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)) WHEN CAST(v0.c1 AS BLOB) THEN (v0.c1 IN ()) WHEN ((x'1363d34c') IS FALSE) THEN ((rt0.c1)<(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END) ORDER BY NULLIF(DISTINCT ((rt0.c4)<=(v0.c2)), (((rt0.c4, rt0.c3, v0.c0)) NOT BETWEEN ((v0.c2, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c2, '-753970573')))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)!=(NULL))  WHEN ((((((((rt0.c3)OR(v0.c1)))AND(v0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN (((v0.c0))=((rt0.c1))) WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)) WHEN CAST(v0.c1 AS BLOB) THEN (v0.c1 IN ()) WHEN ((x'1363d34c') IS FALSE) THEN ((rt0.c1)<(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM v0, rt0 ORDER BY NULLIF(DISTINCT ((rt0.c4)<=(v0.c2)), (((rt0.c4, rt0.c3, v0.c0)) NOT BETWEEN ((v0.c2, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c2, '-753970573')))), rt0.c1);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c1)<>(NULL))  WHEN ((((((((rt0.c3)OR(v0.c1)))AND(v0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN (((v0.c0))=((rt0.c1))) WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)) WHEN CAST(v0.c1 AS BLOB) THEN (v0.c1 IN ()) WHEN ((x'1363d34c') IS FALSE) THEN ((rt0.c1)<(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END) ORDER BY NULLIF(DISTINCT ((rt0.c4)<=(v0.c2)), (((rt0.c4, rt0.c3, v0.c0)) NOT BETWEEN ((v0.c2, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c2, '-753970573')))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1)!=(NULL))  WHEN ((((((((rt0.c3)OR(v0.c1)))AND(v0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN (((v0.c0))=((rt0.c1))) WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)) WHEN CAST(v0.c1 AS BLOB) THEN (v0.c1 IN ()) WHEN ((x'1363d34c') IS FALSE) THEN ((rt0.c1)<(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM v0, rt0 ORDER BY NULLIF(DISTINCT ((rt0.c4)<=(v0.c2)), (((rt0.c4, rt0.c3, v0.c0)) NOT BETWEEN ((v0.c2, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c2, '-753970573')))), rt0.c1);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE ((v0.c1)<>(NULL))  WHEN ((((((((rt0.c3)OR(v0.c1)))AND(v0.c2)))OR(rt0.c0)))OR(rt0.c2)) THEN (((v0.c0))=((rt0.c1))) WHEN CAST(rt0.c2 AS TEXT) THEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)) WHEN CAST(v0.c1 AS BLOB) THEN (v0.c1 IN ()) WHEN ((x'1363d34c') IS FALSE) THEN ((rt0.c1)<(v0.c0)) WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) END) ORDER BY NULLIF(DISTINCT ((rt0.c4)<=(v0.c2)), (((rt0.c4, rt0.c3, v0.c0)) NOT BETWEEN ((v0.c2, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c2, '-753970573')))), rt0.c1;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((((v0.c0) ISNULL), CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c1 THEN 0.6119751077791395 WHEN 0.5201987473998408 THEN rt1.c0 END, (rt1.c0 IN ())))<=((((rt0.c0)IS NOT(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, DATETIME(v0.c2, v0.c0, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL), CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c1 THEN 0.6119751077791395 WHEN 0.5201987473998408 THEN rt1.c0 END, (rt1.c0 IN ())))<=((((rt0.c0)IS NOT(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, DATETIME(v0.c2, v0.c0, rt0.c4))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((((v0.c0) ISNULL), CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c1 THEN 0.6119751077791395 WHEN 0.5201987473998408 THEN rt1.c0 END, (rt1.c0 IN ())))<=((((rt0.c0)IS NOT(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, DATETIME(v0.c2, v0.c0, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL), CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c1 THEN 0.6119751077791395 WHEN 0.5201987473998408 THEN rt1.c0 END, (rt1.c0 IN ())))<=((((rt0.c0)IS NOT(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, DATETIME(v0.c2, v0.c0, rt0.c4))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((((v0.c0) ISNULL), CASE WHEN rt0.c2 THEN rt1.c1 WHEN v0.c1 THEN 0.6119751077791395 WHEN 0.5201987473998408 THEN rt1.c0 END, (rt1.c0 IN ())))<=((((rt0.c0)IS NOT(rt0.c0)), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, DATETIME(v0.c2, v0.c0, rt0.c4)))));
SELECT ALL * FROM rt1, rt0, v0 WHERE (((rt1.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((rt1.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (((rt1.c1 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c2)AND(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c2)AND(v0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)AND(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((rt1.c2)AND(v0.c2)) COLLATE BINARY);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 COLLATE BINARY)>((x'' IN (rt0.c0))))) ORDER BY ((x'')>>(rt0.c4)) COLLATE RTRIM DESC  NULLS LAST, (CASE rt0.c1  WHEN rt0.c4 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 WHEN x'' THEN rt0.c3 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)>((x'' IN (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((x'')>>(rt0.c4)) COLLATE RTRIM DESC  NULLS LAST, (CASE rt0.c1  WHEN rt0.c4 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 WHEN x'' THEN rt0.c3 END IN ()) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 COLLATE BINARY)>((x'' IN (rt0.c0))))) ORDER BY ((x'')>>(rt0.c4)) COLLATE RTRIM DESC  NULLS LAST, (CASE rt0.c1  WHEN rt0.c4 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 WHEN x'' THEN rt0.c3 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)>((x'' IN (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((x'')>>(rt0.c4)) COLLATE RTRIM DESC  NULLS LAST, (CASE rt0.c1  WHEN rt0.c4 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 WHEN x'' THEN rt0.c3 END IN ()) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((v0.c0 COLLATE BINARY)>((x'' IN (rt0.c0))))) ORDER BY ((x'')>>(rt0.c4)) COLLATE RTRIM DESC  NULLS LAST, (CASE rt0.c1  WHEN rt0.c4 THEN v0.c2 WHEN rt0.c3 THEN v0.c0 WHEN x'' THEN rt0.c3 END IN ()) ASC;
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY CAST((+ (rt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST((+ (rt1.c0)) AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY CAST((+ (rt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CAST((+ (rt1.c0)) AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY CAST((+ (rt1.c0)) AS REAL) DESC;
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c3)GLOB(rt0.c1)))AND(v0.c0)))AND((NOT (rt0.c2)))))OR(rt0.c1)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)GLOB(rt0.c1)))AND(v0.c0)))AND((NOT (rt0.c2)))))OR(rt0.c1)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c3)GLOB(rt0.c1)))AND(v0.c0)))AND((NOT (rt0.c2)))))OR(rt0.c1)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)GLOB(rt0.c1)))AND(v0.c0)))AND((NOT (rt0.c2)))))OR(rt0.c1)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c3)GLOB(rt0.c1)))AND(v0.c0)))AND((NOT (rt0.c2)))))OR(rt0.c1)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST(((((rt0.c4)OR(v0.c2)))OR(rt0.c4)) AS BLOB)) ORDER BY ((+ (v0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c4)OR(v0.c2)))OR(rt0.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((+ (v0.c1)) IN ()) DESC);
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST(((((rt0.c4)OR(v0.c2)))OR(rt0.c4)) AS BLOB)) ORDER BY ((+ (v0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c4)OR(v0.c2)))OR(rt0.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((+ (v0.c1)) IN ()) DESC);
SELECT ALL * FROM rt0, rt1, v0 WHERE (CAST(((((rt0.c4)OR(v0.c2)))OR(rt0.c4)) AS BLOB)) ORDER BY ((+ (v0.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((x'' IN ())) ORDER BY ((x'')LIKE(x''))  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END) IS TRUE) ASC, ((LIKELIHOOD(DISTINCT rt1.c1, 0.8264710718057231)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'')LIKE(x''))  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END) IS TRUE) ASC, ((LIKELIHOOD(DISTINCT rt1.c1, 0.8264710718057231)) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((x'' IN ())) ORDER BY ((x'')LIKE(x''))  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END) IS TRUE) ASC, ((LIKELIHOOD(DISTINCT rt1.c1, 0.8264710718057231)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((x'')LIKE(x''))  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END) IS TRUE) ASC, ((LIKELIHOOD(DISTINCT rt1.c1, 0.8264710718057231)) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((x'' IN ())) ORDER BY ((x'')LIKE(x''))  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c1 END) IS TRUE) ASC, ((LIKELIHOOD(DISTINCT rt1.c1, 0.8264710718057231)) IS FALSE) ASC;
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END)))OR(LIKE(rt1.c1, rt1.c0, 'ꢩ'))))AND(rt1.c2)))OR('-488372957')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END)))OR(LIKE(rt1.c1, rt1.c0, 'ꢩ'))))AND(rt1.c2)))OR('-488372957'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END)))OR(LIKE(rt1.c1, rt1.c0, 'ꢩ'))))AND(rt1.c2)))OR('-488372957')));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END)))OR(LIKE(rt1.c1, rt1.c0, 'ꢩ'))))AND(rt1.c2)))OR('-488372957'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c1) AND (NULL)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END)))OR(LIKE(rt1.c1, rt1.c0, 'ꢩ'))))AND(rt1.c2)))OR('-488372957')));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)AND(v0.c1)))AND(v0.c1)))&('-1428563259')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))&('-1428563259'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)AND(v0.c1)))AND(v0.c1)))&('-1428563259')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))&('-1428563259'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)AND(v0.c1)))AND(v0.c1)))&('-1428563259')));
SELECT COUNT(*) FROM rt1 WHERE (TRIM(0.389260330561663, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.389260330561663, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(0.389260330561663, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.389260330561663, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(0.389260330561663, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN 0xc66104e ELSE (((v0.c2))<=((v0.c0))) END) ORDER BY (- (0.16347500374631807)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN 0xc66104e ELSE (((v0.c2))<=((v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY (- (0.16347500374631807)) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN 0xc66104e ELSE (((v0.c2))<=((v0.c0))) END) ORDER BY (- (0.16347500374631807)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN 0xc66104e ELSE (((v0.c2))<=((v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY (- (0.16347500374631807)) ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN 0xc66104e ELSE (((v0.c2))<=((v0.c0))) END) ORDER BY (- (0.16347500374631807)) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)|(NULL)))!=(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(NULL)))<>(rt0.c3))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)|(NULL)))!=(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(NULL)))<>(rt0.c3))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)|(NULL)))!=(rt0.c3)));
SELECT ALL * FROM rt0 WHERE ((NOT (UPPER(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UPPER(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (UPPER(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UPPER(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (UPPER(rt0.c4))));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 LEFT OUTER JOIN v0 ON CASE (NOT (rt0.c2))  WHEN rt0.c1 THEN ((rt0.c0)>=('-1110004909')) ELSE (('')OR(rt0.c4)) END WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c2 END)AND((((0.08428672030392415, rt0.c0, rt0.c0))==((rt1.c2, rt1.c2, rt1.c1))))))AND((NOT (rt0.c4)))))AND('')))AND(0Xffffffffaa63d939))) ORDER BY (((((rt0.c4 IN ()))AND(((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c2 END)AND((((0.08428672030392415, rt0.c0, rt0.c0))==((rt1.c2, rt1.c2, rt1.c1))))))AND((NOT (rt0.c4)))))AND('')))AND(0Xffffffffaa63d939))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN v0 ON CASE (NOT (rt0.c2))  WHEN rt0.c1 THEN ((rt0.c0)>=('-1110004909')) ELSE (('')OR(rt0.c4)) END ORDER BY (((((rt0.c4 IN ()))AND(((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 LEFT OUTER JOIN v0 ON CASE (NOT (rt0.c2))  WHEN rt0.c1 THEN ((rt0.c0)>=('-1110004909')) ELSE (('')OR(rt0.c4)) END WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c2 END)AND((((0.08428672030392415, rt0.c0, rt0.c0))==((rt1.c2, rt1.c2, rt1.c1))))))AND((NOT (rt0.c4)))))AND('')))AND(0Xffffffffaa63d939))) ORDER BY (((((rt0.c4 IN ()))AND(((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE v0.c2 END)AND((((0.08428672030392415, rt0.c0, rt0.c0))==((rt1.c2, rt1.c2, rt1.c1))))))AND((NOT (rt0.c4)))))AND('')))AND(0Xffffffffaa63d939))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN v0 ON CASE (NOT (rt0.c2))  WHEN rt0.c1 THEN ((rt0.c0)>=('-1110004909')) ELSE (('')OR(rt0.c4)) END ORDER BY (((((rt0.c4 IN ()))AND(((((v0.c1)OR(rt0.c0)))AND(rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c2 END)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON COALESCE(DISTINCT (+ (rt1.c0)), CAST(rt1.c2 AS BLOB)) WHERE (x'c81c');
SELECT SUM(count) FROM (SELECT ((x'c81c') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON COALESCE(DISTINCT (+ (rt1.c0)), CAST(rt1.c2 AS BLOB)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON COALESCE(DISTINCT (+ (rt1.c0)), CAST(rt1.c2 AS BLOB)) WHERE (x'c81c');
SELECT SUM(count) FROM (SELECT ((x'c81c') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON COALESCE(DISTINCT (+ (rt1.c0)), CAST(rt1.c2 AS BLOB)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON COALESCE(DISTINCT (+ (rt1.c0)), CAST(rt1.c2 AS BLOB)) WHERE (x'c81c');
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON (+ ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c4))))) FULL OUTER JOIN rt0 ON TRIM(TRIM(rt0.c4), LIKELIHOOD(v0.c1, 0.5163446601723074)) WHERE (((CAST(rt0.c1 AS BLOB))||(0.7499631818715354)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))||(0.7499631818715354))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (+ ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c4))))) FULL OUTER JOIN rt0 ON TRIM(TRIM(rt0.c4), LIKELIHOOD(v0.c1, 0.5163446601723074)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt1 ON (+ ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c4))))) FULL OUTER JOIN rt0 ON TRIM(TRIM(rt0.c4), LIKELIHOOD(v0.c1, 0.5163446601723074)) WHERE (((CAST(rt0.c1 AS BLOB))||(0.7499631818715354)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))||(0.7499631818715354))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (+ ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c4))))) FULL OUTER JOIN rt0 ON TRIM(TRIM(rt0.c4), LIKELIHOOD(v0.c1, 0.5163446601723074)));
SELECT ALL * FROM v0, rt0 WHERE ((((- (v0.c0))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c4))) ORDER BY ((CAST(v0.c1 AS REAL))&(CAST(rt0.c1 AS NUMERIC))) ASC, ((LIKELIHOOD(v0.c1, 0.9399028965403342))IS((((v0.c2))>((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c4))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c1 AS REAL))&(CAST(rt0.c1 AS NUMERIC))) ASC, ((LIKELIHOOD(v0.c1, 0.9399028965403342))IS((((v0.c2))>((rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((- (v0.c0))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c4))) ORDER BY ((CAST(v0.c1 AS REAL))&(CAST(rt0.c1 AS NUMERIC))) ASC, ((LIKELIHOOD(v0.c1, 0.9399028965403342))IS((((v0.c2))>((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c4))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c1 AS REAL))&(CAST(rt0.c1 AS NUMERIC))) ASC, ((LIKELIHOOD(v0.c1, 0.9399028965403342))IS((((v0.c2))>((rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((- (v0.c0))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c4))) ORDER BY ((CAST(v0.c1 AS REAL))&(CAST(rt0.c1 AS NUMERIC))) ASC, ((LIKELIHOOD(v0.c1, 0.9399028965403342))IS((((v0.c2))>((rt0.c3)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((rt0.c1)) BETWEEN ((CASE 'U'  WHEN rt0.c0 THEN rt1.c1 ELSE v0.c1 END)) AND ((rt0.c3)))) ORDER BY CASE WHEN ((v0.c2)+(0.2332551742386827)) THEN '\rkO' ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CASE 'U'  WHEN rt0.c0 THEN rt1.c1 ELSE v0.c1 END)) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON NULL ORDER BY CASE WHEN ((v0.c2)+(0.2332551742386827)) THEN '\rkO' ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((rt0.c1)) BETWEEN ((CASE 'U'  WHEN rt0.c0 THEN rt1.c1 ELSE v0.c1 END)) AND ((rt0.c3)))) ORDER BY CASE WHEN ((v0.c2)+(0.2332551742386827)) THEN '\rkO' ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CASE 'U'  WHEN rt0.c0 THEN rt1.c1 ELSE v0.c1 END)) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON NULL ORDER BY CASE WHEN ((v0.c2)+(0.2332551742386827)) THEN '\rkO' ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON NULL WHERE ((((rt0.c1)) BETWEEN ((CASE 'U'  WHEN rt0.c0 THEN rt1.c1 ELSE v0.c1 END)) AND ((rt0.c3)))) ORDER BY CASE WHEN ((v0.c2)+(0.2332551742386827)) THEN '\rkO' ELSE CASE WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2)AND(v0.c2)))OR(rt1.c1)))LIKE(TYPEOF(v0.c0))) WHERE (((v0.c2 COLLATE RTRIM)/(CASE NULL  WHEN v0.c0 THEN v0.c2 WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY (((rt1.c0 COLLATE NOCASE))!=(((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM)/(CASE NULL  WHEN v0.c0 THEN v0.c2 WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2)AND(v0.c2)))OR(rt1.c1)))LIKE(TYPEOF(v0.c0))) ORDER BY (((rt1.c0 COLLATE NOCASE))<>(((+ (rt1.c1))))));
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2)AND(v0.c2)))OR(rt1.c1)))LIKE(TYPEOF(v0.c0))) WHERE (((v0.c2 COLLATE RTRIM)/(CASE NULL  WHEN v0.c0 THEN v0.c2 WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY (((rt1.c0 COLLATE NOCASE))!=(((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE RTRIM)/(CASE NULL  WHEN v0.c0 THEN v0.c2 WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2)AND(v0.c2)))OR(rt1.c1)))LIKE(TYPEOF(v0.c0))) ORDER BY (((rt1.c0 COLLATE NOCASE))<>(((+ (rt1.c1))))));
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((((((v0.c2)AND(v0.c2)))OR(rt1.c1)))LIKE(TYPEOF(v0.c0))) WHERE (((v0.c2 COLLATE RTRIM)/(CASE NULL  WHEN v0.c0 THEN v0.c2 WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY (((rt1.c0 COLLATE NOCASE))!=(((+ (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ('-375354280');
SELECT SUM(count) FROM (SELECT (('-375354280') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-375354280');
SELECT SUM(count) FROM (SELECT (('-375354280') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-375354280');
SELECT ALL * FROM v0, rt0, rt1 WHERE (HEX(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))<<(((((rt1.c1)OR(rt1.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))<<(((((rt1.c1)OR(rt1.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (HEX(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))<<(((((rt1.c1)OR(rt1.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))<<(((((rt1.c1)OR(rt1.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0, rt1 WHERE (HEX(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))<<(((((rt1.c1)OR(rt1.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST(CASE v0.c1  WHEN rt0.c4 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END AS TEXT) WHERE (CASE WHEN ((rt0.c1)<(rt1.c2)) THEN ((v0.c1) NOTNULL) ELSE ((rt1.c0)LIKE(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt1.c2)) THEN ((v0.c1) NOTNULL) ELSE ((rt1.c0)LIKE(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST(CASE v0.c1  WHEN rt0.c4 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END AS TEXT));
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST(CASE v0.c1  WHEN rt0.c4 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END AS TEXT) WHERE (CASE WHEN ((rt0.c1)<(rt1.c2)) THEN ((v0.c1) NOTNULL) ELSE ((rt1.c0)LIKE(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt1.c2)) THEN ((v0.c1) NOTNULL) ELSE ((rt1.c0)LIKE(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST(CASE v0.c1  WHEN rt0.c4 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END AS TEXT));
SELECT * FROM v0, rt0 FULL OUTER JOIN rt1 ON CAST(CASE v0.c1  WHEN rt0.c4 THEN rt1.c0 WHEN v0.c1 THEN v0.c0 WHEN rt1.c2 THEN rt1.c0 END AS TEXT) WHERE (CASE WHEN ((rt0.c1)<(rt1.c2)) THEN ((v0.c1) NOTNULL) ELSE ((rt1.c0)LIKE(rt0.c2)) END);
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN TYPEOF(rt0.c4) THEN ((v0.c1)OR(x'')) END) ORDER BY '-365219673';
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(rt0.c4) THEN ((v0.c1)OR(x'')) END) IS TRUE)  as count FROM rt0, v0 ORDER BY '-365219673');
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN TYPEOF(rt0.c4) THEN ((v0.c1)OR(x'')) END) ORDER BY '-365219673';
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(rt0.c4) THEN ((v0.c1)OR(x'')) END) IS TRUE)  as count FROM rt0, v0 ORDER BY '-365219673');
SELECT ALL * FROM rt0, v0 WHERE (CASE WHEN TYPEOF(rt0.c4) THEN ((v0.c1)OR(x'')) END) ORDER BY '-365219673';
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c3, 0.18048944719438076)) BETWEEN ((UNLIKELY(DISTINCT rt0.c4), ((rt0.c0) NOTNULL), '-488372957')) AND (((rt0.c0 IN ()), x'', rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, 0.18048944719438076)) BETWEEN ((UNLIKELY(DISTINCT rt0.c4), ((rt0.c0) NOTNULL), '-488372957')) AND (((rt0.c0 IN ()), x'', rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c3, 0.18048944719438076)) BETWEEN ((UNLIKELY(DISTINCT rt0.c4), ((rt0.c0) NOTNULL), '-488372957')) AND (((rt0.c0 IN ()), x'', rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c3, 0.18048944719438076)) BETWEEN ((UNLIKELY(DISTINCT rt0.c4), ((rt0.c0) NOTNULL), '-488372957')) AND (((rt0.c0 IN ()), x'', rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c3, 0.18048944719438076)) BETWEEN ((UNLIKELY(DISTINCT rt0.c4), ((rt0.c0) NOTNULL), '-488372957')) AND (((rt0.c0 IN ()), x'', rt0.c0))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CASE ((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt1.c2 AS INTEGER) THEN (((rt1.c0))>=((rt0.c4))) ELSE CAST(rt0.c4 AS BLOB) END) ORDER BY (((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt1.c2))))<(json_array_length(rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt1.c2 AS INTEGER) THEN (((rt1.c0))>=((rt0.c4))) ELSE CAST(rt0.c4 AS BLOB) END) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt1.c2))))<(json_array_length(rt1.c2))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CASE ((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt1.c2 AS INTEGER) THEN (((rt1.c0))>=((rt0.c4))) ELSE CAST(rt0.c4 AS BLOB) END) ORDER BY (((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt1.c2))))<(json_array_length(rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt1.c2 AS INTEGER) THEN (((rt1.c0))>=((rt0.c4))) ELSE CAST(rt0.c4 AS BLOB) END) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt1.c2))))<(json_array_length(rt1.c2))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CASE ((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt1.c2 AS INTEGER) THEN (((rt1.c0))>=((rt0.c4))) ELSE CAST(rt0.c4 AS BLOB) END) ORDER BY (((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt1.c2))))<(json_array_length(rt1.c2))) ASC;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c2)) COLLATE BINARY) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED ORDER BY rt1.c2 ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c2)) COLLATE BINARY) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED ORDER BY rt1.c2 ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c2)) COLLATE BINARY) ORDER BY rt1.c2 ASC;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c1)))>((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(rt1.c1)))>((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c1)))>((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(rt1.c1)))>((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c1)))>((+ (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ((((((((v0.c2))>=((rt1.c2))))AND(rt0.c4 COLLATE NOCASE)))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c2))>=((rt1.c2))))AND(rt0.c4 COLLATE NOCASE)))OR((v0.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ((((((((v0.c2))>=((rt1.c2))))AND(rt0.c4 COLLATE NOCASE)))OR((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c2))>=((rt1.c2))))AND(rt0.c4 COLLATE NOCASE)))OR((v0.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ((((((((v0.c2))>=((rt1.c2))))AND(rt0.c4 COLLATE NOCASE)))OR((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST((v0.c2 IN (rt0.c1, rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN (rt0.c1, rt0.c2)) AS REAL)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST((v0.c2 IN (rt0.c1, rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN (rt0.c1, rt0.c2)) AS REAL)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST((v0.c2 IN (rt0.c1, rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (TYPEOF(DISTINCT rt1.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt1.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (TYPEOF(DISTINCT rt1.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt1.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (TYPEOF(DISTINCT rt1.c2) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END) IS FALSE)) ORDER BY (+ ((NOT (v0.c2)))) DESC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c1 END)IS(((v0.c2)||(v0.c1)))) DESC, (((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0))))GLOB(((v0.c0)<(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (+ ((NOT (v0.c2)))) DESC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c1 END)IS(((v0.c2)||(v0.c1)))) DESC, (((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0))))GLOB(((v0.c0)<(NULL)))));
SELECT ALL * FROM v0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END) IS FALSE)) ORDER BY (+ ((NOT (v0.c2)))) DESC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c1 END)IS(((v0.c2)||(v0.c1)))) DESC, (((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0))))GLOB(((v0.c0)<(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (+ ((NOT (v0.c2)))) DESC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c1 END)IS(((v0.c2)||(v0.c1)))) DESC, (((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0))))GLOB(((v0.c0)<(NULL)))));
SELECT ALL * FROM v0 WHERE (((CASE v0.c2  WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END) IS FALSE)) ORDER BY (+ ((NOT (v0.c2)))) DESC  NULLS FIRST, ((CASE v0.c0  WHEN v0.c0 THEN NULL ELSE v0.c1 END)IS(((v0.c2)||(v0.c1)))) DESC, (((((v0.c1, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0))))GLOB(((v0.c0)<(NULL))));
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((~ ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((~ ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((~ ((NOT (rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (LOWER(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((~ (LOWER(rt0.c4)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (LOWER(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((~ (LOWER(rt0.c4)))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (LOWER(rt0.c4))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN v0.c0 WHEN ((v0.c1)+(v0.c0)) THEN ((v0.c1) IS FALSE) WHEN (~ (v0.c2)) THEN ('<' IN (v0.c0)) WHEN ((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c1)*(v0.c2)) WHEN v0.c1 THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN ()) THEN v0.c0 WHEN ((v0.c1)+(v0.c0)) THEN ((v0.c1) IS FALSE) WHEN (~ (v0.c2)) THEN ('<' IN (v0.c0)) WHEN ((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c1)*(v0.c2)) WHEN v0.c1 THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN v0.c0 WHEN ((v0.c1)+(v0.c0)) THEN ((v0.c1) IS FALSE) WHEN (~ (v0.c2)) THEN ('<' IN (v0.c0)) WHEN ((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c1)*(v0.c2)) WHEN v0.c1 THEN ((v0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN ()) THEN v0.c0 WHEN ((v0.c1)+(v0.c0)) THEN ((v0.c1) IS FALSE) WHEN (~ (v0.c2)) THEN ('<' IN (v0.c0)) WHEN ((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c1)*(v0.c2)) WHEN v0.c1 THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN v0.c0 WHEN ((v0.c1)+(v0.c0)) THEN ((v0.c1) IS FALSE) WHEN (~ (v0.c2)) THEN ('<' IN (v0.c0)) WHEN ((((((((v0.c0)OR(v0.c1)))AND(v0.c0)))OR(v0.c2)))OR(v0.c1)) THEN ((v0.c1)*(v0.c2)) WHEN v0.c1 THEN ((v0.c0) ISNULL) END);
SELECT ALL * FROM v0 WHERE (((((((v0.c2))>=((v0.c1)))))<=((v0.c1)))) ORDER BY ((((v0.c2)-(v0.c2)))>>(((v0.c2)LIKE(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2))>=((v0.c1)))))<=((v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)-(v0.c2)))>>(((v0.c2)LIKE(NULL))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c2))>=((v0.c1)))))<=((v0.c1)))) ORDER BY ((((v0.c2)-(v0.c2)))>>(((v0.c2)LIKE(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2))>=((v0.c1)))))<=((v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)-(v0.c2)))>>(((v0.c2)LIKE(NULL))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c2))>=((v0.c1)))))<=((v0.c1)))) ORDER BY ((((v0.c2)-(v0.c2)))>>(((v0.c2)LIKE(NULL))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c3) IS TRUE))>(((v0.c2)=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE))>(((v0.c2)==(rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c3) IS TRUE))>(((v0.c2)=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE))>(((v0.c2)==(rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c3) IS TRUE))>(((v0.c2)=(rt0.c3)))));
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c3)<=(v0.c1)))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN 0.2706277628035333 THEN rt1.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY 0.8026128602684373 DESC  NULLS LAST, UPPER(((NULL)||(v0.c0))) ASC  NULLS FIRST, CASE ((rt0.c2)>(NULL))  WHEN ((v0.c1) BETWEEN (-89029913) AND (rt1.c1)) THEN ((v0.c0)<<(v0.c1)) ELSE rt0.c4 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)<=(v0.c1)))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN 0.2706277628035333 THEN rt1.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY 0.8026128602684373 DESC  NULLS LAST, UPPER(((NULL)||(v0.c0))) ASC  NULLS FIRST, CASE ((rt0.c2)>(NULL))  WHEN ((v0.c1) BETWEEN (-89029913) AND (rt1.c1)) THEN ((v0.c0)<<(v0.c1)) ELSE rt0.c4 COLLATE RTRIM END  NULLS FIRST);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c3)<=(v0.c1)))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN 0.2706277628035333 THEN rt1.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY 0.8026128602684373 DESC  NULLS LAST, UPPER(((NULL)||(v0.c0))) ASC  NULLS FIRST, CASE ((rt0.c2)>(NULL))  WHEN ((v0.c1) BETWEEN (-89029913) AND (rt1.c1)) THEN ((v0.c0)<<(v0.c1)) ELSE rt0.c4 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)<=(v0.c1)))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN 0.2706277628035333 THEN rt1.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY 0.8026128602684373 DESC  NULLS LAST, UPPER(((NULL)||(v0.c0))) ASC  NULLS FIRST, CASE ((rt0.c2)>(NULL))  WHEN ((v0.c1) BETWEEN (-89029913) AND (rt1.c1)) THEN ((v0.c0)<<(v0.c1)) ELSE rt0.c4 COLLATE RTRIM END  NULLS FIRST);
SELECT * FROM rt0, v0, rt1 WHERE (((((((rt0.c3)<=(v0.c1)))OR(CASE rt1.c1  WHEN rt1.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND(CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 WHEN 0.2706277628035333 THEN rt1.c1 WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY 0.8026128602684373 DESC  NULLS LAST, UPPER(((NULL)||(v0.c0))) ASC  NULLS FIRST, CASE ((rt0.c2)>(NULL))  WHEN ((v0.c1) BETWEEN (-89029913) AND (rt1.c1)) THEN ((v0.c0)<<(v0.c1)) ELSE rt0.c4 COLLATE RTRIM END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (NULLIF(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)), ((rt0.c0)/(v0.c0)))) ORDER BY rt0.c0 DESC  NULLS FIRST, ((CAST(NULL AS INTEGER))OR(((((rt0.c1)AND(x'582b')))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)), ((rt0.c0)/(v0.c0)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c0 DESC  NULLS FIRST, ((CAST(NULL AS INTEGER))OR(((((rt0.c1)AND(x'582b')))OR(v0.c0)))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (NULLIF(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)), ((rt0.c0)/(v0.c0)))) ORDER BY rt0.c0 DESC  NULLS FIRST, ((CAST(NULL AS INTEGER))OR(((((rt0.c1)AND(x'582b')))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)), ((rt0.c0)/(v0.c0)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY rt0.c0 DESC  NULLS FIRST, ((CAST(NULL AS INTEGER))OR(((((rt0.c1)AND(x'582b')))OR(v0.c0)))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (NULLIF(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c4)), ((rt0.c0)/(v0.c0)))) ORDER BY rt0.c0 DESC  NULLS FIRST, ((CAST(NULL AS INTEGER))OR(((((rt0.c1)AND(x'582b')))OR(v0.c0))));
SELECT ALL * FROM rt1, v0, rt0 WHERE (x'') ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE (x'') ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0 WHERE (x'') ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT * FROM rt1, v0, rt0 WHERE (((((x'', rt1.c1, rt0.c2, v0.c0, rt0.c4)) BETWEEN (('725504480', rt0.c1, rt0.c3, v0.c0, rt1.c1)) AND ((rt0.c4, v0.c2, rt0.c0, v0.c2, rt1.c1))) IN ())) ORDER BY ((((rt0.c1))>((x'187e'))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'', rt1.c1, rt0.c2, v0.c0, rt0.c4)) BETWEEN (('725504480', rt0.c1, rt0.c3, v0.c0, rt1.c1)) AND ((rt0.c4, v0.c2, rt0.c0, v0.c2, rt1.c1))) IN ())) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt0.c1))>((x'187e'))) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((((x'', rt1.c1, rt0.c2, v0.c0, rt0.c4)) BETWEEN (('725504480', rt0.c1, rt0.c3, v0.c0, rt1.c1)) AND ((rt0.c4, v0.c2, rt0.c0, v0.c2, rt1.c1))) IN ())) ORDER BY ((((rt0.c1))>((x'187e'))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'', rt1.c1, rt0.c2, v0.c0, rt0.c4)) BETWEEN (('725504480', rt0.c1, rt0.c3, v0.c0, rt1.c1)) AND ((rt0.c4, v0.c2, rt0.c0, v0.c2, rt1.c1))) IN ())) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt0.c1))>((x'187e'))) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE (((((x'', rt1.c1, rt0.c2, v0.c0, rt0.c4)) BETWEEN (('725504480', rt0.c1, rt0.c3, v0.c0, rt1.c1)) AND ((rt0.c4, v0.c2, rt0.c0, v0.c2, rt1.c1))) IN ())) ORDER BY ((((rt0.c1))>((x'187e'))) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0 WHERE ('d~N');
SELECT SUM(count) FROM (SELECT ALL (('d~N') IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ('d~N');
SELECT SUM(count) FROM (SELECT ALL (('d~N') IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ('d~N');
SELECT * FROM rt1, v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))IS(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))IS(NULL))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))IS(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))IS(NULL))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT * FROM rt1, v0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))IS(NULL)));
SELECT * FROM rt0 WHERE ((CAST(rt0.c4 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c4 AS TEXT) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST(rt0.c4 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c4 AS TEXT) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST(rt0.c4 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ABS((((v0.c2, rt1.c1, v0.c1))<=((v0.c0, rt0.c0, rt0.c3)))) FULL OUTER JOIN rt1 ON (((rt1.c2)||(v0.c0)) IN ()) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ABS((((v0.c2, rt1.c1, v0.c1))<=((v0.c0, rt0.c0, rt0.c3)))) FULL OUTER JOIN rt1 ON (((rt1.c2)||(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ABS((((v0.c2, rt1.c1, v0.c1))<=((v0.c0, rt0.c0, rt0.c3)))) FULL OUTER JOIN rt1 ON (((rt1.c2)||(v0.c0)) IN ()) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ABS((((v0.c2, rt1.c1, v0.c1))<=((v0.c0, rt0.c0, rt0.c3)))) FULL OUTER JOIN rt1 ON (((rt1.c2)||(v0.c0)) IN ()));
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt1.c1, v0.c2)) BETWEEN ((v0.c2, rt0.c4, rt0.c3)) AND ((rt1.c0, rt0.c1, rt0.c1)))) IS FALSE) WHERE (-1110004909) ORDER BY ((v0.c1 COLLATE RTRIM) ISNULL) ASC, (NOT (CASE WHEN x'' THEN v0.c1 WHEN rt0.c4 THEN '581935515' WHEN 0.9568977369753581 THEN rt0.c4 END)) ASC  NULLS FIRST, (((((v0.c0) NOT BETWEEN (rt1.c0) AND (''))))<((((rt0.c4)>(rt0.c3))))), UNLIKELY(v0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-1110004909) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt1.c1, v0.c2)) BETWEEN ((v0.c2, rt0.c4, rt0.c3)) AND ((rt1.c0, rt0.c1, rt0.c1)))) IS FALSE) ORDER BY ((v0.c1 COLLATE RTRIM) ISNULL) ASC, (NOT (CASE WHEN x'' THEN v0.c1 WHEN rt0.c4 THEN '581935515' WHEN 0.9568977369753581 THEN rt0.c4 END)) ASC  NULLS FIRST, (((((v0.c0) NOT BETWEEN (rt1.c0) AND (''))))<((((rt0.c4)>(rt0.c3))))), UNLIKELY(v0.c1) COLLATE RTRIM);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt1.c1, v0.c2)) BETWEEN ((v0.c2, rt0.c4, rt0.c3)) AND ((rt1.c0, rt0.c1, rt0.c1)))) IS FALSE) WHERE (-1110004909) ORDER BY ((v0.c1 COLLATE RTRIM) ISNULL) ASC, (NOT (CASE WHEN x'' THEN v0.c1 WHEN rt0.c4 THEN '581935515' WHEN 0.9568977369753581 THEN rt0.c4 END)) ASC  NULLS FIRST, (((((v0.c0) NOT BETWEEN (rt1.c0) AND (''))))<((((rt0.c4)>(rt0.c3))))), UNLIKELY(v0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-1110004909) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt1.c1, v0.c2)) BETWEEN ((v0.c2, rt0.c4, rt0.c3)) AND ((rt1.c0, rt0.c1, rt0.c1)))) IS FALSE) ORDER BY ((v0.c1 COLLATE RTRIM) ISNULL) ASC, (NOT (CASE WHEN x'' THEN v0.c1 WHEN rt0.c4 THEN '581935515' WHEN 0.9568977369753581 THEN rt0.c4 END)) ASC  NULLS FIRST, (((((v0.c0) NOT BETWEEN (rt1.c0) AND (''))))<((((rt0.c4)>(rt0.c3))))), UNLIKELY(v0.c1) COLLATE RTRIM);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c1, rt1.c1, v0.c2)) BETWEEN ((v0.c2, rt0.c4, rt0.c3)) AND ((rt1.c0, rt0.c1, rt0.c1)))) IS FALSE) WHERE (-1110004909) ORDER BY ((v0.c1 COLLATE RTRIM) ISNULL) ASC, (NOT (CASE WHEN x'' THEN v0.c1 WHEN rt0.c4 THEN '581935515' WHEN 0.9568977369753581 THEN rt0.c4 END)) ASC  NULLS FIRST, (((((v0.c0) NOT BETWEEN (rt1.c0) AND (''))))<((((rt0.c4)>(rt0.c3))))), UNLIKELY(v0.c1) COLLATE RTRIM;
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((+ (rt0.c3 COLLATE RTRIM)));
SELECT ALL * FROM rt1, v0 WHERE ((rt1.c1 COLLATE RTRIM IN (CASE v0.c2  WHEN rt1.c0 THEN '0.44793902444924283' END))) ORDER BY ((((v0.c2) IS FALSE))%(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN (CASE v0.c2  WHEN rt1.c0 THEN '0.44793902444924283' END))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((v0.c2) IS FALSE))%(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE ((rt1.c1 COLLATE RTRIM IN (CASE v0.c2  WHEN rt1.c0 THEN '0.44793902444924283' END))) ORDER BY ((((v0.c2) IS FALSE))%(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN (CASE v0.c2  WHEN rt1.c0 THEN '0.44793902444924283' END))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((v0.c2) IS FALSE))%(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE ((rt1.c1 COLLATE RTRIM IN (CASE v0.c2  WHEN rt1.c0 THEN '0.44793902444924283' END))) ORDER BY ((((v0.c2) IS FALSE))%(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT ALL * FROM rt0, v0 NATURAL JOIN rt1 WHERE ((((rt0.c0 IN ()))<>((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<>((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, v0 NATURAL JOIN rt1 WHERE ((((rt0.c0 IN ()))<>((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))<>((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, v0 NATURAL JOIN rt1 WHERE ((((rt0.c0 IN ()))<>((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) ORDER BY ((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, rt0.c0, x'')) AND ((x'', rt0.c1, NULL))) IN ());
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, rt0.c0, x'')) AND ((x'', rt0.c1, NULL))) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) ORDER BY ((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, rt0.c0, x'')) AND ((x'', rt0.c1, NULL))) IN ());
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, rt0.c0, x'')) AND ((x'', rt0.c1, NULL))) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) ORDER BY ((((rt0.c3, rt0.c4, v0.c1)) BETWEEN ((v0.c1, rt0.c0, x'')) AND ((x'', rt0.c1, NULL))) IN ());
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELIHOOD(CAST(rt0.c3 AS REAL), 0.020030464665866776) LEFT OUTER JOIN rt1 ON ((v0.c0) BETWEEN (((v0.c1)+(rt0.c2))) AND ((NOT (rt0.c3)))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON LIKELIHOOD(CAST(rt0.c3 AS REAL), 0.020030464665866776) LEFT OUTER JOIN rt1 ON ((v0.c0) BETWEEN (((v0.c1)+(rt0.c2))) AND ((NOT (rt0.c3)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELIHOOD(CAST(rt0.c3 AS REAL), 0.020030464665866776) LEFT OUTER JOIN rt1 ON ((v0.c0) BETWEEN (((v0.c1)+(rt0.c2))) AND ((NOT (rt0.c3)))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS INTEGER) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON LIKELIHOOD(CAST(rt0.c3 AS REAL), 0.020030464665866776) LEFT OUTER JOIN rt1 ON ((v0.c0) BETWEEN (((v0.c1)+(rt0.c2))) AND ((NOT (rt0.c3)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON LIKELIHOOD(CAST(rt0.c3 AS REAL), 0.020030464665866776) LEFT OUTER JOIN rt1 ON ((v0.c0) BETWEEN (((v0.c1)+(rt0.c2))) AND ((NOT (rt0.c3)))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(v0.c2 COLLATE NOCASE AS REAL) WHERE (v0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(v0.c2 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(v0.c2 COLLATE NOCASE AS REAL) WHERE (v0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(v0.c2 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON CAST(v0.c2 COLLATE NOCASE AS REAL) WHERE (v0.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)AND(((v0.c2) IS TRUE))) WHERE ((- (highlight(v0.c1, rt1.c0, v0.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((- (highlight(v0.c1, rt1.c0, v0.c0, rt1.c2)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)AND(((v0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)AND(((v0.c2) IS TRUE))) WHERE ((- (highlight(v0.c1, rt1.c0, v0.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT (((- (highlight(v0.c1, rt1.c0, v0.c0, rt1.c2)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE BINARY)AND(((v0.c2) IS TRUE))));
SELECT * FROM v0 WHERE (CASE NULLIF(v0.c0, v0.c0)  WHEN ((v0.c2)GLOB(x'')) THEN ((0.20645010901753658)LIKE(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(v0.c0, v0.c0)  WHEN ((v0.c2)GLOB(x'')) THEN ((0.20645010901753658)LIKE(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE NULLIF(v0.c0, v0.c0)  WHEN ((v0.c2)GLOB(x'')) THEN ((0.20645010901753658)LIKE(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(v0.c0, v0.c0)  WHEN ((v0.c2)GLOB(x'')) THEN ((0.20645010901753658)LIKE(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE NULLIF(v0.c0, v0.c0)  WHEN ((v0.c2)GLOB(x'')) THEN ((0.20645010901753658)LIKE(v0.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN v0 ON CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER) WHERE (((v0.c2)<<(CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((v0.c2)<<(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN v0 ON CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN v0 ON CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER) WHERE (((v0.c2)<<(CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((v0.c2)<<(CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN v0 ON CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN v0 ON CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER) WHERE (((v0.c2)<<(CAST(rt0.c3 AS REAL))));
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (((((- (rt1.c0))))=((((rt1.c1)>=(rt1.c0)))))) ORDER BY ((((v0.c2)>(v0.c2)))LIKE((+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt1.c0))))=((((rt1.c1)>=(rt1.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((((v0.c2)>(v0.c2)))LIKE((+ (rt1.c0)))));
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (((((- (rt1.c0))))=((((rt1.c1)>=(rt1.c0)))))) ORDER BY ((((v0.c2)>(v0.c2)))LIKE((+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt1.c0))))=((((rt1.c1)>=(rt1.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((((v0.c2)>(v0.c2)))LIKE((+ (rt1.c0)))));
SELECT * FROM v0 NATURAL JOIN rt1 WHERE (((((- (rt1.c0))))=((((rt1.c1)>=(rt1.c0)))))) ORDER BY ((((v0.c2)>(v0.c2)))LIKE((+ (rt1.c0))));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (LOWER(((rt0.c0)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)<(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (LOWER(((rt0.c0)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0)<(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (LOWER(((rt0.c0)<(rt0.c0))));
SELECT * FROM rt1 WHERE (((((((rt1.c2) ISNULL))OR((0.26868809437681795 IN ()))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) ISNULL))OR((0.26868809437681795 IN ()))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c2) ISNULL))OR((0.26868809437681795 IN ()))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) ISNULL))OR((0.26868809437681795 IN ()))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c2) ISNULL))OR((0.26868809437681795 IN ()))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((((((v0.c2) NOTNULL))OR(((((v0.c1)AND(rt0.c0)))OR(v0.c2)))))OR(((rt0.c3) ISNULL))), ((CAST(v0.c0 AS NUMERIC)) IS TRUE), '-1608660555';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c2) NOTNULL))OR(((((v0.c1)AND(rt0.c0)))OR(v0.c2)))))OR(((rt0.c3) ISNULL))), ((CAST(v0.c0 AS NUMERIC)) IS TRUE), '-1608660555');
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((((((v0.c2) NOTNULL))OR(((((v0.c1)AND(rt0.c0)))OR(v0.c2)))))OR(((rt0.c3) ISNULL))), ((CAST(v0.c0 AS NUMERIC)) IS TRUE), '-1608660555';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c2) NOTNULL))OR(((((v0.c1)AND(rt0.c0)))OR(v0.c2)))))OR(((rt0.c3) ISNULL))), ((CAST(v0.c0 AS NUMERIC)) IS TRUE), '-1608660555');
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY ((((((v0.c2) NOTNULL))OR(((((v0.c1)AND(rt0.c0)))OR(v0.c2)))))OR(((rt0.c3) ISNULL))), ((CAST(v0.c0 AS NUMERIC)) IS TRUE), '-1608660555';
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))OR(((v0.c2)>=(v0.c0)))))OR(CAST(v0.c1 AS TEXT)))) ORDER BY ((v0.c1 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))OR(((v0.c2)>=(v0.c0)))))OR(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (CAST(v0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))OR(((v0.c2)>=(v0.c0)))))OR(CAST(v0.c1 AS TEXT)))) ORDER BY ((v0.c1 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (CAST(v0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))OR(((v0.c2)>=(v0.c0)))))OR(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (CAST(v0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS TEXT))OR(((v0.c2)>=(v0.c0)))))OR(CAST(v0.c1 AS TEXT)))) ORDER BY ((v0.c1 COLLATE RTRIM) NOT BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (CAST(v0.c1 AS TEXT)));
SELECT * FROM rt0, rt1, v0 WHERE ((((((('lb') IS FALSE))OR(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c2 ELSE rt1.c1 END)))OR(((rt1.c1) NOT NULL)))) ORDER BY (((CASE rt1.c2  WHEN x'' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c4 END))<((x'' COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('lb') IS FALSE))OR(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c2 ELSE rt1.c1 END)))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((CASE rt1.c2  WHEN x'' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c4 END))<((x'' COLLATE RTRIM)))  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE ((((((('lb') IS FALSE))OR(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c2 ELSE rt1.c1 END)))OR(((rt1.c1) NOT NULL)))) ORDER BY (((CASE rt1.c2  WHEN x'' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c4 END))<((x'' COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('lb') IS FALSE))OR(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c2 ELSE rt1.c1 END)))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((CASE rt1.c2  WHEN x'' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c4 END))<((x'' COLLATE RTRIM)))  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE ((((((('lb') IS FALSE))OR(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c4 THEN v0.c2 ELSE rt1.c1 END)))OR(((rt1.c1) NOT NULL)))) ORDER BY (((CASE rt1.c2  WHEN x'' THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c3 ELSE rt0.c4 END))<((x'' COLLATE RTRIM)))  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c4))>((v0.c0)))) BETWEEN ((v0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) CROSS JOIN v0 ON (((- (v0.c0))) BETWEEN ((NOT (v0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 WHEN v0.c1 THEN '' WHEN rt0.c2 THEN v0.c1 END)) WHERE ((((v0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c4))>((v0.c0)))) BETWEEN ((v0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) CROSS JOIN v0 ON (((- (v0.c0))) BETWEEN ((NOT (v0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 WHEN v0.c1 THEN '' WHEN rt0.c2 THEN v0.c1 END)));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c4))>((v0.c0)))) BETWEEN ((v0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) CROSS JOIN v0 ON (((- (v0.c0))) BETWEEN ((NOT (v0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 WHEN v0.c1 THEN '' WHEN rt0.c2 THEN v0.c1 END)) WHERE ((((v0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c4))>((v0.c0)))) BETWEEN ((v0.c2 IN ())) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 END)) CROSS JOIN v0 ON (((- (v0.c0))) BETWEEN ((NOT (v0.c0))) AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c4 WHEN v0.c1 THEN '' WHEN rt0.c2 THEN v0.c1 END)));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((v0.c2)>(rt0.c1)))<<((NOT (0.1685680404620642)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>(rt0.c1)))<<((NOT (0.1685680404620642))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((v0.c2)>(rt0.c1)))<<((NOT (0.1685680404620642)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>(rt0.c1)))<<((NOT (0.1685680404620642))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((v0.c2)>(rt0.c1)))<<((NOT (0.1685680404620642)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c0 IN ()) IN ()));
SELECT * FROM v0 WHERE ('X,r,');
SELECT SUM(count) FROM (SELECT ALL (('X,r,') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('X,r,');
SELECT SUM(count) FROM (SELECT ALL (('X,r,') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('X,r,');
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c2 END)<<(NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c2 END)<<(NULL))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c2 END)<<(NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c2 END)<<(NULL))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c2 END)<<(NULL)));
SELECT * FROM rt0, rt1, v0 WHERE ((~ (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((~ (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE ((~ (rt1.c2 COLLATE BINARY)));
SELECT ALL * FROM rt1, v0 WHERE (CAST(((rt1.c1)&(v0.c2)) AS BLOB)) ORDER BY ((((((((0.9442377902574997)OR(CASE WHEN v0.c0 THEN rt1.c2 END)))OR(((rt1.c2)<(v0.c1)))))AND((+ (v0.c2)))))AND(CAST(v0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)&(v0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((((0.9442377902574997)OR(CASE WHEN v0.c0 THEN rt1.c2 END)))OR(((rt1.c2)<(v0.c1)))))AND((+ (v0.c2)))))AND(CAST(v0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (CAST(((rt1.c1)&(v0.c2)) AS BLOB)) ORDER BY ((((((((0.9442377902574997)OR(CASE WHEN v0.c0 THEN rt1.c2 END)))OR(((rt1.c2)<(v0.c1)))))AND((+ (v0.c2)))))AND(CAST(v0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)&(v0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((((0.9442377902574997)OR(CASE WHEN v0.c0 THEN rt1.c2 END)))OR(((rt1.c2)<(v0.c1)))))AND((+ (v0.c2)))))AND(CAST(v0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (CAST(((rt1.c1)&(v0.c2)) AS BLOB)) ORDER BY ((((((((0.9442377902574997)OR(CASE WHEN v0.c0 THEN rt1.c2 END)))OR(((rt1.c2)<(v0.c1)))))AND((+ (v0.c2)))))AND(CAST(v0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c0) ISNULL)))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c0) ISNULL)))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB))IS NOT(((rt1.c0) ISNULL)))) ORDER BY rt1.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((-2.068650644E9)OR(v0.c0)))GLOB(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((-2.068650644E9)OR(v0.c0)))GLOB(rt0.c3))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((-2.068650644E9)OR(v0.c0)))GLOB(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((-2.068650644E9)OR(v0.c0)))GLOB(rt0.c3))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((-2.068650644E9)OR(v0.c0)))GLOB(rt0.c3)));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c1 COLLATE RTRIM  WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c1)) THEN ((((((((v0.c0)OR(v0.c1)))OR(v0.c1)))OR(v0.c1)))OR(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1 COLLATE RTRIM  WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c1)) THEN ((((((((v0.c0)OR(v0.c1)))OR(v0.c1)))OR(v0.c1)))OR(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c1 COLLATE RTRIM  WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c1)) THEN ((((((((v0.c0)OR(v0.c1)))OR(v0.c1)))OR(v0.c1)))OR(v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1 COLLATE RTRIM  WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c1)) THEN ((((((((v0.c0)OR(v0.c1)))OR(v0.c1)))OR(v0.c1)))OR(v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c1 COLLATE RTRIM  WHEN ((((v0.c1)AND(v0.c0)))OR(v0.c1)) THEN ((((((((v0.c0)OR(v0.c1)))OR(v0.c1)))OR(v0.c1)))OR(v0.c2)) END);
SELECT * FROM v0, rt1 WHERE ((CASE WHEN v0.c1 THEN v0.c1 END IN ())) ORDER BY CASE ((v0.c0) IS FALSE)  WHEN ((v0.c1)*(v0.c0)) THEN '' WHEN (v0.c2 IN ()) THEN COALESCE(v0.c2, rt1.c1) WHEN GLOB(rt1.c0, v0.c0) THEN ((rt1.c2)||(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c1 THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE ((v0.c0) IS FALSE)  WHEN ((v0.c1)*(v0.c0)) THEN '' WHEN (v0.c2 IN ()) THEN COALESCE(v0.c2, rt1.c1) WHEN GLOB(rt1.c0, v0.c0) THEN ((rt1.c2)||(rt1.c0)) END);
SELECT * FROM v0, rt1 WHERE ((CASE WHEN v0.c1 THEN v0.c1 END IN ())) ORDER BY CASE ((v0.c0) IS FALSE)  WHEN ((v0.c1)*(v0.c0)) THEN '' WHEN (v0.c2 IN ()) THEN COALESCE(v0.c2, rt1.c1) WHEN GLOB(rt1.c0, v0.c0) THEN ((rt1.c2)||(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c1 THEN v0.c1 END IN ())) IS TRUE)  as count FROM v0, rt1 ORDER BY CASE ((v0.c0) IS FALSE)  WHEN ((v0.c1)*(v0.c0)) THEN '' WHEN (v0.c2 IN ()) THEN COALESCE(v0.c2, rt1.c1) WHEN GLOB(rt1.c0, v0.c0) THEN ((rt1.c2)||(rt1.c0)) END);
SELECT * FROM v0, rt1 WHERE ((CASE WHEN v0.c1 THEN v0.c1 END IN ())) ORDER BY CASE ((v0.c0) IS FALSE)  WHEN ((v0.c1)*(v0.c0)) THEN '' WHEN (v0.c2 IN ()) THEN COALESCE(v0.c2, rt1.c1) WHEN GLOB(rt1.c0, v0.c0) THEN ((rt1.c2)||(rt1.c0)) END;
SELECT ALL * FROM v0, rt1 WHERE (LOWER(v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(v0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (LOWER(v0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(v0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (LOWER(v0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM v0 WHERE (CASE TRIM(0.31561619633601057)  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c0) NOT NULL) ELSE v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(0.31561619633601057)  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c0) NOT NULL) ELSE v0.c2 END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE TRIM(0.31561619633601057)  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c0) NOT NULL) ELSE v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(0.31561619633601057)  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c0) NOT NULL) ELSE v0.c2 END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE TRIM(0.31561619633601057)  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) THEN ((v0.c0) NOT NULL) ELSE v0.c2 END);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (('663777619')-(((rt0.c4)AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (('663777619')-(((rt0.c4)AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (('663777619')-(((rt0.c4)AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (('663777619')-(((rt0.c4)AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c1))) ORDER BY (('663777619')-(((rt0.c4)AND(rt0.c2))))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (CAST((NOT (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST((NOT (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST((NOT (rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c2) NOTNULL))))AND(0x16b44555)))OR(0.0021796738380422953))) ORDER BY ((((((((rt1.c0)OR(rt1.c2)))OR(rt0.c3)))OR(CASE rt1.c1  WHEN rt1.c1 THEN '1436740809' END)))AND(v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c2) NOTNULL))))AND(0X16b44555)))OR(0.0021796738380422953))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((((((rt1.c0)OR(rt1.c2)))OR(rt0.c3)))OR(CASE rt1.c1  WHEN rt1.c1 THEN '1436740809' END)))AND(v0.c1)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c2) NOTNULL))))AND(0x16b44555)))OR(0.0021796738380422953))) ORDER BY ((((((((rt1.c0)OR(rt1.c2)))OR(rt0.c3)))OR(CASE rt1.c1  WHEN rt1.c1 THEN '1436740809' END)))AND(v0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c2) NOTNULL))))AND(0X16b44555)))OR(0.0021796738380422953))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((((((rt1.c0)OR(rt1.c2)))OR(rt0.c3)))OR(CASE rt1.c1  WHEN rt1.c1 THEN '1436740809' END)))AND(v0.c1)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((((((v0.c0)OR(rt0.c0)))AND(v0.c0)))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c2) NOTNULL))))AND(0x16b44555)))OR(0.0021796738380422953))) ORDER BY ((((((((rt1.c0)OR(rt1.c2)))OR(rt0.c3)))OR(CASE rt1.c1  WHEN rt1.c1 THEN '1436740809' END)))AND(v0.c1)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)==(((((((((((((rt0.c4)AND(0.7861029666545202)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)=(((((((((((((rt0.c4)AND(0.7861029666545202)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)==(((((((((((((rt0.c4)AND(0.7861029666545202)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)=(((((((((((((rt0.c4)AND(0.7861029666545202)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)==(((((((((((((rt0.c4)AND(0.7861029666545202)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 END)-(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY (((('') IS FALSE))OR(((rt0.c2)+(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c1 END)-(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((('') IS FALSE))OR(((rt0.c2)+(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 END)-(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY (((('') IS FALSE))OR(((rt0.c2)+(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c1 END)-(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((('') IS FALSE))OR(((rt0.c2)+(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 END)-(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY (((('') IS FALSE))OR(((rt0.c2)+(rt0.c0)))) ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((v0.c1)!=(rt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN '147924988' THEN v0.c2 END)) WHERE (CAST(LIKE(rt1.c1, rt0.c2, '&') AS BLOB)) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt1.c1, rt0.c2, '&') AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((v0.c1)!=(rt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN '147924988' THEN v0.c2 END)) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((v0.c1)!=(rt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN '147924988' THEN v0.c2 END)) WHERE (CAST(LIKE(rt1.c1, rt0.c2, '&') AS BLOB)) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt1.c1, rt0.c2, '&') AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((v0.c1)!=(rt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN '147924988' THEN v0.c2 END)) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN rt0 ON (((((rt1.c1 IN ()))AND(((v0.c1)!=(rt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt1.c0 WHEN v0.c0 THEN rt1.c0 WHEN '147924988' THEN v0.c2 END)) WHERE (CAST(LIKE(rt1.c1, rt0.c2, '&') AS BLOB)) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt1 NOT INDEXED WHERE (CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS BLOB)) ORDER BY UNLIKELY(DISTINCT 0x402d4b08)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT 0x402d4b08)  NULLS LAST);
SELECT ALL * FROM rt1 NOT INDEXED WHERE (CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS BLOB)) ORDER BY UNLIKELY(DISTINCT 0x402d4b08)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY UNLIKELY(DISTINCT 0x402d4b08)  NULLS LAST);
SELECT ALL * FROM rt1 NOT INDEXED WHERE (CAST((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS BLOB)) ORDER BY UNLIKELY(DISTINCT 0x402d4b08)  NULLS LAST;
SELECT ALL * FROM v0, rt0 NOT INDEXED, rt1 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ('-455530431') AND (((rt0.c4)GLOB(rt1.c2))))) ORDER BY (~ (((rt1.c1)OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT BETWEEN ('-455530431') AND (((rt0.c4)GLOB(rt1.c2))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (((rt1.c1)OR(rt0.c3)))));
SELECT ALL * FROM v0, rt0 NOT INDEXED, rt1 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ('-455530431') AND (((rt0.c4)GLOB(rt1.c2))))) ORDER BY (~ (((rt1.c1)OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT BETWEEN ('-455530431') AND (((rt0.c4)GLOB(rt1.c2))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (((rt1.c1)OR(rt0.c3)))));
SELECT ALL * FROM v0, rt0 NOT INDEXED, rt1 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ('-455530431') AND (((rt0.c4)GLOB(rt1.c2))))) ORDER BY (~ (((rt1.c1)OR(rt0.c3))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(rt0.c1) AS REAL)) ORDER BY CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER), ((rt0.c2 COLLATE NOCASE)<<(((rt0.c4)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt0.c1) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER), ((rt0.c2 COLLATE NOCASE)<<(((rt0.c4)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(rt0.c1) AS REAL)) ORDER BY CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER), ((rt0.c2 COLLATE NOCASE)<<(((rt0.c4)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt0.c1) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER), ((rt0.c2 COLLATE NOCASE)<<(((rt0.c4)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(rt0.c1) AS REAL)) ORDER BY CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER), ((rt0.c2 COLLATE NOCASE)<<(((rt0.c4)LIKE(rt0.c0))));
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((rt1.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((TIME(rt1.c2, 0x6b7288aa, 0.17607768935386336, rt1.c2, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((TIME(rt1.c2, 0x6b7288aa, 0.17607768935386336, rt1.c2, rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((rt1.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((TIME(rt1.c2, 0x6b7288aa, 0.17607768935386336, rt1.c2, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((TIME(rt1.c2, 0x6b7288aa, 0.17607768935386336, rt1.c2, rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((((rt1.c1)) NOT BETWEEN ((HEX(DISTINCT NULL))) AND ((TIME(rt1.c2, 0x6b7288aa, 0.17607768935386336, rt1.c2, rt0.c0)))));
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1)))) BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1)))) BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1)))) BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1)))) BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (rt1.c1))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1)))) BETWEEN (CAST(v0.c2 AS NUMERIC)) AND (rt1.c1)));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c3 AS TEXT) IN ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS TEXT) IN ((- (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c3 AS TEXT) IN ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS TEXT) IN ((- (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((CAST(rt0.c3 AS TEXT) IN ((- (rt0.c2)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((v0.c2)AND(v0.c1))) ISNULL) FULL OUTER JOIN v0 ON NULL COLLATE RTRIM WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((v0.c2)AND(v0.c1))) ISNULL) FULL OUTER JOIN v0 ON NULL COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((v0.c2)AND(v0.c1))) ISNULL) FULL OUTER JOIN v0 ON NULL COLLATE RTRIM WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((v0.c2)AND(v0.c1))) ISNULL) FULL OUTER JOIN v0 ON NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(UPPER(rt0.c0) AS BLOB)) ORDER BY (~ (rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(UPPER(rt0.c0) AS BLOB)) ORDER BY (~ (rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt0.c0) AS BLOB)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (~ (rt0.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CAST(UPPER(rt0.c0) AS BLOB)) ORDER BY (~ (rt0.c2)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ('mJy' COLLATE NOCASE) ORDER BY '{}'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('mJy' COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY '{}'  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('mJy' COLLATE NOCASE) ORDER BY '{}'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('mJy' COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY '{}'  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ('mJy' COLLATE NOCASE) ORDER BY '{}'  NULLS LAST;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (CAST(v0.c1 AS BLOB) IN ()) WHERE ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c3)))) ISNULL)) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c3)))) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (CAST(v0.c1 AS BLOB) IN ()) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (CAST(v0.c1 AS BLOB) IN ()) WHERE ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c3)))) ISNULL)) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c3)))) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (CAST(v0.c1 AS BLOB) IN ()) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (CAST(v0.c1 AS BLOB) IN ()) WHERE ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((rt0.c3)))) ISNULL)) ORDER BY CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (LIKE((rt0.c4 IN (rt0.c2)), ((((rt0.c3)OR(rt0.c2)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE((rt0.c4 IN (rt0.c2)), ((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (LIKE((rt0.c4 IN (rt0.c2)), ((((rt0.c3)OR(rt0.c2)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE((rt0.c4 IN (rt0.c2)), ((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (LIKE((rt0.c4 IN (rt0.c2)), ((((rt0.c3)OR(rt0.c2)))AND(rt0.c0))));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (x'')) WHERE ((((rt0.c4)&(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)&(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (x'')));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (x'')) WHERE ((((rt0.c4)&(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)&(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (x'')));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (NOT (x'')) WHERE ((((rt0.c4)&(rt0.c3)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (('-833276399') BETWEEN (((('qEt')) NOT BETWEEN ((v0.c2)) AND ((rt1.c0)))) AND (((v0.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON (((rt1.c1) BETWEEN (v0.c1) AND (v0.c0)) IN ()) WHERE (CAST((v0.c0 IN (rt0.c3, rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (rt0.c3, rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (('-833276399') BETWEEN (((('qEt')) NOT BETWEEN ((v0.c2)) AND ((rt1.c0)))) AND (((v0.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON (((rt1.c1) BETWEEN (v0.c1) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON (('-833276399') BETWEEN (((('qEt')) NOT BETWEEN ((v0.c2)) AND ((rt1.c0)))) AND (((v0.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON (((rt1.c1) BETWEEN (v0.c1) AND (v0.c0)) IN ()) WHERE (CAST((v0.c0 IN (rt0.c3, rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (rt0.c3, rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (('-833276399') BETWEEN (((('qEt')) NOT BETWEEN ((v0.c2)) AND ((rt1.c0)))) AND (((v0.c0)/(rt1.c1)))) FULL OUTER JOIN v0 ON (((rt1.c1) BETWEEN (v0.c1) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')>>((rt1.c0 IN (rt1.c0, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>((rt1.c0 IN (rt1.c0, rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')>>((rt1.c0 IN (rt1.c0, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>((rt1.c0 IN (rt1.c0, rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((x'')>>((rt1.c0 IN (rt1.c0, rt1.c1)))));
SELECT ALL * FROM v0, rt0 WHERE (((('-2007608363' IN ())) BETWEEN (v0.c2) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))) ORDER BY (((v0.c2))==((rt0.c0))) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-2007608363' IN ())) BETWEEN (v0.c2) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c2))=((rt0.c0))) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((('-2007608363' IN ())) BETWEEN (v0.c2) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))) ORDER BY (((v0.c2))==((rt0.c0))) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('-2007608363' IN ())) BETWEEN (v0.c2) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c2))=((rt0.c0))) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((('-2007608363' IN ())) BETWEEN (v0.c2) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))) ORDER BY (((v0.c2))==((rt0.c0))) COLLATE NOCASE COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN '779005652' WHEN rt0.c0 THEN rt0.c1 END, (rt1.c1 IN (rt0.c4)), (~ (rt0.c4))))>((CASE WHEN v0.c2 THEN v0.c1 ELSE rt1.c1 END, COALESCE(rt1.c2, rt1.c1), ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0))))) WHERE ((((rt0.c0 IN ()))LIKE(((((rt0.c4)AND(x'')))OR(v0.c1))))) ORDER BY ((rt0.c4 IN (rt0.c2, v0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))LIKE(((((rt0.c4)AND(x'')))OR(v0.c1))))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN '779005652' WHEN rt0.c0 THEN rt0.c1 END, (rt1.c1 IN (rt0.c4)), (~ (rt0.c4))))>((CASE WHEN v0.c2 THEN v0.c1 ELSE rt1.c1 END, COALESCE(rt1.c2, rt1.c1), ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c4 IN (rt0.c2, v0.c2)) IN ()) DESC);
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN '779005652' WHEN rt0.c0 THEN rt0.c1 END, (rt1.c1 IN (rt0.c4)), (~ (rt0.c4))))>((CASE WHEN v0.c2 THEN v0.c1 ELSE rt1.c1 END, COALESCE(rt1.c2, rt1.c1), ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0))))) WHERE ((((rt0.c0 IN ()))LIKE(((((rt0.c4)AND(x'')))OR(v0.c1))))) ORDER BY ((rt0.c4 IN (rt0.c2, v0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))LIKE(((((rt0.c4)AND(x'')))OR(v0.c1))))) IS TRUE)  as count FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN '779005652' WHEN rt0.c0 THEN rt0.c1 END, (rt1.c1 IN (rt0.c4)), (~ (rt0.c4))))>((CASE WHEN v0.c2 THEN v0.c1 ELSE rt1.c1 END, COALESCE(rt1.c2, rt1.c1), ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c4 IN (rt0.c2, v0.c2)) IN ()) DESC);
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON (((CASE x''  WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN '779005652' WHEN rt0.c0 THEN rt0.c1 END, (rt1.c1 IN (rt0.c4)), (~ (rt0.c4))))>((CASE WHEN v0.c2 THEN v0.c1 ELSE rt1.c1 END, COALESCE(rt1.c2, rt1.c1), ((v0.c0) BETWEEN (v0.c2) AND (rt0.c0))))) WHERE ((((rt0.c0 IN ()))LIKE(((((rt0.c4)AND(x'')))OR(v0.c1))))) ORDER BY ((rt0.c4 IN (rt0.c2, v0.c2)) IN ()) DESC;
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(x'a487' AS BLOB)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(x'a487' AS BLOB)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(x'a487' AS BLOB)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(x'a487' AS BLOB)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(x'a487' AS BLOB)) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c2)))%((rt0.c1 IN ())))) ORDER BY (- (v0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))%((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (v0.c2 COLLATE RTRIM)) ASC);
SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c2)))%((rt0.c1 IN ())))) ORDER BY (- (v0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))%((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (v0.c2 COLLATE RTRIM)) ASC);
SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c2)))%((rt0.c1 IN ())))) ORDER BY (- (v0.c2 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1)IS NOT(v0.c2))) ORDER BY UPPER(((v0.c2) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)IS NOT(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY UPPER(((v0.c2) NOT NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1)IS NOT(v0.c2))) ORDER BY UPPER(((v0.c2) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)IS NOT(v0.c2))) IS TRUE)  as count FROM v0 ORDER BY UPPER(((v0.c2) NOT NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1)IS NOT(v0.c2))) ORDER BY UPPER(((v0.c2) NOT NULL))  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (NULL);
SELECT ALL * FROM rt0, rt1 WHERE ((((((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt1.c2 AS INTEGER))))OR((- (rt0.c2)))))OR((((rt0.c0))!=((rt1.c1))))))OR(CASE WHEN rt0.c4 THEN rt0.c4 END)))AND(((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt1.c2 AS INTEGER))))OR((- (rt0.c2)))))OR((((rt0.c0))<>((rt1.c1))))))OR(CASE WHEN rt0.c4 THEN rt0.c4 END)))AND(((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt1.c2 AS INTEGER))))OR((- (rt0.c2)))))OR((((rt0.c0))!=((rt1.c1))))))OR(CASE WHEN rt0.c4 THEN rt0.c4 END)))AND(((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt1.c2 AS INTEGER))))OR((- (rt0.c2)))))OR((((rt0.c0))<>((rt1.c1))))))OR(CASE WHEN rt0.c4 THEN rt0.c4 END)))AND(((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((((((((((((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(CAST(rt1.c2 AS INTEGER))))OR((- (rt0.c2)))))OR((((rt0.c0))!=((rt1.c1))))))OR(CASE WHEN rt0.c4 THEN rt0.c4 END)))AND(((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM rt1, v0 WHERE (((((x'') NOT NULL))IS NOT(v0.c2))) ORDER BY (+ (((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL))IS NOT(v0.c2))) IS TRUE)  as count FROM rt1, v0 ORDER BY (+ (((v0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((x'') NOT NULL))IS NOT(v0.c2))) ORDER BY (+ (((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL))IS NOT(v0.c2))) IS TRUE)  as count FROM rt1, v0 ORDER BY (+ (((v0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((x'') NOT NULL))IS NOT(v0.c2))) ORDER BY (+ (((v0.c0) IS TRUE))) DESC;
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt0.c1) ORDER BY ((((v0.c2)GLOB(rt0.c0))) BETWEEN (UPPER(rt0.c1)) AND (((((v0.c1)OR(0.9260022401218536)))AND(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((v0.c2)GLOB(rt0.c0))) BETWEEN (UPPER(rt0.c1)) AND (((((v0.c1)OR(0.9260022401218536)))AND(rt0.c3)))) DESC);
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt0.c1) ORDER BY ((((v0.c2)GLOB(rt0.c0))) BETWEEN (UPPER(rt0.c1)) AND (((((v0.c1)OR(0.9260022401218536)))AND(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((((v0.c2)GLOB(rt0.c0))) BETWEEN (UPPER(rt0.c1)) AND (((((v0.c1)OR(0.9260022401218536)))AND(rt0.c3)))) DESC);
SELECT ALL * FROM rt0, v0, rt1 WHERE (rt0.c1) ORDER BY ((((v0.c2)GLOB(rt0.c0))) BETWEEN (UPPER(rt0.c1)) AND (((((v0.c1)OR(0.9260022401218536)))AND(rt0.c3)))) DESC;
SELECT * FROM rt0, rt1 INNER JOIN v0 ON ((HEX(DISTINCT v0.c2)) NOTNULL) WHERE (NULL COLLATE NOCASE) ORDER BY CAST((~ (rt0.c3)) AS TEXT), TRIM(DISTINCT rt0.c0, (rt1.c2 IN ())), CAST((((rt1.c2))=((v0.c2))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 INNER JOIN v0 ON ((HEX(DISTINCT v0.c2)) NOTNULL) ORDER BY CAST((~ (rt0.c3)) AS TEXT), TRIM(DISTINCT rt0.c0, (rt1.c2 IN ())), CAST((((rt1.c2))=((v0.c2))) AS REAL) ASC);
SELECT * FROM rt0, rt1 INNER JOIN v0 ON ((HEX(DISTINCT v0.c2)) NOTNULL) WHERE (NULL COLLATE NOCASE) ORDER BY CAST((~ (rt0.c3)) AS TEXT), TRIM(DISTINCT rt0.c0, (rt1.c2 IN ())), CAST((((rt1.c2))=((v0.c2))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 INNER JOIN v0 ON ((HEX(DISTINCT v0.c2)) NOTNULL) ORDER BY CAST((~ (rt0.c3)) AS TEXT), TRIM(DISTINCT rt0.c0, (rt1.c2 IN ())), CAST((((rt1.c2))=((v0.c2))) AS REAL) ASC);
SELECT * FROM rt0, rt1 INNER JOIN v0 ON ((HEX(DISTINCT v0.c2)) NOTNULL) WHERE (NULL COLLATE NOCASE) ORDER BY CAST((~ (rt0.c3)) AS TEXT), TRIM(DISTINCT rt0.c0, (rt1.c2 IN ())), CAST((((rt1.c2))=((v0.c2))) AS REAL) ASC;
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (NULLIF(DISTINCT v0.c1, CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT v0.c1, CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (NULLIF(DISTINCT v0.c1, CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT v0.c1, CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (NULLIF(DISTINCT v0.c1, CAST(v0.c0 AS REAL)));
SELECT * FROM v0, rt1 WHERE (((((((((((((rt1.c1)OR(rt1.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(CAST(v0.c1 AS INTEGER))))AND(SQLITE_COMPILEOPTION_GET('-1718961212'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c1)OR(rt1.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(CAST(v0.c1 AS INTEGER))))AND(SQLITE_COMPILEOPTION_GET('-1718961212')))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((((((((((((rt1.c1)OR(rt1.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(CAST(v0.c1 AS INTEGER))))AND(SQLITE_COMPILEOPTION_GET('-1718961212'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c1)OR(rt1.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(CAST(v0.c1 AS INTEGER))))AND(SQLITE_COMPILEOPTION_GET('-1718961212')))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE (((((((((((((rt1.c1)OR(rt1.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))AND(CAST(v0.c1 AS INTEGER))))AND(SQLITE_COMPILEOPTION_GET('-1718961212'))));
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT * FROM v0 WHERE (LTRIM(((0xffffffffc44ebb97)<(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((0xffffffffc44ebb97)<(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LTRIM(((0xffffffffc44ebb97)<(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((0xffffffffc44ebb97)<(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LTRIM(((0xffffffffc44ebb97)<(v0.c2))));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (v0.c2 IN ())  WHEN ((((0.9534993210962754)AND(v0.c0)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c2)) WHEN NULL THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN (((v0.c2))>((rt0.c0))) END) ORDER BY LIKELY(((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c2 IN ())  WHEN ((((0.9534993210962754)AND(v0.c0)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c2)) WHEN NULL THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN (((v0.c2))>((rt0.c0))) END) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY LIKELY(((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (v0.c2 IN ())  WHEN ((((0.9534993210962754)AND(v0.c0)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c2)) WHEN NULL THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN (((v0.c2))>((rt0.c0))) END) ORDER BY LIKELY(((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c2 IN ())  WHEN ((((0.9534993210962754)AND(v0.c0)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c2)) WHEN NULL THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN (((v0.c2))>((rt0.c0))) END) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY LIKELY(((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (v0.c2 IN ())  WHEN ((((0.9534993210962754)AND(v0.c0)))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (v0.c1) AND (rt1.c2)) WHEN NULL THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c2)AND(v0.c0)))OR(rt0.c1)) THEN (((v0.c2))>((rt0.c0))) END) ORDER BY LIKELY(((rt0.c3) BETWEEN (rt1.c2) AND (rt1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((IFNULL(rt0.c1, rt0.c2))AND(rt1.c1)))AND(((rt1.c2) IS TRUE))) WHERE (CAST(((rt0.c3) IS TRUE) AS INTEGER)) ORDER BY ((((rt0.c0)OR(0.761257476173587)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c1)IS(rt0.c3)))) DESC, (((rt1.c2)) NOT BETWEEN ((((0.9892666477612521)AND(rt1.c2)))) AND ((CAST(rt0.c2 AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((IFNULL(rt0.c1, rt0.c2))AND(rt1.c1)))AND(((rt1.c2) IS TRUE))) ORDER BY ((((rt0.c0)OR(0.761257476173587)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c1)IS(rt0.c3)))) DESC, (((rt1.c2)) NOT BETWEEN ((((0.9892666477612521)AND(rt1.c2)))) AND ((CAST(rt0.c2 AS INTEGER)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((IFNULL(rt0.c1, rt0.c2))AND(rt1.c1)))AND(((rt1.c2) IS TRUE))) WHERE (CAST(((rt0.c3) IS TRUE) AS INTEGER)) ORDER BY ((((rt0.c0)OR(0.761257476173587)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c1)IS(rt0.c3)))) DESC, (((rt1.c2)) NOT BETWEEN ((((0.9892666477612521)AND(rt1.c2)))) AND ((CAST(rt0.c2 AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((IFNULL(rt0.c1, rt0.c2))AND(rt1.c1)))AND(((rt1.c2) IS TRUE))) ORDER BY ((((rt0.c0)OR(0.761257476173587)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c1)IS(rt0.c3)))) DESC, (((rt1.c2)) NOT BETWEEN ((((0.9892666477612521)AND(rt1.c2)))) AND ((CAST(rt0.c2 AS INTEGER)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((IFNULL(rt0.c1, rt0.c2))AND(rt1.c1)))AND(((rt1.c2) IS TRUE))) WHERE (CAST(((rt0.c3) IS TRUE) AS INTEGER)) ORDER BY ((((rt0.c0)OR(0.761257476173587)))OR(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c0))) AND (((rt0.c1)IS(rt0.c3)))) DESC, (((rt1.c2)) NOT BETWEEN ((((0.9892666477612521)AND(rt1.c2)))) AND ((CAST(rt0.c2 AS INTEGER)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c1) IS FALSE) IN (rt1.c0)) WHERE ((((((rt0.c3, '-736278907', rt0.c2)) BETWEEN ((-1.001473129E9, rt0.c4, v0.c0)) AND ((x'6978', rt0.c2, rt0.c2))))OR((('9e3c''豘iV~')LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, '-736278907', rt0.c2)) BETWEEN ((-1.001473129E9, rt0.c4, v0.c0)) AND ((x'6978', rt0.c2, rt0.c2))))OR((('9e3c''豘iV~')LIKE(v0.c2))))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c1) IS FALSE) IN (rt1.c0)));
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c1) IS FALSE) IN (rt1.c0)) WHERE ((((((rt0.c3, '-736278907', rt0.c2)) BETWEEN ((-1.001473129E9, rt0.c4, v0.c0)) AND ((x'6978', rt0.c2, rt0.c2))))OR((('9e3c''豘iV~')LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, '-736278907', rt0.c2)) BETWEEN ((-1.001473129E9, rt0.c4, v0.c0)) AND ((x'6978', rt0.c2, rt0.c2))))OR((('9e3c''豘iV~')LIKE(v0.c2))))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c1) IS FALSE) IN (rt1.c0)));
SELECT ALL * FROM v0, rt1 FULL OUTER JOIN rt0 ON (((rt1.c1) IS FALSE) IN (rt1.c0)) WHERE ((((((rt0.c3, '-736278907', rt0.c2)) BETWEEN ((-1.001473129E9, rt0.c4, v0.c0)) AND ((x'6978', rt0.c2, rt0.c2))))OR((('9e3c''豘iV~')LIKE(v0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)GLOB(rt0.c3))))) ORDER BY ((((rt0.c1)AND(((0.9603214509946459)<>(rt0.c1)))))AND((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(((0.9603214509946459)!=(rt0.c1)))))AND((rt0.c3 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)GLOB(rt0.c3))))) ORDER BY ((((rt0.c1)AND(((0.9603214509946459)<>(rt0.c1)))))AND((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)GLOB(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(((0.9603214509946459)!=(rt0.c1)))))AND((rt0.c3 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0 WHERE (NULL) ORDER BY rt1.c0 ASC  NULLS FIRST, (- (json(v0.c2))) ASC, ((((((v0.c1) IS FALSE))AND(HEX(DISTINCT rt1.c0))))OR((~ (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c0 ASC  NULLS FIRST, (- (json(v0.c2))) ASC, ((((((v0.c1) IS FALSE))AND(HEX(DISTINCT rt1.c0))))OR((~ (rt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (NULL) ORDER BY rt1.c0 ASC  NULLS FIRST, (- (json(v0.c2))) ASC, ((((((v0.c1) IS FALSE))AND(HEX(DISTINCT rt1.c0))))OR((~ (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c0 ASC  NULLS FIRST, (- (json(v0.c2))) ASC, ((((((v0.c1) IS FALSE))AND(HEX(DISTINCT rt1.c0))))OR((~ (rt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (NULL) ORDER BY rt1.c0 ASC  NULLS FIRST, (- (json(v0.c2))) ASC, ((((((v0.c1) IS FALSE))AND(HEX(DISTINCT rt1.c0))))OR((~ (rt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0, rt1 WHERE (((((v0.c1)GLOB(rt0.c3))) NOTNULL)) ORDER BY CAST((v0.c2 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)GLOB(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST((v0.c2 IN ()) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (((((v0.c1)GLOB(rt0.c3))) NOTNULL)) ORDER BY CAST((v0.c2 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)GLOB(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST((v0.c2 IN ()) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (((((v0.c1)GLOB(rt0.c3))) NOTNULL)) ORDER BY CAST((v0.c2 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((rt0.c4 IN ())) ORDER BY ((((((((((rt0.c0) NOT NULL))OR(((v0.c1)>>(rt0.c3)))))OR(CASE WHEN v0.c2 THEN v0.c1 ELSE 0.44696129683358987 END)))AND(((0X33b6a4c0)>>(rt0.c2)))))OR((v0.c0 IN (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c0) NOT NULL))OR(((v0.c1)>>(rt0.c3)))))OR(CASE WHEN v0.c2 THEN v0.c1 ELSE 0.44696129683358987 END)))AND(((0X33b6a4c0)>>(rt0.c2)))))OR((v0.c0 IN (rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((rt0.c4 IN ())) ORDER BY ((((((((((rt0.c0) NOT NULL))OR(((v0.c1)>>(rt0.c3)))))OR(CASE WHEN v0.c2 THEN v0.c1 ELSE 0.44696129683358987 END)))AND(((0X33b6a4c0)>>(rt0.c2)))))OR((v0.c0 IN (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c0) NOT NULL))OR(((v0.c1)>>(rt0.c3)))))OR(CASE WHEN v0.c2 THEN v0.c1 ELSE 0.44696129683358987 END)))AND(((0X33b6a4c0)>>(rt0.c2)))))OR((v0.c0 IN (rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((rt0.c4 IN ())) ORDER BY ((((((((((rt0.c0) NOT NULL))OR(((v0.c1)>>(rt0.c3)))))OR(CASE WHEN v0.c2 THEN v0.c1 ELSE 0.44696129683358987 END)))AND(((0X33b6a4c0)>>(rt0.c2)))))OR((v0.c0 IN (rt0.c4))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((- ('-2088720215')));
SELECT SUM(count) FROM (SELECT ALL (((- ('-2088720215'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((- ('-2088720215')));
SELECT SUM(count) FROM (SELECT ALL (((- ('-2088720215'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED WHERE ((- ('-2088720215')));
SELECT * FROM rt0, rt1, v0 WHERE (((((rt0.c4) BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((rt0.c4) BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((rt0.c4) BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE ((CASE v0.c1  WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c4) AND (0xffffffffd30f5273)))+((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, '-128025745', rt0.c1)) AND ((x'', rt0.c1, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c4) AND (0xffffffffd30f5273)))+((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, '-128025745', rt0.c1)) AND ((x'', rt0.c1, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c4) AND (0xffffffffd30f5273)))+((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, '-128025745', rt0.c1)) AND ((x'', rt0.c1, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c4) AND (0xffffffffd30f5273)))+((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, '-128025745', rt0.c1)) AND ((x'', rt0.c1, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c4) AND (0xffffffffd30f5273)))+((((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, '-128025745', rt0.c1)) AND ((x'', rt0.c1, rt0.c3))))));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((IFNULL(0.5346164142802319, rt0.c1))||(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(0.5346164142802319, rt0.c1))||(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((IFNULL(0.5346164142802319, rt0.c1))||(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(0.5346164142802319, rt0.c1))||(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((IFNULL(0.5346164142802319, rt0.c1))||(rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c4);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c1))>((rt1.c2)))))) ORDER BY (('')OR(CASE WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST, 'ZA' DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((rt1.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c1))>((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY (('')OR(CASE WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST, 'ZA' DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((rt1.c0) IS TRUE) END);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c1))>((rt1.c2)))))) ORDER BY (('')OR(CASE WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST, 'ZA' DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((rt1.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c1))>((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY (('')OR(CASE WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST, 'ZA' DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((rt1.c0) IS TRUE) END);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c1) NOT NULL)) AND ((((rt1.c1))>((rt1.c2)))))) ORDER BY (('')OR(CASE WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST, 'ZA' DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((rt1.c0) IS TRUE) END;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (PRINTF(((-3.7535428E8) NOTNULL))) ORDER BY ((NULL)OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((-3.7535428E8) NOTNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((NULL)OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (PRINTF(((-3.7535428E8) NOTNULL))) ORDER BY ((NULL)OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((-3.7535428E8) NOTNULL))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((NULL)OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (PRINTF(((-3.7535428E8) NOTNULL))) ORDER BY ((NULL)OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) DESC;
SELECT COUNT(*) FROM v0 WHERE (0.00817514925711571);
SELECT SUM(count) FROM (SELECT ALL ((0.00817514925711571) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.00817514925711571);
SELECT SUM(count) FROM (SELECT ALL ((0.00817514925711571) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.00817514925711571);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (- (((((x'')AND(rt0.c1)))AND(rt0.c4)))) WHERE (((LIKE(rt1.c1, rt1.c1, ']')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LIKE(rt1.c1, rt1.c1, ']')) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (- (((((x'')AND(rt0.c1)))AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (- (((((x'')AND(rt0.c1)))AND(rt0.c4)))) WHERE (((LIKE(rt1.c1, rt1.c1, ']')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LIKE(rt1.c1, rt1.c1, ']')) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (- (((((x'')AND(rt0.c1)))AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON (- (((((x'')AND(rt0.c1)))AND(rt0.c4)))) WHERE (((LIKE(rt1.c1, rt1.c1, ']')) IS FALSE));
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((CAST(v0.c1 AS INTEGER))AND(((rt0.c4) NOT NULL))))OR((('')GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c1 AS INTEGER))AND(((rt0.c4) NOT NULL))))OR((('')GLOB(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((CAST(v0.c1 AS INTEGER))AND(((rt0.c4) NOT NULL))))OR((('')GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c1 AS INTEGER))AND(((rt0.c4) NOT NULL))))OR((('')GLOB(rt0.c2))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (((((CAST(v0.c1 AS INTEGER))AND(((rt0.c4) NOT NULL))))OR((('')GLOB(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE BINARY);
SELECT * FROM rt1, rt0, v0 WHERE ((0.8626559291371628 IN ())) ORDER BY CAST(((((rt0.c2)AND(rt0.c4)))OR(0x67885dae)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((0.8626559291371628 IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY CAST(((((rt0.c2)AND(rt0.c4)))OR(0X67885dae)) AS REAL) ASC);
SELECT * FROM rt1, rt0, v0 WHERE ((0.8626559291371628 IN ())) ORDER BY CAST(((((rt0.c2)AND(rt0.c4)))OR(0x67885dae)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((0.8626559291371628 IN ())) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY CAST(((((rt0.c2)AND(rt0.c4)))OR(0X67885dae)) AS REAL) ASC);
SELECT * FROM rt1, rt0, v0 WHERE ((0.8626559291371628 IN ())) ORDER BY CAST(((((rt0.c2)AND(rt0.c4)))OR(0x67885dae)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST((((rt1.c2, v0.c2, v0.c0))<>((rt1.c0, v0.c2, rt1.c1))) AS REAL) WHERE (((((rt1.c2)AND(rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST((((rt1.c2, v0.c2, v0.c0))!=((rt1.c0, v0.c2, rt1.c1))) AS REAL));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST((((rt1.c2, v0.c2, v0.c0))<>((rt1.c0, v0.c2, rt1.c1))) AS REAL) WHERE (((((rt1.c2)AND(rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))) AND ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON CAST((((rt1.c2, v0.c2, v0.c0))!=((rt1.c0, v0.c2, rt1.c1))) AS REAL));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN v0 ON CAST((((rt1.c2, v0.c2, v0.c0))<>((rt1.c0, v0.c2, rt1.c1))) AS REAL) WHERE (((((rt1.c2)AND(rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (v0.c1))) AND ((rt1.c2 IN ()))));
SELECT ALL * FROM rt1, rt0, v0 WHERE (CAST(LENGTH(rt1.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(rt1.c1) AS REAL)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (CAST(LENGTH(rt1.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(rt1.c1) AS REAL)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (CAST(LENGTH(rt1.c1) AS REAL));
SELECT COUNT(*) FROM v0, rt1 WHERE ((((v0.c1 IN (v0.c0)))|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c0)))|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((((v0.c1 IN (v0.c0)))|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (v0.c0)))|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((((v0.c1 IN (v0.c0)))|(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c4)==('%78017')))) ORDER BY rt0.c3, ((((((((((((json_insert(rt0.c4, rt0.c1, rt0.c2))OR((rt0.c1 IN ()))))AND(0.4336509253558638)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c3) ISNULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c4)), ((rt0.c2 COLLATE RTRIM)|(((rt0.c4) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c4)=('%78017')))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3, ((((((((((((json_insert(rt0.c4, rt0.c1, rt0.c2))OR((rt0.c1 IN ()))))AND(0.4336509253558638)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c3) ISNULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c4)), ((rt0.c2 COLLATE RTRIM)|(((rt0.c4) ISNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c4)==('%78017')))) ORDER BY rt0.c3, ((((((((((((json_insert(rt0.c4, rt0.c1, rt0.c2))OR((rt0.c1 IN ()))))AND(0.4336509253558638)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c3) ISNULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c4)), ((rt0.c2 COLLATE RTRIM)|(((rt0.c4) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c4)=('%78017')))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3, ((((((((((((json_insert(rt0.c4, rt0.c1, rt0.c2))OR((rt0.c1 IN ()))))AND(0.4336509253558638)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c3) ISNULL))))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))AND(rt0.c4)), ((rt0.c2 COLLATE RTRIM)|(((rt0.c4) ISNULL))) ASC);
SELECT * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 IN ()));
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)|(rt0.c0)))OR(((rt0.c4)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)|(rt0.c0)))OR(((rt0.c4)|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)|(rt0.c0)))OR(((rt0.c4)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)|(rt0.c0)))OR(((rt0.c4)|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4)|(rt0.c0)))OR(((rt0.c4)|(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY ((v0.c2)%(2106976055)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)%(2106976055)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY ((v0.c2)%(2106976055)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)%(2106976055)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY ((v0.c2)%(2106976055)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1 WHERE ((~ (CAST(rt1.c2 AS TEXT)))) ORDER BY '380912981' ASC, (('799955286')AND((rt0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY '380912981' ASC, (('799955286')AND((rt0.c3 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1 WHERE ((~ (CAST(rt1.c2 AS TEXT)))) ORDER BY '380912981' ASC, (('799955286')AND((rt0.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY '380912981' ASC, (('799955286')AND((rt0.c3 IN ()))) DESC);
SELECT ALL * FROM rt1, rt0 WHERE (NULL COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))) AND ((0.8315131287391465)))  NULLS LAST, (((rt0.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(rt1.c0)))) AND ((((NULL) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))) AND ((0.8315131287391465)))  NULLS LAST, (((rt0.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(rt1.c0)))) AND ((((NULL) IS FALSE)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (NULL COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))) AND ((0.8315131287391465)))  NULLS LAST, (((rt0.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(rt1.c0)))) AND ((((NULL) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))) AND ((0.8315131287391465)))  NULLS LAST, (((rt0.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(rt1.c0)))) AND ((((NULL) IS FALSE)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (NULL COLLATE RTRIM) ORDER BY (((NULL)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))) AND ((0.8315131287391465)))  NULLS LAST, (((rt0.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(rt1.c0)))) AND ((((NULL) IS FALSE)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (x'674d');
SELECT SUM(count) FROM (SELECT ((x'674d') IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (x'674d');
SELECT SUM(count) FROM (SELECT ((x'674d') IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (x'674d');
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((-2.068650644E9))) WHERE ((~ (rt0.c0 COLLATE BINARY))) ORDER BY ((rt0.c3)GLOB(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((-2.068650644E9))) ORDER BY ((rt0.c3)GLOB(((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((-2.068650644E9))) WHERE ((~ (rt0.c0 COLLATE BINARY))) ORDER BY ((rt0.c3)GLOB(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((-2.068650644E9))) ORDER BY ((rt0.c3)GLOB(((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((-2.068650644E9))) WHERE ((~ (rt0.c0 COLLATE BINARY))) ORDER BY ((rt0.c3)GLOB(((rt0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))!=(CAST(rt1.c0 AS TEXT)))) ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) IN ((NOT (1.436740809E9)), rt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))!=(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) IN ((NOT (1.436740809E9)), rt1.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))!=(CAST(rt1.c0 AS TEXT)))) ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) IN ((NOT (1.436740809E9)), rt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))!=(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) IN ((NOT (1.436740809E9)), rt1.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (rt1.c1)))!=(CAST(rt1.c0 AS TEXT)))) ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) IN ((NOT (1.436740809E9)), rt1.c2 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((CASE WHEN rt1.c1 THEN rt1.c2 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((CASE WHEN rt1.c1 THEN rt1.c2 END)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((CASE WHEN rt1.c1 THEN rt1.c2 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((CASE WHEN rt1.c1 THEN rt1.c2 END)))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((CASE WHEN rt1.c1 THEN rt1.c2 END))));
SELECT * FROM v0 WHERE (HEX(CASE v0.c2  WHEN v0.c1 THEN 0.761257476173587 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END));
SELECT SUM(count) FROM (SELECT ((HEX(CASE v0.c2  WHEN v0.c1 THEN 0.761257476173587 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (HEX(CASE v0.c2  WHEN v0.c1 THEN 0.761257476173587 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END));
SELECT SUM(count) FROM (SELECT ((HEX(CASE v0.c2  WHEN v0.c1 THEN 0.761257476173587 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (HEX(CASE v0.c2  WHEN v0.c1 THEN 0.761257476173587 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END));
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))LIKE(((x'')*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))LIKE(((x'')*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))LIKE(((x'')*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))LIKE(((x'')*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))LIKE(((x'')*(rt0.c0)))));
SELECT * FROM v0, rt0, rt1 WHERE ((((((rt0.c3, v0.c0, v0.c2))<=((rt0.c4, rt0.c4, rt0.c3))))=(((rt0.c1) BETWEEN (rt0.c2) AND ('-866620418'))))) ORDER BY IFNULL(LIKELIHOOD(rt0.c2, 0.158669581668892), CAST(v0.c1 AS INTEGER)), ((((CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c4 ELSE v0.c2 END)OR(((rt0.c4)<=(x'')))))OR((((rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt1.c2, v0.c2)) AND ((rt1.c2, rt0.c2, rt1.c1))))) DESC  NULLS LAST, ((UNLIKELY(DISTINCT rt1.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, v0.c0, v0.c2))<=((rt0.c4, rt0.c4, rt0.c3))))=(((rt0.c1) BETWEEN (rt0.c2) AND ('-866620418'))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY IFNULL(LIKELIHOOD(rt0.c2, 0.158669581668892), CAST(v0.c1 AS INTEGER)), ((((CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c4 ELSE v0.c2 END)OR(((rt0.c4)<=(x'')))))OR((((rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt1.c2, v0.c2)) AND ((rt1.c2, rt0.c2, rt1.c1))))) DESC  NULLS LAST, ((UNLIKELY(DISTINCT rt1.c0)) NOTNULL) DESC);
SELECT * FROM v0, rt0, rt1 WHERE ((((((rt0.c3, v0.c0, v0.c2))<=((rt0.c4, rt0.c4, rt0.c3))))=(((rt0.c1) BETWEEN (rt0.c2) AND ('-866620418'))))) ORDER BY IFNULL(LIKELIHOOD(rt0.c2, 0.158669581668892), CAST(v0.c1 AS INTEGER)), ((((CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c4 ELSE v0.c2 END)OR(((rt0.c4)<=(x'')))))OR((((rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt1.c2, v0.c2)) AND ((rt1.c2, rt0.c2, rt1.c1))))) DESC  NULLS LAST, ((UNLIKELY(DISTINCT rt1.c0)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, v0.c0, v0.c2))<=((rt0.c4, rt0.c4, rt0.c3))))=(((rt0.c1) BETWEEN (rt0.c2) AND ('-866620418'))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY IFNULL(LIKELIHOOD(rt0.c2, 0.158669581668892), CAST(v0.c1 AS INTEGER)), ((((CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c4 ELSE v0.c2 END)OR(((rt0.c4)<=(x'')))))OR((((rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt1.c2, v0.c2)) AND ((rt1.c2, rt0.c2, rt1.c1))))) DESC  NULLS LAST, ((UNLIKELY(DISTINCT rt1.c0)) NOTNULL) DESC);
SELECT * FROM v0, rt0, rt1 WHERE ((((((rt0.c3, v0.c0, v0.c2))<=((rt0.c4, rt0.c4, rt0.c3))))=(((rt0.c1) BETWEEN (rt0.c2) AND ('-866620418'))))) ORDER BY IFNULL(LIKELIHOOD(rt0.c2, 0.158669581668892), CAST(v0.c1 AS INTEGER)), ((((CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c2 THEN rt0.c4 ELSE v0.c2 END)OR(((rt0.c4)<=(x'')))))OR((((rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt1.c2, v0.c2)) AND ((rt1.c2, rt0.c2, rt1.c1))))) DESC  NULLS LAST, ((UNLIKELY(DISTINCT rt1.c0)) NOTNULL) DESC;
SELECT ALL * FROM rt0, rt1, v0 WHERE ((NOT (CAST(0.7744339837276851 AS TEXT)))) ORDER BY (+ ((('-684021184') ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(0.7744339837276851 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (+ ((('-684021184') ISNULL))));
SELECT ALL * FROM rt0, rt1, v0 WHERE ((NOT (CAST(0.7744339837276851 AS TEXT)))) ORDER BY (+ ((('-684021184') ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(0.7744339837276851 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (+ ((('-684021184') ISNULL))));
SELECT ALL * FROM rt0, rt1, v0 WHERE ((NOT (CAST(0.7744339837276851 AS TEXT)))) ORDER BY (+ ((('-684021184') ISNULL)));
SELECT * FROM rt1 WHERE ((((((((((- (rt1.c2)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c1) IS TRUE))))AND(rt1.c1))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt1.c2)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c1) IS TRUE))))AND(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC);
SELECT * FROM rt1 WHERE ((((((((((- (rt1.c2)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c1) IS TRUE))))AND(rt1.c1))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt1.c2)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c1) IS TRUE))))AND(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC);
SELECT * FROM rt1 WHERE ((((((((((- (rt1.c2)))AND(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)))AND(((rt1.c1) IS TRUE))))AND(rt1.c1))) ORDER BY NULL ASC;
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c2, rt1.c0, rt1.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (rt1.c1 IN (v0.c2, rt0.c4)), NULL, ((rt0.c2)/(rt0.c1)), ((v0.c1) NOTNULL))) AND ((((v0.c1)||(rt0.c3)), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN '-1e500' ELSE rt0.c3 END, ((rt1.c0)%(rt0.c2)), ((rt0.c1)&(rt0.c2)), ((((rt0.c1)OR(rt1.c0)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt1.c0, rt1.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (rt1.c1 IN (v0.c2, rt0.c4)), NULL, ((rt0.c2)/(rt0.c1)), ((v0.c1) NOTNULL))) AND ((((v0.c1)||(rt0.c3)), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN '-1e500' ELSE rt0.c3 END, ((rt1.c0)%(rt0.c2)), ((rt0.c1)&(rt0.c2)), ((((rt0.c1)OR(rt1.c0)))AND(v0.c1)))))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c2, rt1.c0, rt1.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (rt1.c1 IN (v0.c2, rt0.c4)), NULL, ((rt0.c2)/(rt0.c1)), ((v0.c1) NOTNULL))) AND ((((v0.c1)||(rt0.c3)), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN '-1e500' ELSE rt0.c3 END, ((rt1.c0)%(rt0.c2)), ((rt0.c1)&(rt0.c2)), ((((rt0.c1)OR(rt1.c0)))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt1.c0, rt1.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (rt1.c1 IN (v0.c2, rt0.c4)), NULL, ((rt0.c2)/(rt0.c1)), ((v0.c1) NOTNULL))) AND ((((v0.c1)||(rt0.c3)), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN '-1e500' ELSE rt0.c3 END, ((rt1.c0)%(rt0.c2)), ((rt0.c1)&(rt0.c2)), ((((rt0.c1)OR(rt1.c0)))AND(v0.c1)))))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, rt0);
SELECT * FROM rt1, v0, rt0 WHERE ((((rt0.c2, rt1.c0, rt1.c0, rt0.c1, rt1.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c3)), (rt1.c1 IN (v0.c2, rt0.c4)), NULL, ((rt0.c2)/(rt0.c1)), ((v0.c1) NOTNULL))) AND ((((v0.c1)||(rt0.c3)), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN '-1e500' ELSE rt0.c3 END, ((rt1.c0)%(rt0.c2)), ((rt0.c1)&(rt0.c2)), ((((rt0.c1)OR(rt1.c0)))AND(v0.c1))))));
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c0)>=(rt0.c4)))) ORDER BY ((((rt0.c2)AND(rt0.c0))) NOTNULL), CAST(((rt0.c3)-(rt0.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)>=(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c0))) NOTNULL), CAST(((rt0.c3)-(rt0.c3)) AS BLOB));
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c0)>=(rt0.c4)))) ORDER BY ((((rt0.c2)AND(rt0.c0))) NOTNULL), CAST(((rt0.c3)-(rt0.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)>=(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(rt0.c0))) NOTNULL), CAST(((rt0.c3)-(rt0.c3)) AS BLOB));
SELECT * FROM rt0 WHERE (TYPEOF(((rt0.c0)>=(rt0.c4)))) ORDER BY ((((rt0.c2)AND(rt0.c0))) NOTNULL), CAST(((rt0.c3)-(rt0.c3)) AS BLOB);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((-574600656, rt0.c2, NULL)) NOT BETWEEN ((v0.c1, rt0.c1, rt0.c4)) AND ((NULL, v0.c2, rt0.c2)))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (rt0.c3 COLLATE RTRIM))) ORDER BY (('HUf,''~j' COLLATE BINARY)-(x'a459'));
SELECT SUM(count) FROM (SELECT ALL (((((((-574600656, rt0.c2, NULL)) NOT BETWEEN ((v0.c1, rt0.c1, rt0.c4)) AND ((NULL, v0.c2, rt0.c2)))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (('HUf,''~j' COLLATE BINARY)-(x'a459')));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((-574600656, rt0.c2, NULL)) NOT BETWEEN ((v0.c1, rt0.c1, rt0.c4)) AND ((NULL, v0.c2, rt0.c2)))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (rt0.c3 COLLATE RTRIM))) ORDER BY (('HUf,''~j' COLLATE BINARY)-(x'a459'));
SELECT SUM(count) FROM (SELECT ALL (((((((-574600656, rt0.c2, NULL)) NOT BETWEEN ((v0.c1, rt0.c1, rt0.c4)) AND ((NULL, v0.c2, rt0.c2)))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 ORDER BY (('HUf,''~j' COLLATE BINARY)-(x'a459')));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((((-574600656, rt0.c2, NULL)) NOT BETWEEN ((v0.c1, rt0.c1, rt0.c4)) AND ((NULL, v0.c2, rt0.c2)))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (rt0.c3 COLLATE RTRIM))) ORDER BY (('HUf,''~j' COLLATE BINARY)-(x'a459'));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON 0.6287388025840506 WHERE ((- (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON 0.6287388025840506);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON 0.6287388025840506 WHERE ((- (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED FULL OUTER JOIN rt0 ON 0.6287388025840506);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON 0.6287388025840506 WHERE ((- (rt0.c1)) COLLATE NOCASE);
SELECT * FROM rt0, v0, rt1 WHERE (LTRIM(((rt0.c2) ISNULL), CASE WHEN rt0.c2 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) ISNULL), CASE WHEN rt0.c2 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (LTRIM(((rt0.c2) ISNULL), CASE WHEN rt0.c2 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c2) ISNULL), CASE WHEN rt0.c2 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (LTRIM(((rt0.c2) ISNULL), CASE WHEN rt0.c2 THEN v0.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((v0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, 5.89398728E8, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, 5.89398728E8, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((v0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, 5.89398728E8, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, 5.89398728E8, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c0)))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((v0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, 5.89398728E8, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c0)))) NOT NULL));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY 0xffffffffaad9dac5 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffaad9dac5 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY 0xffffffffaad9dac5 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffaad9dac5 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY 0xffffffffaad9dac5 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY ((ABS(rt0.c2))|((((rt0.c1))<((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((ABS(rt0.c2))|((((rt0.c1))<((rt0.c0))))));
SELECT * FROM rt0 WHERE (x'') ORDER BY ((ABS(rt0.c2))|((((rt0.c1))<((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((ABS(rt0.c2))|((((rt0.c1))<((rt0.c0))))));
SELECT * FROM rt0 WHERE (x'') ORDER BY ((ABS(rt0.c2))|((((rt0.c1))<((rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN NULL THEN rt0.c4 ELSE NULL END AS TEXT)) ORDER BY (- (((rt0.c4)>('-1218935504'))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN NULL THEN rt0.c4 ELSE NULL END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c4)>('-1218935504')))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN NULL THEN rt0.c4 ELSE NULL END AS TEXT)) ORDER BY (- (((rt0.c4)>('-1218935504'))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN NULL THEN rt0.c4 ELSE NULL END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c4)>('-1218935504')))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN NULL THEN rt0.c4 ELSE NULL END AS TEXT)) ORDER BY (- (((rt0.c4)>('-1218935504'))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (((v0.c2)%(((0.15674127128334492)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)%(((0.15674127128334492)|(v0.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (((v0.c2)%(((0.15674127128334492)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2)%(((0.15674127128334492)|(v0.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (((v0.c2)%(((0.15674127128334492)|(v0.c0)))));
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((NULL)AND(((((rt1.c2)OR(rt1.c2)))OR(v0.c0)))))OR(((v0.c0) IS FALSE))) WHERE (rt1.c2) ORDER BY (((+ (v0.c2)))OR(0.7445476509238697)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((((NULL)AND(((((rt1.c2)OR(rt1.c2)))OR(v0.c0)))))OR(((v0.c0) IS FALSE))) ORDER BY (((+ (v0.c2)))OR(0.7445476509238697)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((NULL)AND(((((rt1.c2)OR(rt1.c2)))OR(v0.c0)))))OR(((v0.c0) IS FALSE))) WHERE (rt1.c2) ORDER BY (((+ (v0.c2)))OR(0.7445476509238697)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON ((((NULL)AND(((((rt1.c2)OR(rt1.c2)))OR(v0.c0)))))OR(((v0.c0) IS FALSE))) ORDER BY (((+ (v0.c2)))OR(0.7445476509238697)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN v0 ON ((((NULL)AND(((((rt1.c2)OR(rt1.c2)))OR(v0.c0)))))OR(((v0.c0) IS FALSE))) WHERE (rt1.c2) ORDER BY (((+ (v0.c2)))OR(0.7445476509238697)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CASE 'e筯ALEUi*'  WHEN (('-1186307853')LIKE(rt1.c1)) THEN COALESCE(DISTINCT rt1.c1, rt0.c4, rt1.c0, rt0.c4) END) ORDER BY CAST((((rt0.c3, rt0.c3, rt1.c1))==((v0.c1, v0.c2, rt1.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 'e筯ALEUi*'  WHEN (('-1186307853')LIKE(rt1.c1)) THEN COALESCE(DISTINCT rt1.c1, rt0.c4, rt1.c0, rt0.c4) END) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST((((rt0.c3, rt0.c3, rt1.c1))==((v0.c1, v0.c2, rt1.c0))) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CASE 'e筯ALEUi*'  WHEN (('-1186307853')LIKE(rt1.c1)) THEN COALESCE(DISTINCT rt1.c1, rt0.c4, rt1.c0, rt0.c4) END) ORDER BY CAST((((rt0.c3, rt0.c3, rt1.c1))==((v0.c1, v0.c2, rt1.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE 'e筯ALEUi*'  WHEN (('-1186307853')LIKE(rt1.c1)) THEN COALESCE(DISTINCT rt1.c1, rt0.c4, rt1.c0, rt0.c4) END) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CAST((((rt0.c3, rt0.c3, rt1.c1))==((v0.c1, v0.c2, rt1.c0))) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (CASE 'e筯ALEUi*'  WHEN (('-1186307853')LIKE(rt1.c1)) THEN COALESCE(DISTINCT rt1.c1, rt0.c4, rt1.c0, rt0.c4) END) ORDER BY CAST((((rt0.c3, rt0.c3, rt1.c1))==((v0.c1, v0.c2, rt1.c0))) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM WHERE (NULL) ORDER BY CAST((v0.c2 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM ORDER BY CAST((v0.c2 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM WHERE (NULL) ORDER BY CAST((v0.c2 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM ORDER BY CAST((v0.c2 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM WHERE (NULL) ORDER BY CAST((v0.c2 IN ()) AS NUMERIC);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt1.c0)/(v0.c2))) BETWEEN ((('Xc') BETWEEN (v0.c1) AND (v0.c0))) AND (((rt0.c1)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)/(v0.c2))) BETWEEN ((('Xc') BETWEEN (v0.c1) AND (v0.c0))) AND (((rt0.c1)|(v0.c1))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt1.c0)/(v0.c2))) BETWEEN ((('Xc') BETWEEN (v0.c1) AND (v0.c0))) AND (((rt0.c1)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)/(v0.c2))) BETWEEN ((('Xc') BETWEEN (v0.c1) AND (v0.c0))) AND (((rt0.c1)|(v0.c1))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (((((rt1.c0)/(v0.c2))) BETWEEN ((('Xc') BETWEEN (v0.c1) AND (v0.c0))) AND (((rt0.c1)|(v0.c1)))));
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)>>('<V,lu6j(錉'))  WHEN CASE rt0.c4  WHEN v0.c1 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN 2.84245452E8 THEN rt0.c3 ELSE rt0.c0 END THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE v0.c0 COLLATE BINARY END) ORDER BY (((v0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((rt0.c1 IN (rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c4)) AND (('', NULL, rt0.c1, -1313285789, NULL)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)>>('<V,lu6j(錉'))  WHEN CASE rt0.c4  WHEN v0.c1 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN 2.84245452E8 THEN rt0.c3 ELSE rt0.c0 END THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((rt0.c1 IN (rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c4)) AND (('', NULL, rt0.c1, -1313285789, NULL)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)>>('<V,lu6j(錉'))  WHEN CASE rt0.c4  WHEN v0.c1 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN 2.84245452E8 THEN rt0.c3 ELSE rt0.c0 END THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE v0.c0 COLLATE BINARY END) ORDER BY (((v0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((rt0.c1 IN (rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c4)) AND (('', NULL, rt0.c1, -1313285789, NULL)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)>>('<V,lu6j(錉'))  WHEN CASE rt0.c4  WHEN v0.c1 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN 2.84245452E8 THEN rt0.c3 ELSE rt0.c0 END THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((rt0.c1 IN (rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c4)) AND (('', NULL, rt0.c1, -1313285789, NULL)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (CASE ((rt0.c0)>>('<V,lu6j(錉'))  WHEN CASE rt0.c4  WHEN v0.c1 THEN rt0.c0 WHEN v0.c1 THEN rt0.c2 WHEN 2.84245452E8 THEN rt0.c3 ELSE rt0.c0 END THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE v0.c0 COLLATE BINARY END) ORDER BY (((v0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND (((rt0.c1 IN (rt0.c0))))) ASC  NULLS FIRST, (((((rt0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, v0.c1, rt0.c2, rt0.c4)) AND (('', NULL, rt0.c1, -1313285789, NULL)))) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c3 WHEN 0Xffffffffa3d4895f THEN v0.c1 WHEN NULL THEN v0.c1 END) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c3 WHEN 0Xffffffffa3d4895f THEN v0.c1 WHEN NULL THEN v0.c1 END) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c3 WHEN 0Xffffffffa3d4895f THEN v0.c1 WHEN NULL THEN v0.c1 END) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c3 WHEN 0Xffffffffa3d4895f THEN v0.c1 WHEN NULL THEN v0.c1 END) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c3 WHEN 0Xffffffffa3d4895f THEN v0.c1 WHEN NULL THEN v0.c1 END) AND (CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c0)AND(NULL)))AND(rt0.c3)) COLLATE NOCASE COLLATE NOCASE WHERE (CASE WHEN rt0.c4 COLLATE BINARY THEN 0.8772164538706644 ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 COLLATE BINARY THEN 0.8772164538706644 ELSE rt0.c3 END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c0)AND(NULL)))AND(rt0.c3)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c0)AND(NULL)))AND(rt0.c3)) COLLATE NOCASE COLLATE NOCASE WHERE (CASE WHEN rt0.c4 COLLATE BINARY THEN 0.8772164538706644 ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c4 COLLATE BINARY THEN 0.8772164538706644 ELSE rt0.c3 END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c0)AND(NULL)))AND(rt0.c3)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c0)AND(NULL)))AND(rt0.c3)) COLLATE NOCASE COLLATE NOCASE WHERE (CASE WHEN rt0.c4 COLLATE BINARY THEN 0.8772164538706644 ELSE rt0.c3 END);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN v0 WHERE (v0.c2);
SELECT ALL * FROM v0 WHERE ((((v0.c0)>>(v0.c1)) IN (('QWqh' IN (v0.c2))))) ORDER BY INSTR(CAST('[]' AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>>(v0.c1)) IN (('QWqh' IN (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY INSTR(CAST('[]' AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c1))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)>>(v0.c1)) IN (('QWqh' IN (v0.c2))))) ORDER BY INSTR(CAST('[]' AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>>(v0.c1)) IN (('QWqh' IN (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY INSTR(CAST('[]' AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c1))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)>>(v0.c1)) IN (('QWqh' IN (v0.c2))))) ORDER BY INSTR(CAST('[]' AS INTEGER), ((((v0.c1)AND(v0.c0)))OR(v0.c1)));
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'b4351570' COLLATE RTRIM)) AND ((((rt0.c4)/(rt0.c0)))))) ORDER BY ((v0.c0)|(rt0.c0)) COLLATE NOCASE, json_quote(((rt0.c1)<<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((x'b4351570' COLLATE RTRIM)) AND ((((rt0.c4)/(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0)|(rt0.c0)) COLLATE NOCASE, json_quote(((rt0.c1)<<(v0.c0)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'b4351570' COLLATE RTRIM)) AND ((((rt0.c4)/(rt0.c0)))))) ORDER BY ((v0.c0)|(rt0.c0)) COLLATE NOCASE, json_quote(((rt0.c1)<<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((x'b4351570' COLLATE RTRIM)) AND ((((rt0.c4)/(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0)|(rt0.c0)) COLLATE NOCASE, json_quote(((rt0.c1)<<(v0.c0)))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((x'b4351570' COLLATE RTRIM)) AND ((((rt0.c4)/(rt0.c0)))))) ORDER BY ((v0.c0)|(rt0.c0)) COLLATE NOCASE, json_quote(((rt0.c1)<<(v0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((CAST(0.5684892763636186 AS TEXT), CAST(x'dc202c19' AS NUMERIC), rt1.c0 COLLATE NOCASE))<((rt1.c1, ((rt0.c3)<>(rt0.c1)), (rt0.c2 IN (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.5684892763636186 AS TEXT), CAST(x'dc202c19' AS NUMERIC), rt1.c0 COLLATE NOCASE))<((rt1.c1, ((rt0.c3)!=(rt0.c1)), (rt0.c2 IN (rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((CAST(0.5684892763636186 AS TEXT), CAST(x'dc202c19' AS NUMERIC), rt1.c0 COLLATE NOCASE))<((rt1.c1, ((rt0.c3)<>(rt0.c1)), (rt0.c2 IN (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.5684892763636186 AS TEXT), CAST(x'dc202c19' AS NUMERIC), rt1.c0 COLLATE NOCASE))<((rt1.c1, ((rt0.c3)!=(rt0.c1)), (rt0.c2 IN (rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((CAST(0.5684892763636186 AS TEXT), CAST(x'dc202c19' AS NUMERIC), rt1.c0 COLLATE NOCASE))<((rt1.c1, ((rt0.c3)<>(rt0.c1)), (rt0.c2 IN (rt0.c4))))));
SELECT * FROM v0, rt1, rt0 WHERE (CASE WHEN v0.c1 THEN (rt0.c1 IN (rt0.c3)) WHEN ((v0.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN rt0.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN v0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 THEN (rt0.c1 IN (rt0.c3)) WHEN ((v0.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN rt0.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN v0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (CASE WHEN v0.c1 THEN (rt0.c1 IN (rt0.c3)) WHEN ((v0.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN rt0.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN v0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 THEN (rt0.c1 IN (rt0.c3)) WHEN ((v0.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN rt0.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN v0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT * FROM v0, rt1, rt0 WHERE (CASE WHEN v0.c1 THEN (rt0.c1 IN (rt0.c3)) WHEN ((v0.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN rt0.c1 COLLATE BINARY WHEN (NOT (rt1.c0)) THEN v0.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0 WHERE (-2083653724) ORDER BY ((((rt0.c4)+(rt0.c3)))==(((0.5508320267222349) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2083653724) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)+(rt0.c3)))==(((0.5508320267222349) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (-2083653724) ORDER BY ((((rt0.c4)+(rt0.c3)))==(((0.5508320267222349) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2083653724) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)+(rt0.c3)))==(((0.5508320267222349) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (-2083653724) ORDER BY ((((rt0.c4)+(rt0.c3)))==(((0.5508320267222349) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CASE (((-4.55530431E8))<((v0.c2)))  WHEN rt0.c0 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((-4.55530431E8))<((v0.c2)))  WHEN rt0.c0 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CASE (((-4.55530431E8))<((v0.c2)))  WHEN rt0.c0 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((-4.55530431E8))<((v0.c2)))  WHEN rt0.c0 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CASE (((-4.55530431E8))<((v0.c2)))  WHEN rt0.c0 THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt1.c2)) ELSE (rt1.c1 IN ()) END);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) IS TRUE)) NOTNULL) WHERE ((- ((- (v0.c0))))) ORDER BY ABS((((v0.c1, x'', 0.3591349942014085)) BETWEEN ((rt0.c2, v0.c1, rt0.c2)) AND ((rt0.c4, rt0.c1, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) IS TRUE)) NOTNULL) ORDER BY ABS((((v0.c1, x'', 0.3591349942014085)) BETWEEN ((rt0.c2, v0.c1, rt0.c2)) AND ((rt0.c4, rt0.c1, v0.c2)))));
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) IS TRUE)) NOTNULL) WHERE ((- ((- (v0.c0))))) ORDER BY ABS((((v0.c1, x'', 0.3591349942014085)) BETWEEN ((rt0.c2, v0.c1, rt0.c2)) AND ((rt0.c4, rt0.c1, v0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) IS TRUE)) NOTNULL) ORDER BY ABS((((v0.c1, x'', 0.3591349942014085)) BETWEEN ((rt0.c2, v0.c1, rt0.c2)) AND ((rt0.c4, rt0.c1, v0.c2)))));
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) IS TRUE)) NOTNULL) WHERE ((- ((- (v0.c0))))) ORDER BY ABS((((v0.c1, x'', 0.3591349942014085)) BETWEEN ((rt0.c2, v0.c1, rt0.c2)) AND ((rt0.c4, rt0.c1, v0.c2))));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2) IS FALSE) AS BLOB)) ORDER BY (+ ((+ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS FALSE) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (+ ((+ (NULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2) IS FALSE) AS BLOB)) ORDER BY (+ ((+ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS FALSE) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (+ ((+ (NULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2) IS FALSE) AS BLOB)) ORDER BY (+ ((+ (NULL))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c2)AND(x'8b13')))OR(v0.c2)) THEN (~ (v0.c0)) ELSE ((v0.c1)>=(v0.c1)) END) ORDER BY ((CAST(v0.c2 AS BLOB)) NOT NULL)  NULLS FIRST, DATETIME(NULL, CAST(v0.c1 AS REAL), ((v0.c1)IS NOT(v0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c2)AND(x'8b13')))OR(v0.c2)) THEN (~ (v0.c0)) ELSE ((v0.c1)>=(v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS BLOB)) NOT NULL)  NULLS FIRST, DATETIME(NULL, CAST(v0.c1 AS REAL), ((v0.c1)IS NOT(v0.c1))));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c2)AND(x'8b13')))OR(v0.c2)) THEN (~ (v0.c0)) ELSE ((v0.c1)>=(v0.c1)) END) ORDER BY ((CAST(v0.c2 AS BLOB)) NOT NULL)  NULLS FIRST, DATETIME(NULL, CAST(v0.c1 AS REAL), ((v0.c1)IS NOT(v0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c2)AND(x'8b13')))OR(v0.c2)) THEN (~ (v0.c0)) ELSE ((v0.c1)>=(v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS BLOB)) NOT NULL)  NULLS FIRST, DATETIME(NULL, CAST(v0.c1 AS REAL), ((v0.c1)IS NOT(v0.c1))));
SELECT ALL * FROM v0 WHERE (CASE WHEN ((((v0.c2)AND(x'8b13')))OR(v0.c2)) THEN (~ (v0.c0)) ELSE ((v0.c1)>=(v0.c1)) END) ORDER BY ((CAST(v0.c2 AS BLOB)) NOT NULL)  NULLS FIRST, DATETIME(NULL, CAST(v0.c1 AS REAL), ((v0.c1)IS NOT(v0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))AND(x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c2)OR(v0.c2)))AND(x'')) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))AND(x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c2)OR(v0.c2)))AND(x'')) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))AND(x'')) AS NUMERIC));
SELECT ALL * FROM v0, rt1, rt0 WHERE ('1jYc졛^qVT');
SELECT SUM(count) FROM (SELECT (('1jYc졛^qVT') IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ('1jYc졛^qVT');
SELECT SUM(count) FROM (SELECT (('1jYc졛^qVT') IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL * FROM v0, rt1, rt0 WHERE ('1jYc졛^qVT');
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((((((0.3591349942014085)AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))))AND(rt1.c2 COLLATE RTRIM)))AND((((rt0.c3, rt0.c3, -1167684448))>((rt0.c0, v0.c0, v0.c0))))))AND(rt1.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON LIKE(LIKELY(DISTINCT rt0.c0), ((0xffffffffb37f602e) NOT NULL), 'V') WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c4 END) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((0.3591349942014085)AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))))AND(rt1.c2 COLLATE RTRIM)))AND((((rt0.c3, rt0.c3, -1167684448))>((rt0.c0, v0.c0, v0.c0))))))AND(rt1.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON LIKE(LIKELY(DISTINCT rt0.c0), ((0Xffffffffb37f602e) NOT NULL), 'V'));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((((((0.3591349942014085)AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))))AND(rt1.c2 COLLATE RTRIM)))AND((((rt0.c3, rt0.c3, -1167684448))>((rt0.c0, v0.c0, v0.c0))))))AND(rt1.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON LIKE(LIKELY(DISTINCT rt0.c0), ((0xffffffffb37f602e) NOT NULL), 'V') WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c4 END) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((0.3591349942014085)AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)))))AND(rt1.c2 COLLATE RTRIM)))AND((((rt0.c3, rt0.c3, -1167684448))>((rt0.c0, v0.c0, v0.c0))))))AND(rt1.c2 COLLATE NOCASE)) FULL OUTER JOIN v0 ON LIKE(LIKELY(DISTINCT rt0.c0), ((0Xffffffffb37f602e) NOT NULL), 'V'));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))|((((rt0.c4, rt0.c3, '-574600656'))>=((NULL, rt0.c4, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))|((((rt0.c4, rt0.c3, '-574600656'))>=((NULL, rt0.c4, rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))|((((rt0.c4, rt0.c3, '-574600656'))>=((NULL, rt0.c4, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))|((((rt0.c4, rt0.c3, '-574600656'))>=((NULL, rt0.c4, rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))|((((rt0.c4, rt0.c3, '-574600656'))>=((NULL, rt0.c4, rt1.c0))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)IS NOT(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((v0.c2)) BETWEEN ((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)))) AND ((v0.c1 COLLATE BINARY))) WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)IS NOT(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((v0.c2)) BETWEEN ((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)))) AND ((v0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)IS NOT(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((v0.c2)) BETWEEN ((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)))) AND ((v0.c1 COLLATE BINARY))) WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)IS NOT(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((v0.c2)) BETWEEN ((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)))) AND ((v0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)IS NOT(rt1.c2)) COLLATE BINARY RIGHT OUTER JOIN v0 ON (((v0.c2)) BETWEEN ((((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)))) AND ((v0.c1 COLLATE BINARY))) WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((NULL)-(v0.c2)) COLLATE BINARY) ORDER BY CASE ''  WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (~ (x'')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)-(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CASE ''  WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (~ (x'')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((NULL)-(v0.c2)) COLLATE BINARY) ORDER BY CASE ''  WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (~ (x'')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)-(v0.c2)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY CASE ''  WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (~ (x'')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((NULL)-(v0.c2)) COLLATE BINARY) ORDER BY CASE ''  WHEN ((rt0.c0)LIKE(rt0.c1)) THEN (~ (x'')) END  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON v0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY WHERE (((((rt1.c2)IS NOT(rt1.c0))) NOT BETWEEN (((v0.c1)|(v0.c0))) AND ((((v0.c1))<=((v0.c0)))))) ORDER BY ((((((((CAST(rt1.c0 AS NUMERIC))OR(CAST(rt1.c0 AS BLOB))))AND(((v0.c1)IS NOT(v0.c1)))))AND(rt1.c1)))AND(((rt1.c2)LIKE(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(rt1.c0))) NOT BETWEEN (((v0.c1)|(v0.c0))) AND ((((v0.c1))<=((v0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON v0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY ORDER BY ((((((((CAST(rt1.c0 AS NUMERIC))OR(CAST(rt1.c0 AS BLOB))))AND(((v0.c1)IS NOT(v0.c1)))))AND(rt1.c1)))AND(((rt1.c2)LIKE(v0.c0)))) DESC);
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON v0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY WHERE (((((rt1.c2)IS NOT(rt1.c0))) NOT BETWEEN (((v0.c1)|(v0.c0))) AND ((((v0.c1))<=((v0.c0)))))) ORDER BY ((((((((CAST(rt1.c0 AS NUMERIC))OR(CAST(rt1.c0 AS BLOB))))AND(((v0.c1)IS NOT(v0.c1)))))AND(rt1.c1)))AND(((rt1.c2)LIKE(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)IS NOT(rt1.c0))) NOT BETWEEN (((v0.c1)|(v0.c0))) AND ((((v0.c1))<=((v0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON v0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY ORDER BY ((((((((CAST(rt1.c0 AS NUMERIC))OR(CAST(rt1.c0 AS BLOB))))AND(((v0.c1)IS NOT(v0.c1)))))AND(rt1.c1)))AND(((rt1.c2)LIKE(v0.c0)))) DESC);
SELECT * FROM v0 LEFT OUTER JOIN rt1 ON v0.c2 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY WHERE (((((rt1.c2)IS NOT(rt1.c0))) NOT BETWEEN (((v0.c1)|(v0.c0))) AND ((((v0.c1))<=((v0.c0)))))) ORDER BY ((((((((CAST(rt1.c0 AS NUMERIC))OR(CAST(rt1.c0 AS BLOB))))AND(((v0.c1)IS NOT(v0.c1)))))AND(rt1.c1)))AND(((rt1.c2)LIKE(v0.c0)))) DESC;
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c0)|(rt1.c0)))IS NOT((((v0.c0, v0.c2, v0.c2, rt1.c2, '835599630'))>=((rt1.c0, rt1.c1, v0.c2, v0.c2, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)|(rt1.c0)))IS NOT((((v0.c0, v0.c2, v0.c2, rt1.c2, '835599630'))>=((rt1.c0, rt1.c1, v0.c2, v0.c2, rt1.c2)))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c0)|(rt1.c0)))IS NOT((((v0.c0, v0.c2, v0.c2, rt1.c2, '835599630'))>=((rt1.c0, rt1.c1, v0.c2, v0.c2, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)|(rt1.c0)))IS NOT((((v0.c0, v0.c2, v0.c2, rt1.c2, '835599630'))>=((rt1.c0, rt1.c1, v0.c2, v0.c2, rt1.c2)))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c0)|(rt1.c0)))IS NOT((((v0.c0, v0.c2, v0.c2, rt1.c2, '835599630'))>=((rt1.c0, rt1.c1, v0.c2, v0.c2, rt1.c2))))));
SELECT * FROM v0, rt0 WHERE ((((((('-1396753969') NOTNULL))AND((rt0.c2 IN ()))))OR(v0.c0))) ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)GLOB(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('-1396753969') NOTNULL))AND((rt0.c2 IN ()))))OR(v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)GLOB(NULL))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((((('-1396753969') NOTNULL))AND((rt0.c2 IN ()))))OR(v0.c0))) ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)GLOB(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('-1396753969') NOTNULL))AND((rt0.c2 IN ()))))OR(v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)GLOB(NULL))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((((('-1396753969') NOTNULL))AND((rt0.c2 IN ()))))OR(v0.c0))) ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)GLOB(NULL))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(CAST(rt1.c1 AS INTEGER))))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND((((x''))<((x'c3d52899003c')))))) ORDER BY ((((rt1.c2)IS(rt1.c0))) NOT NULL) DESC  NULLS LAST, ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(CAST(rt1.c1 AS INTEGER))))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND((((x''))<((x'c3d52899003c')))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)IS(rt1.c0))) NOT NULL) DESC  NULLS LAST, ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(CAST(rt1.c1 AS INTEGER))))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND((((x''))<((x'c3d52899003c')))))) ORDER BY ((((rt1.c2)IS(rt1.c0))) NOT NULL) DESC  NULLS LAST, ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(CAST(rt1.c1 AS INTEGER))))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND((((x''))<((x'c3d52899003c')))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)IS(rt1.c0))) NOT NULL) DESC  NULLS LAST, ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR(CAST(rt1.c1 AS INTEGER))))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN rt1.c2 END)))AND((((x''))<((x'c3d52899003c')))))) ORDER BY ((((rt1.c2)IS(rt1.c0))) NOT NULL) DESC  NULLS LAST, ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0, v0, rt1 WHERE (CASE x''  WHEN LAST_INSERT_ROWID() THEN ((rt1.c2)AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN LAST_INSERT_ROWID() THEN ((rt1.c2)AND(rt1.c1)) END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (CASE x''  WHEN LAST_INSERT_ROWID() THEN ((rt1.c2)AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN LAST_INSERT_ROWID() THEN ((rt1.c2)AND(rt1.c1)) END) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (CASE x''  WHEN LAST_INSERT_ROWID() THEN ((rt1.c2)AND(rt1.c1)) END);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((591803214))>=((rt0.c1))) COLLATE BINARY INNER JOIN rt1 ON rt0.c1 WHERE (LOWER(DISTINCT LENGTH(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT LENGTH(rt0.c1))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((591803214))>=((rt0.c1))) COLLATE BINARY INNER JOIN rt1 ON rt0.c1);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((591803214))>=((rt0.c1))) COLLATE BINARY INNER JOIN rt1 ON rt0.c1 WHERE (LOWER(DISTINCT LENGTH(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT LENGTH(rt0.c1))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((591803214))>=((rt0.c1))) COLLATE BINARY INNER JOIN rt1 ON rt0.c1);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((591803214))>=((rt0.c1))) COLLATE BINARY INNER JOIN rt1 ON rt0.c1 WHERE (LOWER(DISTINCT LENGTH(rt0.c1)));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2)<(rt1.c0)) IN ()) RIGHT OUTER JOIN rt1 ON ((x'') NOT BETWEEN ((rt1.c2 IN ())) AND (((v0.c0)IS(rt1.c2)))) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2)<(rt1.c0)) IN ()) RIGHT OUTER JOIN rt1 ON ((x'') NOT BETWEEN ((rt1.c2 IN ())) AND (((v0.c0)IS(rt1.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2)<(rt1.c0)) IN ()) RIGHT OUTER JOIN rt1 ON ((x'') NOT BETWEEN ((rt1.c2 IN ())) AND (((v0.c0)IS(rt1.c2)))) WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2)<(rt1.c0)) IN ()) RIGHT OUTER JOIN rt1 ON ((x'') NOT BETWEEN ((rt1.c2 IN ())) AND (((v0.c0)IS(rt1.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((v0.c2)<(rt1.c0)) IN ()) RIGHT OUTER JOIN rt1 ON ((x'') NOT BETWEEN ((rt1.c2 IN ())) AND (((v0.c0)IS(rt1.c2)))) WHERE (v0.c2);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))) IS FALSE)) ORDER BY ((((('-87080493'))==((rt0.c2))))>>(json_valid(rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((('-87080493'))==((rt0.c2))))>>(json_valid(rt0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))) IS FALSE)) ORDER BY ((((('-87080493'))==((rt0.c2))))>>(json_valid(rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY ((((('-87080493'))==((rt0.c2))))>>(json_valid(rt0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0)))) IS FALSE)) ORDER BY ((((('-87080493'))==((rt0.c2))))>>(json_valid(rt0.c4)))  NULLS FIRST;
SELECT * FROM v0, rt1, rt0 WHERE ((load_extension(rt0.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((load_extension(rt0.c3) IN ())) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED);
SELECT * FROM v0, rt1, rt0 WHERE ((load_extension(rt0.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((load_extension(rt0.c3) IN ())) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED);
SELECT * FROM v0, rt1, rt0 WHERE ((load_extension(rt0.c3) IN ()));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c3);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c3);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((rt0.c2) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, v0 WHERE ((~ (-2004838347)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (-2004838347)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, v0 WHERE ((~ (-2004838347)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (-2004838347)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, v0 WHERE ((~ (-2004838347)) COLLATE NOCASE);
SELECT * FROM rt0, rt1, v0 WHERE (((rt0.c0) NOT BETWEEN (CASE rt0.c1  WHEN NULL THEN rt1.c2 END) AND ((NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (CASE rt0.c1  WHEN NULL THEN rt1.c2 END) AND ((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((rt0.c0) NOT BETWEEN (CASE rt0.c1  WHEN NULL THEN rt1.c2 END) AND ((NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (CASE rt0.c1  WHEN NULL THEN rt1.c2 END) AND ((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((rt0.c0) NOT BETWEEN (CASE rt0.c1  WHEN NULL THEN rt1.c2 END) AND ((NOT (rt0.c4)))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE)) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, UNLIKELY(DISTINCT rt0.c2) ASC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, UNLIKELY(DISTINCT rt0.c2) ASC  NULLS FIRST, x'' ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE)) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, UNLIKELY(DISTINCT rt0.c2) ASC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, UNLIKELY(DISTINCT rt0.c2) ASC  NULLS FIRST, x'' ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0))) IS FALSE)) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))GLOB(rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST, UNLIKELY(DISTINCT rt0.c2) ASC  NULLS FIRST, x'' ASC;
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((rt1.c2 IN (v0.c1)))+(((v0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))OR(v0.c1))) BETWEEN ((((v0.c0, rt1.c0, 0Xfffffffff617885b)) BETWEEN ((v0.c1, NULL, rt1.c1)) AND ((v0.c1, v0.c1, v0.c0)))) AND (TYPEOF(rt1.c2))), ((0.3639316184199899)>(((rt1.c2)/(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (v0.c1)))+(((v0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((((((rt1.c0)OR(rt1.c2)))OR(v0.c1))) BETWEEN ((((v0.c0, rt1.c0, 0xfffffffff617885b)) BETWEEN ((v0.c1, NULL, rt1.c1)) AND ((v0.c1, v0.c1, v0.c0)))) AND (TYPEOF(rt1.c2))), ((0.3639316184199899)>(((rt1.c2)/(v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((rt1.c2 IN (v0.c1)))+(((v0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))OR(v0.c1))) BETWEEN ((((v0.c0, rt1.c0, 0Xfffffffff617885b)) BETWEEN ((v0.c1, NULL, rt1.c1)) AND ((v0.c1, v0.c1, v0.c0)))) AND (TYPEOF(rt1.c2))), ((0.3639316184199899)>(((rt1.c2)/(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (v0.c1)))+(((v0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY ((((((rt1.c0)OR(rt1.c2)))OR(v0.c1))) BETWEEN ((((v0.c0, rt1.c0, 0xfffffffff617885b)) BETWEEN ((v0.c1, NULL, rt1.c1)) AND ((v0.c1, v0.c1, v0.c0)))) AND (TYPEOF(rt1.c2))), ((0.3639316184199899)>(((rt1.c2)/(v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE ((((rt1.c2 IN (v0.c1)))+(((v0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))OR(v0.c1))) BETWEEN ((((v0.c0, rt1.c0, 0Xfffffffff617885b)) BETWEEN ((v0.c1, NULL, rt1.c1)) AND ((v0.c1, v0.c1, v0.c0)))) AND (TYPEOF(rt1.c2))), ((0.3639316184199899)>(((rt1.c2)/(v0.c1))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (0Xffffffffe72f7e56);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe72f7e56) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0Xffffffffe72f7e56);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe72f7e56) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (0Xffffffffe72f7e56);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)-(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN 0.9815955723031973 ELSE (- (rt0.c4)) END) ORDER BY rt0.c4, 0.4797350166764289  NULLS LAST, 0.4489027189464909 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)-(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN 0.9815955723031973 ELSE (- (rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4, 0.4797350166764289  NULLS LAST, 0.4489027189464909 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)-(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN 0.9815955723031973 ELSE (- (rt0.c4)) END) ORDER BY rt0.c4, 0.4797350166764289  NULLS LAST, 0.4489027189464909 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)-(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN 0.9815955723031973 ELSE (- (rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4, 0.4797350166764289  NULLS LAST, 0.4489027189464909 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)-(rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN 0.9815955723031973 ELSE (- (rt0.c4)) END) ORDER BY rt0.c4, 0.4797350166764289  NULLS LAST, 0.4489027189464909 COLLATE NOCASE;
SELECT * FROM rt1 WHERE (((((rt1.c1)-(rt1.c1)))<<(CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(rt1.c1)))<<(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)-(rt1.c1)))<<(CAST(rt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(rt1.c1)))<<(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)-(rt1.c1)))<<(CAST(rt1.c2 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS TEXT)) ORDER BY CASE (((rt0.c3))<>((rt0.c2)))  WHEN ((rt0.c2)>>(rt0.c3)) THEN (0.1580843393041702 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3))!=((rt0.c2)))  WHEN ((rt0.c2)>>(rt0.c3)) THEN (0.1580843393041702 IN ()) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS TEXT)) ORDER BY CASE (((rt0.c3))<>((rt0.c2)))  WHEN ((rt0.c2)>>(rt0.c3)) THEN (0.1580843393041702 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c3))!=((rt0.c2)))  WHEN ((rt0.c2)>>(rt0.c3)) THEN (0.1580843393041702 IN ()) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS TEXT)) ORDER BY CASE (((rt0.c3))<>((rt0.c2)))  WHEN ((rt0.c2)>>(rt0.c3)) THEN (0.1580843393041702 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((v0.c2)%(rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)%(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((v0.c2)%(rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)%(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (((((v0.c2)%(rt0.c3))) IS FALSE));
SELECT * FROM rt1 NOT INDEXED INNER JOIN v0 ON 0x1f2efded WHERE ((NOT (((((x'98f0')AND(rt1.c1)))AND(v0.c2))))) ORDER BY CAST(CAST(v0.c2 AS TEXT) AS BLOB);
SELECT SUM(count) FROM (SELECT (((NOT (((((x'98f0')AND(rt1.c1)))AND(v0.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON 0x1f2efded ORDER BY CAST(CAST(v0.c2 AS TEXT) AS BLOB));
SELECT * FROM rt1 NOT INDEXED INNER JOIN v0 ON 0x1f2efded WHERE ((NOT (((((x'98f0')AND(rt1.c1)))AND(v0.c2))))) ORDER BY CAST(CAST(v0.c2 AS TEXT) AS BLOB);
SELECT SUM(count) FROM (SELECT (((NOT (((((x'98f0')AND(rt1.c1)))AND(v0.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON 0x1f2efded ORDER BY CAST(CAST(v0.c2 AS TEXT) AS BLOB));
SELECT * FROM rt1 NOT INDEXED INNER JOIN v0 ON 0x1f2efded WHERE ((NOT (((((x'98f0')AND(rt1.c1)))AND(v0.c2))))) ORDER BY CAST(CAST(v0.c2 AS TEXT) AS BLOB);
SELECT * FROM v0, rt1 WHERE ((+ ((v0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((+ ((v0.c2 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((+ ((v0.c2 IN (v0.c0)))));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c4 COLLATE BINARY))) ORDER BY CASE WHEN (((rt0.c0))>((rt0.c0))) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)) WHEN ((('581935515')) BETWEEN ((rt0.c3)) AND ((x''))) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN CAST(rt0.c4 AS TEXT) ELSE HEX(rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c0))>((rt0.c0))) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)) WHEN ((('581935515')) BETWEEN ((rt0.c3)) AND ((x''))) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN CAST(rt0.c4 AS TEXT) ELSE HEX(rt0.c0) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c4 COLLATE BINARY))) ORDER BY CASE WHEN (((rt0.c0))>((rt0.c0))) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)) WHEN ((('581935515')) BETWEEN ((rt0.c3)) AND ((x''))) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN CAST(rt0.c4 AS TEXT) ELSE HEX(rt0.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c0))>((rt0.c0))) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)) WHEN ((('581935515')) BETWEEN ((rt0.c3)) AND ((x''))) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN CAST(rt0.c4 AS TEXT) ELSE HEX(rt0.c0) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c4 COLLATE BINARY))) ORDER BY CASE WHEN (((rt0.c0))>((rt0.c0))) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)) WHEN ((('581935515')) BETWEEN ((rt0.c3)) AND ((x''))) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN CAST(rt0.c4 AS TEXT) ELSE HEX(rt0.c0) END ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 INNER JOIN rt1 ON LTRIM(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c1)), CAST(rt1.c0 AS NUMERIC)) WHERE ((- ((~ (rt0.c2))))) ORDER BY CASE CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END  WHEN (- (rt0.c1)) THEN CASE v0.c2  WHEN rt1.c1 THEN v0.c1 END END;
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN rt1 ON LTRIM(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c1)), CAST(rt1.c0 AS NUMERIC)) ORDER BY CASE CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END  WHEN (- (rt0.c1)) THEN CASE v0.c2  WHEN rt1.c1 THEN v0.c1 END END);
SELECT ALL * FROM v0, rt0 INNER JOIN rt1 ON LTRIM(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c1)), CAST(rt1.c0 AS NUMERIC)) WHERE ((- ((~ (rt0.c2))))) ORDER BY CASE CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END  WHEN (- (rt0.c1)) THEN CASE v0.c2  WHEN rt1.c1 THEN v0.c1 END END;
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 INNER JOIN rt1 ON LTRIM(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c1)), CAST(rt1.c0 AS NUMERIC)) ORDER BY CASE CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END  WHEN (- (rt0.c1)) THEN CASE v0.c2  WHEN rt1.c1 THEN v0.c1 END END);
SELECT ALL * FROM v0, rt0 INNER JOIN rt1 ON LTRIM(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c1)), CAST(rt1.c0 AS NUMERIC)) WHERE ((- ((~ (rt0.c2))))) ORDER BY CASE CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END  WHEN (- (rt0.c1)) THEN CASE v0.c2  WHEN rt1.c1 THEN v0.c1 END END;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER)) ORDER BY (((NULL))!=((((rt0.c1)AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((NULL))<>((((rt0.c1)AND(rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER)) ORDER BY (((NULL))!=((((rt0.c1)AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((NULL))<>((((rt0.c1)AND(rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS INTEGER)) ORDER BY (((NULL))!=((((rt0.c1)AND(rt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UPPER(((NULL)-(rt0.c4)))) ORDER BY ((((v0.c0)|(v0.c0)))IS(v0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((NULL)-(rt0.c4)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)|(v0.c0)))IS(v0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UPPER(((NULL)-(rt0.c4)))) ORDER BY ((((v0.c0)|(v0.c0)))IS(v0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((NULL)-(rt0.c4)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)|(v0.c0)))IS(v0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (UPPER(((NULL)-(rt0.c4)))) ORDER BY ((((v0.c0)|(v0.c0)))IS(v0.c2)) ASC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN v0 ON (((CAST(rt1.c0 AS NUMERIC), 'PF' COLLATE NOCASE, (~ (rt0.c3)), ((rt1.c1)=(x'')), ((rt0.c4) IS TRUE)))!=((((rt0.c1) ISNULL), CASE rt1.c1  WHEN rt0.c3 THEN v0.c2 END, ((v0.c2)||(NULL)), ((rt1.c1)%(rt1.c1)), (((v0.c0))>=((rt0.c3)))))) WHERE (((((rt0.c0)AND(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)))AND(v0.c2 COLLATE BINARY))) ORDER BY CAST((+ (v0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)))AND(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN v0 ON (((CAST(rt1.c0 AS NUMERIC), 'PF' COLLATE NOCASE, (~ (rt0.c3)), ((rt1.c1)=(x'')), ((rt0.c4) IS TRUE)))<>((((rt0.c1) ISNULL), CASE rt1.c1  WHEN rt0.c3 THEN v0.c2 END, ((v0.c2)||(NULL)), ((rt1.c1)%(rt1.c1)), (((v0.c0))>=((rt0.c3)))))) ORDER BY CAST((+ (v0.c1)) AS REAL) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN v0 ON (((CAST(rt1.c0 AS NUMERIC), 'PF' COLLATE NOCASE, (~ (rt0.c3)), ((rt1.c1)=(x'')), ((rt0.c4) IS TRUE)))!=((((rt0.c1) ISNULL), CASE rt1.c1  WHEN rt0.c3 THEN v0.c2 END, ((v0.c2)||(NULL)), ((rt1.c1)%(rt1.c1)), (((v0.c0))>=((rt0.c3)))))) WHERE (((((rt0.c0)AND(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)))AND(v0.c2 COLLATE BINARY))) ORDER BY CAST((+ (v0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)))AND(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN v0 ON (((CAST(rt1.c0 AS NUMERIC), 'PF' COLLATE NOCASE, (~ (rt0.c3)), ((rt1.c1)=(x'')), ((rt0.c4) IS TRUE)))<>((((rt0.c1) ISNULL), CASE rt1.c1  WHEN rt0.c3 THEN v0.c2 END, ((v0.c2)||(NULL)), ((rt1.c1)%(rt1.c1)), (((v0.c0))>=((rt0.c3)))))) ORDER BY CAST((+ (v0.c1)) AS REAL) ASC);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON rt1.c2 LEFT OUTER JOIN v0 ON (((CAST(rt1.c0 AS NUMERIC), 'PF' COLLATE NOCASE, (~ (rt0.c3)), ((rt1.c1)=(x'')), ((rt0.c4) IS TRUE)))!=((((rt0.c1) ISNULL), CASE rt1.c1  WHEN rt0.c3 THEN v0.c2 END, ((v0.c2)||(NULL)), ((rt1.c1)%(rt1.c1)), (((v0.c0))>=((rt0.c3)))))) WHERE (((((rt0.c0)AND(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)))AND(v0.c2 COLLATE BINARY))) ORDER BY CAST((+ (v0.c1)) AS REAL) ASC;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>>(rt0.c0)) THEN ((NULL) ISNULL) ELSE rt0.c4 END) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>>(rt0.c0)) THEN ((NULL) ISNULL) ELSE rt0.c4 END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>>(rt0.c0)) THEN ((NULL) ISNULL) ELSE rt0.c4 END) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>>(rt0.c0)) THEN ((NULL) ISNULL) ELSE rt0.c4 END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>>(rt0.c0)) THEN ((NULL) ISNULL) ELSE rt0.c4 END) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT * FROM rt1, rt0, v0 WHERE ((~ (CASE WHEN rt0.c4 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c4 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((~ (CASE WHEN rt0.c4 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c4 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE ((~ (CASE WHEN rt0.c4 THEN rt1.c1 END)));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((CASE WHEN v0.c2 THEN rt1.c1 END)&((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c4 IN (rt0.c1, v0.c2)))AND(((((((((v0.c1)AND(rt1.c0)))OR(rt1.c0)))AND(rt0.c2)))AND('#*\n#腑8')))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((CASE WHEN v0.c2 THEN rt1.c1 END)&((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c4 IN (rt0.c1, v0.c2)))AND(((((((((v0.c1)AND(rt1.c0)))OR(rt1.c0)))AND(rt0.c2)))AND('#*\n#腑8')))))AND(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((CASE WHEN v0.c2 THEN rt1.c1 END)&((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c4 IN (rt0.c1, v0.c2)))AND(((((((((v0.c1)AND(rt1.c0)))OR(rt1.c0)))AND(rt0.c2)))AND('#*\n#腑8')))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((CASE WHEN v0.c2 THEN rt1.c1 END)&((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c4 IN (rt0.c1, v0.c2)))AND(((((((((v0.c1)AND(rt1.c0)))OR(rt1.c0)))AND(rt0.c2)))AND('#*\n#腑8')))))AND(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM v0 INNER JOIN rt1 ON ((CASE WHEN v0.c2 THEN rt1.c1 END)&((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) INNER JOIN rt0 ON (((((rt0.c4 IN (rt0.c1, v0.c2)))AND(((((((((v0.c1)AND(rt1.c0)))OR(rt1.c0)))AND(rt0.c2)))AND('#*\n#腑8')))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (rt1.c2);
SELECT ALL * FROM rt1, rt0, v0 WHERE (TRIM('ꢩHH{mO', (- (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM('ꢩHH{mO', (- (v0.c1)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (TRIM('ꢩHH{mO', (- (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM('ꢩHH{mO', (- (v0.c1)))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (TRIM('ꢩHH{mO', (- (v0.c1))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)OR(rt0.c3)) IN ((rt0.c1 IN ()), (((7.36164725E8, rt0.c1, '#*\n#腑8'))<((rt0.c4, rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c3))<=((rt0.c4))))) AND ((((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)OR(rt0.c3)) IN ((rt0.c1 IN ()), (((7.36164725E8, rt0.c1, '#*\n#腑8'))<((rt0.c4, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c3))<=((rt0.c4))))) AND ((((rt0.c0)*(rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)OR(rt0.c3)) IN ((rt0.c1 IN ()), (((7.36164725E8, rt0.c1, '#*\n#腑8'))<((rt0.c4, rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c3))<=((rt0.c4))))) AND ((((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)OR(rt0.c3)) IN ((rt0.c1 IN ()), (((7.36164725E8, rt0.c1, '#*\n#腑8'))<((rt0.c4, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c3))<=((rt0.c4))))) AND ((((rt0.c0)*(rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)OR(rt0.c3)) IN ((rt0.c1 IN ()), (((7.36164725E8, rt0.c1, '#*\n#腑8'))<((rt0.c4, rt0.c1, rt0.c0)))))) ORDER BY (((rt0.c0)) BETWEEN (((((rt0.c3))<=((rt0.c4))))) AND ((((rt0.c0)*(rt0.c0)))));
SELECT ALL * FROM v0, rt0, rt1 WHERE ((('-1752649385')||(0.30788055264950565)) COLLATE RTRIM) ORDER BY (- (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((('-1752649385')||(0.30788055264950565)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (- (v0.c0)));
SELECT ALL * FROM v0, rt0, rt1 WHERE ((('-1752649385')||(0.30788055264950565)) COLLATE RTRIM) ORDER BY (- (v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((('-1752649385')||(0.30788055264950565)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (- (v0.c0)));
SELECT ALL * FROM v0, rt0, rt1 WHERE ((('-1752649385')||(0.30788055264950565)) COLLATE RTRIM) ORDER BY (- (v0.c0));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0x2be0fb75) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0x2be0fb75) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0x2be0fb75) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((0x2be0fb75) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0x2be0fb75) IS FALSE)) NOT NULL));
SELECT * FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN ()))<(((rt1.c2) BETWEEN (rt0.c0) AND (v0.c1)))) WHERE (CAST(CASE WHEN rt0.c4 THEN v0.c1 ELSE rt1.c1 END AS REAL)) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c4 THEN v0.c1 ELSE rt1.c1 END AS REAL)) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN ()))<(((rt1.c2) BETWEEN (rt0.c0) AND (v0.c1)))) ORDER BY v0.c1 ASC);
SELECT * FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN ()))<(((rt1.c2) BETWEEN (rt0.c0) AND (v0.c1)))) WHERE (CAST(CASE WHEN rt0.c4 THEN v0.c1 ELSE rt1.c1 END AS REAL)) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c4 THEN v0.c1 ELSE rt1.c1 END AS REAL)) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN ()))<(((rt1.c2) BETWEEN (rt0.c0) AND (v0.c1)))) ORDER BY v0.c1 ASC);
SELECT * FROM rt0, v0 LEFT OUTER JOIN rt1 ON (((rt0.c3 IN ()))<(((rt1.c2) BETWEEN (rt0.c0) AND (v0.c1)))) WHERE (CAST(CASE WHEN rt0.c4 THEN v0.c1 ELSE rt1.c1 END AS REAL)) ORDER BY v0.c1 ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c2, x'', rt1.c2))))/(((rt1.c1)<=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c2, x'', rt1.c2))))/(((rt1.c1)<=(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c2, x'', rt1.c2))))/(((rt1.c1)<=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c2, x'', rt1.c2))))/(((rt1.c1)<=(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c2, x'', rt1.c2))))/(((rt1.c1)<=(rt1.c1)))));
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((((((v0.c1)&(rt1.c1))))>((rt0.c3)))) ORDER BY rt1.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)&(rt1.c1))))>((rt0.c3)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c1 ORDER BY rt1.c0 COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((((((v0.c1)&(rt1.c1))))>((rt0.c3)))) ORDER BY rt1.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)&(rt1.c1))))>((rt0.c3)))) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c1 ORDER BY rt1.c0 COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c1 WHERE ((((((v0.c1)&(rt1.c1))))>((rt0.c3)))) ORDER BY rt1.c0 COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, rt0 WHERE ('1775338819') ORDER BY 'WpZ!hL왏	L';
SELECT SUM(count) FROM (SELECT (('1775338819') IS TRUE)  as count FROM rt1, rt0 ORDER BY 'WpZ!hL왏	L');
SELECT ALL * FROM rt1, rt0 WHERE ('1775338819') ORDER BY 'WpZ!hL왏	L';
SELECT SUM(count) FROM (SELECT (('1775338819') IS TRUE)  as count FROM rt1, rt0 ORDER BY 'WpZ!hL왏	L');
SELECT ALL * FROM rt1, rt0 WHERE ('1775338819') ORDER BY 'WpZ!hL왏	L';
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (8.63843427E8);
SELECT SUM(count) FROM (SELECT ((8.63843427E8) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (8.63843427E8);
SELECT SUM(count) FROM (SELECT ((8.63843427E8) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (8.63843427E8);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS INTEGER));
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((ABS(rt1.c0))OR(((v0.c0) NOT NULL))))OR(rt1.c2))) ORDER BY (NOT (((4.12217308E8)AND(rt0.c1))))  NULLS FIRST, ((CAST(v0.c2 AS BLOB))%(((rt0.c1)|(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(rt1.c0))OR(((v0.c0) NOT NULL))))OR(rt1.c2))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (NOT (((4.12217308E8)AND(rt0.c1))))  NULLS FIRST, ((CAST(v0.c2 AS BLOB))%(((rt0.c1)|(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((ABS(rt1.c0))OR(((v0.c0) NOT NULL))))OR(rt1.c2))) ORDER BY (NOT (((4.12217308E8)AND(rt0.c1))))  NULLS FIRST, ((CAST(v0.c2 AS BLOB))%(((rt0.c1)|(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(rt1.c0))OR(((v0.c0) NOT NULL))))OR(rt1.c2))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (NOT (((4.12217308E8)AND(rt0.c1))))  NULLS FIRST, ((CAST(v0.c2 AS BLOB))%(((rt0.c1)|(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, v0 WHERE (((((ABS(rt1.c0))OR(((v0.c0) NOT NULL))))OR(rt1.c2))) ORDER BY (NOT (((4.12217308E8)AND(rt0.c1))))  NULLS FIRST, ((CAST(v0.c2 AS BLOB))%(((rt0.c1)|(v0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND ((rt1.c1 IN ())))) ORDER BY (((rt1.c0) IS TRUE) IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (rt1.c0) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0) IS TRUE) IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (rt1.c0) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND ((rt1.c1 IN ())))) ORDER BY (((rt1.c0) IS TRUE) IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (rt1.c0) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0) IS TRUE) IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (rt1.c0) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (x'') AND ((rt1.c1 IN ())))) ORDER BY (((rt1.c0) IS TRUE) IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (rt1.c0) AND (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0 INNER JOIN rt0 ON ((rt1.c2 COLLATE NOCASE) NOTNULL) WHERE ((((((rt0.c2))>((v0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((v0.c1)))) ISNULL)) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON ((rt1.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM rt1, v0 INNER JOIN rt0 ON ((rt1.c2 COLLATE NOCASE) NOTNULL) WHERE ((((((rt0.c2))>((v0.c1)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))>((v0.c1)))) ISNULL)) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON ((rt1.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM rt1, v0 INNER JOIN rt0 ON ((rt1.c2 COLLATE NOCASE) NOTNULL) WHERE ((((((rt0.c2))>((v0.c1)))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)=(rt0.c1)) THEN rt0.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)==(rt0.c1)) THEN rt0.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)=(rt0.c1)) THEN rt0.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)==(rt0.c1)) THEN rt0.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)=(rt0.c1)) THEN rt0.c3 COLLATE BINARY END);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)+(((rt0.c2)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)+(((rt0.c2)<(rt0.c4))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)+(((rt0.c2)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)+(((rt0.c2)<(rt0.c4))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)+(((rt0.c2)<(rt0.c4)))));
SELECT * FROM rt0, rt1, v0 WHERE ((('')%('-1977404155'))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER))) AND ((v0.c0 COLLATE RTRIM))), CAST(((((NULL)AND(v0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST, ((((rt0.c0)|(rt1.c2)))LIKE(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')%('-1977404155'))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER))) AND ((v0.c0 COLLATE RTRIM))), CAST(((((NULL)AND(v0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST, ((((rt0.c0)|(rt1.c2)))LIKE(v0.c0))  NULLS LAST);
SELECT * FROM rt0, rt1, v0 WHERE ((('')%('-1977404155'))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER))) AND ((v0.c0 COLLATE RTRIM))), CAST(((((NULL)AND(v0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST, ((((rt0.c0)|(rt1.c2)))LIKE(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')%('-1977404155'))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER))) AND ((v0.c0 COLLATE RTRIM))), CAST(((((NULL)AND(v0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST, ((((rt0.c0)|(rt1.c2)))LIKE(v0.c0))  NULLS LAST);
SELECT * FROM rt0, rt1, v0 WHERE ((('')%('-1977404155'))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt1.c0 AS INTEGER))) AND ((v0.c0 COLLATE RTRIM))), CAST(((((NULL)AND(v0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST, ((((rt0.c0)|(rt1.c2)))LIKE(v0.c0))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2, NULL, rt1.c1))<=((rt1.c2, rt1.c1, rt1.c2)))) NOTNULL)) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c2 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, NULL, rt1.c1))<=((rt1.c2, rt1.c1, rt1.c2)))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c2 END AS REAL));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2, NULL, rt1.c1))<=((rt1.c2, rt1.c1, rt1.c2)))) NOTNULL)) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c2 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2, NULL, rt1.c1))<=((rt1.c2, rt1.c1, rt1.c2)))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c2 END AS REAL));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c2, NULL, rt1.c1))<=((rt1.c2, rt1.c1, rt1.c2)))) NOTNULL)) ORDER BY CAST(CASE WHEN rt1.c1 THEN rt1.c2 END AS REAL);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c2 IN (rt0.c1)))/(((rt0.c1) IS FALSE))) WHERE (CAST(((v0.c2) IS TRUE) AS REAL)) ORDER BY HEX(DISTINCT v0.c0) DESC, (((0Xffffffffab826ec8)*('e筯ALEUi*')) IN ((rt0.c1 IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c2 IN (rt0.c1)))/(((rt0.c1) IS FALSE))) ORDER BY HEX(DISTINCT v0.c0) DESC, (((0Xffffffffab826ec8)*('e筯ALEUi*')) IN ((rt0.c1 IN (rt1.c1)))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c2 IN (rt0.c1)))/(((rt0.c1) IS FALSE))) WHERE (CAST(((v0.c2) IS TRUE) AS REAL)) ORDER BY HEX(DISTINCT v0.c0) DESC, (((0Xffffffffab826ec8)*('e筯ALEUi*')) IN ((rt0.c1 IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c2 IN (rt0.c1)))/(((rt0.c1) IS FALSE))) ORDER BY HEX(DISTINCT v0.c0) DESC, (((0Xffffffffab826ec8)*('e筯ALEUi*')) IN ((rt0.c1 IN (rt1.c1)))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((rt1.c2 IN (rt0.c1)))/(((rt0.c1) IS FALSE))) WHERE (CAST(((v0.c2) IS TRUE) AS REAL)) ORDER BY HEX(DISTINCT v0.c0) DESC, (((0Xffffffffab826ec8)*('e筯ALEUi*')) IN ((rt0.c1 IN (rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(0.9208860505786185 AS REAL) THEN (rt0.c1 IN ()) ELSE rt0.c3 COLLATE RTRIM END) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c1)!=(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(0.9208860505786185 AS REAL) THEN (rt0.c1 IN ()) ELSE rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c1)<>(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(0.9208860505786185 AS REAL) THEN (rt0.c1 IN ()) ELSE rt0.c3 COLLATE RTRIM END) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c1)!=(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(0.9208860505786185 AS REAL) THEN (rt0.c1 IN ()) ELSE rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c1)<>(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(0.9208860505786185 AS REAL) THEN (rt0.c1 IN ()) ELSE rt0.c3 COLLATE RTRIM END) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c1 END IN (((rt0.c1)!=(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (PRINTF(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) ORDER BY ((rt0.c2)|(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)|(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (PRINTF(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) ORDER BY ((rt0.c2)|(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)|(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (PRINTF(((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))) ORDER BY ((rt0.c2)|(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS LAST, rt0.c4 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((0.3132737268908057 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.3132737268908057 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((0.3132737268908057 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.3132737268908057 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((0.3132737268908057 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((- ('-535863151')))>>(json(v0.c2))) CROSS JOIN rt0 ON ((((((rt1.c1)<<(v0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)))))AND((('1')<(NULL)))) WHERE (UPPER(v0.c0) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(v0.c0) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((- ('-535863151')))>>(json(v0.c2))) CROSS JOIN rt0 ON ((((((rt1.c1)<<(v0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)))))AND((('1')<(NULL)))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((- ('-535863151')))>>(json(v0.c2))) CROSS JOIN rt0 ON ((((((rt1.c1)<<(v0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)))))AND((('1')<(NULL)))) WHERE (UPPER(v0.c0) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(v0.c0) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON (((- ('-535863151')))>>(json(v0.c2))) CROSS JOIN rt0 ON ((((((rt1.c1)<<(v0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)))))AND((('1')<(NULL)))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON (((- ('-535863151')))>>(json(v0.c2))) CROSS JOIN rt0 ON ((((((rt1.c1)<<(v0.c1)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)))))AND((('1')<(NULL)))) WHERE (UPPER(v0.c0) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CASE (rt0.c1 IN ())  WHEN TYPEOF(DISTINCT rt1.c2) THEN ROUND(v0.c1, rt1.c0) ELSE ((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)) END FULL OUTER JOIN rt1 ON ((((v0.c1)IS('563125185')))|((NOT (v0.c0)))) WHERE (CAST(0.9265174529969638 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9265174529969638 AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE (rt0.c1 IN ())  WHEN TYPEOF(DISTINCT rt1.c2) THEN ROUND(v0.c1, rt1.c0) ELSE ((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)) END FULL OUTER JOIN rt1 ON ((((v0.c1)IS('563125185')))|((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON CASE (rt0.c1 IN ())  WHEN TYPEOF(DISTINCT rt1.c2) THEN ROUND(v0.c1, rt1.c0) ELSE ((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)) END FULL OUTER JOIN rt1 ON ((((v0.c1)IS('563125185')))|((NOT (v0.c0)))) WHERE (CAST(0.9265174529969638 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9265174529969638 AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE (rt0.c1 IN ())  WHEN TYPEOF(DISTINCT rt1.c2) THEN ROUND(v0.c1, rt1.c0) ELSE ((rt0.c2) BETWEEN (v0.c0) AND (v0.c1)) END FULL OUTER JOIN rt1 ON ((((v0.c1)IS('563125185')))|((NOT (v0.c0)))));
SELECT * FROM rt1, v0 WHERE ((((~ (NULL)))LIKE(((v0.c1) IS FALSE)))) ORDER BY LIKELY(((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (NULL)))LIKE(((v0.c1) IS FALSE)))) IS TRUE)  as count FROM rt1, v0 ORDER BY LIKELY(((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) DESC);
SELECT * FROM rt1, v0 WHERE ((((~ (NULL)))LIKE(((v0.c1) IS FALSE)))) ORDER BY LIKELY(((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (NULL)))LIKE(((v0.c1) IS FALSE)))) IS TRUE)  as count FROM rt1, v0 ORDER BY LIKELY(((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) DESC);
SELECT * FROM rt1, v0 WHERE ((((~ (NULL)))LIKE(((v0.c1) IS FALSE)))) ORDER BY LIKELY(((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c0)>(rt1.c2)))>((rt1.c2 IN (rt1.c2))))) ORDER BY (((((rt1.c1)>=(rt1.c1)), (((rt1.c0))==((rt1.c0))), ((rt1.c0)&(rt1.c0))))<((((rt1.c2)<=(rt1.c1)), ((rt1.c0) IS FALSE), ((rt1.c2)<<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(rt1.c2)))>((rt1.c2 IN (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)>=(rt1.c1)), (((rt1.c0))==((rt1.c0))), ((rt1.c0)&(rt1.c0))))<((((rt1.c2)<=(rt1.c1)), ((rt1.c0) IS FALSE), ((rt1.c2)<<(rt1.c1))))));
SELECT * FROM rt1 WHERE (((((rt1.c0)>(rt1.c2)))>((rt1.c2 IN (rt1.c2))))) ORDER BY (((((rt1.c1)>=(rt1.c1)), (((rt1.c0))==((rt1.c0))), ((rt1.c0)&(rt1.c0))))<((((rt1.c2)<=(rt1.c1)), ((rt1.c0) IS FALSE), ((rt1.c2)<<(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(rt1.c2)))>((rt1.c2 IN (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)>=(rt1.c1)), (((rt1.c0))==((rt1.c0))), ((rt1.c0)&(rt1.c0))))<((((rt1.c2)<=(rt1.c1)), ((rt1.c0) IS FALSE), ((rt1.c2)<<(rt1.c1))))));
SELECT * FROM rt1 WHERE (((((rt1.c0)>(rt1.c2)))>((rt1.c2 IN (rt1.c2))))) ORDER BY (((((rt1.c1)>=(rt1.c1)), (((rt1.c0))==((rt1.c0))), ((rt1.c0)&(rt1.c0))))<((((rt1.c2)<=(rt1.c1)), ((rt1.c0) IS FALSE), ((rt1.c2)<<(rt1.c1)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (QUOTE(v0.c1)))) ORDER BY ((rt0.c2)%(v0.c2)) COLLATE RTRIM, rt0.c1, ((+ (v0.c1)) IN (7.34465748E8));
SELECT SUM(count) FROM (SELECT (((- (QUOTE(v0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2)%(v0.c2)) COLLATE RTRIM, rt0.c1, ((+ (v0.c1)) IN (7.34465748E8)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (QUOTE(v0.c1)))) ORDER BY ((rt0.c2)%(v0.c2)) COLLATE RTRIM, rt0.c1, ((+ (v0.c1)) IN (7.34465748E8));
SELECT SUM(count) FROM (SELECT (((- (QUOTE(v0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2)%(v0.c2)) COLLATE RTRIM, rt0.c1, ((+ (v0.c1)) IN (7.34465748E8)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((- (QUOTE(v0.c1)))) ORDER BY ((rt0.c2)%(v0.c2)) COLLATE RTRIM, rt0.c1, ((+ (v0.c1)) IN (7.34465748E8));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (RTRIM(rt0.c0) IN (json_type(rt0.c4))) INNER JOIN rt1 ON json_array(rt0.c4, rt0.c1, 0.3753073249006551, rt1.c0, rt0.c1, rt0.c0) COLLATE NOCASE WHERE (UNICODE(((rt0.c3) NOT NULL))) ORDER BY ((((json_object(rt0.c2, v0.c1))OR(CAST(rt1.c2 AS TEXT))))OR(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((rt0.c3) NOT NULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (RTRIM(rt0.c0) IN (json_type(rt0.c4))) INNER JOIN rt1 ON json_array(rt0.c4, rt0.c1, 0.3753073249006551, rt1.c0, rt0.c1, rt0.c0) COLLATE NOCASE ORDER BY ((((json_object(rt0.c2, v0.c1))OR(CAST(rt1.c2 AS TEXT))))OR(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (RTRIM(rt0.c0) IN (json_type(rt0.c4))) INNER JOIN rt1 ON json_array(rt0.c4, rt0.c1, 0.3753073249006551, rt1.c0, rt0.c1, rt0.c0) COLLATE NOCASE WHERE (UNICODE(((rt0.c3) NOT NULL))) ORDER BY ((((json_object(rt0.c2, v0.c1))OR(CAST(rt1.c2 AS TEXT))))OR(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((rt0.c3) NOT NULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (RTRIM(rt0.c0) IN (json_type(rt0.c4))) INNER JOIN rt1 ON json_array(rt0.c4, rt0.c1, 0.3753073249006551, rt1.c0, rt0.c1, rt0.c0) COLLATE NOCASE ORDER BY ((((json_object(rt0.c2, v0.c1))OR(CAST(rt1.c2 AS TEXT))))OR(rt0.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (RTRIM(rt0.c0) IN (json_type(rt0.c4))) INNER JOIN rt1 ON json_array(rt0.c4, rt0.c1, 0.3753073249006551, rt1.c0, rt0.c1, rt0.c0) COLLATE NOCASE WHERE (UNICODE(((rt0.c3) NOT NULL))) ORDER BY ((((json_object(rt0.c2, v0.c1))OR(CAST(rt1.c2 AS TEXT))))OR(rt0.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)IS NOT(-1.186307853E9)) AS NUMERIC) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c1 END) BETWEEN ((v0.c1 IN ())) AND (CAST(rt0.c2 AS INTEGER))) WHERE ((('-488372957') BETWEEN (((rt0.c3) NOTNULL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((('-488372957') BETWEEN (((rt0.c3) NOTNULL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c1)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)IS NOT(-1.186307853E9)) AS NUMERIC) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c1 END) BETWEEN ((v0.c1 IN ())) AND (CAST(rt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)IS NOT(-1.186307853E9)) AS NUMERIC) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c1 END) BETWEEN ((v0.c1 IN ())) AND (CAST(rt0.c2 AS INTEGER))) WHERE ((('-488372957') BETWEEN (((rt0.c3) NOTNULL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((('-488372957') BETWEEN (((rt0.c3) NOTNULL)) AND ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((v0.c1)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)IS NOT(-1.186307853E9)) AS NUMERIC) FULL OUTER JOIN rt0 ON ((CASE WHEN v0.c2 THEN rt0.c1 END) BETWEEN ((v0.c1 IN ())) AND (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (v0.c0) ORDER BY NULLIF(v0.c2, rt0.c4) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY NULLIF(v0.c2, rt0.c4) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (v0.c0) ORDER BY NULLIF(v0.c2, rt0.c4) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY NULLIF(v0.c2, rt0.c4) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (v0.c0) ORDER BY NULLIF(v0.c2, rt0.c4) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, v0 WHERE ((~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE ((~ (((rt0.c0) BETWEEN (v0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1, ((rt1.c2) IS FALSE), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END, x'3755', ((0x51aee7f4)LIKE(rt1.c0))))<(((((rt1.c2, rt1.c1, NULL)) BETWEEN ((rt1.c0, rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c1) IS TRUE), '-336849328'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, ((rt1.c2) IS FALSE), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END, x'3755', ((0x51aee7f4)LIKE(rt1.c0))))<(((((rt1.c2, rt1.c1, NULL)) BETWEEN ((rt1.c0, rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c1) IS TRUE), '-336849328')))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1, ((rt1.c2) IS FALSE), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END, x'3755', ((0x51aee7f4)LIKE(rt1.c0))))<(((((rt1.c2, rt1.c1, NULL)) BETWEEN ((rt1.c0, rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c1) IS TRUE), '-336849328'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, ((rt1.c2) IS FALSE), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END, x'3755', ((0x51aee7f4)LIKE(rt1.c0))))<(((((rt1.c2, rt1.c1, NULL)) BETWEEN ((rt1.c0, rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c1) IS TRUE), '-336849328')))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1, ((rt1.c2) IS FALSE), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END, x'3755', ((0x51aee7f4)LIKE(rt1.c0))))<(((((rt1.c2, rt1.c1, NULL)) BETWEEN ((rt1.c0, rt1.c1, NULL)) AND ((rt1.c1, rt1.c2, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c1) IS TRUE), '-336849328'))));
SELECT ALL * FROM rt1 WHERE (COALESCE(((NULL) NOTNULL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((NULL))), rt1.c0)) ORDER BY ((rt1.c1 COLLATE RTRIM)!=(HEX(DISTINCT rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((NULL) NOTNULL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((NULL))), rt1.c0)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)!=(HEX(DISTINCT rt1.c1))) ASC);
SELECT ALL * FROM rt1 WHERE (COALESCE(((NULL) NOTNULL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((NULL))), rt1.c0)) ORDER BY ((rt1.c1 COLLATE RTRIM)!=(HEX(DISTINCT rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((NULL) NOTNULL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((NULL))), rt1.c0)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)!=(HEX(DISTINCT rt1.c1))) ASC);
SELECT ALL * FROM rt1 WHERE (COALESCE(((NULL) NOTNULL), (rt1.c1 IN ()), (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((NULL))), rt1.c0)) ORDER BY ((rt1.c1 COLLATE RTRIM)!=(HEX(DISTINCT rt1.c1))) ASC;
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON x'9cfa' FULL OUTER JOIN rt0 ON (((rt0.c3, x'b838', v0.c1)) NOT BETWEEN ((CASE 0.9338094043637375  WHEN rt0.c4 THEN rt0.c3 END, LOWER(DISTINCT rt1.c2), CAST(rt1.c0 AS INTEGER))) AND ((((((rt0.c3)OR(rt1.c1)))AND(v0.c2)), ((v0.c2)|(x'')), ('0' IN ())))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))<>(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))) ORDER BY (('563125185')*(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))<>(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON x'9cfa' FULL OUTER JOIN rt0 ON (((rt0.c3, x'b838', v0.c1)) NOT BETWEEN ((CASE 0.9338094043637375  WHEN rt0.c4 THEN rt0.c3 END, LOWER(DISTINCT rt1.c2), CAST(rt1.c0 AS INTEGER))) AND ((((((rt0.c3)OR(rt1.c1)))AND(v0.c2)), ((v0.c2)|(x'')), ('0' IN ())))) ORDER BY (('563125185')*(((rt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON x'9cfa' FULL OUTER JOIN rt0 ON (((rt0.c3, x'b838', v0.c1)) NOT BETWEEN ((CASE 0.9338094043637375  WHEN rt0.c4 THEN rt0.c3 END, LOWER(DISTINCT rt1.c2), CAST(rt1.c0 AS INTEGER))) AND ((((((rt0.c3)OR(rt1.c1)))AND(v0.c2)), ((v0.c2)|(x'')), ('0' IN ())))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))<>(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))) ORDER BY (('563125185')*(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))<>(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON x'9cfa' FULL OUTER JOIN rt0 ON (((rt0.c3, x'b838', v0.c1)) NOT BETWEEN ((CASE 0.9338094043637375  WHEN rt0.c4 THEN rt0.c3 END, LOWER(DISTINCT rt1.c2), CAST(rt1.c0 AS INTEGER))) AND ((((((rt0.c3)OR(rt1.c1)))AND(v0.c2)), ((v0.c2)|(x'')), ('0' IN ())))) ORDER BY (('563125185')*(((rt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON x'9cfa' FULL OUTER JOIN rt0 ON (((rt0.c3, x'b838', v0.c1)) NOT BETWEEN ((CASE 0.9338094043637375  WHEN rt0.c4 THEN rt0.c3 END, LOWER(DISTINCT rt1.c2), CAST(rt1.c0 AS INTEGER))) AND ((((((rt0.c3)OR(rt1.c1)))AND(v0.c2)), ((v0.c2)|(x'')), ('0' IN ())))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))<>(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))))) ORDER BY (('563125185')*(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) BETWEEN (rt0.c1) AND (x''))) AND (((rt0.c0)+(rt0.c4)))) WHERE (x'') ORDER BY CAST(0.5611314381814282 AS TEXT);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) BETWEEN (rt0.c1) AND (x''))) AND (((rt0.c0)+(rt0.c4)))) ORDER BY CAST(0.5611314381814282 AS TEXT));
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) BETWEEN (rt0.c1) AND (x''))) AND (((rt0.c0)+(rt0.c4)))) WHERE (x'') ORDER BY CAST(0.5611314381814282 AS TEXT);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) BETWEEN (rt0.c1) AND (x''))) AND (((rt0.c0)+(rt0.c4)))) ORDER BY CAST(0.5611314381814282 AS TEXT));
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c4 IN ())) NOT BETWEEN (((rt1.c1) BETWEEN (rt0.c1) AND (x''))) AND (((rt0.c0)+(rt0.c4)))) WHERE (x'') ORDER BY CAST(0.5611314381814282 AS TEXT);
SELECT COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT * FROM rt1 WHERE ((((((((rt1.c0))>((rt1.c2))))OR(rt1.c2)))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0))>((rt1.c2))))OR(rt1.c2)))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((((rt1.c0))>((rt1.c2))))OR(rt1.c2)))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c0))>((rt1.c2))))OR(rt1.c2)))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((((rt1.c0))>((rt1.c2))))OR(rt1.c2)))AND(rt1.c1)));
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (CAST(((rt0.c1)||(rt0.c4)) AS TEXT)) ORDER BY ((((v0.c2)!=(x''))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)||(rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0 ORDER BY ((((v0.c2)<>(x''))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (CAST(((rt0.c1)||(rt0.c4)) AS TEXT)) ORDER BY ((((v0.c2)!=(x''))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)||(rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN v0 ORDER BY ((((v0.c2)<>(x''))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0, rt1 NATURAL JOIN v0 WHERE (CAST(((rt0.c1)||(rt0.c4)) AS TEXT)) ORDER BY ((((v0.c2)!=(x''))) IS FALSE) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC)) ORDER BY (((NOT (rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (rt0.c2))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC)) ORDER BY (((NOT (rt0.c2))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NOT (rt0.c2))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC)) ORDER BY (((NOT (rt0.c2))) ISNULL)  NULLS FIRST;
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (((((v0.c1) IS TRUE)) IS TRUE)) ORDER BY CASE WHEN (((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((rt0.c0)IS(v0.c1)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((rt0.c0)IS(v0.c1)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END ASC  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (((((v0.c1) IS TRUE)) IS TRUE)) ORDER BY CASE WHEN (((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((rt0.c0)IS(v0.c1)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN (((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((rt0.c0)IS(v0.c1)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END ASC  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (((((v0.c1) IS TRUE)) IS TRUE)) ORDER BY CASE WHEN (((rt0.c4)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))) THEN ((rt0.c0)IS(v0.c1)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END ASC  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))*(CAST(v0.c2 AS TEXT))) WHERE (v0.c2) ORDER BY ((0.06491922958429241)IS NOT(((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)))) ASC, ((((((((v0.c1)OR(CAST(v0.c1 AS NUMERIC))))AND(NULL)))OR(rt1.c2)))OR(((rt1.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))*(CAST(v0.c2 AS TEXT))) ORDER BY ((0.06491922958429241)IS NOT(((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)))) ASC, ((((((((v0.c1)OR(CAST(v0.c1 AS NUMERIC))))AND(NULL)))OR(rt1.c2)))OR(((rt1.c2) NOTNULL))) DESC);
SELECT ALL * FROM v0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))*(CAST(v0.c2 AS TEXT))) WHERE (v0.c2) ORDER BY ((0.06491922958429241)IS NOT(((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)))) ASC, ((((((((v0.c1)OR(CAST(v0.c1 AS NUMERIC))))AND(NULL)))OR(rt1.c2)))OR(((rt1.c2) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))*(CAST(v0.c2 AS TEXT))) ORDER BY ((0.06491922958429241)IS NOT(((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)))) ASC, ((((((((v0.c1)OR(CAST(v0.c1 AS NUMERIC))))AND(NULL)))OR(rt1.c2)))OR(((rt1.c2) NOTNULL))) DESC);
SELECT ALL * FROM v0 INNER JOIN rt1 ON (((((rt1.c2))>((rt1.c0))))*(CAST(v0.c2 AS TEXT))) WHERE (v0.c2) ORDER BY ((0.06491922958429241)IS NOT(((v0.c1) NOT BETWEEN (rt1.c2) AND (v0.c1)))) ASC, ((((((((v0.c1)OR(CAST(v0.c1 AS NUMERIC))))AND(NULL)))OR(rt1.c2)))OR(((rt1.c2) NOTNULL))) DESC;
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((v0.c2)<>(0Xffffffffe4d92841)) COLLATE NOCASE WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((v0.c2)!=(0Xffffffffe4d92841)) COLLATE NOCASE);
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((v0.c2)<>(0Xffffffffe4d92841)) COLLATE NOCASE WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((v0.c2)!=(0Xffffffffe4d92841)) COLLATE NOCASE);
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((v0.c2)<>(0Xffffffffe4d92841)) COLLATE NOCASE WHERE (v0.c0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CAST((v0.c1 IN (v0.c1)) AS REAL)) ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN (v0.c1)) AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CAST((v0.c1 IN (v0.c1)) AS REAL)) ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN (v0.c1)) AS REAL)) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (CAST((v0.c1 IN (v0.c1)) AS REAL)) ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt0, v0, rt1 WHERE ((~ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((~ ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE ((~ ((v0.c0 IN ()))));
SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (CAST(((v0.c2)<=(x'df5a')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)<=(x'df5a')) AS INTEGER)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (CAST(((v0.c2)<=(x'df5a')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)<=(x'df5a')) AS INTEGER)) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (CAST(((v0.c2)<=(x'df5a')) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY (((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY (((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1 ORDER BY (((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY (((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) IN ())  NULLS FIRST;
SELECT * FROM rt0, v0, rt1 WHERE (((- (rt0.c2)) IN (((rt0.c1)LIKE(0.00817514925711571)), v0.c0))) ORDER BY (~ (((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))), 'q9*'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN (((rt0.c1)LIKE(0.00817514925711571)), v0.c0))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (~ (((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))), 'q9*'  NULLS FIRST);
SELECT * FROM rt0, v0, rt1 WHERE (((- (rt0.c2)) IN (((rt0.c1)LIKE(0.00817514925711571)), v0.c0))) ORDER BY (~ (((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))), 'q9*'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c2)) IN (((rt0.c1)LIKE(0.00817514925711571)), v0.c0))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (~ (((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))), 'q9*'  NULLS FIRST);
SELECT * FROM rt0, v0, rt1 WHERE (((- (rt0.c2)) IN (((rt0.c1)LIKE(0.00817514925711571)), v0.c0))) ORDER BY (~ (((v0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))), 'q9*'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c1 COLLATE BINARY))) ORDER BY rt1.c2 ASC  NULLS LAST, ((CAST(rt1.c1 AS TEXT))+(((rt1.c0)<(rt1.c0)))) DESC  NULLS LAST, (('^w{}') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC  NULLS LAST, ((CAST(rt1.c1 AS TEXT))+(((rt1.c0)<(rt1.c0)))) DESC  NULLS LAST, (('^w{}') IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c1 COLLATE BINARY))) ORDER BY rt1.c2 ASC  NULLS LAST, ((CAST(rt1.c1 AS TEXT))+(((rt1.c0)<(rt1.c0)))) DESC  NULLS LAST, (('^w{}') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC  NULLS LAST, ((CAST(rt1.c1 AS TEXT))+(((rt1.c0)<(rt1.c0)))) DESC  NULLS LAST, (('^w{}') IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c1 COLLATE BINARY))) ORDER BY rt1.c2 ASC  NULLS LAST, ((CAST(rt1.c1 AS TEXT))+(((rt1.c0)<(rt1.c0)))) DESC  NULLS LAST, (('^w{}') IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE NOCASE IN ()));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER)) IS TRUE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER)) IS TRUE));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER)) IS TRUE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER)) IS TRUE));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER)) IS TRUE) WHERE (v0.c0);
SELECT * FROM rt0, v0, rt1 WHERE (((LOWER('147924988')) BETWEEN (0X7e4ec964) AND (rt0.c0 COLLATE BINARY))) ORDER BY (((v0.c2 IN ()))==(TRIM(DISTINCT rt1.c0, rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER('147924988')) BETWEEN (0X7e4ec964) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((v0.c2 IN ()))==(TRIM(DISTINCT rt1.c0, rt0.c3))) ASC  NULLS FIRST);
SELECT * FROM rt0, v0, rt1 WHERE (((LOWER('147924988')) BETWEEN (0X7e4ec964) AND (rt0.c0 COLLATE BINARY))) ORDER BY (((v0.c2 IN ()))==(TRIM(DISTINCT rt1.c0, rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER('147924988')) BETWEEN (0X7e4ec964) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY (((v0.c2 IN ()))==(TRIM(DISTINCT rt1.c0, rt0.c3))) ASC  NULLS FIRST);
SELECT * FROM rt0, v0, rt1 WHERE (((LOWER('147924988')) BETWEEN (0X7e4ec964) AND (rt0.c0 COLLATE BINARY))) ORDER BY (((v0.c2 IN ()))==(TRIM(DISTINCT rt1.c0, rt0.c3))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) ISNULL), NULL));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c0) ISNULL), NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) ISNULL), NULL));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c0) ISNULL), NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) ISNULL), NULL));
SELECT COUNT(*) FROM v0, rt1 WHERE ((((v0.c1) BETWEEN (v0.c0) AND (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1) BETWEEN (v0.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((((v0.c1) BETWEEN (v0.c0) AND (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c1) BETWEEN (v0.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((((v0.c1) BETWEEN (v0.c0) AND (rt1.c2)) IN ()));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0))>=((x'')))) NOT BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1)))))) ORDER BY ((rt1.c2) BETWEEN (CASE -1106557787  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))>=((x'')))) NOT BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2) BETWEEN (CASE -1106557787  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0))>=((x'')))) NOT BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1)))))) ORDER BY ((rt1.c2) BETWEEN (CASE -1106557787  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))>=((x'')))) NOT BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2) BETWEEN (CASE -1106557787  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0))>=((x'')))) NOT BETWEEN (((rt0.c0) ISNULL)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1)))))) ORDER BY ((rt1.c2) BETWEEN (CASE -1106557787  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2)AND((NOT (v0.c1)))) FULL OUTER JOIN rt1 ON rt1.c2 WHERE ((((((rt0.c1 IN (v0.c0, rt1.c1)))OR(((NULL)-(v0.c2)))))OR(((rt1.c2)!=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (v0.c0, rt1.c1)))OR(((NULL)-(v0.c2)))))OR(((rt1.c2)<>(rt1.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2)AND((NOT (v0.c1)))) FULL OUTER JOIN rt1 ON rt1.c2);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2)AND((NOT (v0.c1)))) FULL OUTER JOIN rt1 ON rt1.c2 WHERE ((((((rt0.c1 IN (v0.c0, rt1.c1)))OR(((NULL)-(v0.c2)))))OR(((rt1.c2)!=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (v0.c0, rt1.c1)))OR(((NULL)-(v0.c2)))))OR(((rt1.c2)<>(rt1.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2)AND((NOT (v0.c1)))) FULL OUTER JOIN rt1 ON rt1.c2);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c2)AND((NOT (v0.c1)))) FULL OUTER JOIN rt1 ON rt1.c2 WHERE ((((((rt0.c1 IN (v0.c0, rt1.c1)))OR(((NULL)-(v0.c2)))))OR(((rt1.c2)!=(rt1.c0)))));
SELECT * FROM v0, rt1 WHERE ((~ (((1.076710152E9) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((1.076710152E9) IS FALSE)))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((~ (((1.076710152E9) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((1.076710152E9) IS FALSE)))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((~ (((1.076710152E9) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT * FROM rt1, rt0, v0 WHERE (((rt1.c0) NOTNULL)) ORDER BY ((CASE WHEN '\rko' THEN v0.c2 ELSE rt0.c3 END) BETWEEN (json_valid(rt0.c0)) AND (0.6175678357224371)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((CASE WHEN '\rko' THEN v0.c2 ELSE rt0.c3 END) BETWEEN (json_valid(rt0.c0)) AND (0.6175678357224371)) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, v0 WHERE (((rt1.c0) NOTNULL)) ORDER BY ((CASE WHEN '\rko' THEN v0.c2 ELSE rt0.c3 END) BETWEEN (json_valid(rt0.c0)) AND (0.6175678357224371)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((CASE WHEN '\rko' THEN v0.c2 ELSE rt0.c3 END) BETWEEN (json_valid(rt0.c0)) AND (0.6175678357224371)) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, v0 WHERE (((rt1.c0) NOTNULL)) ORDER BY ((CASE WHEN '\rko' THEN v0.c2 ELSE rt0.c3 END) BETWEEN (json_valid(rt0.c0)) AND (0.6175678357224371)) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c4) NOTNULL))>>(((rt1.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOTNULL))>>(((rt1.c0)IS(rt0.c1))))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c4) NOTNULL))>>(((rt1.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOTNULL))>>(((rt1.c0)IS(rt0.c1))))) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM v0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c4) NOTNULL))>>(((rt1.c0)IS(rt0.c1)))));
SELECT * FROM v0, rt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CAST(rt1.c1 AS BLOB)) NOTNULL));
SELECT * FROM v0, rt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM v0, rt1 ORDER BY ((CAST(rt1.c1 AS BLOB)) NOTNULL));
SELECT * FROM v0, rt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOTNULL);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c4 COLLATE BINARY)) AND (((NOT (rt1.c0))))) FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((rt1.c2 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c4 COLLATE BINARY)) AND (((NOT (rt1.c0))))) FULL OUTER JOIN rt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c4 COLLATE BINARY)) AND (((NOT (rt1.c0))))) FULL OUTER JOIN rt1 ON rt1.c1 WHERE (((rt1.c2 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((rt0.c4 COLLATE BINARY)) AND (((NOT (rt1.c0))))) FULL OUTER JOIN rt1 ON rt1.c1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((v0.c1)) BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('h&၎O'))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('h&၎O')))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((v0.c1)) BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('h&၎O'))));
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('h&၎O')))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((v0.c1)) BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('h&၎O'))));
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ()));
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) COLLATE BINARY COLLATE RTRIM WHERE ('1775338819');
SELECT SUM(count) FROM (SELECT (('1775338819') IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) COLLATE BINARY COLLATE RTRIM WHERE ('1775338819');
SELECT SUM(count) FROM (SELECT (('1775338819') IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c2)) COLLATE BINARY COLLATE RTRIM WHERE ('1775338819');
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((v0.c1)<(rt0.c3)))AND(((rt0.c0)IS(0.022726941381636223)))))AND(rtreenode(rt0.c1, v0.c1)))) ORDER BY (rt0.c0 IN (v0.c0, v0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)<(rt0.c3)))AND(((rt0.c0)IS(0.022726941381636223)))))AND(rtreenode(rt0.c1, v0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c0 IN (v0.c0, v0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((v0.c1)<(rt0.c3)))AND(((rt0.c0)IS(0.022726941381636223)))))AND(rtreenode(rt0.c1, v0.c1)))) ORDER BY (rt0.c0 IN (v0.c0, v0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)<(rt0.c3)))AND(((rt0.c0)IS(0.022726941381636223)))))AND(rtreenode(rt0.c1, v0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c0 IN (v0.c0, v0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((v0.c1)<(rt0.c3)))AND(((rt0.c0)IS(0.022726941381636223)))))AND(rtreenode(rt0.c1, v0.c1)))) ORDER BY (rt0.c0 IN (v0.c0, v0.c1)) COLLATE NOCASE COLLATE BINARY  NULLS LAST;
SELECT * FROM rt1 INNER JOIN v0 ON '' LEFT OUTER JOIN rt0 ON CAST((v0.c1 IN ()) AS TEXT) WHERE (CASE WHEN ((rt0.c0)%(rt1.c1)) THEN ((-481899526) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)%(rt1.c1)) THEN ((-481899526) NOTNULL) END) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON '' LEFT OUTER JOIN rt0 ON CAST((v0.c1 IN ()) AS TEXT));
SELECT * FROM rt1 INNER JOIN v0 ON '' LEFT OUTER JOIN rt0 ON CAST((v0.c1 IN ()) AS TEXT) WHERE (CASE WHEN ((rt0.c0)%(rt1.c1)) THEN ((-481899526) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)%(rt1.c1)) THEN ((-481899526) NOTNULL) END) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON '' LEFT OUTER JOIN rt0 ON CAST((v0.c1 IN ()) AS TEXT));
SELECT * FROM rt1 INNER JOIN v0 ON '' LEFT OUTER JOIN rt0 ON CAST((v0.c1 IN ()) AS TEXT) WHERE (CASE WHEN ((rt0.c0)%(rt1.c1)) THEN ((-481899526) NOTNULL) END);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c2)) BETWEEN ((((v0.c0)GLOB(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL))))) ORDER BY ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt1.c1)OR(rt0.c2))) AND (((((rt0.c4)AND(v0.c2)))AND(rt1.c1))))  NULLS LAST, (((x'77dc26c8'))==((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))) ASC, (NOT (((rt1.c2)+(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((v0.c0)GLOB(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt1.c1)OR(rt0.c2))) AND (((((rt0.c4)AND(v0.c2)))AND(rt1.c1))))  NULLS LAST, (((x'77dc26c8'))==((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))) ASC, (NOT (((rt1.c2)+(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c2)) BETWEEN ((((v0.c0)GLOB(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL))))) ORDER BY ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt1.c1)OR(rt0.c2))) AND (((((rt0.c4)AND(v0.c2)))AND(rt1.c1))))  NULLS LAST, (((x'77dc26c8'))==((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))) ASC, (NOT (((rt1.c2)+(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((v0.c0)GLOB(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL))))) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt1.c1)OR(rt0.c2))) AND (((((rt0.c4)AND(v0.c2)))AND(rt1.c1))))  NULLS LAST, (((x'77dc26c8'))==((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))) ASC, (NOT (((rt1.c2)+(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c2)) BETWEEN ((((v0.c0)GLOB(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL))))) ORDER BY ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt1.c1)OR(rt0.c2))) AND (((((rt0.c4)AND(v0.c2)))AND(rt1.c1))))  NULLS LAST, (((x'77dc26c8'))==((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))) ASC, (NOT (((rt1.c2)+(rt0.c2)))) ASC;
SELECT * FROM rt1 NATURAL JOIN v0 WHERE (1.753845854E9);
SELECT SUM(count) FROM (SELECT ALL ((1.753845854E9) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT * FROM rt1 NATURAL JOIN v0 WHERE (1.753845854E9);
SELECT SUM(count) FROM (SELECT ALL ((1.753845854E9) IS TRUE)  as count FROM rt1 NATURAL JOIN v0);
SELECT * FROM rt1 NATURAL JOIN v0 WHERE (1.753845854E9);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))||(((((rt0.c1)AND(rt0.c3)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))||(((((rt0.c1)AND(rt0.c3)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))||(((((rt0.c1)AND(rt0.c3)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))||(((((rt0.c1)AND(rt0.c3)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))||(((((rt0.c1)AND(rt0.c3)))OR(rt0.c4)))));
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((((v0.c0))>=((rt0.c4))))+(x'1531')));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((rt0.c4))))+(x'1531'))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((((v0.c0))>=((rt0.c4))))+(x'1531')));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>=((rt0.c4))))+(x'1531'))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE ((((((v0.c0))>=((rt0.c4))))+(x'1531')));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)IS NOT((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE (((v0.c0 COLLATE RTRIM)IS NOT((rt1.c0 IN ()))));
SELECT * FROM rt1, v0 WHERE (((CAST(rt1.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (((CAST(rt1.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE (((CAST(rt1.c2 AS REAL)) IS FALSE));
SELECT * FROM rt0, rt1 WHERE (((((rt0.c3)/(rt0.c0)))&((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)/(rt0.c0)))&((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c3)/(rt0.c0)))&((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)/(rt0.c0)))&((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c3)/(rt0.c0)))&((rt0.c2 IN ()))));
SELECT ALL * FROM rt0 WHERE (json_array(CAST(rt0.c2 AS INTEGER), ((rt0.c2)-(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((json_array(CAST(rt0.c2 AS INTEGER), ((rt0.c2)-(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_array(CAST(rt0.c2 AS INTEGER), ((rt0.c2)-(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((json_array(CAST(rt0.c2 AS INTEGER), ((rt0.c2)-(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (json_array(CAST(rt0.c2 AS INTEGER), ((rt0.c2)-(rt0.c4))));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1))) BETWEEN (((rt1.c0)<<(rt1.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1))) BETWEEN (((rt1.c0)<<(rt1.c0))) AND (x''))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1))) BETWEEN (((rt1.c0)<<(rt1.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1))) BETWEEN (((rt1.c0)<<(rt1.c0))) AND (x''))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt0.c1))) BETWEEN (((rt1.c0)<<(rt1.c0))) AND (x'')));
SELECT COUNT(*) FROM rt0 WHERE (x'cc07ca0a') ORDER BY (((+ (rt0.c3)))+(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((x'cc07ca0a') IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c3)))+(rt0.c0)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (x'cc07ca0a') ORDER BY (((+ (rt0.c3)))+(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((x'cc07ca0a') IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c3)))+(rt0.c0)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (x'cc07ca0a') ORDER BY (((+ (rt0.c3)))+(rt0.c0)) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c0)<<(rt0.c4)), (((x'', x'', rt0.c4))>=((rt0.c0, rt0.c2, '-1977404155'))), ((((rt0.c4)OR(rt1.c0)))AND(rt1.c1)), ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c3)), rt1.c2))<((((rt0.c4) NOTNULL), ((rt0.c2)<>(rt0.c0)), ((rt0.c4)>(rt1.c2)), ((rt1.c0)/(rt1.c0)), 0.1335009972083102)))) ORDER BY ((rt0.c4)IS NOT(rt0.c4)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)<<(rt0.c4)), (((x'', x'', rt0.c4))>=((rt0.c0, rt0.c2, '-1977404155'))), ((((rt0.c4)OR(rt1.c0)))AND(rt1.c1)), ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c3)), rt1.c2))<((((rt0.c4) NOTNULL), ((rt0.c2)<>(rt0.c0)), ((rt0.c4)>(rt1.c2)), ((rt1.c0)/(rt1.c0)), 0.1335009972083102)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c4)IS NOT(rt0.c4)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c0)<<(rt0.c4)), (((x'', x'', rt0.c4))>=((rt0.c0, rt0.c2, '-1977404155'))), ((((rt0.c4)OR(rt1.c0)))AND(rt1.c1)), ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c3)), rt1.c2))<((((rt0.c4) NOTNULL), ((rt0.c2)<>(rt0.c0)), ((rt0.c4)>(rt1.c2)), ((rt1.c0)/(rt1.c0)), 0.1335009972083102)))) ORDER BY ((rt0.c4)IS NOT(rt0.c4)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)<<(rt0.c4)), (((x'', x'', rt0.c4))>=((rt0.c0, rt0.c2, '-1977404155'))), ((((rt0.c4)OR(rt1.c0)))AND(rt1.c1)), ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c3)), rt1.c2))<((((rt0.c4) NOTNULL), ((rt0.c2)<>(rt0.c0)), ((rt0.c4)>(rt1.c2)), ((rt1.c0)/(rt1.c0)), 0.1335009972083102)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c4)IS NOT(rt0.c4)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt1.c0)<<(rt0.c4)), (((x'', x'', rt0.c4))>=((rt0.c0, rt0.c2, '-1977404155'))), ((((rt0.c4)OR(rt1.c0)))AND(rt1.c1)), ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c3)), rt1.c2))<((((rt0.c4) NOTNULL), ((rt0.c2)<>(rt0.c0)), ((rt0.c4)>(rt1.c2)), ((rt1.c0)/(rt1.c0)), 0.1335009972083102)))) ORDER BY ((rt0.c4)IS NOT(rt0.c4)) COLLATE RTRIM;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON -5.74600656E8 CROSS JOIN rt0 ON ((((rt0.c4)<=(v0.c0)))|((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c1))))) WHERE (0.9170861648502865);
SELECT SUM(count) FROM (SELECT ((0.9170861648502865) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON -5.74600656E8 CROSS JOIN rt0 ON ((((rt0.c4)<=(v0.c0)))|((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c1))))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON -5.74600656E8 CROSS JOIN rt0 ON ((((rt0.c4)<=(v0.c0)))|((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c1))))) WHERE (0.9170861648502865);
SELECT SUM(count) FROM (SELECT ((0.9170861648502865) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON -5.74600656E8 CROSS JOIN rt0 ON ((((rt0.c4)<=(v0.c0)))|((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c1))))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN v0 ON -5.74600656E8 CROSS JOIN rt0 ON ((((rt0.c4)<=(v0.c0)))|((((v0.c1)) NOT BETWEEN ((rt1.c2)) AND ((v0.c1))))) WHERE (0.9170861648502865);
SELECT ALL * FROM rt0 WHERE (((((-8.26156287E8 COLLATE BINARY)AND((rt0.c0 IN (rt0.c2)))))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((-8.26156287E8 COLLATE BINARY)AND((rt0.c0 IN (rt0.c2)))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((-8.26156287E8 COLLATE BINARY)AND((rt0.c0 IN (rt0.c2)))))AND(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((-8.26156287E8 COLLATE BINARY)AND((rt0.c0 IN (rt0.c2)))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((-8.26156287E8 COLLATE BINARY)AND((rt0.c0 IN (rt0.c2)))))AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c4)>>(rt0.c2)), QUOTE(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c4)>>(rt0.c2)), QUOTE(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c4)>>(rt0.c2)), QUOTE(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c4)>>(rt0.c2)), QUOTE(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c4)>>(rt0.c2)), QUOTE(rt0.c2)));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((((((rt0.c0)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (CASE v0.c2  WHEN x'' THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END) AND (((((((((rt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt1.c1)))OR(v0.c0))))) ORDER BY ((((v0.c0)>>(v0.c2)))>>(((rt1.c1)OR(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (CASE v0.c2  WHEN x'' THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END) AND (((((((((rt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt1.c1)))OR(v0.c0))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((v0.c0)>>(v0.c2)))>>(((rt1.c1)OR(v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((((((rt0.c0)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (CASE v0.c2  WHEN x'' THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END) AND (((((((((rt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt1.c1)))OR(v0.c0))))) ORDER BY ((((v0.c0)>>(v0.c2)))>>(((rt1.c1)OR(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (CASE v0.c2  WHEN x'' THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END) AND (((((((((rt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt1.c1)))OR(v0.c0))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((v0.c0)>>(v0.c2)))>>(((rt1.c1)OR(v0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (((((((rt0.c0)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (CASE v0.c2  WHEN x'' THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c2 END) AND (((((((((rt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt1.c1)))OR(v0.c0))))) ORDER BY ((((v0.c0)>>(v0.c2)))>>(((rt1.c1)OR(v0.c2))))  NULLS LAST;
SELECT * FROM v0, rt0, rt1 WHERE ((((x'cb7a' IN ())) NOT NULL)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'cb7a' IN ())) NOT NULL)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0, rt0, rt1 WHERE ((((x'cb7a' IN ())) NOT NULL)) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'cb7a' IN ())) NOT NULL)) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY v0.c0  NULLS LAST);
SELECT * FROM v0, rt0, rt1 WHERE ((((x'cb7a' IN ())) NOT NULL)) ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((rt0.c1)*(v0.c1))  WHEN ((v0.c2) NOT NULL) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)*(v0.c1))  WHEN ((v0.c2) NOT NULL) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0 ORDER BY NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((rt0.c1)*(v0.c1))  WHEN ((v0.c2) NOT NULL) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)*(v0.c1))  WHEN ((v0.c2) NOT NULL) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0 ORDER BY NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((rt0.c1)*(v0.c1))  WHEN ((v0.c2) NOT NULL) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY NULLIF(DISTINCT rt0.c2, rt0.c1) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON (((0.15471550660762123) NOT BETWEEN (205062437) AND (rt1.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)), rt0.c4 COLLATE BINARY)) FULL OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS NUMERIC) THEN (('hﮂth\nU')<=(v0.c0)) ELSE CASE rt1.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END END WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c4 THEN NULL END)>=(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((0.15471550660762123) NOT BETWEEN (205062437) AND (rt1.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)), rt0.c4 COLLATE BINARY)) FULL OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS NUMERIC) THEN (('hﮂth\nU')<=(v0.c0)) ELSE CASE rt1.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END END ORDER BY ((CASE WHEN rt0.c4 THEN NULL END)>=(rt0.c2)) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON (((0.15471550660762123) NOT BETWEEN (205062437) AND (rt1.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)), rt0.c4 COLLATE BINARY)) FULL OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS NUMERIC) THEN (('hﮂth\nU')<=(v0.c0)) ELSE CASE rt1.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END END WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c4 THEN NULL END)>=(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((0.15471550660762123) NOT BETWEEN (205062437) AND (rt1.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)), rt0.c4 COLLATE BINARY)) FULL OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS NUMERIC) THEN (('hﮂth\nU')<=(v0.c0)) ELSE CASE rt1.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END END ORDER BY ((CASE WHEN rt0.c4 THEN NULL END)>=(rt0.c2)) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON (((0.15471550660762123) NOT BETWEEN (205062437) AND (rt1.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)), rt0.c4 COLLATE BINARY)) FULL OUTER JOIN v0 ON CASE WHEN CAST(v0.c2 AS NUMERIC) THEN (('hﮂth\nU')<=(v0.c0)) ELSE CASE rt1.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END END WHERE ((v0.c2 IN ()) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c4 THEN NULL END)>=(rt0.c2)) DESC;
SELECT * FROM rt1, v0, rt0 WHERE ((((v0.c1)) BETWEEN (((((rt1.c2, rt0.c1, rt0.c2))<>((v0.c0, rt0.c0, v0.c1))))) AND (((v0.c0 IN ()))))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((((rt0.c2, -2.18100303E8, rt0.c0)) BETWEEN ((rt0.c1, '诈m', v0.c0)) AND ((rt0.c0, rt1.c2, rt1.c2)))) AND (((v0.c2) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN (((((rt1.c2, rt0.c1, rt0.c2))!=((v0.c0, rt0.c0, v0.c1))))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((((rt0.c2, -2.18100303E8, rt0.c0)) BETWEEN ((rt0.c1, '诈m', v0.c0)) AND ((rt0.c0, rt1.c2, rt1.c2)))) AND (((v0.c2) NOTNULL)))  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE ((((v0.c1)) BETWEEN (((((rt1.c2, rt0.c1, rt0.c2))<>((v0.c0, rt0.c0, v0.c1))))) AND (((v0.c0 IN ()))))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((((rt0.c2, -2.18100303E8, rt0.c0)) BETWEEN ((rt0.c1, '诈m', v0.c0)) AND ((rt0.c0, rt1.c2, rt1.c2)))) AND (((v0.c2) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN (((((rt1.c2, rt0.c1, rt0.c2))!=((v0.c0, rt0.c0, v0.c1))))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((((rt0.c2, -2.18100303E8, rt0.c0)) BETWEEN ((rt0.c1, '诈m', v0.c0)) AND ((rt0.c0, rt1.c2, rt1.c2)))) AND (((v0.c2) NOTNULL)))  NULLS FIRST);
SELECT * FROM rt1, v0, rt0 WHERE ((((v0.c1)) BETWEEN (((((rt1.c2, rt0.c1, rt0.c2))<>((v0.c0, rt0.c0, v0.c1))))) AND (((v0.c0 IN ()))))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN ((((rt0.c2, -2.18100303E8, rt0.c0)) BETWEEN ((rt0.c1, '诈m', v0.c0)) AND ((rt0.c0, rt1.c2, rt1.c2)))) AND (((v0.c2) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c0, rt1.c2))!=((0.3255947616221814, rt1.c0, rt1.c0)))) NOT NULL) WHERE (CAST(CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'28f0' THEN rt0.c3 END AS REAL)) ORDER BY 0.054497586465780734 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'28f0' THEN rt0.c3 END AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c0, rt1.c2))!=((0.3255947616221814, rt1.c0, rt1.c0)))) NOT NULL) ORDER BY 0.054497586465780734 ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c0, rt1.c2))!=((0.3255947616221814, rt1.c0, rt1.c0)))) NOT NULL) WHERE (CAST(CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'28f0' THEN rt0.c3 END AS REAL)) ORDER BY 0.054497586465780734 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'28f0' THEN rt0.c3 END AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c0, rt1.c2))!=((0.3255947616221814, rt1.c0, rt1.c0)))) NOT NULL) ORDER BY 0.054497586465780734 ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt1.c2, rt1.c0, rt1.c2))!=((0.3255947616221814, rt1.c0, rt1.c0)))) NOT NULL) WHERE (CAST(CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN x'28f0' THEN rt0.c3 END AS REAL)) ORDER BY 0.054497586465780734 ASC;
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt1.c2, v0.c2, v0.c2)) BETWEEN (('', v0.c2, v0.c0)) AND (('v慘蝰(axem', rt0.c1, rt0.c3))))&(v0.c1))) ORDER BY (((((((((((rt0.c4)AND(rt1.c2)))AND(v0.c2)))OR(rt0.c4)))AND(v0.c2))))=((((((((((0.2165927510221769)AND(v0.c2)))OR(v0.c2)))AND(rt0.c4)))OR(v0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, v0.c2, v0.c2)) BETWEEN (('', v0.c2, v0.c0)) AND (('v慘蝰(axem', rt0.c1, rt0.c3))))&(v0.c1))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((((((((((rt0.c4)AND(rt1.c2)))AND(v0.c2)))OR(rt0.c4)))AND(v0.c2))))==((((((((((0.2165927510221769)AND(v0.c2)))OR(v0.c2)))AND(rt0.c4)))OR(v0.c2))))) DESC);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt1.c2, v0.c2, v0.c2)) BETWEEN (('', v0.c2, v0.c0)) AND (('v慘蝰(axem', rt0.c1, rt0.c3))))&(v0.c1))) ORDER BY (((((((((((rt0.c4)AND(rt1.c2)))AND(v0.c2)))OR(rt0.c4)))AND(v0.c2))))=((((((((((0.2165927510221769)AND(v0.c2)))OR(v0.c2)))AND(rt0.c4)))OR(v0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, v0.c2, v0.c2)) BETWEEN (('', v0.c2, v0.c0)) AND (('v慘蝰(axem', rt0.c1, rt0.c3))))&(v0.c1))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((((((((((rt0.c4)AND(rt1.c2)))AND(v0.c2)))OR(rt0.c4)))AND(v0.c2))))==((((((((((0.2165927510221769)AND(v0.c2)))OR(v0.c2)))AND(rt0.c4)))OR(v0.c2))))) DESC);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE ((((((rt1.c2, v0.c2, v0.c2)) BETWEEN (('', v0.c2, v0.c0)) AND (('v慘蝰(axem', rt0.c1, rt0.c3))))&(v0.c1))) ORDER BY (((((((((((rt0.c4)AND(rt1.c2)))AND(v0.c2)))OR(rt0.c4)))AND(v0.c2))))=((((((((((0.2165927510221769)AND(v0.c2)))OR(v0.c2)))AND(rt0.c4)))OR(v0.c2))))) DESC;
SELECT COUNT(*) FROM v0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c3)>=(rt0.c1))) NOTNULL)) ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN v0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>=(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0 ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN v0.c0 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c3)>=(rt0.c1))) NOTNULL)) ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN v0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>=(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM v0, rt1 NATURAL JOIN rt0 ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN v0.c0 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c3)>=(rt0.c1))) NOTNULL)) ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN v0.c0 COLLATE BINARY END  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c1))) NOT BETWEEN (((rt0.c3)<<(0.7164246618298795))) AND (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(rt0.c1))) NOT BETWEEN (((rt0.c3)<<(0.7164246618298795))) AND (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c1))) NOT BETWEEN (((rt0.c3)<<(0.7164246618298795))) AND (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(rt0.c1))) NOT BETWEEN (((rt0.c3)<<(0.7164246618298795))) AND (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<(rt0.c1))) NOT BETWEEN (((rt0.c3)<<(0.7164246618298795))) AND (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ('-582643293') ORDER BY ((rt1.c2)GLOB(rt0.c3)) COLLATE RTRIM ASC, 0.3369851197151438, (((rt1.c0 IN (rt1.c2)))GLOB(((0.5678422753229315) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-582643293') IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c2)GLOB(rt0.c3)) COLLATE RTRIM ASC, 0.3369851197151438, (((rt1.c0 IN (rt1.c2)))GLOB(((0.5678422753229315) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ('-582643293') ORDER BY ((rt1.c2)GLOB(rt0.c3)) COLLATE RTRIM ASC, 0.3369851197151438, (((rt1.c0 IN (rt1.c2)))GLOB(((0.5678422753229315) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-582643293') IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((rt1.c2)GLOB(rt0.c3)) COLLATE RTRIM ASC, 0.3369851197151438, (((rt1.c0 IN (rt1.c2)))GLOB(((0.5678422753229315) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ('-582643293') ORDER BY ((rt1.c2)GLOB(rt0.c3)) COLLATE RTRIM ASC, 0.3369851197151438, (((rt1.c0 IN (rt1.c2)))GLOB(((0.5678422753229315) ISNULL)))  NULLS LAST;
SELECT * FROM rt1, v0, rt0 WHERE (NULL) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) ISNULL))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) ISNULL))), NULL DESC  NULLS LAST);
SELECT * FROM rt1, v0, rt0 WHERE (NULL) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) ISNULL))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) ISNULL))), NULL DESC  NULLS LAST);
SELECT * FROM rt1, v0, rt0 WHERE (NULL) ORDER BY ((rt0.c3) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt1.c0) ISNULL))), NULL DESC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN v0 ON (UNLIKELY(rt0.c3) IN ()) WHERE (v0.c1) ORDER BY ABS(((rt0.c3)AND(NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (UNLIKELY(rt0.c3) IN ()) ORDER BY ABS(((rt0.c3)AND(NULL))) DESC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN v0 ON (UNLIKELY(rt0.c3) IN ()) WHERE (v0.c1) ORDER BY ABS(((rt0.c3)AND(NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (UNLIKELY(rt0.c3) IN ()) ORDER BY ABS(((rt0.c3)AND(NULL))) DESC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN v0 ON (UNLIKELY(rt0.c3) IN ()) WHERE (v0.c1) ORDER BY ABS(((rt0.c3)AND(NULL))) DESC  NULLS LAST;
SELECT * FROM v0, rt1 WHERE (v0.c2) ORDER BY x'0504'  NULLS FIRST, ((('')<=(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, rt1 ORDER BY x'0504'  NULLS FIRST, ((('')<=(v0.c0)) IN ()) ASC);
SELECT * FROM v0, rt1 WHERE (v0.c2) ORDER BY x'0504'  NULLS FIRST, ((('')<=(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, rt1 ORDER BY x'0504'  NULLS FIRST, ((('')<=(v0.c0)) IN ()) ASC);
SELECT * FROM v0, rt1 WHERE (v0.c2) ORDER BY x'0504'  NULLS FIRST, ((('')<=(v0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN rt1 ON CASE WHEN ((NULL)LIKE(rt1.c0)) THEN (((rt1.c1))=((rt0.c4))) END WHERE ((rt0.c3 COLLATE BINARY IN (json_valid(v0.c2)))) ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_GET(rt1.c1))IS((((('.')OR(rt0.c1)))AND(rt0.c1)))) DESC, (((((rt0.c1 IN ()))AND((~ (v0.c1)))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE BINARY IN (json_valid(v0.c2)))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON CASE WHEN ((NULL)LIKE(rt1.c0)) THEN (((rt1.c1))=((rt0.c4))) END ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_GET(rt1.c1))IS((((('.')OR(rt0.c1)))AND(rt0.c1)))) DESC, (((((rt0.c1 IN ()))AND((~ (v0.c1)))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN rt1 ON CASE WHEN ((NULL)LIKE(rt1.c0)) THEN (((rt1.c1))=((rt0.c4))) END WHERE ((rt0.c3 COLLATE BINARY IN (json_valid(v0.c2)))) ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_GET(rt1.c1))IS((((('.')OR(rt0.c1)))AND(rt0.c1)))) DESC, (((((rt0.c1 IN ()))AND((~ (v0.c1)))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE BINARY IN (json_valid(v0.c2)))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON CASE WHEN ((NULL)LIKE(rt1.c0)) THEN (((rt1.c1))=((rt0.c4))) END ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_GET(rt1.c1))IS((((('.')OR(rt0.c1)))AND(rt0.c1)))) DESC, (((((rt0.c1 IN ()))AND((~ (v0.c1)))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN rt1 ON CASE WHEN ((NULL)LIKE(rt1.c0)) THEN (((rt1.c1))=((rt0.c4))) END WHERE ((rt0.c3 COLLATE BINARY IN (json_valid(v0.c2)))) ORDER BY (~ (NULL)) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_GET(rt1.c1))IS((((('.')OR(rt0.c1)))AND(rt0.c1)))) DESC, (((((rt0.c1 IN ()))AND((~ (v0.c1)))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN rt0 ON (+ (((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN rt1 ON ((((x'') IS TRUE)) IS TRUE) WHERE (CAST(((v0.c0)/(rt0.c0)) AS TEXT)) ORDER BY '⠢*' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)/(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (+ (((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN rt1 ON ((((x'') IS TRUE)) IS TRUE) ORDER BY '⠢*' DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON (+ (((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN rt1 ON ((((x'') IS TRUE)) IS TRUE) WHERE (CAST(((v0.c0)/(rt0.c0)) AS TEXT)) ORDER BY '⠢*' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)/(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (+ (((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN rt1 ON ((((x'') IS TRUE)) IS TRUE) ORDER BY '⠢*' DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON (+ (((rt1.c0)<(rt0.c1)))) LEFT OUTER JOIN rt1 ON ((((x'') IS TRUE)) IS TRUE) WHERE (CAST(((v0.c0)/(rt0.c0)) AS TEXT)) ORDER BY '⠢*' DESC  NULLS FIRST;
