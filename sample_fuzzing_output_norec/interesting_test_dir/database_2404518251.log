-- Time: 2024/06/09 20:20:44
-- Database: database51
-- Database version: 3.40.0
-- seed value: 2404518251
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 1ms;
CREATE TEMP TABLE t1 (c0 INTEGER , c1 REAL , c2 BLOB ); -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(x'', NULL) WHERE (t1.c1 COLLATE BINARY IN ((- (t1.c0)))); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=0.6825124656376821 WHERE ((((t1.c0)AND(t1.c0)))AND(t1.c1)) COLLATE BINARY; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c3)=('aXc~^ં') WHERE ((rt0.c1 COLLATE BINARY)<(rt0.c2 COLLATE BINARY)); -- 0ms;
UPDATE t1 SET (c0)=(x''); -- 0ms;
PRAGMA wal_autocheckpoint = 335068566381781340; -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
CREATE UNIQUE INDEX i34 ON t1(CASE c0 COLLATE BINARY  WHEN (c2 IN (c2, c2)) THEN c1 ELSE ((c2) IS TRUE) END,(c0 IN (c1)) ASC,x'') WHERE ((ABS(c0)) BETWEEN (x'') AND (c2 COLLATE NOCASE)); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('_9*3BzSa'); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1581924299 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=x'' WHERE ((t1.c0 IN (t1.c1)) IN ()); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0, c1)=('Zww_{sP', '-581956990') WHERE (+ (rt0.c2 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
PRAGMA temp.cache_spill; -- 1ms;
PRAGMA temp.cell_size_check; -- 0ms;
ANALYZE; -- 15ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (NULL); -- 6ms;
PRAGMA temp.integrity_check; -- 0ms;
REINDEX BINARY; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA threads; -- 0ms;
DELETE FROM t1 WHERE CAST(((t1.c1) IS TRUE) AS REAL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
CREATE UNIQUE INDEX i16 ON t1(c0 DESC,NULL COLLATE BINARY,(((~ (c2)))||((- (c2)))) COLLATE BINARY ASC) WHERE (((((c1)) NOT BETWEEN ((c2)) AND ((c2))))>=(((x'da1c')IS NOT(c0)))); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c2 TO c36; -- 1ms;
COMMIT; -- 0ms;
PRAGMA main.optimize; -- 0ms;
DROP TABLE IF EXISTS t1; -- 1ms;
UPDATE rt0 SET (c3, c3)=(x'', NULL) WHERE CAST(((rt0.c3) NOTNULL) AS BLOB); -- 0ms;
UPDATE rt0 SET (c1, c1, c3)=(0.1953928903784662, 0.7026365644773532, ''); -- 1ms;
UPDATE rt0 SET (c0, c1, c3)=(NULL, -581956990, 'y.V'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA short_column_names; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=NULL; -- 6ms;
UPDATE OR IGNORE rt0 SET c1='-1521920722' WHERE 'aXc~^ં'; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='' WHERE ((((((((((NULL) NOT BETWEEN (NULL) AND (rt0.c3)))OR(0.13608877670620323)))AND((((rt0.c2, rt0.c1, rt0.c0))<((rt0.c0, '-1581924299', NULL))))))OR(rt0.c2)))OR(rt0.c3)); -- 24ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='' WHERE ((((rt0.c2) IS FALSE))+(((((NULL)AND(rt0.c0)))AND(NULL)))); -- 0ms;
PRAGMA journal_mode = WAL; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1, c3)=(0Xffffffffa549552e, ''); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0.7026365644773532) WHERE (((rt0.c1)) BETWEEN ((-1.581924299E9)) AND ((rt0.c1))); -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
CREATE TABLE t0 (c0 INT ); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 1ms;
PRAGMA temp.journal_size_limit; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('쀵%YtelX'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=('ht'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i28 ON t0(json_object((('-581956990') ISNULL), CAST(c0 AS TEXT), c0, MAX(c0, c0), c0 COLLATE RTRIM, ((c0) NOT BETWEEN (c0) AND (c0))) COLLATE BINARY) WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1521920722' AS INTEGER) COLLATE NOCASE; -- 2ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c1) NOT BETWEEN (CASE WHEN rt0.c3 THEN 0.7026365644773532 END) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE WHEN rt0.c3 THEN 0.7026365644773532 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c1) NOT BETWEEN (CASE WHEN rt0.c3 THEN 0.7026365644773532 END) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (CASE WHEN rt0.c3 THEN 0.7026365644773532 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((vt0.c1) NOT BETWEEN (CASE WHEN rt0.c3 THEN 0.7026365644773532 END) AND (((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID() COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID() COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (x'')))<=((('0.13608877670620323') NOT BETWEEN (x'1390') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c0) AND (x'')))<=((('0.13608877670620323') NOT BETWEEN (x'1390') AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (x'')))<=((('0.13608877670620323') NOT BETWEEN (x'1390') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t0.c0) AND (x'')))<=((('0.13608877670620323') NOT BETWEEN (x'1390') AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((vt0.c0) BETWEEN (t0.c0) AND (x'')))<=((('0.13608877670620323') NOT BETWEEN (x'1390') AND (rt0.c1)))));
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ ((t0.c0 IN (t0.c0)))));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 ELSE 0X77012f9f END)) AND ((((rt0.c1)GLOB(rt0.c3)))))) ORDER BY rt0.c3, CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 ELSE 0X77012f9f END)) AND ((((rt0.c1)GLOB(rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c3, CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 ELSE 0X77012f9f END)) AND ((((rt0.c1)GLOB(rt0.c3)))))) ORDER BY rt0.c3, CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 ELSE 0X77012f9f END)) AND ((((rt0.c1)GLOB(rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY rt0.c3, CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN rt0.c3 ELSE 0X77012f9f END)) AND ((((rt0.c1)GLOB(rt0.c3)))))) ORDER BY rt0.c3, CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (('')) AND (((+ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN (('')) AND (((+ (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (('')) AND (((+ (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN (('')) AND (((+ (rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (('')) AND (((+ (rt0.c3))))));
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('-581956990')))>>(NULLIF(DISTINCT rt0.c3, t0.c0)))) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('-581956990')))>>(NULLIF(DISTINCT rt0.c3, t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('-581956990')))>>(NULLIF(DISTINCT rt0.c3, t0.c0)))) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('-581956990')))>>(NULLIF(DISTINCT rt0.c3, t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('-581956990')))>>(NULLIF(DISTINCT rt0.c3, t0.c0)))) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0, rt0, vt0 WHERE (LTRIM(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))) ORDER BY ((((json_remove(NULL, vt0.c1))AND(UPPER(rt0.c2))))AND(CAST(rt0.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((json_remove(NULL, vt0.c1))AND(UPPER(rt0.c2))))AND(CAST(rt0.c1 AS TEXT))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (LTRIM(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))) ORDER BY ((((json_remove(NULL, vt0.c1))AND(UPPER(rt0.c2))))AND(CAST(rt0.c1 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((json_remove(NULL, vt0.c1))AND(UPPER(rt0.c2))))AND(CAST(rt0.c1 AS TEXT))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (LTRIM(((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))) ORDER BY ((((json_remove(NULL, vt0.c1))AND(UPPER(rt0.c2))))AND(CAST(rt0.c1 AS TEXT))) ASC;
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c3, vt0.c0, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c0)))))>=((x'')))) ORDER BY ((((rt0.c2)*(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3, vt0.c0, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c0)))))>=((x'')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)*(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c3, vt0.c0, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c0)))))>=((x'')))) ORDER BY ((((rt0.c2)*(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3, vt0.c0, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c0)))))>=((x'')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)*(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c3, vt0.c0, rt0.c2))<=((rt0.c0, vt0.c1, rt0.c0)))))>=((x'')))) ORDER BY ((((rt0.c2)*(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((LENGTH(t0.c0) IN ())) ORDER BY CASE WHEN ((((((((((((0.11670614779746669)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR('0.1953928903784662')))AND(t0.c0)) THEN json_array_length(t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.11670614779746669, t0.c0))) THEN ((t0.c0)>>(t0.c0)) WHEN json_array_length(t0.c0, t0.c0) THEN NULL ELSE ((t0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(t0.c0) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((((((0.11670614779746669)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR('0.1953928903784662')))AND(t0.c0)) THEN json_array_length(t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.11670614779746669, t0.c0))) THEN ((t0.c0)>>(t0.c0)) WHEN json_array_length(t0.c0, t0.c0) THEN NULL ELSE ((t0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((LENGTH(t0.c0) IN ())) ORDER BY CASE WHEN ((((((((((((0.11670614779746669)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR('0.1953928903784662')))AND(t0.c0)) THEN json_array_length(t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.11670614779746669, t0.c0))) THEN ((t0.c0)>>(t0.c0)) WHEN json_array_length(t0.c0, t0.c0) THEN NULL ELSE ((t0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(t0.c0) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((((((0.11670614779746669)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR('0.1953928903784662')))AND(t0.c0)) THEN json_array_length(t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.11670614779746669, t0.c0))) THEN ((t0.c0)>>(t0.c0)) WHEN json_array_length(t0.c0, t0.c0) THEN NULL ELSE ((t0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((LENGTH(t0.c0) IN ())) ORDER BY CASE WHEN ((((((((((((0.11670614779746669)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR('0.1953928903784662')))AND(t0.c0)) THEN json_array_length(t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.11670614779746669, t0.c0))) THEN ((t0.c0)>>(t0.c0)) WHEN json_array_length(t0.c0, t0.c0) THEN NULL ELSE ((t0.c0) NOT NULL) END  NULLS FIRST;
SELECT * FROM vt0, rt0, t0 WHERE ((((('	FZ')+(rt0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (HEX(DISTINCT rt0.c1)))) ORDER BY (((rt0.c2 IN ()))OR((rt0.c0 IN ()))) DESC, ((TRIM(DISTINCT vt0.c1, '-1521920722'))>=(rt0.c1 COLLATE NOCASE)), (((t0.c0)) BETWEEN (((vt0.c1 IN ()))) AND ((rt0.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('	FZ')+(rt0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (HEX(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c2 IN ()))OR((rt0.c0 IN ()))) DESC, ((TRIM(DISTINCT vt0.c1, '-1521920722'))>=(rt0.c1 COLLATE NOCASE)), (((t0.c0)) BETWEEN (((vt0.c1 IN ()))) AND ((rt0.c1 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ((((('	FZ')+(rt0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (HEX(DISTINCT rt0.c1)))) ORDER BY (((rt0.c2 IN ()))OR((rt0.c0 IN ()))) DESC, ((TRIM(DISTINCT vt0.c1, '-1521920722'))>=(rt0.c1 COLLATE NOCASE)), (((t0.c0)) BETWEEN (((vt0.c1 IN ()))) AND ((rt0.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('	FZ')+(rt0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (HEX(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c2 IN ()))OR((rt0.c0 IN ()))) DESC, ((TRIM(DISTINCT vt0.c1, '-1521920722'))>=(rt0.c1 COLLATE NOCASE)), (((t0.c0)) BETWEEN (((vt0.c1 IN ()))) AND ((rt0.c1 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ((((('	FZ')+(rt0.c1))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (HEX(DISTINCT rt0.c1)))) ORDER BY (((rt0.c2 IN ()))OR((rt0.c0 IN ()))) DESC, ((TRIM(DISTINCT vt0.c1, '-1521920722'))>=(rt0.c1 COLLATE NOCASE)), (((t0.c0)) BETWEEN (((vt0.c1 IN ()))) AND ((rt0.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (SUBSTR(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (SUBSTR(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (SUBSTR(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((NULL, rt0.c0, rt0.c1, 0xffffffffa549552e, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((rt0.c0)>>(-995675747)), TYPEOF(x''), ((rt0.c3) BETWEEN ('') AND (vt0.c0)), (NOT ('-1179541811')))) AND ((((vt0.c1)>(rt0.c0)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), rt0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, rt0.c0, rt0.c1, 0xffffffffa549552e, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((rt0.c0)>>(-995675747)), TYPEOF(x''), ((rt0.c3) BETWEEN ('') AND (vt0.c0)), (NOT ('-1179541811')))) AND ((((vt0.c1)>(rt0.c0)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((NULL, rt0.c0, rt0.c1, 0xffffffffa549552e, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((rt0.c0)>>(-995675747)), TYPEOF(x''), ((rt0.c3) BETWEEN ('') AND (vt0.c0)), (NOT ('-1179541811')))) AND ((((vt0.c1)>(rt0.c0)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), rt0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, rt0.c0, rt0.c1, 0xffffffffa549552e, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((rt0.c0)>>(-995675747)), TYPEOF(x''), ((rt0.c3) BETWEEN ('') AND (vt0.c0)), (NOT ('-1179541811')))) AND ((((vt0.c1)>(rt0.c0)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((NULL, rt0.c0, rt0.c1, 0xffffffffa549552e, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((rt0.c0)>>(-995675747)), TYPEOF(x''), ((rt0.c3) BETWEEN ('') AND (vt0.c0)), (NOT ('-1179541811')))) AND ((((vt0.c1)>(rt0.c0)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), CAST(t0.c0 AS NUMERIC), CAST(vt0.c1 AS REAL), rt0.c3 COLLATE RTRIM))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((NULL) ISNULL))-(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) INNER JOIN rt0 ON ((NULLIF(DISTINCT vt0.c0, rt0.c3)) NOT BETWEEN ((- (rt0.c3))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) WHERE (x'48c2');
SELECT SUM(count) FROM (SELECT ALL ((x'48c2') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((NULL) ISNULL))-(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) INNER JOIN rt0 ON ((NULLIF(DISTINCT vt0.c0, rt0.c3)) NOT BETWEEN ((- (rt0.c3))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((NULL) ISNULL))-(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) INNER JOIN rt0 ON ((NULLIF(DISTINCT vt0.c0, rt0.c3)) NOT BETWEEN ((- (rt0.c3))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) WHERE (x'48c2');
SELECT SUM(count) FROM (SELECT ALL ((x'48c2') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((NULL) ISNULL))-(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) INNER JOIN rt0 ON ((NULLIF(DISTINCT vt0.c0, rt0.c3)) NOT BETWEEN ((- (rt0.c3))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))<(CAST(vt0.c1 AS REAL))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) WHERE (x'') ORDER BY ((((vt0.c1)/(rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) ORDER BY ((((vt0.c1)/(rt0.c2))) NOTNULL));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) WHERE (x'') ORDER BY ((((vt0.c1)/(rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) ORDER BY ((((vt0.c1)/(rt0.c2))) NOTNULL));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS BLOB) WHERE (x'') ORDER BY ((((vt0.c1)/(rt0.c2))) NOTNULL);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)>>(t0.c0)) THEN ((vt0.c1) NOTNULL) END WHERE ((((vt0.c1)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((((vt0.c1))>=((x'')))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((((vt0.c1))>=((x''))))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)>>(t0.c0)) THEN ((vt0.c1) NOTNULL) END);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)>>(t0.c0)) THEN ((vt0.c1) NOTNULL) END WHERE ((((vt0.c1)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((((vt0.c1))>=((x'')))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((((vt0.c1))>=((x''))))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)>>(t0.c0)) THEN ((vt0.c1) NOTNULL) END);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE WHEN ((vt0.c0)>>(t0.c0)) THEN ((vt0.c1) NOTNULL) END WHERE ((((vt0.c1)) BETWEEN ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((((vt0.c1))>=((x'')))))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1))<((vt0.c0))) IN ())) ORDER BY ((((-1521920722)GLOB(vt0.c0)))<=('' COLLATE RTRIM)) ASC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((-1521920722)GLOB(vt0.c0)))<=('' COLLATE RTRIM)) ASC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1))<((vt0.c0))) IN ())) ORDER BY ((((-1521920722)GLOB(vt0.c0)))<=('' COLLATE RTRIM)) ASC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((-1521920722)GLOB(vt0.c0)))<=('' COLLATE RTRIM)) ASC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1))<((vt0.c0))) IN ())) ORDER BY ((((-1521920722)GLOB(vt0.c0)))<=('' COLLATE RTRIM)) ASC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c0)))*(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0)))*(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c0)))*(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0)))*(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c0)))*(CAST(t0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE ((('8\r') NOTNULL)) ORDER BY (((+ ('1855197171')))%(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('8\r') NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('1855197171')))%(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((('8\r') NOTNULL)) ORDER BY (((+ ('1855197171')))%(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('8\r') NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((+ ('1855197171')))%(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((('8\r') NOTNULL)) ORDER BY (((+ ('1855197171')))%(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ((- (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT * FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (CAST('	kl㆝x' AS INTEGER)) ORDER BY 'OF\rUs9' DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('	kl㆝x' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 'OF\rUs9' DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST('	kl㆝x' AS INTEGER)) ORDER BY 'OF\rUs9' DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('	kl㆝x' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 'OF\rUs9' DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST('	kl㆝x' AS INTEGER)) ORDER BY 'OF\rUs9' DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)|(rt0.c2)) THEN ((rt0.c1)IS(rt0.c0)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)|(rt0.c2)) THEN ((rt0.c1)IS(rt0.c0)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)|(rt0.c2)) THEN ((rt0.c1)IS(rt0.c0)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)|(rt0.c2)) THEN ((rt0.c1)IS(rt0.c0)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)|(rt0.c2)) THEN ((rt0.c1)IS(rt0.c0)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c0)) END);
SELECT * FROM vt0 WHERE (0.6681608602898929 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0.6681608602898929 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.6681608602898929 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0.6681608602898929 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.6681608602898929 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN '101283352' WHEN (('^s')|(vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) ORDER BY (NULL IN ())  NULLS LAST, ((((vt0.c1 COLLATE BINARY)OR((((vt0.c1))==((vt0.c1))))))OR(((((((((vt0.c0)OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND(0.03364221426508962))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE RTRIM  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN '101283352' WHEN (('^s')|(vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ())  NULLS LAST, ((((vt0.c1 COLLATE BINARY)OR((((vt0.c1))=((vt0.c1))))))OR(((((((((vt0.c0)OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND(0.03364221426508962))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN '101283352' WHEN (('^s')|(vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) ORDER BY (NULL IN ())  NULLS LAST, ((((vt0.c1 COLLATE BINARY)OR((((vt0.c1))==((vt0.c1))))))OR(((((((((vt0.c0)OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND(0.03364221426508962))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE RTRIM  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN '101283352' WHEN (('^s')|(vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ())  NULLS LAST, ((((vt0.c1 COLLATE BINARY)OR((((vt0.c1))=((vt0.c1))))))OR(((((((((vt0.c0)OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND(0.03364221426508962))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c1)AND(vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN '101283352' WHEN (('^s')|(vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END) ORDER BY (NULL IN ())  NULLS LAST, ((((vt0.c1 COLLATE BINARY)OR((((vt0.c1))==((vt0.c1))))))OR(((((((((vt0.c0)OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND(0.03364221426508962))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT)) BETWEEN ('9.#Wof2') AND (CASE WHEN 'O࿳ZW-<u' THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY LIKELY(DISTINCT ((t0.c0)<=(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) BETWEEN ('9.#Wof2') AND (CASE WHEN 'O࿳ZW-<u' THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELY(DISTINCT ((t0.c0)<=(t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT)) BETWEEN ('9.#Wof2') AND (CASE WHEN 'O࿳ZW-<u' THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY LIKELY(DISTINCT ((t0.c0)<=(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) BETWEEN ('9.#Wof2') AND (CASE WHEN 'O࿳ZW-<u' THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELY(DISTINCT ((t0.c0)<=(t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT)) BETWEEN ('9.#Wof2') AND (CASE WHEN 'O࿳ZW-<u' THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY LIKELY(DISTINCT ((t0.c0)<=(t0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (LIKE(((rt0.c0) NOTNULL), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)), 'a'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt0.c0) NOTNULL), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)), 'a')) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKE(((rt0.c0) NOTNULL), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)), 'a'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt0.c0) NOTNULL), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)), 'a')) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKE(((rt0.c0) NOTNULL), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)), 'a'));
SELECT * FROM rt0 NOT INDEXED, t0 WHERE (0x13076b5a);
SELECT SUM(count) FROM (SELECT ((0X13076b5a) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0 NOT INDEXED, t0 WHERE (0x13076b5a);
SELECT SUM(count) FROM (SELECT ((0X13076b5a) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0 NOT INDEXED, t0 WHERE (0x13076b5a);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c2)&(json_array(rt0.c1, t0.c0)))) ORDER BY (((vt0.c0)IS NOT('zH\rRwdYeD')) IN (((rt0.c0) NOTNULL), ((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)&(json_array(rt0.c1, t0.c0)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c0)IS NOT('zH\rRwdYeD')) IN (((rt0.c0) NOTNULL), ((rt0.c0) ISNULL))) ASC);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c2)&(json_array(rt0.c1, t0.c0)))) ORDER BY (((vt0.c0)IS NOT('zH\rRwdYeD')) IN (((rt0.c0) NOTNULL), ((rt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)&(json_array(rt0.c1, t0.c0)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c0)IS NOT('zH\rRwdYeD')) IN (((rt0.c0) NOTNULL), ((rt0.c0) ISNULL))) ASC);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c2)&(json_array(rt0.c1, t0.c0)))) ORDER BY (((vt0.c0)IS NOT('zH\rRwdYeD')) IN (((rt0.c0) NOTNULL), ((rt0.c0) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'' COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'' COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'' COLLATE NOCASE AS BLOB));
SELECT ALL * FROM rt0, vt0, t0 WHERE (NULL) ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (NULL) ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (NULL) ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN (vt0.c1, vt0.c1)) END) ORDER BY CAST(LENGTH(vt0.c0) AS REAL), TYPEOF(DISTINCT (vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN (vt0.c1, vt0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(LENGTH(vt0.c0) AS REAL), TYPEOF(DISTINCT (vt0.c1 IN ())));
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN (vt0.c1, vt0.c1)) END) ORDER BY CAST(LENGTH(vt0.c0) AS REAL), TYPEOF(DISTINCT (vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN (vt0.c1, vt0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(LENGTH(vt0.c0) AS REAL), TYPEOF(DISTINCT (vt0.c1 IN ())));
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))  WHEN CAST(t0.c0 AS INTEGER) THEN (t0.c0 IN (vt0.c1, vt0.c1)) END) ORDER BY CAST(LENGTH(vt0.c0) AS REAL), TYPEOF(DISTINCT (vt0.c1 IN ()));
SELECT COUNT(*) FROM rt0 INDEXED BY i28 LEFT OUTER JOIN t0 ON (((((rt0.c1)) NOT BETWEEN ((0.17515712181011323)) AND ((t0.c0)))) NOT NULL) WHERE (((CAST(1.996566431E9 AS TEXT)) IS FALSE)) ORDER BY ((rt0.c2)GLOB(((((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))) DESC  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(1.996566431E9 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0 INDEXED BY i28 LEFT OUTER JOIN t0 ON (((((rt0.c1)) NOT BETWEEN ((0.17515712181011323)) AND ((t0.c0)))) NOT NULL) ORDER BY ((rt0.c2)GLOB(((((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))) DESC  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 INDEXED BY i28 LEFT OUTER JOIN t0 ON (((((rt0.c1)) NOT BETWEEN ((0.17515712181011323)) AND ((t0.c0)))) NOT NULL) WHERE (((CAST(1.996566431E9 AS TEXT)) IS FALSE)) ORDER BY ((rt0.c2)GLOB(((((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))) DESC  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(1.996566431E9 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt0 INDEXED BY i28 LEFT OUTER JOIN t0 ON (((((rt0.c1)) NOT BETWEEN ((0.17515712181011323)) AND ((t0.c0)))) NOT NULL) ORDER BY ((rt0.c2)GLOB(((((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))) DESC  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c1 AS TEXT))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1)|('1996566431')))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c1 AS TEXT))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1)|('1996566431')))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c1 AS TEXT))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1)|('1996566431')))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c1 AS TEXT))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1)|('1996566431')))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c1 AS TEXT))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1)|('1996566431')))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt0.c0))))));
SELECT * FROM rt0, t0, vt0 WHERE (((0xffffffffaaffab37) BETWEEN (((rt0.c2)-(rt0.c3))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))))) ORDER BY ((-1487857927)|(CAST(rt0.c3 AS TEXT)))  NULLS LAST, CASE WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffaaffab37) BETWEEN (((rt0.c2)-(rt0.c3))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((-1487857927)|(CAST(rt0.c3 AS TEXT)))  NULLS LAST, CASE WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE (((0xffffffffaaffab37) BETWEEN (((rt0.c2)-(rt0.c3))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))))) ORDER BY ((-1487857927)|(CAST(rt0.c3 AS TEXT)))  NULLS LAST, CASE WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffaaffab37) BETWEEN (((rt0.c2)-(rt0.c3))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((-1487857927)|(CAST(rt0.c3 AS TEXT)))  NULLS LAST, CASE WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE (((0xffffffffaaffab37) BETWEEN (((rt0.c2)-(rt0.c3))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))))) ORDER BY ((-1487857927)|(CAST(rt0.c3 AS TEXT)))  NULLS LAST, CASE WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON rt0.c0 COLLATE NOCASE WHERE (rt0.c3) ORDER BY (~ (((((((((vt0.c0)AND(t0.c0)))AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c0))))  NULLS LAST, 0xffffffffa1b5c035, (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON rt0.c0 COLLATE NOCASE ORDER BY (~ (((((((((vt0.c0)AND(t0.c0)))AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c0))))  NULLS LAST, 0Xffffffffa1b5c035, (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON rt0.c0 COLLATE NOCASE WHERE (rt0.c3) ORDER BY (~ (((((((((vt0.c0)AND(t0.c0)))AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c0))))  NULLS LAST, 0xffffffffa1b5c035, (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t0 ON rt0.c0 COLLATE NOCASE ORDER BY (~ (((((((((vt0.c0)AND(t0.c0)))AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c0))))  NULLS LAST, 0Xffffffffa1b5c035, (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN t0 ON rt0.c0 COLLATE NOCASE WHERE (rt0.c3) ORDER BY (~ (((((((((vt0.c0)AND(t0.c0)))AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c0))))  NULLS LAST, 0xffffffffa1b5c035, (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((rt0.c1 IN ()) IN (x''))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) ISNULL) ASC, (((((t0.c0))>=((rt0.c3))))<=((NOT ('-639899049')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN (x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) ISNULL) ASC, (((((t0.c0))>=((rt0.c3))))<=((NOT ('-639899049')))) ASC);
SELECT * FROM rt0, t0 WHERE (((rt0.c1 IN ()) IN (x''))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) ISNULL) ASC, (((((t0.c0))>=((rt0.c3))))<=((NOT ('-639899049')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN (x''))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) ISNULL) ASC, (((((t0.c0))>=((rt0.c3))))<=((NOT ('-639899049')))) ASC);
SELECT * FROM rt0, t0 WHERE (((rt0.c1 IN ()) IN (x''))) ORDER BY ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) ISNULL) ASC, (((((t0.c0))>=((rt0.c3))))<=((NOT ('-639899049')))) ASC;
SELECT ALL * FROM t0, vt0 WHERE (((x'')|(((vt0.c1)=(vt0.c0))))) ORDER BY ((json_extract(vt0.c0, vt0.c0)) BETWEEN (((0Xffffffffb00ac9b6)-(vt0.c0))) AND ((vt0.c1 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(((vt0.c1)=(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((json_extract(vt0.c0, vt0.c0)) BETWEEN (((0xffffffffb00ac9b6)-(vt0.c0))) AND ((vt0.c1 IN (vt0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (((x'')|(((vt0.c1)=(vt0.c0))))) ORDER BY ((json_extract(vt0.c0, vt0.c0)) BETWEEN (((0Xffffffffb00ac9b6)-(vt0.c0))) AND ((vt0.c1 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(((vt0.c1)=(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((json_extract(vt0.c0, vt0.c0)) BETWEEN (((0xffffffffb00ac9b6)-(vt0.c0))) AND ((vt0.c1 IN (vt0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (((x'')|(((vt0.c1)=(vt0.c0))))) ORDER BY ((json_extract(vt0.c0, vt0.c0)) BETWEEN (((0Xffffffffb00ac9b6)-(vt0.c0))) AND ((vt0.c1 IN (vt0.c1))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM vt0, t0 INDEXED BY i28, rt0 WHERE ((((((vt0.c0)IS NOT(NULL))))<((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)))))) ORDER BY (((t0.c0)>>(rt0.c0)) IN (TRIM(rt0.c1))), (UNLIKELY(DISTINCT rt0.c0) IN ()) DESC, json_remove(((rt0.c3)IS(rt0.c3)), rt0.c3 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS NOT(NULL))))<((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i28, rt0 ORDER BY (((t0.c0)>>(rt0.c0)) IN (TRIM(rt0.c1))), (UNLIKELY(DISTINCT rt0.c0) IN ()) DESC, json_remove(((rt0.c3)IS(rt0.c3)), rt0.c3 COLLATE NOCASE) DESC);
SELECT ALL * FROM vt0, t0 INDEXED BY i28, rt0 WHERE ((((((vt0.c0)IS NOT(NULL))))<((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)))))) ORDER BY (((t0.c0)>>(rt0.c0)) IN (TRIM(rt0.c1))), (UNLIKELY(DISTINCT rt0.c0) IN ()) DESC, json_remove(((rt0.c3)IS(rt0.c3)), rt0.c3 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS NOT(NULL))))<((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i28, rt0 ORDER BY (((t0.c0)>>(rt0.c0)) IN (TRIM(rt0.c1))), (UNLIKELY(DISTINCT rt0.c0) IN ()) DESC, json_remove(((rt0.c3)IS(rt0.c3)), rt0.c3 COLLATE NOCASE) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c3 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c3 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c3 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM, ((((x'9d7b') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) ASC  NULLS FIRST, ((((((t0.c0))==((t0.c0)))))<((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM, ((((x'9d7b') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) ASC  NULLS FIRST, ((((((t0.c0))==((t0.c0)))))<((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM, ((((x'9d7b') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) ASC  NULLS FIRST, ((((((t0.c0))==((t0.c0)))))<((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM, ((((x'9d7b') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) ASC  NULLS FIRST, ((((((t0.c0))==((t0.c0)))))<((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM, ((((x'9d7b') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) ASC  NULLS FIRST, ((((((t0.c0))==((t0.c0)))))<((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE (- (rt0.c2))  WHEN ((rt0.c2)!=(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('aDq') AND (rt0.c3)) ELSE x'' END WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) ISNULL)) ORDER BY (((((vt0.c1))<=((vt0.c1)))) BETWEEN (((rt0.c2)IS(rt0.c2))) AND ((rt0.c0 IN ()))) DESC  NULLS LAST, (('-1341470282')IS(((rt0.c0)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE (- (rt0.c2))  WHEN ((rt0.c2)!=(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('aDq') AND (rt0.c3)) ELSE x'' END ORDER BY (((((vt0.c1))<=((vt0.c1)))) BETWEEN (((rt0.c2)IS(rt0.c2))) AND ((rt0.c0 IN ()))) DESC  NULLS LAST, (('-1341470282')IS(((rt0.c0)%(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE (- (rt0.c2))  WHEN ((rt0.c2)!=(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('aDq') AND (rt0.c3)) ELSE x'' END WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) ISNULL)) ORDER BY (((((vt0.c1))<=((vt0.c1)))) BETWEEN (((rt0.c2)IS(rt0.c2))) AND ((rt0.c0 IN ()))) DESC  NULLS LAST, (('-1341470282')IS(((rt0.c0)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE (- (rt0.c2))  WHEN ((rt0.c2)!=(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('aDq') AND (rt0.c3)) ELSE x'' END ORDER BY (((((vt0.c1))<=((vt0.c1)))) BETWEEN (((rt0.c2)IS(rt0.c2))) AND ((rt0.c0 IN ()))) DESC  NULLS LAST, (('-1341470282')IS(((rt0.c0)%(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE (- (rt0.c2))  WHEN ((rt0.c2)!=(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN ('aDq') AND (rt0.c3)) ELSE x'' END WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0))) ISNULL)) ORDER BY (((((vt0.c1))<=((vt0.c1)))) BETWEEN (((rt0.c2)IS(rt0.c2))) AND ((rt0.c0 IN ()))) DESC  NULLS LAST, (('-1341470282')IS(((rt0.c0)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c3)))/(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN -1.487857927E9 THEN rt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3)))/(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN -1.487857927E9 THEN rt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c3)))/(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN -1.487857927E9 THEN rt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3)))/(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN -1.487857927E9 THEN rt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (rt0.c3)))/(CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN -1.487857927E9 THEN rt0.c0 ELSE NULL END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((- (rt0.c2)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((rt0.c0)>=(rt0.c0)))AND(NULLIF(rt0.c2, rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>=(rt0.c0)))AND(NULLIF(rt0.c2, rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((rt0.c0)>=(rt0.c0)))AND(NULLIF(rt0.c2, rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>=(rt0.c0)))AND(NULLIF(rt0.c2, rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((rt0.c0)>=(rt0.c0)))AND(NULLIF(rt0.c2, rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) ORDER BY CAST(x'' AS TEXT) ASC  NULLS LAST, UNLIKELY(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))  NULLS LAST;
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE WHERE (((((((rt0.c2)AND(t0.c0)))OR(0.4772083407533544))) BETWEEN (((rt0.c2)||(t0.c0))) AND (vt0.c1))) ORDER BY (((t0.c0 IN ()))>(((x'1c4ccd4a') NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c0)))OR(0.4772083407533544))) BETWEEN (((rt0.c2)||(t0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE ORDER BY (((t0.c0 IN ()))>(((x'1c4ccd4a') NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE WHERE (((((((rt0.c2)AND(t0.c0)))OR(0.4772083407533544))) BETWEEN (((rt0.c2)||(t0.c0))) AND (vt0.c1))) ORDER BY (((t0.c0 IN ()))>(((x'1c4ccd4a') NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c0)))OR(0.4772083407533544))) BETWEEN (((rt0.c2)||(t0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE ORDER BY (((t0.c0 IN ()))>(((x'1c4ccd4a') NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)) COLLATE NOCASE WHERE (((((((rt0.c2)AND(t0.c0)))OR(0.4772083407533544))) BETWEEN (((rt0.c2)||(t0.c0))) AND (vt0.c1))) ORDER BY (((t0.c0 IN ()))>(((x'1c4ccd4a') NOT BETWEEN (rt0.c3) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY (~ (vt0.c0)) COLLATE NOCASE, json_array_length((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (~ (vt0.c0)) COLLATE NOCASE, json_array_length((~ (t0.c0))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY (~ (vt0.c0)) COLLATE NOCASE, json_array_length((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (~ (vt0.c0)) COLLATE NOCASE, json_array_length((~ (t0.c0))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ())) ORDER BY (~ (vt0.c0)) COLLATE NOCASE, json_array_length((~ (t0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((((rt0.c3)OR(0.47873734508999366)))AND(rt0.c0)))IS NOT(((rt0.c0)%(rt0.c1)))) ASC  NULLS FIRST, ((rt0.c2) IS TRUE) COLLATE NOCASE, ((rt0.c2) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(0.47873734508999366)))AND(rt0.c0)))IS NOT(((rt0.c0)%(rt0.c1)))) ASC  NULLS FIRST, ((rt0.c2) IS TRUE) COLLATE NOCASE, ((rt0.c2) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((((rt0.c3)OR(0.47873734508999366)))AND(rt0.c0)))IS NOT(((rt0.c0)%(rt0.c1)))) ASC  NULLS FIRST, ((rt0.c2) IS TRUE) COLLATE NOCASE, ((rt0.c2) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(0.47873734508999366)))AND(rt0.c0)))IS NOT(((rt0.c0)%(rt0.c1)))) ASC  NULLS FIRST, ((rt0.c2) IS TRUE) COLLATE NOCASE, ((rt0.c2) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((((rt0.c3)OR(0.47873734508999366)))AND(rt0.c0)))IS NOT(((rt0.c0)%(rt0.c1)))) ASC  NULLS FIRST, ((rt0.c2) IS TRUE) COLLATE NOCASE, ((rt0.c2) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) WHERE ((~ ('101283352')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ ('101283352')) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) WHERE ((~ ('101283352')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ ('101283352')) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) WHERE ((~ ('101283352')) COLLATE NOCASE);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON 0.19896345507016255 COLLATE RTRIM WHERE ((LTRIM(0.15997893598140778, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(0.15997893598140778, vt0.c0) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON 0.19896345507016255 COLLATE RTRIM);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON 0.19896345507016255 COLLATE RTRIM WHERE ((LTRIM(0.15997893598140778, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(0.15997893598140778, vt0.c0) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON 0.19896345507016255 COLLATE RTRIM);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON 0.19896345507016255 COLLATE RTRIM WHERE ((LTRIM(0.15997893598140778, vt0.c0) IN ()));
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c1) NOT NULL) THEN '0.15997893598140778' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c1) NOT NULL) THEN '0.15997893598140778' END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c1) NOT NULL) THEN '0.15997893598140778' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c1) NOT NULL) THEN '0.15997893598140778' END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c1) NOT NULL) THEN '0.15997893598140778' END);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))IS(rt0.c3 COLLATE RTRIM))) ORDER BY ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))IS(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2))) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))IS(rt0.c3 COLLATE RTRIM))) ORDER BY ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))IS(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2))) IS TRUE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))IS(rt0.c3 COLLATE RTRIM))) ORDER BY ((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2))) IS TRUE)  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (LTRIM((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))));
SELECT SUM(count) FROM (SELECT ((LTRIM((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LTRIM((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))));
SELECT SUM(count) FROM (SELECT ((LTRIM((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LTRIM((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(rt0.c3)))IS NOT((~ (rt0.c3))))) ORDER BY (((t0.c0)%(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c3)))IS NOT((~ (rt0.c3))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c0)%(rt0.c3)) IN ()));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(rt0.c3)))IS NOT((~ (rt0.c3))))) ORDER BY (((t0.c0)%(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c3)))IS NOT((~ (rt0.c3))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((t0.c0)%(rt0.c3)) IN ()));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(rt0.c3)))IS NOT((~ (rt0.c3))))) ORDER BY (((t0.c0)%(rt0.c3)) IN ());
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c1)GLOB(t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)>=(((vt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c1)GLOB(t0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c0 COLLATE RTRIM)>=(((vt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c1)GLOB(t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)>=(((vt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c1)GLOB(t0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c0 COLLATE RTRIM)>=(((vt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((TRIM(DISTINCT vt0.c1, vt0.c1))!=(((vt0.c1)GLOB(t0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)>=(((vt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ ((+ (vt0.c0))))) ORDER BY ((((((vt0.c0)>>(rt0.c2)))AND(t0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0 ORDER BY ((((((vt0.c0)>>(rt0.c2)))AND(t0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ ((+ (vt0.c0))))) ORDER BY ((((((vt0.c0)>>(rt0.c2)))AND(t0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0 ORDER BY ((((((vt0.c0)>>(rt0.c2)))AND(t0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ ((+ (vt0.c0))))) ORDER BY ((((((vt0.c0)>>(rt0.c2)))AND(t0.c0 COLLATE NOCASE)))OR(CASE WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END));
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CHAR(vt0.c1))OR(((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CHAR(vt0.c1))OR(((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CHAR(vt0.c1))OR(((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CHAR(vt0.c1))OR(((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CHAR(vt0.c1))OR(((t0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))))OR((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) NOTNULL)) NOTNULL)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) NOTNULL)) NOTNULL)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) NOTNULL)) NOTNULL)) ORDER BY rt0.c0 ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY CASE WHEN (~ ('')) THEN '710323751' WHEN ((t0.c0)=(vt0.c0)) THEN CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY CASE WHEN (~ ('')) THEN '710323751' WHEN ((t0.c0)=(vt0.c0)) THEN CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY CASE WHEN (~ ('')) THEN '710323751' WHEN ((t0.c0)=(vt0.c0)) THEN CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED ORDER BY CASE WHEN (~ ('')) THEN '710323751' WHEN ((t0.c0)=(vt0.c0)) THEN CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ())) ORDER BY CASE WHEN (~ ('')) THEN '710323751' WHEN ((t0.c0)=(vt0.c0)) THEN CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c3) NOTNULL))AND(((rt0.c3)*(rt0.c3)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))AND(((rt0.c3)*(rt0.c3)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c3) NOTNULL))AND(((rt0.c3)*(rt0.c3)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))AND(((rt0.c3)*(rt0.c3)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c3) NOTNULL))AND(((rt0.c3)*(rt0.c3)))))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) ORDER BY (rt0.c1 COLLATE NOCASE IN ()) DESC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(0.5770291820139781 AS BLOB)) BETWEEN (vt0.c1) AND (((vt0.c0) IS TRUE))) WHERE ('-1828269657') ORDER BY ((0.5699750650684463 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('-1828269657') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(0.5770291820139781 AS BLOB)) BETWEEN (vt0.c1) AND (((vt0.c0) IS TRUE))) ORDER BY ((0.5699750650684463 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((- (vt0.c1)))) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(0.5770291820139781 AS BLOB)) BETWEEN (vt0.c1) AND (((vt0.c0) IS TRUE))) WHERE ('-1828269657') ORDER BY ((0.5699750650684463 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('-1828269657') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(0.5770291820139781 AS BLOB)) BETWEEN (vt0.c1) AND (((vt0.c0) IS TRUE))) ORDER BY ((0.5699750650684463 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((- (vt0.c1)))) ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(0.5770291820139781 AS BLOB)) BETWEEN (vt0.c1) AND (((vt0.c0) IS TRUE))) WHERE ('-1828269657') ORDER BY ((0.5699750650684463 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((- (vt0.c1)))) ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) NOT NULL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) NOT NULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) NOT NULL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) NOT NULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((NULL) NOT NULL) WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))<=(((vt0.c1)<(vt0.c0))))) ORDER BY (vt0.c1 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC))<=(((vt0.c1)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE NOCASE IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))<=(((vt0.c1)<(vt0.c0))))) ORDER BY (vt0.c1 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC))<=(((vt0.c1)<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE NOCASE IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))<=(((vt0.c1)<(vt0.c0))))) ORDER BY (vt0.c1 COLLATE NOCASE IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))=(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c2)))==(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))=(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c2)))==(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))=(rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (IFNULL(rt0.c0 COLLATE BINARY, (((t0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c0 COLLATE BINARY, (((t0.c0))<=((rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (IFNULL(rt0.c0 COLLATE BINARY, (((t0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((IFNULL(rt0.c0 COLLATE BINARY, (((t0.c0))<=((rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (IFNULL(rt0.c0 COLLATE BINARY, (((t0.c0))<=((rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((('1996566431') NOT BETWEEN ('') AND (0.7117455204401462)))AND(t0.c0)))AND((+ (t0.c0)))) WHERE ((((vt0.c1 IN (vt0.c1))) NOT NULL)) ORDER BY ((((vt0.c1)<(t0.c0))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((('1996566431') NOT BETWEEN ('') AND (0.7117455204401462)))AND(t0.c0)))AND((+ (t0.c0)))) ORDER BY ((((vt0.c1)<(t0.c0))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND ((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((('1996566431') NOT BETWEEN ('') AND (0.7117455204401462)))AND(t0.c0)))AND((+ (t0.c0)))) WHERE ((((vt0.c1 IN (vt0.c1))) NOT NULL)) ORDER BY ((((vt0.c1)<(t0.c0))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((('1996566431') NOT BETWEEN ('') AND (0.7117455204401462)))AND(t0.c0)))AND((+ (t0.c0)))) ORDER BY ((((vt0.c1)<(t0.c0))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND ((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((((('1996566431') NOT BETWEEN ('') AND (0.7117455204401462)))AND(t0.c0)))AND((+ (t0.c0)))) WHERE ((((vt0.c1 IN (vt0.c1))) NOT NULL)) ORDER BY ((((vt0.c1)<(t0.c0))) NOT BETWEEN (((vt0.c1) IS TRUE)) AND ((t0.c0 IN ()))) ASC;
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c1 AS INTEGER))OR(CAST(vt0.c0 AS INTEGER))))OR(((0.11670614779746669)GLOB(vt0.c1)))))OR((+ (vt0.c0)))))OR(((vt0.c1)<<(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c1 AS INTEGER))OR(CAST(vt0.c0 AS INTEGER))))OR(((0.11670614779746669)GLOB(vt0.c1)))))OR((+ (vt0.c0)))))OR(((vt0.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS FALSE));
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c1 AS INTEGER))OR(CAST(vt0.c0 AS INTEGER))))OR(((0.11670614779746669)GLOB(vt0.c1)))))OR((+ (vt0.c0)))))OR(((vt0.c1)<<(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c1 AS INTEGER))OR(CAST(vt0.c0 AS INTEGER))))OR(((0.11670614779746669)GLOB(vt0.c1)))))OR((+ (vt0.c0)))))OR(((vt0.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS FALSE));
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c1 AS INTEGER))OR(CAST(vt0.c0 AS INTEGER))))OR(((0.11670614779746669)GLOB(vt0.c1)))))OR((+ (vt0.c0)))))OR(((vt0.c1)<<(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (TIME(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)), vt0.c1, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TIME(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)), vt0.c1, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (TIME(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)), vt0.c1, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TIME(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)), vt0.c1, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (TIME(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)), vt0.c1, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (t0.c0) AND (STRFTIME(t0.c0, x'', t0.c0, t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (t0.c0) AND (STRFTIME(t0.c0, x'', t0.c0, t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (t0.c0) AND (STRFTIME(t0.c0, x'', t0.c0, t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (t0.c0) AND (STRFTIME(t0.c0, x'', t0.c0, t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (t0.c0) AND (STRFTIME(t0.c0, x'', t0.c0, t0.c0, t0.c0))));
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON (((CAST(rt0.c0 AS TEXT), ((('-1341470282')) BETWEEN ((rt0.c1)) AND ((vt0.c0))), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((t0.c0)AND(x'')))OR(t0.c0)), CASE WHEN t0.c0 THEN vt0.c1 END, (rt0.c3 IN ())))) WHERE (((((rt0.c3)>=(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>=(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON (((CAST(rt0.c0 AS TEXT), ((('-1341470282')) BETWEEN ((rt0.c1)) AND ((vt0.c0))), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((t0.c0)AND(x'')))OR(t0.c0)), CASE WHEN t0.c0 THEN vt0.c1 END, (rt0.c3 IN ())))));
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON (((CAST(rt0.c0 AS TEXT), ((('-1341470282')) BETWEEN ((rt0.c1)) AND ((vt0.c0))), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((t0.c0)AND(x'')))OR(t0.c0)), CASE WHEN t0.c0 THEN vt0.c1 END, (rt0.c3 IN ())))) WHERE (((((rt0.c3)>=(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>=(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON (((CAST(rt0.c0 AS TEXT), ((('-1341470282')) BETWEEN ((rt0.c1)) AND ((vt0.c0))), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((t0.c0)AND(x'')))OR(t0.c0)), CASE WHEN t0.c0 THEN vt0.c1 END, (rt0.c3 IN ())))));
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON (((CAST(rt0.c0 AS TEXT), ((('-1341470282')) BETWEEN ((rt0.c1)) AND ((vt0.c0))), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))))>((((((t0.c0)AND(x'')))OR(t0.c0)), CASE WHEN t0.c0 THEN vt0.c1 END, (rt0.c3 IN ())))) WHERE (((((rt0.c3)>=(rt0.c3))) IS TRUE));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (((t0.c0)GLOB(vt0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN NULL END)GLOB(((t0.c0)<<(rt0.c1)))) WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c0)GLOB(vt0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN NULL END)GLOB(((t0.c0)<<(rt0.c1)))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (((t0.c0)GLOB(vt0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN NULL END)GLOB(((t0.c0)<<(rt0.c1)))) WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c0)GLOB(vt0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN NULL END)GLOB(((t0.c0)<<(rt0.c1)))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (((t0.c0)GLOB(vt0.c1)) IN ()) FULL OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN NULL END)GLOB(((t0.c0)<<(rt0.c1)))) WHERE ((+ (vt0.c1)));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE 0xffffffff84b89ac0  WHEN TYPEOF(DISTINCT vt0.c0) THEN CASE WHEN rt0.c2 THEN 0.1953928903784662 END ELSE ((rt0.c0)IS NOT(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xffffffff84b89ac0  WHEN TYPEOF(DISTINCT vt0.c0) THEN CASE WHEN rt0.c2 THEN 0.1953928903784662 END ELSE ((rt0.c0)IS NOT(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE 0xffffffff84b89ac0  WHEN TYPEOF(DISTINCT vt0.c0) THEN CASE WHEN rt0.c2 THEN 0.1953928903784662 END ELSE ((rt0.c0)IS NOT(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0Xffffffff84b89ac0  WHEN TYPEOF(DISTINCT vt0.c0) THEN CASE WHEN rt0.c2 THEN 0.1953928903784662 END ELSE ((rt0.c0)IS NOT(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE 0xffffffff84b89ac0  WHEN TYPEOF(DISTINCT vt0.c0) THEN CASE WHEN rt0.c2 THEN 0.1953928903784662 END ELSE ((rt0.c0)IS NOT(vt0.c0)) END);
SELECT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY ((CAST(NULL AS BLOB)) NOT BETWEEN (rt0.c1) AND ((+ (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS BLOB)) NOT BETWEEN (rt0.c1) AND ((+ (rt0.c3))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY ((CAST(NULL AS BLOB)) NOT BETWEEN (rt0.c1) AND ((+ (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS BLOB)) NOT BETWEEN (rt0.c1) AND ((+ (rt0.c3))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (LIKELY(DISTINCT rt0.c1)) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY ((CAST(NULL AS BLOB)) NOT BETWEEN (rt0.c1) AND ((+ (rt0.c3))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0)))GLOB(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c0)))GLOB(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0)))GLOB(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c0)))GLOB(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<(t0.c0)))GLOB(t0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((0.1953928903784662 COLLATE NOCASE)AND(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((0.1953928903784662 COLLATE NOCASE)AND(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.1953928903784662 COLLATE NOCASE)AND(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((0.1953928903784662 COLLATE NOCASE)AND(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.1953928903784662 COLLATE NOCASE)AND(rt0.c3)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (('')AND(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (('')AND(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (('')AND(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (('')AND(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c1))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (('')AND(vt0.c0)) END  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (CAST((((t0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c3)) AND (('', rt0.c1, t0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c3)) AND (('', rt0.c1, t0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST((((t0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c3)) AND (('', rt0.c1, t0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c3)) AND (('', rt0.c1, t0.c0))) AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST((((t0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, x'', rt0.c3)) AND (('', rt0.c1, t0.c0))) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((((NULL)OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) DESC, TYPEOF(CAST(vt0.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) DESC, TYPEOF(CAST(vt0.c0 AS NUMERIC))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((NULL)OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) DESC, TYPEOF(CAST(vt0.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) DESC, TYPEOF(CAST(vt0.c0 AS NUMERIC))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((NULL)OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c1)) BETWEEN ((CASE WHEN x'' THEN vt0.c0 END)) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) DESC, TYPEOF(CAST(vt0.c0 AS NUMERIC))  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE ((((('-581956990') NOT BETWEEN (rt0.c1) AND (rt0.c1)))IS((- (t0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN 0.9774250740202551 COLLATE NOCASE WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c0 IN (0.7026365644773532, rt0.c2)) WHEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(vt0.c0)) END DESC, (~ (((rt0.c2)|(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-581956990') NOT BETWEEN (rt0.c1) AND (rt0.c1)))IS((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN 0.9774250740202551 COLLATE NOCASE WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c0 IN (0.7026365644773532, rt0.c2)) WHEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(vt0.c0)) END DESC, (~ (((rt0.c2)|(t0.c0))))  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE ((((('-581956990') NOT BETWEEN (rt0.c1) AND (rt0.c1)))IS((- (t0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN 0.9774250740202551 COLLATE NOCASE WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c0 IN (0.7026365644773532, rt0.c2)) WHEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(vt0.c0)) END DESC, (~ (((rt0.c2)|(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-581956990') NOT BETWEEN (rt0.c1) AND (rt0.c1)))IS((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN 0.9774250740202551 COLLATE NOCASE WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c0 IN (0.7026365644773532, rt0.c2)) WHEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(vt0.c0)) END DESC, (~ (((rt0.c2)|(t0.c0))))  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE ((((('-581956990') NOT BETWEEN (rt0.c1) AND (rt0.c1)))IS((- (t0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN 0.9774250740202551 COLLATE NOCASE WHEN rt0.c2 COLLATE NOCASE THEN (rt0.c0 IN (0.7026365644773532, rt0.c2)) WHEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c2)) THEN ((rt0.c2)GLOB(vt0.c0)) END DESC, (~ (((rt0.c2)|(t0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((((rt0.c1, rt0.c3, t0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, t0.c0, vt0.c1))))&(CAST(rt0.c1 AS BLOB)))) ORDER BY (('') BETWEEN (((rt0.c2)>>(vt0.c0))) AND ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, t0.c0)) AND ((vt0.c1, vt0.c1, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c3, t0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, t0.c0, vt0.c1))))&(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('') BETWEEN (((rt0.c2)>>(vt0.c0))) AND ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, t0.c0)) AND ((vt0.c1, vt0.c1, rt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((((rt0.c1, rt0.c3, t0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, t0.c0, vt0.c1))))&(CAST(rt0.c1 AS BLOB)))) ORDER BY (('') BETWEEN (((rt0.c2)>>(vt0.c0))) AND ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, t0.c0)) AND ((vt0.c1, vt0.c1, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c3, t0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, t0.c0, vt0.c1))))&(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('') BETWEEN (((rt0.c2)>>(vt0.c0))) AND ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, t0.c0)) AND ((vt0.c1, vt0.c1, rt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((((rt0.c1, rt0.c3, t0.c0)) BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, t0.c0, vt0.c1))))&(CAST(rt0.c1 AS BLOB)))) ORDER BY (('') BETWEEN (((rt0.c2)>>(vt0.c0))) AND ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, t0.c0)) AND ((vt0.c1, vt0.c1, rt0.c1))))) DESC;
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY (+ (((-581956990) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((-581956990) NOTNULL)))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY (+ (((-581956990) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((-581956990) NOTNULL)))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY (+ (((-581956990) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY CAST((- (rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c2)) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY CAST((- (rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c2)) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) ORDER BY CAST((- (rt0.c2)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((rt0.c2))<=((rt0.c1))) ELSE ((rt0.c2)|(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN (((rt0.c2))<=((rt0.c1))) ELSE ((rt0.c2)|(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((rt0.c2))<=((rt0.c1))) ELSE ((rt0.c2)|(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN (((rt0.c2))<=((rt0.c1))) ELSE ((rt0.c2)|(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN (((rt0.c2))<=((rt0.c1))) ELSE ((rt0.c2)|(rt0.c3)) END);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (((t0.c0))<=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)AND(t0.c0)), t0.c0 COLLATE RTRIM, LAST_INSERT_ROWID())) AND ((((((0.1953928903784662)AND(t0.c0)))AND(0.4377588285620758)), (t0.c0 IN (t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'4f1f')))AND(t0.c0))))) ASC, TRIM(CAST(t0.c0 AS REAL), ((((t0.c0)OR('')))AND(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN (((t0.c0))<=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)AND(t0.c0)), t0.c0 COLLATE RTRIM, LAST_INSERT_ROWID())) AND ((((((0.1953928903784662)AND(t0.c0)))AND(0.4377588285620758)), (t0.c0 IN (t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'4f1f')))AND(t0.c0))))) ASC, TRIM(CAST(t0.c0 AS REAL), ((((t0.c0)OR('')))AND(t0.c0))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (((t0.c0))<=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)AND(t0.c0)), t0.c0 COLLATE RTRIM, LAST_INSERT_ROWID())) AND ((((((0.1953928903784662)AND(t0.c0)))AND(0.4377588285620758)), (t0.c0 IN (t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'4f1f')))AND(t0.c0))))) ASC, TRIM(CAST(t0.c0 AS REAL), ((((t0.c0)OR('')))AND(t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN (((t0.c0))<=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)AND(t0.c0)), t0.c0 COLLATE RTRIM, LAST_INSERT_ROWID())) AND ((((((0.1953928903784662)AND(t0.c0)))AND(0.4377588285620758)), (t0.c0 IN (t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'4f1f')))AND(t0.c0))))) ASC, TRIM(CAST(t0.c0 AS REAL), ((((t0.c0)OR('')))AND(t0.c0))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN (((t0.c0))<=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)AND(t0.c0)), t0.c0 COLLATE RTRIM, LAST_INSERT_ROWID())) AND ((((((0.1953928903784662)AND(t0.c0)))AND(0.4377588285620758)), (t0.c0 IN (t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'4f1f')))AND(t0.c0))))) ASC, TRIM(CAST(t0.c0 AS REAL), ((((t0.c0)OR('')))AND(t0.c0))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((0Xffffffffd9dbea57 COLLATE BINARY)<<(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffd9dbea57 COLLATE BINARY)<<(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0Xffffffffd9dbea57 COLLATE BINARY)<<(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffd9dbea57 COLLATE BINARY)<<(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0Xffffffffd9dbea57 COLLATE BINARY)<<(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((TRIM(rt0.c0, rt0.c2))LIKE(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0, rt0.c2))LIKE(vt0.c1))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON rt0.c1);
SELECT ALL * FROM t0, vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((TRIM(rt0.c0, rt0.c2))LIKE(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c0, rt0.c2))LIKE(vt0.c1))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON rt0.c1);
SELECT ALL * FROM t0, vt0 CROSS JOIN rt0 ON rt0.c1 WHERE (((TRIM(rt0.c0, rt0.c2))LIKE(vt0.c1)));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c0, rt0.c2, rt0.c0))>=((t0.c0, rt0.c0, rt0.c2))) COLLATE RTRIM) ORDER BY json_array_length(CAST(vt0.c0 AS INTEGER), (((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c2, rt0.c0))>=((t0.c0, rt0.c0, rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY json_array_length(CAST(vt0.c0 AS INTEGER), (((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c0, rt0.c2, rt0.c0))>=((t0.c0, rt0.c0, rt0.c2))) COLLATE RTRIM) ORDER BY json_array_length(CAST(vt0.c0 AS INTEGER), (((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c2, rt0.c0))>=((t0.c0, rt0.c0, rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY json_array_length(CAST(vt0.c0 AS INTEGER), (((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((vt0.c0, rt0.c2, rt0.c0))>=((t0.c0, rt0.c0, rt0.c2))) COLLATE RTRIM) ORDER BY json_array_length(CAST(vt0.c0 AS INTEGER), (((rt0.c3, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((((((((((((((~ (rt0.c2)))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c0)))))OR((- (vt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c2) NOTNULL))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (x'c647')))))OR(((x'')&(vt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND((rt0.c2 IN ()))) WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((- (rt0.c2)), (((vt0.c0, rt0.c3, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))), ((vt0.c1) IS TRUE)))<=(((- (rt0.c2)), ((rt0.c0)=(rt0.c0)), (rt0.c2 IN ())))), ((- (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((((((((((((((~ (rt0.c2)))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c0)))))OR((- (vt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c2) NOTNULL))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (x'c647')))))OR(((x'')&(vt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND((rt0.c2 IN ()))) ORDER BY ((((- (rt0.c2)), (((vt0.c0, rt0.c3, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))), ((vt0.c1) IS TRUE)))<=(((- (rt0.c2)), ((rt0.c0)=(rt0.c0)), (rt0.c2 IN ())))), ((- (rt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((((((((((((((~ (rt0.c2)))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c0)))))OR((- (vt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c2) NOTNULL))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (x'c647')))))OR(((x'')&(vt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND((rt0.c2 IN ()))) WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((- (rt0.c2)), (((vt0.c0, rt0.c3, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))), ((vt0.c1) IS TRUE)))<=(((- (rt0.c2)), ((rt0.c0)=(rt0.c0)), (rt0.c2 IN ())))), ((- (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((((((((((((((~ (rt0.c2)))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c0)))))OR((- (vt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c2) NOTNULL))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (x'c647')))))OR(((x'')&(vt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND((rt0.c2 IN ()))) ORDER BY ((((- (rt0.c2)), (((vt0.c0, rt0.c3, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))), ((vt0.c1) IS TRUE)))<=(((- (rt0.c2)), ((rt0.c0)=(rt0.c0)), (rt0.c2 IN ())))), ((- (rt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((((((((((((((~ (rt0.c2)))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c0)))))OR((- (vt0.c1)))))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c2) NOTNULL))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (x'c647')))))OR(((x'')&(vt0.c1)))))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))))AND((rt0.c2 IN ()))) WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((- (rt0.c2)), (((vt0.c0, rt0.c3, vt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))), ((vt0.c1) IS TRUE)))<=(((- (rt0.c2)), ((rt0.c0)=(rt0.c0)), (rt0.c2 IN ())))), ((- (rt0.c0)) IN ());
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((~ (rt0.c2)))%(((rt0.c0)/(0.16985625075780175))))) ORDER BY (((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))%(((rt0.c0)/(0.16985625075780175))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((~ (rt0.c2)))%(((rt0.c0)/(0.16985625075780175))))) ORDER BY (((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))%(((rt0.c0)/(0.16985625075780175))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((~ (rt0.c2)))%(((rt0.c0)/(0.16985625075780175))))) ORDER BY (((((vt0.c1, vt0.c0, vt0.c0))==((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE) ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (CASE WHEN (NOT (rt0.c3)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c3)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (CASE WHEN (NOT (rt0.c3)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c3)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (CASE WHEN (NOT (rt0.c3)) THEN ((rt0.c1)LIKE(rt0.c1)) ELSE rt0.c0 COLLATE BINARY END);
SELECT * FROM vt0 WHERE (x'aade') ORDER BY CAST(vt0.c1 AS BLOB) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'aade') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (x'aade') ORDER BY CAST(vt0.c1 AS BLOB) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'aade') IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (x'aade') ORDER BY CAST(vt0.c1 AS BLOB) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c0, 0.09309791261893807))AND(((vt0.c1) ISNULL))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT rt0.c0, 0.09309791261893807))AND(((vt0.c1) ISNULL))))OR(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c0, 0.09309791261893807))AND(((vt0.c1) ISNULL))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT rt0.c0, 0.09309791261893807))AND(((vt0.c1) ISNULL))))OR(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c0, 0.09309791261893807))AND(((vt0.c1) ISNULL))))OR(vt0.c0)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (MIN(TRIM(DISTINCT vt0.c1, rt0.c2), ((rt0.c3)OR(rt0.c3)))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE ASC, CAST(CASE vt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN 'RTgcn	5E' THEN rt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MIN(TRIM(DISTINCT vt0.c1, rt0.c2), ((rt0.c3)OR(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE ASC, CAST(CASE vt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN 'RTgcn	5E' THEN rt0.c0 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (MIN(TRIM(DISTINCT vt0.c1, rt0.c2), ((rt0.c3)OR(rt0.c3)))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE ASC, CAST(CASE vt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN 'RTgcn	5E' THEN rt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MIN(TRIM(DISTINCT vt0.c1, rt0.c2), ((rt0.c3)OR(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE t0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE ASC, CAST(CASE vt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN 'RTgcn	5E' THEN rt0.c0 END AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (MIN(TRIM(DISTINCT vt0.c1, rt0.c2), ((rt0.c3)OR(rt0.c3)))) ORDER BY CASE t0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c3 END COLLATE NOCASE ASC, CAST(CASE vt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN 'RTgcn	5E' THEN rt0.c0 END AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c0 END COLLATE RTRIM);
SELECT * FROM t0 WHERE (((((NULL)AND(IFNULL(DISTINCT t0.c0, t0.c0))))OR((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(IFNULL(DISTINCT t0.c0, t0.c0))))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL)AND(IFNULL(DISTINCT t0.c0, t0.c0))))OR((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(IFNULL(DISTINCT t0.c0, t0.c0))))OR((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL)AND(IFNULL(DISTINCT t0.c0, t0.c0))))OR((+ (t0.c0)))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN 0.6825124656376821 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c1 END IN (LENGTH(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c3 THEN rt0.c2 WHEN 0.6825124656376821 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c1 END IN (LENGTH(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN 0.6825124656376821 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c1 END IN (LENGTH(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c3 THEN rt0.c2 WHEN 0.6825124656376821 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c1 END IN (LENGTH(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN 0.6825124656376821 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 ELSE rt0.c1 END IN (LENGTH(rt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN rt0.c3 THEN CASE WHEN vt0.c0 THEN rt0.c1 END END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN CASE WHEN vt0.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN rt0.c3 THEN CASE WHEN vt0.c0 THEN rt0.c1 END END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN CASE WHEN vt0.c0 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN rt0.c3 THEN CASE WHEN vt0.c0 THEN rt0.c1 END END) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(x'' COLLATE NOCASE)) ORDER BY rt0.c3  NULLS FIRST, (((rt0.c0 IN ()))>>(((vt0.c0)OR(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(x'' COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c3  NULLS FIRST, (((rt0.c0 IN ()))>>(((vt0.c0)OR(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(x'' COLLATE NOCASE)) ORDER BY rt0.c3  NULLS FIRST, (((rt0.c0 IN ()))>>(((vt0.c0)OR(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(x'' COLLATE NOCASE)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c3  NULLS FIRST, (((rt0.c0 IN ()))>>(((vt0.c0)OR(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(x'' COLLATE NOCASE)) ORDER BY rt0.c3  NULLS FIRST, (((rt0.c0 IN ()))>>(((vt0.c0)OR(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((((CASE rt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 END)OR((rt0.c1 IN ()))))OR(((vt0.c0) IS TRUE))))OR(CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)))OR(0.9163124083184016)))OR((('')>=(vt0.c0)))))OR(((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((rt0.c2)|(((rt0.c0) NOTNULL)))  NULLS FIRST, (rt0.c1 IN (rt0.c1, vt0.c1)) COLLATE BINARY  NULLS FIRST, (~ (CASE t0.c0  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE rt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 END)OR((rt0.c1 IN ()))))OR(((vt0.c0) IS TRUE))))OR(CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)))OR(0.9163124083184016)))OR((('')>=(vt0.c0)))))OR(((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c2)|(((rt0.c0) NOTNULL)))  NULLS FIRST, (rt0.c1 IN (rt0.c1, vt0.c1)) COLLATE BINARY  NULLS FIRST, (~ (CASE t0.c0  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((((CASE rt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 END)OR((rt0.c1 IN ()))))OR(((vt0.c0) IS TRUE))))OR(CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)))OR(0.9163124083184016)))OR((('')>=(vt0.c0)))))OR(((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((rt0.c2)|(((rt0.c0) NOTNULL)))  NULLS FIRST, (rt0.c1 IN (rt0.c1, vt0.c1)) COLLATE BINARY  NULLS FIRST, (~ (CASE t0.c0  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE rt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 END)OR((rt0.c1 IN ()))))OR(((vt0.c0) IS TRUE))))OR(CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)))OR(0.9163124083184016)))OR((('')>=(vt0.c0)))))OR(((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c2)|(((rt0.c0) NOTNULL)))  NULLS FIRST, (rt0.c1 IN (rt0.c1, vt0.c1)) COLLATE BINARY  NULLS FIRST, (~ (CASE t0.c0  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((((((((((CASE rt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 END)OR((rt0.c1 IN ()))))OR(((vt0.c0) IS TRUE))))OR(CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)))OR(0.9163124083184016)))OR((('')>=(vt0.c0)))))OR(((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((rt0.c2)|(((rt0.c0) NOTNULL)))  NULLS FIRST, (rt0.c1 IN (rt0.c1, vt0.c1)) COLLATE BINARY  NULLS FIRST, (~ (CASE t0.c0  WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c3) AND (-995675747))  WHEN (((rt0.c2))!=((rt0.c3))) THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)<(rt0.c3)) THEN ('' IN (rt0.c1)) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c3)AND(t0.c0)) ELSE rt0.c1 END) ORDER BY ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 710323751 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN 0.9725092401481639 WHEN rt0.c3 THEN rt0.c0 END) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c3) AND (-995675747))  WHEN (((rt0.c2))<>((rt0.c3))) THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)<(rt0.c3)) THEN ('' IN (rt0.c1)) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c3)AND(t0.c0)) ELSE rt0.c1 END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 710323751 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN 0.9725092401481639 WHEN rt0.c3 THEN rt0.c0 END) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c3) AND (-995675747))  WHEN (((rt0.c2))!=((rt0.c3))) THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)<(rt0.c3)) THEN ('' IN (rt0.c1)) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c3)AND(t0.c0)) ELSE rt0.c1 END) ORDER BY ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 710323751 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN 0.9725092401481639 WHEN rt0.c3 THEN rt0.c0 END) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c3) AND (-995675747))  WHEN (((rt0.c2))<>((rt0.c3))) THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)<(rt0.c3)) THEN ('' IN (rt0.c1)) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c3)AND(t0.c0)) ELSE rt0.c1 END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 710323751 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN 0.9725092401481639 WHEN rt0.c3 THEN rt0.c0 END) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c3) AND (-995675747))  WHEN (((rt0.c2))!=((rt0.c3))) THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END WHEN ((rt0.c2)<(rt0.c3)) THEN ('' IN (rt0.c1)) WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c3)AND(t0.c0)) ELSE rt0.c1 END) ORDER BY ((rt0.c3) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 710323751 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN 0.9725092401481639 WHEN rt0.c3 THEN rt0.c0 END) AND ((rt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST(t0.c0 AS BLOB))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST(t0.c0 AS BLOB))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT CAST(t0.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c0)-(x'')) COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN ((('}J^Y', NULL, t0.c0))<((vt0.c0, rt0.c2, vt0.c0))) THEN (((rt0.c1)) NOT BETWEEN (('-821579852')) AND ((rt0.c0))) WHEN SQLITE_SOURCE_ID() THEN vt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN ((('}J^Y', NULL, t0.c0))<((vt0.c0, rt0.c2, vt0.c0))) THEN (((rt0.c1)) NOT BETWEEN (('-821579852')) AND ((rt0.c0))) WHEN SQLITE_SOURCE_ID() THEN vt0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c0)-(x'')) COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN ((('}J^Y', NULL, t0.c0))<((vt0.c0, rt0.c2, vt0.c0))) THEN (((rt0.c1)) NOT BETWEEN (('-821579852')) AND ((rt0.c0))) WHEN SQLITE_SOURCE_ID() THEN vt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN ((('}J^Y', NULL, t0.c0))<((vt0.c0, rt0.c2, vt0.c0))) THEN (((rt0.c1)) NOT BETWEEN (('-821579852')) AND ((rt0.c0))) WHEN SQLITE_SOURCE_ID() THEN vt0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((t0.c0)-(x'')) COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN ((('}J^Y', NULL, t0.c0))<((vt0.c0, rt0.c2, vt0.c0))) THEN (((rt0.c1)) NOT BETWEEN (('-821579852')) AND ((rt0.c0))) WHEN SQLITE_SOURCE_ID() THEN vt0.c1 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c2) NOTNULL))) WHERE (((rt0.c0 COLLATE RTRIM)LIKE(((rt0.c2) NOTNULL)))) ORDER BY CAST(x'' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)LIKE(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c2) NOTNULL))) ORDER BY CAST(x'' AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c2) NOTNULL))) WHERE (((rt0.c0 COLLATE RTRIM)LIKE(((rt0.c2) NOTNULL)))) ORDER BY CAST(x'' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)LIKE(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c2) NOTNULL))) ORDER BY CAST(x'' AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c2) NOTNULL))) WHERE (((rt0.c0 COLLATE RTRIM)LIKE(((rt0.c2) NOTNULL)))) ORDER BY CAST(x'' AS REAL)  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.34276030256967804 END))!=((LOWER(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.34276030256967804 END))<>((LOWER(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.34276030256967804 END))!=((LOWER(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.34276030256967804 END))<>((LOWER(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.34276030256967804 END))!=((LOWER(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)%(vt0.c1)))=(((rt0.c2)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(vt0.c1)))=(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)%(vt0.c1)))=(((rt0.c2)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(vt0.c1)))=(((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)%(vt0.c1)))=(((rt0.c2)<=(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i28 WHERE ('-1179541811');
SELECT SUM(count) FROM (SELECT (('-1179541811') IS TRUE)  as count FROM t0 INDEXED BY i28);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i28 WHERE ('-1179541811');
SELECT SUM(count) FROM (SELECT (('-1179541811') IS TRUE)  as count FROM t0 INDEXED BY i28);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)<=(0Xffffffffa1b5c035)))GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(0Xffffffffa1b5c035)))GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)<=(0Xffffffffa1b5c035)))GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(0Xffffffffa1b5c035)))GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0)<=(0Xffffffffa1b5c035)))GLOB(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT * FROM rt0, t0 WHERE (rt0.c2) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, 'OV', rt0.c3)) AND ((t0.c0, rt0.c3, t0.c0))) COLLATE BINARY DESC  NULLS LAST, ((((t0.c0)AND(SQLITE_VERSION())))AND(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, 'OV', rt0.c3)) AND ((t0.c0, rt0.c3, t0.c0))) COLLATE BINARY DESC  NULLS LAST, ((((t0.c0)AND(SQLITE_VERSION())))AND(t0.c0))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (rt0.c2) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, 'OV', rt0.c3)) AND ((t0.c0, rt0.c3, t0.c0))) COLLATE BINARY DESC  NULLS LAST, ((((t0.c0)AND(SQLITE_VERSION())))AND(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, 'OV', rt0.c3)) AND ((t0.c0, rt0.c3, t0.c0))) COLLATE BINARY DESC  NULLS LAST, ((((t0.c0)AND(SQLITE_VERSION())))AND(t0.c0))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (rt0.c2) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, 'OV', rt0.c3)) AND ((t0.c0, rt0.c3, t0.c0))) COLLATE BINARY DESC  NULLS LAST, ((((t0.c0)AND(SQLITE_VERSION())))AND(t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM t0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (('U*') NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c1 END) ORDER BY (((((((((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('0.7117455204401462')))))AND(vt0.c0)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))), ((vt0.c1 COLLATE RTRIM)IS NOT(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)) DESC, ((0.14616335430966854 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN (('U*') NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c1 END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('0.7117455204401462')))))AND(vt0.c0)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))), ((vt0.c1 COLLATE RTRIM)IS NOT(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)) DESC, ((0.14616335430966854 COLLATE NOCASE) NOT NULL)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (('U*') NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c1 END) ORDER BY (((((((((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('0.7117455204401462')))))AND(vt0.c0)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))), ((vt0.c1 COLLATE RTRIM)IS NOT(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)) DESC, ((0.14616335430966854 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN (('U*') NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c1 END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('0.7117455204401462')))))AND(vt0.c0)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))), ((vt0.c1 COLLATE RTRIM)IS NOT(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)) DESC, ((0.14616335430966854 COLLATE NOCASE) NOT NULL)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN (('U*') NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c1 END) ORDER BY (((((((((~ (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('0.7117455204401462')))))AND(vt0.c0)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))), ((vt0.c1 COLLATE RTRIM)IS NOT(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END)) DESC, ((0.14616335430966854 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)))/(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(t0.c0)))/(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)))/(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(t0.c0)))/(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)))/(t0.c0)));
SELECT * FROM rt0, vt0, t0 WHERE (CAST(CASE rt0.c0  WHEN vt0.c1 THEN 0.14616335430966854 ELSE t0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN vt0.c1 THEN 0.14616335430966854 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (CAST(CASE rt0.c0  WHEN vt0.c1 THEN 0.14616335430966854 ELSE t0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN vt0.c1 THEN 0.14616335430966854 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (CAST(CASE rt0.c0  WHEN vt0.c1 THEN 0.14616335430966854 ELSE t0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- (((rt0.c0) NOTNULL)))) ORDER BY (((rt0.c3 IN (vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, IFNULL(DISTINCT (NOT (vt0.c0)), UNLIKELY(rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c3 IN (vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, IFNULL(DISTINCT (NOT (vt0.c0)), UNLIKELY(rt0.c3)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- (((rt0.c0) NOTNULL)))) ORDER BY (((rt0.c3 IN (vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, IFNULL(DISTINCT (NOT (vt0.c0)), UNLIKELY(rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c3 IN (vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, IFNULL(DISTINCT (NOT (vt0.c0)), UNLIKELY(rt0.c3)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- (((rt0.c0) NOTNULL)))) ORDER BY (((rt0.c3 IN (vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST, IFNULL(DISTINCT (NOT (vt0.c0)), UNLIKELY(rt0.c3)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((- (rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)*(rt0.c3))))) ORDER BY ((rt0.c2 IN (rt0.c3)) IN ())  NULLS LAST, TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)*(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c2 IN (rt0.c3)) IN ())  NULLS LAST, TOTAL_CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((- (rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)*(rt0.c3))))) ORDER BY ((rt0.c2 IN (rt0.c3)) IN ())  NULLS LAST, TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)*(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((rt0.c2 IN (rt0.c3)) IN ())  NULLS LAST, TOTAL_CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((- (rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1)*(rt0.c3))))) ORDER BY ((rt0.c2 IN (rt0.c3)) IN ())  NULLS LAST, TOTAL_CHANGES() ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((((rt0.c3))=((rt0.c3))) AS BLOB)) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST, (+ (((0.1953928903784662) BETWEEN (rt0.c1) AND (t0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN vt0.c0 WHEN ((rt0.c0)>>(t0.c0)) THEN (~ (rt0.c3)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3))==((rt0.c3))) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST, (+ (((0.1953928903784662) BETWEEN (rt0.c1) AND (t0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN vt0.c0 WHEN ((rt0.c0)>>(t0.c0)) THEN (~ (rt0.c3)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((((rt0.c3))=((rt0.c3))) AS BLOB)) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST, (+ (((0.1953928903784662) BETWEEN (rt0.c1) AND (t0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN vt0.c0 WHEN ((rt0.c0)>>(t0.c0)) THEN (~ (rt0.c3)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3))==((rt0.c3))) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST, (+ (((0.1953928903784662) BETWEEN (rt0.c1) AND (t0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN vt0.c0 WHEN ((rt0.c0)>>(t0.c0)) THEN (~ (rt0.c3)) ELSE vt0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((((rt0.c3))=((rt0.c3))) AS BLOB)) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST, (+ (((0.1953928903784662) BETWEEN (rt0.c1) AND (t0.c0)))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE t0.c0 END WHEN t0.c0 COLLATE NOCASE THEN vt0.c0 WHEN ((rt0.c0)>>(t0.c0)) THEN (~ (rt0.c3)) ELSE vt0.c0 END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)<>((((rt0.c3)) NOT BETWEEN ((0.7010332200194059)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)!=((((rt0.c3)) NOT BETWEEN ((0.7010332200194059)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)<>((((rt0.c3)) NOT BETWEEN ((0.7010332200194059)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)!=((((rt0.c3)) NOT BETWEEN ((0.7010332200194059)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)<>((((rt0.c3)) NOT BETWEEN ((0.7010332200194059)) AND ((rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), 0.740831713602319));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), 0.740831713602319)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), 0.740831713602319));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), 0.740831713602319)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), 0.740831713602319));
SELECT * FROM t0, vt0 WHERE (LOWER(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LOWER(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (LOWER(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT));
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c3)%(rt0.c2)))OR(CASE WHEN -1888714688 THEN rt0.c2 END)))OR((((vt0.c1, rt0.c2, rt0.c0))!=((vt0.c0, rt0.c1, vt0.c1)))))) ORDER BY (NOT ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)%(rt0.c2)))OR(CASE WHEN -1888714688 THEN rt0.c2 END)))OR((((vt0.c1, rt0.c2, rt0.c0))<>((vt0.c0, rt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NOT ((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c3)%(rt0.c2)))OR(CASE WHEN -1888714688 THEN rt0.c2 END)))OR((((vt0.c1, rt0.c2, rt0.c0))!=((vt0.c0, rt0.c1, vt0.c1)))))) ORDER BY (NOT ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)%(rt0.c2)))OR(CASE WHEN -1888714688 THEN rt0.c2 END)))OR((((vt0.c1, rt0.c2, rt0.c0))<>((vt0.c0, rt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (NOT ((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((rt0.c3)%(rt0.c2)))OR(CASE WHEN -1888714688 THEN rt0.c2 END)))OR((((vt0.c1, rt0.c2, rt0.c0))!=((vt0.c0, rt0.c1, vt0.c1)))))) ORDER BY (NOT ((rt0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((- (vt0.c0)))<<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((- (vt0.c0)))<<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((- (vt0.c0)))<<((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(DATETIME(NULL, rt0.c0, rt0.c3) AS BLOB)) ORDER BY (+ (((rt0.c1)*(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATETIME(NULL, rt0.c0, rt0.c3) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1)*(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(DATETIME(NULL, rt0.c0, rt0.c3) AS BLOB)) ORDER BY (+ (((rt0.c1)*(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(DATETIME(NULL, rt0.c0, rt0.c3) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1)*(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(DATETIME(NULL, rt0.c0, rt0.c3) AS BLOB)) ORDER BY (+ (((rt0.c1)*(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE ('OV');
SELECT SUM(count) FROM (SELECT (('OV') IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE ('OV');
SELECT SUM(count) FROM (SELECT (('OV') IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t0 NATURAL JOIN vt0 WHERE ('OV');
SELECT * FROM t0, rt0, vt0 WHERE ((((0.0368991922862516)-(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.0368991922862516)-(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((0.0368991922862516)-(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.0368991922862516)-(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((0.0368991922862516)-(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(NULL)))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(NULL)))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(NULL)))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(NULL)))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(NULL)))AND(rt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY ((rt0.c3 COLLATE RTRIM)|(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)|(rt0.c3)) DESC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY ((rt0.c3 COLLATE RTRIM)|(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)|(rt0.c3)) DESC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY ((rt0.c3 COLLATE RTRIM)|(rt0.c3)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN '8\r' THEN DATETIME(rt0.c1, rt0.c3, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '8\r' THEN DATETIME(rt0.c1, rt0.c3, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN '8\r' THEN DATETIME(rt0.c1, rt0.c3, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '8\r' THEN DATETIME(rt0.c1, rt0.c3, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN '8\r' THEN DATETIME(rt0.c1, rt0.c3, rt0.c0) END);
SELECT COUNT(*) FROM rt0 INDEXED BY i28 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i28);
SELECT COUNT(*) FROM rt0 INDEXED BY i28 WHERE (((- (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i28);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE rt0.c3  WHEN vt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN vt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE rt0.c3  WHEN vt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN vt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CASE rt0.c3  WHEN vt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'', '-821579852', vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE 1074784084 END, LOWER(vt0.c1), (vt0.c1 IN ()), ((vt0.c1)LIKE(vt0.c0)), vt0.c1 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c1))), '204501444')) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((NULL) IS TRUE), (+ (vt0.c0)), vt0.c1, (vt0.c1 IN (NULL)), ((vt0.c1)<(vt0.c1)), (((0.8250296603958961))>((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', '-821579852', vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE 1074784084 END, LOWER(vt0.c1), (vt0.c1 IN ()), ((vt0.c1)LIKE(vt0.c0)), vt0.c1 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c1))), '204501444')) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((NULL) IS TRUE), (+ (vt0.c0)), vt0.c1, (vt0.c1 IN (NULL)), ((vt0.c1)<(vt0.c1)), (((0.8250296603958961))>((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'', '-821579852', vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE 1074784084 END, LOWER(vt0.c1), (vt0.c1 IN ()), ((vt0.c1)LIKE(vt0.c0)), vt0.c1 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c1))), '204501444')) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((NULL) IS TRUE), (+ (vt0.c0)), vt0.c1, (vt0.c1 IN (NULL)), ((vt0.c1)<(vt0.c1)), (((0.8250296603958961))>((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', '-821579852', vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE 1074784084 END, LOWER(vt0.c1), (vt0.c1 IN ()), ((vt0.c1)LIKE(vt0.c0)), vt0.c1 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c1))), '204501444')) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((NULL) IS TRUE), (+ (vt0.c0)), vt0.c1, (vt0.c1 IN (NULL)), ((vt0.c1)<(vt0.c1)), (((0.8250296603958961))>((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'', '-821579852', vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 ELSE 1074784084 END, LOWER(vt0.c1), (vt0.c1 IN ()), ((vt0.c1)LIKE(vt0.c0)), vt0.c1 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c1))), '204501444')) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((NULL) IS TRUE), (+ (vt0.c0)), vt0.c1, (vt0.c1 IN (NULL)), ((vt0.c1)<(vt0.c1)), (((0.8250296603958961))>((vt0.c1)))))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c3)) IS FALSE) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, '1070390045')) AND ((rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c1)))) AND ((((vt0.c0)<<(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, '1070390045')) AND ((rt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c1)))) AND ((((vt0.c0)<<(rt0.c2))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, '1070390045')) AND ((rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c1)))) AND ((((vt0.c0)<<(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, '1070390045')) AND ((rt0.c1, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c1)))) AND ((((vt0.c0)<<(rt0.c2))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((rt0.c1, vt0.c1, '1070390045')) AND ((rt0.c1, rt0.c0, rt0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c1)))) AND ((((vt0.c0)<<(rt0.c2))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON vt0.c1 INNER JOIN rt0 ON (- ((rt0.c2 IN ()))) WHERE ((((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ())))) ORDER BY TOTAL_CHANGES()  NULLS LAST, (((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)), NULL, (rt0.c3 IN ())))>=((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))OR(-1.888714688E9)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON vt0.c1 INNER JOIN rt0 ON (- ((rt0.c2 IN ()))) ORDER BY TOTAL_CHANGES()  NULLS LAST, (((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)), NULL, (rt0.c3 IN ())))>=((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))OR(-1.888714688E9)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), rt0.c3))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON vt0.c1 INNER JOIN rt0 ON (- ((rt0.c2 IN ()))) WHERE ((((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ())))) ORDER BY TOTAL_CHANGES()  NULLS LAST, (((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)), NULL, (rt0.c3 IN ())))>=((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))OR(-1.888714688E9)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON vt0.c1 INNER JOIN rt0 ON (- ((rt0.c2 IN ()))) ORDER BY TOTAL_CHANGES()  NULLS LAST, (((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)), NULL, (rt0.c3 IN ())))>=((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))OR(-1.888714688E9)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), rt0.c3))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON vt0.c1 INNER JOIN rt0 ON (- ((rt0.c2 IN ()))) WHERE ((((rt0.c1 IN (vt0.c1)))GLOB((rt0.c1 IN ())))) ORDER BY TOTAL_CHANGES()  NULLS LAST, (((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)), NULL, (rt0.c3 IN ())))>=((((((((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))OR(-1.888714688E9)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), rt0.c3)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c0)|(x'7f76')) THEN TRIM(DISTINCT vt0.c1) END) ORDER BY (((+ (t0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)|(x'7f76')) THEN TRIM(DISTINCT vt0.c1) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c0)|(x'7f76')) THEN TRIM(DISTINCT vt0.c1) END) ORDER BY (((+ (t0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)|(x'7f76')) THEN TRIM(DISTINCT vt0.c1) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (t0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c0)|(x'7f76')) THEN TRIM(DISTINCT vt0.c1) END) ORDER BY (((+ (t0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) AND ('00_*-꾴'))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((rt0.c3) NOTNULL) THEN (((rt0.c0, rt0.c1, rt0.c0, vt0.c1, NULL)) NOT BETWEEN ((0x5a846d34, rt0.c3, rt0.c3, t0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, t0.c0, rt0.c2, NULL))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) AND ('00_*-꾴'))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON rt0.c2 ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((rt0.c3) NOTNULL) THEN (((rt0.c0, rt0.c1, rt0.c0, vt0.c1, NULL)) NOT BETWEEN ((0x5a846d34, rt0.c3, rt0.c3, t0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, t0.c0, rt0.c2, NULL))) END  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) AND ('00_*-꾴'))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((rt0.c3) NOTNULL) THEN (((rt0.c0, rt0.c1, rt0.c0, vt0.c1, NULL)) NOT BETWEEN ((0x5a846d34, rt0.c3, rt0.c3, t0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, t0.c0, rt0.c2, NULL))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) AND ('00_*-꾴'))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON rt0.c2 ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((rt0.c3) NOTNULL) THEN (((rt0.c0, rt0.c1, rt0.c0, vt0.c1, NULL)) NOT BETWEEN ((0x5a846d34, rt0.c3, rt0.c3, t0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, t0.c0, rt0.c2, NULL))) END  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (~ (((rt0.c2) NOTNULL))) LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) AND ('00_*-꾴'))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN ((rt0.c3) NOTNULL) THEN (((rt0.c0, rt0.c1, rt0.c0, vt0.c1, NULL)) NOT BETWEEN ((0x5a846d34, rt0.c3, rt0.c3, t0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, t0.c0, rt0.c2, NULL))) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE '禡,'  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE '' END COLLATE NOCASE) ORDER BY (((rt0.c0)) NOT BETWEEN ((((0X4c12ab37)||(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))  NULLS LAST, ((SQLITE_VERSION())<(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE '禡,'  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE '' END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((0x4c12ab37)||(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))  NULLS LAST, ((SQLITE_VERSION())<(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE '禡,'  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE '' END COLLATE NOCASE) ORDER BY (((rt0.c0)) NOT BETWEEN ((((0X4c12ab37)||(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))  NULLS LAST, ((SQLITE_VERSION())<(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE '禡,'  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE '' END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((0x4c12ab37)||(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))  NULLS LAST, ((SQLITE_VERSION())<(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE '禡,'  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE '' END COLLATE NOCASE) ORDER BY (((rt0.c0)) NOT BETWEEN ((((0X4c12ab37)||(vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0)))))  NULLS LAST, ((SQLITE_VERSION())<(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON HEX(DISTINCT ((rt0.c2)IS(rt0.c0))) WHERE (((((vt0.c1)*('禡,'))) NOT BETWEEN (CASE rt0.c3  WHEN NULL THEN rt0.c1 END) AND (x''))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((((((((((((((((('-272936787')OR(x'')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(x'')))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))))OR(((((NULL)OR(rt0.c1)))OR(vt0.c1)))))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)*('禡,'))) NOT BETWEEN (CASE rt0.c3  WHEN NULL THEN rt0.c1 END) AND (x''))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON HEX(DISTINCT ((rt0.c2)IS(rt0.c0))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((((((((((((((((('-272936787')OR(x'')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(x'')))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))))OR(((((NULL)OR(rt0.c1)))OR(vt0.c1)))))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON HEX(DISTINCT ((rt0.c2)IS(rt0.c0))) WHERE (((((vt0.c1)*('禡,'))) NOT BETWEEN (CASE rt0.c3  WHEN NULL THEN rt0.c1 END) AND (x''))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((((((((((((((((('-272936787')OR(x'')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(x'')))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))))OR(((((NULL)OR(rt0.c1)))OR(vt0.c1)))))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)*('禡,'))) NOT BETWEEN (CASE rt0.c3  WHEN NULL THEN rt0.c1 END) AND (x''))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON HEX(DISTINCT ((rt0.c2)IS(rt0.c0))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((((((((((((((((('-272936787')OR(x'')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(x'')))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))))OR(((((NULL)OR(rt0.c1)))OR(vt0.c1)))))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON HEX(DISTINCT ((rt0.c2)IS(rt0.c0))) WHERE (((((vt0.c1)*('禡,'))) NOT BETWEEN (CASE rt0.c3  WHEN NULL THEN rt0.c1 END) AND (x''))) ORDER BY ((((((((LAST_INSERT_ROWID())OR((((((((((((((((('-272936787')OR(x'')))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))AND(x'')))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))))OR(((((NULL)OR(rt0.c1)))OR(vt0.c1)))))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))));
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT ALL * FROM rt0, t0 WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((- ((+ (rt0.c1)))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((NOT (((vt0.c1)IS NOT(vt0.c0))))) ORDER BY RTRIM(((x'')<(t0.c0))), json_array(json_patch(rt0.c2, 0Xffffffffd9dbea57), CAST('-1751790122' AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY RTRIM(((x'')<(t0.c0))), json_array(json_patch(rt0.c2, 0Xffffffffd9dbea57), CAST('-1751790122' AS BLOB)) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((NOT (((vt0.c1)IS NOT(vt0.c0))))) ORDER BY RTRIM(((x'')<(t0.c0))), json_array(json_patch(rt0.c2, 0Xffffffffd9dbea57), CAST('-1751790122' AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY RTRIM(((x'')<(t0.c0))), json_array(json_patch(rt0.c2, 0Xffffffffd9dbea57), CAST('-1751790122' AS BLOB)) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((NOT (((vt0.c1)IS NOT(vt0.c0))))) ORDER BY RTRIM(((x'')<(t0.c0))), json_array(json_patch(rt0.c2, 0Xffffffffd9dbea57), CAST('-1751790122' AS BLOB)) DESC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c2 WHERE (((((rt0.c0)||('\n/톧CGYB4%f맘'))) IS TRUE)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||('\n/톧CGYB4%f맘'))) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c2 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c2 WHERE (((((rt0.c0)||('\n/톧CGYB4%f맘'))) IS TRUE)) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||('\n/톧CGYB4%f맘'))) IS TRUE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c2 ORDER BY rt0.c2 DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON rt0.c2 WHERE (((((rt0.c0)||('\n/톧CGYB4%f맘'))) IS TRUE)) ORDER BY rt0.c2 DESC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN x'168f' THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN x'168f' THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN x'168f' THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN x'168f' THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS FIRST, (- (CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN x'168f' THEN vt0.c0 END))  NULLS LAST;
SELECT * FROM rt0 WHERE (PRINTF(((rt0.c3)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c3)IS(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (PRINTF(((rt0.c3)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c3)IS(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (PRINTF(((rt0.c3)IS(rt0.c2))));
SELECT * FROM t0 WHERE ((((1.01283352E8, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)+('179743664')), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((~ (t0.c0)), IFNULL(t0.c0, t0.c0), ((t0.c0) IS FALSE))))) ORDER BY ((x'02f4' COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((1.01283352E8, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)+('179743664')), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((~ (t0.c0)), IFNULL(t0.c0, t0.c0), ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY ((x'02f4' COLLATE RTRIM) IS TRUE));
SELECT * FROM t0 WHERE ((((1.01283352E8, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)+('179743664')), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((~ (t0.c0)), IFNULL(t0.c0, t0.c0), ((t0.c0) IS FALSE))))) ORDER BY ((x'02f4' COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((1.01283352E8, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)+('179743664')), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((~ (t0.c0)), IFNULL(t0.c0, t0.c0), ((t0.c0) IS FALSE))))) IS TRUE)  as count FROM t0 ORDER BY ((x'02f4' COLLATE RTRIM) IS TRUE));
SELECT * FROM t0 WHERE ((((1.01283352E8, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)), ((t0.c0)+('179743664')), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((~ (t0.c0)), IFNULL(t0.c0, t0.c0), ((t0.c0) IS FALSE))))) ORDER BY ((x'02f4' COLLATE RTRIM) IS TRUE);
SELECT * FROM rt0, t0, vt0 WHERE (CASE (+ (rt0.c3))  WHEN (('^e\') NOTNULL) THEN CASE t0.c0  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c1 END WHEN ((vt0.c0)>(rt0.c3)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) ELSE LIKELIHOOD(rt0.c1, 0.19193663345353185) END) ORDER BY LOWER(CAST(rt0.c1 AS TEXT))  NULLS LAST, (((~ ('RTGCN	5E'))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0.08877405328042254))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), CAST(CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c3))  WHEN (('^e\') NOTNULL) THEN CASE t0.c0  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c1 END WHEN ((vt0.c0)>(rt0.c3)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) ELSE LIKELIHOOD(rt0.c1, 0.19193663345353185) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY LOWER(CAST(rt0.c1 AS TEXT))  NULLS LAST, (((~ ('RTGCN	5E'))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0.08877405328042254))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), CAST(CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END AS NUMERIC) DESC);
SELECT * FROM rt0, t0, vt0 WHERE (CASE (+ (rt0.c3))  WHEN (('^e\') NOTNULL) THEN CASE t0.c0  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c1 END WHEN ((vt0.c0)>(rt0.c3)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) ELSE LIKELIHOOD(rt0.c1, 0.19193663345353185) END) ORDER BY LOWER(CAST(rt0.c1 AS TEXT))  NULLS LAST, (((~ ('RTGCN	5E'))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0.08877405328042254))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), CAST(CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c3))  WHEN (('^e\') NOTNULL) THEN CASE t0.c0  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c1 END WHEN ((vt0.c0)>(rt0.c3)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) ELSE LIKELIHOOD(rt0.c1, 0.19193663345353185) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY LOWER(CAST(rt0.c1 AS TEXT))  NULLS LAST, (((~ ('RTGCN	5E'))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0.08877405328042254))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), CAST(CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END AS NUMERIC) DESC);
SELECT * FROM rt0, t0, vt0 WHERE (CASE (+ (rt0.c3))  WHEN (('^e\') NOTNULL) THEN CASE t0.c0  WHEN rt0.c3 THEN t0.c0 ELSE rt0.c1 END WHEN ((vt0.c0)>(rt0.c3)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((rt0.c2) BETWEEN (NULL) AND (rt0.c2)) ELSE LIKELIHOOD(rt0.c1, 0.19193663345353185) END) ORDER BY LOWER(CAST(rt0.c1 AS TEXT))  NULLS LAST, (((~ ('RTGCN	5E'))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0.08877405328042254))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))), CAST(CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN (vt0.c1)) AS BLOB));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((NOT (rt0.c3))))<(((0x64072311 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c3))))<(((0X64072311 IN ()))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((NOT (rt0.c3))))<(((0x64072311 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c3))))<(((0X64072311 IN ()))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((NOT (rt0.c3))))<(((0x64072311 IN ())))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (x'');
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (LIKELY(rt0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (LIKELY(rt0.c2));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2)) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (LIKELY(rt0.c2));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)), x'', ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(1.074784084E9 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY CASE WHEN (rt0.c1 IN (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END ASC  NULLS FIRST, ((rt0.c2) NOTNULL)  NULLS FIRST, IFNULL(DISTINCT (((rt0.c3))>((rt0.c0))), (- (rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)), x'', ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(1.074784084E9 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END ASC  NULLS FIRST, ((rt0.c2) NOTNULL)  NULLS FIRST, IFNULL(DISTINCT (((rt0.c3))>((rt0.c0))), (- (rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)), x'', ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(1.074784084E9 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY CASE WHEN (rt0.c1 IN (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END ASC  NULLS FIRST, ((rt0.c2) NOTNULL)  NULLS FIRST, IFNULL(DISTINCT (((rt0.c3))>((rt0.c0))), (- (rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)), x'', ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(1.074784084E9 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END ASC  NULLS FIRST, ((rt0.c2) NOTNULL)  NULLS FIRST, IFNULL(DISTINCT (((rt0.c3))>((rt0.c0))), (- (rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)), x'', ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CAST(1.074784084E9 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))) ORDER BY CASE WHEN (rt0.c1 IN (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END ASC  NULLS FIRST, ((rt0.c2) NOTNULL)  NULLS FIRST, IFNULL(DISTINCT (((rt0.c3))>((rt0.c0))), (- (rt0.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE));
SELECT * FROM vt0, rt0 WHERE (x'236e');
SELECT SUM(count) FROM (SELECT ALL ((x'236e') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'236e');
SELECT SUM(count) FROM (SELECT ALL ((x'236e') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'236e');
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((vt0.c0) NOT NULL))AND((((rt0.c2))<>((0.8135507312615787))))))OR(rt0.c1))) ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c0, 0.23445750570962298) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))AND((((rt0.c2))<>((0.8135507312615787))))))OR(rt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c0, 0.23445750570962298) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((vt0.c0) NOT NULL))AND((((rt0.c2))<>((0.8135507312615787))))))OR(rt0.c1))) ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c0, 0.23445750570962298) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))AND((((rt0.c2))<>((0.8135507312615787))))))OR(rt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c0, 0.23445750570962298) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((vt0.c0) NOT NULL))AND((((rt0.c2))<>((0.8135507312615787))))))OR(rt0.c1))) ORDER BY CAST(LIKELIHOOD(DISTINCT rt0.c0, 0.23445750570962298) AS INTEGER) ASC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE ((((('-799857666') NOT NULL))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((('-799857666') NOT NULL))>(rt0.c3))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((('-799857666') NOT NULL))>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((((('-799857666') NOT NULL))>(rt0.c3))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((('-799857666') NOT NULL))>(rt0.c3)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((((- (vt0.c0)))<<(((((t0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.487612912405313 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<<(((((t0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.487612912405313 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((((- (vt0.c0)))<<(((((t0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.487612912405313 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<<(((((t0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.487612912405313 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((((- (vt0.c0)))<<(((((t0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))>=(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.487612912405313 END)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (((((vt0.c0))>=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (((((vt0.c0))>=((vt0.c1)))))));
SELECT * FROM vt0 WHERE ((((vt0.c1))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (((((vt0.c0))>=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (((((vt0.c0))>=((vt0.c1)))))));
SELECT * FROM vt0 WHERE ((((vt0.c1))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (((((vt0.c0))>=((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (vt0.c1) AND (0.5912597326182355)) THEN ((vt0.c0)<>(rt0.c2)) END) ORDER BY (((NOT (rt0.c3))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (vt0.c1) AND (0.5912597326182355)) THEN ((vt0.c0)!=(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c3))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (vt0.c1) AND (0.5912597326182355)) THEN ((vt0.c0)<>(rt0.c2)) END) ORDER BY (((NOT (rt0.c3))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) BETWEEN (vt0.c1) AND (0.5912597326182355)) THEN ((vt0.c0)!=(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c3))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) BETWEEN (vt0.c1) AND (0.5912597326182355)) THEN ((vt0.c0)<>(rt0.c2)) END) ORDER BY (((NOT (rt0.c3))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<<(rt0.c2)))<>(((rt0.c0)<<(0.6153350393331337)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<<(rt0.c2)))<>(((rt0.c0)<<(0.6153350393331337)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<<(rt0.c2)))<>(((rt0.c0)<<(0.6153350393331337)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<<(rt0.c2)))<>(((rt0.c0)<<(0.6153350393331337)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<<(rt0.c2)))<>(((rt0.c0)<<(0.6153350393331337)))) WHERE (rt0.c1);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))) WHERE (CAST(((vt0.c0)%(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))) WHERE (CAST(((vt0.c0)%(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)+(((vt0.c0)%(vt0.c0)))) WHERE (CAST(((vt0.c0)%(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))) AND (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((~ (vt0.c0))))) ORDER BY highlight(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), NULL, CAST(vt0.c1 AS REAL), IFNULL(vt0.c1, vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY highlight(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), NULL, CAST(vt0.c1 AS REAL), IFNULL(vt0.c1, vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((~ (vt0.c0))))) ORDER BY highlight(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), NULL, CAST(vt0.c1 AS REAL), IFNULL(vt0.c1, vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY highlight(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), NULL, CAST(vt0.c1 AS REAL), IFNULL(vt0.c1, vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((NOT ((~ (vt0.c0))))) ORDER BY highlight(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), NULL, CAST(vt0.c1 AS REAL), IFNULL(vt0.c1, vt0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (LIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (COALESCE(DISTINCT t0.c0, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (COALESCE(DISTINCT t0.c0, vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (LIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (COALESCE(DISTINCT t0.c0, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (COALESCE(DISTINCT t0.c0, vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (LIKELY(CASE WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((+ (t0.c0))) AND (COALESCE(DISTINCT t0.c0, vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((((((t0.c0))!=((t0.c0))))OR(((t0.c0) IS TRUE))))AND(IFNULL(DISTINCT t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0))<>((t0.c0))))OR(((t0.c0) IS TRUE))))AND(IFNULL(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((((((t0.c0))!=((t0.c0))))OR(((t0.c0) IS TRUE))))AND(IFNULL(DISTINCT t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c0))<>((t0.c0))))OR(((t0.c0) IS TRUE))))AND(IFNULL(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((((((t0.c0))!=((t0.c0))))OR(((t0.c0) IS TRUE))))AND(IFNULL(DISTINCT t0.c0, t0.c0))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 COLLATE NOCASE IN ()) WHERE ((((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((vt0.c1)LIKE(t0.c0)))))OR(('' IN ())))) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('1678189329') AND ((t0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((vt0.c1)LIKE(t0.c0)))))OR(('' IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 COLLATE NOCASE IN ()) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('1678189329') AND ((t0.c0 IN (t0.c0)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 COLLATE NOCASE IN ()) WHERE ((((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((vt0.c1)LIKE(t0.c0)))))OR(('' IN ())))) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('1678189329') AND ((t0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((vt0.c1)LIKE(t0.c0)))))OR(('' IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 COLLATE NOCASE IN ()) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('1678189329') AND ((t0.c0 IN (t0.c0)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (t0.c0 COLLATE NOCASE IN ()) WHERE ((((((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((vt0.c1)LIKE(t0.c0)))))OR(('' IN ())))) ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('1678189329') AND ((t0.c0 IN (t0.c0))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c0)IS NOT(t0.c0)) IN (CAST(t0.c0 AS BLOB)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)IS NOT(t0.c0)) IN (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c0)IS NOT(t0.c0)) IN (CAST(t0.c0 AS BLOB)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)IS NOT(t0.c0)) IN (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c0)IS NOT(t0.c0)) IN (CAST(t0.c0 AS BLOB)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2)||(t0.c0)) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c1, rt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (SUBSTR(rt0.c1, rt0.c0) IN ()));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2)||(t0.c0)) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c1, rt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c2)||(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (SUBSTR(rt0.c1, rt0.c0) IN ()));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2)||(t0.c0)) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c1, rt0.c0) IN ());
SELECT ALL * FROM t0, rt0 WHERE (((CAST(x'a3bd' AS INTEGER)) NOT BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'a3bd' AS INTEGER)) NOT BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(x'a3bd' AS INTEGER)) NOT BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'a3bd' AS INTEGER)) NOT BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(x'a3bd' AS INTEGER)) NOT BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN 0.16985625075780175 THEN (('-2068276544')IS NOT(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.16985625075780175 THEN (('-2068276544')IS NOT(t0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN 0.16985625075780175 THEN (('-2068276544')IS NOT(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.16985625075780175 THEN (('-2068276544')IS NOT(t0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN 0.16985625075780175 THEN (('-2068276544')IS NOT(t0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOTNULL))) ORDER BY ((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(((NULL)IS(vt0.c1)))))AND((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(((NULL)IS(vt0.c1)))))AND((- (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOTNULL))) ORDER BY ((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(((NULL)IS(vt0.c1)))))AND((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(((NULL)IS(vt0.c1)))))AND((- (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOTNULL))) ORDER BY ((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(((NULL)IS(vt0.c1)))))AND((- (vt0.c1))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ('e|') ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('e|') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('e|') ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('e|') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('e|') ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((((((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(t0.c0)))));
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)&(t0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)&(t0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(t0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)&(t0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))) AND ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON CASE WHEN 0.3167824131543939 THEN rt0.c3 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (rt0.c2 IN (vt0.c1, t0.c0)) THEN CAST(rt0.c0 AS TEXT) END WHERE (COALESCE(DISTINCT rt0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)), ((rt0.c0) NOT NULL), ((vt0.c1)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)), ((rt0.c0) NOT NULL), ((vt0.c1)<(vt0.c0)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON CASE WHEN 0.3167824131543939 THEN rt0.c3 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (rt0.c2 IN (vt0.c1, t0.c0)) THEN CAST(rt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON CASE WHEN 0.3167824131543939 THEN rt0.c3 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (rt0.c2 IN (vt0.c1, t0.c0)) THEN CAST(rt0.c0 AS TEXT) END WHERE (COALESCE(DISTINCT rt0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)), ((rt0.c0) NOT NULL), ((vt0.c1)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)), ((rt0.c0) NOT NULL), ((vt0.c1)<(vt0.c0)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON CASE WHEN 0.3167824131543939 THEN rt0.c3 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (rt0.c2 IN (vt0.c1, t0.c0)) THEN CAST(rt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON CASE WHEN 0.3167824131543939 THEN rt0.c3 WHEN CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN (rt0.c2 IN (vt0.c1, t0.c0)) THEN CAST(rt0.c0 AS TEXT) END WHERE (COALESCE(DISTINCT rt0.c0 COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)), ((rt0.c0) NOT NULL), ((vt0.c1)<(vt0.c0))));
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY);
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY);
SELECT * FROM rt0, t0 FULL OUTER JOIN vt0 ON CAST(rt0.c0 AS REAL) COLLATE BINARY WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (rt0.c0) AND ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1)%(rt0.c2)))OR((rt0.c0 IN (vt0.c0)))))AND(((rt0.c1)=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)%(rt0.c2)))OR((rt0.c0 IN (vt0.c0)))))AND(((rt0.c1)==(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1)%(rt0.c2)))OR((rt0.c0 IN (vt0.c0)))))AND(((rt0.c1)=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)%(rt0.c2)))OR((rt0.c0 IN (vt0.c0)))))AND(((rt0.c1)==(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1)%(rt0.c2)))OR((rt0.c0 IN (vt0.c0)))))AND(((rt0.c1)=(rt0.c3)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(rt0.c1)))AND(UNICODE(vt0.c1))))AND(((rt0.c3)&(rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOTNULL))AND((((vt0.c0, rt0.c1, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c1, 'O࿳ZW-<u', rt0.c2))))))AND((+ (rt0.c1)))) WHERE ((((((rt0.c0 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))AND(((((vt0.c1)AND(rt0.c0)))AND(vt0.c1))))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS FIRST, UNLIKELY(((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))AND(((((vt0.c1)AND(rt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(rt0.c1)))AND(UNICODE(vt0.c1))))AND(((rt0.c3)&(rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOTNULL))AND((((vt0.c0, rt0.c1, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c1, 'O࿳ZW-<u', rt0.c2))))))AND((+ (rt0.c1)))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS FIRST, UNLIKELY(((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(rt0.c1)))AND(UNICODE(vt0.c1))))AND(((rt0.c3)&(rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOTNULL))AND((((vt0.c0, rt0.c1, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c1, 'O࿳ZW-<u', rt0.c2))))))AND((+ (rt0.c1)))) WHERE ((((((rt0.c0 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))AND(((((vt0.c1)AND(rt0.c0)))AND(vt0.c1))))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS FIRST, UNLIKELY(((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(CASE WHEN vt0.c0 THEN t0.c0 END)))AND(((((vt0.c1)AND(rt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c0)AND(rt0.c1)))AND(UNICODE(vt0.c1))))AND(((rt0.c3)&(rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOTNULL))AND((((vt0.c0, rt0.c1, x'', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c1, 'O࿳ZW-<u', rt0.c2))))))AND((+ (rt0.c1)))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS FIRST, UNLIKELY(((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)>(rt0.c1 COLLATE BINARY))) ORDER BY (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, 'K/Fl])')) AND (('-1246761733', rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, 'K/Fl])')) AND (('-1246761733', rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(rt0.c3))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)>(rt0.c1 COLLATE BINARY))) ORDER BY (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, 'K/Fl])')) AND (('-1246761733', rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, 'K/Fl])')) AND (('-1246761733', rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(rt0.c3))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)>(rt0.c1 COLLATE BINARY))) ORDER BY (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, 'K/Fl])')) AND (('-1246761733', rt0.c0, rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (SQLITE_COMPILEOPTION_GET(rt0.c3)));
SELECT ALL * FROM rt0, vt0, t0 WHERE (LOWER(DISTINCT ((0.0687832171521201) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((0.0687832171521201) NOT BETWEEN (NULL) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (LOWER(DISTINCT ((0.0687832171521201) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((0.0687832171521201) NOT BETWEEN (NULL) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (LOWER(DISTINCT ((0.0687832171521201) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(x'' AS NUMERIC))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(x'' AS NUMERIC))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(x'' AS NUMERIC))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(x'' AS NUMERIC))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(CAST(vt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS FALSE));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON t0.c0 WHERE (((((((((((rt0.c1)<(rt0.c3)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c3)))AND(0.03170860672721765)))AND(((vt0.c0)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)<(rt0.c3)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c3)))AND(0.03170860672721765)))AND(((vt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON t0.c0);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON t0.c0 WHERE (((((((((((rt0.c1)<(rt0.c3)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c3)))AND(0.03170860672721765)))AND(((vt0.c0)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)<(rt0.c3)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c3)))AND(0.03170860672721765)))AND(((vt0.c0)==(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON t0.c0);
SELECT * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON t0.c0 WHERE (((((((((((rt0.c1)<(rt0.c3)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c3)))AND(0.03170860672721765)))AND(((vt0.c0)=(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c1 AS INTEGER)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9163124083184016))))<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9163124083184016))))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9163124083184016))))<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9163124083184016))))<=((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9163124083184016))))<=((vt0.c0 IN ()))));
SELECT * FROM rt0, t0, vt0 WHERE ((((x'', vt0.c1, t0.c0)) NOT BETWEEN ((((x'') ISNULL), (NOT (rt0.c3)), ((rt0.c0) ISNULL))) AND ((1.79743664E8, (((t0.c0, vt0.c1, rt0.c2))<((rt0.c1, t0.c0, rt0.c0))), ((rt0.c1)IS(rt0.c2)))))) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (CAST(0.6743127363872706 AS REAL)) AND (((x'2445')||(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c1, t0.c0)) NOT BETWEEN ((((x'') ISNULL), (NOT (rt0.c3)), ((rt0.c0) ISNULL))) AND ((1.79743664E8, (((t0.c0, vt0.c1, rt0.c2))<((rt0.c1, t0.c0, rt0.c0))), ((rt0.c1)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (CAST(0.6743127363872706 AS REAL)) AND (((x'2445')||(t0.c0))))  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE ((((x'', vt0.c1, t0.c0)) NOT BETWEEN ((((x'') ISNULL), (NOT (rt0.c3)), ((rt0.c0) ISNULL))) AND ((1.79743664E8, (((t0.c0, vt0.c1, rt0.c2))<((rt0.c1, t0.c0, rt0.c0))), ((rt0.c1)IS(rt0.c2)))))) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (CAST(0.6743127363872706 AS REAL)) AND (((x'2445')||(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c1, t0.c0)) NOT BETWEEN ((((x'') ISNULL), (NOT (rt0.c3)), ((rt0.c0) ISNULL))) AND ((1.79743664E8, (((t0.c0, vt0.c1, rt0.c2))<((rt0.c1, t0.c0, rt0.c0))), ((rt0.c1)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (CAST(0.6743127363872706 AS REAL)) AND (((x'2445')||(t0.c0))))  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE ((((x'', vt0.c1, t0.c0)) NOT BETWEEN ((((x'') ISNULL), (NOT (rt0.c3)), ((rt0.c0) ISNULL))) AND ((1.79743664E8, (((t0.c0, vt0.c1, rt0.c2))<((rt0.c1, t0.c0, rt0.c0))), ((rt0.c1)IS(rt0.c2)))))) ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (CAST(0.6743127363872706 AS REAL)) AND (((x'2445')||(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN ((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c1, '|ꁼ')) AND ((',3ંeu\', rt0.c2, rt0.c3)))) AND (t0.c0 COLLATE BINARY)) WHERE (-5.8195699E8) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)OR(((t0.c0) BETWEEN (vt0.c1) AND ('-1521920722')))))AND(((rt0.c1)=(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-5.8195699E8) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN ((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c1, '|ꁼ')) AND ((',3ંeu\', rt0.c2, rt0.c3)))) AND (t0.c0 COLLATE BINARY)) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)OR(((t0.c0) BETWEEN (vt0.c1) AND ('-1521920722')))))AND(((rt0.c1)=(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN ((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c1, '|ꁼ')) AND ((',3ંeu\', rt0.c2, rt0.c3)))) AND (t0.c0 COLLATE BINARY)) WHERE (-5.8195699E8) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)OR(((t0.c0) BETWEEN (vt0.c1) AND ('-1521920722')))))AND(((rt0.c1)=(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-5.8195699E8) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN ((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c1, '|ꁼ')) AND ((',3ંeu\', rt0.c2, rt0.c3)))) AND (t0.c0 COLLATE BINARY)) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)OR(((t0.c0) BETWEEN (vt0.c1) AND ('-1521920722')))))AND(((rt0.c1)=(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN ((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c3, rt0.c1, '|ꁼ')) AND ((',3ંeu\', rt0.c2, rt0.c3)))) AND (t0.c0 COLLATE BINARY)) WHERE (-5.8195699E8) ORDER BY ((((CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)OR(((t0.c0) BETWEEN (vt0.c1) AND ('-1521920722')))))AND(((rt0.c1)=(rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT * FROM vt0, rt0 WHERE (((JULIANDAY(rt0.c2, vt0.c0, rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(rt0.c2, vt0.c0, rt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((JULIANDAY(rt0.c2, vt0.c0, rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(rt0.c2, vt0.c0, rt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((JULIANDAY(rt0.c2, vt0.c0, rt0.c1)) IS FALSE));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)))) ORDER BY LIKELY((('^\nrf')>>(vt0.c1)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY LIKELY((('^\nrf')>>(vt0.c1)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)))) ORDER BY LIKELY((('^\nrf')>>(vt0.c1)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY LIKELY((('^\nrf')>>(vt0.c1)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)))) ORDER BY LIKELY((('^\nrf')>>(vt0.c1)))  NULLS LAST, (((t0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c0)&(t0.c0)))));
SELECT ALL * FROM rt0 WHERE (LIKELY(((rt0.c0) BETWEEN (0.9774250740202551) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0) BETWEEN (0.9774250740202551) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(((rt0.c0) BETWEEN (0.9774250740202551) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c0) BETWEEN (0.9774250740202551) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(((rt0.c0) BETWEEN (0.9774250740202551) AND (rt0.c3))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((((rt0.c0 IN ('')))OR(((((rt0.c3)OR(t0.c0)))OR(0.8548776519080917)))))AND((((t0.c0))<=((rt0.c3))))))OR(((rt0.c0)&(rt0.c1)))))OR(TRIM(rt0.c1, rt0.c3)))) ORDER BY ((((rt0.c2)!=(rt0.c3)))>((((t0.c0, t0.c0, -725131368))<>((rt0.c0, rt0.c2, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0 IN ('')))OR(((((rt0.c3)OR(t0.c0)))OR(0.8548776519080917)))))AND((((t0.c0))<=((rt0.c3))))))OR(((rt0.c0)&(rt0.c1)))))OR(TRIM(rt0.c1, rt0.c3)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)<>(rt0.c3)))>((((t0.c0, t0.c0, -725131368))<>((rt0.c0, rt0.c2, rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((((rt0.c0 IN ('')))OR(((((rt0.c3)OR(t0.c0)))OR(0.8548776519080917)))))AND((((t0.c0))<=((rt0.c3))))))OR(((rt0.c0)&(rt0.c1)))))OR(TRIM(rt0.c1, rt0.c3)))) ORDER BY ((((rt0.c2)!=(rt0.c3)))>((((t0.c0, t0.c0, -725131368))<>((rt0.c0, rt0.c2, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0 IN ('')))OR(((((rt0.c3)OR(t0.c0)))OR(0.8548776519080917)))))AND((((t0.c0))<=((rt0.c3))))))OR(((rt0.c0)&(rt0.c1)))))OR(TRIM(rt0.c1, rt0.c3)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)<>(rt0.c3)))>((((t0.c0, t0.c0, -725131368))<>((rt0.c0, rt0.c2, rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((((rt0.c0 IN ('')))OR(((((rt0.c3)OR(t0.c0)))OR(0.8548776519080917)))))AND((((t0.c0))<=((rt0.c3))))))OR(((rt0.c0)&(rt0.c1)))))OR(TRIM(rt0.c1, rt0.c3)))) ORDER BY ((((rt0.c2)!=(rt0.c3)))>((((t0.c0, t0.c0, -725131368))<>((rt0.c0, rt0.c2, rt0.c3))))) ASC;
SELECT * FROM rt0 WHERE (((('', CAST(rt0.c2 AS REAL), RTRIM(rt0.c0)))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c1 IN ()), x'')))) ORDER BY ((((((((((rt0.c0)<<(rt0.c0)))AND(((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))))OR(((rt0.c3) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '1678189329' WHEN rt0.c1 THEN rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('', CAST(rt0.c2 AS REAL), RTRIM(rt0.c0)))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c1 IN ()), x'')))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<<(rt0.c0)))AND(((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))))OR(((rt0.c3) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '1678189329' WHEN rt0.c1 THEN rt0.c3 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((('', CAST(rt0.c2 AS REAL), RTRIM(rt0.c0)))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c1 IN ()), x'')))) ORDER BY ((((((((((rt0.c0)<<(rt0.c0)))AND(((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))))OR(((rt0.c3) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '1678189329' WHEN rt0.c1 THEN rt0.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('', CAST(rt0.c2 AS REAL), RTRIM(rt0.c0)))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c1 IN ()), x'')))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<<(rt0.c0)))AND(((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))))OR(((rt0.c3) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '1678189329' WHEN rt0.c1 THEN rt0.c3 END))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((('', CAST(rt0.c2 AS REAL), RTRIM(rt0.c0)))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, (rt0.c1 IN ()), x'')))) ORDER BY ((((((((((rt0.c0)<<(rt0.c0)))AND(((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))))OR(((rt0.c3) IS TRUE))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '1678189329' WHEN rt0.c1 THEN rt0.c3 END))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c0 IN ()))OR((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))))AND(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((+ ((t0.c0 IN (rt0.c1))))) ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE rt0.c1 COLLATE RTRIM END DESC  NULLS FIRST, (((((vt0.c1 IN (t0.c0, vt0.c0)))AND(CASE vt0.c1  WHEN rt0.c2 THEN 710323751 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((+ ((t0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE rt0.c1 COLLATE RTRIM END DESC  NULLS FIRST, (((((vt0.c1 IN (t0.c0, vt0.c0)))AND(CASE vt0.c1  WHEN rt0.c2 THEN 710323751 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((+ ((t0.c0 IN (rt0.c1))))) ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE rt0.c1 COLLATE RTRIM END DESC  NULLS FIRST, (((((vt0.c1 IN (t0.c0, vt0.c0)))AND(CASE vt0.c1  WHEN rt0.c2 THEN 710323751 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((+ ((t0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE rt0.c1 COLLATE RTRIM END DESC  NULLS FIRST, (((((vt0.c1 IN (t0.c0, vt0.c0)))AND(CASE vt0.c1  WHEN rt0.c2 THEN 710323751 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((+ ((t0.c0 IN (rt0.c1))))) ORDER BY CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE rt0.c1 COLLATE RTRIM END DESC  NULLS FIRST, (((((vt0.c1 IN (t0.c0, vt0.c0)))AND(CASE vt0.c1  WHEN rt0.c2 THEN 710323751 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS TEXT)));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CASE WHEN '101283352' THEN vt0.c1 ELSE ((vt0.c0)&(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN '101283352' THEN vt0.c1 ELSE ((vt0.c0)&(vt0.c1)) END DESC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CASE WHEN '101283352' THEN vt0.c1 ELSE ((vt0.c0)&(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN '101283352' THEN vt0.c1 ELSE ((vt0.c0)&(vt0.c1)) END DESC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CASE WHEN '101283352' THEN vt0.c1 ELSE ((vt0.c0)&(vt0.c1)) END DESC;
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) ORDER BY ((vt0.c1)GLOB(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)GLOB(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) ORDER BY ((vt0.c1)GLOB(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)GLOB(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) ORDER BY ((vt0.c1)GLOB(CAST(vt0.c0 AS REAL)));
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS TEXT)) ORDER BY UNICODE(x'') COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY UNICODE(x'') COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS TEXT)) ORDER BY UNICODE(x'') COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY UNICODE(x'') COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS TEXT)) ORDER BY UNICODE(x'') COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE)) ORDER BY (((CAST(rt0.c2 AS REAL), (rt0.c2 IN ('-2068276544')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))!=((rt0.c1, (rt0.c0 IN (x'')), CASE WHEN rt0.c2 THEN '-581956990' END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c2 AS REAL), (rt0.c2 IN ('-2068276544')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))!=((rt0.c1, (rt0.c0 IN (x'')), CASE WHEN rt0.c2 THEN '-581956990' END))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE)) ORDER BY (((CAST(rt0.c2 AS REAL), (rt0.c2 IN ('-2068276544')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))!=((rt0.c1, (rt0.c0 IN (x'')), CASE WHEN rt0.c2 THEN '-581956990' END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c2 AS REAL), (rt0.c2 IN ('-2068276544')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))!=((rt0.c1, (rt0.c0 IN (x'')), CASE WHEN rt0.c2 THEN '-581956990' END))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE)) ORDER BY (((CAST(rt0.c2 AS REAL), (rt0.c2 IN ('-2068276544')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))))!=((rt0.c1, (rt0.c0 IN (x'')), CASE WHEN rt0.c2 THEN '-581956990' END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)<<(0.3763099456557766)) THEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((x'')LIKE(rt0.c0)) THEN (rt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST, (((((((((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(rt0.c2 COLLATE NOCASE)))OR((((vt0.c1, vt0.c1, rt0.c3)) BETWEEN ((vt0.c0, rt0.c3, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c0))))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN (rt0.c2, rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)<<(0.3763099456557766)) THEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((x'')LIKE(rt0.c0)) THEN (rt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST, (((((((((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(rt0.c2 COLLATE NOCASE)))OR((((vt0.c1, vt0.c1, rt0.c3)) BETWEEN ((vt0.c0, rt0.c3, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c0))))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN (rt0.c2, rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)<<(0.3763099456557766)) THEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((x'')LIKE(rt0.c0)) THEN (rt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST, (((((((((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(rt0.c2 COLLATE NOCASE)))OR((((vt0.c1, vt0.c1, rt0.c3)) BETWEEN ((vt0.c0, rt0.c3, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c0))))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN (rt0.c2, rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)<<(0.3763099456557766)) THEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((x'')LIKE(rt0.c0)) THEN (rt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST, (((((((((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(rt0.c2 COLLATE NOCASE)))OR((((vt0.c1, vt0.c1, rt0.c3)) BETWEEN ((vt0.c0, rt0.c3, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c0))))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN (rt0.c2, rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST, CASE WHEN ((rt0.c0)<<(0.3763099456557766)) THEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((x'')LIKE(rt0.c0)) THEN (rt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c1 END THEN ((rt0.c1)IS NOT(rt0.c2)) END  NULLS LAST, (((((((((((rt0.c3)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(rt0.c2 COLLATE NOCASE)))OR((((vt0.c1, vt0.c1, rt0.c3)) BETWEEN ((vt0.c0, rt0.c3, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c0))))))AND((rt0.c2 IN (rt0.c1)))))OR((vt0.c0 IN (rt0.c2, rt0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST, TRIM(LIKELY(DISTINCT '179743664')) ASC  NULLS FIRST, ((t0.c0) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST, TRIM(LIKELY(DISTINCT '179743664')) ASC  NULLS FIRST, ((t0.c0) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST, TRIM(LIKELY(DISTINCT '179743664')) ASC  NULLS FIRST, ((t0.c0) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST, TRIM(LIKELY(DISTINCT '179743664')) ASC  NULLS FIRST, ((t0.c0) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB)) ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS FIRST, TRIM(LIKELY(DISTINCT '179743664')) ASC  NULLS FIRST, ((t0.c0) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c2, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c2, t0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c2, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c2, t0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c2, t0.c0))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((+ (rt0.c2)) IN ()) CROSS JOIN rt0 ON CASE (t0.c0 IN ())  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c3)) THEN CASE rt0.c1  WHEN rt0.c3 THEN 0.3284229337423056 END ELSE (NOT (t0.c0)) END WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((+ (rt0.c2)) IN ()) CROSS JOIN rt0 ON CASE (t0.c0 IN ())  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c3)) THEN CASE rt0.c1  WHEN rt0.c3 THEN 0.3284229337423056 END ELSE (NOT (t0.c0)) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((+ (rt0.c2)) IN ()) CROSS JOIN rt0 ON CASE (t0.c0 IN ())  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c3)) THEN CASE rt0.c1  WHEN rt0.c3 THEN 0.3284229337423056 END ELSE (NOT (t0.c0)) END WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((+ (rt0.c2)) IN ()) CROSS JOIN rt0 ON CASE (t0.c0 IN ())  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c3)) THEN CASE rt0.c1  WHEN rt0.c3 THEN 0.3284229337423056 END ELSE (NOT (t0.c0)) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((+ (rt0.c2)) IN ()) CROSS JOIN rt0 ON CASE (t0.c0 IN ())  WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c3)) THEN CASE rt0.c1  WHEN rt0.c3 THEN 0.3284229337423056 END ELSE (NOT (t0.c0)) END WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c0 WHEN '1070390045' THEN rt0.c2 WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN t0.c0 WHEN '1070390045' THEN rt0.c2 WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c0 WHEN '1070390045' THEN rt0.c2 WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN t0.c0 WHEN '1070390045' THEN rt0.c2 WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN t0.c0 WHEN '1070390045' THEN rt0.c2 WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((NULL)) NOT BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((-1179541811)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((-1179541811)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((NULL)) NOT BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((-1179541811)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((NULL)) NOT BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((-1179541811)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((NULL)) NOT BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((-1179541811)))) ORDER BY t0.c0 ASC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((((vt0.c1, rt0.c2, vt0.c1, rt0.c3, t0.c0))<((rt0.c2, rt0.c3, vt0.c1, rt0.c1, vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1, rt0.c2, vt0.c1, rt0.c3, t0.c0))<((rt0.c2, rt0.c3, vt0.c1, rt0.c1, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((((vt0.c1, rt0.c2, vt0.c1, rt0.c3, t0.c0))<((rt0.c2, rt0.c3, vt0.c1, rt0.c1, vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1, rt0.c2, vt0.c1, rt0.c3, t0.c0))<((rt0.c2, rt0.c3, vt0.c1, rt0.c1, vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((((vt0.c1, rt0.c2, vt0.c1, rt0.c3, t0.c0))<((rt0.c2, rt0.c3, vt0.c1, rt0.c1, vt0.c1))) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c1)))OR(x'')))OR((((rt0.c0))<=((rt0.c1)))))) ORDER BY ((rt0.c1)>=((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)IS(rt0.c1)))OR(x'')))OR((((rt0.c0))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)>=((+ (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c1)))OR(x'')))OR((((rt0.c0))<=((rt0.c1)))))) ORDER BY ((rt0.c1)>=((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)IS(rt0.c1)))OR(x'')))OR((((rt0.c0))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)>=((+ (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c1)))OR(x'')))OR((((rt0.c0))<=((rt0.c1)))))) ORDER BY ((rt0.c1)>=((+ (rt0.c0)))) ASC;
SELECT ALL * FROM t0, vt0 WHERE ((((+ (t0.c0)))&(((vt0.c0) NOTNULL)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))&(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (t0.c0)))&(((vt0.c0) NOTNULL)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))&(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (t0.c0)))&(((vt0.c0) NOTNULL)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 END) NOT BETWEEN (LIKELIHOOD(rt0.c2, 0.5083066848609935)) AND ((~ (rt0.c2)))) WHERE (((((-2068276544 IN ()), ((rt0.c0)/(rt0.c0)), (NOT (rt0.c3))))==(((- (rt0.c0)), (('0.0') IS TRUE), ((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((-2068276544 IN ()), ((rt0.c0)/(rt0.c0)), (NOT (rt0.c3))))==(((- (rt0.c0)), (('0.0') IS TRUE), ((rt0.c3) ISNULL))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 END) NOT BETWEEN (LIKELIHOOD(rt0.c2, 0.5083066848609935)) AND ((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 END) NOT BETWEEN (LIKELIHOOD(rt0.c2, 0.5083066848609935)) AND ((~ (rt0.c2)))) WHERE (((((-2068276544 IN ()), ((rt0.c0)/(rt0.c0)), (NOT (rt0.c3))))==(((- (rt0.c0)), (('0.0') IS TRUE), ((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((-2068276544 IN ()), ((rt0.c0)/(rt0.c0)), (NOT (rt0.c3))))==(((- (rt0.c0)), (('0.0') IS TRUE), ((rt0.c3) ISNULL))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 END) NOT BETWEEN (LIKELIHOOD(rt0.c2, 0.5083066848609935)) AND ((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c2 END) NOT BETWEEN (LIKELIHOOD(rt0.c2, 0.5083066848609935)) AND ((~ (rt0.c2)))) WHERE (((((-2068276544 IN ()), ((rt0.c0)/(rt0.c0)), (NOT (rt0.c3))))==(((- (rt0.c0)), (('0.0') IS TRUE), ((rt0.c3) ISNULL)))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (t0.c0) AND ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (t0.c0) AND ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (t0.c0) AND ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (t0.c0) AND ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (t0.c0) AND ((- (rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0)<=(vt0.c0)) AS BLOB)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0)<=(vt0.c0)) AS BLOB)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0)<=(vt0.c0)) AS BLOB)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (COALESCE(((rt0.c0) NOTNULL), 0X48d19094));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c0) NOTNULL), 0X48d19094)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (COALESCE(((rt0.c0) NOTNULL), 0X48d19094));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c0) NOTNULL), 0X48d19094)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (COALESCE(((rt0.c0) NOTNULL), 0X48d19094));
SELECT ALL * FROM t0, vt0 WHERE (0.16013822889998897) ORDER BY TYPEOF(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.16013822889998897) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (0.16013822889998897) ORDER BY TYPEOF(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.16013822889998897) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (0.16013822889998897) ORDER BY TYPEOF(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((~ (((NULL) IS FALSE)))) ORDER BY SUBSTR(rt0.c1, rt0.c1) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SUBSTR(rt0.c1, rt0.c1) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((~ (((NULL) IS FALSE)))) ORDER BY SUBSTR(rt0.c1, rt0.c1) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((NULL) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SUBSTR(rt0.c1, rt0.c1) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((~ (((NULL) IS FALSE)))) ORDER BY SUBSTR(rt0.c1, rt0.c1) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS REAL));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt0.c1)))>(((rt0.c3) ISNULL))) LEFT OUTER JOIN vt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (x'') AND (NULL)) WHERE ((NOT (((((((((((((NULL)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((((((NULL)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt0.c1)))>(((rt0.c3) ISNULL))) LEFT OUTER JOIN vt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (x'') AND (NULL)));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt0.c1)))>(((rt0.c3) ISNULL))) LEFT OUTER JOIN vt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (x'') AND (NULL)) WHERE ((NOT (((((((((((((NULL)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((((((NULL)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt0.c1)))>(((rt0.c3) ISNULL))) LEFT OUTER JOIN vt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (x'') AND (NULL)));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((rt0.c2 IN (vt0.c1)))>(((rt0.c3) ISNULL))) LEFT OUTER JOIN vt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (x'') AND (NULL)) WHERE ((NOT (((((((((((((NULL)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE ((~ (rtreenode(vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (rtreenode(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((~ (rtreenode(vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (rtreenode(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((~ (rtreenode(vt0.c1, vt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (- (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST, UPPER(LIKELIHOOD(rt0.c1, 0.15281417168635947)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST, UPPER(LIKELIHOOD(rt0.c1, 0.15281417168635947)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (- (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST, UPPER(LIKELIHOOD(rt0.c1, 0.15281417168635947)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST, UPPER(LIKELIHOOD(rt0.c1, 0.15281417168635947)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY (- (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST, UPPER(LIKELIHOOD(rt0.c1, 0.15281417168635947)) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0))) IS FALSE));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN -1888714688 END) AND (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN -1888714688 END) AND (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN -1888714688 END) AND (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN -1888714688 END) AND (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) ORDER BY ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN -1888714688 END) AND (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(vt0.c0)))AND(((((rt0.c0)OR(vt0.c0)))AND(t0.c0)))) INNER JOIN vt0 ON ((((((x'')!=(t0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN vt0.c0 END)) WHERE ((TRIM(DISTINCT rt0.c0, vt0.c0) IN ((t0.c0 IN (1.221693588E9, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c0, vt0.c0) IN ((t0.c0 IN (1.221693588E9, t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(vt0.c0)))AND(((((rt0.c0)OR(vt0.c0)))AND(t0.c0)))) INNER JOIN vt0 ON ((((((x'')!=(t0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN vt0.c0 END)));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(vt0.c0)))AND(((((rt0.c0)OR(vt0.c0)))AND(t0.c0)))) INNER JOIN vt0 ON ((((((x'')!=(t0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN vt0.c0 END)) WHERE ((TRIM(DISTINCT rt0.c0, vt0.c0) IN ((t0.c0 IN (1.221693588E9, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c0, vt0.c0) IN ((t0.c0 IN (1.221693588E9, t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(vt0.c0)))AND(((((rt0.c0)OR(vt0.c0)))AND(t0.c0)))) INNER JOIN vt0 ON ((((((x'')!=(t0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN vt0.c0 END)));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(vt0.c0)))AND(((((rt0.c0)OR(vt0.c0)))AND(t0.c0)))) INNER JOIN vt0 ON ((((((x'')!=(t0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN vt0.c0 END)) WHERE ((TRIM(DISTINCT rt0.c0, vt0.c0) IN ((t0.c0 IN (1.221693588E9, t0.c0)))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((NOT (0x710d1813)) AS NUMERIC)) ORDER BY (~ (((((((((x'19c0')OR(NULL)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (0X710d1813)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (~ (((((((((x'19c0')OR(NULL)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((NOT (0x710d1813)) AS NUMERIC)) ORDER BY (~ (((((((((x'19c0')OR(NULL)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (0X710d1813)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (~ (((((((((x'19c0')OR(NULL)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST((NOT (0x710d1813)) AS NUMERIC)) ORDER BY (~ (((((((((x'19c0')OR(NULL)))AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT * FROM vt0, rt0 WHERE ((- (((vt0.c0)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)*(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (((vt0.c0)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)*(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (((vt0.c0)*(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0))<=((rt0.c1))) END FULL OUTER JOIN t0 ON ((rt0.c0)||(CAST(vt0.c0 AS NUMERIC))) WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) ORDER BY IFNULL(CASE WHEN rt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM) DESC, (((t0.c0)) BETWEEN (((~ (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0))<=((rt0.c1))) END FULL OUTER JOIN t0 ON ((rt0.c0)||(CAST(vt0.c0 AS NUMERIC))) ORDER BY IFNULL(CASE WHEN rt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM) DESC, (((t0.c0)) BETWEEN (((~ (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0))<=((rt0.c1))) END FULL OUTER JOIN t0 ON ((rt0.c0)||(CAST(vt0.c0 AS NUMERIC))) WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) ORDER BY IFNULL(CASE WHEN rt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM) DESC, (((t0.c0)) BETWEEN (((~ (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN (((rt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0))<=((rt0.c1))) END FULL OUTER JOIN t0 ON ((rt0.c0)||(CAST(vt0.c0 AS NUMERIC))) ORDER BY IFNULL(CASE WHEN rt0.c0 THEN rt0.c2 END, vt0.c1 COLLATE RTRIM) DESC, (((t0.c0)) BETWEEN (((~ (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))|((~ (rt0.c1))))) ORDER BY ((0.11670614779746669)<=(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))|((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.11670614779746669)<=(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))|((~ (rt0.c1))))) ORDER BY ((0.11670614779746669)<=(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0)))|((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.11670614779746669)<=(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0)))|((~ (rt0.c1))))) ORDER BY ((0.11670614779746669)<=(rt0.c3 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((('_9*3BzSa')AND(rt0.c3)))AND(rt0.c0))))) ORDER BY CASE (((-7.99857666E8))<((rt0.c1)))  WHEN rt0.c1 THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) THEN (NOT (rt0.c2)) ELSE ((rt0.c2)+(0.6825124656376821)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((('_9*3BzSa')AND(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((-7.99857666E8))<((rt0.c1)))  WHEN rt0.c1 THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) THEN (NOT (rt0.c2)) ELSE ((rt0.c2)+(0.6825124656376821)) END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((('_9*3BzSa')AND(rt0.c3)))AND(rt0.c0))))) ORDER BY CASE (((-7.99857666E8))<((rt0.c1)))  WHEN rt0.c1 THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) THEN (NOT (rt0.c2)) ELSE ((rt0.c2)+(0.6825124656376821)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((('_9*3BzSa')AND(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (((-7.99857666E8))<((rt0.c1)))  WHEN rt0.c1 THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) THEN (NOT (rt0.c2)) ELSE ((rt0.c2)+(0.6825124656376821)) END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((('_9*3BzSa')AND(rt0.c3)))AND(rt0.c0))))) ORDER BY CASE (((-7.99857666E8))<((rt0.c1)))  WHEN rt0.c1 THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((((rt0.c0)AND(NULL)))OR(rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) THEN (NOT (rt0.c2)) ELSE ((rt0.c2)+(0.6825124656376821)) END ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF((((t0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c0, rt0.c0))), rt0.c2 COLLATE BINARY)) ORDER BY CAST(((rt0.c1)>(vt0.c0)) AS TEXT), ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c1 WHEN vt0.c1 THEN '' WHEN NULL THEN rt0.c2 ELSE vt0.c0 END) AND (((vt0.c1)<(rt0.c3)))) ASC, CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((t0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c0, rt0.c0))), rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(((rt0.c1)>(vt0.c0)) AS TEXT), ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c1 WHEN vt0.c1 THEN '' WHEN NULL THEN rt0.c2 ELSE vt0.c0 END) AND (((vt0.c1)<(rt0.c3)))) ASC, CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF((((t0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c0, rt0.c0))), rt0.c2 COLLATE BINARY)) ORDER BY CAST(((rt0.c1)>(vt0.c0)) AS TEXT), ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c1 WHEN vt0.c1 THEN '' WHEN NULL THEN rt0.c2 ELSE vt0.c0 END) AND (((vt0.c1)<(rt0.c3)))) ASC, CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((t0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c0, rt0.c0))), rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(((rt0.c1)>(vt0.c0)) AS TEXT), ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c1 WHEN vt0.c1 THEN '' WHEN NULL THEN rt0.c2 ELSE vt0.c0 END) AND (((vt0.c1)<(rt0.c3)))) ASC, CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF((((t0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c0, rt0.c0))), rt0.c2 COLLATE BINARY)) ORDER BY CAST(((rt0.c1)>(vt0.c0)) AS TEXT), ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c1 WHEN vt0.c1 THEN '' WHEN NULL THEN rt0.c2 ELSE vt0.c0 END) AND (((vt0.c1)<(rt0.c3)))) ASC, CAST(((rt0.c3) IS FALSE) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN x'' THEN rt0.c2 ELSE ((t0.c0) IS TRUE) END) ORDER BY '-1599282240';
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE NOCASE  WHEN x'' THEN rt0.c2 ELSE ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY '-1599282240');
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN x'' THEN rt0.c2 ELSE ((t0.c0) IS TRUE) END) ORDER BY '-1599282240';
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE NOCASE  WHEN x'' THEN rt0.c2 ELSE ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY '-1599282240');
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN x'' THEN rt0.c2 ELSE ((t0.c0) IS TRUE) END) ORDER BY '-1599282240';
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)||(rt0.c0)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)||(rt0.c0)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)||(rt0.c0)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)||(rt0.c0)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)||(rt0.c0)))AND(rt0.c1 COLLATE BINARY)))AND((NOT (rt0.c1)))));
SELECT ALL * FROM rt0, t0 WHERE ((t0.c0 IN (0Xfffffffff787199f, rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN (0Xfffffffff787199f, rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((t0.c0 IN (0Xfffffffff787199f, rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t0.c0 IN (0Xfffffffff787199f, rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((t0.c0 IN (0Xfffffffff787199f, rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT t0.c0)) NOTNULL) WHERE (CASE WHEN CASE NULL  WHEN rt0.c2 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN '-309519077' ELSE rt0.c0 END THEN CAST(x'' AS TEXT) ELSE '-749299264' END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))!=((CASE WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c2 END))), rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE NULL  WHEN rt0.c2 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN '-309519077' ELSE rt0.c0 END THEN CAST(x'' AS TEXT) ELSE '-749299264' END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT t0.c0)) NOTNULL) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))<>((CASE WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c2 END))), rt0.c3  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT t0.c0)) NOTNULL) WHERE (CASE WHEN CASE NULL  WHEN rt0.c2 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN '-309519077' ELSE rt0.c0 END THEN CAST(x'' AS TEXT) ELSE '-749299264' END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))!=((CASE WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c2 END))), rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE NULL  WHEN rt0.c2 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN '-309519077' ELSE rt0.c0 END THEN CAST(x'' AS TEXT) ELSE '-749299264' END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT t0.c0)) NOTNULL) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))<>((CASE WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c2 END))), rt0.c3  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((LIKELY(DISTINCT t0.c0)) NOTNULL) WHERE (CASE WHEN CASE NULL  WHEN rt0.c2 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN '-309519077' ELSE rt0.c0 END THEN CAST(x'' AS TEXT) ELSE '-749299264' END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))!=((CASE WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN rt0.c0 WHEN x'' THEN vt0.c0 ELSE rt0.c2 END))), rt0.c3  NULLS LAST;
SELECT * FROM vt0, t0 NOT INDEXED, rt0 WHERE (((((vt0.c1) NOTNULL))*(((vt0.c0)+(rt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))*(((vt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0, t0 NOT INDEXED, rt0 WHERE (((((vt0.c1) NOTNULL))*(((vt0.c0)+(rt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))*(((vt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0, t0 NOT INDEXED, rt0 WHERE (((((vt0.c1) NOTNULL))*(((vt0.c0)+(rt0.c0))))) ORDER BY x'' DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS TRUE));
SELECT * FROM t0, rt0 WHERE ((((NOT ('-900388914'))) IS FALSE)) ORDER BY (((rt0.c1)<('1500885123')) IN ((((rt0.c0))<((rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT ('-900388914'))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)<('1500885123')) IN ((((rt0.c0))<((rt0.c1))))));
SELECT * FROM t0, rt0 WHERE ((((NOT ('-900388914'))) IS FALSE)) ORDER BY (((rt0.c1)<('1500885123')) IN ((((rt0.c0))<((rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT ('-900388914'))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)<('1500885123')) IN ((((rt0.c0))<((rt0.c1))))));
SELECT * FROM t0, rt0 WHERE ((((NOT ('-900388914'))) IS FALSE)) ORDER BY (((rt0.c1)<('1500885123')) IN ((((rt0.c0))<((rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((((t0.c0)&(x'')))=(IFNULL(t0.c0, t0.c0))) ASC, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((t0.c0)&(x'')))==(IFNULL(t0.c0, t0.c0))) ASC, TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((((t0.c0)&(x'')))=(IFNULL(t0.c0, t0.c0))) ASC, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((t0.c0)&(x'')))==(IFNULL(t0.c0, t0.c0))) ASC, TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((((t0.c0)&(x'')))=(IFNULL(t0.c0, t0.c0))) ASC, TOTAL_CHANGES();
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)+(rt0.c3)))|(rt0.c0)) WHERE (((((x'fe52')IS NOT(0.7352543455240369)))<=(rt0.c2))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(0.7100501712695678 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((x'fe52')IS NOT(0.7352543455240369)))<=(rt0.c2))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)+(rt0.c3)))|(rt0.c0)) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(0.7100501712695678 AS TEXT))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)+(rt0.c3)))|(rt0.c0)) WHERE (((((x'fe52')IS NOT(0.7352543455240369)))<=(rt0.c2))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(0.7100501712695678 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((x'fe52')IS NOT(0.7352543455240369)))<=(rt0.c2))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)+(rt0.c3)))|(rt0.c0)) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(0.7100501712695678 AS TEXT))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((vt0.c1)+(rt0.c3)))|(rt0.c0)) WHERE (((((x'fe52')IS NOT(0.7352543455240369)))<=(rt0.c2))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(0.7100501712695678 AS TEXT)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c0 ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY (((((rt0.c0) NOT NULL)))<=((rt0.c2))) ASC, ((NULL)==('oU')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0) NOT NULL)))<=((rt0.c2))) ASC, ((NULL)=('oU')) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY (((((rt0.c0) NOT NULL)))<=((rt0.c2))) ASC, ((NULL)==('oU')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0) NOT NULL)))<=((rt0.c2))) ASC, ((NULL)=('oU')) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY (((((rt0.c0) NOT NULL)))<=((rt0.c2))) ASC, ((NULL)==('oU')) DESC  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE ((+ ((((('1733225569')AND(rt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((('1733225569')AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT * FROM vt0, rt0, t0 WHERE ((+ ((((('1733225569')AND(rt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((('1733225569')AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT * FROM vt0, rt0, t0 WHERE ((+ ((((('1733225569')AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((rt0.c1 IN ()))OR(((-6.39899049E8) NOT BETWEEN (rt0.c1) AND (820084672)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (0.1377669646822166)))))AND((NOT (0.8660244969950903)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1 IN ()))OR(((-6.39899049E8) NOT BETWEEN (rt0.c1) AND (820084672)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (0.1377669646822166)))))AND((NOT (0.8660244969950903))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((rt0.c1 IN ()))OR(((-6.39899049E8) NOT BETWEEN (rt0.c1) AND (820084672)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (0.1377669646822166)))))AND((NOT (0.8660244969950903)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1 IN ()))OR(((-6.39899049E8) NOT BETWEEN (rt0.c1) AND (820084672)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (0.1377669646822166)))))AND((NOT (0.8660244969950903))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((rt0.c1 IN ()))OR(((-6.39899049E8) NOT BETWEEN (rt0.c1) AND (820084672)))))OR(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END)))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (0.1377669646822166)))))AND((NOT (0.8660244969950903)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c2)))) AND ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) ORDER BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)) IN ());
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c1)==(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)=(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c1)==(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)=(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c1)==(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '1855197171' THEN rt0.c1 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.46927866549356545)  NULLS FIRST, (~ (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '1855197171' THEN rt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.46927866549356545)  NULLS FIRST, (~ (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '1855197171' THEN rt0.c1 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.46927866549356545)  NULLS FIRST, (~ (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '1855197171' THEN rt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.46927866549356545)  NULLS FIRST, (~ (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN '1855197171' THEN rt0.c1 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT vt0.c0, 0.46927866549356545)  NULLS FIRST, (~ (CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))/((~ (rt0.c2)))) WHERE (LIKELIHOOD(DISTINCT 0.7696820262939776, 0.9917652950787679));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT 0.7696820262939776, 0.9917652950787679)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))/((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))/((~ (rt0.c2)))) WHERE (LIKELIHOOD(DISTINCT 0.7696820262939776, 0.9917652950787679));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT 0.7696820262939776, 0.9917652950787679)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))/((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(vt0.c0 AS REAL))/((~ (rt0.c2)))) WHERE (LIKELIHOOD(DISTINCT 0.7696820262939776, 0.9917652950787679));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT ('786699756')) COLLATE RTRIM) ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN ((((x'268b')OR(rt0.c1)))AND(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('786699756')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN ((((x'268b')OR(rt0.c1)))AND(rt0.c1)) END ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT ('786699756')) COLLATE RTRIM) ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN ((((x'268b')OR(rt0.c1)))AND(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('786699756')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN ((((x'268b')OR(rt0.c1)))AND(rt0.c1)) END ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT ('786699756')) COLLATE RTRIM) ORDER BY CASE WHEN ((vt0.c0)*(rt0.c1)) THEN ((((x'268b')OR(rt0.c1)))AND(rt0.c1)) END ASC;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)|(((t0.c0)>>(t0.c0)))));
SELECT * FROM vt0, t0, rt0 WHERE (((((((vt0.c1)<<('-1888714688')))OR((rt0.c0 IN ()))))OR(highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<<('-1888714688')))OR((rt0.c0 IN ()))))OR(highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((((vt0.c1)<<('-1888714688')))OR((rt0.c0 IN ()))))OR(highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<<('-1888714688')))OR((rt0.c0 IN ()))))OR(highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((((vt0.c1)<<('-1888714688')))OR((rt0.c0 IN ()))))OR(highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)>(rt0.c3))))) ORDER BY CASE WHEN NULL THEN ((rt0.c0)+(rt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((0Xffffffffc618ced2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)>(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN ((rt0.c0)+(rt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((0xffffffffc618ced2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)>(rt0.c3))))) ORDER BY CASE WHEN NULL THEN ((rt0.c0)+(rt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((0Xffffffffc618ced2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)>(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN ((rt0.c0)+(rt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((0xffffffffc618ced2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2)>(rt0.c3))))) ORDER BY CASE WHEN NULL THEN ((rt0.c0)+(rt0.c0)) WHEN (~ (rt0.c3)) THEN ((((((((0Xffffffffc618ced2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((~ (vt0.c1)))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (json_object(vt0.c0, vt0.c1)) AND (((vt0.c0)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ ((~ (vt0.c1)))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (json_object(vt0.c0, vt0.c1)) AND (((vt0.c0)<(vt0.c1)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((~ (vt0.c1)))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (json_object(vt0.c0, vt0.c1)) AND (((vt0.c0)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ ((~ (vt0.c1)))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (json_object(vt0.c0, vt0.c1)) AND (((vt0.c0)<(vt0.c1)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((~ (vt0.c1)))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (json_object(vt0.c0, vt0.c1)) AND (((vt0.c0)<(vt0.c1))));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST((t0.c0 IN (rt0.c2)) AS TEXT) WHERE (rt0.c1) ORDER BY (((rt0.c1)) BETWEEN (('')) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST((t0.c0 IN (rt0.c2)) AS TEXT) ORDER BY (((rt0.c1)) BETWEEN (('')) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST((t0.c0 IN (rt0.c2)) AS TEXT) WHERE (rt0.c1) ORDER BY (((rt0.c1)) BETWEEN (('')) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST((t0.c0 IN (rt0.c2)) AS TEXT) ORDER BY (((rt0.c1)) BETWEEN (('')) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST((t0.c0 IN (rt0.c2)) AS TEXT) WHERE (rt0.c1) ORDER BY (((rt0.c1)) BETWEEN (('')) AND (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE ABS(0.30266203377283296)  WHEN ((rt0.c0)OR(rt0.c0)) THEN (rt0.c2 IN ()) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END END) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>(-1.521920722E9 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(0.30266203377283296)  WHEN ((rt0.c0)OR(rt0.c0)) THEN (rt0.c2 IN ()) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>(-1.521920722E9 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE ABS(0.30266203377283296)  WHEN ((rt0.c0)OR(rt0.c0)) THEN (rt0.c2 IN ()) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END END) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>(-1.521920722E9 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(0.30266203377283296)  WHEN ((rt0.c0)OR(rt0.c0)) THEN (rt0.c2 IN ()) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>(-1.521920722E9 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE ABS(0.30266203377283296)  WHEN ((rt0.c0)OR(rt0.c0)) THEN (rt0.c2 IN ()) ELSE CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 ELSE rt0.c3 END END) ORDER BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>(-1.521920722E9 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((+ (1.855197171E9))) AND (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN ((+ (1.855197171E9))) AND (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((+ (1.855197171E9))) AND (((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN ((+ (1.855197171E9))) AND (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((+ (1.855197171E9))) AND (((vt0.c0)=(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))!=(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END))) ORDER BY (((vt0.c0) IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0) IS FALSE) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))!=(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END))) ORDER BY (((vt0.c0) IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0) IS FALSE) IN ()) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))!=(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END))) ORDER BY (((vt0.c0) IS FALSE) IN ()) ASC;
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOTNULL)) ORDER BY CAST(((rt0.c2)LIKE(rt0.c3)) AS BLOB) DESC  NULLS LAST, (((rt0.c3)) BETWEEN (((+ (rt0.c2)))) AND ((((NULL)IS(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c3)) AS BLOB) DESC  NULLS LAST, (((rt0.c3)) BETWEEN (((+ (rt0.c2)))) AND ((((NULL)IS(rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOTNULL)) ORDER BY CAST(((rt0.c2)LIKE(rt0.c3)) AS BLOB) DESC  NULLS LAST, (((rt0.c3)) BETWEEN (((+ (rt0.c2)))) AND ((((NULL)IS(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c3)) AS BLOB) DESC  NULLS LAST, (((rt0.c3)) BETWEEN (((+ (rt0.c2)))) AND ((((NULL)IS(rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ())) NOTNULL)) ORDER BY CAST(((rt0.c2)LIKE(rt0.c3)) AS BLOB) DESC  NULLS LAST, (((rt0.c3)) BETWEEN (((+ (rt0.c2)))) AND ((((NULL)IS(rt0.c3))))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((CAST(0xffffffffd554e273 AS TEXT), 1518911713, ((t0.c0)LIKE(vt0.c0))))==(((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((rt0.c1) BETWEEN (t0.c0) AND ('-581956990'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0xffffffffd554e273 AS TEXT), 1518911713, ((t0.c0)LIKE(vt0.c0))))==(((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((rt0.c1) BETWEEN (t0.c0) AND ('-581956990')))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((CAST(0xffffffffd554e273 AS TEXT), 1518911713, ((t0.c0)LIKE(vt0.c0))))==(((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((rt0.c1) BETWEEN (t0.c0) AND ('-581956990'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0xffffffffd554e273 AS TEXT), 1518911713, ((t0.c0)LIKE(vt0.c0))))==(((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((rt0.c1) BETWEEN (t0.c0) AND ('-581956990')))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((CAST(0xffffffffd554e273 AS TEXT), 1518911713, ((t0.c0)LIKE(vt0.c0))))==(((rt0.c1 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((rt0.c1) BETWEEN (t0.c0) AND ('-581956990'))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((vt0.c1 IN ())))) ORDER BY ((x'9590')GLOB(((rt0.c1)AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'9590')GLOB(((rt0.c1)AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((vt0.c1 IN ())))) ORDER BY ((x'9590')GLOB(((rt0.c1)AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'9590')GLOB(((rt0.c1)AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((vt0.c1 IN ())))) ORDER BY ((x'9590')GLOB(((rt0.c1)AND(rt0.c2))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((x'', CAST(rt0.c2 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c3)))))==((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c0 END, (t0.c0 IN ()), (+ (NULL))))) WHERE ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 END, ((t0.c0)||(rt0.c3)))) AND ((NULL, ((rt0.c3)*(t0.c0)), ((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 END, ((t0.c0)||(rt0.c3)))) AND ((NULL, ((rt0.c3)*(t0.c0)), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((x'', CAST(rt0.c2 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c3)))))==((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c0 END, (t0.c0 IN ()), (+ (NULL))))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((x'', CAST(rt0.c2 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c3)))))==((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c0 END, (t0.c0 IN ()), (+ (NULL))))) WHERE ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 END, ((t0.c0)||(rt0.c3)))) AND ((NULL, ((rt0.c3)*(t0.c0)), ((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 END, ((t0.c0)||(rt0.c3)))) AND ((NULL, ((rt0.c3)*(t0.c0)), ((t0.c0) NOT NULL))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((x'', CAST(rt0.c2 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c3)))))==((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c0 END, (t0.c0 IN ()), (+ (NULL))))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON (((x'', CAST(rt0.c2 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c3)))))==((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c0 END, (t0.c0 IN ()), (+ (NULL))))) WHERE ((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 END, ((t0.c0)||(rt0.c3)))) AND ((NULL, ((rt0.c3)*(t0.c0)), ((t0.c0) NOT NULL)))));
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (((rt0.c0)||(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c0)||(rt0.c1)) IN ()) ASC);
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (((rt0.c0)||(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c0)||(rt0.c1)) IN ()) ASC);
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (((rt0.c0)||(rt0.c1)) IN ()) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((x'')>=(((vt0.c1)IS(rt0.c0))))) ORDER BY ((0.7956285960261529) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'')>=(((vt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.7956285960261529) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c0 AS BLOB))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((x'')>=(((vt0.c1)IS(rt0.c0))))) ORDER BY ((0.7956285960261529) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'')>=(((vt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.7956285960261529) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c0 AS BLOB))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((x'')>=(((vt0.c1)IS(rt0.c0))))) ORDER BY ((0.7956285960261529) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST(rt0.c0 AS BLOB))) DESC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c3) ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (vt0.c1)), 'N')  NULLS FIRST, CASE WHEN vt0.c1 THEN ((((t0.c0)OR(vt0.c1)))OR(t0.c0)) ELSE rt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (vt0.c1)), 'N')  NULLS FIRST, CASE WHEN vt0.c1 THEN ((((t0.c0)OR(vt0.c1)))OR(t0.c0)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c3) ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (vt0.c1)), 'N')  NULLS FIRST, CASE WHEN vt0.c1 THEN ((((t0.c0)OR(vt0.c1)))OR(t0.c0)) ELSE rt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (vt0.c1)), 'N')  NULLS FIRST, CASE WHEN vt0.c1 THEN ((((t0.c0)OR(vt0.c1)))OR(t0.c0)) ELSE rt0.c1 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c3) ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c1 END, (+ (vt0.c1)), 'N')  NULLS FIRST, CASE WHEN vt0.c1 THEN ((((t0.c0)OR(vt0.c1)))OR(t0.c0)) ELSE rt0.c1 COLLATE RTRIM END;
SELECT COUNT(*) FROM vt0 WHERE (json_valid((NOT (vt0.c1)))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((0.661224093667714) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid((NOT (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((0.661224093667714) IS FALSE) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (json_valid((NOT (vt0.c1)))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((0.661224093667714) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid((NOT (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((0.661224093667714) IS FALSE) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (json_valid((NOT (vt0.c1)))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((0.661224093667714) IS FALSE) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(((vt0.c1)<>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(json_extract(vt0.c1, vt0.c1, vt0.c1, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(((vt0.c1)!=(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(json_extract(vt0.c1, vt0.c1, vt0.c1, vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(((vt0.c1)<>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(json_extract(vt0.c1, vt0.c1, vt0.c1, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(((vt0.c1)!=(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(json_extract(vt0.c1, vt0.c1, vt0.c1, vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(((vt0.c1)<>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((CASE vt0.c0  WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(json_extract(vt0.c1, vt0.c1, vt0.c1, vt0.c1)));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c2)))AND(((0.8548776519080917) NOTNULL))) WHERE (((((rt0.c0)OR(rt0.c0)))OR(x'')) COLLATE RTRIM) ORDER BY 0.9441763515679837  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))OR(x'')) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c2)))AND(((0.8548776519080917) NOTNULL))) ORDER BY 0.9441763515679837  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c2)))AND(((0.8548776519080917) NOTNULL))) WHERE (((((rt0.c0)OR(rt0.c0)))OR(x'')) COLLATE RTRIM) ORDER BY 0.9441763515679837  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))OR(x'')) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(((((((((rt0.c3)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c0)))) FULL OUTER JOIN vt0 ON (((rt0.c2 IN (rt0.c2)))AND(((0.8548776519080917) NOTNULL))) ORDER BY 0.9441763515679837  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN ((- (x''))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((- (x''))) AND (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN ((- (x''))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN ((- (x''))) AND (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN ((- (x''))) AND (rt0.c3)));
SELECT * FROM vt0, rt0 WHERE (x'7366') ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY ASC, ((rt0.c0)-(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'7366') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY ASC, ((rt0.c0)-(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (x'7366') ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY ASC, ((rt0.c0)-(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'7366') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY ASC, ((rt0.c0)-(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (x'7366') ORDER BY CAST(rt0.c2 AS BLOB) COLLATE BINARY ASC, ((rt0.c0)-(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3))) AND ('-725131368')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3))) AND ('-725131368'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3))) AND ('-725131368')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3))) AND ('-725131368'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3))) AND ('-725131368')));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c1))))&(TRIM(DISTINCT rt0.c1)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)/(((rt0.c3) BETWEEN (rt0.c3) AND (x'224c')))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c1))))&(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)/(((rt0.c3) BETWEEN (rt0.c3) AND (x'224c')))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c1))))&(TRIM(DISTINCT rt0.c1)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)/(((rt0.c3) BETWEEN (rt0.c3) AND (x'224c')))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c1))))&(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)/(((rt0.c3) BETWEEN (rt0.c3) AND (x'224c')))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c1))))&(TRIM(DISTINCT rt0.c1)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)/(((rt0.c3) BETWEEN (rt0.c3) AND (x'224c')))) DESC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((~ (rt0.c3)) AS REAL)) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT NULL), (((vt0.c0 COLLATE RTRIM))>((((t0.c0) NOT BETWEEN (vt0.c0) AND (0.15997893598140778))))) DESC, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT NULL), (((vt0.c0 COLLATE RTRIM))>((((t0.c0) NOT BETWEEN (vt0.c0) AND (0.15997893598140778))))) DESC, t0.c0 ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((~ (rt0.c3)) AS REAL)) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT NULL), (((vt0.c0 COLLATE RTRIM))>((((t0.c0) NOT BETWEEN (vt0.c0) AND (0.15997893598140778))))) DESC, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT NULL), (((vt0.c0 COLLATE RTRIM))>((((t0.c0) NOT BETWEEN (vt0.c0) AND (0.15997893598140778))))) DESC, t0.c0 ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST((~ (rt0.c3)) AS REAL)) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT NULL), (((vt0.c0 COLLATE RTRIM))>((((t0.c0) NOT BETWEEN (vt0.c0) AND (0.15997893598140778))))) DESC, t0.c0 ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)IS(rt0.c0))) NOT NULL) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)IS(rt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)IS(rt0.c0))) NOT NULL) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)IS(rt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)IS(rt0.c0))) NOT NULL) WHERE (rt0.c3);
SELECT * FROM t0 WHERE (((((t0.c0)<>(t0.c0))) ISNULL)) ORDER BY (((t0.c0 IN ()))-(((t0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))-(((t0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0)<>(t0.c0))) ISNULL)) ORDER BY (((t0.c0 IN ()))-(((t0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))-(((t0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0)<>(t0.c0))) ISNULL)) ORDER BY (((t0.c0 IN ()))-(((t0.c0) IS TRUE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c3)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c3)<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c3)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c3)<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c3, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((rt0.c3)<(rt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((json_object(rt0.c3, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_object(rt0.c3, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((json_object(rt0.c3, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_object(rt0.c3, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((json_object(rt0.c3, vt0.c0)) IS TRUE));
SELECT * FROM vt0, rt0 INDEXED BY i28 WHERE (((((((vt0.c0)<=(vt0.c1)))AND(TRIM(vt0.c0, rt0.c3))))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt0.c1)))AND(TRIM(vt0.c0, rt0.c3))))OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i28);
SELECT * FROM vt0, rt0 INDEXED BY i28 WHERE (((((((vt0.c0)<=(vt0.c1)))AND(TRIM(vt0.c0, rt0.c3))))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt0.c1)))AND(TRIM(vt0.c0, rt0.c3))))OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i28);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((LOWER(DISTINCT vt0.c1))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN vt0.c0 THEN NULL ELSE 'l' END)))OR(NULL))) ORDER BY (rt0.c3 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(DISTINCT vt0.c1))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN vt0.c0 THEN NULL ELSE 'l' END)))OR(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c3 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((LOWER(DISTINCT vt0.c1))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN vt0.c0 THEN NULL ELSE 'l' END)))OR(NULL))) ORDER BY (rt0.c3 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(DISTINCT vt0.c1))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN vt0.c0 THEN NULL ELSE 'l' END)))OR(NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c3 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((LOWER(DISTINCT vt0.c1))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c0  WHEN vt0.c0 THEN NULL ELSE 'l' END)))OR(NULL))) ORDER BY (rt0.c3 IN ())  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (UNLIKELY(DISTINCT vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (UNLIKELY(DISTINCT vt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c1) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (UNLIKELY(DISTINCT vt0.c1) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)-(t0.c0)) THEN (- (t0.c0)) ELSE (NOT (t0.c0)) END) ORDER BY ((t0.c0)AND(t0.c0)) COLLATE NOCASE, (NOT (UPPER(t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)-(t0.c0)) THEN (- (t0.c0)) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)AND(t0.c0)) COLLATE NOCASE, (NOT (UPPER(t0.c0))));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)-(t0.c0)) THEN (- (t0.c0)) ELSE (NOT (t0.c0)) END) ORDER BY ((t0.c0)AND(t0.c0)) COLLATE NOCASE, (NOT (UPPER(t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)-(t0.c0)) THEN (- (t0.c0)) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)AND(t0.c0)) COLLATE NOCASE, (NOT (UPPER(t0.c0))));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c0)-(t0.c0)) THEN (- (t0.c0)) ELSE (NOT (t0.c0)) END) ORDER BY ((t0.c0)AND(t0.c0)) COLLATE NOCASE, (NOT (UPPER(t0.c0)));
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)) ORDER BY (rt0.c3 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c3 IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)) ORDER BY (rt0.c3 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c3 IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)) ORDER BY (rt0.c3 IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (0xffffffffd9dbea57) ORDER BY 0.8405987932401001, (('-1246761733' COLLATE BINARY)/((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((0xffffffffd9dbea57) IS TRUE)  as count FROM rt0 ORDER BY 0.8405987932401001, (('-1246761733' COLLATE BINARY)/((rt0.c1 IN ()))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (0xffffffffd9dbea57) ORDER BY 0.8405987932401001, (('-1246761733' COLLATE BINARY)/((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((0xffffffffd9dbea57) IS TRUE)  as count FROM rt0 ORDER BY 0.8405987932401001, (('-1246761733' COLLATE BINARY)/((rt0.c1 IN ()))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (0xffffffffd9dbea57) ORDER BY 0.8405987932401001, (('-1246761733' COLLATE BINARY)/((rt0.c1 IN ()))) ASC;
SELECT * FROM t0 WHERE (((COALESCE(DISTINCT '2074182836', t0.c0))<(((t0.c0)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT '2074182836', t0.c0))<(((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((COALESCE(DISTINCT '2074182836', t0.c0))<(((t0.c0)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT '2074182836', t0.c0))<(((t0.c0)+(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((COALESCE(DISTINCT '2074182836', t0.c0))<(((t0.c0)+(t0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c3))>=((0.5004429658991962))) WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((HEX(DISTINCT rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((HEX(DISTINCT rt0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c3))>=((0.5004429658991962))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c3))>=((0.5004429658991962))) WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((HEX(DISTINCT rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((HEX(DISTINCT rt0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c3))>=((0.5004429658991962))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c3))>=((0.5004429658991962))) WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((HEX(DISTINCT rt0.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE '-''rrWW'  WHEN ((vt0.c0)>=(vt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt0.c1)+(vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (NOT (rt0.c1)) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN '-156584263' THEN '-377460884' WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END  WHEN (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c1, vt0.c1))) THEN (~ (vt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN '-156584263' THEN '-377460884' WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END  WHEN (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c1, vt0.c1))) THEN (~ (vt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE '-''rrWW'  WHEN ((vt0.c0)>=(vt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt0.c1)+(vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (NOT (rt0.c1)) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE '-''rrWW'  WHEN ((vt0.c0)>=(vt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt0.c1)+(vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (NOT (rt0.c1)) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN '-156584263' THEN '-377460884' WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END  WHEN (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c1, vt0.c1))) THEN (~ (vt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN '-156584263' THEN '-377460884' WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END  WHEN (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c1, vt0.c1))) THEN (~ (vt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE '-''rrWW'  WHEN ((vt0.c0)>=(vt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt0.c1)+(vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (NOT (rt0.c1)) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE '-''rrWW'  WHEN ((vt0.c0)>=(vt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN ((vt0.c1)+(vt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (NOT (rt0.c1)) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN '-156584263' THEN '-377460884' WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END  WHEN (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c1, vt0.c1))) THEN (~ (vt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END);
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0)<>(t0.c0)))OR(CASE t0.c0  WHEN 0.9830897366188701 THEN t0.c0 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)!=(t0.c0)))OR(CASE t0.c0  WHEN 0.9830897366188701 THEN t0.c0 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0)<>(t0.c0)))OR(CASE t0.c0  WHEN 0.9830897366188701 THEN t0.c0 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)!=(t0.c0)))OR(CASE t0.c0  WHEN 0.9830897366188701 THEN t0.c0 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((((vt0.c0)<>(t0.c0)))OR(CASE t0.c0  WHEN 0.9830897366188701 THEN t0.c0 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c0 COLLATE BINARY, ((t0.c0)IS(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (('-309519077') IS FALSE)))<((((t0.c0) IS TRUE), TIME(t0.c0, '-1784398162', t0.c0), t0.c0 COLLATE NOCASE, (~ (t0.c0)), t0.c0 COLLATE NOCASE)))) ORDER BY ((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0) AND (0.34276030256967804)) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0)<>(NULL)))) AND (((t0.c0 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE BINARY, ((t0.c0)IS(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (('-309519077') IS FALSE)))<((((t0.c0) IS TRUE), TIME(t0.c0, '-1784398162', t0.c0), t0.c0 COLLATE NOCASE, (~ (t0.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0) AND (0.34276030256967804)) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0)<>(NULL)))) AND (((t0.c0 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c0 COLLATE BINARY, ((t0.c0)IS(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (('-309519077') IS FALSE)))<((((t0.c0) IS TRUE), TIME(t0.c0, '-1784398162', t0.c0), t0.c0 COLLATE NOCASE, (~ (t0.c0)), t0.c0 COLLATE NOCASE)))) ORDER BY ((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0) AND (0.34276030256967804)) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0)<>(NULL)))) AND (((t0.c0 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE BINARY, ((t0.c0)IS(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (('-309519077') IS FALSE)))<((((t0.c0) IS TRUE), TIME(t0.c0, '-1784398162', t0.c0), t0.c0 COLLATE NOCASE, (~ (t0.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0) AND (0.34276030256967804)) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0)<>(NULL)))) AND (((t0.c0 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c0 COLLATE BINARY, ((t0.c0)IS(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (('-309519077') IS FALSE)))<((((t0.c0) IS TRUE), TIME(t0.c0, '-1784398162', t0.c0), t0.c0 COLLATE NOCASE, (~ (t0.c0)), t0.c0 COLLATE NOCASE)))) ORDER BY ((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0) AND (0.34276030256967804)) DESC  NULLS FIRST, (((t0.c0)) BETWEEN ((((t0.c0)<>(NULL)))) AND (((t0.c0 IN ())))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c0))IS(STRFTIME(t0.c0, t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c0))IS(STRFTIME(t0.c0, t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c0))IS(STRFTIME(t0.c0, t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t0.c0))IS(STRFTIME(t0.c0, t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (((TRIM(DISTINCT t0.c0))IS(STRFTIME(t0.c0, t0.c0, t0.c0))));
SELECT * FROM rt0, vt0, t0 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (CAST(x'' AS TEXT));
SELECT ALL * FROM t0, rt0, vt0 WHERE (TRIM(HEX(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT rt0.c2))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (TRIM(HEX(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT rt0.c2))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (TRIM(HEX(DISTINCT rt0.c2)));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((t0.c0 IN (rt0.c0))) BETWEEN ('' COLLATE RTRIM) AND (((((rt0.c0)OR(rt0.c3)))AND(NULL))))) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN json_quote(vt0.c0) WHEN ((NULL) NOT NULL) THEN rt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN x'6150' END;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt0.c0))) BETWEEN ('' COLLATE RTRIM) AND (((((rt0.c0)OR(rt0.c3)))AND(NULL))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN json_quote(vt0.c0) WHEN ((NULL) NOT NULL) THEN rt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN x'6150' END);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((t0.c0 IN (rt0.c0))) BETWEEN ('' COLLATE RTRIM) AND (((((rt0.c0)OR(rt0.c3)))AND(NULL))))) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN json_quote(vt0.c0) WHEN ((NULL) NOT NULL) THEN rt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN x'6150' END;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt0.c0))) BETWEEN ('' COLLATE RTRIM) AND (((((rt0.c0)OR(rt0.c3)))AND(NULL))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN json_quote(vt0.c0) WHEN ((NULL) NOT NULL) THEN rt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN x'6150' END);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((t0.c0 IN (rt0.c0))) BETWEEN ('' COLLATE RTRIM) AND (((((rt0.c0)OR(rt0.c3)))AND(NULL))))) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN json_quote(vt0.c0) WHEN ((NULL) NOT NULL) THEN rt0.c1 COLLATE RTRIM WHEN (vt0.c1 IN ()) THEN x'6150' END;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((0.17515712181011323)OR((('-808935488')||(vt0.c1)))))OR(((0xffffffffc1e6f439)==(rt0.c3))))) ORDER BY (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 END))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))))) ASC, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((0.17515712181011323)OR((('-808935488')||(vt0.c1)))))OR(((0Xffffffffc1e6f439)=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 END))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))))) ASC, rt0.c1 DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((0.17515712181011323)OR((('-808935488')||(vt0.c1)))))OR(((0xffffffffc1e6f439)==(rt0.c3))))) ORDER BY (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 END))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))))) ASC, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((0.17515712181011323)OR((('-808935488')||(vt0.c1)))))OR(((0Xffffffffc1e6f439)=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 END))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))))) ASC, rt0.c1 DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((0.17515712181011323)OR((('-808935488')||(vt0.c1)))))OR(((0xffffffffc1e6f439)==(rt0.c3))))) ORDER BY (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 END))>(((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))))) ASC, rt0.c1 DESC;
SELECT ALL * FROM rt0 WHERE ((~ (0x5d30cc54)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0X5d30cc54))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (0x5d30cc54)));
SELECT SUM(count) FROM (SELECT ALL (((~ (0X5d30cc54))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (0x5d30cc54)));
SELECT * FROM rt0, t0, vt0 WHERE (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE))+(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE))+(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE))+(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE))+(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS TRUE))+(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) IN ())) ORDER BY (((rt0.c3 IN ())) BETWEEN (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) NOTNULL))));
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) IN ())) ORDER BY (((rt0.c3 IN ())) BETWEEN (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) NOTNULL))));
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)) IN ())) ORDER BY (((rt0.c3 IN ())) BETWEEN (CASE WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) NOTNULL)));
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((rt0.c0)/(vt0.c0))))=(((((rt0.c0))<=((rt0.c3))))))) ORDER BY CASE WHEN (('1172705621')|(t0.c0)) THEN (('-1751790122')<(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)/(vt0.c0))))==(((((rt0.c0))<=((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN (('1172705621')|(t0.c0)) THEN (('-1751790122')<(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((rt0.c0)/(vt0.c0))))=(((((rt0.c0))<=((rt0.c3))))))) ORDER BY CASE WHEN (('1172705621')|(t0.c0)) THEN (('-1751790122')<(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)/(vt0.c0))))==(((((rt0.c0))<=((rt0.c3))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE WHEN (('1172705621')|(t0.c0)) THEN (('-1751790122')<(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((rt0.c0)/(vt0.c0))))=(((((rt0.c0))<=((rt0.c3))))))) ORDER BY CASE WHEN (('1172705621')|(t0.c0)) THEN (('-1751790122')<(rt0.c1)) END  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)LIKE(0.06542028555826884)) AS NUMERIC)) ORDER BY (('607146619') IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)LIKE(0.06542028555826884)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (('607146619') IS FALSE)  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)LIKE(0.06542028555826884)) AS NUMERIC)) ORDER BY (('607146619') IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)LIKE(0.06542028555826884)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (('607146619') IS FALSE)  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)LIKE(0.06542028555826884)) AS NUMERIC)) ORDER BY (('607146619') IS FALSE)  NULLS LAST;
SELECT * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((((rt0.c2)&(rt0.c1)))%(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c1)))%(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((((rt0.c2)&(rt0.c1)))%(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c1)))%(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((((rt0.c2)&(rt0.c1)))%(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((LIKE(rt0.c3, vt0.c0, ',') IN ()));
SELECT SUM(count) FROM (SELECT (((LIKE(rt0.c3, vt0.c0, ',') IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((LIKE(rt0.c3, vt0.c0, ',') IN ()));
SELECT SUM(count) FROM (SELECT (((LIKE(rt0.c3, vt0.c0, ',') IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((LIKE(rt0.c3, vt0.c0, ',') IN ()));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))) AND (json_quote(vt0.c1)))) ORDER BY '0.3763099456557766' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))) AND (json_quote(vt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY '0.3763099456557766' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))) AND (json_quote(vt0.c1)))) ORDER BY '0.3763099456557766' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))) AND (json_quote(vt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY '0.3763099456557766' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c3) AND (vt0.c1))) AND (json_quote(vt0.c1)))) ORDER BY '0.3763099456557766' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c3)=(vt0.c1)) AS REAL) LEFT OUTER JOIN t0 ON CAST('361731347' AS TEXT) COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c3)==(vt0.c1)) AS REAL) LEFT OUTER JOIN t0 ON CAST('361731347' AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c3)=(vt0.c1)) AS REAL) LEFT OUTER JOIN t0 ON CAST('361731347' AS TEXT) COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c3)==(vt0.c1)) AS REAL) LEFT OUTER JOIN t0 ON CAST('361731347' AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c3)=(vt0.c1)) AS REAL) LEFT OUTER JOIN t0 ON CAST('361731347' AS TEXT) COLLATE BINARY WHERE (vt0.c0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(x'1b9e')))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(x'1b9e')))AND(rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(x'1b9e')))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(x'1b9e')))AND(rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)) BETWEEN (((+ (rt0.c0)))) AND ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(x'1b9e')))AND(rt0.c3))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((JULIANDAY(vt0.c1, vt0.c0, vt0.c0))AND(((vt0.c1)/(t0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((JULIANDAY(vt0.c1, vt0.c0, vt0.c0))AND(((vt0.c1)/(t0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((JULIANDAY(vt0.c1, vt0.c0, vt0.c0))AND(((vt0.c1)/(t0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((JULIANDAY(vt0.c1, vt0.c0, vt0.c0))AND(((vt0.c1)/(t0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((JULIANDAY(vt0.c1, vt0.c0, vt0.c0))AND(((vt0.c1)/(t0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS(vt0.c1)), (((((vt0.c1))<>((rt0.c3)))) NOT BETWEEN ((((t0.c0, rt0.c3, t0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1)))) AND (((rt0.c2) IS TRUE))) DESC  NULLS LAST, x'e4bd774c' DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS(vt0.c1)), (((((vt0.c1))<>((rt0.c3)))) NOT BETWEEN ((((t0.c0, rt0.c3, t0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1)))) AND (((rt0.c2) IS TRUE))) DESC  NULLS LAST, x'e4bd774c' DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS(vt0.c1)), (((((vt0.c1))<>((rt0.c3)))) NOT BETWEEN ((((t0.c0, rt0.c3, t0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1)))) AND (((rt0.c2) IS TRUE))) DESC  NULLS LAST, x'e4bd774c' DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((vt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS(vt0.c1)), (((((vt0.c1))<>((rt0.c3)))) NOT BETWEEN ((((t0.c0, rt0.c3, t0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1)))) AND (((rt0.c2) IS TRUE))) DESC  NULLS LAST, x'e4bd774c' DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)) COLLATE RTRIM) ORDER BY ((((vt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))IS(vt0.c1)), (((((vt0.c1))<>((rt0.c3)))) NOT BETWEEN ((((t0.c0, rt0.c3, t0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1)))) AND (((rt0.c2) IS TRUE))) DESC  NULLS LAST, x'e4bd774c' DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((~ (rt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON CAST('' AS INTEGER) WHERE (vt0.c0) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON CAST('' AS INTEGER) ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON CAST('' AS INTEGER) WHERE (vt0.c0) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON CAST('' AS INTEGER) ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON CAST('' AS INTEGER) WHERE (vt0.c0) ORDER BY NULL ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS INTEGER);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)<(rt0.c0)) COLLATE BINARY) ORDER BY (CAST(rt0.c3 AS TEXT) IN ()) ASC, CASE ((rt0.c0)+(0xffffffffbe8e2eb5))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c3 AS TEXT) IN ()) ASC, CASE ((rt0.c0)+(0Xffffffffbe8e2eb5))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 END  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)<(rt0.c0)) COLLATE BINARY) ORDER BY (CAST(rt0.c3 AS TEXT) IN ()) ASC, CASE ((rt0.c0)+(0xffffffffbe8e2eb5))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c3 AS TEXT) IN ()) ASC, CASE ((rt0.c0)+(0Xffffffffbe8e2eb5))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 END  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)<(rt0.c0)) COLLATE BINARY) ORDER BY (CAST(rt0.c3 AS TEXT) IN ()) ASC, CASE ((rt0.c0)+(0xffffffffbe8e2eb5))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 END  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE x'' END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE x'' END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)));
SELECT * FROM t0, vt0 WHERE (CAST(0.16833116594693565 AS REAL)) ORDER BY (((0.9163124083184016)/(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.16833116594693565 AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((0.9163124083184016)/(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CAST(0.16833116594693565 AS REAL)) ORDER BY (((0.9163124083184016)/(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.16833116594693565 AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((0.9163124083184016)/(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (CAST(0.16833116594693565 AS REAL)) ORDER BY (((0.9163124083184016)/(t0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c2))>>(''))) ORDER BY (((rt0.c2 IN ()))GLOB(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2))>>(''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))GLOB(rt0.c3)));
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c2))>>(''))) ORDER BY (((rt0.c2 IN ()))GLOB(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2))>>(''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))GLOB(rt0.c3)));
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c2))>>(''))) ORDER BY (((rt0.c2 IN ()))GLOB(rt0.c3));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND (((rt0.c0)IS(rt0.c3))))) ORDER BY json_patch((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c1)))) ASC  NULLS FIRST, (((CAST(rt0.c1 AS INTEGER)))<>((rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND (((rt0.c0)IS(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_patch((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c1)))) ASC  NULLS FIRST, (((CAST(rt0.c1 AS INTEGER)))<>((rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND (((rt0.c0)IS(rt0.c3))))) ORDER BY json_patch((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c1)))) ASC  NULLS FIRST, (((CAST(rt0.c1 AS INTEGER)))<>((rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND (((rt0.c0)IS(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_patch((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c1)))) ASC  NULLS FIRST, (((CAST(rt0.c1 AS INTEGER)))<>((rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND (((rt0.c0)IS(rt0.c3))))) ORDER BY json_patch((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c1)))) ASC  NULLS FIRST, (((CAST(rt0.c1 AS INTEGER)))<>((rt0.c2)));
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(((rt0.c1)*(rt0.c3)), 0.5711212598023468) CROSS JOIN t0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))<<(COALESCE(DISTINCT vt0.c0, t0.c0))) WHERE ((((vt0.c1)) NOT BETWEEN ((((t0.c0)>=(vt0.c1)))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((t0.c0)>=(vt0.c1)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(((rt0.c1)*(rt0.c3)), 0.5711212598023468) CROSS JOIN t0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))<<(COALESCE(DISTINCT vt0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(((rt0.c1)*(rt0.c3)), 0.5711212598023468) CROSS JOIN t0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))<<(COALESCE(DISTINCT vt0.c0, t0.c0))) WHERE ((((vt0.c1)) NOT BETWEEN ((((t0.c0)>=(vt0.c1)))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((t0.c0)>=(vt0.c1)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(((rt0.c1)*(rt0.c3)), 0.5711212598023468) CROSS JOIN t0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))<<(COALESCE(DISTINCT vt0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON LIKELIHOOD(((rt0.c1)*(rt0.c3)), 0.5711212598023468) CROSS JOIN t0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))<<(COALESCE(DISTINCT vt0.c0, t0.c0))) WHERE ((((vt0.c1)) NOT BETWEEN ((((t0.c0)>=(vt0.c1)))) AND (((rt0.c1 IN ())))));
SELECT * FROM t0, vt0 WHERE (((vt0.c0)==(vt0.c1)) COLLATE RTRIM) ORDER BY (vt0.c0 IN (vt0.c0 COLLATE NOCASE)), (((vt0.c1 COLLATE NOCASE, ((vt0.c0) IS TRUE), CAST(t0.c0 AS TEXT), ((vt0.c0)==(vt0.c0)), TIME(x'911e', t0.c0, NULL)))>=(((((t0.c0, t0.c0, vt0.c1)) NOT BETWEEN (('-799857666', t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))), (- (vt0.c0)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c1 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 IN (vt0.c0 COLLATE NOCASE)), (((vt0.c1 COLLATE NOCASE, ((vt0.c0) IS TRUE), CAST(t0.c0 AS TEXT), ((vt0.c0)=(vt0.c0)), TIME(x'911e', t0.c0, NULL)))>=(((((t0.c0, t0.c0, vt0.c1)) NOT BETWEEN (('-799857666', t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))), (- (vt0.c0)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c1 COLLATE RTRIM))) DESC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)==(vt0.c1)) COLLATE RTRIM) ORDER BY (vt0.c0 IN (vt0.c0 COLLATE NOCASE)), (((vt0.c1 COLLATE NOCASE, ((vt0.c0) IS TRUE), CAST(t0.c0 AS TEXT), ((vt0.c0)==(vt0.c0)), TIME(x'911e', t0.c0, NULL)))>=(((((t0.c0, t0.c0, vt0.c1)) NOT BETWEEN (('-799857666', t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))), (- (vt0.c0)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c1 COLLATE RTRIM))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c0 IN (vt0.c0 COLLATE NOCASE)), (((vt0.c1 COLLATE NOCASE, ((vt0.c0) IS TRUE), CAST(t0.c0 AS TEXT), ((vt0.c0)=(vt0.c0)), TIME(x'911e', t0.c0, NULL)))>=(((((t0.c0, t0.c0, vt0.c1)) NOT BETWEEN (('-799857666', t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))), (- (vt0.c0)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c1 COLLATE RTRIM))) DESC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)==(vt0.c1)) COLLATE RTRIM) ORDER BY (vt0.c0 IN (vt0.c0 COLLATE NOCASE)), (((vt0.c1 COLLATE NOCASE, ((vt0.c0) IS TRUE), CAST(t0.c0 AS TEXT), ((vt0.c0)==(vt0.c0)), TIME(x'911e', t0.c0, NULL)))>=(((((t0.c0, t0.c0, vt0.c1)) NOT BETWEEN (('-799857666', t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))), (- (vt0.c0)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c1 COLLATE RTRIM))) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (rt0.c3)))||(((('-971452718')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FULL OUTER JOIN rt0 ON CAST('yVt1/A-' AS BLOB) WHERE ((+ (((rt0.c0) IS FALSE)))) ORDER BY ((((t0.c0)/(rt0.c2))) BETWEEN (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ('2127205901')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((+ (rt0.c3)))||(((('-971452718')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FULL OUTER JOIN rt0 ON CAST('yVt1/A-' AS BLOB) ORDER BY ((((t0.c0)/(rt0.c2))) BETWEEN (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ('2127205901')) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (rt0.c3)))||(((('-971452718')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FULL OUTER JOIN rt0 ON CAST('yVt1/A-' AS BLOB) WHERE ((+ (((rt0.c0) IS FALSE)))) ORDER BY ((((t0.c0)/(rt0.c2))) BETWEEN (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ('2127205901')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((+ (rt0.c3)))||(((('-971452718')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FULL OUTER JOIN rt0 ON CAST('yVt1/A-' AS BLOB) ORDER BY ((((t0.c0)/(rt0.c2))) BETWEEN (((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ('2127205901')) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))AND(-602387561)))AND(((rt0.c1)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))AND(-602387561)))AND(((rt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))AND(-602387561)))AND(((rt0.c1)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT NULL))AND(-602387561)))AND(((rt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c1) NOT NULL))AND(-602387561)))AND(((rt0.c1)|(vt0.c1)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.2831084121010826 RIGHT OUTER JOIN rt0 ON CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END COLLATE NOCASE WHERE ((+ (((vt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.2831084121010826 RIGHT OUTER JOIN rt0 ON CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.2831084121010826 RIGHT OUTER JOIN rt0 ON CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END COLLATE NOCASE WHERE ((+ (((vt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.2831084121010826 RIGHT OUTER JOIN rt0 ON CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.2831084121010826 RIGHT OUTER JOIN rt0 ON CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END COLLATE NOCASE WHERE ((+ (((vt0.c1)<(rt0.c2)))));
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON '1789631652' WHERE (ABS(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY CASE WHEN TRIM(rt0.c1, rt0.c3) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS BLOB) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c1)>=(rt0.c2)) THEN TYPEOF(vt0.c1) WHEN ((rt0.c3)*(rt0.c3)) THEN CAST(rt0.c1 AS TEXT) WHEN ((NULL) BETWEEN (rt0.c0) AND (x'')) THEN UNLIKELY(0.8980135006837836) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON '1789631652' ORDER BY CASE WHEN TRIM(rt0.c1, rt0.c3) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS BLOB) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c1)>=(rt0.c2)) THEN TYPEOF(vt0.c1) WHEN ((rt0.c3)*(rt0.c3)) THEN CAST(rt0.c1 AS TEXT) WHEN ((NULL) BETWEEN (rt0.c0) AND (x'')) THEN UNLIKELY(0.8980135006837836) END DESC);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON '1789631652' WHERE (ABS(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY CASE WHEN TRIM(rt0.c1, rt0.c3) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS BLOB) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c1)>=(rt0.c2)) THEN TYPEOF(vt0.c1) WHEN ((rt0.c3)*(rt0.c3)) THEN CAST(rt0.c1 AS TEXT) WHEN ((NULL) BETWEEN (rt0.c0) AND (x'')) THEN UNLIKELY(0.8980135006837836) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON '1789631652' ORDER BY CASE WHEN TRIM(rt0.c1, rt0.c3) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS BLOB) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c1)>=(rt0.c2)) THEN TYPEOF(vt0.c1) WHEN ((rt0.c3)*(rt0.c3)) THEN CAST(rt0.c1 AS TEXT) WHEN ((NULL) BETWEEN (rt0.c0) AND (x'')) THEN UNLIKELY(0.8980135006837836) END DESC);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON '1789631652' WHERE (ABS(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY CASE WHEN TRIM(rt0.c1, rt0.c3) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS BLOB) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c1)>=(rt0.c2)) THEN TYPEOF(vt0.c1) WHEN ((rt0.c3)*(rt0.c3)) THEN CAST(rt0.c1 AS TEXT) WHEN ((NULL) BETWEEN (rt0.c0) AND (x'')) THEN UNLIKELY(0.8980135006837836) END DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (json_remove(UNLIKELY(DISTINCT t0.c0), ((vt0.c1)<<(t0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1)<=(vt0.c1)))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove(UNLIKELY(DISTINCT t0.c0), ((vt0.c1)<<(t0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1)<=(vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (json_remove(UNLIKELY(DISTINCT t0.c0), ((vt0.c1)<<(t0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1)<=(vt0.c1)))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove(UNLIKELY(DISTINCT t0.c0), ((vt0.c1)<<(t0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1)<=(vt0.c1)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (json_remove(UNLIKELY(DISTINCT t0.c0), ((vt0.c1)<<(t0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END, ((vt0.c1)<=(vt0.c1)))) ORDER BY (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(NULL)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN NULL THEN ((vt0.c1)*(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt0.c1)*(rt0.c1)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN NULL THEN ((vt0.c1)*(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt0.c1)*(rt0.c1)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN NULL THEN ((vt0.c1)*(rt0.c1)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY ((((vt0.c0)<=(rt0.c3))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(NULL))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)<=(rt0.c3))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(NULL))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY ((((vt0.c0)<=(rt0.c3))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(NULL))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)<=(rt0.c3))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(NULL))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY ((((vt0.c0)<=(rt0.c3))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))AND(NULL))) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0)IS NOT(t0.c0)) IN ())) ORDER BY ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN '1167769865' WHEN t0.c0 THEN 0.44494286102079617 ELSE '1678189329' END)))AND(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)IS NOT(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN '1167769865' WHEN t0.c0 THEN 0.44494286102079617 ELSE '1678189329' END)))AND(t0.c0))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0)IS NOT(t0.c0)) IN ())) ORDER BY ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN '1167769865' WHEN t0.c0 THEN 0.44494286102079617 ELSE '1678189329' END)))AND(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)IS NOT(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN '1167769865' WHEN t0.c0 THEN 0.44494286102079617 ELSE '1678189329' END)))AND(t0.c0))  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0)IS NOT(t0.c0)) IN ())) ORDER BY ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN '1167769865' WHEN t0.c0 THEN 0.44494286102079617 ELSE '1678189329' END)))AND(t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('' COLLATE BINARY) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ('' COLLATE BINARY) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ('' COLLATE BINARY) ORDER BY vt0.c1;
SELECT * FROM rt0, t0 WHERE ('Q}~') ORDER BY CASE LIKELY(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN x'' ELSE ((t0.c0)<=(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT (('Q}~') IS TRUE)  as count FROM rt0, t0 ORDER BY CASE LIKELY(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN x'' ELSE ((t0.c0)<=(rt0.c0)) END);
SELECT * FROM rt0, t0 WHERE ('Q}~') ORDER BY CASE LIKELY(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN x'' ELSE ((t0.c0)<=(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT (('Q}~') IS TRUE)  as count FROM rt0, t0 ORDER BY CASE LIKELY(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN x'' ELSE ((t0.c0)<=(rt0.c0)) END);
SELECT * FROM rt0, t0 WHERE ('Q}~') ORDER BY CASE LIKELY(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN x'' ELSE ((t0.c0)<=(rt0.c0)) END;
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN vt0.c1 ELSE vt0.c0 END WHERE ((~ (((t0.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)%(rt0.c1))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN vt0.c1 ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN vt0.c1 ELSE vt0.c0 END WHERE ((~ (((t0.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)%(rt0.c1))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN vt0.c1 ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN vt0.c1 ELSE vt0.c0 END WHERE ((~ (((t0.c0)%(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (x'123c') AND (t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (('2)쭎>i8.')*(t0.c0)) ELSE (t0.c0 IN ()) END) ORDER BY (((CASE WHEN t0.c0 THEN '' END))!=(((+ (t0.c0))))) ASC  NULLS FIRST, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST, ((CAST(t0.c0 AS TEXT))<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1179541811' THEN 0.9182408833730228 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) BETWEEN (x'123c') AND (t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (('2)쭎>i8.')*(t0.c0)) ELSE (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c0 THEN '' END))<>(((+ (t0.c0))))) ASC  NULLS FIRST, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST, ((CAST(t0.c0 AS TEXT))<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1179541811' THEN 0.9182408833730228 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (x'123c') AND (t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (('2)쭎>i8.')*(t0.c0)) ELSE (t0.c0 IN ()) END) ORDER BY (((CASE WHEN t0.c0 THEN '' END))!=(((+ (t0.c0))))) ASC  NULLS FIRST, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST, ((CAST(t0.c0 AS TEXT))<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1179541811' THEN 0.9182408833730228 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) BETWEEN (x'123c') AND (t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (('2)쭎>i8.')*(t0.c0)) ELSE (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c0 THEN '' END))<>(((+ (t0.c0))))) ASC  NULLS FIRST, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST, ((CAST(t0.c0 AS TEXT))<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1179541811' THEN 0.9182408833730228 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (x'123c') AND (t0.c0))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (('2)쭎>i8.')*(t0.c0)) ELSE (t0.c0 IN ()) END) ORDER BY (((CASE WHEN t0.c0 THEN '' END))!=(((+ (t0.c0))))) ASC  NULLS FIRST, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST, ((CAST(t0.c0 AS TEXT))<=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1179541811' THEN 0.9182408833730228 END))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((rt0.c1 IN ())) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ())) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((rt0.c1 IN ())) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ())) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NULL IN ())) ORDER BY (((rt0.c1 IN ())) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i28, rt0 WHERE ((((x'37b3', rt0.c3, rt0.c1)) BETWEEN ((NULLIF(NULL, rt0.c3), LTRIM(NULL), t0.c0 COLLATE NOCASE)) AND ((0.10145511070022772, ((((((((x'4def')AND(rt0.c1)))AND(rt0.c1)))OR('l틐')))OR(-1.59928224E9)), ((rt0.c0)>(rt0.c3)))))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC, ((((rt0.c1)>=(rt0.c0)))>>(LIKELIHOOD(DISTINCT rt0.c3, 0.31402826530452776))), ((((t0.c0)*(rt0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'37b3', rt0.c3, rt0.c1)) BETWEEN ((NULLIF(NULL, rt0.c3), LTRIM(NULL), t0.c0 COLLATE NOCASE)) AND ((0.10145511070022772, ((((((((x'4def')AND(rt0.c1)))AND(rt0.c1)))OR('l틐')))OR(-1.59928224E9)), ((rt0.c0)>(rt0.c3)))))) IS TRUE)  as count FROM t0 INDEXED BY i28, rt0 ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC, ((((rt0.c1)>=(rt0.c0)))>>(LIKELIHOOD(DISTINCT rt0.c3, 0.31402826530452776))), ((((t0.c0)*(rt0.c3))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i28, rt0 WHERE ((((x'37b3', rt0.c3, rt0.c1)) BETWEEN ((NULLIF(NULL, rt0.c3), LTRIM(NULL), t0.c0 COLLATE NOCASE)) AND ((0.10145511070022772, ((((((((x'4def')AND(rt0.c1)))AND(rt0.c1)))OR('l틐')))OR(-1.59928224E9)), ((rt0.c0)>(rt0.c3)))))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC, ((((rt0.c1)>=(rt0.c0)))>>(LIKELIHOOD(DISTINCT rt0.c3, 0.31402826530452776))), ((((t0.c0)*(rt0.c3))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'37b3', rt0.c3, rt0.c1)) BETWEEN ((NULLIF(NULL, rt0.c3), LTRIM(NULL), t0.c0 COLLATE NOCASE)) AND ((0.10145511070022772, ((((((((x'4def')AND(rt0.c1)))AND(rt0.c1)))OR('l틐')))OR(-1.59928224E9)), ((rt0.c0)>(rt0.c3)))))) IS TRUE)  as count FROM t0 INDEXED BY i28, rt0 ORDER BY (CAST(rt0.c0 AS INTEGER) IN ()) DESC, ((((rt0.c1)>=(rt0.c0)))>>(LIKELIHOOD(DISTINCT rt0.c3, 0.31402826530452776))), ((((t0.c0)*(rt0.c3))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL)LIKE(((rt0.c1) IS FALSE)))) ORDER BY ((CAST(t0.c0 AS REAL))OR('-1677744281')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(t0.c0 AS REAL))OR('-1677744281')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL)LIKE(((rt0.c1) IS FALSE)))) ORDER BY ((CAST(t0.c0 AS REAL))OR('-1677744281')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)LIKE(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(t0.c0 AS REAL))OR('-1677744281')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL)LIKE(((rt0.c1) IS FALSE)))) ORDER BY ((CAST(t0.c0 AS REAL))OR('-1677744281')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN ()) END) ORDER BY ((((t0.c0) NOTNULL)) IS TRUE) ASC  NULLS FIRST, ((((json_remove(t0.c0, NULL))AND((((t0.c0))<=((t0.c0))))))OR(t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOTNULL)) IS TRUE) ASC  NULLS FIRST, ((((json_remove(t0.c0, NULL))AND((((t0.c0))<=((t0.c0))))))OR(t0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN ()) END) ORDER BY ((((t0.c0) NOTNULL)) IS TRUE) ASC  NULLS FIRST, ((((json_remove(t0.c0, NULL))AND((((t0.c0))<=((t0.c0))))))OR(t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOTNULL)) IS TRUE) ASC  NULLS FIRST, ((((json_remove(t0.c0, NULL))AND((((t0.c0))<=((t0.c0))))))OR(t0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS REAL) THEN (t0.c0 IN ()) END) ORDER BY ((((t0.c0) NOTNULL)) IS TRUE) ASC  NULLS FIRST, ((((json_remove(t0.c0, NULL))AND((((t0.c0))<=((t0.c0))))))OR(t0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS INTEGER));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((- (vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(vt0.c1)))AND(vt0.c0)))IS((((vt0.c1))<=((vt0.c0)))))  NULLS FIRST, t0.c0, ((((t0.c0)GLOB(t0.c0)))AND((('')*(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(vt0.c1)))AND(vt0.c0)))IS((((vt0.c1))<=((vt0.c0)))))  NULLS FIRST, t0.c0, ((((t0.c0)GLOB(t0.c0)))AND((('')*(t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((- (vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(vt0.c1)))AND(vt0.c0)))IS((((vt0.c1))<=((vt0.c0)))))  NULLS FIRST, t0.c0, ((((t0.c0)GLOB(t0.c0)))AND((('')*(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(vt0.c1)))AND(vt0.c0)))IS((((vt0.c1))<=((vt0.c0)))))  NULLS FIRST, t0.c0, ((((t0.c0)GLOB(t0.c0)))AND((('')*(t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((- (vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(vt0.c1)))AND(vt0.c0)))IS((((vt0.c1))<=((vt0.c0)))))  NULLS FIRST, t0.c0, ((((t0.c0)GLOB(t0.c0)))AND((('')*(t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (COALESCE(vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY, (rt0.c2 IN (rt0.c0, rt0.c2)), (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY, (rt0.c2 IN (rt0.c0, rt0.c2)), (rt0.c3 IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (COALESCE(vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY, (rt0.c2 IN (rt0.c0, rt0.c2)), (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY, (rt0.c2 IN (rt0.c0, rt0.c2)), (rt0.c3 IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (COALESCE(vt0.c0 COLLATE RTRIM, rt0.c3 COLLATE BINARY, (rt0.c2 IN (rt0.c0, rt0.c2)), (rt0.c3 IN ())));
SELECT * FROM rt0, t0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE ((- (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (NULL)) COLLATE BINARY);
SELECT * FROM t0 WHERE (-1.888714688E9) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)|('-775218959')), (((t0.c0)) BETWEEN ((t0.c0)) AND (('-602387561'))), (NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS TEXT), ((t0.c0) IS FALSE)))), ((NULL) IS FALSE)  NULLS FIRST, CASE '1e500'  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0)) NOT BETWEEN (('-J#*')) AND ((t0.c0))) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS FIRST, '낡-7i''a}' ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1.888714688E9) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)|('-775218959')), (((t0.c0)) BETWEEN ((t0.c0)) AND (('-602387561'))), (NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS TEXT), ((t0.c0) IS FALSE)))), ((NULL) IS FALSE)  NULLS FIRST, CASE '1e500'  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0)) NOT BETWEEN (('-J#*')) AND ((t0.c0))) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS FIRST, '낡-7i''a}' ASC);
SELECT * FROM t0 WHERE (-1.888714688E9) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)|('-775218959')), (((t0.c0)) BETWEEN ((t0.c0)) AND (('-602387561'))), (NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS TEXT), ((t0.c0) IS FALSE)))), ((NULL) IS FALSE)  NULLS FIRST, CASE '1e500'  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0)) NOT BETWEEN (('-J#*')) AND ((t0.c0))) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS FIRST, '낡-7i''a}' ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1.888714688E9) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)|('-775218959')), (((t0.c0)) BETWEEN ((t0.c0)) AND (('-602387561'))), (NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS TEXT), ((t0.c0) IS FALSE)))), ((NULL) IS FALSE)  NULLS FIRST, CASE '1e500'  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0)) NOT BETWEEN (('-J#*')) AND ((t0.c0))) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS FIRST, '낡-7i''a}' ASC);
SELECT * FROM t0 WHERE (-1.888714688E9) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0)|('-775218959')), (((t0.c0)) BETWEEN ((t0.c0)) AND (('-602387561'))), (NOT (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS TEXT), ((t0.c0) IS FALSE)))), ((NULL) IS FALSE)  NULLS FIRST, CASE '1e500'  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0)) NOT BETWEEN (('-J#*')) AND ((t0.c0))) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS FIRST, '낡-7i''a}' ASC;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST((rt0.c2 IN (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST((rt0.c2 IN (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST((rt0.c2 IN (vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ('^,');
SELECT SUM(count) FROM (SELECT (('^,') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('^,');
SELECT SUM(count) FROM (SELECT (('^,') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('^,');
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((x'', vt0.c0, t0.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (+ (t0.c0)))) AND ((((vt0.c1) NOT NULL), ((((t0.c0)OR(t0.c0)))OR(vt0.c1)), (- ('1733225569'))))) WHERE (CASE WHEN (('') NOT NULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('') NOT NULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((x'', vt0.c0, t0.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (+ (t0.c0)))) AND ((((vt0.c1) NOT NULL), ((((t0.c0)OR(t0.c0)))OR(vt0.c1)), (- ('1733225569'))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((x'', vt0.c0, t0.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (+ (t0.c0)))) AND ((((vt0.c1) NOT NULL), ((((t0.c0)OR(t0.c0)))OR(vt0.c1)), (- ('1733225569'))))) WHERE (CASE WHEN (('') NOT NULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('') NOT NULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((x'', vt0.c0, t0.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (+ (t0.c0)))) AND ((((vt0.c1) NOT NULL), ((((t0.c0)OR(t0.c0)))OR(vt0.c1)), (- ('1733225569'))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((x'', vt0.c0, t0.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (+ (t0.c0)))) AND ((((vt0.c1) NOT NULL), ((((t0.c0)OR(t0.c0)))OR(vt0.c1)), (- ('1733225569'))))) WHERE (CASE WHEN (('') NOT NULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)) END);
SELECT * FROM rt0 WHERE ((- (((rt0.c1) IS TRUE)))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c3) NOT BETWEEN (0.21001077493259612) AND (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c3) NOT BETWEEN (0.21001077493259612) AND (rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (((rt0.c1) IS TRUE)))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c3) NOT BETWEEN (0.21001077493259612) AND (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c3) NOT BETWEEN (0.21001077493259612) AND (rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- (((rt0.c1) IS TRUE)))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c3) NOT BETWEEN (0.21001077493259612) AND (rt0.c3)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c3 AS INTEGER)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c0))  NULLS FIRST, (((t0.c0 COLLATE BINARY))<=(((t0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c0))  NULLS FIRST, (((t0.c0 COLLATE BINARY))<=(((t0.c0 IN (rt0.c2))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c3 AS INTEGER)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c0))  NULLS FIRST, (((t0.c0 COLLATE BINARY))<=(((t0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c0))  NULLS FIRST, (((t0.c0 COLLATE BINARY))<=(((t0.c0 IN (rt0.c2))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c3 AS INTEGER)) ORDER BY ((((rt0.c0) ISNULL)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c0))  NULLS FIRST, (((t0.c0 COLLATE BINARY))<=(((t0.c0 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((- (rt0.c3)) IN (((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN (((((t0.c0)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((- (rt0.c3)) IN (((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN (((((t0.c0)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((- (rt0.c3)) IN (((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))));
SELECT ALL * FROM t0, rt0 WHERE (((0.6175412710372818) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((0.6175412710372818) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((0.6175412710372818) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((0.6175412710372818) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((0.6175412710372818) IS TRUE));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (115583943))) IS FALSE)) ORDER BY (((NOT (t0.c0)))>=(t0.c0)) ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE)  NULLS LAST, (((NULL)<=(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (115583943))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0)))>=(t0.c0)) ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE)  NULLS LAST, (((NULL)<=(t0.c0)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (115583943))) IS FALSE)) ORDER BY (((NOT (t0.c0)))>=(t0.c0)) ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE)  NULLS LAST, (((NULL)<=(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (115583943))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0)))>=(t0.c0)) ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE)  NULLS LAST, (((NULL)<=(t0.c0)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (115583943))) IS FALSE)) ORDER BY (((NOT (t0.c0)))>=(t0.c0)) ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE)  NULLS LAST, (((NULL)<=(t0.c0)) IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0)GLOB(rt0.c0)))OR((x'5e89' IN ()))))OR(SQLITE_COMPILEOPTION_GET(rt0.c2))) WHERE ((((rt0.c1 IN (rt0.c3))) ISNULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))) AND (TRIM(DISTINCT '''QE'))) ASC, NULLIF(CAST(rt0.c1 AS NUMERIC), rt0.c2) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0)GLOB(rt0.c0)))OR((x'5e89' IN ()))))OR(SQLITE_COMPILEOPTION_GET(rt0.c2))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))) AND (TRIM(DISTINCT '''QE'))) ASC, NULLIF(CAST(rt0.c1 AS NUMERIC), rt0.c2) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0)GLOB(rt0.c0)))OR((x'5e89' IN ()))))OR(SQLITE_COMPILEOPTION_GET(rt0.c2))) WHERE ((((rt0.c1 IN (rt0.c3))) ISNULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))) AND (TRIM(DISTINCT '''QE'))) ASC, NULLIF(CAST(rt0.c1 AS NUMERIC), rt0.c2) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0)GLOB(rt0.c0)))OR((x'5e89' IN ()))))OR(SQLITE_COMPILEOPTION_GET(rt0.c2))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))) AND (TRIM(DISTINCT '''QE'))) ASC, NULLIF(CAST(rt0.c1 AS NUMERIC), rt0.c2) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0)GLOB(rt0.c0)))OR((x'5e89' IN ()))))OR(SQLITE_COMPILEOPTION_GET(rt0.c2))) WHERE ((((rt0.c1 IN (rt0.c3))) ISNULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0))) AND (TRIM(DISTINCT '''QE'))) ASC, NULLIF(CAST(rt0.c1 AS NUMERIC), rt0.c2) DESC;
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY IFNULL(INSTR(t0.c0, t0.c0), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ASC, '~#' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY IFNULL(INSTR(t0.c0, t0.c0), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ASC, '~#' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY IFNULL(INSTR(t0.c0, t0.c0), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ASC, '~#' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY IFNULL(INSTR(t0.c0, t0.c0), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ASC, '~#' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY IFNULL(INSTR(t0.c0, t0.c0), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '', t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) ASC, '~#' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((~ ((((t0.c0))>=((0.07965137020260271))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c0))>=((0.07965137020260271)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((~ ((((t0.c0))>=((0.07965137020260271))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c0))>=((0.07965137020260271)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((~ ((((t0.c0))>=((0.07965137020260271))))));
SELECT * FROM rt0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL))  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c1 IN ()) IN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c1 IN ()) IN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (((vt0.c1 IN ()) IN ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)<>(rt0.c1))  WHEN ((rt0.c3) ISNULL) THEN CAST(rt0.c1 AS BLOB) ELSE ((((NULL)AND(rt0.c2)))OR(rt0.c3)) END) ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c3) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<>(rt0.c1))  WHEN ((rt0.c3) ISNULL) THEN CAST(rt0.c1 AS BLOB) ELSE ((((NULL)AND(rt0.c2)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c3) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)<>(rt0.c1))  WHEN ((rt0.c3) ISNULL) THEN CAST(rt0.c1 AS BLOB) ELSE ((((NULL)AND(rt0.c2)))OR(rt0.c3)) END) ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c3) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<>(rt0.c1))  WHEN ((rt0.c3) ISNULL) THEN CAST(rt0.c1 AS BLOB) ELSE ((((NULL)AND(rt0.c2)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c3) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)<>(rt0.c1))  WHEN ((rt0.c3) ISNULL) THEN CAST(rt0.c1 AS BLOB) ELSE ((((NULL)AND(rt0.c2)))OR(rt0.c3)) END) ORDER BY (NULLIF(DISTINCT rt0.c2, rt0.c3) IN ());
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c0) NOT NULL)))<((((t0.c0)>=(rt0.c1)))))) ORDER BY (('2034273091') IS TRUE) DESC, LIKELIHOOD((t0.c0 IN ()), 0.03351353395829337) ASC, (((rt0.c1)|(rt0.c2)) IN (JULIANDAY(rt0.c3, rt0.c2, t0.c0, rt0.c2, rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT NULL)))<((((t0.c0)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (('2034273091') IS TRUE) DESC, LIKELIHOOD((t0.c0 IN ()), 0.03351353395829337) ASC, (((rt0.c1)|(rt0.c2)) IN (JULIANDAY(rt0.c3, rt0.c2, t0.c0, rt0.c2, rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c0) NOT NULL)))<((((t0.c0)>=(rt0.c1)))))) ORDER BY (('2034273091') IS TRUE) DESC, LIKELIHOOD((t0.c0 IN ()), 0.03351353395829337) ASC, (((rt0.c1)|(rt0.c2)) IN (JULIANDAY(rt0.c3, rt0.c2, t0.c0, rt0.c2, rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT NULL)))<((((t0.c0)>=(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (('2034273091') IS TRUE) DESC, LIKELIHOOD((t0.c0 IN ()), 0.03351353395829337) ASC, (((rt0.c1)|(rt0.c2)) IN (JULIANDAY(rt0.c3, rt0.c2, t0.c0, rt0.c2, rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((((rt0.c0) NOT NULL)))<((((t0.c0)>=(rt0.c1)))))) ORDER BY (('2034273091') IS TRUE) DESC, LIKELIHOOD((t0.c0 IN ()), 0.03351353395829337) ASC, (((rt0.c1)|(rt0.c2)) IN (JULIANDAY(rt0.c3, rt0.c2, t0.c0, rt0.c2, rt0.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN x'3c0a85da' END  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0))<((t0.c0))) ELSE ((t0.c0)&(t0.c0)) END) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==((~ (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN x'3c0a85da' END  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0))<((t0.c0))) ELSE ((t0.c0)&(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))=((~ (t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN x'3c0a85da' END  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0))<((t0.c0))) ELSE ((t0.c0)&(t0.c0)) END) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==((~ (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN x'3c0a85da' END  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0))<((t0.c0))) ELSE ((t0.c0)&(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))=((~ (t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN x'3c0a85da' END  WHEN CAST(t0.c0 AS REAL) THEN (((t0.c0))<((t0.c0))) ELSE ((t0.c0)&(t0.c0)) END) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))==((~ (t0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (x'8688') AND (vt0.c1)) AS INTEGER)) ORDER BY (- ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (x'8688') AND (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (x'8688') AND (vt0.c1)) AS INTEGER)) ORDER BY (- ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (x'8688') AND (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (x'8688') AND (vt0.c1)) AS INTEGER)) ORDER BY (- ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c2))<((rt0.c3)))))) ORDER BY TYPEOF(rt0.c1), '-2068276544';
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))<((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(rt0.c1), '-2068276544');
SELECT COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c2))<((rt0.c3)))))) ORDER BY TYPEOF(rt0.c1), '-2068276544';
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2))<((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(rt0.c1), '-2068276544');
SELECT COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c2))<((rt0.c3)))))) ORDER BY TYPEOF(rt0.c1), '-2068276544';
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((0X4e6db9a7) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UNLIKELY(DISTINCT rt0.c0))) WHERE (rt0.c0) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((0x4e6db9a7) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UNLIKELY(DISTINCT rt0.c0))) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((0X4e6db9a7) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UNLIKELY(DISTINCT rt0.c0))) WHERE (rt0.c0) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((0x4e6db9a7) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UNLIKELY(DISTINCT rt0.c0))) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((0X4e6db9a7) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UNLIKELY(DISTINCT rt0.c0))) WHERE (rt0.c0) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TOTAL_CHANGES())) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0) ISNULL)))<=(((- (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TOTAL_CHANGES())) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))<=(((- (vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TOTAL_CHANGES())) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0) ISNULL)))<=(((- (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TOTAL_CHANGES())) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL)))<=(((- (vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TOTAL_CHANGES())) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0) ISNULL)))<=(((- (vt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))>((rt0.c3)))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>((rt0.c3)))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))>((rt0.c3)))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>((rt0.c3)))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))>((rt0.c3)))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('ghwg0k'))) AS BLOB) WHERE (((x'ca7f' COLLATE NOCASE) NOT BETWEEN ((((((((('-1599282240')AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2))) AND (0xffffffffdd500a82))) ORDER BY ((vt0.c1) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'ca7f' COLLATE NOCASE) NOT BETWEEN ((((((((('-1599282240')AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2))) AND (0Xffffffffdd500a82))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('ghwg0k'))) AS BLOB) ORDER BY ((vt0.c1) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('ghwg0k'))) AS BLOB) WHERE (((x'ca7f' COLLATE NOCASE) NOT BETWEEN ((((((((('-1599282240')AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2))) AND (0xffffffffdd500a82))) ORDER BY ((vt0.c1) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'ca7f' COLLATE NOCASE) NOT BETWEEN ((((((((('-1599282240')AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2))) AND (0Xffffffffdd500a82))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('ghwg0k'))) AS BLOB) ORDER BY ((vt0.c1) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('ghwg0k'))) AS BLOB) WHERE (((x'ca7f' COLLATE NOCASE) NOT BETWEEN ((((((((('-1599282240')AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2))) AND (0xffffffffdd500a82))) ORDER BY ((vt0.c1) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((t0.c0))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE rt0.c3  WHEN 0xffffffffca5527ce THEN rt0.c1 ELSE t0.c0 END COLLATE NOCASE WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)!=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)<>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE rt0.c3  WHEN 0xffffffffca5527ce THEN rt0.c1 ELSE t0.c0 END COLLATE NOCASE);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE rt0.c3  WHEN 0xffffffffca5527ce THEN rt0.c1 ELSE t0.c0 END COLLATE NOCASE WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)!=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)<>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CASE rt0.c3  WHEN 0xffffffffca5527ce THEN rt0.c1 ELSE t0.c0 END COLLATE NOCASE);
SELECT ALL * FROM rt0 INNER JOIN t0 ON CASE rt0.c3  WHEN 0xffffffffca5527ce THEN rt0.c1 ELSE t0.c0 END COLLATE NOCASE WHERE (((CASE t0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)!=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<>(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<>(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)<>(rt0.c1)));
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))=((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))==((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))=((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))==((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))=((~ (rt0.c3)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(rt0.c0))) NOT NULL) CROSS JOIN t0 ON (((rt0.c0 IN (rt0.c3))) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c1) NOTNULL))) WHERE (IFNULL(CAST(rt0.c3 AS TEXT), -1183400115));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c3 AS TEXT), -1183400115)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(rt0.c0))) NOT NULL) CROSS JOIN t0 ON (((rt0.c0 IN (rt0.c3))) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(rt0.c0))) NOT NULL) CROSS JOIN t0 ON (((rt0.c0 IN (rt0.c3))) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c1) NOTNULL))) WHERE (IFNULL(CAST(rt0.c3 AS TEXT), -1183400115));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c3 AS TEXT), -1183400115)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((t0.c0)AND(rt0.c0))) NOT NULL) CROSS JOIN t0 ON (((rt0.c0 IN (rt0.c3))) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((rt0.c0)AND(t0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY json_remove(((((t0.c0)OR(',J')))OR(vt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(t0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY json_remove(((((t0.c0)OR(',J')))OR(vt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((rt0.c0)AND(t0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY json_remove(((((t0.c0)OR(',J')))OR(vt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(t0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY json_remove(((((t0.c0)OR(',J')))OR(vt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((rt0.c0)AND(t0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY json_remove(((((t0.c0)OR(',J')))OR(vt0.c1)), CASE WHEN rt0.c1 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INDEXED BY i28 INNER JOIN t0 ON CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM INNER JOIN rt0 ON ((((((rt0.c2)IS NOT(vt0.c1)))OR(((rt0.c0)>(vt0.c1)))))OR((((vt0.c0, rt0.c3, rt0.c1))<((rt0.c3, vt0.c0, vt0.c1))))) WHERE ('') ORDER BY (~ ((vt0.c1 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 INDEXED BY i28 INNER JOIN t0 ON CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM INNER JOIN rt0 ON ((((((rt0.c2)IS NOT(vt0.c1)))OR(((rt0.c0)>(vt0.c1)))))OR((((vt0.c0, rt0.c3, rt0.c1))<((rt0.c3, vt0.c0, vt0.c1))))) ORDER BY (~ ((vt0.c1 IN (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 INDEXED BY i28 INNER JOIN t0 ON CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM INNER JOIN rt0 ON ((((((rt0.c2)IS NOT(vt0.c1)))OR(((rt0.c0)>(vt0.c1)))))OR((((vt0.c0, rt0.c3, rt0.c1))<((rt0.c3, vt0.c0, vt0.c1))))) WHERE ('') ORDER BY (~ ((vt0.c1 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 INDEXED BY i28 INNER JOIN t0 ON CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM INNER JOIN rt0 ON ((((((rt0.c2)IS NOT(vt0.c1)))OR(((rt0.c0)>(vt0.c1)))))OR((((vt0.c0, rt0.c3, rt0.c1))<((rt0.c3, vt0.c0, vt0.c1))))) ORDER BY (~ ((vt0.c1 IN (t0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (SUBSTR(NULL, vt0.c1)) ORDER BY (NOT (((vt0.c0)<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(NULL, vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)<<(vt0.c1)))));
SELECT * FROM vt0 WHERE (SUBSTR(NULL, vt0.c1)) ORDER BY (NOT (((vt0.c0)<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(NULL, vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)<<(vt0.c1)))));
SELECT * FROM vt0 WHERE (SUBSTR(NULL, vt0.c1)) ORDER BY (NOT (((vt0.c0)<<(vt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE '-419556761'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c2 END WHEN IFNULL(rt0.c0, rt0.c3) THEN rt0.c2 WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c1 COLLATE BINARY ELSE LIKELY(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE '-419556761'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c2 END WHEN IFNULL(rt0.c0, rt0.c3) THEN rt0.c2 WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c1 COLLATE BINARY ELSE LIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE '-419556761'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c2 END WHEN IFNULL(rt0.c0, rt0.c3) THEN rt0.c2 WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c1 COLLATE BINARY ELSE LIKELY(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE '-419556761'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c2 END WHEN IFNULL(rt0.c0, rt0.c3) THEN rt0.c2 WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c1 COLLATE BINARY ELSE LIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE '-419556761'  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN x'' THEN rt0.c2 END WHEN IFNULL(rt0.c0, rt0.c3) THEN rt0.c2 WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c1 COLLATE BINARY ELSE LIKELY(DISTINCT rt0.c1) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ('-1026124509' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ('-1026124509' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ('-1026124509' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ('-1026124509' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ('-1026124509' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1341470282');
SELECT SUM(count) FROM (SELECT ALL (('-1341470282') IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1341470282');
SELECT SUM(count) FROM (SELECT ALL (('-1341470282') IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1341470282');
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0)||(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)||(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0)||(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)||(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0)||(t0.c0)) AS BLOB));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON json_type((((rt0.c3, t0.c0, rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1)))) RIGHT OUTER JOIN t0 ON 0.30266203377283296 WHERE ((('R') BETWEEN (NULL) AND ((0.8132805793887784 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('R') BETWEEN (NULL) AND ((0.8132805793887784 IN (t0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON json_type((((rt0.c3, t0.c0, rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1)))) RIGHT OUTER JOIN t0 ON 0.30266203377283296);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON json_type((((rt0.c3, t0.c0, rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1)))) RIGHT OUTER JOIN t0 ON 0.30266203377283296 WHERE ((('R') BETWEEN (NULL) AND ((0.8132805793887784 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('R') BETWEEN (NULL) AND ((0.8132805793887784 IN (t0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON json_type((((rt0.c3, t0.c0, rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c3)) AND ((vt0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c1)))) RIGHT OUTER JOIN t0 ON 0.30266203377283296);
SELECT * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((x'4e3d') NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c2)))) ASC, (~ (vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'4e3d') NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c2)))) ASC, (~ (vt0.c0)) COLLATE RTRIM DESC);
SELECT * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((x'4e3d') NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c2)))) ASC, (~ (vt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'4e3d') NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c2)))) ASC, (~ (vt0.c0)) COLLATE RTRIM DESC);
SELECT * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((x'4e3d') NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c2)))) ASC, (~ (vt0.c0)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((rt0.c3 IN (vt0.c1)), 0.8799483854953282)) ORDER BY ((((rt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (rt0.c3) AND (NULL)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((CAST(vt0.c0 AS TEXT), (('-2068276544') BETWEEN (rt0.c3) AND (rt0.c0)), (rt0.c0 IN ())))) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((rt0.c3)IS(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt0.c3 IN (vt0.c1)), 0.8799483854953282)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (rt0.c3) AND (NULL)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((CAST(vt0.c0 AS TEXT), (('-2068276544') BETWEEN (rt0.c3) AND (rt0.c0)), (rt0.c0 IN ())))) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((rt0.c3)IS(vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((rt0.c3 IN (vt0.c1)), 0.8799483854953282)) ORDER BY ((((rt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (rt0.c3) AND (NULL)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((CAST(vt0.c0 AS TEXT), (('-2068276544') BETWEEN (rt0.c3) AND (rt0.c0)), (rt0.c0 IN ())))) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((rt0.c3)IS(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((rt0.c3 IN (vt0.c1)), 0.8799483854953282)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (rt0.c3) AND (NULL)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((CAST(vt0.c0 AS TEXT), (('-2068276544') BETWEEN (rt0.c3) AND (rt0.c0)), (rt0.c0 IN ())))) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((rt0.c3)IS(vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((rt0.c3 IN (vt0.c1)), 0.8799483854953282)) ORDER BY ((((rt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (rt0.c3) AND (NULL)), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((CAST(vt0.c0 AS TEXT), (('-2068276544') BETWEEN (rt0.c3) AND (rt0.c0)), (rt0.c0 IN ())))) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((rt0.c3)IS(vt0.c0)))))  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((t0.c0)||(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||((- (t0.c0)))) DESC  NULLS LAST, (0.0433691038320847 IN (CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)||(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||((- (t0.c0)))) DESC  NULLS LAST, (0.0433691038320847 IN (CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((t0.c0)||(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||((- (t0.c0)))) DESC  NULLS LAST, (0.0433691038320847 IN (CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)||(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||((- (t0.c0)))) DESC  NULLS LAST, (0.0433691038320847 IN (CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((t0.c0)||(((rt0.c3) NOT NULL)))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))||((- (t0.c0)))) DESC  NULLS LAST, (0.0433691038320847 IN (CASE WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c3) IS TRUE))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (MIN(((vt0.c0) ISNULL), UPPER(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((MIN(((vt0.c0) ISNULL), UPPER(rt0.c1))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (MIN(((vt0.c0) ISNULL), UPPER(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((MIN(((vt0.c0) ISNULL), UPPER(rt0.c1))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (MIN(((vt0.c0) ISNULL), UPPER(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)LIKE(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)LIKE(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)LIKE(rt0.c3)));
SELECT * FROM vt0 WHERE ('*') ORDER BY HEX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))  NULLS FIRST, (vt0.c1 IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), x'f15e'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('*') IS TRUE)  as count FROM vt0 ORDER BY HEX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))  NULLS FIRST, (vt0.c1 IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), x'f15e'))  NULLS FIRST);
SELECT * FROM vt0 WHERE ('*') ORDER BY HEX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))  NULLS FIRST, (vt0.c1 IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), x'f15e'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('*') IS TRUE)  as count FROM vt0 ORDER BY HEX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))  NULLS FIRST, (vt0.c1 IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), x'f15e'))  NULLS FIRST);
SELECT * FROM vt0 WHERE ('*') ORDER BY HEX(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))  NULLS FIRST, (vt0.c1 IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), x'f15e'))  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (IFNULL(DISTINCT (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c0))), ((rt0.c0)IS NOT(t0.c0)))) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ())  NULLS FIRST, '峺T.k3%' COLLATE RTRIM DESC, (NOT (((t0.c0)>>(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c0))), ((rt0.c0)IS NOT(t0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CAST(rt0.c3 AS INTEGER) IN ())  NULLS FIRST, '峺T.k3%' COLLATE RTRIM DESC, (NOT (((t0.c0)>>(x'')))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (IFNULL(DISTINCT (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c0))), ((rt0.c0)IS NOT(t0.c0)))) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ())  NULLS FIRST, '峺T.k3%' COLLATE RTRIM DESC, (NOT (((t0.c0)>>(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c0))), ((rt0.c0)IS NOT(t0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CAST(rt0.c3 AS INTEGER) IN ())  NULLS FIRST, '峺T.k3%' COLLATE RTRIM DESC, (NOT (((t0.c0)>>(x'')))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (IFNULL(DISTINCT (((t0.c0, t0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c0))), ((rt0.c0)IS NOT(t0.c0)))) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ())  NULLS FIRST, '峺T.k3%' COLLATE RTRIM DESC, (NOT (((t0.c0)>>(x'')))) ASC;
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(t0.c0)))AND(((t0.c0)>(t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN ())))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM)) AND (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), UPPER(t0.c0), CAST(t0.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))OR(t0.c0)))AND(((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN ())))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM)) AND (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), UPPER(t0.c0), CAST(t0.c0 AS REAL)))) ASC);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(t0.c0)))AND(((t0.c0)>(t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN ())))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM)) AND (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), UPPER(t0.c0), CAST(t0.c0 AS REAL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))OR(t0.c0)))AND(((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN ())))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM)) AND (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), UPPER(t0.c0), CAST(t0.c0 AS REAL)))) ASC);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(t0.c0)))AND(((t0.c0)>(t0.c0))))) ORDER BY (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((t0.c0 IN ())))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM)) AND (((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), UPPER(t0.c0), CAST(t0.c0 AS REAL)))) ASC;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(NULL)) THEN 0.4343957751729719 END) ORDER BY (((vt0.c1, vt0.c1, 0.9182408833730228)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)), vt0.c1, ((vt0.c0) ISNULL))) AND ((((vt0.c1)<(x'c3c3d30c')), vt0.c1, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)-(NULL)) THEN 0.4343957751729719 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, 0.9182408833730228)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)), vt0.c1, ((vt0.c0) ISNULL))) AND ((((vt0.c1)<(x'c3c3d30c')), vt0.c1, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(NULL)) THEN 0.4343957751729719 END) ORDER BY (((vt0.c1, vt0.c1, 0.9182408833730228)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)), vt0.c1, ((vt0.c0) ISNULL))) AND ((((vt0.c1)<(x'c3c3d30c')), vt0.c1, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)-(NULL)) THEN 0.4343957751729719 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, 0.9182408833730228)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)), vt0.c1, ((vt0.c0) ISNULL))) AND ((((vt0.c1)<(x'c3c3d30c')), vt0.c1, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(NULL)) THEN 0.4343957751729719 END) ORDER BY (((vt0.c1, vt0.c1, 0.9182408833730228)) NOT BETWEEN ((((vt0.c0)>=(vt0.c1)), vt0.c1, ((vt0.c0) ISNULL))) AND ((((vt0.c1)<(x'c3c3d30c')), vt0.c1, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((((((+ (t0.c0)))AND((NOT (t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c0)))AND((NOT (t0.c0)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((+ (t0.c0)))AND((NOT (t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c0)))AND((NOT (t0.c0)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((+ (t0.c0)))AND((NOT (t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(NULL)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (vt0.c1)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ('1678189329') ORDER BY (x'' COLLATE RTRIM IN ()), ((((t0.c0)<(t0.c0)))GLOB(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1678189329') IS TRUE)  as count FROM t0 ORDER BY (x'' COLLATE RTRIM IN ()), ((((t0.c0)<(t0.c0)))GLOB(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('1678189329') ORDER BY (x'' COLLATE RTRIM IN ()), ((((t0.c0)<(t0.c0)))GLOB(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1678189329') IS TRUE)  as count FROM t0 ORDER BY (x'' COLLATE RTRIM IN ()), ((((t0.c0)<(t0.c0)))GLOB(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('1678189329') ORDER BY (x'' COLLATE RTRIM IN ()), ((((t0.c0)<(t0.c0)))GLOB(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)*(t0.c0)) IN (x''))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)*(t0.c0)) IN (x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)*(t0.c0)) IN (x''))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)*(t0.c0)) IN (x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)*(t0.c0)) IN (x''))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<>(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)!=(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<>(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)!=(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<>(rt0.c3)) AS BLOB));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON GLOB(((rt0.c1)/(t0.c0)), UPPER(vt0.c0)) CROSS JOIN t0 ON ((((rt0.c2, rt0.c1, vt0.c0))<=((rt0.c1, 'H䆹', '0.7010332200194059'))) IN ()) WHERE ((((vt0.c0) IS FALSE) IN (((vt0.c1) IS FALSE)))) ORDER BY ((((((((((((rt0.c1)OR(vt0.c0)))OR('1''!y')))OR(IFNULL(DISTINCT rt0.c3, rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(CAST(rt0.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON GLOB(((rt0.c1)/(t0.c0)), UPPER(vt0.c0)) CROSS JOIN t0 ON ((((rt0.c2, rt0.c1, vt0.c0))<=((rt0.c1, 'H䆹', '0.7010332200194059'))) IN ()) ORDER BY ((((((((((((rt0.c1)OR(vt0.c0)))OR('1''!y')))OR(IFNULL(DISTINCT rt0.c3, rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(CAST(rt0.c3 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON GLOB(((rt0.c1)/(t0.c0)), UPPER(vt0.c0)) CROSS JOIN t0 ON ((((rt0.c2, rt0.c1, vt0.c0))<=((rt0.c1, 'H䆹', '0.7010332200194059'))) IN ()) WHERE ((((vt0.c0) IS FALSE) IN (((vt0.c1) IS FALSE)))) ORDER BY ((((((((((((rt0.c1)OR(vt0.c0)))OR('1''!y')))OR(IFNULL(DISTINCT rt0.c3, rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(CAST(rt0.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON GLOB(((rt0.c1)/(t0.c0)), UPPER(vt0.c0)) CROSS JOIN t0 ON ((((rt0.c2, rt0.c1, vt0.c0))<=((rt0.c1, 'H䆹', '0.7010332200194059'))) IN ()) ORDER BY ((((((((((((rt0.c1)OR(vt0.c0)))OR('1''!y')))OR(IFNULL(DISTINCT rt0.c3, rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(CAST(rt0.c3 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON GLOB(((rt0.c1)/(t0.c0)), UPPER(vt0.c0)) CROSS JOIN t0 ON ((((rt0.c2, rt0.c1, vt0.c0))<=((rt0.c1, 'H䆹', '0.7010332200194059'))) IN ()) WHERE ((((vt0.c0) IS FALSE) IN (((vt0.c1) IS FALSE)))) ORDER BY ((((((((((((rt0.c1)OR(vt0.c0)))OR('1''!y')))OR(IFNULL(DISTINCT rt0.c3, rt0.c0))))OR(CAST(rt0.c3 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_GET(vt0.c1))))OR(CAST(rt0.c3 AS NUMERIC)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((((rt0.c1)OR('')))AND(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR('')))AND(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((((rt0.c1)OR('')))AND(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR('')))AND(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((((rt0.c1)OR('')))AND(t0.c0)) AS BLOB));
SELECT * FROM rt0 WHERE (((NULLIF(rt0.c0, rt0.c0)) NOTNULL)) ORDER BY CASE WHEN 752898088 THEN (((rt0.c3))<((rt0.c0))) WHEN UNLIKELY(rt0.c3) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c0 THEN ((rt0.c3)/(rt0.c0)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)>=(rt0.c3)) END ASC, IFNULL(DISTINCT (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((-4.19556761E8, rt0.c3, 'K	Hs긧|('))), 0.8261866480178053);
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c0, rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN 752898088 THEN (((rt0.c3))<((rt0.c0))) WHEN UNLIKELY(rt0.c3) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c0 THEN ((rt0.c3)/(rt0.c0)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)>=(rt0.c3)) END ASC, IFNULL(DISTINCT (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((-4.19556761E8, rt0.c3, 'K	Hs긧|('))), 0.8261866480178053));
SELECT * FROM rt0 WHERE (((NULLIF(rt0.c0, rt0.c0)) NOTNULL)) ORDER BY CASE WHEN 752898088 THEN (((rt0.c3))<((rt0.c0))) WHEN UNLIKELY(rt0.c3) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c0 THEN ((rt0.c3)/(rt0.c0)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)>=(rt0.c3)) END ASC, IFNULL(DISTINCT (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((-4.19556761E8, rt0.c3, 'K	Hs긧|('))), 0.8261866480178053);
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c0, rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN 752898088 THEN (((rt0.c3))<((rt0.c0))) WHEN UNLIKELY(rt0.c3) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c0 THEN ((rt0.c3)/(rt0.c0)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)>=(rt0.c3)) END ASC, IFNULL(DISTINCT (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((-4.19556761E8, rt0.c3, 'K	Hs긧|('))), 0.8261866480178053));
SELECT * FROM rt0 WHERE (((NULLIF(rt0.c0, rt0.c0)) NOTNULL)) ORDER BY CASE WHEN 752898088 THEN (((rt0.c3))<((rt0.c0))) WHEN UNLIKELY(rt0.c3) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c0 THEN ((rt0.c3)/(rt0.c0)) WHEN CAST(rt0.c2 AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)>=(rt0.c3)) END ASC, IFNULL(DISTINCT (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, NULL)) AND ((-4.19556761E8, rt0.c3, 'K	Hs긧|('))), 0.8261866480178053);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON rt0.c2 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON rt0.c2 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c2);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON rt0.c2 WHERE (rt0.c3);
SELECT * FROM vt0, rt0 CROSS JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND (((t0.c0 IN ())))) WHERE ((((COALESCE(vt0.c0, t0.c0), ((rt0.c3)AND(vt0.c1)), (+ (vt0.c0))))<>((NULL, 0.31554801657132603, t0.c0))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(vt0.c0, t0.c0), ((rt0.c3)AND(vt0.c1)), (+ (vt0.c0))))<>((NULL, 0.31554801657132603, t0.c0)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND (((t0.c0 IN ())))));
SELECT * FROM vt0, rt0 CROSS JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND (((t0.c0 IN ())))) WHERE ((((COALESCE(vt0.c0, t0.c0), ((rt0.c3)AND(vt0.c1)), (+ (vt0.c0))))<>((NULL, 0.31554801657132603, t0.c0))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(vt0.c0, t0.c0), ((rt0.c3)AND(vt0.c1)), (+ (vt0.c0))))<>((NULL, 0.31554801657132603, t0.c0)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND (((t0.c0 IN ())))));
SELECT * FROM vt0, rt0 CROSS JOIN t0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) AND (((t0.c0 IN ())))) WHERE ((((COALESCE(vt0.c0, t0.c0), ((rt0.c3)AND(vt0.c1)), (+ (vt0.c0))))<>((NULL, 0.31554801657132603, t0.c0))));
SELECT * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)%(rt0.c0)))) ORDER BY CAST(0.43718921990895465 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)%(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.43718921990895465 AS BLOB) DESC);
SELECT * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)%(rt0.c0)))) ORDER BY CAST(0.43718921990895465 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)%(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.43718921990895465 AS BLOB) DESC);
SELECT * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1)%(rt0.c0)))) ORDER BY CAST(0.43718921990895465 AS BLOB) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (0.19601777615810456))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.19601777615810456))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (0.19601777615810456))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (0.19601777615810456))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (0.19601777615810456))) ISNULL));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c3, vt0.c1, rt0.c0))>=((rt0.c3, vt0.c0, rt0.c3)))) NOT BETWEEN (((rt0.c3)GLOB(t0.c0))) AND (((t0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, vt0.c1, rt0.c0))>=((rt0.c3, vt0.c0, rt0.c3)))) NOT BETWEEN (((rt0.c3)GLOB(t0.c0))) AND (((t0.c0)*(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c3, vt0.c1, rt0.c0))>=((rt0.c3, vt0.c0, rt0.c3)))) NOT BETWEEN (((rt0.c3)GLOB(t0.c0))) AND (((t0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, vt0.c1, rt0.c0))>=((rt0.c3, vt0.c0, rt0.c3)))) NOT BETWEEN (((rt0.c3)GLOB(t0.c0))) AND (((t0.c0)*(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c3, vt0.c1, rt0.c0))>=((rt0.c3, vt0.c0, rt0.c3)))) NOT BETWEEN (((rt0.c3)GLOB(t0.c0))) AND (((t0.c0)*(rt0.c2)))));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (json_remove(vt0.c0, rt0.c2, rt0.c3, vt0.c0) IN ()) WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (json_remove(vt0.c0, rt0.c2, rt0.c3, vt0.c0) IN ()));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (json_remove(vt0.c0, rt0.c2, rt0.c3, vt0.c0) IN ()) WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (json_remove(vt0.c0, rt0.c2, rt0.c3, vt0.c0) IN ()));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (json_remove(vt0.c0, rt0.c2, rt0.c3, vt0.c0) IN ()) WHERE (CAST(vt0.c0 AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((rt0.c3) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((rt0.c3) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((rt0.c3) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c3)<(vt0.c0))))) ORDER BY ((rt0.c3 IN ()) IN (CASE WHEN vt0.c0 THEN -7.15857293E8 ELSE vt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c3)<(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c3 IN ()) IN (CASE WHEN vt0.c0 THEN -7.15857293E8 ELSE vt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c3)<(vt0.c0))))) ORDER BY ((rt0.c3 IN ()) IN (CASE WHEN vt0.c0 THEN -7.15857293E8 ELSE vt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c3)<(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c3 IN ()) IN (CASE WHEN vt0.c0 THEN -7.15857293E8 ELSE vt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c3)<(vt0.c0))))) ORDER BY ((rt0.c3 IN ()) IN (CASE WHEN vt0.c0 THEN -7.15857293E8 ELSE vt0.c1 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE (CAST((t0.c0 IN (t0.c0)) AS TEXT)) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN ()) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE (CAST((t0.c0 IN (t0.c0)) AS TEXT)) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN ()) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (+ ((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) WHERE (CAST((t0.c0 IN (t0.c0)) AS TEXT)) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE '{⺵'  WHEN rt0.c1 THEN t0.c0 END) IS TRUE)) ORDER BY ((TRIM(rt0.c1, vt0.c1)) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c1))) AND (((((((((t0.c0)OR(rt0.c2)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '{⺵'  WHEN rt0.c1 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((TRIM(rt0.c1, vt0.c1)) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c1))) AND (((((((((t0.c0)OR(rt0.c2)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE '{⺵'  WHEN rt0.c1 THEN t0.c0 END) IS TRUE)) ORDER BY ((TRIM(rt0.c1, vt0.c1)) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c1))) AND (((((((((t0.c0)OR(rt0.c2)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '{⺵'  WHEN rt0.c1 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((TRIM(rt0.c1, vt0.c1)) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c1))) AND (((((((((t0.c0)OR(rt0.c2)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE '{⺵'  WHEN rt0.c1 THEN t0.c0 END) IS TRUE)) ORDER BY ((TRIM(rt0.c1, vt0.c1)) BETWEEN (((((vt0.c0)OR(rt0.c0)))AND(vt0.c1))) AND (((((((((t0.c0)OR(rt0.c2)))AND(NULL)))AND(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1)OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)OR(vt0.c1 COLLATE RTRIM)));
SELECT * FROM vt0, t0, rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY (((rt0.c3, '[NyqERY', rt0.c0)) NOT BETWEEN ((1315813799, vt0.c0 COLLATE NOCASE, (vt0.c1 IN ()))) AND (('1101454730', (rt0.c2 IN ()), ((rt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c3, '[NyqERY', rt0.c0)) NOT BETWEEN ((1315813799, vt0.c0 COLLATE NOCASE, (vt0.c1 IN ()))) AND (('1101454730', (rt0.c2 IN ()), ((rt0.c2) ISNULL)))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY (((rt0.c3, '[NyqERY', rt0.c0)) NOT BETWEEN ((1315813799, vt0.c0 COLLATE NOCASE, (vt0.c1 IN ()))) AND (('1101454730', (rt0.c2 IN ()), ((rt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c3, '[NyqERY', rt0.c0)) NOT BETWEEN ((1315813799, vt0.c0 COLLATE NOCASE, (vt0.c1 IN ()))) AND (('1101454730', (rt0.c2 IN ()), ((rt0.c2) ISNULL)))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY (((rt0.c3, '[NyqERY', rt0.c0)) NOT BETWEEN ((1315813799, vt0.c0 COLLATE NOCASE, (vt0.c1 IN ()))) AND (('1101454730', (rt0.c2 IN ()), ((rt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) ORDER BY ((((0x1071d2d0)||(rt0.c1)))*((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((0X1071d2d0)||(rt0.c1)))*((+ (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) ORDER BY ((((0x1071d2d0)||(rt0.c1)))*((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((0X1071d2d0)||(rt0.c1)))*((+ (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) ORDER BY ((((0x1071d2d0)||(rt0.c1)))*((+ (t0.c0))));
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (json_patch(t0.c0, t0.c0)) AND ((- (t0.c0))))) ORDER BY SQLITE_VERSION() DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (json_patch(t0.c0, t0.c0)) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_VERSION() DESC);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (json_patch(t0.c0, t0.c0)) AND ((- (t0.c0))))) ORDER BY SQLITE_VERSION() DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (json_patch(t0.c0, t0.c0)) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY SQLITE_VERSION() DESC);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (json_patch(t0.c0, t0.c0)) AND ((- (t0.c0))))) ORDER BY SQLITE_VERSION() DESC;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON '' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON '');
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON '' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON '');
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON '' WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE rt0.c1  WHEN NULL THEN rt0.c2 END) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (+ ((rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN NULL THEN rt0.c2 END) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (+ ((rt0.c1 IN (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE rt0.c1  WHEN NULL THEN rt0.c2 END) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (+ ((rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN NULL THEN rt0.c2 END) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (+ ((rt0.c1 IN (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CASE rt0.c1  WHEN NULL THEN rt0.c2 END) NOT BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c0 AS BLOB))) ASC  NULLS LAST, (+ ((rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (CAST(((((((((t0.c0)OR(vt0.c1)))AND('')))OR(vt0.c0)))AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c0)OR(vt0.c1)))AND('')))OR(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((((((((t0.c0)OR(vt0.c1)))AND('')))OR(vt0.c0)))AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t0.c0)OR(vt0.c1)))AND('')))OR(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((((((((t0.c0)OR(vt0.c1)))AND('')))OR(vt0.c0)))AND(vt0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)AND(TRIM(rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, json_insert(0.23263835841970237, (- (rt0.c1)), ((vt0.c0)IS NOT(rt0.c3)), NULLIF(DISTINCT vt0.c0, rt0.c0), rt0.c2 COLLATE BINARY) ASC, 0.08877405328042254 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(TRIM(rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c0 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, json_insert(0.23263835841970237, (- (rt0.c1)), ((vt0.c0)IS NOT(rt0.c3)), NULLIF(DISTINCT vt0.c0, rt0.c0), rt0.c2 COLLATE BINARY) ASC, 0.08877405328042254 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)AND(TRIM(rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, json_insert(0.23263835841970237, (- (rt0.c1)), ((vt0.c0)IS NOT(rt0.c3)), NULLIF(DISTINCT vt0.c0, rt0.c0), rt0.c2 COLLATE BINARY) ASC, 0.08877405328042254 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(TRIM(rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN vt0.c0 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, json_insert(0.23263835841970237, (- (rt0.c1)), ((vt0.c0)IS NOT(rt0.c3)), NULLIF(DISTINCT vt0.c0, rt0.c0), rt0.c2 COLLATE BINARY) ASC, 0.08877405328042254 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)AND(TRIM(rt0.c0))))OR(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END END  NULLS LAST, json_insert(0.23263835841970237, (- (rt0.c1)), ((vt0.c0)IS NOT(rt0.c3)), NULLIF(DISTINCT vt0.c0, rt0.c0), rt0.c2 COLLATE BINARY) ASC, 0.08877405328042254 ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS TEXT) LEFT OUTER JOIN t0 ON (((~ (rt0.c0))) NOT BETWEEN (vt0.c0) AND (HEX(vt0.c1))) WHERE (((rt0.c1) NOT BETWEEN ((~ (rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN ((~ (rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS TEXT) LEFT OUTER JOIN t0 ON (((~ (rt0.c0))) NOT BETWEEN (vt0.c0) AND (HEX(vt0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS TEXT) LEFT OUTER JOIN t0 ON (((~ (rt0.c0))) NOT BETWEEN (vt0.c0) AND (HEX(vt0.c1))) WHERE (((rt0.c1) NOT BETWEEN ((~ (rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN ((~ (rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS TEXT) LEFT OUTER JOIN t0 ON (((~ (rt0.c0))) NOT BETWEEN (vt0.c0) AND (HEX(vt0.c1))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS TEXT) LEFT OUTER JOIN t0 ON (((~ (rt0.c0))) NOT BETWEEN (vt0.c0) AND (HEX(vt0.c1))) WHERE (((rt0.c1) NOT BETWEEN ((~ (rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c1 END)));
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)>>(rt0.c2)) IN ())) ORDER BY '250961146' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t0 ORDER BY '250961146' DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)>>(rt0.c2)) IN ())) ORDER BY '250961146' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>>(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t0 ORDER BY '250961146' DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)>>(rt0.c2)) IN ())) ORDER BY '250961146' DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE ((- (CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((- (CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((- (CAST(t0.c0 AS REAL))));
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE (CAST(CAST(rt0.c3 AS BLOB) AS TEXT)) ORDER BY (((rt0.c1))<=((LIKELIHOOD(vt0.c1, 0.8525648221797757))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((rt0.c1))<=((LIKELIHOOD(vt0.c1, 0.8525648221797757))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE (CAST(CAST(rt0.c3 AS BLOB) AS TEXT)) ORDER BY (((rt0.c1))<=((LIKELIHOOD(vt0.c1, 0.8525648221797757))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((rt0.c1))<=((LIKELIHOOD(vt0.c1, 0.8525648221797757))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE (CAST(CAST(rt0.c3 AS BLOB) AS TEXT)) ORDER BY (((rt0.c1))<=((LIKELIHOOD(vt0.c1, 0.8525648221797757))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c1)) AND (((vt0.c0)/(vt0.c1))))) ORDER BY (- (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c1)) AND (((vt0.c0)/(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c1)) AND (((vt0.c0)/(vt0.c1))))) ORDER BY (- (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c1)) AND (((vt0.c0)/(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (TRIM(vt0.c1)) AND (((vt0.c0)/(vt0.c1))))) ORDER BY (- (vt0.c0));
SELECT * FROM rt0 INDEXED BY i28, vt0 NATURAL JOIN t0 WHERE (((CAST('J4' AS BLOB))<<(t0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)))<=(((vt0.c0)<<(rt0.c3)))) ASC, (((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((vt0.c1)OR(rt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST('J4' AS BLOB))<<(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INDEXED BY i28, vt0 NATURAL JOIN t0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)))<=(((vt0.c0)<<(rt0.c3)))) ASC, (((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))));
SELECT * FROM rt0 INDEXED BY i28, vt0 NATURAL JOIN t0 WHERE (((CAST('J4' AS BLOB))<<(t0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)))<=(((vt0.c0)<<(rt0.c3)))) ASC, (((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((vt0.c1)OR(rt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST('J4' AS BLOB))<<(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 INDEXED BY i28, vt0 NATURAL JOIN t0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)))<=(((vt0.c0)<<(rt0.c3)))) ASC, (((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((vt0.c1)OR(rt0.c1)))OR(vt0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (((NULL)&(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((NULL)&(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((NULL)&(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((NULL)&(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((NULL)&(rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ('jf' COLLATE BINARY) ORDER BY rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('jf' COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c3 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ('jf' COLLATE BINARY) ORDER BY rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('jf' COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c3 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ('jf' COLLATE BINARY) ORDER BY rt0.c3 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((x'')AND(rt0.c0)))OR('''QE'))) IS TRUE)) ORDER BY CAST(HEX(DISTINCT vt0.c1) AS REAL) DESC, CAST(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(rt0.c0)))OR('''QE'))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(HEX(DISTINCT vt0.c1) AS REAL) DESC, CAST(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END AS TEXT) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((x'')AND(rt0.c0)))OR('''QE'))) IS TRUE)) ORDER BY CAST(HEX(DISTINCT vt0.c1) AS REAL) DESC, CAST(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(rt0.c0)))OR('''QE'))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(HEX(DISTINCT vt0.c1) AS REAL) DESC, CAST(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END AS TEXT) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((((x'')AND(rt0.c0)))OR('''QE'))) IS TRUE)) ORDER BY CAST(HEX(DISTINCT vt0.c1) AS REAL) DESC, CAST(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END AS TEXT) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((t0.c0, (~ (t0.c0)), t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((t0.c0, (~ (t0.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((t0.c0, (~ (t0.c0)), t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((t0.c0, (~ (t0.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((+ (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((t0.c0, (~ (t0.c0)), t0.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c0, 0.5776794851311706, rt0.c3)) BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)), ((('6%!UM}Sr-')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(t0.c0)), ((vt0.c1) IS FALSE))))) ORDER BY ((json_array_length(rt0.c1, rt0.c2))OR((((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c1))))), (~ (((rt0.c2)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, 0.5776794851311706, rt0.c3)) BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)), ((('6%!UM}Sr-')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(t0.c0)), ((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((json_array_length(rt0.c1, rt0.c2))OR((((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c1))))), (~ (((rt0.c2)>(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c0, 0.5776794851311706, rt0.c3)) BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)), ((('6%!UM}Sr-')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(t0.c0)), ((vt0.c1) IS FALSE))))) ORDER BY ((json_array_length(rt0.c1, rt0.c2))OR((((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c1))))), (~ (((rt0.c2)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, 0.5776794851311706, rt0.c3)) BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)), ((('6%!UM}Sr-')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(t0.c0)), ((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((json_array_length(rt0.c1, rt0.c2))OR((((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c1))))), (~ (((rt0.c2)>(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((t0.c0, 0.5776794851311706, rt0.c3)) BETWEEN ((((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)), ((('6%!UM}Sr-')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((rt0.c1 COLLATE NOCASE, ((rt0.c1)OR(t0.c0)), ((vt0.c1) IS FALSE))))) ORDER BY ((json_array_length(rt0.c1, rt0.c2))OR((((rt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c1))))), (~ (((rt0.c2)>(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CASE 0.3105397884303608  WHEN vt0.c1 THEN vt0.c0 ELSE '-1844467757' END THEN SQLITE_SOURCE_ID() END WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN CAST(vt0.c1 AS INTEGER) END) ORDER BY (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOTNULL) THEN CAST(vt0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CASE 0.3105397884303608  WHEN vt0.c1 THEN vt0.c0 ELSE '-1844467757' END THEN SQLITE_SOURCE_ID() END ORDER BY (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CASE 0.3105397884303608  WHEN vt0.c1 THEN vt0.c0 ELSE '-1844467757' END THEN SQLITE_SOURCE_ID() END WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN CAST(vt0.c1 AS INTEGER) END) ORDER BY (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOTNULL) THEN CAST(vt0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CASE 0.3105397884303608  WHEN vt0.c1 THEN vt0.c0 ELSE '-1844467757' END THEN SQLITE_SOURCE_ID() END ORDER BY (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CASE 0.3105397884303608  WHEN vt0.c1 THEN vt0.c0 ELSE '-1844467757' END THEN SQLITE_SOURCE_ID() END WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN CAST(vt0.c1 AS INTEGER) END) ORDER BY (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((((rt0.c3)IS NOT(vt0.c1)))OR(((vt0.c1) ISNULL))))OR(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c3)IS NOT(vt0.c1)))OR(((vt0.c1) ISNULL))))OR(rt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((((rt0.c3)IS NOT(vt0.c1)))OR(((vt0.c1) ISNULL))))OR(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c3)IS NOT(vt0.c1)))OR(((vt0.c1) ISNULL))))OR(rt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((((rt0.c3)IS NOT(vt0.c1)))OR(((vt0.c1) ISNULL))))OR(rt0.c0))  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0)))IS((t0.c0 IN ())))) ORDER BY 0.6790620532741821  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0)))IS((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY 0.6790620532741821  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0)))IS((t0.c0 IN ())))) ORDER BY 0.6790620532741821  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<>(t0.c0)))IS((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY 0.6790620532741821  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<>(t0.c0)))IS((t0.c0 IN ())))) ORDER BY 0.6790620532741821  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON json_valid((((rt0.c3))>=((rt0.c3)))) WHERE (((((((((CAST(rt0.c2 AS TEXT))AND(LIKELY(rt0.c0))))OR((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))))))OR((('')*(-1338747759)))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c2 AS TEXT))AND(LIKELY(rt0.c0))))OR((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))))))OR((('')*(-1338747759)))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON json_valid((((rt0.c3))>=((rt0.c3)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON json_valid((((rt0.c3))>=((rt0.c3)))) WHERE (((((((((CAST(rt0.c2 AS TEXT))AND(LIKELY(rt0.c0))))OR((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))))))OR((('')*(-1338747759)))))AND(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c2 AS TEXT))AND(LIKELY(rt0.c0))))OR((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))))))OR((('')*(-1338747759)))))AND(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON json_valid((((rt0.c3))>=((rt0.c3)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON json_valid((((rt0.c3))>=((rt0.c3)))) WHERE (((((((((CAST(rt0.c2 AS TEXT))AND(LIKELY(rt0.c0))))OR((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))))))OR((('')*(-1338747759)))))AND(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((NULL)%(rt0.c2)) AS INTEGER) WHERE (((((((t0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((0.4377588285620758)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((0.4377588285620758)LIKE(rt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((NULL)%(rt0.c2)) AS INTEGER));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((NULL)%(rt0.c2)) AS INTEGER) WHERE (((((((t0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((0.4377588285620758)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((0.4377588285620758)LIKE(rt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((NULL)%(rt0.c2)) AS INTEGER));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((NULL)%(rt0.c2)) AS INTEGER) WHERE (((((((t0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND (((0.4377588285620758)LIKE(rt0.c2)))));
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY '284760177' ASC, (((vt0.c1) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 ORDER BY '284760177' ASC, (((vt0.c1) IS FALSE) IN ()));
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY '284760177' ASC, (((vt0.c1) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 ORDER BY '284760177' ASC, (((vt0.c1) IS FALSE) IN ()));
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY '284760177' ASC, (((vt0.c1) IS FALSE) IN ());
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE RTRIM THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (NOT (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE RTRIM THEN (NOT (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (NOT (t0.c0)) END);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN HEX(DISTINCT t0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT t0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN HEX(DISTINCT t0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT t0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CASE WHEN HEX(DISTINCT t0.c0) THEN rt0.c3 COLLATE NOCASE ELSE ((vt0.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY TYPEOF(((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))), (~ ('-1426085065'));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))), (~ ('-1426085065')));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY TYPEOF(((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))), (~ ('-1426085065'));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))), (~ ('-1426085065')));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY TYPEOF(((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))), (~ ('-1426085065'));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt0.c1 COLLATE NOCASE))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)&(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)&(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)&(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)&(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)&(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((- (rt0.c3))) BETWEEN (TYPEOF(vt0.c0)) AND (((rt0.c1)AND(rt0.c3)))) FULL OUTER JOIN t0 ON TRIM(vt0.c0, ((rt0.c2)%(t0.c0))) WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY (((0.674865599992382, rt0.c2, rt0.c2)) BETWEEN (((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))), (NOT (rt0.c2)), ((rt0.c3)*(rt0.c2)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND ('-1172770544')), ((rt0.c2) IS FALSE), rt0.c3))), rt0.c3, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((- (rt0.c3))) BETWEEN (TYPEOF(vt0.c0)) AND (((rt0.c1)AND(rt0.c3)))) FULL OUTER JOIN t0 ON TRIM(vt0.c0, ((rt0.c2)%(t0.c0))) ORDER BY (((0.674865599992382, rt0.c2, rt0.c2)) BETWEEN (((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))), (NOT (rt0.c2)), ((rt0.c3)*(rt0.c2)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND ('-1172770544')), ((rt0.c2) IS FALSE), rt0.c3))), rt0.c3, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((- (rt0.c3))) BETWEEN (TYPEOF(vt0.c0)) AND (((rt0.c1)AND(rt0.c3)))) FULL OUTER JOIN t0 ON TRIM(vt0.c0, ((rt0.c2)%(t0.c0))) WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY (((0.674865599992382, rt0.c2, rt0.c2)) BETWEEN (((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))), (NOT (rt0.c2)), ((rt0.c3)*(rt0.c2)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND ('-1172770544')), ((rt0.c2) IS FALSE), rt0.c3))), rt0.c3, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((- (rt0.c3))) BETWEEN (TYPEOF(vt0.c0)) AND (((rt0.c1)AND(rt0.c3)))) FULL OUTER JOIN t0 ON TRIM(vt0.c0, ((rt0.c2)%(t0.c0))) ORDER BY (((0.674865599992382, rt0.c2, rt0.c2)) BETWEEN (((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))), (NOT (rt0.c2)), ((rt0.c3)*(rt0.c2)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND ('-1172770544')), ((rt0.c2) IS FALSE), rt0.c3))), rt0.c3, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((- (rt0.c3))) BETWEEN (TYPEOF(vt0.c0)) AND (((rt0.c1)AND(rt0.c3)))) FULL OUTER JOIN t0 ON TRIM(vt0.c0, ((rt0.c2)%(t0.c0))) WHERE ((+ (rt0.c1)) COLLATE BINARY) ORDER BY (((0.674865599992382, rt0.c2, rt0.c2)) BETWEEN (((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))), (NOT (rt0.c2)), ((rt0.c3)*(rt0.c2)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND ('-1172770544')), ((rt0.c2) IS FALSE), rt0.c3))), rt0.c3, x''  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)GLOB(t0.c0)))) AND (((~ (t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)GLOB(t0.c0)))) AND (((~ (t0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)GLOB(t0.c0)))) AND (((~ (t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)GLOB(t0.c0)))) AND (((~ (t0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)GLOB(t0.c0)))) AND (((~ (t0.c0))))) DESC  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE ((+ (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((+ (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((+ (CAST(vt0.c1 AS REAL))));
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((rt0.c0)AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((('-957640819')%(rt0.c2))))<=((vt0.c1))) LEFT OUTER JOIN vt0 ON (~ (HEX(DISTINCT rt0.c2))) WHERE ((- (t0.c0)) COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((('-957640819')%(rt0.c2))))<=((vt0.c1))) LEFT OUTER JOIN vt0 ON (~ (HEX(DISTINCT rt0.c2))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((('-957640819')%(rt0.c2))))<=((vt0.c1))) LEFT OUTER JOIN vt0 ON (~ (HEX(DISTINCT rt0.c2))) WHERE ((- (t0.c0)) COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((('-957640819')%(rt0.c2))))<=((vt0.c1))) LEFT OUTER JOIN vt0 ON (~ (HEX(DISTINCT rt0.c2))) ORDER BY CAST(rt0.c0 AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (ABS(DISTINCT vt0.c1) COLLATE RTRIM) ORDER BY ((vt0.c0)>(CASE 0Xffffffffc21a9ca6  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 0.1313735746173892 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)>(CASE 0xffffffffc21a9ca6  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 0.1313735746173892 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (ABS(DISTINCT vt0.c1) COLLATE RTRIM) ORDER BY ((vt0.c0)>(CASE 0Xffffffffc21a9ca6  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 0.1313735746173892 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)>(CASE 0xffffffffc21a9ca6  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 0.1313735746173892 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (ABS(DISTINCT vt0.c1) COLLATE RTRIM) ORDER BY ((vt0.c0)>(CASE 0Xffffffffc21a9ca6  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN 0.1313735746173892 THEN vt0.c0 END));
SELECT * FROM rt0, t0, vt0 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END) ORDER BY CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) DESC);
SELECT * FROM rt0, t0, vt0 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END) ORDER BY CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) DESC);
SELECT * FROM rt0, t0, vt0 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN CASE WHEN rt0.c1 THEN rt0.c0 END ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END) ORDER BY CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) DESC;
SELECT * FROM rt0 WHERE ((((0Xffffffffd554e273 IN ()))AND(CAST(NULL AS BLOB)))) ORDER BY ((CAST(rt0.c3 AS INTEGER))*(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffd554e273 IN ()))AND(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS INTEGER))*(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0Xffffffffd554e273 IN ()))AND(CAST(NULL AS BLOB)))) ORDER BY ((CAST(rt0.c3 AS INTEGER))*(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffd554e273 IN ()))AND(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c3 AS INTEGER))*(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0Xffffffffd554e273 IN ()))AND(CAST(NULL AS BLOB)))) ORDER BY ((CAST(rt0.c3 AS INTEGER))*(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 INDEXED BY i28, vt0, rt0 WHERE (((((t0.c0) IS TRUE))GLOB(CAST(rt0.c2 AS REAL)))) ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (t0.c0 IN ()) WHEN '' THEN -676455083 WHEN GLOB(rt0.c3, 0.7167970980602258) THEN rt0.c0 END, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE))GLOB(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0 INDEXED BY i28, vt0, rt0 ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (t0.c0 IN ()) WHEN '' THEN -676455083 WHEN GLOB(rt0.c3, 0.7167970980602258) THEN rt0.c0 END, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 INDEXED BY i28, vt0, rt0 WHERE (((((t0.c0) IS TRUE))GLOB(CAST(rt0.c2 AS REAL)))) ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (t0.c0 IN ()) WHEN '' THEN -676455083 WHEN GLOB(rt0.c3, 0.7167970980602258) THEN rt0.c0 END, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS TRUE))GLOB(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0 INDEXED BY i28, vt0, rt0 ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (t0.c0 IN ()) WHEN '' THEN -676455083 WHEN GLOB(rt0.c3, 0.7167970980602258) THEN rt0.c0 END, CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)*(rt0.c1)))>>(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))) WHERE ((((((~ (rt0.c2)))OR(((rt0.c2) IS FALSE))))OR('-1876325317')));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c2)))OR(((rt0.c2) IS FALSE))))OR('-1876325317'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)*(rt0.c1)))>>(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)*(rt0.c1)))>>(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))) WHERE ((((((~ (rt0.c2)))OR(((rt0.c2) IS FALSE))))OR('-1876325317')));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c2)))OR(((rt0.c2) IS FALSE))))OR('-1876325317'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)*(rt0.c1)))>>(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)*(rt0.c1)))>>(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))) WHERE ((((((~ (rt0.c2)))OR(((rt0.c2) IS FALSE))))OR('-1876325317')));
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (((rt0.c1) IS TRUE)) AND ((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (((rt0.c1) IS TRUE)) AND ((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (((rt0.c1) IS TRUE)) AND ((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (((rt0.c1) IS TRUE)) AND ((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (((rt0.c1) IS TRUE)) AND ((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))))) ORDER BY ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c0)LIKE(vt0.c1)))<(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) WHERE ((- (CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN 0.574876205502038 WHEN vt0.c0 THEN '0.16833116594693565' END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN 0.574876205502038 WHEN vt0.c0 THEN '0.16833116594693565' END))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c0)LIKE(vt0.c1)))<(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c0)LIKE(vt0.c1)))<(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) WHERE ((- (CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN 0.574876205502038 WHEN vt0.c0 THEN '0.16833116594693565' END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN 0.574876205502038 WHEN vt0.c0 THEN '0.16833116594693565' END))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c0)LIKE(vt0.c1)))<(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c0)LIKE(vt0.c1)))<(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) WHERE ((- (CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN 0.574876205502038 WHEN vt0.c0 THEN '0.16833116594693565' END)));
SELECT * FROM t0 WHERE ((((t0.c0)!=(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)!=(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)!=(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)!=(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)!=(t0.c0)) IN ()));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c1);
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c1);
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE ((rt0.c2 IN ()));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c0 END) ORDER BY (((0xffffffffef34cf0f IN ()))<=((rt0.c3 IN ()))) DESC  NULLS FIRST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY (((0xffffffffef34cf0f IN ()))<=((rt0.c3 IN ()))) DESC  NULLS FIRST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c0 END) ORDER BY (((0xffffffffef34cf0f IN ()))<=((rt0.c3 IN ()))) DESC  NULLS FIRST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY (((0xffffffffef34cf0f IN ()))<=((rt0.c3 IN ()))) DESC  NULLS FIRST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((rt0.c3)<(rt0.c2)) THEN rt0.c0 END) ORDER BY (((0xffffffffef34cf0f IN ()))<=((rt0.c3 IN ()))) DESC  NULLS FIRST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 END)<<(((vt0.c0) NOTNULL))) WHERE ((NOT (0.013180901119307031))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c0)==(vt0.c1)))))OR(((t0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.013180901119307031))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 END)<<(((vt0.c0) NOTNULL))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c0)==(vt0.c1)))))OR(((t0.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 END)<<(((vt0.c0) NOTNULL))) WHERE ((NOT (0.013180901119307031))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c0)==(vt0.c1)))))OR(((t0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (0.013180901119307031))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 END)<<(((vt0.c0) NOTNULL))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c0)==(vt0.c1)))))OR(((t0.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 END)<<(((vt0.c0) NOTNULL))) WHERE ((NOT (0.013180901119307031))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c0)==(vt0.c1)))))OR(((t0.c0) IS TRUE)))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((~ ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((TRIM(rt0.c1, rt0.c1))) AND (((rt0.c0 IN ()))))) ORDER BY NULL ASC  NULLS LAST, (((((((((((rt0.c3, rt0.c2, rt0.c0))>((vt0.c0, rt0.c3, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c1)<=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((TRIM(rt0.c1, rt0.c1))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULL ASC  NULLS LAST, (((((((((((rt0.c3, rt0.c2, rt0.c0))>((vt0.c0, rt0.c3, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c1)<=(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((TRIM(rt0.c1, rt0.c1))) AND (((rt0.c0 IN ()))))) ORDER BY NULL ASC  NULLS LAST, (((((((((((rt0.c3, rt0.c2, rt0.c0))>((vt0.c0, rt0.c3, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c1)<=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((TRIM(rt0.c1, rt0.c1))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULL ASC  NULLS LAST, (((((((((((rt0.c3, rt0.c2, rt0.c0))>((vt0.c0, rt0.c3, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c1)<=(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((TRIM(rt0.c1, rt0.c1))) AND (((rt0.c0 IN ()))))) ORDER BY NULL ASC  NULLS LAST, (((((((((((rt0.c3, rt0.c2, rt0.c0))>((vt0.c0, rt0.c3, vt0.c1))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c1)<=(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((0X4dfc6d08)AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((0x4dfc6d08)AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((0X4dfc6d08)AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((0x4dfc6d08)AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((0X4dfc6d08)AND((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_object(NULL, ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), (((rt0.c1))<=((rt0.c0))), LIKELY(DISTINCT rt0.c1))) ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS LAST, (rt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_object(NULL, ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), (((rt0.c1))<=((rt0.c0))), LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS LAST, (rt0.c1 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_object(NULL, ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), (((rt0.c1))<=((rt0.c0))), LIKELY(DISTINCT rt0.c1))) ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS LAST, (rt0.c1 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((json_object(NULL, ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), (((rt0.c1))<=((rt0.c0))), LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(x'' AS NUMERIC) IN ())  NULLS LAST, (rt0.c1 COLLATE RTRIM IN ()));
SELECT * FROM vt0, t0 WHERE ((((('607146619')IS(vt0.c0))) BETWEEN (((t0.c0)||(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('607146619')IS(vt0.c0))) BETWEEN (((t0.c0)||(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((('607146619')IS(vt0.c0))) BETWEEN (((t0.c0)||(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('607146619')IS(vt0.c0))) BETWEEN (((t0.c0)||(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((('607146619')IS(vt0.c0))) BETWEEN (((t0.c0)||(vt0.c1))) AND (((vt0.c0)LIKE(vt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN x'46c9e1fa' WHEN (rt0.c1 IN ()) THEN (+ (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN x'46c9e1fa' WHEN (rt0.c1 IN ()) THEN (+ (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN x'46c9e1fa' WHEN (rt0.c1 IN ()) THEN (+ (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN x'46c9e1fa' WHEN (rt0.c1 IN ()) THEN (+ (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c0 IN ())))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN x'46c9e1fa' WHEN (rt0.c1 IN ()) THEN (+ (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 END DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON CAST(((0.3668679988640551) ISNULL) AS NUMERIC) WHERE (TRIM(MAX(t0.c0, t0.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c2), ((rt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(MAX(t0.c0, t0.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c2), ((rt0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CAST(((0.3668679988640551) ISNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON CAST(((0.3668679988640551) ISNULL) AS NUMERIC) WHERE (TRIM(MAX(t0.c0, t0.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c2), ((rt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(MAX(t0.c0, t0.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c2), ((rt0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CAST(((0.3668679988640551) ISNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON CAST(((0.3668679988640551) ISNULL) AS NUMERIC) WHERE (TRIM(MAX(t0.c0, t0.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c2), ((rt0.c0)LIKE(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))!=((t0.c0)))) IS FALSE)) ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))!=((t0.c0)))) IS FALSE)) ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))!=((t0.c0)))) IS FALSE)) ORDER BY CAST(t0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND((~ (x'b6c6')))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN 1172705621 ELSE rt0.c3 END))) ORDER BY (~ (rt0.c3)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND((~ (x'b6c6')))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN 1172705621 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (rt0.c3)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND((~ (x'b6c6')))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN 1172705621 ELSE rt0.c3 END))) ORDER BY (~ (rt0.c3)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND((~ (x'b6c6')))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN 1172705621 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (rt0.c3)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))AND((~ (x'b6c6')))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN 1172705621 ELSE rt0.c3 END))) ORDER BY (~ (rt0.c3)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)), '0.3284229337423056', '2064257010'))=((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS NUMERIC))))) ORDER BY ((((vt0.c0 IN ())))<((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'7835'))) COLLATE RTRIM, x'b3ed' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)), '0.3284229337423056', '2064257010'))=((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))<((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'7835'))) COLLATE RTRIM, x'b3ed' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)), '0.3284229337423056', '2064257010'))=((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS NUMERIC))))) ORDER BY ((((vt0.c0 IN ())))<((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'7835'))) COLLATE RTRIM, x'b3ed' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)), '0.3284229337423056', '2064257010'))=((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))<((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'7835'))) COLLATE RTRIM, x'b3ed' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)), '0.3284229337423056', '2064257010'))=((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c1 AS NUMERIC))))) ORDER BY ((((vt0.c0 IN ())))<((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x'7835'))) COLLATE RTRIM, x'b3ed' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1)<<(rt0.c1))) NOT BETWEEN ((+ (vt0.c1))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c1))) NOT BETWEEN ((+ (vt0.c1))) AND (rt0.c3))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1)<<(rt0.c1))) NOT BETWEEN ((+ (vt0.c1))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(rt0.c1))) NOT BETWEEN ((+ (vt0.c1))) AND (rt0.c3))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1)<<(rt0.c1))) NOT BETWEEN ((+ (vt0.c1))) AND (rt0.c3)));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON '' WHERE (CASE WHEN ((rt0.c3)==(0.8987046245114705)) THEN ((rt0.c2)GLOB(rt0.c1)) END) ORDER BY ((((((((rt0.c3)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE ASC, TOTAL_CHANGES() COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)==(0.8987046245114705)) THEN ((rt0.c2)GLOB(rt0.c1)) END) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON '' ORDER BY ((((((((rt0.c3)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE ASC, TOTAL_CHANGES() COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON '' WHERE (CASE WHEN ((rt0.c3)==(0.8987046245114705)) THEN ((rt0.c2)GLOB(rt0.c1)) END) ORDER BY ((((((((rt0.c3)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE ASC, TOTAL_CHANGES() COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)==(0.8987046245114705)) THEN ((rt0.c2)GLOB(rt0.c1)) END) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON '' ORDER BY ((((((((rt0.c3)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE ASC, TOTAL_CHANGES() COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON '' WHERE (CASE WHEN ((rt0.c3)==(0.8987046245114705)) THEN ((rt0.c2)GLOB(rt0.c1)) END) ORDER BY ((((((((rt0.c3)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE ASC, TOTAL_CHANGES() COLLATE BINARY;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)!=(((rt0.c2)AND(rt0.c3))))) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((rt0.c2) NOT NULL) IN (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)!=(((rt0.c2)AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((rt0.c2) NOT NULL) IN (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)!=(((rt0.c2)AND(rt0.c3))))) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((rt0.c2) NOT NULL) IN (rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)!=(((rt0.c2)AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((rt0.c2) NOT NULL) IN (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0)!=(((rt0.c2)AND(rt0.c3))))) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (((rt0.c2) NOT NULL) IN (rt0.c1));
SELECT COUNT(*) FROM t0 WHERE (ABS(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c0)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c0)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(t0.c0));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) NOTNULL)))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))) ORDER BY '1f y7X' DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL)))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY '1f y7X' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) NOTNULL)))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))) ORDER BY '1f y7X' DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL)))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY '1f y7X' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) NOTNULL)))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))) ORDER BY '1f y7X' DESC;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)))/(vt0.c1 COLLATE BINARY))) ORDER BY ((((((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(SQLITE_SOURCE_ID())))OR(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))AND((t0.c0 IN (vt0.c0)))))OR((((vt0.c0))<=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)))/(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(SQLITE_SOURCE_ID())))OR(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))AND((t0.c0 IN (vt0.c0)))))OR((((vt0.c0))<=((t0.c0))))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)))/(vt0.c1 COLLATE BINARY))) ORDER BY ((((((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(SQLITE_SOURCE_ID())))OR(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))AND((t0.c0 IN (vt0.c0)))))OR((((vt0.c0))<=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)))/(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(SQLITE_SOURCE_ID())))OR(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))AND((t0.c0 IN (vt0.c0)))))OR((((vt0.c0))<=((t0.c0))))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)))/(vt0.c1 COLLATE BINARY))) ORDER BY ((((((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)))OR(SQLITE_SOURCE_ID())))OR(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))AND((t0.c0 IN (vt0.c0)))))OR((((vt0.c0))<=((t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c1 IN (vt0.c1))))) ORDER BY CAST(TRIM(DISTINCT vt0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(TRIM(DISTINCT vt0.c0) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c1 IN (vt0.c1))))) ORDER BY CAST(TRIM(DISTINCT vt0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(TRIM(DISTINCT vt0.c0) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((vt0.c1 IN (vt0.c1))))) ORDER BY CAST(TRIM(DISTINCT vt0.c0) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(vt0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(vt0.c0)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE BINARY COLLATE NOCASE) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (LENGTH(((rt0.c3)<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((rt0.c3)<=(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (LENGTH(((rt0.c3)<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((rt0.c3)<=(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (LENGTH(((rt0.c3)<=(rt0.c1))));
SELECT * FROM t0 INDEXED BY i28 CROSS JOIN vt0 ON (+ (CASE WHEN t0.c0 THEN t0.c0 END)) WHERE (((((((t0.c0) IS FALSE))AND((vt0.c0 IN ()))))AND(((vt0.c0)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND((vt0.c0 IN ()))))AND(((vt0.c0)/(vt0.c1))))) IS TRUE)  as count FROM t0 INDEXED BY i28 CROSS JOIN vt0 ON (+ (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM t0 INDEXED BY i28 CROSS JOIN vt0 ON (+ (CASE WHEN t0.c0 THEN t0.c0 END)) WHERE (((((((t0.c0) IS FALSE))AND((vt0.c0 IN ()))))AND(((vt0.c0)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND((vt0.c0 IN ()))))AND(((vt0.c0)/(vt0.c1))))) IS TRUE)  as count FROM t0 INDEXED BY i28 CROSS JOIN vt0 ON (+ (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (CASE '0.661224093667714'  WHEN '-1702066283' THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '0.661224093667714'  WHEN '-1702066283' THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE '0.661224093667714'  WHEN '-1702066283' THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '0.661224093667714'  WHEN '-1702066283' THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE '0.661224093667714'  WHEN '-1702066283' THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT * FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS TEXT)) ORDER BY ((((t0.c0)%(t0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)GLOB(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)%(t0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS TEXT)) ORDER BY ((((t0.c0)%(t0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)GLOB(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)%(t0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS TEXT)) ORDER BY ((((t0.c0)%(t0.c0))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)!=(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c2, 0.6371530314495114)) AND ((NOT (rt0.c3))))) ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c2, 0.6371530314495114)) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)!=(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c2, 0.6371530314495114)) AND ((NOT (rt0.c3))))) ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<>(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c2, 0.6371530314495114)) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)!=(rt0.c3))) BETWEEN (LIKELIHOOD(rt0.c2, 0.6371530314495114)) AND ((NOT (rt0.c3))))) ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE NOCASE DESC);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE NOCASE DESC);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c2))) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)*((+ (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)*((+ (rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c2))) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)*((+ (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)*((+ (rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)&(rt0.c2))) ISNULL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)*((+ (rt0.c3)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (~ ((t0.c0 IN (t0.c0, vt0.c0)))) WHERE (((vt0.c0)LIKE(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (~ ((t0.c0 IN (t0.c0, vt0.c0)))) ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (~ ((t0.c0 IN (t0.c0, vt0.c0)))) WHERE (((vt0.c0)LIKE(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (~ ((t0.c0 IN (t0.c0, vt0.c0)))) ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (~ ((t0.c0 IN (t0.c0, vt0.c0)))) WHERE (((vt0.c0)LIKE(CAST(vt0.c0 AS REAL)))) ORDER BY vt0.c1 ASC;
SELECT ALL * FROM rt0 WHERE (LENGTH(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LENGTH(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LENGTH(rt0.c0));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)IS NOT(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)IS NOT(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)IS NOT(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)IS NOT(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1)IS NOT(vt0.c1))))  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN (((vt0.c1))==((rt0.c2))) THEN ((vt0.c0)-(rt0.c2)) WHEN TYPEOF(DISTINCT rt0.c3) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))=((rt0.c2))) THEN ((vt0.c0)-(rt0.c2)) WHEN TYPEOF(DISTINCT rt0.c3) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN (((vt0.c1))==((rt0.c2))) THEN ((vt0.c0)-(rt0.c2)) WHEN TYPEOF(DISTINCT rt0.c3) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))=((rt0.c2))) THEN ((vt0.c0)-(rt0.c2)) WHEN TYPEOF(DISTINCT rt0.c3) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE WHEN (((vt0.c1))==((rt0.c2))) THEN ((vt0.c0)-(rt0.c2)) WHEN TYPEOF(DISTINCT rt0.c3) THEN vt0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>(rt0.c1)))<(LIKELY(rt0.c3))) INNER JOIN t0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) WHERE (CAST(UNICODE(vt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(vt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>(rt0.c1)))<(LIKELY(rt0.c3))) INNER JOIN t0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>(rt0.c1)))<(LIKELY(rt0.c3))) INNER JOIN t0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) WHERE (CAST(UNICODE(vt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(vt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>(rt0.c1)))<(LIKELY(rt0.c3))) INNER JOIN t0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>(rt0.c1)))<(LIKELY(rt0.c3))) INNER JOIN t0 ON ((((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) WHERE (CAST(UNICODE(vt0.c1) AS BLOB));
SELECT ALL * FROM rt0, t0 WHERE (((((+ (rt0.c3)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2))))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('LB4ﾚ')), (- (rt0.c0)), (('')+(rt0.c0)))))) ORDER BY ((t0.c0) IS TRUE) ASC, ABS(DISTINCT UPPER(0.661224093667714));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c3)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2))))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('LB4ﾚ')), (- (rt0.c0)), (('')+(rt0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c0) IS TRUE) ASC, ABS(DISTINCT UPPER(0.661224093667714)));
SELECT ALL * FROM rt0, t0 WHERE (((((+ (rt0.c3)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2))))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('LB4ﾚ')), (- (rt0.c0)), (('')+(rt0.c0)))))) ORDER BY ((t0.c0) IS TRUE) ASC, ABS(DISTINCT UPPER(0.661224093667714));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c3)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2))))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('LB4ﾚ')), (- (rt0.c0)), (('')+(rt0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c0) IS TRUE) ASC, ABS(DISTINCT UPPER(0.661224093667714)));
SELECT ALL * FROM rt0, t0 WHERE (((((+ (rt0.c3)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2))))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('LB4ﾚ')), (- (rt0.c0)), (('')+(rt0.c0)))))) ORDER BY ((t0.c0) IS TRUE) ASC, ABS(DISTINCT UPPER(0.661224093667714));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY CASE WHEN CASE x'd774'  WHEN rt0.c3 THEN rt0.c3 END THEN ((rt0.c1)IS NOT(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE x'd774'  WHEN rt0.c3 THEN rt0.c3 END THEN ((rt0.c1)IS NOT(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY CASE WHEN CASE x'd774'  WHEN rt0.c3 THEN rt0.c3 END THEN ((rt0.c1)IS NOT(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE x'd774'  WHEN rt0.c3 THEN rt0.c3 END THEN ((rt0.c1)IS NOT(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((rt0.c2 COLLATE BINARY)))) ORDER BY CASE WHEN CASE x'd774'  WHEN rt0.c3 THEN rt0.c3 END THEN ((rt0.c1)IS NOT(rt0.c0)) END;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c2) BETWEEN (-1212285719) AND (rt0.c0)) IN (((NULL)|(rt0.c2)), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (-1212285719) AND (rt0.c0)) IN (((NULL)|(rt0.c2)), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (CASE WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c2) BETWEEN (-1212285719) AND (rt0.c0)) IN (((NULL)|(rt0.c2)), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (-1212285719) AND (rt0.c0)) IN (((NULL)|(rt0.c2)), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (CASE WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c2) BETWEEN (-1212285719) AND (rt0.c0)) IN (((NULL)|(rt0.c2)), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c1 COLLATE RTRIM));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM ASC;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON SUBSTR(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, '1030309951') WHERE (rt0.c0) ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON SUBSTR(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, '1030309951') ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON SUBSTR(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, '1030309951') WHERE (rt0.c0) ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON SUBSTR(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, '1030309951') ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON SUBSTR(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, '1030309951') WHERE (rt0.c0) ORDER BY (vt0.c0 COLLATE BINARY IN (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((rtreenode(NULL, rt0.c1))IS(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(NULL, rt0.c1))IS(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rtreenode(NULL, rt0.c1))IS(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(NULL, rt0.c1))IS(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rtreenode(NULL, rt0.c1))IS(CAST(rt0.c3 AS TEXT))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (0.5699750650684463 IN ()) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c1)IS(vt0.c1)) THEN load_extension(vt0.c0, vt0.c0) WHEN CASE vt0.c0  WHEN '0.3167824131543939' THEN vt0.c0 END THEN ((vt0.c1)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (('Vz\nX') BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '-799857666' COLLATE NOCASE END) ORDER BY CASE '-940699137'  WHEN (NOT (vt0.c1)) THEN ((NULL)IS(vt0.c0)) WHEN (('786699756')==(vt0.c1)) THEN CASE 'VU'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1)%(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) END DESC  NULLS LAST, (((((vt0.c0))<=((vt0.c0)))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (0.5699750650684463 IN ()) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c1)IS(vt0.c1)) THEN load_extension(vt0.c0, vt0.c0) WHEN CASE vt0.c0  WHEN '0.3167824131543939' THEN vt0.c0 END THEN ((vt0.c1)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (('Vz\nX') BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '-799857666' COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY CASE '-940699137'  WHEN (NOT (vt0.c1)) THEN ((NULL)IS(vt0.c0)) WHEN (('786699756')==(vt0.c1)) THEN CASE 'VU'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1)%(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) END DESC  NULLS LAST, (((((vt0.c0))<=((vt0.c0)))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE NOCASE)) DESC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (0.5699750650684463 IN ()) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c1)IS(vt0.c1)) THEN load_extension(vt0.c0, vt0.c0) WHEN CASE vt0.c0  WHEN '0.3167824131543939' THEN vt0.c0 END THEN ((vt0.c1)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (('Vz\nX') BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '-799857666' COLLATE NOCASE END) ORDER BY CASE '-940699137'  WHEN (NOT (vt0.c1)) THEN ((NULL)IS(vt0.c0)) WHEN (('786699756')==(vt0.c1)) THEN CASE 'VU'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1)%(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) END DESC  NULLS LAST, (((((vt0.c0))<=((vt0.c0)))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (0.5699750650684463 IN ()) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c1)IS(vt0.c1)) THEN load_extension(vt0.c0, vt0.c0) WHEN CASE vt0.c0  WHEN '0.3167824131543939' THEN vt0.c0 END THEN ((vt0.c1)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (('Vz\nX') BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '-799857666' COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY CASE '-940699137'  WHEN (NOT (vt0.c1)) THEN ((NULL)IS(vt0.c0)) WHEN (('786699756')==(vt0.c1)) THEN CASE 'VU'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1)%(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) END DESC  NULLS LAST, (((((vt0.c0))<=((vt0.c0)))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE NOCASE)) DESC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (+ (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END WHEN (0.5699750650684463 IN ()) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c1)IS(vt0.c1)) THEN load_extension(vt0.c0, vt0.c0) WHEN CASE vt0.c0  WHEN '0.3167824131543939' THEN vt0.c0 END THEN ((vt0.c1)||(vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (('Vz\nX') BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '-799857666' COLLATE NOCASE END) ORDER BY CASE '-940699137'  WHEN (NOT (vt0.c1)) THEN ((NULL)IS(vt0.c0)) WHEN (('786699756')==(vt0.c1)) THEN CASE 'VU'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c1)%(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) END DESC  NULLS LAST, (((((vt0.c0))<=((vt0.c0)))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c3);
SELECT * FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN (vt0.c0))) IS FALSE)) ORDER BY (((NOT (-2.72936787E8)))>((((vt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (-2.72936787E8)))>((((vt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN (vt0.c0))) IS FALSE)) ORDER BY (((NOT (-2.72936787E8)))>((((vt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (-2.72936787E8)))>((((vt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2 IN (vt0.c0))) IS FALSE)) ORDER BY (((NOT (-2.72936787E8)))>((((vt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c1))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3)OR(t0.c0)) THEN (('\n%}|(|+5')&(rt0.c2)) END) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)OR(t0.c0)) THEN (('\n%}|(|+5')&(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3)OR(t0.c0)) THEN (('\n%}|(|+5')&(rt0.c2)) END) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3)OR(t0.c0)) THEN (('\n%}|(|+5')&(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3)OR(t0.c0)) THEN (('\n%}|(|+5')&(rt0.c2)) END) ORDER BY rt0.c0 ASC  NULLS LAST;
