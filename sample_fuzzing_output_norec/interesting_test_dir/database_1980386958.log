-- Time: 2024/06/09 08:45:16
-- Database: database58
-- Database version: 3.40.0
-- seed value: 1980386958
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, order=ASC, tokenize=porter); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x'f4b3'), (''), (0.8561983399875372); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (1764143118), (''), (NULL); -- 1ms;
PRAGMA secure_delete; -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1992931717);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 979554665); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2035268373); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7155'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2071398162); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -151097424);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -475510072);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9330'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE vt1; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1764143118);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN ((0.46945517470038345)AND('1e500')) WHEN CAST(0.25569596042337295 AS BLOB) THEN ((1493737729) NOT NULL) WHEN (((('1493737729')AND(-1529067977)))OR(x'49c1')) THEN ((0x5908a101) NOT BETWEEN ('dd<澰') AND ('1493737729')) END; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 736872320); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '53695'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '17191'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (NULL), (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.6347250015085264), (NULL), ('-1570846035'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '14376'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (x''), (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 540155824); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CAST(x'' AS REAL) FROM vt1, vt0 WHERE ((((x'')) BETWEEN ((LIKELIHOOD(DISTINCT NULL, 0.2419966810245574))) AND ((LAST_INSERT_ROWID())))); -- 1ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('Rj5*&㰵,'''); -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0 UNINDEXED, prefix = 966); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('P6?℔G#y'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50100'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21135'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1502462540); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-475510072'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -780859901);\n; -- 0ms;
INSERT INTO vt2(vt2) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('1493737729'), (2108743877), (NULL), (NULL), (0.8561983399875372); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (-1820936535); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59302'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '40545'); -- 1ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-3.23542764E8); -- 0ms;
REINDEX; -- 1ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 INTEGER ); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c1, c2) VALUES ('', x'', 'Rj5*&㰵,'''); -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (0Xffffffffa4dc4637); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '9561'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR FAIL INTO vt2(c0) VALUES (x''), (x''), (NULL), (0.1711442856008204), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.37920404838653066) ISNULL))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c2, c1, c0) VALUES ('䙻Mw3-\nKma', 0X5908a101, '', '-1992931717'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((((-4.75510072E8)OR(rt0.c2)))OR('-214683782'))))) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ((rt0.c2 IN ()), vt0.c0)) WHERE ((((rt0.c1)|(vt0.c0)) IN (CAST(vt2.c0 AS NUMERIC), UNLIKELY(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(vt0.c0)) IN (CAST(vt2.c0 AS NUMERIC), UNLIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, vt2 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((((-4.75510072E8)OR(rt0.c2)))OR('-214683782'))))) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ((rt0.c2 IN ()), vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((((-4.75510072E8)OR(rt0.c2)))OR('-214683782'))))) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ((rt0.c2 IN ()), vt0.c0)) WHERE ((((rt0.c1)|(vt0.c0)) IN (CAST(vt2.c0 AS NUMERIC), UNLIKELY(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)|(vt0.c0)) IN (CAST(vt2.c0 AS NUMERIC), UNLIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, vt2 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((((-4.75510072E8)OR(rt0.c2)))OR('-214683782'))))) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ((rt0.c2 IN ()), vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((((-4.75510072E8)OR(rt0.c2)))OR('-214683782'))))) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ((rt0.c2 IN ()), vt0.c0)) WHERE ((((rt0.c1)|(vt0.c0)) IN (CAST(vt2.c0 AS NUMERIC), UNLIKELY(DISTINCT rt0.c3))));
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (CASE WHEN (((x'', vt2.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, v0.c0))) THEN (((('_m')AND(vt0.c0)))OR(vt0.c0)) ELSE 0x60d2eae0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x'', vt2.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, v0.c0))) THEN (((('_m')AND(vt0.c0)))OR(vt0.c0)) ELSE 0X60d2eae0 END) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (CASE WHEN (((x'', vt2.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, v0.c0))) THEN (((('_m')AND(vt0.c0)))OR(vt0.c0)) ELSE 0x60d2eae0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x'', vt2.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, v0.c0))) THEN (((('_m')AND(vt0.c0)))OR(vt0.c0)) ELSE 0X60d2eae0 END) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (CASE WHEN (((x'', vt2.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt2.c0)) AND ((vt0.c0, vt2.c0, v0.c0))) THEN (((('_m')AND(vt0.c0)))OR(vt0.c0)) ELSE 0x60d2eae0 END);
SELECT * FROM rt0, vt1 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((NOT (rt0.c1)) AS BLOB));
SELECT COUNT(*) FROM vt1, vt2, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (vt2.c0) ORDER BY ((UPPER(vt1.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((vt1.c0)))) AND (CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt1, vt2, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((UPPER(vt1.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((vt1.c0)))) AND (CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM vt1, vt2, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (vt2.c0) ORDER BY ((UPPER(vt1.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((vt1.c0)))) AND (CAST(NULL AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt1, vt2, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((UPPER(vt1.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((vt1.c0)))) AND (CAST(NULL AS INTEGER))));
SELECT COUNT(*) FROM vt1, vt2, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (vt2.c0) ORDER BY ((UPPER(vt1.c0)) BETWEEN ((((rt0.c1)) BETWEEN ((x'')) AND ((vt1.c0)))) AND (CAST(NULL AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON 0.11199969825593559 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))))AND(((v0.c0) ISNULL))) WHERE ((((NULL IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON 0.11199969825593559 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))))AND(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON 0.11199969825593559 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))))AND(((v0.c0) ISNULL))) WHERE ((((NULL IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON 0.11199969825593559 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))))AND(((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON 0.11199969825593559 CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))))AND(((v0.c0) ISNULL))) WHERE ((((NULL IN ())) NOT NULL));
SELECT COUNT(*) FROM v0, vt2 INNER JOIN rt0 ON (((- (vt2.c0)))>=(((((v0.c0)AND(rt0.c4)))OR(v0.c0)))) INNER JOIN vt1 ON x'3b88' WHERE (x'') ORDER BY 0.5454308637117223 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt2 INNER JOIN rt0 ON (((- (vt2.c0)))>=(((((v0.c0)AND(rt0.c4)))OR(v0.c0)))) INNER JOIN vt1 ON x'3b88' ORDER BY 0.5454308637117223 DESC);
SELECT COUNT(*) FROM v0, vt2 INNER JOIN rt0 ON (((- (vt2.c0)))>=(((((v0.c0)AND(rt0.c4)))OR(v0.c0)))) INNER JOIN vt1 ON x'3b88' WHERE (x'') ORDER BY 0.5454308637117223 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt2 INNER JOIN rt0 ON (((- (vt2.c0)))>=(((((v0.c0)AND(rt0.c4)))OR(v0.c0)))) INNER JOIN vt1 ON x'3b88' ORDER BY 0.5454308637117223 DESC);
SELECT COUNT(*) FROM v0, vt2 INNER JOIN rt0 ON (((- (vt2.c0)))>=(((((v0.c0)AND(rt0.c4)))OR(v0.c0)))) INNER JOIN vt1 ON x'3b88' WHERE (x'') ORDER BY 0.5454308637117223 DESC;
SELECT * FROM vt0, vt1, vt2, rt0, v0 WHERE ((((- (rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, vt2, rt0, v0);
SELECT * FROM vt0, vt1, vt2, rt0, v0 WHERE ((((- (rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, vt2, rt0, v0);
SELECT * FROM vt0, vt1, vt2, rt0, v0 WHERE ((((- (rt0.c4))) IS FALSE));
SELECT COUNT(*) FROM vt2, vt1, v0, vt0 WHERE (((((((((((vt1.c0)OR('-151097424')))AND(vt2.c0)))AND(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>>(v0.c0))) AND ((+ (vt0.c0))))) ORDER BY ((vt0.c0)<(UNLIKELY(vt0.c0))) ASC  NULLS LAST, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR('-151097424')))AND(vt2.c0)))AND(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>>(v0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt2, vt1, v0, vt0 ORDER BY ((vt0.c0)<(UNLIKELY(vt0.c0))) ASC  NULLS LAST, v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt1, v0, vt0 WHERE (((((((((((vt1.c0)OR('-151097424')))AND(vt2.c0)))AND(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>>(v0.c0))) AND ((+ (vt0.c0))))) ORDER BY ((vt0.c0)<(UNLIKELY(vt0.c0))) ASC  NULLS LAST, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR('-151097424')))AND(vt2.c0)))AND(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>>(v0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt2, vt1, v0, vt0 ORDER BY ((vt0.c0)<(UNLIKELY(vt0.c0))) ASC  NULLS LAST, v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt1, v0, vt0 WHERE (((((((((((vt1.c0)OR('-151097424')))AND(vt2.c0)))AND(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>>(v0.c0))) AND ((+ (vt0.c0))))) ORDER BY ((vt0.c0)<(UNLIKELY(vt0.c0))) ASC  NULLS LAST, v0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((IFNULL(rt0.c1, rt0.c2))<<((v0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((HEX(DISTINCT v0.c0))>(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) WHERE ((- ((((rt0.c2))<>((rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c0)-(rt0.c3)) THEN ((rt0.c1)&(rt0.c1)) WHEN '1624435424' THEN CAST(vt2.c0 AS REAL) WHEN rt0.c0 THEN LIKE(rt0.c0, rt0.c1) WHEN ((rt0.c3) ISNULL) THEN NULL COLLATE RTRIM WHEN '7f/⽺FnO' THEN (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((IFNULL(rt0.c1, rt0.c2))<<((v0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((HEX(DISTINCT v0.c0))>(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) ORDER BY CASE WHEN ((rt0.c0)-(rt0.c3)) THEN ((rt0.c1)&(rt0.c1)) WHEN '1624435424' THEN CAST(vt2.c0 AS REAL) WHEN rt0.c0 THEN LIKE(rt0.c0, rt0.c1) WHEN ((rt0.c3) ISNULL) THEN NULL COLLATE RTRIM WHEN '7f/⽺FnO' THEN (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((IFNULL(rt0.c1, rt0.c2))<<((v0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((HEX(DISTINCT v0.c0))>(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) WHERE ((- ((((rt0.c2))<>((rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c0)-(rt0.c3)) THEN ((rt0.c1)&(rt0.c1)) WHEN '1624435424' THEN CAST(vt2.c0 AS REAL) WHEN rt0.c0 THEN LIKE(rt0.c0, rt0.c1) WHEN ((rt0.c3) ISNULL) THEN NULL COLLATE RTRIM WHEN '7f/⽺FnO' THEN (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((IFNULL(rt0.c1, rt0.c2))<<((v0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((HEX(DISTINCT v0.c0))>(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) ORDER BY CASE WHEN ((rt0.c0)-(rt0.c3)) THEN ((rt0.c1)&(rt0.c1)) WHEN '1624435424' THEN CAST(vt2.c0 AS REAL) WHEN rt0.c0 THEN LIKE(rt0.c0, rt0.c1) WHEN ((rt0.c3) ISNULL) THEN NULL COLLATE RTRIM WHEN '7f/⽺FnO' THEN (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON ((IFNULL(rt0.c1, rt0.c2))<<((v0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((HEX(DISTINCT v0.c0))>(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) WHERE ((- ((((rt0.c2))<>((rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c0)-(rt0.c3)) THEN ((rt0.c1)&(rt0.c1)) WHEN '1624435424' THEN CAST(vt2.c0 AS REAL) WHEN rt0.c0 THEN LIKE(rt0.c0, rt0.c1) WHEN ((rt0.c3) ISNULL) THEN NULL COLLATE RTRIM WHEN '7f/⽺FnO' THEN (rt0.c1 IN ()) END;
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c3) ORDER BY ((x'0e7700de')==(((rt0.c2)%(rt0.c1)))) DESC, ((CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((x'0e7700de')=(((rt0.c2)%(rt0.c1)))) DESC, ((CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 END) NOT NULL) DESC);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c3) ORDER BY ((x'0e7700de')==(((rt0.c2)%(rt0.c1)))) DESC, ((CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((x'0e7700de')=(((rt0.c2)%(rt0.c1)))) DESC, ((CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 END) NOT NULL) DESC);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c3) ORDER BY ((x'0e7700de')==(((rt0.c2)%(rt0.c1)))) DESC, ((CASE vt0.c0  WHEN rt0.c4 THEN rt0.c2 END) NOT NULL) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (-1.529067977E9) ORDER BY CAST(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((-1.529067977E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END AS NUMERIC));
SELECT ALL * FROM vt0, rt0 WHERE (-1.529067977E9) ORDER BY CAST(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((-1.529067977E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END AS NUMERIC));
SELECT ALL * FROM vt0, rt0 WHERE (-1.529067977E9) ORDER BY CAST(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END AS NUMERIC);
SELECT ALL * FROM vt2 LEFT OUTER JOIN v0 ON vt2.c0 FULL OUTER JOIN vt1 ON ((((vt1.c0)AND(-3.23542764E8)))<<(((vt2.c0)*(v0.c0)))) WHERE (CASE ((v0.c0) NOT NULL)  WHEN '159258956' THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT NULL)  WHEN '159258956' THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN v0 ON vt2.c0 FULL OUTER JOIN vt1 ON ((((vt1.c0)AND(-3.23542764E8)))<<(((vt2.c0)*(v0.c0)))));
SELECT ALL * FROM vt2 LEFT OUTER JOIN v0 ON vt2.c0 FULL OUTER JOIN vt1 ON ((((vt1.c0)AND(-3.23542764E8)))<<(((vt2.c0)*(v0.c0)))) WHERE (CASE ((v0.c0) NOT NULL)  WHEN '159258956' THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT NULL)  WHEN '159258956' THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN v0 ON vt2.c0 FULL OUTER JOIN vt1 ON ((((vt1.c0)AND(-3.23542764E8)))<<(((vt2.c0)*(v0.c0)))));
SELECT ALL * FROM vt2 LEFT OUTER JOIN v0 ON vt2.c0 FULL OUTER JOIN vt1 ON ((((vt1.c0)AND(-3.23542764E8)))<<(((vt2.c0)*(v0.c0)))) WHERE (CASE ((v0.c0) NOT NULL)  WHEN '159258956' THEN vt1.c0 COLLATE NOCASE END);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT * FROM v0 CROSS JOIN vt0 ON (SQLITE_SOURCE_ID() IN ()) WHERE ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0) NOTNULL))OR(v0.c0)))OR(HEX(DISTINCT 0.1711442856008204))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (SQLITE_SOURCE_ID() IN ()) ORDER BY ((((((vt0.c0) NOTNULL))OR(v0.c0)))OR(HEX(DISTINCT 0.1711442856008204))) DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON (SQLITE_SOURCE_ID() IN ()) WHERE ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0) NOTNULL))OR(v0.c0)))OR(HEX(DISTINCT 0.1711442856008204))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (SQLITE_SOURCE_ID() IN ()) ORDER BY ((((((vt0.c0) NOTNULL))OR(v0.c0)))OR(HEX(DISTINCT 0.1711442856008204))) DESC);
SELECT * FROM v0 CROSS JOIN vt0 ON (SQLITE_SOURCE_ID() IN ()) WHERE ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0) NOTNULL))OR(v0.c0)))OR(HEX(DISTINCT 0.1711442856008204))) DESC;
SELECT COUNT(*) FROM vt2, v0, rt0 INNER JOIN vt0 ON ((+ (rt0.c1)) IN ()) WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN ((x'b174') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN ((x'b174') IS TRUE) END) IS TRUE)  as count FROM vt2, v0, rt0 INNER JOIN vt0 ON ((+ (rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt2, v0, rt0 INNER JOIN vt0 ON ((+ (rt0.c1)) IN ()) WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN ((x'b174') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN ((x'b174') IS TRUE) END) IS TRUE)  as count FROM vt2, v0, rt0 INNER JOIN vt0 ON ((+ (rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt2, v0, rt0 INNER JOIN vt0 ON ((+ (rt0.c1)) IN ()) WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN ((x'b174') IS TRUE) END);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN vt0 ON (((- (vt2.c0)))IS NOT(((vt2.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((vt2.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (((- (vt2.c0)))IS NOT(((vt2.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN vt0 ON (((- (vt2.c0)))IS NOT(((vt2.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((vt2.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (((- (vt2.c0)))IS NOT(((vt2.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) RIGHT OUTER JOIN vt1 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (LOWER(rt0.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c4 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (LOWER(rt0.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c4 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (LOWER(rt0.c4 COLLATE RTRIM));
SELECT * FROM vt0, vt2, vt1, v0 WHERE ((((((NOT (vt1.c0)))OR(((v0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.2696521227225114 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt1.c0)))OR(((v0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.2696521227225114 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt2, vt1, v0);
SELECT * FROM vt0, vt2, vt1, v0 WHERE ((((((NOT (vt1.c0)))OR(((v0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.2696521227225114 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt1.c0)))OR(((v0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.2696521227225114 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt2, vt1, v0);
SELECT * FROM vt0, vt2, vt1, v0 WHERE ((((((NOT (vt1.c0)))OR(((v0.c0) NOTNULL))))AND(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.2696521227225114 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, vt1 INNER JOIN vt2 ON ((rt0.c0)&(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<=(vt1.c0)))) WHERE (((((vt1.c0)>=(rt0.c3)))==(UNLIKELY(DISTINCT rt0.c0)))) ORDER BY ((((vt0.c0) NOTNULL))<>(((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(rt0.c3)))=(UNLIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt2 ON ((rt0.c0)&(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<=(vt1.c0)))) ORDER BY ((((vt0.c0) NOTNULL))!=(((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC);
SELECT * FROM rt0, vt1 INNER JOIN vt2 ON ((rt0.c0)&(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<=(vt1.c0)))) WHERE (((((vt1.c0)>=(rt0.c3)))==(UNLIKELY(DISTINCT rt0.c0)))) ORDER BY ((((vt0.c0) NOTNULL))<>(((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(rt0.c3)))=(UNLIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt2 ON ((rt0.c0)&(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<=(vt1.c0)))) ORDER BY ((((vt0.c0) NOTNULL))!=(((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC);
SELECT * FROM rt0, vt1 INNER JOIN vt2 ON ((rt0.c0)&(vt1.c0)) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (+ (((vt0.c0)<=(vt1.c0)))) WHERE (((((vt1.c0)>=(rt0.c3)))==(UNLIKELY(DISTINCT rt0.c0)))) ORDER BY ((((vt0.c0) NOTNULL))<>(((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT ALL * FROM rt0, vt2, v0, vt0 LEFT OUTER JOIN vt1 ON ((LIKELY(DISTINCT rt0.c2)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2, v0, vt0 LEFT OUTER JOIN vt1 ON ((LIKELY(DISTINCT rt0.c2)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT ALL * FROM rt0, vt2, v0, vt0 LEFT OUTER JOIN vt1 ON ((LIKELY(DISTINCT rt0.c2)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2, v0, vt0 LEFT OUTER JOIN vt1 ON ((LIKELY(DISTINCT rt0.c2)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT ALL * FROM rt0, vt2, v0, vt0 LEFT OUTER JOIN vt1 ON ((LIKELY(DISTINCT rt0.c2)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt2, v0, vt1, rt0 WHERE (CAST((v0.c0 IN ()) AS INTEGER)) ORDER BY ((((((((((rt0.c4)-(v0.c0)))AND(rt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)|(rt0.c2)))))OR(((rt0.c2) NOT BETWEEN ('') AND (vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt2, v0, vt1, rt0 ORDER BY ((((((((((rt0.c4)-(v0.c0)))AND(rt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)|(rt0.c2)))))OR(((rt0.c2) NOT BETWEEN ('') AND (vt2.c0)))));
SELECT ALL COUNT(*) FROM vt2, v0, vt1, rt0 WHERE (CAST((v0.c0 IN ()) AS INTEGER)) ORDER BY ((((((((((rt0.c4)-(v0.c0)))AND(rt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)|(rt0.c2)))))OR(((rt0.c2) NOT BETWEEN ('') AND (vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt2, v0, vt1, rt0 ORDER BY ((((((((((rt0.c4)-(v0.c0)))AND(rt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)|(rt0.c2)))))OR(((rt0.c2) NOT BETWEEN ('') AND (vt2.c0)))));
SELECT ALL COUNT(*) FROM vt2, v0, vt1, rt0 WHERE (CAST((v0.c0 IN ()) AS INTEGER)) ORDER BY ((((((((((rt0.c4)-(v0.c0)))AND(rt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)|(rt0.c2)))))OR(((rt0.c2) NOT BETWEEN ('') AND (vt2.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY (((+ (vt0.c0)))=(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) ORDER BY (((+ (vt0.c0)))=(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY (((+ (vt0.c0)))=(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) ORDER BY (((+ (vt0.c0)))=(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (vt0.c0 IN ()) WHERE (CAST(((vt0.c0) IS FALSE) AS TEXT)) ORDER BY (((+ (vt0.c0)))=(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)), vt1.c0;
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY x'' ASC;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c3))) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0, vt2 NATURAL JOIN v0 WHERE ((((((((((v0.c0 IN ()))AND((NOT (rt0.c4)))))OR(ROUND(vt2.c0, rt0.c3))))AND(CAST('>l' AS REAL))))AND(vt2.c0 COLLATE RTRIM))) ORDER BY 'xHH' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0 IN ()))AND((NOT (rt0.c4)))))OR(ROUND(vt2.c0, rt0.c3))))AND(CAST('>l' AS REAL))))AND(vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt2 NATURAL JOIN v0 ORDER BY 'xHH' DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt2 NATURAL JOIN v0 WHERE ((((((((((v0.c0 IN ()))AND((NOT (rt0.c4)))))OR(ROUND(vt2.c0, rt0.c3))))AND(CAST('>l' AS REAL))))AND(vt2.c0 COLLATE RTRIM))) ORDER BY 'xHH' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0 IN ()))AND((NOT (rt0.c4)))))OR(ROUND(vt2.c0, rt0.c3))))AND(CAST('>l' AS REAL))))AND(vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt2 NATURAL JOIN v0 ORDER BY 'xHH' DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt2 NATURAL JOIN v0 WHERE ((((((((((v0.c0 IN ()))AND((NOT (rt0.c4)))))OR(ROUND(vt2.c0, rt0.c3))))AND(CAST('>l' AS REAL))))AND(vt2.c0 COLLATE RTRIM))) ORDER BY 'xHH' DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0);
SELECT * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0);
SELECT * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY vt0.c0;
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT * FROM vt1, vt0 NOT INDEXED, rt0 WHERE (json_insert(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c1) IS FALSE), ((vt0.c0)%(rt0.c2)), '-323542764', rt0.c4 COLLATE RTRIM)) ORDER BY rt0.c3 DESC, CASE WHEN '0.37920404838653066' COLLATE RTRIM THEN rt0.c1 ELSE ((rt0.c1)*(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c1) IS FALSE), ((vt0.c0)%(rt0.c2)), '-323542764', rt0.c4 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY rt0.c3 DESC, CASE WHEN '0.37920404838653066' COLLATE RTRIM THEN rt0.c1 ELSE ((rt0.c1)*(vt1.c0)) END  NULLS LAST);
SELECT * FROM vt1, vt0 NOT INDEXED, rt0 WHERE (json_insert(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c1) IS FALSE), ((vt0.c0)%(rt0.c2)), '-323542764', rt0.c4 COLLATE RTRIM)) ORDER BY rt0.c3 DESC, CASE WHEN '0.37920404838653066' COLLATE RTRIM THEN rt0.c1 ELSE ((rt0.c1)*(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c1) IS FALSE), ((vt0.c0)%(rt0.c2)), '-323542764', rt0.c4 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY rt0.c3 DESC, CASE WHEN '0.37920404838653066' COLLATE RTRIM THEN rt0.c1 ELSE ((rt0.c1)*(vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c2  WHEN vt2.c0 THEN vt0.c0 END) AND (((-2.14683782E8) ISNULL))) CROSS JOIN v0 ON CASE WHEN ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))OR(x'')))AND(vt2.c0)) THEN 1.59258956E8 ELSE (~ (rt0.c3)) END LEFT OUTER JOIN vt2 ON ((v0.c0) NOT NULL) COLLATE RTRIM INNER JOIN rt0 ON CASE ((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN CASE WHEN 0Xffffffffa4dc4637 THEN rt0.c4 ELSE 0.9049264258442075 END END WHERE (((((((rt0.c1)<>(vt0.c0)))AND(x'')))AND(((rt0.c3)=(rt0.c2))))) ORDER BY (-475510072 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)<>(vt0.c0)))AND(x'')))AND(((rt0.c3)=(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c2  WHEN vt2.c0 THEN vt0.c0 END) AND (((-2.14683782E8) ISNULL))) CROSS JOIN v0 ON CASE WHEN ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))OR(x'')))AND(vt2.c0)) THEN 1.59258956E8 ELSE (~ (rt0.c3)) END LEFT OUTER JOIN vt2 ON ((v0.c0) NOT NULL) COLLATE RTRIM INNER JOIN rt0 ON CASE ((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN CASE WHEN 0Xffffffffa4dc4637 THEN rt0.c4 ELSE 0.9049264258442075 END END ORDER BY (-475510072 IN ()) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c2  WHEN vt2.c0 THEN vt0.c0 END) AND (((-2.14683782E8) ISNULL))) CROSS JOIN v0 ON CASE WHEN ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))OR(x'')))AND(vt2.c0)) THEN 1.59258956E8 ELSE (~ (rt0.c3)) END LEFT OUTER JOIN vt2 ON ((v0.c0) NOT NULL) COLLATE RTRIM INNER JOIN rt0 ON CASE ((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN CASE WHEN 0Xffffffffa4dc4637 THEN rt0.c4 ELSE 0.9049264258442075 END END WHERE (((((((rt0.c1)<>(vt0.c0)))AND(x'')))AND(((rt0.c3)=(rt0.c2))))) ORDER BY (-475510072 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)<>(vt0.c0)))AND(x'')))AND(((rt0.c3)=(rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CASE rt0.c2  WHEN vt2.c0 THEN vt0.c0 END) AND (((-2.14683782E8) ISNULL))) CROSS JOIN v0 ON CASE WHEN ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))OR(x'')))AND(vt2.c0)) THEN 1.59258956E8 ELSE (~ (rt0.c3)) END LEFT OUTER JOIN vt2 ON ((v0.c0) NOT NULL) COLLATE RTRIM INNER JOIN rt0 ON CASE ((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN CASE WHEN 0Xffffffffa4dc4637 THEN rt0.c4 ELSE 0.9049264258442075 END END ORDER BY (-475510072 IN ()) ASC);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (((vt1.c0)<=(((vt1.c0) BETWEEN (vt1.c0) AND (x'cd67'))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(((vt1.c0) BETWEEN (vt1.c0) AND (x'cd67'))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (((vt1.c0)<=(((vt1.c0) BETWEEN (vt1.c0) AND (x'cd67'))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(((vt1.c0) BETWEEN (vt1.c0) AND (x'cd67'))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (((vt1.c0)<=(((vt1.c0) BETWEEN (vt1.c0) AND (x'cd67'))))) ORDER BY NULL;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((('-214683782')<=(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('-214683782')<=(rt0.c4)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((('-214683782')<=(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('-214683782')<=(rt0.c4)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((('-214683782')<=(rt0.c4)) IN ()));
SELECT * FROM vt0, vt1, rt0, v0, vt2 WHERE (x'f62d') ORDER BY (- (0X1fa46419 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'f62d') IS TRUE)  as count FROM vt0, vt1, rt0, v0, vt2 ORDER BY (- (0X1fa46419 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0, v0, vt2 WHERE (x'f62d') ORDER BY (- (0X1fa46419 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'f62d') IS TRUE)  as count FROM vt0, vt1, rt0, v0, vt2 ORDER BY (- (0X1fa46419 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0, v0, vt2 WHERE (x'f62d') ORDER BY (- (0X1fa46419 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE (UPPER(CAST(x'' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(x'' AS TEXT))) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE (UPPER(CAST(x'' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(x'' AS TEXT))) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE (UPPER(CAST(x'' AS TEXT)));
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (NULL) ORDER BY CASE ((v0.c0) NOTNULL)  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY CASE ((v0.c0) NOTNULL)  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (NULL) ORDER BY CASE ((v0.c0) NOTNULL)  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY CASE ((v0.c0) NOTNULL)  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (NULL) ORDER BY CASE ((v0.c0) NOTNULL)  WHEN CAST(vt0.c0 AS INTEGER) THEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS FIRST, (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE ((0xffffffffe4ff4f50 IN ()) COLLATE RTRIM) ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((0xffffffffe4ff4f50 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt2, vt1 ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE ((0xffffffffe4ff4f50 IN ()) COLLATE RTRIM) ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((0xffffffffe4ff4f50 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt2, vt1 ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE ((0xffffffffe4ff4f50 IN ()) COLLATE RTRIM) ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1909068534')) THEN NULL WHEN (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0) IS FALSE) THEN json_patch(vt0.c0, vt0.c0) WHEN (- (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN (- (vt0.c0)) THEN ((vt1.c0)-(vt0.c0)) END WHERE (CAST(TYPEOF(0.9180024003261709) AS TEXT)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(0.9180024003261709) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1909068534')) THEN NULL WHEN (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0) IS FALSE) THEN json_patch(vt0.c0, vt0.c0) WHEN (- (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN (- (vt0.c0)) THEN ((vt1.c0)-(vt0.c0)) END ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1909068534')) THEN NULL WHEN (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0) IS FALSE) THEN json_patch(vt0.c0, vt0.c0) WHEN (- (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN (- (vt0.c0)) THEN ((vt1.c0)-(vt0.c0)) END WHERE (CAST(TYPEOF(0.9180024003261709) AS TEXT)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(0.9180024003261709) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1909068534')) THEN NULL WHEN (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN ((vt1.c0) IS FALSE) THEN json_patch(vt0.c0, vt0.c0) WHEN (- (vt1.c0)) THEN CAST(vt1.c0 AS REAL) WHEN (- (vt0.c0)) THEN ((vt1.c0)-(vt0.c0)) END ORDER BY vt0.c0 ASC);
SELECT * FROM vt2, vt1, vt0, rt0, v0 WHERE (vt1.c0) ORDER BY ((((rt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt2.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END) AND ((((rt0.c1))<>((rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt2 NOT INDEXED, vt1, vt0, rt0, v0 ORDER BY ((((rt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt2.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END) AND ((((rt0.c1))!=((rt0.c4))))) DESC);
SELECT * FROM vt2, vt1, vt0, rt0, v0 WHERE (vt1.c0) ORDER BY ((((rt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt2.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END) AND ((((rt0.c1))<>((rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt2 NOT INDEXED, vt1, vt0, rt0, v0 ORDER BY ((((rt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt2.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END) AND ((((rt0.c1))!=((rt0.c4))))) DESC);
SELECT * FROM vt2, vt1, vt0, rt0, v0 WHERE (vt1.c0) ORDER BY ((((rt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt2.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END) AND ((((rt0.c1))<>((rt0.c4))))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt2 WHERE (CASE WHEN STRFTIME(vt2.c0, vt2.c0, vt2.c0) THEN ROUND(vt2.c0, vt2.c0) WHEN (NOT (vt2.c0)) THEN TOTAL_CHANGES() WHEN (vt2.c0 IN (vt2.c0, vt2.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE (NOT (vt2.c0)) END) ORDER BY ((vt2.c0)%(vt2.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN STRFTIME(vt2.c0, vt2.c0, vt2.c0) THEN ROUND(vt2.c0, vt2.c0) WHEN (NOT (vt2.c0)) THEN TOTAL_CHANGES() WHEN (vt2.c0 IN (vt2.c0, vt2.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE (NOT (vt2.c0)) END) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0)%(vt2.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt2 WHERE (CASE WHEN STRFTIME(vt2.c0, vt2.c0, vt2.c0) THEN ROUND(vt2.c0, vt2.c0) WHEN (NOT (vt2.c0)) THEN TOTAL_CHANGES() WHEN (vt2.c0 IN (vt2.c0, vt2.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE (NOT (vt2.c0)) END) ORDER BY ((vt2.c0)%(vt2.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN STRFTIME(vt2.c0, vt2.c0, vt2.c0) THEN ROUND(vt2.c0, vt2.c0) WHEN (NOT (vt2.c0)) THEN TOTAL_CHANGES() WHEN (vt2.c0 IN (vt2.c0, vt2.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE (NOT (vt2.c0)) END) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0)%(vt2.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt2 WHERE (CASE WHEN STRFTIME(vt2.c0, vt2.c0, vt2.c0) THEN ROUND(vt2.c0, vt2.c0) WHEN (NOT (vt2.c0)) THEN TOTAL_CHANGES() WHEN (vt2.c0 IN (vt2.c0, vt2.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE (NOT (vt2.c0)) END) ORDER BY ((vt2.c0)%(vt2.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0, vt2);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0, vt2);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 WHERE (rt0.c1);
SELECT ALL * FROM vt2, vt0 WHERE (LOWER(((((NULL)AND(vt2.c0)))AND(0.3324956255918483))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((NULL)AND(vt2.c0)))AND(0.3324956255918483)))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE (LOWER(((((NULL)AND(vt2.c0)))AND(0.3324956255918483))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((NULL)AND(vt2.c0)))AND(0.3324956255918483)))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE (LOWER(((((NULL)AND(vt2.c0)))AND(0.3324956255918483))));
SELECT ALL COUNT(*) FROM vt2, v0, vt0, rt0, vt1 WHERE ((((rt0.c4 IN ()))|(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))|(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt2, v0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, v0, vt0, rt0, vt1 WHERE ((((rt0.c4 IN ()))|(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))|(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt2, v0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, v0, vt0, rt0, vt1 WHERE ((((rt0.c4 IN ()))|(((rt0.c1) ISNULL))));
SELECT COUNT(*) FROM v0, rt0, vt1, vt2 WHERE (((((rt0.c3) NOT NULL))AND(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT NULL))AND(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt0, vt1, vt2);
SELECT COUNT(*) FROM v0, rt0, vt1, vt2 WHERE (((((rt0.c3) NOT NULL))AND(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT NULL))AND(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM v0, rt0, vt1, vt2);
SELECT COUNT(*) FROM v0, rt0, vt1, vt2 WHERE (((((rt0.c3) NOT NULL))AND(((rt0.c1) ISNULL))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS TEXT) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS TEXT) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS TEXT) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON TYPEOF(LIKELIHOOD(rt0.c2, 0.15973229409596768)) FULL OUTER JOIN rt0 ON ((((((((1151513760)OR(((0.4294127741151691)GLOB(rt0.c4)))))OR(x'')))AND(((rt0.c3)+(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((((((((((v0.c0) NOTNULL))AND(((rt0.c1)LIKE(rt0.c4)))))OR(CAST(-151097424 AS BLOB))))AND(((rt0.c4)|(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END)) WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON TYPEOF(LIKELIHOOD(rt0.c2, 0.15973229409596768)) FULL OUTER JOIN rt0 ON ((((((((1151513760)OR(((0.4294127741151691)GLOB(rt0.c4)))))OR(x'')))AND(((rt0.c3)+(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((((((((((v0.c0) NOTNULL))AND(((rt0.c1)LIKE(rt0.c4)))))OR(CAST(-151097424 AS BLOB))))AND(((rt0.c4)|(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt1 CROSS JOIN v0 ON TYPEOF(LIKELIHOOD(rt0.c2, 0.15973229409596768)) FULL OUTER JOIN rt0 ON ((((((((1151513760)OR(((0.4294127741151691)GLOB(rt0.c4)))))OR(x'')))AND(((rt0.c3)+(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((((((((((v0.c0) NOTNULL))AND(((rt0.c1)LIKE(rt0.c4)))))OR(CAST(-151097424 AS BLOB))))AND(((rt0.c4)|(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END)) WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON TYPEOF(LIKELIHOOD(rt0.c2, 0.15973229409596768)) FULL OUTER JOIN rt0 ON ((((((((1151513760)OR(((0.4294127741151691)GLOB(rt0.c4)))))OR(x'')))AND(((rt0.c3)+(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON ((((((((((v0.c0) NOTNULL))AND(((rt0.c1)LIKE(rt0.c4)))))OR(CAST(-151097424 AS BLOB))))AND(((rt0.c4)|(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE ('*᥌uxg쪭LQ/');
SELECT SUM(count) FROM (SELECT ALL (('*᥌uxg쪭LQ/') IS TRUE)  as count FROM vt1, rt0, vt2, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE ('*᥌uxg쪭LQ/');
SELECT SUM(count) FROM (SELECT ALL (('*᥌uxg쪭LQ/') IS TRUE)  as count FROM vt1, rt0, vt2, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE ('*᥌uxg쪭LQ/');
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN 0.1910148161950166 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN 0.1910148161950166 END) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN 0.1910148161950166 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN 0.1910148161950166 END) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, rt0 WHERE (CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((v0.c0))) THEN 0.1910148161950166 END);
SELECT COUNT(*) FROM vt2, v0, rt0, vt0 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt2, v0, rt0, vt0);
SELECT COUNT(*) FROM vt2, v0, rt0, vt0 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt2, v0, rt0, vt0);
SELECT COUNT(*) FROM vt2, v0, rt0, vt0 WHERE ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE vt0.c0 END IN ()));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((rt0.c4 COLLATE NOCASE))>((CHANGES()))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS REAL)))) WHERE (CASE WHEN (rt0.c4 IN ()) THEN v0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c4 IN ()) THEN v0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((rt0.c4 COLLATE NOCASE))>((CHANGES()))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS REAL)))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((rt0.c4 COLLATE NOCASE))>((CHANGES()))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS REAL)))) WHERE (CASE WHEN (rt0.c4 IN ()) THEN v0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c4 IN ()) THEN v0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((rt0.c4 COLLATE NOCASE))>((CHANGES()))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CAST(vt1.c0 AS REAL)))));
SELECT * FROM v0 NATURAL JOIN vt2 WHERE (((CAST(vt2.c0 AS REAL))<((v0.c0 IN ())))) ORDER BY CAST('2108743877' AS NUMERIC), SQLITE_COMPILEOPTION_GET(SQLITE_COMPILEOPTION_GET(v0.c0)), (((((v0.c0)IS(v0.c0)), (('-475510072')>>(1624435424)), CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END, (v0.c0 IN (vt2.c0, vt2.c0)), vt2.c0 COLLATE RTRIM))>((((v0.c0)OR(v0.c0)), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS REAL))<((v0.c0 IN ())))) IS TRUE)  as count FROM v0 NATURAL JOIN vt2 ORDER BY CAST('2108743877' AS NUMERIC), SQLITE_COMPILEOPTION_GET(SQLITE_COMPILEOPTION_GET(v0.c0)), (((((v0.c0)IS(v0.c0)), (('-475510072')>>(1624435424)), CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END, (v0.c0 IN (vt2.c0, vt2.c0)), vt2.c0 COLLATE RTRIM))>((((v0.c0)OR(v0.c0)), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC);
SELECT * FROM v0 NATURAL JOIN vt2 WHERE (((CAST(vt2.c0 AS REAL))<((v0.c0 IN ())))) ORDER BY CAST('2108743877' AS NUMERIC), SQLITE_COMPILEOPTION_GET(SQLITE_COMPILEOPTION_GET(v0.c0)), (((((v0.c0)IS(v0.c0)), (('-475510072')>>(1624435424)), CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END, (v0.c0 IN (vt2.c0, vt2.c0)), vt2.c0 COLLATE RTRIM))>((((v0.c0)OR(v0.c0)), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS REAL))<((v0.c0 IN ())))) IS TRUE)  as count FROM v0 NATURAL JOIN vt2 ORDER BY CAST('2108743877' AS NUMERIC), SQLITE_COMPILEOPTION_GET(SQLITE_COMPILEOPTION_GET(v0.c0)), (((((v0.c0)IS(v0.c0)), (('-475510072')>>(1624435424)), CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END, (v0.c0 IN (vt2.c0, vt2.c0)), vt2.c0 COLLATE RTRIM))>((((v0.c0)OR(v0.c0)), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC);
SELECT * FROM v0 NATURAL JOIN vt2 WHERE (((CAST(vt2.c0 AS REAL))<((v0.c0 IN ())))) ORDER BY CAST('2108743877' AS NUMERIC), SQLITE_COMPILEOPTION_GET(SQLITE_COMPILEOPTION_GET(v0.c0)), (((((v0.c0)IS(v0.c0)), (('-475510072')>>(1624435424)), CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END, (v0.c0 IN (vt2.c0, vt2.c0)), vt2.c0 COLLATE RTRIM))>((((v0.c0)OR(v0.c0)), (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0 COLLATE RTRIM, CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END, ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))))) DESC;
SELECT COUNT(*) FROM vt1, rt0, vt2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c0 THEN -44526138 END AS REAL) RIGHT OUTER JOIN v0 ON vt2.c0 COLLATE NOCASE WHERE (((((('')AND(vt1.c0)))OR(vt0.c0)) IN ())) ORDER BY ((CASE WHEN '䙻Mw3-\nKma' THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN ((vt2.c0 IN (vt0.c0))) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')AND(vt1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, vt2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c0 THEN -44526138 END AS REAL) RIGHT OUTER JOIN v0 ON vt2.c0 COLLATE NOCASE ORDER BY ((CASE WHEN '䙻Mw3-\nKma' THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN ((vt2.c0 IN (vt0.c0))) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c0 THEN -44526138 END AS REAL) RIGHT OUTER JOIN v0 ON vt2.c0 COLLATE NOCASE WHERE (((((('')AND(vt1.c0)))OR(vt0.c0)) IN ())) ORDER BY ((CASE WHEN '䙻Mw3-\nKma' THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN ((vt2.c0 IN (vt0.c0))) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')AND(vt1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, vt2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c0 THEN -44526138 END AS REAL) RIGHT OUTER JOIN v0 ON vt2.c0 COLLATE NOCASE ORDER BY ((CASE WHEN '䙻Mw3-\nKma' THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN ((vt2.c0 IN (vt0.c0))) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c0 THEN -44526138 END AS REAL) RIGHT OUTER JOIN v0 ON vt2.c0 COLLATE NOCASE WHERE (((((('')AND(vt1.c0)))OR(vt0.c0)) IN ())) ORDER BY ((CASE WHEN '䙻Mw3-\nKma' THEN rt0.c3 ELSE rt0.c2 END) NOT BETWEEN ((vt2.c0 IN (vt0.c0))) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0)) NOT BETWEEN ((x'87cd')) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((((vt1.c0)LIKE(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))>=((((vt1.c0) BETWEEN ('-椞L\r4]') AND (vt1.c0)), LIKELY(vt1.c0), (((vt1.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0)) NOT BETWEEN ((x'87cd')) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)LIKE(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))>=((((vt1.c0) BETWEEN ('-椞L\r4]') AND (vt1.c0)), LIKELY(vt1.c0), (((vt1.c0))<=((vt1.c0)))))));
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0)) NOT BETWEEN ((x'87cd')) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((((vt1.c0)LIKE(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))>=((((vt1.c0) BETWEEN ('-椞L\r4]') AND (vt1.c0)), LIKELY(vt1.c0), (((vt1.c0))<=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0)) NOT BETWEEN ((x'87cd')) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)LIKE(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))>=((((vt1.c0) BETWEEN ('-椞L\r4]') AND (vt1.c0)), LIKELY(vt1.c0), (((vt1.c0))<=((vt1.c0)))))));
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ((((vt1.c0)) NOT BETWEEN ((x'87cd')) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (((((vt1.c0)LIKE(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))>=((((vt1.c0) BETWEEN ('-椞L\r4]') AND (vt1.c0)), LIKELY(vt1.c0), (((vt1.c0))<=((vt1.c0))))));
SELECT * FROM vt1, vt2 WHERE (((((((vt1.c0)OR(vt2.c0)))AND(vt1.c0))) NOT BETWEEN (((vt2.c0) IS TRUE)) AND ((NOT (-4.53030064E8))))) ORDER BY ((((vt2.c0)>(vt1.c0)))>>(ABS(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt2.c0)))AND(vt1.c0))) NOT BETWEEN (((vt2.c0) IS TRUE)) AND ((NOT (-4.53030064E8))))) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((((vt2.c0)>(vt1.c0)))>>(ABS(vt1.c0))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt2 WHERE (((((((vt1.c0)OR(vt2.c0)))AND(vt1.c0))) NOT BETWEEN (((vt2.c0) IS TRUE)) AND ((NOT (-4.53030064E8))))) ORDER BY ((((vt2.c0)>(vt1.c0)))>>(ABS(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt2.c0)))AND(vt1.c0))) NOT BETWEEN (((vt2.c0) IS TRUE)) AND ((NOT (-4.53030064E8))))) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((((vt2.c0)>(vt1.c0)))>>(ABS(vt1.c0))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt2 WHERE (((((((vt1.c0)OR(vt2.c0)))AND(vt1.c0))) NOT BETWEEN (((vt2.c0) IS TRUE)) AND ((NOT (-4.53030064E8))))) ORDER BY ((((vt2.c0)>(vt1.c0)))>>(ABS(vt1.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c3, rt0.c2)))<<(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)) WHERE (((CAST(v0.c0 AS TEXT))=((((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, vt1.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))==((((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, vt1.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c4)))))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c3, rt0.c2)))<<(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c3, rt0.c2)))<<(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)) WHERE (((CAST(v0.c0 AS TEXT))=((((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, vt1.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT))==((((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, vt1.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c4)))))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c3, rt0.c2)))<<(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0 CROSS JOIN v0 ON (((v0.c0 IN (rt0.c3, rt0.c2)))<<(CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)) WHERE (((CAST(v0.c0 AS TEXT))=((((vt2.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((rt0.c3, vt1.c0, vt1.c0)) AND ((rt0.c2, v0.c0, rt0.c4))))));
SELECT COUNT(*) FROM vt0, v0, vt1, rt0, vt2 WHERE (((((((rt0.c2)-(rt0.c0)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('_M')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c0)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('_M'))) IS TRUE)  as count FROM vt0, v0, vt1, rt0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt1, rt0, vt2 WHERE (((((((rt0.c2)-(rt0.c0)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('_M')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c0)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('_M'))) IS TRUE)  as count FROM vt0, v0, vt1, rt0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt1, rt0, vt2 WHERE (((((((rt0.c2)-(rt0.c0)))OR(((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))))AND('_M')));
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT * FROM rt0 WHERE ((((((rt0.c4)&(rt0.c3))))<((((((((((rt0.c4)OR(0.1975388059742601)))AND(0.07182085161951546)))AND('-1909068534')))OR(rt0.c1)))))) ORDER BY CAST(((rt0.c4)%(rt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)&(rt0.c3))))<((((((((((rt0.c4)OR(0.1975388059742601)))AND(0.07182085161951546)))AND('-1909068534')))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)%(rt0.c0)) AS INTEGER) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c4)&(rt0.c3))))<((((((((((rt0.c4)OR(0.1975388059742601)))AND(0.07182085161951546)))AND('-1909068534')))OR(rt0.c1)))))) ORDER BY CAST(((rt0.c4)%(rt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)&(rt0.c3))))<((((((((((rt0.c4)OR(0.1975388059742601)))AND(0.07182085161951546)))AND('-1909068534')))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)%(rt0.c0)) AS INTEGER) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c4)&(rt0.c3))))<((((((((((rt0.c4)OR(0.1975388059742601)))AND(0.07182085161951546)))AND('-1909068534')))OR(rt0.c1)))))) ORDER BY CAST(((rt0.c4)%(rt0.c0)) AS INTEGER) DESC;
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)GLOB(rt0.c3)) INNER JOIN v0 ON -7.80859901E8 INNER JOIN vt2 ON (((rt0.c1) IS FALSE) IN ()) WHERE ((~ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)GLOB(rt0.c3)) INNER JOIN v0 ON -7.80859901E8 INNER JOIN vt2 ON (((rt0.c1) IS FALSE) IN ()));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)GLOB(rt0.c3)) INNER JOIN v0 ON -7.80859901E8 INNER JOIN vt2 ON (((rt0.c1) IS FALSE) IN ()) WHERE ((~ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)GLOB(rt0.c3)) INNER JOIN v0 ON -7.80859901E8 INNER JOIN vt2 ON (((rt0.c1) IS FALSE) IN ()));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((rt0.c2)GLOB(rt0.c3)) INNER JOIN v0 ON -7.80859901E8 INNER JOIN vt2 ON (((rt0.c1) IS FALSE) IN ()) WHERE ((~ (v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (CASE ((vt1.c0)+(vt2.c0))  WHEN ((vt1.c0)IS NOT(vt2.c0)) THEN ((('268181320'))!=((vt1.c0))) ELSE vt2.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)+(vt2.c0))  WHEN ((vt1.c0)IS NOT(vt2.c0)) THEN ((('268181320'))<>((vt1.c0))) ELSE vt2.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt2, vt1);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (CASE ((vt1.c0)+(vt2.c0))  WHEN ((vt1.c0)IS NOT(vt2.c0)) THEN ((('268181320'))!=((vt1.c0))) ELSE vt2.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)+(vt2.c0))  WHEN ((vt1.c0)IS NOT(vt2.c0)) THEN ((('268181320'))<>((vt1.c0))) ELSE vt2.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt2, vt1);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (CASE ((vt1.c0)+(vt2.c0))  WHEN ((vt1.c0)IS NOT(vt2.c0)) THEN ((('268181320'))!=((vt1.c0))) ELSE vt2.c0 COLLATE BINARY END);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))IS NOT(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3)))IS NOT(((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))IS NOT(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3)))IS NOT(((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c3)))IS NOT(((NULL) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)&(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)&(x'')))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)&(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)&(x'')))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)&(x'')))) DESC;
SELECT * FROM vt2, vt1, v0, rt0 WHERE (CAST(((rt0.c1)>>(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>>(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2, vt1, v0, rt0);
SELECT * FROM vt2, vt1, v0, rt0 WHERE (CAST(((rt0.c1)>>(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>>(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2, vt1, v0, rt0);
SELECT * FROM vt2, vt1, v0, rt0 WHERE (CAST(((rt0.c1)>>(v0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, v0, vt1 WHERE (((rt0.c4) BETWEEN (((rt0.c4)|(rt0.c4))) AND (LIKELY(DISTINCT rt0.c0)))) ORDER BY TRIM(rt0.c0, rt0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) BETWEEN (((rt0.c4)|(rt0.c4))) AND (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt2, vt0, v0, vt1 ORDER BY TRIM(rt0.c0, rt0.c0) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, v0, vt1 WHERE (((rt0.c4) BETWEEN (((rt0.c4)|(rt0.c4))) AND (LIKELY(DISTINCT rt0.c0)))) ORDER BY TRIM(rt0.c0, rt0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) BETWEEN (((rt0.c4)|(rt0.c4))) AND (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt2, vt0, v0, vt1 ORDER BY TRIM(rt0.c0, rt0.c0) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, v0, vt1 WHERE (((rt0.c4) BETWEEN (((rt0.c4)|(rt0.c4))) AND (LIKELY(DISTINCT rt0.c0)))) ORDER BY TRIM(rt0.c0, rt0.c0) COLLATE BINARY DESC;
SELECT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON NULL WHERE (CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c2)) WHEN ((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN v0.c0 COLLATE BINARY THEN (rt0.c4 IN ()) ELSE '-44526138' END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c2)) WHEN ((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN v0.c0 COLLATE BINARY THEN (rt0.c4 IN ()) ELSE '-44526138' END) IS TRUE)  as count FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON NULL ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON NULL WHERE (CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c2)) WHEN ((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN v0.c0 COLLATE BINARY THEN (rt0.c4 IN ()) ELSE '-44526138' END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c2)) WHEN ((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN v0.c0 COLLATE BINARY THEN (rt0.c4 IN ()) ELSE '-44526138' END) IS TRUE)  as count FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON NULL ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM v0, vt0, vt1 LEFT OUTER JOIN rt0 ON NULL WHERE (CASE WHEN CAST(v0.c0 AS BLOB) THEN (+ (rt0.c2)) WHEN ((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c4)))OR(rt0.c3)))AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN v0.c0 COLLATE BINARY THEN (rt0.c4 IN ()) ELSE '-44526138' END) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 NOT INDEXED WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (0.42765199070763227))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (0.42765199070763227))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY '');
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 NOT INDEXED WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (0.42765199070763227))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (0.42765199070763227))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY '');
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 NOT INDEXED WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (0.42765199070763227))) ORDER BY '';
SELECT ALL * FROM vt2 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((+ (x'')));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((~ (rt0.c2))))) ORDER BY CAST(((rt0.c3) IS FALSE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c3) IS FALSE) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((~ (rt0.c2))))) ORDER BY CAST(((rt0.c3) IS FALSE) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c3) IS FALSE) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((~ (rt0.c2))))) ORDER BY CAST(((rt0.c3) IS FALSE) AS INTEGER) ASC;
SELECT ALL * FROM v0 WHERE ((('tMd-l') BETWEEN ((('lLa/t؃') NOT BETWEEN (v0.c0) AND (NULL))) AND (((v0.c0)AND(v0.c0))))) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(IFNULL(v0.c0, v0.c0))))AND('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('tMd-l') BETWEEN ((('lLa/t؃') NOT BETWEEN (v0.c0) AND (NULL))) AND (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(IFNULL(v0.c0, v0.c0))))AND('')) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('tMd-l') BETWEEN ((('lLa/t؃') NOT BETWEEN (v0.c0) AND (NULL))) AND (((v0.c0)AND(v0.c0))))) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(IFNULL(v0.c0, v0.c0))))AND('')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('tMd-l') BETWEEN ((('lLa/t؃') NOT BETWEEN (v0.c0) AND (NULL))) AND (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(IFNULL(v0.c0, v0.c0))))AND('')) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('tMd-l') BETWEEN ((('lLa/t؃') NOT BETWEEN (v0.c0) AND (NULL))) AND (((v0.c0)AND(v0.c0))))) ORDER BY ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(IFNULL(v0.c0, v0.c0))))AND('')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN (((vt1.c0))<=((vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN ((vt1.c0) NOT NULL) THEN vt2.c0 END) ORDER BY UNLIKELY(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END), (((vt1.c0 IN ())) ISNULL)  NULLS LAST, CASE ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))  WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) WHEN vt1.c0 THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN (((vt1.c0))<=((vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN ((vt1.c0) NOT NULL) THEN vt2.c0 END) IS TRUE)  as count FROM vt2, vt1 ORDER BY UNLIKELY(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END), (((vt1.c0 IN ())) ISNULL)  NULLS LAST, CASE ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))  WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) WHEN vt1.c0 THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN (((vt1.c0))<=((vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN ((vt1.c0) NOT NULL) THEN vt2.c0 END) ORDER BY UNLIKELY(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END), (((vt1.c0 IN ())) ISNULL)  NULLS LAST, CASE ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))  WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) WHEN vt1.c0 THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN (((vt1.c0))<=((vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN ((vt1.c0) NOT NULL) THEN vt2.c0 END) IS TRUE)  as count FROM vt2, vt1 ORDER BY UNLIKELY(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END), (((vt1.c0 IN ())) ISNULL)  NULLS LAST, CASE ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))  WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) WHEN vt1.c0 THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN (((vt1.c0))<=((vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN ((vt1.c0) NOT NULL) THEN vt2.c0 END) ORDER BY UNLIKELY(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END), (((vt1.c0 IN ())) ISNULL)  NULLS LAST, CASE ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))  WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) IS TRUE) WHEN vt1.c0 THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE (- (rt0.c2))  WHEN (NOT (rt0.c3)) THEN rt0.c1 END) ORDER BY (((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c2))  WHEN (NOT (rt0.c3)) THEN rt0.c1 END) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE (- (rt0.c2))  WHEN (NOT (rt0.c3)) THEN rt0.c1 END) ORDER BY (((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c2))  WHEN (NOT (rt0.c3)) THEN rt0.c1 END) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE (- (rt0.c2))  WHEN (NOT (rt0.c3)) THEN rt0.c1 END) ORDER BY (((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON x'' WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON x'');
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON x'' WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON x'');
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON x'' WHERE (NULL);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.020527016913038265 WHERE ((((((rt0.c0)<>(rt0.c0))))>=((((rt0.c3) BETWEEN (x'1092845e') AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<>(rt0.c0))))>=((((rt0.c3) BETWEEN (x'1092845e') AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.020527016913038265);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.020527016913038265 WHERE ((((((rt0.c0)<>(rt0.c0))))>=((((rt0.c3) BETWEEN (x'1092845e') AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<>(rt0.c0))))>=((((rt0.c3) BETWEEN (x'1092845e') AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.020527016913038265);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.020527016913038265 WHERE ((((((rt0.c0)<>(rt0.c0))))>=((((rt0.c3) BETWEEN (x'1092845e') AND (rt0.c1))))));
SELECT * FROM v0, vt2, vt0 WHERE ((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c0))))>=((v0.c0)))) ORDER BY (+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM v0, vt2, vt0 WHERE ((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c0))))>=((v0.c0)))) ORDER BY (+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c0))))>=((v0.c0)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM v0, vt2, vt0 WHERE ((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c0))))>=((v0.c0)))) ORDER BY (+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT * FROM vt0, rt0, vt2, v0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt2, v0);
SELECT * FROM vt0, rt0, vt2, v0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt2, v0);
SELECT * FROM vt0, rt0, vt2, v0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON (((vt2.c0))<(((((v0.c0))>=((vt1.c0)))))) CROSS JOIN vt2 ON CASE WHEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((1946339824) ISNULL) END FULL OUTER JOIN vt0 ON (- (vt1.c0)) WHERE ((((- (vt2.c0))) NOT BETWEEN ('') AND (CAST(vt2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((- (vt2.c0))) NOT BETWEEN ('') AND (CAST(vt2.c0 AS TEXT)))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((vt2.c0))<(((((v0.c0))>=((vt1.c0)))))) CROSS JOIN vt2 ON CASE WHEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((1946339824) ISNULL) END FULL OUTER JOIN vt0 ON (- (vt1.c0)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON (((vt2.c0))<(((((v0.c0))>=((vt1.c0)))))) CROSS JOIN vt2 ON CASE WHEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((1946339824) ISNULL) END FULL OUTER JOIN vt0 ON (- (vt1.c0)) WHERE ((((- (vt2.c0))) NOT BETWEEN ('') AND (CAST(vt2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((- (vt2.c0))) NOT BETWEEN ('') AND (CAST(vt2.c0 AS TEXT)))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON (((vt2.c0))<(((((v0.c0))>=((vt1.c0)))))) CROSS JOIN vt2 ON CASE WHEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((1946339824) ISNULL) END FULL OUTER JOIN vt0 ON (- (vt1.c0)));
SELECT * FROM vt1, vt2, v0, rt0 WHERE (((((vt2.c0) BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c3))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(v0.c0)) WHEN ((v0.c0)&('-1909068534')) THEN ((rt0.c0)|(rt0.c2)) WHEN 0.32893517591708554 THEN ((rt0.c2)OR(rt0.c1)) END  NULLS LAST, CAST((v0.c0 IN (rt0.c4, vt2.c0)) AS TEXT), ((((-1.992931717E9)AND(UPPER(DISTINCT rt0.c4))))OR((~ (vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c3))) IS TRUE)  as count FROM vt1, vt2, v0, rt0 ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(v0.c0)) WHEN ((v0.c0)&('-1909068534')) THEN ((rt0.c0)|(rt0.c2)) WHEN 0.32893517591708554 THEN ((rt0.c2)OR(rt0.c1)) END  NULLS LAST, CAST((v0.c0 IN (rt0.c4, vt2.c0)) AS TEXT), ((((-1.992931717E9)AND(UPPER(DISTINCT rt0.c4))))OR((~ (vt2.c0)))));
SELECT * FROM vt1, vt2, v0, rt0 WHERE (((((vt2.c0) BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c3))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(v0.c0)) WHEN ((v0.c0)&('-1909068534')) THEN ((rt0.c0)|(rt0.c2)) WHEN 0.32893517591708554 THEN ((rt0.c2)OR(rt0.c1)) END  NULLS LAST, CAST((v0.c0 IN (rt0.c4, vt2.c0)) AS TEXT), ((((-1.992931717E9)AND(UPPER(DISTINCT rt0.c4))))OR((~ (vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c3))) IS TRUE)  as count FROM vt1, vt2, v0, rt0 ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(v0.c0)) WHEN ((v0.c0)&('-1909068534')) THEN ((rt0.c0)|(rt0.c2)) WHEN 0.32893517591708554 THEN ((rt0.c2)OR(rt0.c1)) END  NULLS LAST, CAST((v0.c0 IN (rt0.c4, vt2.c0)) AS TEXT), ((((-1.992931717E9)AND(UPPER(DISTINCT rt0.c4))))OR((~ (vt2.c0)))));
SELECT * FROM vt1, vt2, v0, rt0 WHERE (((((vt2.c0) BETWEEN (rt0.c1) AND (vt1.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c3))) ORDER BY CASE WHEN v0.c0 COLLATE BINARY THEN ((rt0.c3)LIKE(v0.c0)) WHEN ((v0.c0)&('-1909068534')) THEN ((rt0.c0)|(rt0.c2)) WHEN 0.32893517591708554 THEN ((rt0.c2)OR(rt0.c1)) END  NULLS LAST, CAST((v0.c0 IN (rt0.c4, vt2.c0)) AS TEXT), ((((-1.992931717E9)AND(UPPER(DISTINCT rt0.c4))))OR((~ (vt2.c0))));
SELECT * FROM vt2, v0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((MAX(rt0.c3, NULL))) AND ((((rt0.c0) IS FALSE)))) WHERE ((NOT ((+ (rt0.c2))))) ORDER BY CASE (+ (rt0.c0))  WHEN ((NULL)>(rt0.c1)) THEN ((rt0.c4) NOT NULL) ELSE (((vt2.c0))<((rt0.c0))) END  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM vt2, v0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((MAX(rt0.c3, NULL))) AND ((((rt0.c0) IS FALSE)))) ORDER BY CASE (+ (rt0.c0))  WHEN ((NULL)>(rt0.c1)) THEN ((rt0.c4) NOT NULL) ELSE (((vt2.c0))<((rt0.c0))) END  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT * FROM vt2, v0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((MAX(rt0.c3, NULL))) AND ((((rt0.c0) IS FALSE)))) WHERE ((NOT ((+ (rt0.c2))))) ORDER BY CASE (+ (rt0.c0))  WHEN ((NULL)>(rt0.c1)) THEN ((rt0.c4) NOT NULL) ELSE (((vt2.c0))<((rt0.c0))) END  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM vt2, v0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((MAX(rt0.c3, NULL))) AND ((((rt0.c0) IS FALSE)))) ORDER BY CASE (+ (rt0.c0))  WHEN ((NULL)>(rt0.c1)) THEN ((rt0.c4) NOT NULL) ELSE (((vt2.c0))<((rt0.c0))) END  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT * FROM vt2, v0, vt1, vt0 RIGHT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((MAX(rt0.c3, NULL))) AND ((((rt0.c0) IS FALSE)))) WHERE ((NOT ((+ (rt0.c2))))) ORDER BY CASE (+ (rt0.c0))  WHEN ((NULL)>(rt0.c1)) THEN ((rt0.c4) NOT NULL) ELSE (((vt2.c0))<((rt0.c0))) END  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt2, rt0, vt0 WHERE (HEX(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL * FROM vt2, rt0, vt0 WHERE (HEX(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL * FROM vt2, rt0, vt0 WHERE (HEX(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))));
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE ((vt2.c0 IN ()) COLLATE RTRIM) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt2.c0)) COLLATE RTRIM, ((((vt2.c0) NOTNULL))%((rt0.c3 IN ()))), ((((rt0.c0)IS NOT('''LReM')))<(((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt2.c0)) COLLATE RTRIM, ((((vt2.c0) NOTNULL))%((rt0.c3 IN ()))), ((((rt0.c0)IS NOT('''LReM')))<(((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE ((vt2.c0 IN ()) COLLATE RTRIM) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt2.c0)) COLLATE RTRIM, ((((vt2.c0) NOTNULL))%((rt0.c3 IN ()))), ((((rt0.c0)IS NOT('''LReM')))<(((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt2.c0)) COLLATE RTRIM, ((((vt2.c0) NOTNULL))%((rt0.c3 IN ()))), ((((rt0.c0)IS NOT('''LReM')))<(((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE ((vt2.c0 IN ()) COLLATE RTRIM) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt2.c0)) COLLATE RTRIM, ((((vt2.c0) NOTNULL))%((rt0.c3 IN ()))), ((((rt0.c0)IS NOT('''LReM')))<(((vt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0 CROSS JOIN vt1 ON CAST(CAST(vt2.c0 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt2 ON ((((((v0.c0)OR(vt1.c0)))AND(x'1177'))) NOTNULL) WHERE ((((v0.c0, vt1.c0, vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()), ((((vt2.c0)OR(v0.c0)))AND(vt2.c0)), (((v0.c0, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, x'82ca')) AND ((vt1.c0, vt1.c0, v0.c0))), CASE vt2.c0  WHEN '0.020527016913038265' THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE v0.c0 END, TYPEOF(vt1.c0))) AND ((vt2.c0, CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0)||(vt2.c0)), LOWER(DISTINCT vt2.c0), (((vt2.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt1.c0, vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()), ((((vt2.c0)OR(v0.c0)))AND(vt2.c0)), (((v0.c0, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, x'82ca')) AND ((vt1.c0, vt1.c0, v0.c0))), CASE vt2.c0  WHEN '0.020527016913038265' THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE v0.c0 END, TYPEOF(vt1.c0))) AND ((vt2.c0, CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0)||(vt2.c0)), LOWER(DISTINCT vt2.c0), (((vt2.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON CAST(CAST(vt2.c0 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt2 ON ((((((v0.c0)OR(vt1.c0)))AND(x'1177'))) NOTNULL));
SELECT * FROM v0 CROSS JOIN vt1 ON CAST(CAST(vt2.c0 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt2 ON ((((((v0.c0)OR(vt1.c0)))AND(x'1177'))) NOTNULL) WHERE ((((v0.c0, vt1.c0, vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()), ((((vt2.c0)OR(v0.c0)))AND(vt2.c0)), (((v0.c0, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, x'82ca')) AND ((vt1.c0, vt1.c0, v0.c0))), CASE vt2.c0  WHEN '0.020527016913038265' THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE v0.c0 END, TYPEOF(vt1.c0))) AND ((vt2.c0, CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0)||(vt2.c0)), LOWER(DISTINCT vt2.c0), (((vt2.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt1.c0, vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()), ((((vt2.c0)OR(v0.c0)))AND(vt2.c0)), (((v0.c0, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, x'82ca')) AND ((vt1.c0, vt1.c0, v0.c0))), CASE vt2.c0  WHEN '0.020527016913038265' THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE v0.c0 END, TYPEOF(vt1.c0))) AND ((vt2.c0, CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0)||(vt2.c0)), LOWER(DISTINCT vt2.c0), (((vt2.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON CAST(CAST(vt2.c0 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt2 ON ((((((v0.c0)OR(vt1.c0)))AND(x'1177'))) NOTNULL));
SELECT * FROM v0 CROSS JOIN vt1 ON CAST(CAST(vt2.c0 AS INTEGER) AS TEXT) LEFT OUTER JOIN vt2 ON ((((((v0.c0)OR(vt1.c0)))AND(x'1177'))) NOTNULL) WHERE ((((v0.c0, vt1.c0, vt2.c0, vt1.c0, vt2.c0)) NOT BETWEEN (((vt2.c0 IN ()), ((((vt2.c0)OR(v0.c0)))AND(vt2.c0)), (((v0.c0, vt1.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, x'82ca')) AND ((vt1.c0, vt1.c0, v0.c0))), CASE vt2.c0  WHEN '0.020527016913038265' THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE v0.c0 END, TYPEOF(vt1.c0))) AND ((vt2.c0, CASE WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 END, ((vt2.c0)||(vt2.c0)), LOWER(DISTINCT vt2.c0), (((vt2.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT ALL COUNT(*) FROM vt2, vt1, v0, vt0, rt0 WHERE (CASE WHEN NULL THEN vt1.c0 COLLATE BINARY END) ORDER BY x'b5db' DESC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE rt0.c4  WHEN '1624435424' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt2, vt1, v0, vt0, rt0 ORDER BY x'b5db' DESC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE rt0.c4  WHEN '1624435424' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END END ASC);
SELECT ALL COUNT(*) FROM vt2, vt1, v0, vt0, rt0 WHERE (CASE WHEN NULL THEN vt1.c0 COLLATE BINARY END) ORDER BY x'b5db' DESC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE rt0.c4  WHEN '1624435424' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt2, vt1, v0, vt0, rt0 ORDER BY x'b5db' DESC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE rt0.c4  WHEN '1624435424' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END END ASC);
SELECT ALL COUNT(*) FROM vt2, vt1, v0, vt0, rt0 WHERE (CASE WHEN NULL THEN vt1.c0 COLLATE BINARY END) ORDER BY x'b5db' DESC  NULLS FIRST, CASE ((rt0.c2) IS TRUE)  WHEN (rt0.c3 IN ()) THEN ((rt0.c1)-(rt0.c0)) ELSE CASE rt0.c4  WHEN '1624435424' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END END ASC;
SELECT * FROM rt0, vt0, vt2, vt1, v0 WHERE (((((rt0.c3) ISNULL))!=(CASE vt2.c0  WHEN rt0.c4 THEN rt0.c3 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL))!=(CASE vt2.c0  WHEN rt0.c4 THEN rt0.c3 ELSE vt2.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1, v0);
SELECT * FROM rt0, vt0, vt2, vt1, v0 WHERE (((((rt0.c3) ISNULL))!=(CASE vt2.c0  WHEN rt0.c4 THEN rt0.c3 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL))!=(CASE vt2.c0  WHEN rt0.c4 THEN rt0.c3 ELSE vt2.c0 END))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1, v0);
SELECT * FROM rt0, vt0, vt2, vt1, v0 WHERE (((((rt0.c3) ISNULL))!=(CASE vt2.c0  WHEN rt0.c4 THEN rt0.c3 ELSE vt2.c0 END)));
SELECT ALL * FROM vt1 WHERE ((~ (((((((((((((vt1.c0)AND(' m')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((((((vt1.c0)AND(' m')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((((((((((((vt1.c0)AND(' m')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((((((vt1.c0)AND(' m')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((((((((((((vt1.c0)AND(' m')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (UNLIKELY(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (UNLIKELY(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (UNLIKELY(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((NOT ('RB')))>(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN vt0 ON (((((((((vt1.c0 IN ()))AND(CASE WHEN '0i' THEN rt0.c2 ELSE v0.c0 END)))OR(CAST(rt0.c0 AS REAL))))OR(((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))))AND((rt0.c0 IN ()))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((NOT ('RB')))>(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN vt0 ON (((((((((vt1.c0 IN ()))AND(CASE WHEN '0i' THEN rt0.c2 ELSE v0.c0 END)))OR(CAST(rt0.c0 AS REAL))))OR(((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))))AND((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((NOT ('RB')))>(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN vt0 ON (((((((((vt1.c0 IN ()))AND(CASE WHEN '0i' THEN rt0.c2 ELSE v0.c0 END)))OR(CAST(rt0.c0 AS REAL))))OR(((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))))AND((rt0.c0 IN ()))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((NOT ('RB')))>(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN vt0 ON (((((((((vt1.c0 IN ()))AND(CASE WHEN '0i' THEN rt0.c2 ELSE v0.c0 END)))OR(CAST(rt0.c0 AS REAL))))OR(((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))))AND((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((NOT ('RB')))>(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) CROSS JOIN vt0 ON (((((((((vt1.c0 IN ()))AND(CASE WHEN '0i' THEN rt0.c2 ELSE v0.c0 END)))OR(CAST(rt0.c0 AS REAL))))OR(((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))))AND((rt0.c0 IN ()))) WHERE (vt0.c0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((((vt2.c0)OR(v0.c0)))AND(vt0.c0)) IN (((v0.c0) NOTNULL)))) ORDER BY ((v0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST, (+ (SQLITE_SOURCE_ID())) ASC  NULLS LAST, ((((x'' COLLATE RTRIM)AND(((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))))OR(v0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)OR(v0.c0)))AND(vt0.c0)) IN (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((v0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST, (+ (SQLITE_SOURCE_ID())) ASC  NULLS LAST, ((((x'' COLLATE RTRIM)AND(((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))))OR(v0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((((vt2.c0)OR(v0.c0)))AND(vt0.c0)) IN (((v0.c0) NOTNULL)))) ORDER BY ((v0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST, (+ (SQLITE_SOURCE_ID())) ASC  NULLS LAST, ((((x'' COLLATE RTRIM)AND(((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))))OR(v0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)OR(v0.c0)))AND(vt0.c0)) IN (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((v0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST, (+ (SQLITE_SOURCE_ID())) ASC  NULLS LAST, ((((x'' COLLATE RTRIM)AND(((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))))OR(v0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((((vt2.c0)OR(v0.c0)))AND(vt0.c0)) IN (((v0.c0) NOTNULL)))) ORDER BY ((v0.c0)AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST, (+ (SQLITE_SOURCE_ID())) ASC  NULLS LAST, ((((x'' COLLATE RTRIM)AND(((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))))OR(v0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, vt2, vt0, vt1 WHERE (CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt2, vt0, vt1 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt2, vt0, vt1 WHERE (CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt2, vt0, vt1 ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt2, vt0, vt1 WHERE (CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB)) ORDER BY CAST(rt0.c3 AS TEXT) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1))<>((vt2.c0))) END FULL OUTER JOIN vt2 ON 'A4aA' CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)==(vt1.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE '' END WHERE (0.040197294319671006);
SELECT SUM(count) FROM (SELECT ALL ((0.040197294319671006) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1))<>((vt2.c0))) END FULL OUTER JOIN vt2 ON 'A4aA' CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)=(vt1.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE '' END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1))<>((vt2.c0))) END FULL OUTER JOIN vt2 ON 'A4aA' CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)==(vt1.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE '' END WHERE (0.040197294319671006);
SELECT SUM(count) FROM (SELECT ALL ((0.040197294319671006) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c2 COLLATE RTRIM THEN (((rt0.c1))<>((vt2.c0))) END FULL OUTER JOIN vt2 ON 'A4aA' CROSS JOIN rt0 ON CASE WHEN ((vt1.c0)=(vt1.c0)) THEN CAST(vt2.c0 AS BLOB) ELSE '' END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>(NULL)) IN ('' COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>(NULL)) IN ('' COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>(NULL)) IN ('' COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>(NULL)) IN ('' COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>(NULL)) IN ('' COLLATE NOCASE))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((v0.c0)AND(vt1.c0)))OR(vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM v0, vt0, vt2, rt0 WHERE ((((v0.c0)LIKE(v0.c0)) IN ())) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)LIKE(v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, vt2, rt0 ORDER BY NULL DESC);
SELECT ALL * FROM v0, vt0, vt2, rt0 WHERE ((((v0.c0)LIKE(v0.c0)) IN ())) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)LIKE(v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, vt2, rt0 ORDER BY NULL DESC);
SELECT ALL * FROM v0, vt0, vt2, rt0 WHERE ((((v0.c0)LIKE(v0.c0)) IN ())) ORDER BY NULL DESC;
SELECT * FROM v0, vt2, rt0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt2, rt0, vt1, vt0);
SELECT * FROM v0, vt2, rt0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt2, rt0, vt1, vt0);
SELECT * FROM v0, vt2, rt0, vt1, vt0 WHERE (NULL);
SELECT ALL * FROM v0 WHERE ((NOT (((x'')>(v0.c0))))) ORDER BY ((((0xffffffffa4dc4637) BETWEEN (v0.c0) AND (v0.c0)))+(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((0xffffffffa4dc4637) BETWEEN (v0.c0) AND (v0.c0)))+(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((NOT (((x'')>(v0.c0))))) ORDER BY ((((0xffffffffa4dc4637) BETWEEN (v0.c0) AND (v0.c0)))+(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((0xffffffffa4dc4637) BETWEEN (v0.c0) AND (v0.c0)))+(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((NOT (((x'')>(v0.c0))))) ORDER BY ((((0xffffffffa4dc4637) BETWEEN (v0.c0) AND (v0.c0)))+(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt2, v0, vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt2, v0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt2, v0, vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt2, v0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt2, v0, vt1 WHERE ((vt1.c0 IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST('zQ' COLLATE NOCASE AS REAL) WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST('zQ' COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST('zQ' COLLATE NOCASE AS REAL) WHERE ((((v0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST('zQ' COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST('zQ' COLLATE NOCASE AS REAL) WHERE ((((v0.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM vt2, rt0, v0, vt1 FULL OUTER JOIN vt0 ON CASE ((vt2.c0)<<(vt2.c0))  WHEN CAST(rt0.c4 AS BLOB) THEN CASE v0.c0  WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c4 END ELSE json_quote(rt0.c2) END WHERE ((('*᥌uxg쪭LQ/')AND(((rt0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT (((('*᥌uxg쪭LQ/')AND(((rt0.c4) ISNULL)))) IS TRUE)  as count FROM vt2, rt0, v0, vt1 FULL OUTER JOIN vt0 ON CASE ((vt2.c0)<<(vt2.c0))  WHEN CAST(rt0.c4 AS BLOB) THEN CASE v0.c0  WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c4 END ELSE json_quote(rt0.c2) END);
SELECT COUNT(*) FROM vt2, rt0, v0, vt1 FULL OUTER JOIN vt0 ON CASE ((vt2.c0)<<(vt2.c0))  WHEN CAST(rt0.c4 AS BLOB) THEN CASE v0.c0  WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c4 END ELSE json_quote(rt0.c2) END WHERE ((('*᥌uxg쪭LQ/')AND(((rt0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT (((('*᥌uxg쪭LQ/')AND(((rt0.c4) ISNULL)))) IS TRUE)  as count FROM vt2, rt0, v0, vt1 FULL OUTER JOIN vt0 ON CASE ((vt2.c0)<<(vt2.c0))  WHEN CAST(rt0.c4 AS BLOB) THEN CASE v0.c0  WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c4 END ELSE json_quote(rt0.c2) END);
SELECT COUNT(*) FROM vt2, rt0, v0, vt1 FULL OUTER JOIN vt0 ON CASE ((vt2.c0)<<(vt2.c0))  WHEN CAST(rt0.c4 AS BLOB) THEN CASE v0.c0  WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c4 END ELSE json_quote(rt0.c2) END WHERE ((('*᥌uxg쪭LQ/')AND(((rt0.c4) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt2 ON (((((NOT (v0.c0)))AND(json_extract(vt1.c0, x''))))OR(((v0.c0) NOT NULL))) INNER JOIN v0 ON CAST(0.07182085161951546 AS REAL) WHERE (CASE (NOT (v0.c0))  WHEN json_array(NULL, '-475510072', vt2.c0, vt1.c0) THEN (((vt1.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, x'e7ca'))) END) ORDER BY (- (vt2.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN json_array(NULL, '-475510072', vt2.c0, vt1.c0) THEN (((vt1.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, x'e7ca'))) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt2 ON (((((NOT (v0.c0)))AND(json_extract(vt1.c0, x''))))OR(((v0.c0) NOT NULL))) INNER JOIN v0 ON CAST(0.07182085161951546 AS REAL) ORDER BY (- (vt2.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt2 ON (((((NOT (v0.c0)))AND(json_extract(vt1.c0, x''))))OR(((v0.c0) NOT NULL))) INNER JOIN v0 ON CAST(0.07182085161951546 AS REAL) WHERE (CASE (NOT (v0.c0))  WHEN json_array(NULL, '-475510072', vt2.c0, vt1.c0) THEN (((vt1.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, x'e7ca'))) END) ORDER BY (- (vt2.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN json_array(NULL, '-475510072', vt2.c0, vt1.c0) THEN (((vt1.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, x'e7ca'))) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt2 ON (((((NOT (v0.c0)))AND(json_extract(vt1.c0, x''))))OR(((v0.c0) NOT NULL))) INNER JOIN v0 ON CAST(0.07182085161951546 AS REAL) ORDER BY (- (vt2.c0 COLLATE RTRIM)) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt0.c2)))) AND ((rt0.c4 COLLATE BINARY)))) ORDER BY NULL, 0.14613459763822167 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((- (rt0.c2)))) AND ((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY NULL, 0.14613459763822167 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt0.c2)))) AND ((rt0.c4 COLLATE BINARY)))) ORDER BY NULL, 0.14613459763822167 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((- (rt0.c2)))) AND ((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY NULL, 0.14613459763822167 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((- (rt0.c2)))) AND ((rt0.c4 COLLATE BINARY)))) ORDER BY NULL, 0.14613459763822167 COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (((((-1141739307)<=(vt1.c0)))<=(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((-1141739307)<=(vt1.c0)))<=(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (((((-1141739307)<=(vt1.c0)))<=(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((-1141739307)<=(vt1.c0)))<=(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (((((-1141739307)<=(vt1.c0)))<=(((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((v0.c0) NOTNULL))) WHERE (HEX(DISTINCT LIKELIHOOD(rt0.c0, 0.13224527911996076)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT LIKELIHOOD(rt0.c0, 0.13224527911996076))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((v0.c0) NOTNULL))));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((v0.c0) NOTNULL))) WHERE (HEX(DISTINCT LIKELIHOOD(rt0.c0, 0.13224527911996076)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT LIKELIHOOD(rt0.c0, 0.13224527911996076))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((v0.c0) NOTNULL))));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON ((((vt0.c0) ISNULL)) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (((v0.c0) NOTNULL))) WHERE (HEX(DISTINCT LIKELIHOOD(rt0.c0, 0.13224527911996076)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON TRIM(((vt2.c0) NOT BETWEEN ('1412400926') AND (v0.c0))) CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)OR(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt2.c0 END)))OR((('')/(vt1.c0)))) WHERE ((((0x7402c9f0)OR(vt2.c0)) IN ())) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(CAST(v0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0X7402c9f0)OR(vt2.c0)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON TRIM(((vt2.c0) NOT BETWEEN ('1412400926') AND (v0.c0))) CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)OR(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt2.c0 END)))OR((('')/(vt1.c0)))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(CAST(v0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt1 ON TRIM(((vt2.c0) NOT BETWEEN ('1412400926') AND (v0.c0))) CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)OR(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt2.c0 END)))OR((('')/(vt1.c0)))) WHERE ((((0x7402c9f0)OR(vt2.c0)) IN ())) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(CAST(v0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0X7402c9f0)OR(vt2.c0)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON TRIM(((vt2.c0) NOT BETWEEN ('1412400926') AND (v0.c0))) CROSS JOIN vt2 ON ((((vt1.c0 COLLATE RTRIM)OR(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt2.c0 END)))OR((('')/(vt1.c0)))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(CAST(v0.c0 AS NUMERIC))) ASC);
SELECT * FROM rt0 CROSS JOIN v0 ON ((CASE WHEN x'' THEN '2108743877' ELSE rt0.c3 END) NOTNULL) RIGHT OUTER JOIN vt1 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CASE WHEN x'' THEN '2108743877' ELSE rt0.c3 END) NOTNULL) RIGHT OUTER JOIN vt1 ON NULL);
SELECT * FROM rt0 CROSS JOIN v0 ON ((CASE WHEN x'' THEN '2108743877' ELSE rt0.c3 END) NOTNULL) RIGHT OUTER JOIN vt1 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((CASE WHEN x'' THEN '2108743877' ELSE rt0.c3 END) NOTNULL) RIGHT OUTER JOIN vt1 ON NULL);
SELECT * FROM rt0 CROSS JOIN v0 ON ((CASE WHEN x'' THEN '2108743877' ELSE rt0.c3 END) NOTNULL) RIGHT OUTER JOIN vt1 ON NULL WHERE (NULL);
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN v0 ON ((((((vt1.c0)IS(NULL)))OR(x'a8a3')))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON CAST(((rt0.c2)|(rt0.c0)) AS TEXT) CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt0.c1)))AND(NULL)))<>(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN vt1 ON (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((json_remove(rt0.c3, rt0.c4), (vt2.c0 IN ()), ('208270175' IN (rt0.c3)))) AND (((- (vt1.c0)), ((v0.c0) ISNULL), (- (rt0.c0))))) WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN v0 ON ((((((vt1.c0)IS(NULL)))OR(x'a8a3')))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON CAST(((rt0.c2)|(rt0.c0)) AS TEXT) CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt0.c1)))AND(NULL)))<>(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN vt1 ON (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((json_remove(rt0.c3, rt0.c4), (vt2.c0 IN ()), ('208270175' IN (rt0.c3)))) AND (((- (vt1.c0)), ((v0.c0) ISNULL), (- (rt0.c0))))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN v0 ON ((((((vt1.c0)IS(NULL)))OR(x'a8a3')))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON CAST(((rt0.c2)|(rt0.c0)) AS TEXT) CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt0.c1)))AND(NULL)))<>(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN vt1 ON (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((json_remove(rt0.c3, rt0.c4), (vt2.c0 IN ()), ('208270175' IN (rt0.c3)))) AND (((- (vt1.c0)), ((v0.c0) ISNULL), (- (rt0.c0))))) WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN v0 ON ((((((vt1.c0)IS(NULL)))OR(x'a8a3')))OR(vt0.c0 COLLATE NOCASE)) INNER JOIN vt0 ON CAST(((rt0.c2)|(rt0.c0)) AS TEXT) CROSS JOIN rt0 ON ((((((rt0.c1)OR(rt0.c1)))AND(NULL)))<>(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN vt1 ON (((rt0.c4, rt0.c0, rt0.c3)) NOT BETWEEN ((json_remove(rt0.c3, rt0.c4), (vt2.c0 IN ()), ('208270175' IN (rt0.c3)))) AND (((- (vt1.c0)), ((v0.c0) ISNULL), (- (rt0.c0))))));
SELECT * FROM vt0, v0, rt0, vt2, vt1 WHERE ((((NULL)) BETWEEN ((((vt1.c0)>(rt0.c1)))) AND ((0.23180613176376763))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt1.c0)>(rt0.c1)))) AND ((0.23180613176376763)))) IS TRUE)  as count FROM vt0, v0, rt0, vt2, vt1);
SELECT * FROM vt0, v0, rt0, vt2, vt1 WHERE ((((NULL)) BETWEEN ((((vt1.c0)>(rt0.c1)))) AND ((0.23180613176376763))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt1.c0)>(rt0.c1)))) AND ((0.23180613176376763)))) IS TRUE)  as count FROM vt0, v0, rt0, vt2, vt1);
SELECT * FROM vt0, v0, rt0, vt2, vt1 WHERE ((((NULL)) BETWEEN ((((vt1.c0)>(rt0.c1)))) AND ((0.23180613176376763))));
SELECT ALL * FROM vt2, vt1, v0, vt0 WHERE ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))>=((json_array(vt2.c0, vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))>=((json_array(vt2.c0, vt2.c0))))) IS TRUE)  as count FROM vt2, vt1, v0, vt0);
SELECT ALL * FROM vt2, vt1, v0, vt0 WHERE ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))>=((json_array(vt2.c0, vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))>=((json_array(vt2.c0, vt2.c0))))) IS TRUE)  as count FROM vt2, vt1, v0, vt0);
SELECT COUNT(*) FROM rt0, vt1 NATURAL JOIN v0 WHERE ((UNLIKELY(rt0.c2) IN ((((rt0.c0, vt1.c0, v0.c0)) NOT BETWEEN (('336099404', rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c0, v0.c0))), (NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c2) IN ((((rt0.c0, vt1.c0, v0.c0)) NOT BETWEEN (('336099404', rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c0, v0.c0))), (NOT (rt0.c4))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt1 NATURAL JOIN v0 WHERE ((UNLIKELY(rt0.c2) IN ((((rt0.c0, vt1.c0, v0.c0)) NOT BETWEEN (('336099404', rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c0, v0.c0))), (NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c2) IN ((((rt0.c0, vt1.c0, v0.c0)) NOT BETWEEN (('336099404', rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c0, v0.c0))), (NOT (rt0.c4))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt1 NATURAL JOIN v0 WHERE ((UNLIKELY(rt0.c2) IN ((((rt0.c0, vt1.c0, v0.c0)) NOT BETWEEN (('336099404', rt0.c1, vt1.c0)) AND ((rt0.c1, rt0.c0, v0.c0))), (NOT (rt0.c4)))));
SELECT * FROM v0, vt2 WHERE (((((((((((((vt2.c0)AND(v0.c0)))OR(vt2.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0)))AND(((vt2.c0)&(v0.c0))))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt2.c0))OR((((vt2.c0, v0.c0, vt2.c0))<>((v0.c0, '䫈Y', vt2.c0))))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt2.c0)AND(v0.c0)))OR(vt2.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0)))AND(((vt2.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt2 ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt2.c0))OR((((vt2.c0, v0.c0, vt2.c0))!=((v0.c0, '䫈Y', vt2.c0))))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT * FROM v0, vt2 WHERE (((((((((((((vt2.c0)AND(v0.c0)))OR(vt2.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0)))AND(((vt2.c0)&(v0.c0))))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt2.c0))OR((((vt2.c0, v0.c0, vt2.c0))<>((v0.c0, '䫈Y', vt2.c0))))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt2.c0)AND(v0.c0)))OR(vt2.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0)))AND(((vt2.c0)&(v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt2 ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt2.c0))OR((((vt2.c0, v0.c0, vt2.c0))!=((v0.c0, '䫈Y', vt2.c0))))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT * FROM v0, vt2 WHERE (((((((((((((vt2.c0)AND(v0.c0)))OR(vt2.c0)))AND(v0.c0)))OR(NULL)))OR(v0.c0)))AND(((vt2.c0)&(v0.c0))))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt2.c0))OR((((vt2.c0, v0.c0, vt2.c0))<>((v0.c0, '䫈Y', vt2.c0))))))AND(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT * FROM v0, vt1 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN (((rt0.c4))!=((rt0.c0))) ELSE rt0.c4 COLLATE RTRIM END LEFT OUTER JOIN vt2 ON IFNULL(DISTINCT (((rt0.c0))>=((vt1.c0))), (((rt0.c1))>=((x'')))) WHERE ((((HEX(rt0.c1)))>=((rt0.c3 COLLATE NOCASE)))) ORDER BY (vt2.c0 IN ('956537198')) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(rt0.c1)))>=((rt0.c3 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN (((rt0.c4))<>((rt0.c0))) ELSE rt0.c4 COLLATE RTRIM END LEFT OUTER JOIN vt2 ON IFNULL(DISTINCT (((rt0.c0))>=((vt1.c0))), (((rt0.c1))>=((x'')))) ORDER BY (vt2.c0 IN ('956537198')) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, vt1 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN (((rt0.c4))!=((rt0.c0))) ELSE rt0.c4 COLLATE RTRIM END LEFT OUTER JOIN vt2 ON IFNULL(DISTINCT (((rt0.c0))>=((vt1.c0))), (((rt0.c1))>=((x'')))) WHERE ((((HEX(rt0.c1)))>=((rt0.c3 COLLATE NOCASE)))) ORDER BY (vt2.c0 IN ('956537198')) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(rt0.c1)))>=((rt0.c3 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN (((rt0.c4))<>((rt0.c0))) ELSE rt0.c4 COLLATE RTRIM END LEFT OUTER JOIN vt2 ON IFNULL(DISTINCT (((rt0.c0))>=((vt1.c0))), (((rt0.c1))>=((x'')))) ORDER BY (vt2.c0 IN ('956537198')) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, vt1 FULL OUTER JOIN rt0 ON CASE WHEN rt0.c0 THEN (((rt0.c4))!=((rt0.c0))) ELSE rt0.c4 COLLATE RTRIM END LEFT OUTER JOIN vt2 ON IFNULL(DISTINCT (((rt0.c0))>=((vt1.c0))), (((rt0.c1))>=((x'')))) WHERE ((((HEX(rt0.c1)))>=((rt0.c3 COLLATE NOCASE)))) ORDER BY (vt2.c0 IN ('956537198')) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((((rt0.c1)) BETWEEN (('-1992931717')) AND (('-547234422'))))AND(((rt0.c2)LIKE(rt0.c0)))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (+ (((rt0.c2)<<(v0.c0)))) WHERE (json_extract((- (rt0.c4)), rt0.c4 COLLATE NOCASE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN x'cc2d' WHEN rt0.c4 THEN rt0.c2 END)%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract((- (rt0.c4)), rt0.c4 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((((rt0.c1)) BETWEEN (('-1992931717')) AND (('-547234422'))))AND(((rt0.c2)LIKE(rt0.c0)))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (+ (((rt0.c2)<<(v0.c0)))) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN x'cc2d' WHEN rt0.c4 THEN rt0.c2 END)%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((((rt0.c1)) BETWEEN (('-1992931717')) AND (('-547234422'))))AND(((rt0.c2)LIKE(rt0.c0)))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (+ (((rt0.c2)<<(v0.c0)))) WHERE (json_extract((- (rt0.c4)), rt0.c4 COLLATE NOCASE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN x'cc2d' WHEN rt0.c4 THEN rt0.c2 END)%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract((- (rt0.c4)), rt0.c4 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((((rt0.c1)) BETWEEN (('-1992931717')) AND (('-547234422'))))AND(((rt0.c2)LIKE(rt0.c0)))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (+ (((rt0.c2)<<(v0.c0)))) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN x'cc2d' WHEN rt0.c4 THEN rt0.c2 END)%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((((rt0.c1)) BETWEEN (('-1992931717')) AND (('-547234422'))))AND(((rt0.c2)LIKE(rt0.c0)))))AND((vt0.c0 IN ()))) FULL OUTER JOIN vt0 ON (+ (((rt0.c2)<<(v0.c0)))) WHERE (json_extract((- (rt0.c4)), rt0.c4 COLLATE NOCASE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN x'cc2d' WHEN rt0.c4 THEN rt0.c2 END)%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((((vt2.c0)OR(NULL)))OR(rt0.c1))) AND ((+ (rt0.c4)))) CROSS JOIN vt0 ON ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE WHERE (1274001423);
SELECT SUM(count) FROM (SELECT ((1274001423) IS TRUE)  as count FROM vt2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((((vt2.c0)OR(NULL)))OR(rt0.c1))) AND ((+ (rt0.c4)))) CROSS JOIN vt0 ON ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((((vt2.c0)OR(NULL)))OR(rt0.c1))) AND ((+ (rt0.c4)))) CROSS JOIN vt0 ON ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE WHERE (1274001423);
SELECT SUM(count) FROM (SELECT ((1274001423) IS TRUE)  as count FROM vt2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((((vt2.c0)OR(NULL)))OR(rt0.c1))) AND ((+ (rt0.c4)))) CROSS JOIN vt0 ON ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END) BETWEEN (((((vt2.c0)OR(NULL)))OR(rt0.c1))) AND ((+ (rt0.c4)))) CROSS JOIN vt0 ON ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE WHERE (1274001423);
SELECT ALL * FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON vt1.c0 COLLATE RTRIM WHERE (((((vt2.c0)>(v0.c0)))LIKE(((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt1.c0))))) ORDER BY (((v0.c0 IN ())) BETWEEN ('-1529067977') AND (((((vt1.c0)OR(x'')))AND(v0.c0)))) DESC, ((((v0.c0)OR(CASE WHEN vt2.c0 THEN vt1.c0 ELSE 0.8684908489699114 END)))AND((vt2.c0 IN (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)>(v0.c0)))LIKE(((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON vt1.c0 COLLATE RTRIM ORDER BY (((v0.c0 IN ())) BETWEEN ('-1529067977') AND (((((vt1.c0)OR(x'')))AND(v0.c0)))) DESC, ((((v0.c0)OR(CASE WHEN vt2.c0 THEN vt1.c0 ELSE 0.8684908489699114 END)))AND((vt2.c0 IN (v0.c0)))) ASC);
SELECT ALL * FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON vt1.c0 COLLATE RTRIM WHERE (((((vt2.c0)>(v0.c0)))LIKE(((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt1.c0))))) ORDER BY (((v0.c0 IN ())) BETWEEN ('-1529067977') AND (((((vt1.c0)OR(x'')))AND(v0.c0)))) DESC, ((((v0.c0)OR(CASE WHEN vt2.c0 THEN vt1.c0 ELSE 0.8684908489699114 END)))AND((vt2.c0 IN (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)>(v0.c0)))LIKE(((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON vt1.c0 COLLATE RTRIM ORDER BY (((v0.c0 IN ())) BETWEEN ('-1529067977') AND (((((vt1.c0)OR(x'')))AND(v0.c0)))) DESC, ((((v0.c0)OR(CASE WHEN vt2.c0 THEN vt1.c0 ELSE 0.8684908489699114 END)))AND((vt2.c0 IN (v0.c0)))) ASC);
SELECT ALL * FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON vt1.c0 COLLATE RTRIM WHERE (((((vt2.c0)>(v0.c0)))LIKE(((((((((vt2.c0)AND(v0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt1.c0))))) ORDER BY (((v0.c0 IN ())) BETWEEN ('-1529067977') AND (((((vt1.c0)OR(x'')))AND(v0.c0)))) DESC, ((((v0.c0)OR(CASE WHEN vt2.c0 THEN vt1.c0 ELSE 0.8684908489699114 END)))AND((vt2.c0 IN (v0.c0)))) ASC;
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (vt2.c0 IN ()) WHEN rt0.c2 THEN IFNULL(x'645b91df', v0.c0) WHEN (NOT (rt0.c0)) THEN (NOT ('')) ELSE CAST(rt0.c0 AS BLOB) END INNER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON HEX(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt2.c0 END) WHERE (((((CASE vt0.c0  WHEN vt2.c0 THEN rt0.c1 END)OR(vt1.c0)))AND((rt0.c1 IN ())))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt2.c0 THEN rt0.c1 END)OR(vt1.c0)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (vt2.c0 IN ()) WHEN rt0.c2 THEN IFNULL(x'645b91df', v0.c0) WHEN (NOT (rt0.c0)) THEN (NOT ('')) ELSE CAST(rt0.c0 AS BLOB) END INNER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON HEX(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt2.c0 END) ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (vt2.c0 IN ()) WHEN rt0.c2 THEN IFNULL(x'645b91df', v0.c0) WHEN (NOT (rt0.c0)) THEN (NOT ('')) ELSE CAST(rt0.c0 AS BLOB) END INNER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON HEX(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt2.c0 END) WHERE (((((CASE vt0.c0  WHEN vt2.c0 THEN rt0.c1 END)OR(vt1.c0)))AND((rt0.c1 IN ())))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt2.c0 THEN rt0.c1 END)OR(vt1.c0)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) IS FALSE) THEN (vt2.c0 IN ()) WHEN rt0.c2 THEN IFNULL(x'645b91df', v0.c0) WHEN (NOT (rt0.c0)) THEN (NOT ('')) ELSE CAST(rt0.c0 AS BLOB) END INNER JOIN vt0 ON (NOT (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON HEX(CASE WHEN rt0.c4 THEN rt0.c0 ELSE vt2.c0 END) ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, vt2, rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))=(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt2.c0)))) WHERE ((((((rt0.c4)GLOB(rt0.c2)), (rt0.c0 IN ()), '268181320'))>((CASE rt0.c2  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END, (((rt0.c0))>((rt0.c4))), (((rt0.c2))<((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)GLOB(rt0.c2)), (rt0.c0 IN ()), '268181320'))>((CASE rt0.c2  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END, (((rt0.c0))>((rt0.c4))), (((rt0.c2))<((rt0.c0))))))) IS TRUE)  as count FROM vt1, v0, vt2, rt0 NOT INDEXED CROSS JOIN vt0 ON (((NOT (vt0.c0)))=(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt2.c0)))));
SELECT COUNT(*) FROM vt1, v0, vt2, rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))=(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt2.c0)))) WHERE ((((((rt0.c4)GLOB(rt0.c2)), (rt0.c0 IN ()), '268181320'))>((CASE rt0.c2  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END, (((rt0.c0))>((rt0.c4))), (((rt0.c2))<((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)GLOB(rt0.c2)), (rt0.c0 IN ()), '268181320'))>((CASE rt0.c2  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END, (((rt0.c0))>((rt0.c4))), (((rt0.c2))<((rt0.c0))))))) IS TRUE)  as count FROM vt1, v0, vt2, rt0 NOT INDEXED CROSS JOIN vt0 ON (((NOT (vt0.c0)))=(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt2.c0)))));
SELECT COUNT(*) FROM vt1, v0, vt2, rt0 CROSS JOIN vt0 ON (((NOT (vt0.c0)))=(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt2.c0)))) WHERE ((((((rt0.c4)GLOB(rt0.c2)), (rt0.c0 IN ()), '268181320'))>((CASE rt0.c2  WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END, (((rt0.c0))>((rt0.c4))), (((rt0.c2))<((rt0.c0)))))));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((-0.0))) COLLATE BINARY RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS INTEGER) INNER JOIN vt1 ON TYPEOF(((((v0.c0)OR(vt0.c0)))AND(rt0.c4))) WHERE (0.0);
SELECT SUM(count) FROM (SELECT ALL ((0.0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((-0.0))) COLLATE BINARY RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS INTEGER) INNER JOIN vt1 ON TYPEOF(((((v0.c0)OR(vt0.c0)))AND(rt0.c4))));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((-0.0))) COLLATE BINARY RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS INTEGER) INNER JOIN vt1 ON TYPEOF(((((v0.c0)OR(vt0.c0)))AND(rt0.c4))) WHERE (0.0);
SELECT SUM(count) FROM (SELECT ALL ((0.0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((-0.0))) COLLATE BINARY RIGHT OUTER JOIN vt2 ON CAST(vt1.c0 AS INTEGER) INNER JOIN vt1 ON TYPEOF(((((v0.c0)OR(vt0.c0)))AND(rt0.c4))));
SELECT * FROM vt2 FULL OUTER JOIN v0 ON (((((rt0.c2, rt0.c3, rt0.c3))<=((vt2.c0, rt0.c3, vt0.c0)))) IS TRUE) FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN (((rt0.c1, rt0.c1, vt2.c0))<=((vt2.c0, v0.c0, rt0.c0))) WHEN (rt0.c1 IN (rt0.c3, v0.c0)) THEN rt0.c2 END RIGHT OUTER JOIN vt0 ON rt0.c4 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt2 FULL OUTER JOIN v0 ON (((((rt0.c2, rt0.c3, rt0.c3))<=((vt2.c0, rt0.c3, vt0.c0)))) IS TRUE) FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN (((rt0.c1, rt0.c1, vt2.c0))<=((vt2.c0, v0.c0, rt0.c0))) WHEN (rt0.c1 IN (rt0.c3, v0.c0)) THEN rt0.c2 END RIGHT OUTER JOIN vt0 ON rt0.c4);
SELECT * FROM vt2 FULL OUTER JOIN v0 ON (((((rt0.c2, rt0.c3, rt0.c3))<=((vt2.c0, rt0.c3, vt0.c0)))) IS TRUE) FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN (((rt0.c1, rt0.c1, vt2.c0))<=((vt2.c0, v0.c0, rt0.c0))) WHEN (rt0.c1 IN (rt0.c3, v0.c0)) THEN rt0.c2 END RIGHT OUTER JOIN vt0 ON rt0.c4 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt2 FULL OUTER JOIN v0 ON (((((rt0.c2, rt0.c3, rt0.c3))<=((vt2.c0, rt0.c3, vt0.c0)))) IS TRUE) FULL OUTER JOIN rt0 ON CASE WHEN rt0.c4 THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) THEN (((rt0.c1, rt0.c1, vt2.c0))<=((vt2.c0, v0.c0, rt0.c0))) WHEN (rt0.c1 IN (rt0.c3, v0.c0)) THEN rt0.c2 END RIGHT OUTER JOIN vt0 ON rt0.c4);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN 0.13648326475891082 WHEN rt0.c3 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c4 THEN NULL END) NOT NULL) LEFT OUTER JOIN vt2 ON (NOT (rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CAST(((((x'')AND(rt0.c3)))AND(rt0.c0)) AS INTEGER) RIGHT OUTER JOIN v0 ON CASE rt0.c3  WHEN rt0.c1 THEN vt1.c0 ELSE 'v-QRFx' END COLLATE BINARY WHERE (CAST(COALESCE(DISTINCT vt2.c0, rt0.c0, vt1.c0, '-44526138') AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT vt2.c0, rt0.c0, vt1.c0, '-44526138') AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN 0.13648326475891082 WHEN rt0.c3 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c4 THEN NULL END) NOT NULL) LEFT OUTER JOIN vt2 ON (NOT (rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CAST(((((x'')AND(rt0.c3)))AND(rt0.c0)) AS INTEGER) RIGHT OUTER JOIN v0 ON CASE rt0.c3  WHEN rt0.c1 THEN vt1.c0 ELSE 'v-QRFx' END COLLATE BINARY);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN 0.13648326475891082 WHEN rt0.c3 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c4 THEN NULL END) NOT NULL) LEFT OUTER JOIN vt2 ON (NOT (rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CAST(((((x'')AND(rt0.c3)))AND(rt0.c0)) AS INTEGER) RIGHT OUTER JOIN v0 ON CASE rt0.c3  WHEN rt0.c1 THEN vt1.c0 ELSE 'v-QRFx' END COLLATE BINARY WHERE (CAST(COALESCE(DISTINCT vt2.c0, rt0.c0, vt1.c0, '-44526138') AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT vt2.c0, rt0.c0, vt1.c0, '-44526138') AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN 0.13648326475891082 WHEN rt0.c3 THEN x'' WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c4 THEN NULL END) NOT NULL) LEFT OUTER JOIN vt2 ON (NOT (rt0.c1 COLLATE BINARY)) CROSS JOIN vt1 ON CAST(((((x'')AND(rt0.c3)))AND(rt0.c0)) AS INTEGER) RIGHT OUTER JOIN v0 ON CASE rt0.c3  WHEN rt0.c1 THEN vt1.c0 ELSE 'v-QRFx' END COLLATE BINARY);
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON (((vt1.c0 IN ()))>=(vt0.c0 COLLATE NOCASE)) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN ((MIN(v0.c0, v0.c0, v0.c0, v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON (((vt1.c0 IN ()))>=(vt0.c0 COLLATE NOCASE)) ORDER BY (((vt0.c0)) BETWEEN ((MIN(v0.c0, v0.c0, v0.c0, v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON (((vt1.c0 IN ()))>=(vt0.c0 COLLATE NOCASE)) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN ((MIN(v0.c0, v0.c0, v0.c0, v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON (((vt1.c0 IN ()))>=(vt0.c0 COLLATE NOCASE)) ORDER BY (((vt0.c0)) BETWEEN ((MIN(v0.c0, v0.c0, v0.c0, v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON (((vt1.c0 IN ()))>=(vt0.c0 COLLATE NOCASE)) WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) END) ORDER BY (((vt0.c0)) BETWEEN ((MIN(v0.c0, v0.c0, v0.c0, v0.c0))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ()))%(INSTR(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))%(INSTR(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ()))%(INSTR(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))%(INSTR(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ()))%(INSTR(rt0.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt2, v0, vt1, rt0 WHERE (((vt0.c0)IS(0.8642452904478077)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(0.8642452904478077)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2, v0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, v0, vt1, rt0 WHERE (((vt0.c0)IS(0.8642452904478077)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(0.8642452904478077)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2, v0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, v0, vt1, rt0 WHERE (((vt0.c0)IS(0.8642452904478077)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, rt0, vt1 WHERE (0x4e875e7c);
SELECT SUM(count) FROM (SELECT ((0x4e875e7c) IS TRUE)  as count FROM v0, vt2, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, rt0, vt1 WHERE (0x4e875e7c);
SELECT SUM(count) FROM (SELECT ((0x4e875e7c) IS TRUE)  as count FROM v0, vt2, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt2, vt0, rt0, vt1 WHERE (0x4e875e7c);
SELECT COUNT(*) FROM vt0, vt1, rt0, vt2 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt0 NOT INDEXED, vt2);
SELECT COUNT(*) FROM vt0, vt1, rt0, vt2 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt0 NOT INDEXED, vt2);
SELECT COUNT(*) FROM vt0, vt1, rt0, vt2 WHERE (((((vt1.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c0 IN ()))*(LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0 IN ()))*(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c0 IN ()))*(LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0 IN ()))*(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c0 IN ()))*(LIKELY(vt0.c0))));
SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON (((((rt0.c2))<=((NULL)))) NOT BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND ((((vt0.c0))!=((rt0.c2))))) LEFT OUTER JOIN v0 ON CASE ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(vt1.c0)) THEN (((vt1.c0, v0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))) ELSE CASE WHEN rt0.c0 THEN rt0.c0 END END WHERE (0.1975388059742601) ORDER BY (((((('1255919652') NOT BETWEEN (rt0.c4) AND (vt1.c0)))OR(0.23180613176376763)))OR(((((rt0.c2)AND(rt0.c4)))AND(-1.992931717E9)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.1975388059742601) IS TRUE)  as count FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON (((((rt0.c2))<=((NULL)))) NOT BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND ((((vt0.c0))!=((rt0.c2))))) LEFT OUTER JOIN v0 ON CASE ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(vt1.c0)) THEN (((vt1.c0, v0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))) ELSE CASE WHEN rt0.c0 THEN rt0.c0 END END ORDER BY (((((('1255919652') NOT BETWEEN (rt0.c4) AND (vt1.c0)))OR(0.23180613176376763)))OR(((((rt0.c2)AND(rt0.c4)))AND(-1.992931717E9)))) ASC);
SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON (((((rt0.c2))<=((NULL)))) NOT BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND ((((vt0.c0))!=((rt0.c2))))) LEFT OUTER JOIN v0 ON CASE ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(vt1.c0)) THEN (((vt1.c0, v0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))) ELSE CASE WHEN rt0.c0 THEN rt0.c0 END END WHERE (0.1975388059742601) ORDER BY (((((('1255919652') NOT BETWEEN (rt0.c4) AND (vt1.c0)))OR(0.23180613176376763)))OR(((((rt0.c2)AND(rt0.c4)))AND(-1.992931717E9)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.1975388059742601) IS TRUE)  as count FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON (((((rt0.c2))<=((NULL)))) NOT BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND ((((vt0.c0))!=((rt0.c2))))) LEFT OUTER JOIN v0 ON CASE ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(vt1.c0)) THEN (((vt1.c0, v0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))) ELSE CASE WHEN rt0.c0 THEN rt0.c0 END END ORDER BY (((((('1255919652') NOT BETWEEN (rt0.c4) AND (vt1.c0)))OR(0.23180613176376763)))OR(((((rt0.c2)AND(rt0.c4)))AND(-1.992931717E9)))) ASC);
SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON (((((rt0.c2))<=((NULL)))) NOT BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND ((((vt0.c0))!=((rt0.c2))))) LEFT OUTER JOIN v0 ON CASE ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(vt1.c0)) THEN (((vt1.c0, v0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))) ELSE CASE WHEN rt0.c0 THEN rt0.c0 END END WHERE (0.1975388059742601) ORDER BY (((((('1255919652') NOT BETWEEN (rt0.c4) AND (vt1.c0)))OR(0.23180613176376763)))OR(((((rt0.c2)AND(rt0.c4)))AND(-1.992931717E9)))) ASC;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((((((((((((vt0.c0)AND('208270175')))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0)AND('208270175')))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((((((((((((vt0.c0)AND('208270175')))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0)AND('208270175')))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((((((((((((((vt0.c0)AND('208270175')))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt2 WHERE (CASE WHEN CAST(vt2.c0 AS REAL) THEN ((vt2.c0)-(vt2.c0)) ELSE CAST(vt2.c0 AS BLOB) END) ORDER BY (((CAST(vt2.c0 AS INTEGER), CAST(vt2.c0 AS TEXT), ((((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))>((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), INSTR(vt2.c0, vt2.c0), 0.18503552453664063)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt2.c0 AS REAL) THEN ((vt2.c0)-(vt2.c0)) ELSE CAST(vt2.c0 AS BLOB) END) IS TRUE)  as count FROM vt2 ORDER BY (((CAST(vt2.c0 AS INTEGER), CAST(vt2.c0 AS TEXT), ((((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))>((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), INSTR(vt2.c0, vt2.c0), 0.18503552453664063))));
SELECT COUNT(*) FROM vt2 WHERE (CASE WHEN CAST(vt2.c0 AS REAL) THEN ((vt2.c0)-(vt2.c0)) ELSE CAST(vt2.c0 AS BLOB) END) ORDER BY (((CAST(vt2.c0 AS INTEGER), CAST(vt2.c0 AS TEXT), ((((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))>((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), INSTR(vt2.c0, vt2.c0), 0.18503552453664063)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt2.c0 AS REAL) THEN ((vt2.c0)-(vt2.c0)) ELSE CAST(vt2.c0 AS BLOB) END) IS TRUE)  as count FROM vt2 ORDER BY (((CAST(vt2.c0 AS INTEGER), CAST(vt2.c0 AS TEXT), ((((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))>((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), INSTR(vt2.c0, vt2.c0), 0.18503552453664063))));
SELECT COUNT(*) FROM vt2 WHERE (CASE WHEN CAST(vt2.c0 AS REAL) THEN ((vt2.c0)-(vt2.c0)) ELSE CAST(vt2.c0 AS BLOB) END) ORDER BY (((CAST(vt2.c0 AS INTEGER), CAST(vt2.c0 AS TEXT), ((((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))>((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)), INSTR(vt2.c0, vt2.c0), 0.18503552453664063)));
SELECT ALL COUNT(*) FROM vt2, rt0, vt1, vt0 FULL OUTER JOIN v0 ON 'mutK8u' WHERE (((((((((((rt0.c4)%(rt0.c3)))AND(((vt0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR((('335020631')%(rt0.c3)))))OR(((rt0.c0)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c4)%(rt0.c3)))AND(((vt0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR((('335020631')%(rt0.c3)))))OR(((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM vt2, rt0, vt1, vt0 FULL OUTER JOIN v0 ON 'mutK8u');
SELECT ALL COUNT(*) FROM vt2, rt0, vt1, vt0 FULL OUTER JOIN v0 ON 'mutK8u' WHERE (((((((((((rt0.c4)%(rt0.c3)))AND(((vt0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR((('335020631')%(rt0.c3)))))OR(((rt0.c0)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c4)%(rt0.c3)))AND(((vt0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR((('335020631')%(rt0.c3)))))OR(((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM vt2, rt0, vt1, vt0 FULL OUTER JOIN v0 ON 'mutK8u');
SELECT ALL COUNT(*) FROM vt2, rt0, vt1, vt0 FULL OUTER JOIN v0 ON 'mutK8u' WHERE (((((((((((rt0.c4)%(rt0.c3)))AND(((vt0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))))OR((('335020631')%(rt0.c3)))))OR(((rt0.c0)IS(rt0.c2)))));
SELECT * FROM rt0 WHERE (CASE (((rt0.c2))<((rt0.c3)))  WHEN rt0.c4 THEN rt0.c0 ELSE NULLIF(rt0.c1, 'MUTK8U') END) ORDER BY ((((rt0.c1)IS NOT(rt0.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))<((rt0.c3)))  WHEN rt0.c4 THEN rt0.c0 ELSE NULLIF(rt0.c1, 'MUTK8U') END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c2))) NOT NULL));
SELECT * FROM rt0 WHERE (CASE (((rt0.c2))<((rt0.c3)))  WHEN rt0.c4 THEN rt0.c0 ELSE NULLIF(rt0.c1, 'MUTK8U') END) ORDER BY ((((rt0.c1)IS NOT(rt0.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))<((rt0.c3)))  WHEN rt0.c4 THEN rt0.c0 ELSE NULLIF(rt0.c1, 'MUTK8U') END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c2))) NOT NULL));
SELECT * FROM rt0 WHERE (CASE (((rt0.c2))<((rt0.c3)))  WHEN rt0.c4 THEN rt0.c0 ELSE NULLIF(rt0.c1, 'MUTK8U') END) ORDER BY ((((rt0.c1)IS NOT(rt0.c2))) NOT NULL);
SELECT ALL * FROM rt0, vt2, vt0, v0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE '' END)))OR(((((((((rt0.c4)OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE '' END)))OR(((((((((rt0.c4)OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt2, vt0, v0);
SELECT ALL * FROM rt0, vt2, vt0, v0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE '' END)))OR(((((((((rt0.c4)OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE '' END)))OR(((((((((rt0.c4)OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt2, vt0, v0);
SELECT ALL * FROM rt0, vt2, vt0, v0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE '' END)))OR(((((((((rt0.c4)OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))));
SELECT * FROM vt2, rt0, vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt2.c0 END THEN (((rt0.c2, vt2.c0, vt2.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0X60d2eae0, NULL, rt0.c2, vt1.c0, vt1.c0)) AND ((vt1.c0, vt2.c0, rt0.c2, vt2.c0, rt0.c2))) WHEN ((((vt0.c0)AND(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 ELSE (((vt0.c0, rt0.c3, rt0.c1))<>((rt0.c4, rt0.c1, rt0.c2))) END WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt2.c0 END THEN (((rt0.c2, vt2.c0, vt2.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0x60d2eae0, NULL, rt0.c2, vt1.c0, vt1.c0)) AND ((vt1.c0, vt2.c0, rt0.c2, vt2.c0, rt0.c2))) WHEN ((((vt0.c0)AND(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 ELSE (((vt0.c0, rt0.c3, rt0.c1))!=((rt0.c4, rt0.c1, rt0.c2))) END);
SELECT * FROM vt2, rt0, vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt2.c0 END THEN (((rt0.c2, vt2.c0, vt2.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0X60d2eae0, NULL, rt0.c2, vt1.c0, vt1.c0)) AND ((vt1.c0, vt2.c0, rt0.c2, vt2.c0, rt0.c2))) WHEN ((((vt0.c0)AND(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 ELSE (((vt0.c0, rt0.c3, rt0.c1))<>((rt0.c4, rt0.c1, rt0.c2))) END WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt2.c0 END THEN (((rt0.c2, vt2.c0, vt2.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0x60d2eae0, NULL, rt0.c2, vt1.c0, vt1.c0)) AND ((vt1.c0, vt2.c0, rt0.c2, vt2.c0, rt0.c2))) WHEN ((((vt0.c0)AND(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 ELSE (((vt0.c0, rt0.c3, rt0.c1))!=((rt0.c4, rt0.c1, rt0.c2))) END);
SELECT * FROM vt2, rt0, vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt2.c0 END THEN (((rt0.c2, vt2.c0, vt2.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((0X60d2eae0, NULL, rt0.c2, vt1.c0, vt1.c0)) AND ((vt1.c0, vt2.c0, rt0.c2, vt2.c0, rt0.c2))) WHEN ((((vt0.c0)AND(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c1)|(rt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 ELSE (((vt0.c0, rt0.c3, rt0.c1))<>((rt0.c4, rt0.c1, rt0.c2))) END WHERE (rt0.c1 COLLATE RTRIM);
SELECT * FROM vt2 LEFT OUTER JOIN vt1 ON '-1952856486' INNER JOIN v0 ON ABS(rt0.c3) COLLATE RTRIM CROSS JOIN rt0 ON CASE WHEN (NOT (rt0.c4)) THEN ((((rt0.c0)OR(rt0.c3)))OR(vt2.c0)) END WHERE (CASE WHEN rt0.c1 THEN '' END COLLATE NOCASE) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULL WHEN ((rt0.c0)IS NOT(0Xc69f35f)) THEN LOWER(rt0.c0) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c3)) NOT BETWEEN ((0.9547367172579273)) AND ((NULL))) ELSE ((vt2.c0)>(rt0.c3)) END DESC, CAST(CASE vt2.c0  WHEN v0.c0 THEN rt0.c2 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN '' END COLLATE NOCASE) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt1 ON '-1952856486' INNER JOIN v0 ON ABS(rt0.c3) COLLATE RTRIM CROSS JOIN rt0 ON CASE WHEN (NOT (rt0.c4)) THEN ((((rt0.c0)OR(rt0.c3)))OR(vt2.c0)) END ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULL WHEN ((rt0.c0)IS NOT(0Xc69f35f)) THEN LOWER(rt0.c0) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c3)) NOT BETWEEN ((0.9547367172579273)) AND ((NULL))) ELSE ((vt2.c0)>(rt0.c3)) END DESC, CAST(CASE vt2.c0  WHEN v0.c0 THEN rt0.c2 END AS TEXT)  NULLS LAST);
SELECT * FROM vt2 LEFT OUTER JOIN vt1 ON '-1952856486' INNER JOIN v0 ON ABS(rt0.c3) COLLATE RTRIM CROSS JOIN rt0 ON CASE WHEN (NOT (rt0.c4)) THEN ((((rt0.c0)OR(rt0.c3)))OR(vt2.c0)) END WHERE (CASE WHEN rt0.c1 THEN '' END COLLATE NOCASE) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULL WHEN ((rt0.c0)IS NOT(0Xc69f35f)) THEN LOWER(rt0.c0) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c3)) NOT BETWEEN ((0.9547367172579273)) AND ((NULL))) ELSE ((vt2.c0)>(rt0.c3)) END DESC, CAST(CASE vt2.c0  WHEN v0.c0 THEN rt0.c2 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN '' END COLLATE NOCASE) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt1 ON '-1952856486' INNER JOIN v0 ON ABS(rt0.c3) COLLATE RTRIM CROSS JOIN rt0 ON CASE WHEN (NOT (rt0.c4)) THEN ((((rt0.c0)OR(rt0.c3)))OR(vt2.c0)) END ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULL WHEN ((rt0.c0)IS NOT(0Xc69f35f)) THEN LOWER(rt0.c0) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c3)) NOT BETWEEN ((0.9547367172579273)) AND ((NULL))) ELSE ((vt2.c0)>(rt0.c3)) END DESC, CAST(CASE vt2.c0  WHEN v0.c0 THEN rt0.c2 END AS TEXT)  NULLS LAST);
SELECT * FROM vt2 LEFT OUTER JOIN vt1 ON '-1952856486' INNER JOIN v0 ON ABS(rt0.c3) COLLATE RTRIM CROSS JOIN rt0 ON CASE WHEN (NOT (rt0.c4)) THEN ((((rt0.c0)OR(rt0.c3)))OR(vt2.c0)) END WHERE (CASE WHEN rt0.c1 THEN '' END COLLATE NOCASE) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN NULL WHEN ((rt0.c0)IS NOT(0Xc69f35f)) THEN LOWER(rt0.c0) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c3)) NOT BETWEEN ((0.9547367172579273)) AND ((NULL))) ELSE ((vt2.c0)>(rt0.c3)) END DESC, CAST(CASE vt2.c0  WHEN v0.c0 THEN rt0.c2 END AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND ('z&')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND ('z&'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND ('z&')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND ('z&'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt1.c0))) AND ('z&')));
SELECT ALL * FROM vt2 INNER JOIN rt0 ON rt0.c3 WHERE (json_type(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt0.c2)) IS TRUE)  as count FROM vt2 INNER JOIN rt0 ON rt0.c3);
SELECT ALL * FROM vt2 INNER JOIN rt0 ON rt0.c3 WHERE (json_type(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((json_type(rt0.c2)) IS TRUE)  as count FROM vt2 INNER JOIN rt0 ON rt0.c3);
SELECT ALL * FROM vt2 INNER JOIN rt0 ON rt0.c3 WHERE (json_type(rt0.c2));
SELECT COUNT(*) FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON TRIM(DISTINCT rt0.c2, (vt0.c0 IN ())) FULL OUTER JOIN v0 ON '336099404' WHERE (((((('335020631') ISNULL)))=((((((((((rt0.c1)OR(rt0.c2)))OR(vt2.c0)))OR(rt0.c3)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('335020631') ISNULL)))=((((((((((rt0.c1)OR(rt0.c2)))OR(vt2.c0)))OR(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON TRIM(DISTINCT rt0.c2, (vt0.c0 IN ())) FULL OUTER JOIN v0 ON '336099404');
SELECT COUNT(*) FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON TRIM(DISTINCT rt0.c2, (vt0.c0 IN ())) FULL OUTER JOIN v0 ON '336099404' WHERE (((((('335020631') ISNULL)))=((((((((((rt0.c1)OR(rt0.c2)))OR(vt2.c0)))OR(rt0.c3)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('335020631') ISNULL)))=((((((((((rt0.c1)OR(rt0.c2)))OR(vt2.c0)))OR(rt0.c3)))OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON TRIM(DISTINCT rt0.c2, (vt0.c0 IN ())) FULL OUTER JOIN v0 ON '336099404');
SELECT COUNT(*) FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON TRIM(DISTINCT rt0.c2, (vt0.c0 IN ())) FULL OUTER JOIN v0 ON '336099404' WHERE (((((('335020631') ISNULL)))=((((((((((rt0.c1)OR(rt0.c2)))OR(vt2.c0)))OR(rt0.c3)))OR(rt0.c1))))));
SELECT * FROM v0, vt0, vt1, rt0 NOT INDEXED, vt2 WHERE ('ZK') ORDER BY ((((v0.c0)==(rt0.c4))) NOT BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))), CASE WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE vt2.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT (('ZK') IS TRUE)  as count FROM v0, vt0, vt1, rt0, vt2 ORDER BY ((((v0.c0)==(rt0.c4))) NOT BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))), CASE WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE vt2.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC);
SELECT * FROM v0, vt0, vt1, rt0 NOT INDEXED, vt2 WHERE ('ZK') ORDER BY ((((v0.c0)==(rt0.c4))) NOT BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))), CASE WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE vt2.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT (('ZK') IS TRUE)  as count FROM v0, vt0, vt1, rt0, vt2 ORDER BY ((((v0.c0)==(rt0.c4))) NOT BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))), CASE WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE vt2.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC);
SELECT * FROM v0, vt0, vt1, rt0 NOT INDEXED, vt2 WHERE ('ZK') ORDER BY ((((v0.c0)==(rt0.c4))) NOT BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))), CASE WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE vt2.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC;
SELECT ALL COUNT(*) FROM vt1, vt2, rt0, v0 CROSS JOIN vt0 ON (((v0.c0 IN (rt0.c0, rt0.c2)))<(((rt0.c1)LIKE(vt0.c0)))) WHERE (rt0.c3 COLLATE RTRIM) ORDER BY CAST(HEX(DISTINCT vt2.c0) AS BLOB) DESC  NULLS LAST, (~ ((((v0.c0, rt0.c3, vt0.c0)) NOT BETWEEN ((0.19525442789817016, vt2.c0, rt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt2, rt0, v0 CROSS JOIN vt0 ON (((v0.c0 IN (rt0.c0, rt0.c2)))<(((rt0.c1)LIKE(vt0.c0)))) ORDER BY CAST(HEX(DISTINCT vt2.c0) AS BLOB) DESC  NULLS LAST, (~ ((((v0.c0, rt0.c3, vt0.c0)) NOT BETWEEN ((0.19525442789817016, vt2.c0, rt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt2, rt0, v0 CROSS JOIN vt0 ON (((v0.c0 IN (rt0.c0, rt0.c2)))<(((rt0.c1)LIKE(vt0.c0)))) WHERE (rt0.c3 COLLATE RTRIM) ORDER BY CAST(HEX(DISTINCT vt2.c0) AS BLOB) DESC  NULLS LAST, (~ ((((v0.c0, rt0.c3, vt0.c0)) NOT BETWEEN ((0.19525442789817016, vt2.c0, rt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt2, rt0, v0 CROSS JOIN vt0 ON (((v0.c0 IN (rt0.c0, rt0.c2)))<(((rt0.c1)LIKE(vt0.c0)))) ORDER BY CAST(HEX(DISTINCT vt2.c0) AS BLOB) DESC  NULLS LAST, (~ ((((v0.c0, rt0.c3, vt0.c0)) NOT BETWEEN ((0.19525442789817016, vt2.c0, rt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt2, rt0, v0 CROSS JOIN vt0 ON (((v0.c0 IN (rt0.c0, rt0.c2)))<(((rt0.c1)LIKE(vt0.c0)))) WHERE (rt0.c3 COLLATE RTRIM) ORDER BY CAST(HEX(DISTINCT vt2.c0) AS BLOB) DESC  NULLS LAST, (~ ((((v0.c0, rt0.c3, vt0.c0)) NOT BETWEEN ((0.19525442789817016, vt2.c0, rt0.c0)) AND ((rt0.c2, rt0.c4, rt0.c1)))))  NULLS LAST;
SELECT * FROM vt0, rt0 NOT INDEXED, vt1 LEFT OUTER JOIN vt2 ON ((((((rt0.c0)AND(rt0.c4)))AND('-1750222019')))+(UNLIKELY(x''))) FULL OUTER JOIN v0 ON (((vt0.c0, rt0.c1, vt1.c0, v0.c0, rt0.c4)) NOT BETWEEN ((CAST('-1' AS INTEGER), NULLIF(DISTINCT rt0.c4, rt0.c4), (rt0.c0 IN ()), (v0.c0 IN ()), NULL)) AND ((PRINTF(rt0.c3), CAST(vt2.c0 AS INTEGER), rt0.c1, CAST(rt0.c3 AS INTEGER), vt0.c0))) WHERE (ROUND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((vt1.c0)>(vt2.c0))));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((vt1.c0)>(vt2.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1 LEFT OUTER JOIN vt2 ON ((((((rt0.c0)AND(rt0.c4)))AND('-1750222019')))+(UNLIKELY(x''))) FULL OUTER JOIN v0 ON (((vt0.c0, rt0.c1, vt1.c0, v0.c0, rt0.c4)) NOT BETWEEN ((CAST('-1' AS INTEGER), NULLIF(DISTINCT rt0.c4, rt0.c4), (rt0.c0 IN ()), (v0.c0 IN ()), NULL)) AND ((PRINTF(rt0.c3), CAST(vt2.c0 AS INTEGER), rt0.c1, CAST(rt0.c3 AS INTEGER), vt0.c0))));
SELECT * FROM vt0, rt0 NOT INDEXED, vt1 LEFT OUTER JOIN vt2 ON ((((((rt0.c0)AND(rt0.c4)))AND('-1750222019')))+(UNLIKELY(x''))) FULL OUTER JOIN v0 ON (((vt0.c0, rt0.c1, vt1.c0, v0.c0, rt0.c4)) NOT BETWEEN ((CAST('-1' AS INTEGER), NULLIF(DISTINCT rt0.c4, rt0.c4), (rt0.c0 IN ()), (v0.c0 IN ()), NULL)) AND ((PRINTF(rt0.c3), CAST(vt2.c0 AS INTEGER), rt0.c1, CAST(rt0.c3 AS INTEGER), vt0.c0))) WHERE (ROUND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((vt1.c0)>(vt2.c0))));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((vt1.c0)>(vt2.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1 LEFT OUTER JOIN vt2 ON ((((((rt0.c0)AND(rt0.c4)))AND('-1750222019')))+(UNLIKELY(x''))) FULL OUTER JOIN v0 ON (((vt0.c0, rt0.c1, vt1.c0, v0.c0, rt0.c4)) NOT BETWEEN ((CAST('-1' AS INTEGER), NULLIF(DISTINCT rt0.c4, rt0.c4), (rt0.c0 IN ()), (v0.c0 IN ()), NULL)) AND ((PRINTF(rt0.c3), CAST(vt2.c0 AS INTEGER), rt0.c1, CAST(rt0.c3 AS INTEGER), vt0.c0))));
SELECT * FROM vt0, rt0 NOT INDEXED, vt1 LEFT OUTER JOIN vt2 ON ((((((rt0.c0)AND(rt0.c4)))AND('-1750222019')))+(UNLIKELY(x''))) FULL OUTER JOIN v0 ON (((vt0.c0, rt0.c1, vt1.c0, v0.c0, rt0.c4)) NOT BETWEEN ((CAST('-1' AS INTEGER), NULLIF(DISTINCT rt0.c4, rt0.c4), (rt0.c0 IN ()), (v0.c0 IN ()), NULL)) AND ((PRINTF(rt0.c3), CAST(vt2.c0 AS INTEGER), rt0.c1, CAST(rt0.c3 AS INTEGER), vt0.c0))) WHERE (ROUND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((vt1.c0)>(vt2.c0))));
SELECT * FROM v0, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((vt2.c0) NOT BETWEEN (CHAR(rt0.c1)) AND (((vt2.c0)%(v0.c0)))) WHERE ((vt2.c0 COLLATE NOCASE IN ((NOT (rt0.c3)), ((rt0.c0)%(vt0.c0))))) ORDER BY json_array_length(((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), (((rt0.c0))<=((rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt2.c0 COLLATE NOCASE IN ((NOT (rt0.c3)), ((rt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((vt2.c0) NOT BETWEEN (CHAR(rt0.c1)) AND (((vt2.c0)%(v0.c0)))) ORDER BY json_array_length(((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), (((rt0.c0))<=((rt0.c2)))) ASC);
SELECT * FROM v0, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((vt2.c0) NOT BETWEEN (CHAR(rt0.c1)) AND (((vt2.c0)%(v0.c0)))) WHERE ((vt2.c0 COLLATE NOCASE IN ((NOT (rt0.c3)), ((rt0.c0)%(vt0.c0))))) ORDER BY json_array_length(((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), (((rt0.c0))<=((rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt2.c0 COLLATE NOCASE IN ((NOT (rt0.c3)), ((rt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((vt2.c0) NOT BETWEEN (CHAR(rt0.c1)) AND (((vt2.c0)%(v0.c0)))) ORDER BY json_array_length(((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), (((rt0.c0))<=((rt0.c2)))) ASC);
SELECT * FROM v0, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((vt2.c0) NOT BETWEEN (CHAR(rt0.c1)) AND (((vt2.c0)%(v0.c0)))) WHERE ((vt2.c0 COLLATE NOCASE IN ((NOT (rt0.c3)), ((rt0.c0)%(vt0.c0))))) ORDER BY json_array_length(((((((((rt0.c3)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), (((rt0.c0))<=((rt0.c2)))) ASC;
SELECT COUNT(*) FROM v0, rt0, vt2, vt1 WHERE ((((rt0.c4 IN ())) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM v0, rt0, vt2, vt1);
SELECT COUNT(*) FROM v0, rt0, vt2, vt1 WHERE ((((rt0.c4 IN ())) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM v0, rt0, vt2, vt1);
SELECT COUNT(*) FROM v0, rt0, vt2, vt1 WHERE ((((rt0.c4 IN ())) BETWEEN ((+ (v0.c0))) AND ((((v0.c0))>((vt1.c0))))));
SELECT COUNT(*) FROM vt0, v0, rt0, vt1 WHERE (ABS(DISTINCT rt0.c2)) ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE x'' END, 0.9269381531338208) DESC  NULLS FIRST, CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE ((v0.c0)*(vt0.c0)) END DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c2)) IS TRUE)  as count FROM vt0, v0, rt0, vt1 ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE x'' END, 0.9269381531338208) DESC  NULLS FIRST, CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE ((v0.c0)*(vt0.c0)) END DESC, v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0, vt1 WHERE (ABS(DISTINCT rt0.c2)) ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE x'' END, 0.9269381531338208) DESC  NULLS FIRST, CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE ((v0.c0)*(vt0.c0)) END DESC, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c2)) IS TRUE)  as count FROM vt0, v0, rt0, vt1 ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE x'' END, 0.9269381531338208) DESC  NULLS FIRST, CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE ((v0.c0)*(vt0.c0)) END DESC, v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0, vt1 WHERE (ABS(DISTINCT rt0.c2)) ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE x'' END, 0.9269381531338208) DESC  NULLS FIRST, CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE ((v0.c0)*(vt0.c0)) END DESC, v0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 1.412400926E9 ELSE -1120735329 END THEN CAST(v0.c0 AS NUMERIC) END) ORDER BY (UPPER(DISTINCT v0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 1.412400926E9 ELSE -1120735329 END THEN CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (UPPER(DISTINCT v0.c0) IN ()) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 1.412400926E9 ELSE -1120735329 END THEN CAST(v0.c0 AS NUMERIC) END) ORDER BY (UPPER(DISTINCT v0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 1.412400926E9 ELSE -1120735329 END THEN CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (UPPER(DISTINCT v0.c0) IN ()) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN 1.412400926E9 ELSE -1120735329 END THEN CAST(v0.c0 AS NUMERIC) END) ORDER BY (UPPER(DISTINCT v0.c0) IN ()) ASC;
SELECT COUNT(*) FROM vt1, v0, vt2 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, vt2);
SELECT COUNT(*) FROM vt1, v0, vt2 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0, vt2);
SELECT COUNT(*) FROM vt1, v0, vt2 WHERE (x'' COLLATE NOCASE);
SELECT ALL * FROM v0, rt0, vt0, vt2, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0, vt2, vt1);
SELECT ALL * FROM v0, rt0, vt0, vt2, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0, vt2, vt1);
SELECT ALL * FROM v0, rt0, vt0, vt2, vt1 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT * FROM v0 WHERE ((('')OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('')OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((('')OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((('')OR(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((('')OR(v0.c0)));
SELECT ALL COUNT(*) FROM rt0, vt2 NATURAL JOIN vt1 WHERE (CASE WHEN (- (rt0.c1)) THEN (~ (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN (~ (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt2 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0, vt2 NATURAL JOIN vt1 WHERE (CASE WHEN (- (rt0.c1)) THEN (~ (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN (~ (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt2 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0, vt2 NATURAL JOIN vt1 WHERE (CASE WHEN (- (rt0.c1)) THEN (~ (rt0.c4)) END);
SELECT ALL COUNT(*) FROM vt1, v0, rt0, vt2, vt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1, v0, rt0, vt2, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0, vt2, vt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1, v0, rt0, vt2, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, rt0, vt2, vt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 INNER JOIN v0 ON ((((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c0)))OR(CASE rt0.c0  WHEN '' THEN rt0.c1 END)))AND(((rt0.c3) ISNULL))))OR((- (rt0.c4)))))OR(CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN rt0 ON ((ROUND(vt2.c0, rt0.c2)) BETWEEN (HEX(DISTINCT v0.c0)) AND (CAST(NULL AS BLOB))) WHERE ((((vt1.c0, x'', v0.c0)) BETWEEN ((((((vt2.c0)OR(vt1.c0)))OR(v0.c0)), ((NULL) NOT BETWEEN ('-0.0') AND (rt0.c0)), ((vt2.c0)||(vt2.c0)))) AND (('nD닑ARbHyU', CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c1)OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', v0.c0)) BETWEEN ((((((vt2.c0)OR(vt1.c0)))OR(v0.c0)), ((NULL) NOT BETWEEN ('-0.0') AND (rt0.c0)), ((vt2.c0)||(vt2.c0)))) AND (('nD닑ARbHyU', CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c1)OR(rt0.c0)))))) IS TRUE)  as count FROM vt1, vt2, vt0 INNER JOIN v0 ON ((((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c0)))OR(CASE rt0.c0  WHEN '' THEN rt0.c1 END)))AND(((rt0.c3) ISNULL))))OR((- (rt0.c4)))))OR(CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN rt0 ON ((ROUND(vt2.c0, rt0.c2)) BETWEEN (HEX(DISTINCT v0.c0)) AND (CAST(NULL AS BLOB))));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 INNER JOIN v0 ON ((((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c0)))OR(CASE rt0.c0  WHEN '' THEN rt0.c1 END)))AND(((rt0.c3) ISNULL))))OR((- (rt0.c4)))))OR(CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN rt0 ON ((ROUND(vt2.c0, rt0.c2)) BETWEEN (HEX(DISTINCT v0.c0)) AND (CAST(NULL AS BLOB))) WHERE ((((vt1.c0, x'', v0.c0)) BETWEEN ((((((vt2.c0)OR(vt1.c0)))OR(v0.c0)), ((NULL) NOT BETWEEN ('-0.0') AND (rt0.c0)), ((vt2.c0)||(vt2.c0)))) AND (('nD닑ARbHyU', CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c1)OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', v0.c0)) BETWEEN ((((((vt2.c0)OR(vt1.c0)))OR(v0.c0)), ((NULL) NOT BETWEEN ('-0.0') AND (rt0.c0)), ((vt2.c0)||(vt2.c0)))) AND (('nD닑ARbHyU', CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c1)OR(rt0.c0)))))) IS TRUE)  as count FROM vt1, vt2, vt0 INNER JOIN v0 ON ((((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c0)))OR(CASE rt0.c0  WHEN '' THEN rt0.c1 END)))AND(((rt0.c3) ISNULL))))OR((- (rt0.c4)))))OR(CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN rt0 ON ((ROUND(vt2.c0, rt0.c2)) BETWEEN (HEX(DISTINCT v0.c0)) AND (CAST(NULL AS BLOB))));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 INNER JOIN v0 ON ((((((((((((rt0.c1)OR(rt0.c3)))OR(vt0.c0)))OR(CASE rt0.c0  WHEN '' THEN rt0.c1 END)))AND(((rt0.c3) ISNULL))))OR((- (rt0.c4)))))OR(CAST(v0.c0 AS BLOB))) LEFT OUTER JOIN rt0 ON ((ROUND(vt2.c0, rt0.c2)) BETWEEN (HEX(DISTINCT v0.c0)) AND (CAST(NULL AS BLOB))) WHERE ((((vt1.c0, x'', v0.c0)) BETWEEN ((((((vt2.c0)OR(vt1.c0)))OR(v0.c0)), ((NULL) NOT BETWEEN ('-0.0') AND (rt0.c0)), ((vt2.c0)||(vt2.c0)))) AND (('nD닑ARbHyU', CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, ((rt0.c1)OR(rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt2, rt0 WHERE (CASE rt0.c2  WHEN 1520726967 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM) ORDER BY ((NULL)GLOB(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN 1520726967 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY ((NULL)GLOB(rt0.c2)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1, vt2, rt0 WHERE (CASE rt0.c2  WHEN 1520726967 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM) ORDER BY ((NULL)GLOB(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN 1520726967 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY ((NULL)GLOB(rt0.c2)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1, vt2, rt0 WHERE (CASE rt0.c2  WHEN 1520726967 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM) ORDER BY ((NULL)GLOB(rt0.c2)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(((vt2.c0) NOTNULL) AS REAL) WHERE (((vt2.c0) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0)GLOB(vt2.c0))))) ORDER BY ((((vt2.c0) IS FALSE)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0)GLOB(vt2.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(((vt2.c0) NOTNULL) AS REAL) ORDER BY ((((vt2.c0) IS FALSE)) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(((vt2.c0) NOTNULL) AS REAL) WHERE (((vt2.c0) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0)GLOB(vt2.c0))))) ORDER BY ((((vt2.c0) IS FALSE)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0)GLOB(vt2.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(((vt2.c0) NOTNULL) AS REAL) ORDER BY ((((vt2.c0) IS FALSE)) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt2 ON CAST(((vt2.c0) NOTNULL) AS REAL) WHERE (((vt2.c0) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((vt1.c0)GLOB(vt2.c0))))) ORDER BY ((((vt2.c0) IS FALSE)) ISNULL) ASC;
SELECT COUNT(*) FROM vt0, vt1, v0, rt0 WHERE (((((-1.753763119E9)<=(rt0.c2)))*(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(1e500)))OR(rt0.c4))))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN CAST(rt0.c4 AS BLOB) ELSE (((vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((v0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ((((((-1.753763119E9)<=(rt0.c2)))*(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(1e500)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN CAST(rt0.c4 AS BLOB) ELSE (((vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((v0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c2))) END);
SELECT COUNT(*) FROM vt0, vt1, v0, rt0 WHERE (((((-1.753763119E9)<=(rt0.c2)))*(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(1e500)))OR(rt0.c4))))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN CAST(rt0.c4 AS BLOB) ELSE (((vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((v0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ((((((-1.753763119E9)<=(rt0.c2)))*(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(1e500)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN CAST(rt0.c4 AS BLOB) ELSE (((vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((v0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c2))) END);
SELECT COUNT(*) FROM vt0, vt1, v0, rt0 WHERE (((((-1.753763119E9)<=(rt0.c2)))*(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(1e500)))OR(rt0.c4))))) ORDER BY CASE rt0.c1  WHEN rt0.c2 THEN CAST(rt0.c4 AS BLOB) ELSE (((vt0.c0, rt0.c2, rt0.c4, rt0.c0, rt0.c4)) NOT BETWEEN ((v0.c0, vt1.c0, rt0.c2, v0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c2))) END;
SELECT * FROM v0, rt0, vt0 WHERE (UNICODE((((rt0.c1, vt0.c0, v0.c0))<((rt0.c0, v0.c0, rt0.c2))))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE((((rt0.c1, vt0.c0, v0.c0))<((rt0.c0, v0.c0, rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(rt0.c4 AS NUMERIC)) IS FALSE) DESC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (UNICODE((((rt0.c1, vt0.c0, v0.c0))<((rt0.c0, v0.c0, rt0.c2))))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE((((rt0.c1, vt0.c0, v0.c0))<((rt0.c0, v0.c0, rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(rt0.c4 AS NUMERIC)) IS FALSE) DESC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (UNICODE((((rt0.c1, vt0.c0, v0.c0))<((rt0.c0, v0.c0, rt0.c2))))) ORDER BY ((CAST(rt0.c4 AS NUMERIC)) IS FALSE) DESC  NULLS LAST;
SELECT * FROM vt2, rt0, v0, vt1, vt0 WHERE (((vt2.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, v0, vt1, vt0);
SELECT * FROM vt2, rt0, v0, vt1, vt0 WHERE (((vt2.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, v0, vt1, vt0);
SELECT * FROM vt2, rt0, v0, vt1, vt0 WHERE (((vt2.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt1, vt2, rt0 WHERE ((((vt1.c0)) BETWEEN (((~ (vt2.c0)))) AND (((rt0.c2 IN ()))))) ORDER BY CASE WHEN (((vt2.c0, vt2.c0, rt0.c4)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c3, 0xffffffffbbf270d5, v0.c0))) THEN (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, v0.c0, rt0.c3)) AND ((vt2.c0, rt0.c2, rt0.c0))) ELSE ((vt1.c0) NOTNULL) END, CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt2.c0)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM v0, vt1, vt2, rt0 ORDER BY CASE WHEN (((vt2.c0, vt2.c0, rt0.c4)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c3, 0xffffffffbbf270d5, v0.c0))) THEN (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, v0.c0, rt0.c3)) AND ((vt2.c0, rt0.c2, rt0.c0))) ELSE ((vt1.c0) NOTNULL) END, CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) ASC);
SELECT COUNT(*) FROM v0, vt1, vt2, rt0 WHERE ((((vt1.c0)) BETWEEN (((~ (vt2.c0)))) AND (((rt0.c2 IN ()))))) ORDER BY CASE WHEN (((vt2.c0, vt2.c0, rt0.c4)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c3, 0xffffffffbbf270d5, v0.c0))) THEN (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, v0.c0, rt0.c3)) AND ((vt2.c0, rt0.c2, rt0.c0))) ELSE ((vt1.c0) NOTNULL) END, CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt2.c0)))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM v0, vt1, vt2, rt0 ORDER BY CASE WHEN (((vt2.c0, vt2.c0, rt0.c4)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c3, 0xffffffffbbf270d5, v0.c0))) THEN (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, v0.c0, rt0.c3)) AND ((vt2.c0, rt0.c2, rt0.c0))) ELSE ((vt1.c0) NOTNULL) END, CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) ASC);
SELECT COUNT(*) FROM v0, vt1, vt2, rt0 WHERE ((((vt1.c0)) BETWEEN (((~ (vt2.c0)))) AND (((rt0.c2 IN ()))))) ORDER BY CASE WHEN (((vt2.c0, vt2.c0, rt0.c4)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c3, 0xffffffffbbf270d5, v0.c0))) THEN (((vt1.c0, rt0.c0, rt0.c0)) BETWEEN ((NULL, v0.c0, rt0.c3)) AND ((vt2.c0, rt0.c2, rt0.c0))) ELSE ((vt1.c0) NOTNULL) END, CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED CROSS JOIN vt2 ON CASE NULL  WHEN 0.9018263223081731 THEN vt0.c0 COLLATE BINARY WHEN (((vt2.c0, vt1.c0, NULL, vt0.c0, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt2.c0))) THEN ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) NOT NULL) ELSE (((v0.c0, vt1.c0, vt2.c0))==((v0.c0, vt1.c0, vt2.c0))) END FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS BLOB) FULL OUTER JOIN v0 ON ((CASE WHEN vt2.c0 THEN 0xffffffffa25ecaad ELSE vt0.c0 END)/(vt0.c0 COLLATE NOCASE)) WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON CASE NULL  WHEN 0.9018263223081731 THEN vt0.c0 COLLATE BINARY WHEN (((vt2.c0, vt1.c0, NULL, vt0.c0, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt2.c0))) THEN ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) NOT NULL) ELSE (((v0.c0, vt1.c0, vt2.c0))==((v0.c0, vt1.c0, vt2.c0))) END FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS BLOB) FULL OUTER JOIN v0 ON ((CASE WHEN vt2.c0 THEN 0xffffffffa25ecaad ELSE vt0.c0 END)/(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED CROSS JOIN vt2 ON CASE NULL  WHEN 0.9018263223081731 THEN vt0.c0 COLLATE BINARY WHEN (((vt2.c0, vt1.c0, NULL, vt0.c0, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt2.c0))) THEN ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) NOT NULL) ELSE (((v0.c0, vt1.c0, vt2.c0))==((v0.c0, vt1.c0, vt2.c0))) END FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS BLOB) FULL OUTER JOIN v0 ON ((CASE WHEN vt2.c0 THEN 0xffffffffa25ecaad ELSE vt0.c0 END)/(vt0.c0 COLLATE NOCASE)) WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON CASE NULL  WHEN 0.9018263223081731 THEN vt0.c0 COLLATE BINARY WHEN (((vt2.c0, vt1.c0, NULL, vt0.c0, vt0.c0))>=((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt2.c0))) THEN ((((vt1.c0)AND(v0.c0)))AND(vt0.c0)) WHEN CAST(v0.c0 AS REAL) THEN ((v0.c0) NOT NULL) ELSE (((v0.c0, vt1.c0, vt2.c0))==((v0.c0, vt1.c0, vt2.c0))) END FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS BLOB) FULL OUTER JOIN v0 ON ((CASE WHEN vt2.c0 THEN 0xffffffffa25ecaad ELSE vt0.c0 END)/(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL))IS((((rt0.c3, rt0.c3, rt0.c3))<=((rt0.c4, rt0.c2, rt0.c4)))))) ORDER BY ((CASE 0.13674402401107255  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)<=(rt0.c0)) DESC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c4))>=((rt0.c3))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))IS((((rt0.c3, rt0.c3, rt0.c3))<=((rt0.c4, rt0.c2, rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE 0.13674402401107255  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)<=(rt0.c0)) DESC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c4))>=((rt0.c3))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL))IS((((rt0.c3, rt0.c3, rt0.c3))<=((rt0.c4, rt0.c2, rt0.c4)))))) ORDER BY ((CASE 0.13674402401107255  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)<=(rt0.c0)) DESC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c4))>=((rt0.c3))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))IS((((rt0.c3, rt0.c3, rt0.c3))<=((rt0.c4, rt0.c2, rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE 0.13674402401107255  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)<=(rt0.c0)) DESC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c4))>=((rt0.c3))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL))IS((((rt0.c3, rt0.c3, rt0.c3))<=((rt0.c4, rt0.c2, rt0.c4)))))) ORDER BY ((CASE 0.13674402401107255  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)<=(rt0.c0)) DESC  NULLS FIRST, CASE WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c4))>=((rt0.c3))) END  NULLS LAST;
SELECT ALL * FROM v0, rt0, vt1, vt0, vt2 WHERE (((CASE WHEN v0.c0 THEN rt0.c4 END)|(LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN rt0.c4 END)|(LIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0, vt2 NOT INDEXED);
SELECT ALL * FROM v0, rt0, vt1, vt0, vt2 WHERE (((CASE WHEN v0.c0 THEN rt0.c4 END)|(LIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN rt0.c4 END)|(LIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0, vt2 NOT INDEXED);
SELECT ALL * FROM v0, rt0, vt1, vt0, vt2 WHERE (((CASE WHEN v0.c0 THEN rt0.c4 END)|(LIKELY(vt0.c0))));
SELECT * FROM vt1, vt0, vt2 NATURAL JOIN v0 WHERE ((~ (((vt0.c0)=(v0.c0))))) ORDER BY ((((v0.c0)GLOB(vt1.c0)))-((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)=(v0.c0))))) IS TRUE)  as count FROM vt1, vt0, vt2 NATURAL JOIN v0 ORDER BY ((((v0.c0)GLOB(vt1.c0)))-((- (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, vt2 NATURAL JOIN v0 WHERE ((~ (((vt0.c0)=(v0.c0))))) ORDER BY ((((v0.c0)GLOB(vt1.c0)))-((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)=(v0.c0))))) IS TRUE)  as count FROM vt1, vt0, vt2 NATURAL JOIN v0 ORDER BY ((((v0.c0)GLOB(vt1.c0)))-((- (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, vt2 NATURAL JOIN v0 WHERE ((~ (((vt0.c0)=(v0.c0))))) ORDER BY ((((v0.c0)GLOB(vt1.c0)))-((- (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt2, vt0 WHERE (((((COALESCE(rt0.c1, rt0.c4))AND((NOT (vt2.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(rt0.c1, rt0.c4))AND((NOT (vt2.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt2, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt2, vt0 WHERE (((((COALESCE(rt0.c1, rt0.c4))AND((NOT (vt2.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(rt0.c1, rt0.c4))AND((NOT (vt2.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt2, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt2, vt0 WHERE (((((COALESCE(rt0.c1, rt0.c4))AND((NOT (vt2.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((x'') IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((x'') IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((x'') IS FALSE)) IS TRUE));
SELECT ALL * FROM vt2, v0, vt1, rt0 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt2.c0)))>=((vt2.c0 IN (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (vt1.c0) AND (vt2.c0)))>=((vt2.c0 IN (vt2.c0))))) IS TRUE)  as count FROM vt2, v0, vt1, rt0);
SELECT ALL * FROM vt2, v0, vt1, rt0 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt2.c0)))>=((vt2.c0 IN (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (vt1.c0) AND (vt2.c0)))>=((vt2.c0 IN (vt2.c0))))) IS TRUE)  as count FROM vt2, v0, vt1, rt0);
SELECT ALL * FROM vt2, v0, vt1, rt0 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt2.c0)))>=((vt2.c0 IN (vt2.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE (((((((rt0.c4)AND('cg')))AND(rt0.c0)))%(((vt2.c0)LIKE(rt0.c3))))) ORDER BY ((+ (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)AND('cg')))AND(rt0.c0)))%(((vt2.c0)LIKE(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0, vt2, vt0 ORDER BY ((+ (rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE (((((((rt0.c4)AND('cg')))AND(rt0.c0)))%(((vt2.c0)LIKE(rt0.c3))))) ORDER BY ((+ (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)AND('cg')))AND(rt0.c0)))%(((vt2.c0)LIKE(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0, vt2, vt0 ORDER BY ((+ (rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE (((((((rt0.c4)AND('cg')))AND(rt0.c0)))%(((vt2.c0)LIKE(rt0.c3))))) ORDER BY ((+ (rt0.c1)) IN ());
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'39e8'))), '', DATETIME(v0.c0, v0.c0, v0.c0)))<((((v0.c0)&(v0.c0)), ((v0.c0)!=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY CASE WHEN UPPER(v0.c0) THEN v0.c0 COLLATE NOCASE END DESC  NULLS LAST, '0.14613459763822167' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'39e8'))), '', DATETIME(v0.c0, v0.c0, v0.c0)))<((((v0.c0)&(v0.c0)), ((v0.c0)<>(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN UPPER(v0.c0) THEN v0.c0 COLLATE NOCASE END DESC  NULLS LAST, '0.14613459763822167' DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'39e8'))), '', DATETIME(v0.c0, v0.c0, v0.c0)))<((((v0.c0)&(v0.c0)), ((v0.c0)!=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY CASE WHEN UPPER(v0.c0) THEN v0.c0 COLLATE NOCASE END DESC  NULLS LAST, '0.14613459763822167' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'39e8'))), '', DATETIME(v0.c0, v0.c0, v0.c0)))<((((v0.c0)&(v0.c0)), ((v0.c0)<>(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN UPPER(v0.c0) THEN v0.c0 COLLATE NOCASE END DESC  NULLS LAST, '0.14613459763822167' DESC);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'39e8'))), '', DATETIME(v0.c0, v0.c0, v0.c0)))<((((v0.c0)&(v0.c0)), ((v0.c0)!=(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY CASE WHEN UPPER(v0.c0) THEN v0.c0 COLLATE NOCASE END DESC  NULLS LAST, '0.14613459763822167' DESC;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON x'1522' WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON x'1522');
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON x'1522' WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON x'1522');
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON x'1522' WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c0)) IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)|(vt0.c0)) IN (((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM vt0, rt0, v0, vt1 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) IS FALSE)) ORDER BY ((((vt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((vt0.c0)<<(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0, vt1 ORDER BY ((((vt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((vt0.c0)<<(rt0.c4))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0, vt1 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) IS FALSE)) ORDER BY ((((vt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((vt0.c0)<<(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0, vt1 ORDER BY ((((vt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((vt0.c0)<<(rt0.c4))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0, vt1 WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) IS FALSE)) ORDER BY ((((vt0.c0)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((vt0.c0)<<(rt0.c4))))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)||(CAST(rt0.c2 AS TEXT)))) ORDER BY LOWER((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE))<=(rt0.c3)) DESC  NULLS FIRST, (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)||(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0 ORDER BY LOWER((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE))<=(rt0.c3)) DESC  NULLS FIRST, (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)||(CAST(rt0.c2 AS TEXT)))) ORDER BY LOWER((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE))<=(rt0.c3)) DESC  NULLS FIRST, (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)||(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, rt0 ORDER BY LOWER((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE))<=(rt0.c3)) DESC  NULLS FIRST, (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c0)||(CAST(rt0.c2 AS TEXT)))) ORDER BY LOWER((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) ASC  NULLS FIRST, ((((v0.c0) IS TRUE))<=(rt0.c3)) DESC  NULLS FIRST, (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 CROSS JOIN vt2 ON ((vt1.c0)==(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (LIKELY(DISTINCT rt0.c0) IN ()) WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS((- (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN vt2 ON ((vt1.c0)=(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (LIKELY(DISTINCT rt0.c0) IN ()) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS((- (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 CROSS JOIN vt2 ON ((vt1.c0)==(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (LIKELY(DISTINCT rt0.c0) IN ()) WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS((- (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN vt2 ON ((vt1.c0)=(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (LIKELY(DISTINCT rt0.c0) IN ()) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS((- (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 CROSS JOIN vt2 ON ((vt1.c0)==(rt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON (LIKELY(DISTINCT rt0.c0) IN ()) WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END)IS((- (vt1.c0))))  NULLS FIRST;
SELECT * FROM vt2, vt0, vt1, rt0 NOT INDEXED, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c4))) ORDER BY ((rt0.c2) NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c4))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0, v0 ORDER BY ((rt0.c2) NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt2, vt0, vt1, rt0 NOT INDEXED, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c4))) ORDER BY ((rt0.c2) NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c4))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0, v0 ORDER BY ((rt0.c2) NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt2, vt0, vt1, rt0 NOT INDEXED, v0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c4))) ORDER BY ((rt0.c2) NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0 RIGHT OUTER JOIN vt2 ON ((((CAST(rt0.c3 AS BLOB))OR((~ (x'')))))AND(x'')) WHERE ((- (rt0.c3)) COLLATE BINARY) ORDER BY '871800209' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, v0 RIGHT OUTER JOIN vt2 ON ((((CAST(rt0.c3 AS BLOB))OR((~ (x'')))))AND(x'')) ORDER BY '871800209' DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 RIGHT OUTER JOIN vt2 ON ((((CAST(rt0.c3 AS BLOB))OR((~ (x'')))))AND(x'')) WHERE ((- (rt0.c3)) COLLATE BINARY) ORDER BY '871800209' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, v0 RIGHT OUTER JOIN vt2 ON ((((CAST(rt0.c3 AS BLOB))OR((~ (x'')))))AND(x'')) ORDER BY '871800209' DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 RIGHT OUTER JOIN vt2 ON ((((CAST(rt0.c3 AS BLOB))OR((~ (x'')))))AND(x'')) WHERE ((- (rt0.c3)) COLLATE BINARY) ORDER BY '871800209' DESC;
SELECT COUNT(*) FROM vt2 WHERE ((- ((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))))) ORDER BY ((CAST(vt2.c0 AS INTEGER)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))))) IS TRUE)  as count FROM vt2 ORDER BY ((CAST(vt2.c0 AS INTEGER)) NOT NULL));
SELECT COUNT(*) FROM vt2 WHERE ((- ((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))))) ORDER BY ((CAST(vt2.c0 AS INTEGER)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))))) IS TRUE)  as count FROM vt2 ORDER BY ((CAST(vt2.c0 AS INTEGER)) NOT NULL));
SELECT COUNT(*) FROM vt2 WHERE ((- ((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)))))) ORDER BY ((CAST(vt2.c0 AS INTEGER)) NOT NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL));
SELECT COUNT(*) FROM vt2, rt0 WHERE ('-44526138');
SELECT SUM(count) FROM (SELECT ALL (('-44526138') IS TRUE)  as count FROM vt2, rt0);
SELECT COUNT(*) FROM vt2, rt0 WHERE ('-44526138');
SELECT SUM(count) FROM (SELECT ALL (('-44526138') IS TRUE)  as count FROM vt2, rt0);
SELECT COUNT(*) FROM vt2, rt0 WHERE ('-44526138');
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN CASE WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END THEN (- (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN CASE WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END THEN (- (rt0.c3)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN CASE WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END THEN (- (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN CASE WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END THEN (- (rt0.c3)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN CASE WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END THEN (- (rt0.c3)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY ((vt0.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY ((vt0.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY ((vt0.c0 IN ()) IN ()) ASC;
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE ((NOT (((rt0.c0) NOT NULL)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt2, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE ((NOT (((rt0.c0) NOT NULL)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt2, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE ((NOT (((rt0.c0) NOT NULL)))) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (-983424742) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-983424742) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (-983424742) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-983424742) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (-983424742) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt2, vt1 WHERE (NULL) ORDER BY (~ (SUBSTR(vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt2, vt1 ORDER BY (~ (SUBSTR(vt1.c0, vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt2, vt1 WHERE (NULL) ORDER BY (~ (SUBSTR(vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt2, vt1 ORDER BY (~ (SUBSTR(vt1.c0, vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt2, vt1 WHERE (NULL) ORDER BY (~ (SUBSTR(vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT * FROM rt0, v0, vt1, vt0 WHERE (((rt0.c0)<=(rt0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c0 AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt1, vt0 ORDER BY CAST(rt0.c0 AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, v0, vt1, vt0 WHERE (((rt0.c0)<=(rt0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c0 AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt1, vt0 ORDER BY CAST(rt0.c0 AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, v0, vt1, vt0 WHERE (((rt0.c0)<=(rt0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c0 AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt1 CROSS JOIN vt2 ON TYPEOF(vt1.c0 COLLATE BINARY) INNER JOIN v0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY WHERE ((((''))<(((((0.8296581360600351)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((''))<(((((0.8296581360600351)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN vt2 ON TYPEOF(vt1.c0 COLLATE BINARY) INNER JOIN v0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, vt1 CROSS JOIN vt2 ON TYPEOF(vt1.c0 COLLATE BINARY) INNER JOIN v0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY WHERE ((((''))<(((((0.8296581360600351)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((''))<(((((0.8296581360600351)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))))) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN vt2 ON TYPEOF(vt1.c0 COLLATE BINARY) INNER JOIN v0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, vt1 CROSS JOIN vt2 ON TYPEOF(vt1.c0 COLLATE BINARY) INNER JOIN v0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY WHERE ((((''))<(((((0.8296581360600351)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))))));
SELECT ALL * FROM vt2, vt0, vt1 WHERE (((NULL)<(CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.40728027948335976 THEN vt1.c0 WHEN 0.8634029631064473 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((NULL)<(CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.40728027948335976 THEN vt1.c0 WHEN 0.8634029631064473 THEN NULL END))) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT ALL * FROM vt2, vt0, vt1 WHERE (((NULL)<(CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.40728027948335976 THEN vt1.c0 WHEN 0.8634029631064473 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((NULL)<(CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.40728027948335976 THEN vt1.c0 WHEN 0.8634029631064473 THEN NULL END))) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT ALL * FROM vt2, vt0, vt1 WHERE (((NULL)<(CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.40728027948335976 THEN vt1.c0 WHEN 0.8634029631064473 THEN NULL END)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt2 ON UNICODE(CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 END) WHERE ((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) AND ((CASE vt2.c0  WHEN '871800209' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) AND ((CASE vt2.c0  WHEN '871800209' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt2 ON UNICODE(CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 END));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt2 ON UNICODE(CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 END) WHERE ((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) AND ((CASE vt2.c0  WHEN '871800209' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) AND ((CASE vt2.c0  WHEN '871800209' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt2 ON UNICODE(CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 END));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt2 ON UNICODE(CASE vt2.c0  WHEN vt2.c0 THEN v0.c0 END) WHERE ((((v0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) AND ((CASE vt2.c0  WHEN '871800209' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (- (vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0)LIKE(vt1.c0)), RTRIM(vt1.c0))))) ORDER BY -1820936535  NULLS LAST, CASE WHEN vt0.c0 COLLATE RTRIM THEN ((NULL)||(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (- (vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0)LIKE(vt1.c0)), RTRIM(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY -1820936535  NULLS LAST, CASE WHEN vt0.c0 COLLATE RTRIM THEN ((NULL)||(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (- (vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0)LIKE(vt1.c0)), RTRIM(vt1.c0))))) ORDER BY -1820936535  NULLS LAST, CASE WHEN vt0.c0 COLLATE RTRIM THEN ((NULL)||(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), (- (vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0)LIKE(vt1.c0)), RTRIM(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY -1820936535  NULLS LAST, CASE WHEN vt0.c0 COLLATE RTRIM THEN ((NULL)||(vt1.c0)) END ASC  NULLS LAST);
SELECT * FROM vt2, v0, rt0, vt0 WHERE ((((rt0.c4)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((v0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c4 END)AND((~ (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((v0.c0)))) IS TRUE)  as count FROM vt2, v0, rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c4 END)AND((~ (rt0.c4))))  NULLS LAST);
SELECT * FROM vt2, v0, rt0, vt0 WHERE ((((rt0.c4)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((v0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c4 END)AND((~ (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((v0.c0)))) IS TRUE)  as count FROM vt2, v0, rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c4 END)AND((~ (rt0.c4))))  NULLS LAST);
SELECT * FROM vt2, v0, rt0, vt0 WHERE ((((rt0.c4)) NOT BETWEEN (((vt2.c0 IN ()))) AND ((v0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c4 END)AND((~ (rt0.c4))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1, v0, vt2 WHERE (((LOWER(DISTINCT vt1.c0))>>(NULL COLLATE NOCASE))) ORDER BY ((1.624435424E9)>>(((vt2.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0))>>(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, v0, vt2 ORDER BY ((1.624435424E9)>>(((vt2.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1, v0, vt2 WHERE (((LOWER(DISTINCT vt1.c0))>>(NULL COLLATE NOCASE))) ORDER BY ((1.624435424E9)>>(((vt2.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0))>>(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, v0, vt2 ORDER BY ((1.624435424E9)>>(((vt2.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1, v0, vt2 WHERE (((LOWER(DISTINCT vt1.c0))>>(NULL COLLATE NOCASE))) ORDER BY ((1.624435424E9)>>(((vt2.c0) ISNULL)));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (vt1.c0)) WHEN ((v0.c0)IS(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (vt1.c0)) WHEN ((v0.c0)IS(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (vt1.c0)) WHEN ((v0.c0)IS(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (vt1.c0)) WHEN ((v0.c0)IS(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (vt1.c0)) WHEN ((v0.c0)IS(vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt2, v0 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(0X326a91e2)))AND(TRIM(x''))) WHERE (TRIM(250573777, ((vt2.c0)<<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(250573777, ((vt2.c0)<<(rt0.c2)))) IS TRUE)  as count FROM vt0, vt2, v0 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(0x326a91e2)))AND(TRIM(x''))));
SELECT ALL COUNT(*) FROM vt0, vt2, v0 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(0X326a91e2)))AND(TRIM(x''))) WHERE (TRIM(250573777, ((vt2.c0)<<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(250573777, ((vt2.c0)<<(rt0.c2)))) IS TRUE)  as count FROM vt0, vt2, v0 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(0x326a91e2)))AND(TRIM(x''))));
SELECT ALL COUNT(*) FROM vt0, vt2, v0 CROSS JOIN rt0 ON ((((rt0.c1 COLLATE NOCASE)OR(0X326a91e2)))AND(TRIM(x''))) WHERE (TRIM(250573777, ((vt2.c0)<<(rt0.c2))));
SELECT * FROM vt1, rt0 LEFT OUTER JOIN vt2 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.8813315131963563)) NOT BETWEEN ((vt1.c0 IN (vt2.c0, rt0.c3))) AND (rt0.c4)) RIGHT OUTER JOIN v0 ON CASE ((((vt1.c0)OR(rt0.c2)))AND(vt2.c0))  WHEN (~ (rt0.c0)) THEN (~ (v0.c0)) ELSE ((vt0.c0)AND(vt1.c0)) END INNER JOIN vt0 ON rt0.c3 WHERE (x'1b4b') ORDER BY ((NULL)<<(((v0.c0)>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'1b4b') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt2 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.8813315131963563)) NOT BETWEEN ((vt1.c0 IN (vt2.c0, rt0.c3))) AND (rt0.c4)) RIGHT OUTER JOIN v0 ON CASE ((((vt1.c0)OR(rt0.c2)))AND(vt2.c0))  WHEN (~ (rt0.c0)) THEN (~ (v0.c0)) ELSE ((vt0.c0)AND(vt1.c0)) END INNER JOIN vt0 ON rt0.c3 ORDER BY ((NULL)<<(((v0.c0)>(rt0.c0)))) ASC);
SELECT * FROM vt1, rt0 LEFT OUTER JOIN vt2 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.8813315131963563)) NOT BETWEEN ((vt1.c0 IN (vt2.c0, rt0.c3))) AND (rt0.c4)) RIGHT OUTER JOIN v0 ON CASE ((((vt1.c0)OR(rt0.c2)))AND(vt2.c0))  WHEN (~ (rt0.c0)) THEN (~ (v0.c0)) ELSE ((vt0.c0)AND(vt1.c0)) END INNER JOIN vt0 ON rt0.c3 WHERE (x'1b4b') ORDER BY ((NULL)<<(((v0.c0)>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((x'1b4b') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt2 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.8813315131963563)) NOT BETWEEN ((vt1.c0 IN (vt2.c0, rt0.c3))) AND (rt0.c4)) RIGHT OUTER JOIN v0 ON CASE ((((vt1.c0)OR(rt0.c2)))AND(vt2.c0))  WHEN (~ (rt0.c0)) THEN (~ (v0.c0)) ELSE ((vt0.c0)AND(vt1.c0)) END INNER JOIN vt0 ON rt0.c3 ORDER BY ((NULL)<<(((v0.c0)>(rt0.c0)))) ASC);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((~ (0.37920404838653066))))) WHERE ((((- (vt2.c0)))-((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt2.c0)))-((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((~ (0.37920404838653066))))));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((~ (0.37920404838653066))))) WHERE ((((- (vt2.c0)))-((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt2.c0)))-((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((~ (0.37920404838653066))))));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((~ (0.37920404838653066))))) WHERE ((((- (vt2.c0)))-((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (CASE (~ (rt0.c0))  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) ELSE CAST(vt2.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) ELSE CAST(vt2.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, rt0, vt2, v0);
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (CASE (~ (rt0.c0))  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) ELSE CAST(vt2.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) ELSE CAST(vt2.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, rt0, vt2, v0);
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (CASE (~ (rt0.c0))  WHEN v0.c0 THEN CAST(v0.c0 AS TEXT) ELSE CAST(vt2.c0 AS TEXT) END);
SELECT ALL * FROM rt0 NATURAL JOIN vt2 WHERE (CAST(rt0.c4 AS BLOB)) ORDER BY CASE WHEN (~ (NULL)) THEN ((vt2.c0)IS(rt0.c0)) WHEN ((((((((vt2.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt0.c4))>((vt2.c0))) WHEN CASE WHEN NULL THEN vt2.c0 ELSE rt0.c2 END THEN ((rt0.c1)+(vt2.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt2 ORDER BY CASE WHEN (~ (NULL)) THEN ((vt2.c0)IS(rt0.c0)) WHEN ((((((((vt2.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt0.c4))>((vt2.c0))) WHEN CASE WHEN NULL THEN vt2.c0 ELSE rt0.c2 END THEN ((rt0.c1)+(vt2.c0)) END);
SELECT ALL * FROM rt0 NATURAL JOIN vt2 WHERE (CAST(rt0.c4 AS BLOB)) ORDER BY CASE WHEN (~ (NULL)) THEN ((vt2.c0)IS(rt0.c0)) WHEN ((((((((vt2.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt0.c4))>((vt2.c0))) WHEN CASE WHEN NULL THEN vt2.c0 ELSE rt0.c2 END THEN ((rt0.c1)+(vt2.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS BLOB)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt2 ORDER BY CASE WHEN (~ (NULL)) THEN ((vt2.c0)IS(rt0.c0)) WHEN ((((((((vt2.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt0.c4))>((vt2.c0))) WHEN CASE WHEN NULL THEN vt2.c0 ELSE rt0.c2 END THEN ((rt0.c1)+(vt2.c0)) END);
SELECT ALL * FROM rt0 NATURAL JOIN vt2 WHERE (CAST(rt0.c4 AS BLOB)) ORDER BY CASE WHEN (~ (NULL)) THEN ((vt2.c0)IS(rt0.c0)) WHEN ((((((((vt2.c0)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)) THEN (((rt0.c4))>((vt2.c0))) WHEN CASE WHEN NULL THEN vt2.c0 ELSE rt0.c2 END THEN ((rt0.c1)+(vt2.c0)) END;
SELECT * FROM vt1, rt0, v0, vt0, vt2 WHERE ((((((rt0.c2))!=((NULL)))) BETWEEN ((NOT (rt0.c0))) AND (INSTR(vt2.c0, '7f/⽺fno'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((NULL)))) BETWEEN ((NOT (rt0.c0))) AND (INSTR(vt2.c0, '7f/⽺fno')))) IS TRUE)  as count FROM vt1, rt0, v0, vt0, vt2);
SELECT * FROM vt1, rt0, v0, vt0, vt2 WHERE ((((((rt0.c2))!=((NULL)))) BETWEEN ((NOT (rt0.c0))) AND (INSTR(vt2.c0, '7f/⽺fno'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((NULL)))) BETWEEN ((NOT (rt0.c0))) AND (INSTR(vt2.c0, '7f/⽺fno')))) IS TRUE)  as count FROM vt1, rt0, v0, vt0, vt2);
SELECT * FROM vt1, rt0, v0, vt0, vt2 WHERE ((((((rt0.c2))!=((NULL)))) BETWEEN ((NOT (rt0.c0))) AND (INSTR(vt2.c0, '7f/⽺fno'))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((0Xffffffffc0c2b71e)AND(('-457769610' IN (v0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffc0c2b71e)AND(('-457769610' IN (v0.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((0Xffffffffc0c2b71e)AND(('-457769610' IN (v0.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffc0c2b71e)AND(('-457769610' IN (v0.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((0Xffffffffc0c2b71e)AND(('-457769610' IN (v0.c0, vt1.c0)))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt2 ON '-734642794' LEFT OUTER JOIN vt1 ON (~ ((- (rt0.c3)))) WHERE (((((vt1.c0)OR(rt0.c1)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ABS(CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(rt0.c1)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt2 ON '-734642794' LEFT OUTER JOIN vt1 ON (~ ((- (rt0.c3)))) ORDER BY ABS(CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE rt0.c4 END));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt2 ON '-734642794' LEFT OUTER JOIN vt1 ON (~ ((- (rt0.c3)))) WHERE (((((vt1.c0)OR(rt0.c1)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ABS(CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE rt0.c4 END);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(rt0.c1)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt2 ON '-734642794' LEFT OUTER JOIN vt1 ON (~ ((- (rt0.c3)))) ORDER BY ABS(CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE rt0.c4 END));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt2 ON '-734642794' LEFT OUTER JOIN vt1 ON (~ ((- (rt0.c3)))) WHERE (((((vt1.c0)OR(rt0.c1)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ABS(CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'' ELSE rt0.c4 END);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0)GLOB(((vt1.c0) ISNULL)))) ORDER BY ((IFNULL(rt0.c0, vt1.c0))GLOB(CAST(rt0.c1 AS INTEGER))), 0.18619088962022834;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)GLOB(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((IFNULL(rt0.c0, vt1.c0))GLOB(CAST(rt0.c1 AS INTEGER))), 0.18619088962022834);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0)GLOB(((vt1.c0) ISNULL)))) ORDER BY ((IFNULL(rt0.c0, vt1.c0))GLOB(CAST(rt0.c1 AS INTEGER))), 0.18619088962022834;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)GLOB(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((IFNULL(rt0.c0, vt1.c0))GLOB(CAST(rt0.c1 AS INTEGER))), 0.18619088962022834);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0)GLOB(((vt1.c0) ISNULL)))) ORDER BY ((IFNULL(rt0.c0, vt1.c0))GLOB(CAST(rt0.c1 AS INTEGER))), 0.18619088962022834;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))<>((v0.c0, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))<>((v0.c0, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, vt0.c0))))IS(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(NULL)))AND(v0.c0)), v0.c0, (((v0.c0, v0.c0, x''))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ORDER BY ((((v0.c0) IS TRUE)) BETWEEN (COALESCE(v0.c0, v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(NULL)))AND(v0.c0)), v0.c0, (((v0.c0, v0.c0, x''))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE)) BETWEEN (COALESCE(v0.c0, v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND (v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(NULL)))AND(v0.c0)), v0.c0, (((v0.c0, v0.c0, x''))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ORDER BY ((((v0.c0) IS TRUE)) BETWEEN (COALESCE(v0.c0, v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(NULL)))AND(v0.c0)), v0.c0, (((v0.c0, v0.c0, x''))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS TRUE)) BETWEEN (COALESCE(v0.c0, v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND (v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(NULL)))AND(v0.c0)), v0.c0, (((v0.c0, v0.c0, x''))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (NULL)))) ORDER BY ((((v0.c0) IS TRUE)) BETWEEN (COALESCE(v0.c0, v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND (v0.c0));
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((CASE 0x2a166419  WHEN vt0.c0 THEN '-323542764' WHEN vt2.c0 THEN vt0.c0 WHEN x'' THEN '' WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.16038936138973647 END)<<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0x2a166419  WHEN vt0.c0 THEN '-323542764' WHEN vt2.c0 THEN vt0.c0 WHEN x'' THEN '' WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.16038936138973647 END)<<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((CASE 0x2a166419  WHEN vt0.c0 THEN '-323542764' WHEN vt2.c0 THEN vt0.c0 WHEN x'' THEN '' WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.16038936138973647 END)<<(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0x2a166419  WHEN vt0.c0 THEN '-323542764' WHEN vt2.c0 THEN vt0.c0 WHEN x'' THEN '' WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.16038936138973647 END)<<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((CASE 0x2a166419  WHEN vt0.c0 THEN '-323542764' WHEN vt2.c0 THEN vt0.c0 WHEN x'' THEN '' WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.16038936138973647 END)<<(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM rt0 WHERE (((((rt0.c2) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) ISNULL)) IS TRUE));
SELECT * FROM vt1, v0, rt0, vt2 WHERE ((((rt0.c4)+(vt2.c0)) IN (((rt0.c0)OR(rt0.c3)), (NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)+(vt2.c0)) IN (((rt0.c0)OR(rt0.c3)), (NOT (rt0.c4))))) IS TRUE)  as count FROM vt1, v0, rt0, vt2);
SELECT * FROM vt1, v0, rt0, vt2 WHERE ((((rt0.c4)+(vt2.c0)) IN (((rt0.c0)OR(rt0.c3)), (NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)+(vt2.c0)) IN (((rt0.c0)OR(rt0.c3)), (NOT (rt0.c4))))) IS TRUE)  as count FROM vt1, v0, rt0, vt2);
SELECT * FROM vt1, v0, rt0, vt2 WHERE ((((rt0.c4)+(vt2.c0)) IN (((rt0.c0)OR(rt0.c3)), (NOT (rt0.c4)))));
SELECT COUNT(*) FROM vt2 WHERE ((((x'ef15') BETWEEN (vt2.c0) AND ('xlko5')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'ef15') BETWEEN (vt2.c0) AND ('xlko5')) IN ())) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((((x'ef15') BETWEEN (vt2.c0) AND ('xlko5')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'ef15') BETWEEN (vt2.c0) AND ('xlko5')) IN ())) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((((x'ef15') BETWEEN (vt2.c0) AND ('xlko5')) IN ()));
SELECT * FROM rt0, v0, vt0, vt1 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY vt0.c0);
SELECT * FROM rt0, v0, vt0, vt1 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY vt0.c0);
SELECT * FROM rt0, v0, vt0, vt1 WHERE ((NOT ((vt0.c0 IN ())))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, 0.2380011941490211) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0, 0.2380011941490211) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, 0.2380011941490211) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0, 0.2380011941490211) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, 0.2380011941490211) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('-44526138')));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('-44526138'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('-44526138')));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('-44526138'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('-44526138')));
SELECT ALL * FROM v0, vt1 INNER JOIN vt2 ON ((((TYPEOF(rt0.c4))OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND ('i8RP')))))AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) CROSS JOIN rt0 ON CAST('Zo蛫bX8' AS TEXT) COLLATE NOCASE WHERE (rt0.c4) ORDER BY (((rt0.c2 IN (vt2.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND ('-323542764'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt2 ON ((((TYPEOF(rt0.c4))OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND ('i8RP')))))AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) CROSS JOIN rt0 ON CAST('Zo蛫bX8' AS TEXT) COLLATE NOCASE ORDER BY (((rt0.c2 IN (vt2.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND ('-323542764'))))  NULLS LAST);
SELECT ALL * FROM v0, vt1 INNER JOIN vt2 ON ((((TYPEOF(rt0.c4))OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND ('i8RP')))))AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) CROSS JOIN rt0 ON CAST('Zo蛫bX8' AS TEXT) COLLATE NOCASE WHERE (rt0.c4) ORDER BY (((rt0.c2 IN (vt2.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND ('-323542764'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt2 ON ((((TYPEOF(rt0.c4))OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND ('i8RP')))))AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) CROSS JOIN rt0 ON CAST('Zo蛫bX8' AS TEXT) COLLATE NOCASE ORDER BY (((rt0.c2 IN (vt2.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND ('-323542764'))))  NULLS LAST);
SELECT ALL * FROM v0, vt1 INNER JOIN vt2 ON ((((TYPEOF(rt0.c4))OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND ('i8RP')))))AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))) CROSS JOIN rt0 ON CAST('Zo蛫bX8' AS TEXT) COLLATE NOCASE WHERE (rt0.c4) ORDER BY (((rt0.c2 IN (vt2.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt2.c0) NOT BETWEEN (vt1.c0) AND ('-323542764'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt2, vt0 WHERE (((CAST(rt0.c2 AS BLOB))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt2.c0 THEN vt0.c0 END))) ORDER BY ((((HEX(rt0.c3))OR(((rt0.c0)||(vt2.c0)))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE rt0.c4  WHEN x'' THEN rt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt2.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((((HEX(rt0.c3))OR(((rt0.c0)||(vt2.c0)))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE rt0.c4  WHEN x'' THEN rt0.c0 END) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt2, vt0 WHERE (((CAST(rt0.c2 AS BLOB))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt2.c0 THEN vt0.c0 END))) ORDER BY ((((HEX(rt0.c3))OR(((rt0.c0)||(vt2.c0)))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE rt0.c4  WHEN x'' THEN rt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt2.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((((HEX(rt0.c3))OR(((rt0.c0)||(vt2.c0)))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE rt0.c4  WHEN x'' THEN rt0.c0 END) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt2, vt0 WHERE (((CAST(rt0.c2 AS BLOB))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt2.c0 THEN vt0.c0 END))) ORDER BY ((((HEX(rt0.c3))OR(((rt0.c0)||(vt2.c0)))))AND(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE rt0.c4  WHEN x'' THEN rt0.c0 END) NOTNULL) DESC;
SELECT * FROM vt1, vt2, rt0 FULL OUTER JOIN vt0 ON CASE WHEN x'e2e0' THEN CAST(rt0.c0 AS NUMERIC) ELSE ((rt0.c2)<(rt0.c3)) END LEFT OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c4)OR(vt1.c0)))))OR(CASE vt2.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN '1878541107' WHEN vt0.c0 THEN '-734642794' ELSE '-264309659' END))) ORDER BY ((((vt2.c0)LIKE(v0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c4)OR(vt1.c0)))))OR(CASE vt2.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN '1878541107' WHEN vt0.c0 THEN '-734642794' ELSE '-264309659' END))) IS TRUE)  as count FROM vt1, vt2, rt0 FULL OUTER JOIN vt0 ON CASE WHEN x'e2e0' THEN CAST(rt0.c0 AS NUMERIC) ELSE ((rt0.c2)<(rt0.c3)) END LEFT OUTER JOIN v0 ON LAST_INSERT_ROWID() ORDER BY ((((vt2.c0)LIKE(v0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS BLOB))) DESC);
SELECT * FROM vt1, vt2, rt0 FULL OUTER JOIN vt0 ON CASE WHEN x'e2e0' THEN CAST(rt0.c0 AS NUMERIC) ELSE ((rt0.c2)<(rt0.c3)) END LEFT OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c4)OR(vt1.c0)))))OR(CASE vt2.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN '1878541107' WHEN vt0.c0 THEN '-734642794' ELSE '-264309659' END))) ORDER BY ((((vt2.c0)LIKE(v0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c4)OR(vt1.c0)))))OR(CASE vt2.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN '1878541107' WHEN vt0.c0 THEN '-734642794' ELSE '-264309659' END))) IS TRUE)  as count FROM vt1, vt2, rt0 FULL OUTER JOIN vt0 ON CASE WHEN x'e2e0' THEN CAST(rt0.c0 AS NUMERIC) ELSE ((rt0.c2)<(rt0.c3)) END LEFT OUTER JOIN v0 ON LAST_INSERT_ROWID() ORDER BY ((((vt2.c0)LIKE(v0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS BLOB))) DESC);
SELECT * FROM vt1, vt2, rt0 FULL OUTER JOIN vt0 ON CASE WHEN x'e2e0' THEN CAST(rt0.c0 AS NUMERIC) ELSE ((rt0.c2)<(rt0.c3)) END LEFT OUTER JOIN v0 ON LAST_INSERT_ROWID() WHERE (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(((rt0.c4)OR(vt1.c0)))))OR(CASE vt2.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN '1878541107' WHEN vt0.c0 THEN '-734642794' ELSE '-264309659' END))) ORDER BY ((((vt2.c0)LIKE(v0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CAST(vt0.c0 AS BLOB))) DESC;
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))))=((((((x'b035')OR(rt0.c3)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))))=((((((x'b035')OR(rt0.c3)))AND(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON rt0.c0);
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))))=((((((x'b035')OR(rt0.c3)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))))=((((((x'b035')OR(rt0.c3)))AND(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON rt0.c0);
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON rt0.c0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))))=((((((x'b035')OR(rt0.c3)))AND(rt0.c1))))));
SELECT COUNT(*) FROM vt0, vt2, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, vt2, rt0, v0);
SELECT COUNT(*) FROM vt0, vt2, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, vt2, rt0, v0);
SELECT COUNT(*) FROM vt0, vt2, rt0, v0 WHERE (rt0.c1);
SELECT ALL * FROM vt2 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))=(((vt1.c0)IS NOT('0.8296581360600351')))) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 END)LIKE(((1946339824)/(vt2.c0)))) WHERE ((((((vt2.c0)) NOT BETWEEN (('.?xM[膗2s')) AND ((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((((((((v0.c0)AND(NULL)))OR(vt2.c0)))AND(v0.c0)))AND(vt2.c0))))) ORDER BY ((((vt2.c0) IS FALSE))IS NOT((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)) NOT BETWEEN (('.?xM[膗2s')) AND ((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((((((((v0.c0)AND(NULL)))OR(vt2.c0)))AND(v0.c0)))AND(vt2.c0))))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))==(((vt1.c0)IS NOT('0.8296581360600351')))) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 END)LIKE(((1946339824)/(vt2.c0)))) ORDER BY ((((vt2.c0) IS FALSE))IS NOT((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM vt2 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))=(((vt1.c0)IS NOT('0.8296581360600351')))) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 END)LIKE(((1946339824)/(vt2.c0)))) WHERE ((((((vt2.c0)) NOT BETWEEN (('.?xM[膗2s')) AND ((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((((((((v0.c0)AND(NULL)))OR(vt2.c0)))AND(v0.c0)))AND(vt2.c0))))) ORDER BY ((((vt2.c0) IS FALSE))IS NOT((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)) NOT BETWEEN (('.?xM[膗2s')) AND ((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((((((((v0.c0)AND(NULL)))OR(vt2.c0)))AND(v0.c0)))AND(vt2.c0))))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN v0 ON ((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))==(((vt1.c0)IS NOT('0.8296581360600351')))) RIGHT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 END)LIKE(((1946339824)/(vt2.c0)))) ORDER BY ((((vt2.c0) IS FALSE))IS NOT((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM v0, vt0, vt2, vt1, rt0 WHERE ((NOT (((rt0.c3)/(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3)/(rt0.c4))))) IS TRUE)  as count FROM v0, vt0, vt2, vt1, rt0);
SELECT ALL * FROM v0, vt0, vt2, vt1, rt0 WHERE ((NOT (((rt0.c3)/(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3)/(rt0.c4))))) IS TRUE)  as count FROM v0, vt0, vt2, vt1, rt0);
SELECT ALL * FROM v0, vt0, vt2, vt1, rt0 WHERE ((NOT (((rt0.c3)/(rt0.c4)))));
SELECT COUNT(*) FROM vt0, vt2, rt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE RTRIM IN (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt2, rt0, v0);
SELECT COUNT(*) FROM vt0, vt2, rt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE RTRIM IN (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt2, rt0, v0);
SELECT COUNT(*) FROM vt0, vt2, rt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 WHERE (((HEX(DISTINCT rt0.c1))LIKE(CAST(rt0.c0 AS REAL)))) ORDER BY ((((rt0.c0)<(vt1.c0)))%(TYPEOF(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY ((((rt0.c0)<(vt1.c0)))%(TYPEOF(rt0.c3))) ASC);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 WHERE (((HEX(DISTINCT rt0.c1))LIKE(CAST(rt0.c0 AS REAL)))) ORDER BY ((((rt0.c0)<(vt1.c0)))%(TYPEOF(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))LIKE(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY ((((rt0.c0)<(vt1.c0)))%(TYPEOF(rt0.c3))) ASC);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 WHERE (((HEX(DISTINCT rt0.c1))LIKE(CAST(rt0.c0 AS REAL)))) ORDER BY ((((rt0.c0)<(vt1.c0)))%(TYPEOF(rt0.c3))) ASC;
SELECT * FROM vt1, v0, rt0, vt0, vt2 WHERE (vt2.c0) ORDER BY CAST(((vt0.c0)%(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt1, v0, rt0, vt0, vt2 ORDER BY CAST(((vt0.c0)%(rt0.c1)) AS REAL));
SELECT * FROM vt1, v0, rt0, vt0, vt2 WHERE (vt2.c0) ORDER BY CAST(((vt0.c0)%(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt1, v0, rt0, vt0, vt2 ORDER BY CAST(((vt0.c0)%(rt0.c1)) AS REAL));
SELECT * FROM vt1, v0, rt0, vt0, vt2 WHERE (vt2.c0) ORDER BY CAST(((vt0.c0)%(rt0.c1)) AS REAL);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE BINARY) ORDER BY CASE (+ (rt0.c0))  WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END THEN vt2.c0 ELSE LIKELIHOOD(rt0.c3, 0.517796378122156) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt2, vt0, rt0 ORDER BY CASE (+ (rt0.c0))  WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END THEN vt2.c0 ELSE LIKELIHOOD(rt0.c3, 0.517796378122156) END ASC);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE BINARY) ORDER BY CASE (+ (rt0.c0))  WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END THEN vt2.c0 ELSE LIKELIHOOD(rt0.c3, 0.517796378122156) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt2, vt0, rt0 ORDER BY CASE (+ (rt0.c0))  WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END THEN vt2.c0 ELSE LIKELIHOOD(rt0.c3, 0.517796378122156) END ASC);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE BINARY) ORDER BY CASE (+ (rt0.c0))  WHEN CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END THEN vt2.c0 ELSE LIKELIHOOD(rt0.c3, 0.517796378122156) END ASC;
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((vt0.c0)LIKE(vt1.c0)))AND(((vt0.c0) NOT NULL))))AND(SQLITE_VERSION())))AND(((vt0.c0) NOTNULL))))OR(vt0.c0))) ORDER BY '706110489' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt1.c0)))AND(((vt0.c0) NOT NULL))))AND(SQLITE_VERSION())))AND(((vt0.c0) NOTNULL))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY '706110489' DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((vt0.c0)LIKE(vt1.c0)))AND(((vt0.c0) NOT NULL))))AND(SQLITE_VERSION())))AND(((vt0.c0) NOTNULL))))OR(vt0.c0))) ORDER BY '706110489' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)LIKE(vt1.c0)))AND(((vt0.c0) NOT NULL))))AND(SQLITE_VERSION())))AND(((vt0.c0) NOTNULL))))OR(vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY '706110489' DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((vt0.c0)LIKE(vt1.c0)))AND(((vt0.c0) NOT NULL))))AND(SQLITE_VERSION())))AND(((vt0.c0) NOTNULL))))OR(vt0.c0))) ORDER BY '706110489' DESC;
SELECT * FROM vt2 WHERE ((~ (HEX(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (HEX(vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((~ (HEX(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (HEX(vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((~ (HEX(vt2.c0))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((rt0.c0)OR(vt1.c0)))AND(x'')) IN ()) CROSS JOIN vt1 ON CASE WHEN 0.46003577281353436 THEN ((v0.c0)||(rt0.c3)) END WHERE (rtreenode(CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END, (~ (vt1.c0)))) ORDER BY x'ce05' DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode(CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END, (~ (vt1.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((rt0.c0)OR(vt1.c0)))AND(x'')) IN ()) CROSS JOIN vt1 ON CASE WHEN 0.46003577281353436 THEN ((v0.c0)||(rt0.c3)) END ORDER BY x'ce05' DESC);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((rt0.c0)OR(vt1.c0)))AND(x'')) IN ()) CROSS JOIN vt1 ON CASE WHEN 0.46003577281353436 THEN ((v0.c0)||(rt0.c3)) END WHERE (rtreenode(CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END, (~ (vt1.c0)))) ORDER BY x'ce05' DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode(CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END, (~ (vt1.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((rt0.c0)OR(vt1.c0)))AND(x'')) IN ()) CROSS JOIN vt1 ON CASE WHEN 0.46003577281353436 THEN ((v0.c0)||(rt0.c3)) END ORDER BY x'ce05' DESC);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((rt0.c0)OR(vt1.c0)))AND(x'')) IN ()) CROSS JOIN vt1 ON CASE WHEN 0.46003577281353436 THEN ((v0.c0)||(rt0.c3)) END WHERE (rtreenode(CASE WHEN vt1.c0 THEN rt0.c1 ELSE v0.c0 END, (~ (vt1.c0)))) ORDER BY x'ce05' DESC;
SELECT ALL * FROM vt0, rt0, vt1, v0, vt2 WHERE (((CAST(vt0.c0 AS BLOB))||(CASE rt0.c1  WHEN v0.c0 THEN vt2.c0 END))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c3)OR(rt0.c4)))OR(vt1.c0))) AND (rt0.c4 COLLATE BINARY)), CASE ((rt0.c4)*(rt0.c2))  WHEN ((rt0.c4)=(rt0.c1)) THEN IFNULL(rt0.c4, NULL) WHEN TRIM(rt0.c0) THEN CAST(v0.c0 AS BLOB) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c3)IS NOT(rt0.c1)) ELSE (x'' IN ()) END ASC, (DATE(rt0.c4, rt0.c2, rt0.c3) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))||(CASE rt0.c1  WHEN v0.c0 THEN vt2.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1, v0, vt2 ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c3)OR(rt0.c4)))OR(vt1.c0))) AND (rt0.c4 COLLATE BINARY)), CASE ((rt0.c4)*(rt0.c2))  WHEN ((rt0.c4)==(rt0.c1)) THEN IFNULL(rt0.c4, NULL) WHEN TRIM(rt0.c0) THEN CAST(v0.c0 AS BLOB) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c3)IS NOT(rt0.c1)) ELSE (x'' IN ()) END ASC, (DATE(rt0.c4, rt0.c2, rt0.c3) IN ()));
SELECT ALL * FROM vt0, rt0, vt1, v0, vt2 WHERE (((CAST(vt0.c0 AS BLOB))||(CASE rt0.c1  WHEN v0.c0 THEN vt2.c0 END))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c3)OR(rt0.c4)))OR(vt1.c0))) AND (rt0.c4 COLLATE BINARY)), CASE ((rt0.c4)*(rt0.c2))  WHEN ((rt0.c4)=(rt0.c1)) THEN IFNULL(rt0.c4, NULL) WHEN TRIM(rt0.c0) THEN CAST(v0.c0 AS BLOB) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c3)IS NOT(rt0.c1)) ELSE (x'' IN ()) END ASC, (DATE(rt0.c4, rt0.c2, rt0.c3) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))||(CASE rt0.c1  WHEN v0.c0 THEN vt2.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1, v0, vt2 ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c3)OR(rt0.c4)))OR(vt1.c0))) AND (rt0.c4 COLLATE BINARY)), CASE ((rt0.c4)*(rt0.c2))  WHEN ((rt0.c4)==(rt0.c1)) THEN IFNULL(rt0.c4, NULL) WHEN TRIM(rt0.c0) THEN CAST(v0.c0 AS BLOB) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c3)IS NOT(rt0.c1)) ELSE (x'' IN ()) END ASC, (DATE(rt0.c4, rt0.c2, rt0.c3) IN ()));
SELECT ALL * FROM vt0, rt0, vt1, v0, vt2 WHERE (((CAST(vt0.c0 AS BLOB))||(CASE rt0.c1  WHEN v0.c0 THEN vt2.c0 END))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c3)OR(rt0.c4)))OR(vt1.c0))) AND (rt0.c4 COLLATE BINARY)), CASE ((rt0.c4)*(rt0.c2))  WHEN ((rt0.c4)=(rt0.c1)) THEN IFNULL(rt0.c4, NULL) WHEN TRIM(rt0.c0) THEN CAST(v0.c0 AS BLOB) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c3)IS NOT(rt0.c1)) ELSE (x'' IN ()) END ASC, (DATE(rt0.c4, rt0.c2, rt0.c3) IN ());
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END AS BLOB));
SELECT * FROM v0, vt2, vt1 INNER JOIN rt0 ON (((rt0.c3) NOT BETWEEN (vt0.c0) AND ('-1443195411')) IN ()) CROSS JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS BLOB)) ORDER BY 816513607 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0, vt2, vt1 INNER JOIN rt0 ON (((rt0.c3) NOT BETWEEN (vt0.c0) AND ('-1443195411')) IN ()) CROSS JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))) ORDER BY 816513607 DESC);
SELECT * FROM v0, vt2, vt1 INNER JOIN rt0 ON (((rt0.c3) NOT BETWEEN (vt0.c0) AND ('-1443195411')) IN ()) CROSS JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS BLOB)) ORDER BY 816513607 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0, vt2, vt1 INNER JOIN rt0 ON (((rt0.c3) NOT BETWEEN (vt0.c0) AND ('-1443195411')) IN ()) CROSS JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))) ORDER BY 816513607 DESC);
SELECT COUNT(*) FROM vt1, vt2, v0 WHERE (((v0.c0) BETWEEN (((vt2.c0)LIKE(v0.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (((vt2.c0)LIKE(v0.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt2, v0);
SELECT COUNT(*) FROM vt1, vt2, v0 WHERE (((v0.c0) BETWEEN (((vt2.c0)LIKE(v0.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (((vt2.c0)LIKE(v0.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt2, v0);
SELECT COUNT(*) FROM vt1, vt2, v0 WHERE (((v0.c0) BETWEEN (((vt2.c0)LIKE(v0.c0))) AND ((+ (vt1.c0)))));
SELECT ALL * FROM vt2, rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))>(((rt0.c1)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC))>(((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))>(((rt0.c1)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC))>(((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE (((CAST(rt0.c3 AS NUMERIC))>(((rt0.c1)>(rt0.c2)))));
SELECT ALL * FROM v0, rt0, vt0, vt2 WHERE (LIKELY(CAST('u9Us' AS REAL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST('u9Us' AS REAL))) IS TRUE)  as count FROM v0, rt0, vt0, vt2);
SELECT ALL * FROM v0, rt0, vt0, vt2 WHERE (LIKELY(CAST('u9Us' AS REAL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST('u9Us' AS REAL))) IS TRUE)  as count FROM v0, rt0, vt0, vt2);
SELECT ALL * FROM v0, rt0, vt0, vt2 WHERE (LIKELY(CAST('u9Us' AS REAL)));
SELECT COUNT(*) FROM vt2, vt1, rt0 NATURAL JOIN v0 WHERE (((vt1.c0)<<(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt2, vt1, rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt2, vt1, rt0 NATURAL JOIN v0 WHERE (((vt1.c0)<<(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt2, vt1, rt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt2, vt1, rt0 NATURAL JOIN v0 WHERE (((vt1.c0)<<(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0, vt0, vt2, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, vt0, vt2, v0);
SELECT ALL * FROM vt1, rt0, vt0, vt2, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, vt0, vt2, v0);
SELECT ALL * FROM vt1, rt0, vt0, vt2, v0 WHERE (vt1.c0);
SELECT * FROM vt2, rt0, vt1 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT * FROM vt2, rt0, vt1 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT * FROM vt2, rt0, vt1 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((NULL)|(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((NULL)|(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((NULL)|(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((NULL)|(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((NULL)|(v0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 END)|((rt0.c4 IN (rt0.c4, rt0.c4, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c1 END)|((rt0.c4 IN (rt0.c4, rt0.c4, rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 END)|((rt0.c4 IN (rt0.c4, rt0.c4, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c1 END)|((rt0.c4 IN (rt0.c4, rt0.c4, rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c1 END)|((rt0.c4 IN (rt0.c4, rt0.c4, rt0.c4)))));
SELECT * FROM vt0 WHERE (831135946) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, (((((((((+ (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((831135946) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, (((((((((+ (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0 WHERE (831135946) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, (((((((((+ (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((831135946) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, (((((((((+ (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0 WHERE (831135946) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS BLOB)))  NULLS FIRST, (((((((((+ (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM vt0, vt1, rt0, v0, vt2 WHERE ('j㍁Oktg	,V');
SELECT SUM(count) FROM (SELECT ALL (('j㍁Oktg	,V') IS TRUE)  as count FROM vt0, vt1, rt0, v0, vt2);
SELECT * FROM vt0, vt1, rt0, v0, vt2 WHERE ('j㍁Oktg	,V');
SELECT SUM(count) FROM (SELECT ALL (('j㍁Oktg	,V') IS TRUE)  as count FROM vt0, vt1, rt0, v0, vt2);
SELECT * FROM vt0, vt1, rt0, v0, vt2 WHERE ('j㍁Oktg	,V');
SELECT ALL * FROM vt1, rt0, vt2, vt0, v0 WHERE ((((rt0.c4))==((rt0.c4))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4))==((rt0.c4))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt2, vt0, v0);
SELECT ALL * FROM vt1, rt0, vt2, vt0, v0 WHERE ((((rt0.c4))==((rt0.c4))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4))==((rt0.c4))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt2, vt0, v0);
SELECT ALL * FROM vt1, rt0, vt2, vt0, v0 WHERE ((((rt0.c4))==((rt0.c4))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(783898140)))AND(((vt1.c0)IS NOT(vt0.c0)))))AND(IFNULL(DISTINCT vt0.c0, 0.7729527519865719))))AND(vt1.c0 COLLATE RTRIM)) WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c0)))AND('-60572353')))), ((CHANGES())LIKE(INSTR(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(783898140)))AND(((vt1.c0)IS NOT(vt0.c0)))))AND(IFNULL(DISTINCT vt0.c0, 0.7729527519865719))))AND(vt1.c0 COLLATE RTRIM)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c0)))AND('-60572353')))), ((CHANGES())LIKE(INSTR(vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(783898140)))AND(((vt1.c0)IS NOT(vt0.c0)))))AND(IFNULL(DISTINCT vt0.c0, 0.7729527519865719))))AND(vt1.c0 COLLATE RTRIM)) WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c0)))AND('-60572353')))), ((CHANGES())LIKE(INSTR(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(783898140)))AND(((vt1.c0)IS NOT(vt0.c0)))))AND(IFNULL(DISTINCT vt0.c0, 0.7729527519865719))))AND(vt1.c0 COLLATE RTRIM)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c0)))AND('-60572353')))), ((CHANGES())LIKE(INSTR(vt1.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(783898140)))AND(((vt1.c0)IS NOT(vt0.c0)))))AND(IFNULL(DISTINCT vt0.c0, 0.7729527519865719))))AND(vt1.c0 COLLATE RTRIM)) WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY (NOT (((((vt0.c0)AND(vt0.c0)))AND('-60572353')))), ((CHANGES())LIKE(INSTR(vt1.c0, vt1.c0)));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c4) NOT NULL), (~ (vt1.c0)), ((((rt0.c0)AND(rt0.c3)))AND(vt0.c0))))>=((vt1.c0 COLLATE BINARY, (rt0.c4 IN ()), vt2.c0))) RIGHT OUTER JOIN vt2 ON UNLIKELY(CAST(rt0.c1 AS BLOB)) WHERE ((((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt2.c0) AND (-1486329932)), vt0.c0))>((CAST(vt1.c0 AS REAL), (((rt0.c0)) NOT BETWEEN (('dOX]')) AND ((rt0.c3))), 'v-QRFx')))) ORDER BY '-416027701' DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt2.c0) AND (-1486329932)), vt0.c0))>((CAST(vt1.c0 AS REAL), (((rt0.c0)) NOT BETWEEN (('dOX]')) AND ((rt0.c3))), 'v-QRFx')))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c4) NOT NULL), (~ (vt1.c0)), ((((rt0.c0)AND(rt0.c3)))AND(vt0.c0))))>=((vt1.c0 COLLATE BINARY, (rt0.c4 IN ()), vt2.c0))) RIGHT OUTER JOIN vt2 ON UNLIKELY(CAST(rt0.c1 AS BLOB)) ORDER BY '-416027701' DESC);
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c4) NOT NULL), (~ (vt1.c0)), ((((rt0.c0)AND(rt0.c3)))AND(vt0.c0))))>=((vt1.c0 COLLATE BINARY, (rt0.c4 IN ()), vt2.c0))) RIGHT OUTER JOIN vt2 ON UNLIKELY(CAST(rt0.c1 AS BLOB)) WHERE ((((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt2.c0) AND (-1486329932)), vt0.c0))>((CAST(vt1.c0 AS REAL), (((rt0.c0)) NOT BETWEEN (('dOX]')) AND ((rt0.c3))), 'v-QRFx')))) ORDER BY '-416027701' DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt2.c0) AND (-1486329932)), vt0.c0))>((CAST(vt1.c0 AS REAL), (((rt0.c0)) NOT BETWEEN (('dOX]')) AND ((rt0.c3))), 'v-QRFx')))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c4) NOT NULL), (~ (vt1.c0)), ((((rt0.c0)AND(rt0.c3)))AND(vt0.c0))))>=((vt1.c0 COLLATE BINARY, (rt0.c4 IN ()), vt2.c0))) RIGHT OUTER JOIN vt2 ON UNLIKELY(CAST(rt0.c1 AS BLOB)) ORDER BY '-416027701' DESC);
SELECT ALL COUNT(*) FROM vt1, vt2, v0, vt0 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt2.c0) BETWEEN (x'') AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt2.c0) BETWEEN (x'') AND (v0.c0)) END) IS TRUE)  as count FROM vt1, vt2, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, vt2, v0, vt0 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt2.c0) BETWEEN (x'') AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt2.c0) BETWEEN (x'') AND (v0.c0)) END) IS TRUE)  as count FROM vt1, vt2, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, vt2, v0, vt0 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) THEN ((vt2.c0) BETWEEN (x'') AND (v0.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ ('794177998')), (vt1.c0 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ ('794177998')), (vt1.c0 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ ('794177998')), (vt1.c0 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ ('794177998')), (vt1.c0 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND (((+ ('794177998')), (vt1.c0 IN ()), ((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt2, rt0 WHERE (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) COLLATE BINARY) ORDER BY (((((rt0.c4)%(rt0.c0))))<>((CASE 3.36099404E8  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ASC, (((rt0.c2, 0.14546587527408483, rt0.c3)) NOT BETWEEN ((((rt0.c2) IS FALSE), vt2.c0 COLLATE BINARY, ((rt0.c4) ISNULL))) AND ((((vt2.c0)-(vt2.c0)), rt0.c3, ((rt0.c2)>(rt0.c1)))))  NULLS LAST, (((rt0.c3 IN (rt0.c2, rt0.c2)))&(('-457769610' IN (rt0.c4, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt2, rt0 ORDER BY (((((rt0.c4)%(rt0.c0))))!=((CASE 3.36099404E8  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ASC, (((rt0.c2, 0.14546587527408483, rt0.c3)) NOT BETWEEN ((((rt0.c2) IS FALSE), vt2.c0 COLLATE BINARY, ((rt0.c4) ISNULL))) AND ((((vt2.c0)-(vt2.c0)), rt0.c3, ((rt0.c2)>(rt0.c1)))))  NULLS LAST, (((rt0.c3 IN (rt0.c2, rt0.c2)))&(('-457769610' IN (rt0.c4, rt0.c3)))));
SELECT * FROM vt2, rt0 WHERE (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) COLLATE BINARY) ORDER BY (((((rt0.c4)%(rt0.c0))))<>((CASE 3.36099404E8  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ASC, (((rt0.c2, 0.14546587527408483, rt0.c3)) NOT BETWEEN ((((rt0.c2) IS FALSE), vt2.c0 COLLATE BINARY, ((rt0.c4) ISNULL))) AND ((((vt2.c0)-(vt2.c0)), rt0.c3, ((rt0.c2)>(rt0.c1)))))  NULLS LAST, (((rt0.c3 IN (rt0.c2, rt0.c2)))&(('-457769610' IN (rt0.c4, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt2, rt0 ORDER BY (((((rt0.c4)%(rt0.c0))))!=((CASE 3.36099404E8  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ASC, (((rt0.c2, 0.14546587527408483, rt0.c3)) NOT BETWEEN ((((rt0.c2) IS FALSE), vt2.c0 COLLATE BINARY, ((rt0.c4) ISNULL))) AND ((((vt2.c0)-(vt2.c0)), rt0.c3, ((rt0.c2)>(rt0.c1)))))  NULLS LAST, (((rt0.c3 IN (rt0.c2, rt0.c2)))&(('-457769610' IN (rt0.c4, rt0.c3)))));
SELECT * FROM vt2, rt0 WHERE (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) COLLATE BINARY) ORDER BY (((((rt0.c4)%(rt0.c0))))<>((CASE 3.36099404E8  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END))) ASC, (((rt0.c2, 0.14546587527408483, rt0.c3)) NOT BETWEEN ((((rt0.c2) IS FALSE), vt2.c0 COLLATE BINARY, ((rt0.c4) ISNULL))) AND ((((vt2.c0)-(vt2.c0)), rt0.c3, ((rt0.c2)>(rt0.c1)))))  NULLS LAST, (((rt0.c3 IN (rt0.c2, rt0.c2)))&(('-457769610' IN (rt0.c4, rt0.c3))));
SELECT * FROM vt2, vt0, vt1, rt0 NOT INDEXED WHERE (((NULLIF(vt2.c0, x''))*(LTRIM(rt0.c0)))) ORDER BY CASE rt0.c3  WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c3 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt2.c0, x''))*(LTRIM(rt0.c0)))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0 ORDER BY CASE rt0.c3  WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c3 END COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt2, vt0, vt1, rt0 NOT INDEXED WHERE (((NULLIF(vt2.c0, x''))*(LTRIM(rt0.c0)))) ORDER BY CASE rt0.c3  WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c3 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt2.c0, x''))*(LTRIM(rt0.c0)))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0 ORDER BY CASE rt0.c3  WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c3 END COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt2, vt0, vt1, rt0 NOT INDEXED WHERE (((NULLIF(vt2.c0, x''))*(LTRIM(rt0.c0)))) ORDER BY CASE rt0.c3  WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c3 END COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1, vt2, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT * FROM vt1, vt2, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT * FROM vt1, vt2, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT * FROM rt0, vt2 WHERE ((((((vt2.c0 IN ()))AND(((vt2.c0) NOT BETWEEN ('-1809246571') AND (rt0.c1)))))AND(((rt0.c1)OR(NULL))))) ORDER BY (NOT (rt0.c4 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0 IN ()))AND(((vt2.c0) NOT BETWEEN ('-1809246571') AND (rt0.c1)))))AND(((rt0.c1)OR(NULL))))) IS TRUE)  as count FROM rt0, vt2 ORDER BY (NOT (rt0.c4 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM rt0, vt2 WHERE ((((((vt2.c0 IN ()))AND(((vt2.c0) NOT BETWEEN ('-1809246571') AND (rt0.c1)))))AND(((rt0.c1)OR(NULL))))) ORDER BY (NOT (rt0.c4 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0 IN ()))AND(((vt2.c0) NOT BETWEEN ('-1809246571') AND (rt0.c1)))))AND(((rt0.c1)OR(NULL))))) IS TRUE)  as count FROM rt0, vt2 ORDER BY (NOT (rt0.c4 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM rt0, vt2 WHERE ((((((vt2.c0 IN ()))AND(((vt2.c0) NOT BETWEEN ('-1809246571') AND (rt0.c1)))))AND(((rt0.c1)OR(NULL))))) ORDER BY (NOT (rt0.c4 COLLATE BINARY)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (NOT (vt0.c0)) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (NOT (vt0.c0)) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (NOT (vt0.c0)) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (NOT (vt0.c0)) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (NOT (vt0.c0)) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0 COLLATE NOCASE)) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0 COLLATE NOCASE)) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0 COLLATE NOCASE)) ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST, vt0.c0 DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'' COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'' COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'' COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((rt0.c2))=((rt0.c1))))IS(((vt0.c0)>=(rt0.c1)))) RIGHT OUTER JOIN vt1 ON CASE WHEN 0x7bec9eff THEN CAST(rt0.c2 AS INTEGER) ELSE NULL END INNER JOIN rt0 ON (NOT ((~ (NULL)))) WHERE (CAST(((rt0.c1) ISNULL) AS INTEGER)) ORDER BY (((NOT (rt0.c4)))>>(((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((rt0.c2))=((rt0.c1))))IS(((vt0.c0)>=(rt0.c1)))) RIGHT OUTER JOIN vt1 ON CASE WHEN 0x7bec9eff THEN CAST(rt0.c2 AS INTEGER) ELSE NULL END INNER JOIN rt0 ON (NOT ((~ (NULL)))) ORDER BY (((NOT (rt0.c4)))>>(((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((rt0.c2))=((rt0.c1))))IS(((vt0.c0)>=(rt0.c1)))) RIGHT OUTER JOIN vt1 ON CASE WHEN 0x7bec9eff THEN CAST(rt0.c2 AS INTEGER) ELSE NULL END INNER JOIN rt0 ON (NOT ((~ (NULL)))) WHERE (CAST(((rt0.c1) ISNULL) AS INTEGER)) ORDER BY (((NOT (rt0.c4)))>>(((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((((rt0.c2))=((rt0.c1))))IS(((vt0.c0)>=(rt0.c1)))) RIGHT OUTER JOIN vt1 ON CASE WHEN 0x7bec9eff THEN CAST(rt0.c2 AS INTEGER) ELSE NULL END INNER JOIN rt0 ON (NOT ((~ (NULL)))) ORDER BY (((NOT (rt0.c4)))>>(((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0, vt0, vt1, v0, vt2 WHERE ((((v0.c0, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((rt0.c4, v0.c0, v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((rt0.c4, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1, v0, vt2);
SELECT COUNT(*) FROM rt0, vt0, vt1, v0, vt2 WHERE ((((v0.c0, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((rt0.c4, v0.c0, v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((rt0.c4, v0.c0, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, vt1, v0, vt2);
SELECT COUNT(*) FROM rt0, vt0, vt1, v0, vt2 WHERE ((((v0.c0, rt0.c3, v0.c0)) BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((rt0.c4, v0.c0, v0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((UPPER(rt0.c4)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) AND ((((('_m')OR(rt0.c3)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c4)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) AND ((((('_m')OR(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((UPPER(rt0.c4)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) AND ((((('_m')OR(rt0.c3)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c4)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) AND ((((('_m')OR(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((UPPER(rt0.c4)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2))) AND ((((('_m')OR(rt0.c3)))OR(rt0.c2)))));
SELECT COUNT(*) FROM vt2, vt1, rt0, v0, vt0 WHERE (((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))!=(0.538530250764287))) ORDER BY ((- (vt2.c0)) IN (((rt0.c3)-(rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))!=(0.538530250764287))) IS TRUE)  as count FROM vt2, vt1, rt0, v0, vt0 ORDER BY ((- (vt2.c0)) IN (((rt0.c3)-(rt0.c4)))) DESC);
SELECT COUNT(*) FROM vt2, vt1, rt0, v0, vt0 WHERE (((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))!=(0.538530250764287))) ORDER BY ((- (vt2.c0)) IN (((rt0.c3)-(rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))!=(0.538530250764287))) IS TRUE)  as count FROM vt2, vt1, rt0, v0, vt0 ORDER BY ((- (vt2.c0)) IN (((rt0.c3)-(rt0.c4)))) DESC);
SELECT COUNT(*) FROM vt2, vt1, rt0, v0, vt0 WHERE (((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))!=(0.538530250764287))) ORDER BY ((- (vt2.c0)) IN (((rt0.c3)-(rt0.c4)))) DESC;
SELECT COUNT(*) FROM v0 CROSS JOIN vt2 ON ((CASE vt2.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.022114924645404987 WHEN vt1.c0 THEN v0.c0 END)<(vt2.c0)) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (-0.0))) ISNULL) WHERE (((((v0.c0)|(0.09201894020890844)))+((((x''))<>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(0.09201894020890844)))+((((x''))!=((v0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON ((CASE vt2.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.022114924645404987 WHEN vt1.c0 THEN v0.c0 END)<(vt2.c0)) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (-0.0))) ISNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN vt2 ON ((CASE vt2.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.022114924645404987 WHEN vt1.c0 THEN v0.c0 END)<(vt2.c0)) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (-0.0))) ISNULL) WHERE (((((v0.c0)|(0.09201894020890844)))+((((x''))<>((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(0.09201894020890844)))+((((x''))!=((v0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON ((CASE vt2.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.022114924645404987 WHEN vt1.c0 THEN v0.c0 END)<(vt2.c0)) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (-0.0))) ISNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN vt2 ON ((CASE vt2.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN 0.022114924645404987 WHEN vt1.c0 THEN v0.c0 END)<(vt2.c0)) INNER JOIN vt1 ON ((((v0.c0) NOT BETWEEN (v0.c0) AND (-0.0))) ISNULL) WHERE (((((v0.c0)|(0.09201894020890844)))+((((x''))<>((v0.c0))))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) NOT BETWEEN ('-1952856486') AND (vt0.c0)))-('-771715677')) ASC  NULLS LAST, 'u9Us';
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN ('-1952856486') AND (vt0.c0)))-('-771715677')) ASC  NULLS LAST, 'u9Us');
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) NOT BETWEEN ('-1952856486') AND (vt0.c0)))-('-771715677')) ASC  NULLS LAST, 'u9Us';
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN ('-1952856486') AND (vt0.c0)))-('-771715677')) ASC  NULLS LAST, 'u9Us');
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) NOT BETWEEN ('-1952856486') AND (vt0.c0)))-('-771715677')) ASC  NULLS LAST, 'u9Us';
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (x'ac54') AND (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (x'ac54') AND (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (x'ac54') AND (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (x'ac54') AND (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (x'ac54') AND (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) WHERE (CAST(rt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY ((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt2 WHERE (CAST(DATETIME(vt2.c0, vt2.c0, NULL) AS REAL)) ORDER BY vt2.c0, ((-1666121203)>=((- (vt2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt2.c0, vt2.c0, NULL) AS REAL)) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0, ((-1666121203)>=((- (vt2.c0)))) ASC);
SELECT COUNT(*) FROM vt2 WHERE (CAST(DATETIME(vt2.c0, vt2.c0, NULL) AS REAL)) ORDER BY vt2.c0, ((-1666121203)>=((- (vt2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt2.c0, vt2.c0, NULL) AS REAL)) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0, ((-1666121203)>=((- (vt2.c0)))) ASC);
SELECT COUNT(*) FROM vt2 WHERE (CAST(DATETIME(vt2.c0, vt2.c0, NULL) AS REAL)) ORDER BY vt2.c0, ((-1666121203)>=((- (vt2.c0)))) ASC;
SELECT ALL * FROM vt1, vt2, v0 WHERE (CASE vt2.c0  WHEN x'f594' THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END COLLATE NOCASE) ORDER BY CASE WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt2.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN 0.03831524838441702 WHEN vt1.c0 COLLATE BINARY THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) ELSE ((((vt1.c0)AND(v0.c0)))AND(vt2.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt2.c0  WHEN x'f594' THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt2, v0 ORDER BY CASE WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt2.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN 0.03831524838441702 WHEN vt1.c0 COLLATE BINARY THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) ELSE ((((vt1.c0)AND(v0.c0)))AND(vt2.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt2, v0 WHERE (CASE vt2.c0  WHEN x'f594' THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END COLLATE NOCASE) ORDER BY CASE WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt2.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN 0.03831524838441702 WHEN vt1.c0 COLLATE BINARY THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) ELSE ((((vt1.c0)AND(v0.c0)))AND(vt2.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt2.c0  WHEN x'f594' THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt2, v0 ORDER BY CASE WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt2.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN 0.03831524838441702 WHEN vt1.c0 COLLATE BINARY THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) ELSE ((((vt1.c0)AND(v0.c0)))AND(vt2.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt2, v0 WHERE (CASE vt2.c0  WHEN x'f594' THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt2.c0 END COLLATE NOCASE) ORDER BY CASE WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt2.c0) NOT BETWEEN (NULL) AND (vt1.c0)) THEN 0.03831524838441702 WHEN vt1.c0 COLLATE BINARY THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) ELSE ((((vt1.c0)AND(v0.c0)))AND(vt2.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, vt2 WHERE ('-1529067977') ORDER BY (((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((((vt2.c0)>=(vt2.c0))))), (((('-1071370165') NOTNULL))|((('1535844182') BETWEEN (vt2.c0) AND (vt2.c0))));
SELECT SUM(count) FROM (SELECT (('-1529067977') IS TRUE)  as count FROM v0, vt1, vt2 ORDER BY (((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((((vt2.c0)>=(vt2.c0))))), (((('-1071370165') NOTNULL))|((('1535844182') BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1, vt2 WHERE ('-1529067977') ORDER BY (((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((((vt2.c0)>=(vt2.c0))))), (((('-1071370165') NOTNULL))|((('1535844182') BETWEEN (vt2.c0) AND (vt2.c0))));
SELECT SUM(count) FROM (SELECT (('-1529067977') IS TRUE)  as count FROM v0, vt1, vt2 ORDER BY (((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((((vt2.c0)>=(vt2.c0))))), (((('-1071370165') NOTNULL))|((('1535844182') BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1, vt2 WHERE ('-1529067977') ORDER BY (((((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((((vt2.c0)>=(vt2.c0))))), (((('-1071370165') NOTNULL))|((('1535844182') BETWEEN (vt2.c0) AND (vt2.c0))));
SELECT * FROM v0 WHERE ((((~ (v0.c0)))LIKE(v0.c0 COLLATE NOCASE))) ORDER BY ('' IN ()) DESC, v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))LIKE(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ('' IN ()) DESC, v0.c0);
SELECT * FROM v0 WHERE ((((~ (v0.c0)))LIKE(v0.c0 COLLATE NOCASE))) ORDER BY ('' IN ()) DESC, v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))LIKE(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ('' IN ()) DESC, v0.c0);
SELECT * FROM v0 WHERE ((((~ (v0.c0)))LIKE(v0.c0 COLLATE NOCASE))) ORDER BY ('' IN ()) DESC, v0.c0;
SELECT ALL * FROM vt0, vt2, rt0, vt1, v0 WHERE (((rt0.c0 COLLATE NOCASE)%(vt1.c0 COLLATE BINARY))) ORDER BY COALESCE((- (vt0.c0)), 'NI')  NULLS FIRST, (- ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)%(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt2, rt0, vt1, v0 ORDER BY COALESCE((- (vt0.c0)), 'NI')  NULLS FIRST, (- ((rt0.c2 IN ()))));
SELECT ALL * FROM vt0, vt2, rt0, vt1, v0 WHERE (((rt0.c0 COLLATE NOCASE)%(vt1.c0 COLLATE BINARY))) ORDER BY COALESCE((- (vt0.c0)), 'NI')  NULLS FIRST, (- ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)%(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt2, rt0, vt1, v0 ORDER BY COALESCE((- (vt0.c0)), 'NI')  NULLS FIRST, (- ((rt0.c2 IN ()))));
SELECT ALL * FROM vt0, vt2, rt0, vt1, v0 WHERE (((rt0.c0 COLLATE NOCASE)%(vt1.c0 COLLATE BINARY))) ORDER BY COALESCE((- (vt0.c0)), 'NI')  NULLS FIRST, (- ((rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM v0, rt0, vt0, vt2 WHERE (UNICODE(0.35384446158295557 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNICODE(0.35384446158295557 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, vt2 WHERE (UNICODE(0.35384446158295557 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNICODE(0.35384446158295557 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, rt0, vt0, vt2 WHERE (UNICODE(0.35384446158295557 COLLATE RTRIM));
SELECT COUNT(*) FROM vt1, rt0 WHERE (COALESCE(COALESCE(rt0.c2, rt0.c1), ((rt0.c4)<>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(COALESCE(rt0.c2, rt0.c1), ((rt0.c4)<>(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (COALESCE(COALESCE(rt0.c2, rt0.c1), ((rt0.c4)<>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(COALESCE(rt0.c2, rt0.c1), ((rt0.c4)<>(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (COALESCE(COALESCE(rt0.c2, rt0.c1), ((rt0.c4)<>(rt0.c3))));
SELECT * FROM vt1, rt0 WHERE ((((CASE WHEN '1535844182' THEN rt0.c0 ELSE vt1.c0 END, (rt0.c1 IN ()), LOWER(vt1.c0)))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS TRUE), ((rt0.c4)<>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN '1535844182' THEN rt0.c0 ELSE vt1.c0 END, (rt0.c1 IN ()), LOWER(vt1.c0)))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS TRUE), ((rt0.c4)<>(rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((CASE WHEN '1535844182' THEN rt0.c0 ELSE vt1.c0 END, (rt0.c1 IN ()), LOWER(vt1.c0)))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS TRUE), ((rt0.c4)<>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN '1535844182' THEN rt0.c0 ELSE vt1.c0 END, (rt0.c1 IN ()), LOWER(vt1.c0)))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS TRUE), ((rt0.c4)<>(rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((CASE WHEN '1535844182' THEN rt0.c0 ELSE vt1.c0 END, (rt0.c1 IN ()), LOWER(vt1.c0)))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS TRUE), ((rt0.c4)<>(rt0.c1))))));
SELECT ALL * FROM vt2, vt0, vt1, v0, rt0 WHERE (LOWER(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM vt2, vt0, vt1, v0, rt0 ORDER BY vt2.c0  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, vt1, v0, rt0 WHERE (LOWER(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) IS TRUE)  as count FROM vt2, vt0, vt1, v0, rt0 ORDER BY vt2.c0  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, vt1, v0, rt0 WHERE (LOWER(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) ORDER BY vt2.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 NATURAL JOIN v0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (0.2380011941490211))) NOT BETWEEN (((vt2.c0)&(vt2.c0))) AND (((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY rt0.c3 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (0.2380011941490211))) NOT BETWEEN (((vt2.c0)&(vt2.c0))) AND (((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, rt0 NATURAL JOIN v0 ORDER BY rt0.c3 COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 NATURAL JOIN v0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (0.2380011941490211))) NOT BETWEEN (((vt2.c0)&(vt2.c0))) AND (((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY rt0.c3 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (0.2380011941490211))) NOT BETWEEN (((vt2.c0)&(vt2.c0))) AND (((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, rt0 NATURAL JOIN v0 ORDER BY rt0.c3 COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 NATURAL JOIN v0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (0.2380011941490211))) NOT BETWEEN (((vt2.c0)&(vt2.c0))) AND (((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY rt0.c3 COLLATE RTRIM ASC;
SELECT ALL * FROM v0, vt2 WHERE (((CAST(v0.c0 AS TEXT))||(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))||(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE (((CAST(v0.c0 AS TEXT))||(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))||(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE (((CAST(v0.c0 AS TEXT))||(v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)<>(vt1.c0)) THEN UNICODE(vt0.c0) END RIGHT OUTER JOIN vt2 ON CASE WHEN rt0.c4 THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c2)LIKE(rt0.c4)) THEN 0.30524720978190023 END INNER JOIN vt1 ON (+ (vt2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON rt0.c2 WHERE (((((v0.c0)IS(vt0.c0)))*(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((((rt0.c4) IS FALSE))AND(vt2.c0)))AND(rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(vt0.c0)))*(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)!=(vt1.c0)) THEN UNICODE(vt0.c0) END RIGHT OUTER JOIN vt2 ON CASE WHEN rt0.c4 THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c2)LIKE(rt0.c4)) THEN 0.30524720978190023 END INNER JOIN vt1 ON (+ (vt2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON rt0.c2 ORDER BY ((((((rt0.c4) IS FALSE))AND(vt2.c0)))AND(rt0.c4)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)<>(vt1.c0)) THEN UNICODE(vt0.c0) END RIGHT OUTER JOIN vt2 ON CASE WHEN rt0.c4 THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c2)LIKE(rt0.c4)) THEN 0.30524720978190023 END INNER JOIN vt1 ON (+ (vt2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON rt0.c2 WHERE (((((v0.c0)IS(vt0.c0)))*(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((((rt0.c4) IS FALSE))AND(vt2.c0)))AND(rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(vt0.c0)))*(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)!=(vt1.c0)) THEN UNICODE(vt0.c0) END RIGHT OUTER JOIN vt2 ON CASE WHEN rt0.c4 THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN ((rt0.c4) IS TRUE) WHEN ((rt0.c2)LIKE(rt0.c4)) THEN 0.30524720978190023 END INNER JOIN vt1 ON (+ (vt2.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON rt0.c2 ORDER BY ((((((rt0.c4) IS FALSE))AND(vt2.c0)))AND(rt0.c4)));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c3)IS(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c3)IS(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c3)IS(rt0.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM vt2 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((x'' IN ()));
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (x'') ORDER BY ((((vt0.c0)OR(NULL)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((((vt0.c0)OR(NULL)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (x'') ORDER BY ((((vt0.c0)OR(NULL)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((((vt0.c0)OR(NULL)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (x'') ORDER BY ((((vt0.c0)OR(NULL)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (- ((~ (rt0.c4)))) WHERE ((((((- (rt0.c2)))OR(((0.10066721726730532) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c2)!=('0.14613459763822167')))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(((0.10066721726730532) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c2)<>('0.14613459763822167'))))) IS TRUE)  as count FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (- ((~ (rt0.c4)))));
SELECT ALL * FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (- ((~ (rt0.c4)))) WHERE ((((((- (rt0.c2)))OR(((0.10066721726730532) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c2)!=('0.14613459763822167')))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(((0.10066721726730532) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c2)<>('0.14613459763822167'))))) IS TRUE)  as count FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (- ((~ (rt0.c4)))));
SELECT ALL * FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (- ((~ (rt0.c4)))) WHERE ((((((- (rt0.c2)))OR(((0.10066721726730532) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(((rt0.c2)!=('0.14613459763822167')))));
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))/(((rt0.c3) IS TRUE)))) ORDER BY CASE '+5'  WHEN (rt0.c2 IN (rt0.c2)) THEN ((x'')%(rt0.c0)) WHEN NULL THEN UNLIKELY(DISTINCT rt0.c3) WHEN (rt0.c0 IN ()) THEN ((0.972307985666455) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))/(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE '+5'  WHEN (rt0.c2 IN (rt0.c2)) THEN ((x'')%(rt0.c0)) WHEN NULL THEN UNLIKELY(DISTINCT rt0.c3) WHEN (rt0.c0 IN ()) THEN ((0.972307985666455) NOT NULL) END DESC);
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))/(((rt0.c3) IS TRUE)))) ORDER BY CASE '+5'  WHEN (rt0.c2 IN (rt0.c2)) THEN ((x'')%(rt0.c0)) WHEN NULL THEN UNLIKELY(DISTINCT rt0.c3) WHEN (rt0.c0 IN ()) THEN ((0.972307985666455) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))/(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE '+5'  WHEN (rt0.c2 IN (rt0.c2)) THEN ((x'')%(rt0.c0)) WHEN NULL THEN UNLIKELY(DISTINCT rt0.c3) WHEN (rt0.c0 IN ()) THEN ((0.972307985666455) NOT NULL) END DESC);
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))/(((rt0.c3) IS TRUE)))) ORDER BY CASE '+5'  WHEN (rt0.c2 IN (rt0.c2)) THEN ((x'')%(rt0.c0)) WHEN NULL THEN UNLIKELY(DISTINCT rt0.c3) WHEN (rt0.c0 IN ()) THEN ((0.972307985666455) NOT NULL) END DESC;
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0, v0 WHERE (((SQLITE_VERSION())<>(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY CASE WHEN (rt0.c3 IN (v0.c0, vt0.c0)) THEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(rt0.c1)))AND(vt1.c0)))AND(vt2.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION())!=(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0, v0 ORDER BY CASE WHEN (rt0.c3 IN (v0.c0, vt0.c0)) THEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(rt0.c1)))AND(vt1.c0)))AND(vt2.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0, v0 WHERE (((SQLITE_VERSION())<>(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY CASE WHEN (rt0.c3 IN (v0.c0, vt0.c0)) THEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(rt0.c1)))AND(vt1.c0)))AND(vt2.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION())!=(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0, v0 ORDER BY CASE WHEN (rt0.c3 IN (v0.c0, vt0.c0)) THEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(rt0.c1)))AND(vt1.c0)))AND(vt2.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0, v0 WHERE (((SQLITE_VERSION())<>(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY CASE WHEN (rt0.c3 IN (v0.c0, vt0.c0)) THEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(rt0.c1)))AND(vt1.c0)))AND(vt2.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt2.c0)&(v0.c0)))) AND ((v0.c0 COLLATE RTRIM))) WHERE ('1317494396');
SELECT SUM(count) FROM (SELECT ALL (('1317494396') IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt2.c0)&(v0.c0)))) AND ((v0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt2.c0)&(v0.c0)))) AND ((v0.c0 COLLATE RTRIM))) WHERE ('1317494396');
SELECT SUM(count) FROM (SELECT ALL (('1317494396') IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt2.c0)&(v0.c0)))) AND ((v0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt2.c0)&(v0.c0)))) AND ((v0.c0 COLLATE RTRIM))) WHERE ('1317494396');
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt0, vt2 WHERE (((((rt0.c3)LIKE(rt0.c0)))IS NOT(((v0.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)LIKE(rt0.c0)))IS NOT(((v0.c0)%(rt0.c1))))) IS TRUE)  as count FROM vt1, v0, vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt0, vt2 WHERE (((((rt0.c3)LIKE(rt0.c0)))IS NOT(((v0.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)LIKE(rt0.c0)))IS NOT(((v0.c0)%(rt0.c1))))) IS TRUE)  as count FROM vt1, v0, vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt0, vt2 WHERE (((((rt0.c3)LIKE(rt0.c0)))IS NOT(((v0.c0)%(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt2 LEFT OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR((+ (rt0.c2)))))AND(((((((((vt1.c0)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))) WHERE (((((('', rt0.c0, rt0.c2))<((vt1.c0, rt0.c0, rt0.c3)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('', rt0.c0, rt0.c2))<((vt1.c0, rt0.c0, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, v0, vt2 LEFT OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR((+ (rt0.c2)))))AND(((((((((vt1.c0)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt2 LEFT OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR((+ (rt0.c2)))))AND(((((((((vt1.c0)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))) WHERE (((((('', rt0.c0, rt0.c2))<((vt1.c0, rt0.c0, rt0.c3)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((('', rt0.c0, rt0.c2))<((vt1.c0, rt0.c0, rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, v0, vt2 LEFT OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR((+ (rt0.c2)))))AND(((((((((vt1.c0)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt2 LEFT OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR((+ (rt0.c2)))))AND(((((((((vt1.c0)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))) WHERE (((((('', rt0.c0, rt0.c2))<((vt1.c0, rt0.c0, rt0.c3)))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)&(vt0.c0))) BETWEEN (vt1.c0) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt0.c0))) BETWEEN (vt1.c0) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)&(vt0.c0))) BETWEEN (vt1.c0) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt0.c0))) BETWEEN (vt1.c0) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)&(vt0.c0))) BETWEEN (vt1.c0) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)==(v0.c0)))OR(((rt0.c3) IS TRUE))))OR((- (rt0.c2)))))AND(CASE WHEN x'' THEN rt0.c2 END)))AND((((((((('-椞L\r4]')AND(rt0.c4)))AND(NULL)))AND(rt0.c3)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)=(v0.c0)))OR(((rt0.c3) IS TRUE))))OR((- (rt0.c2)))))AND(CASE WHEN x'' THEN rt0.c2 END)))AND((((((((('-椞L\r4]')AND(rt0.c4)))AND(NULL)))AND(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)==(v0.c0)))OR(((rt0.c3) IS TRUE))))OR((- (rt0.c2)))))AND(CASE WHEN x'' THEN rt0.c2 END)))AND((((((((('-椞L\r4]')AND(rt0.c4)))AND(NULL)))AND(rt0.c3)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)=(v0.c0)))OR(((rt0.c3) IS TRUE))))OR((- (rt0.c2)))))AND(CASE WHEN x'' THEN rt0.c2 END)))AND((((((((('-椞L\r4]')AND(rt0.c4)))AND(NULL)))AND(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((v0.c0)==(v0.c0)))OR(((rt0.c3) IS TRUE))))OR((- (rt0.c2)))))AND(CASE WHEN x'' THEN rt0.c2 END)))AND((((((((('-椞L\r4]')AND(rt0.c4)))AND(NULL)))AND(rt0.c3)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))*(((((x'')OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))*(((((x'')OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))*(((((x'')OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))*(((((x'')OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))*(((((x'')OR(rt0.c0)))OR(rt0.c1)))));
SELECT * FROM v0, rt0 WHERE (INSTR(((rt0.c2)<=(rt0.c1)), ((((v0.c0)AND('DCxTBx')))AND('1178788927'))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((rt0.c2)<=(rt0.c1)), ((((v0.c0)AND('DCxTBx')))AND('1178788927')))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (INSTR(((rt0.c2)<=(rt0.c1)), ((((v0.c0)AND('DCxTBx')))AND('1178788927'))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((rt0.c2)<=(rt0.c1)), ((((v0.c0)AND('DCxTBx')))AND('1178788927')))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (INSTR(((rt0.c2)<=(rt0.c1)), ((((v0.c0)AND('DCxTBx')))AND('1178788927'))));
SELECT * FROM vt0, vt2 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt0, vt1, vt2 WHERE ((((((vt1.c0)OR(vt2.c0)))OR(vt0.c0)) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY (((vt2.c0, NULL, vt2.c0)) BETWEEN ((((vt2.c0)GLOB(vt2.c0)), (- (vt1.c0)), ((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt2.c0, 0.19539560962309466, (~ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt2.c0)))OR(vt0.c0)) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY (((vt2.c0, NULL, vt2.c0)) BETWEEN ((((vt2.c0)GLOB(vt2.c0)), (- (vt1.c0)), ((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt2.c0, 0.19539560962309466, (~ (vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0, vt1, vt2 WHERE ((((((vt1.c0)OR(vt2.c0)))OR(vt0.c0)) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY (((vt2.c0, NULL, vt2.c0)) BETWEEN ((((vt2.c0)GLOB(vt2.c0)), (- (vt1.c0)), ((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt2.c0, 0.19539560962309466, (~ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt2.c0)))OR(vt0.c0)) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY (((vt2.c0, NULL, vt2.c0)) BETWEEN ((((vt2.c0)GLOB(vt2.c0)), (- (vt1.c0)), ((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt2.c0, 0.19539560962309466, (~ (vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0, vt1, vt2 WHERE ((((((vt1.c0)OR(vt2.c0)))OR(vt0.c0)) IN (CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY (((vt2.c0, NULL, vt2.c0)) BETWEEN ((((vt2.c0)GLOB(vt2.c0)), (- (vt1.c0)), ((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))) AND ((vt2.c0, 0.19539560962309466, (~ (vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0, vt1 NOT INDEXED WHERE ((~ (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0, vt1);
SELECT COUNT(*) FROM vt0, rt0, v0, vt1 NOT INDEXED WHERE ((~ (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0, vt1);
SELECT COUNT(*) FROM vt0, rt0, v0, vt1 NOT INDEXED WHERE ((~ (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN v0 ON ((v0.c0)<<(((x'') NOT BETWEEN (NULL) AND (rt0.c4)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END)|(((vt0.c0)||(vt1.c0)))) WHERE ((((rt0.c3 COLLATE BINARY))<=((((((rt0.c2)OR(7.94177998E8)))OR(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE BINARY))<=((((((rt0.c2)OR(7.94177998E8)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN v0 ON ((v0.c0)<<(((x'') NOT BETWEEN (NULL) AND (rt0.c4)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END)|(((vt0.c0)||(vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN v0 ON ((v0.c0)<<(((x'') NOT BETWEEN (NULL) AND (rt0.c4)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END)|(((vt0.c0)||(vt1.c0)))) WHERE ((((rt0.c3 COLLATE BINARY))<=((((((rt0.c2)OR(7.94177998E8)))OR(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE BINARY))<=((((((rt0.c2)OR(7.94177998E8)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN v0 ON ((v0.c0)<<(((x'') NOT BETWEEN (NULL) AND (rt0.c4)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END)|(((vt0.c0)||(vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN v0 ON ((v0.c0)<<(((x'') NOT BETWEEN (NULL) AND (rt0.c4)))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END)|(((vt0.c0)||(vt1.c0)))) WHERE ((((rt0.c3 COLLATE BINARY))<=((((((rt0.c2)OR(7.94177998E8)))OR(rt0.c3))))));
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS LAST, 0.9281205075280944, (- ((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY v0.c0 DESC  NULLS LAST, 0.9281205075280944, (- ((vt1.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS LAST, 0.9281205075280944, (- ((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY v0.c0 DESC  NULLS LAST, 0.9281205075280944, (- ((vt1.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS LAST, 0.9281205075280944, (- ((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 WHERE (NULL COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE rt0.c3 END)))AND(((rt0.c4) BETWEEN (vt0.c0) AND (x'')))))OR(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0, vt2 ORDER BY ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE rt0.c3 END)))AND(((rt0.c4) BETWEEN (vt0.c0) AND (x'')))))OR(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 WHERE (NULL COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE rt0.c3 END)))AND(((rt0.c4) BETWEEN (vt0.c0) AND (x'')))))OR(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt0, vt2 ORDER BY ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE rt0.c3 END)))AND(((rt0.c4) BETWEEN (vt0.c0) AND (x'')))))OR(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 WHERE (NULL COLLATE NOCASE COLLATE BINARY) ORDER BY ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE rt0.c3 END)))AND(((rt0.c4) BETWEEN (vt0.c0) AND (x'')))))OR(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt1, vt2, v0 WHERE (x'41ed');
SELECT SUM(count) FROM (SELECT ALL ((x'41ed') IS TRUE)  as count FROM vt1, vt2, v0);
SELECT COUNT(*) FROM vt1, vt2, v0 WHERE (x'41ed');
SELECT SUM(count) FROM (SELECT ALL ((x'41ed') IS TRUE)  as count FROM vt1, vt2, v0);
SELECT COUNT(*) FROM vt1, vt2, v0 WHERE (x'41ed');
SELECT * FROM rt0, vt0, vt1, vt2 WHERE (((vt0.c0)=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1, vt2);
SELECT * FROM rt0, vt0, vt1, vt2 WHERE (((vt0.c0)=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)==(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1, vt2);
SELECT * FROM rt0, vt0, vt1, vt2 WHERE (((vt0.c0)=(rt0.c1)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt2, vt1 NOT INDEXED, v0, vt0 WHERE (((((rt0.c4)>=(v0.c0))) BETWEEN (((((((((vt1.c0)OR(rt0.c3)))OR(x'')))OR(rt0.c4)))AND(v0.c0))) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)>=(v0.c0))) BETWEEN (((((((((vt1.c0)OR(rt0.c3)))OR(x'')))OR(rt0.c4)))AND(v0.c0))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt2 NOT INDEXED, vt1, v0, vt0);
SELECT ALL * FROM rt0, vt2, vt1 NOT INDEXED, v0, vt0 WHERE (((((rt0.c4)>=(v0.c0))) BETWEEN (((((((((vt1.c0)OR(rt0.c3)))OR(x'')))OR(rt0.c4)))AND(v0.c0))) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)>=(v0.c0))) BETWEEN (((((((((vt1.c0)OR(rt0.c3)))OR(x'')))OR(rt0.c4)))AND(v0.c0))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt2 NOT INDEXED, vt1, v0, vt0);
SELECT ALL * FROM rt0, vt2, vt1 NOT INDEXED, v0, vt0 WHERE (((((rt0.c4)>=(v0.c0))) BETWEEN (((((((((vt1.c0)OR(rt0.c3)))OR(x'')))OR(rt0.c4)))AND(v0.c0))) AND (rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, v0, vt2 WHERE ((+ (vt2.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt2.c0))) IS TRUE)  as count FROM vt1, v0, vt2);
SELECT COUNT(*) FROM vt1, v0, vt2 WHERE ((+ (vt2.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt2.c0))) IS TRUE)  as count FROM vt1, v0, vt2);
SELECT COUNT(*) FROM vt1, v0, vt2 WHERE ((+ (vt2.c0)));
SELECT COUNT(*) FROM vt0, v0, vt2, vt1 WHERE ((((('817762910') BETWEEN (v0.c0) AND (v0.c0)))>>(1.274001423E9))) ORDER BY 'QZ}-[趣' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('817762910') BETWEEN (v0.c0) AND (v0.c0)))>>(1.274001423E9))) IS TRUE)  as count FROM vt0, v0, vt2, vt1 ORDER BY 'QZ}-[趣' ASC);
SELECT COUNT(*) FROM vt0, v0, vt2, vt1 WHERE ((((('817762910') BETWEEN (v0.c0) AND (v0.c0)))>>(1.274001423E9))) ORDER BY 'QZ}-[趣' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('817762910') BETWEEN (v0.c0) AND (v0.c0)))>>(1.274001423E9))) IS TRUE)  as count FROM vt0, v0, vt2, vt1 ORDER BY 'QZ}-[趣' ASC);
SELECT COUNT(*) FROM vt0, v0, vt2, vt1 WHERE ((((('817762910') BETWEEN (v0.c0) AND (v0.c0)))>>(1.274001423E9))) ORDER BY 'QZ}-[趣' ASC;
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE NOCASE)==(((rt0.c4)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)=(((rt0.c4)=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE NOCASE)==(((rt0.c4)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)=(((rt0.c4)=(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (((rt0.c0 COLLATE NOCASE)==(((rt0.c4)==(rt0.c2)))));
SELECT * FROM rt0, vt0, v0, vt1, vt2 WHERE ((-911834948 IN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((-911834948 IN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, vt1, vt2);
SELECT * FROM rt0, vt0, v0, vt1, vt2 WHERE ((-911834948 IN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((-911834948 IN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, vt1, vt2);
SELECT * FROM rt0, vt0, v0, vt1, vt2 WHERE ((-911834948 IN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (NULL) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, vt2, v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (NULL) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, vt2, v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (NULL) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt1.c0  WHEN ((vt0.c0)>>(0.7797647353313443)) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt0.c0)) END) ORDER BY ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt0.c0)>>(0.7797647353313443)) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((+ (vt1.c0)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt1.c0  WHEN ((vt0.c0)>>(0.7797647353313443)) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt0.c0)) END) ORDER BY ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt0.c0)>>(0.7797647353313443)) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((+ (vt1.c0)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt1.c0  WHEN ((vt0.c0)>>(0.7797647353313443)) THEN vt1.c0 COLLATE NOCASE ELSE (~ (vt0.c0)) END) ORDER BY ((+ (vt1.c0)) IN ());
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))LIKE(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))LIKE(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))LIKE(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))LIKE(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))LIKE(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt2, v0 WHERE (CAST('-798870719' AS BLOB)) ORDER BY CAST(QUOTE(vt2.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST('-798870719' AS BLOB)) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST(QUOTE(vt2.c0) AS TEXT));
SELECT * FROM vt2, v0 WHERE (CAST('-798870719' AS BLOB)) ORDER BY CAST(QUOTE(vt2.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST('-798870719' AS BLOB)) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST(QUOTE(vt2.c0) AS TEXT));
SELECT * FROM vt2, v0 WHERE (CAST('-798870719' AS BLOB)) ORDER BY CAST(QUOTE(vt2.c0) AS TEXT);
SELECT ALL COUNT(*) FROM vt1, rt0, vt2, v0 WHERE ((NOT (x''))) ORDER BY LIKELY((NOT (rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt1, rt0, vt2, v0 ORDER BY LIKELY((NOT (rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt2, v0 WHERE ((NOT (x''))) ORDER BY LIKELY((NOT (rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt1, rt0, vt2, v0 ORDER BY LIKELY((NOT (rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt2, v0 WHERE ((NOT (x''))) ORDER BY LIKELY((NOT (rt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (rt0.c2) ORDER BY v0.c0  NULLS LAST, ((0.625031250214268) NOT BETWEEN ('') AND (vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY v0.c0  NULLS LAST, ((0.625031250214268) NOT BETWEEN ('') AND (vt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (rt0.c2) ORDER BY v0.c0  NULLS LAST, ((0.625031250214268) NOT BETWEEN ('') AND (vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY v0.c0  NULLS LAST, ((0.625031250214268) NOT BETWEEN ('') AND (vt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (rt0.c2) ORDER BY v0.c0  NULLS LAST, ((0.625031250214268) NOT BETWEEN ('') AND (vt0.c0 COLLATE NOCASE)) DESC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM WHERE ((((((v0.c0))=((vt1.c0)))) NOT NULL)) ORDER BY (((NOT ('%s潨*')))AND(vt1.c0)) DESC, CAST(SQLITE_VERSION() AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM ORDER BY (((NOT ('%s潨*')))AND(vt1.c0)) DESC, CAST(SQLITE_VERSION() AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM WHERE ((((((v0.c0))=((vt1.c0)))) NOT NULL)) ORDER BY (((NOT ('%s潨*')))AND(vt1.c0)) DESC, CAST(SQLITE_VERSION() AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM ORDER BY (((NOT ('%s潨*')))AND(vt1.c0)) DESC, CAST(SQLITE_VERSION() AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN v0 ON ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM WHERE ((((((v0.c0))=((vt1.c0)))) NOT NULL)) ORDER BY (((NOT ('%s潨*')))AND(vt1.c0)) DESC, CAST(SQLITE_VERSION() AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt2 RIGHT OUTER JOIN v0 ON rt0.c3 LEFT OUTER JOIN rt0 ON (((((vt2.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, vt2.c0, vt2.c0)) AND ((rt0.c3, vt2.c0, rt0.c0))))!=(CASE rt0.c1  WHEN rt0.c4 THEN v0.c0 ELSE rt0.c4 END)) RIGHT OUTER JOIN vt0 ON ((rt0.c4) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(vt0.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON v0.c0 WHERE ((((vt1.c0, rt0.c0, 0x30be125e, rt0.c1, vt0.c0)) NOT BETWEEN ((((NULL)<=(vt2.c0)), CAST(rt0.c1 AS NUMERIC), v0.c0, ((vt1.c0)/(rt0.c4)), ((v0.c0)>(rt0.c3)))) AND ((v0.c0, (NOT (vt1.c0)), (rt0.c0 IN ()), ((rt0.c1) IS FALSE), (+ (vt1.c0)))))) ORDER BY ((vt2.c0)*((((v0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c3)) AND ((vt0.c0, vt0.c0, vt0.c0))))), (((vt0.c0)) BETWEEN ((((rt0.c3)|(v0.c0)))) AND ((((((((((v0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(vt2.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c0, 0X30be125e, rt0.c1, vt0.c0)) NOT BETWEEN ((((NULL)<=(vt2.c0)), CAST(rt0.c1 AS NUMERIC), v0.c0, ((vt1.c0)/(rt0.c4)), ((v0.c0)>(rt0.c3)))) AND ((v0.c0, (NOT (vt1.c0)), (rt0.c0 IN ()), ((rt0.c1) IS FALSE), (+ (vt1.c0)))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON rt0.c3 LEFT OUTER JOIN rt0 ON (((((vt2.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, vt2.c0, vt2.c0)) AND ((rt0.c3, vt2.c0, rt0.c0))))<>(CASE rt0.c1  WHEN rt0.c4 THEN v0.c0 ELSE rt0.c4 END)) RIGHT OUTER JOIN vt0 ON ((rt0.c4) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(vt0.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON v0.c0 ORDER BY ((vt2.c0)*((((v0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c3)) AND ((vt0.c0, vt0.c0, vt0.c0))))), (((vt0.c0)) BETWEEN ((((rt0.c3)|(v0.c0)))) AND ((((((((((v0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(vt2.c0)))OR(vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt2 RIGHT OUTER JOIN v0 ON rt0.c3 LEFT OUTER JOIN rt0 ON (((((vt2.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, vt2.c0, vt2.c0)) AND ((rt0.c3, vt2.c0, rt0.c0))))!=(CASE rt0.c1  WHEN rt0.c4 THEN v0.c0 ELSE rt0.c4 END)) RIGHT OUTER JOIN vt0 ON ((rt0.c4) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(vt0.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON v0.c0 WHERE ((((vt1.c0, rt0.c0, 0x30be125e, rt0.c1, vt0.c0)) NOT BETWEEN ((((NULL)<=(vt2.c0)), CAST(rt0.c1 AS NUMERIC), v0.c0, ((vt1.c0)/(rt0.c4)), ((v0.c0)>(rt0.c3)))) AND ((v0.c0, (NOT (vt1.c0)), (rt0.c0 IN ()), ((rt0.c1) IS FALSE), (+ (vt1.c0)))))) ORDER BY ((vt2.c0)*((((v0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c3)) AND ((vt0.c0, vt0.c0, vt0.c0))))), (((vt0.c0)) BETWEEN ((((rt0.c3)|(v0.c0)))) AND ((((((((((v0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(vt2.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c0, 0X30be125e, rt0.c1, vt0.c0)) NOT BETWEEN ((((NULL)<=(vt2.c0)), CAST(rt0.c1 AS NUMERIC), v0.c0, ((vt1.c0)/(rt0.c4)), ((v0.c0)>(rt0.c3)))) AND ((v0.c0, (NOT (vt1.c0)), (rt0.c0 IN ()), ((rt0.c1) IS FALSE), (+ (vt1.c0)))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON rt0.c3 LEFT OUTER JOIN rt0 ON (((((vt2.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, vt2.c0, vt2.c0)) AND ((rt0.c3, vt2.c0, rt0.c0))))<>(CASE rt0.c1  WHEN rt0.c4 THEN v0.c0 ELSE rt0.c4 END)) RIGHT OUTER JOIN vt0 ON ((rt0.c4) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(vt0.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) INNER JOIN vt1 ON v0.c0 ORDER BY ((vt2.c0)*((((v0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c3)) AND ((vt0.c0, vt0.c0, vt0.c0))))), (((vt0.c0)) BETWEEN ((((rt0.c3)|(v0.c0)))) AND ((((((((((v0.c0)AND(vt0.c0)))OR(rt0.c0)))AND(vt2.c0)))OR(vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, vt2, rt0, vt1 WHERE (((((CAST(vt0.c0 AS REAL))OR(vt2.c0 COLLATE BINARY)))AND((-1516096644 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))OR(vt2.c0 COLLATE BINARY)))AND((-1516096644 IN ())))) IS TRUE)  as count FROM v0, vt0, vt2, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt2, rt0, vt1 WHERE (((((CAST(vt0.c0 AS REAL))OR(vt2.c0 COLLATE BINARY)))AND((-1516096644 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))OR(vt2.c0 COLLATE BINARY)))AND((-1516096644 IN ())))) IS TRUE)  as count FROM v0, vt0, vt2, rt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt2, rt0, vt1 WHERE (((((CAST(vt0.c0 AS REAL))OR(vt2.c0 COLLATE BINARY)))AND((-1516096644 IN ()))));
SELECT * FROM v0, vt0, vt2, vt1 WHERE (vt0.c0) ORDER BY (LOWER(DISTINCT v0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt2, vt1 ORDER BY (LOWER(DISTINCT v0.c0) IN ())  NULLS LAST);
SELECT * FROM v0, vt0, vt2, vt1 WHERE (vt0.c0) ORDER BY (LOWER(DISTINCT v0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt2, vt1 ORDER BY (LOWER(DISTINCT v0.c0) IN ())  NULLS LAST);
SELECT * FROM v0, vt0, vt2, vt1 WHERE (vt0.c0) ORDER BY (LOWER(DISTINCT v0.c0) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (HEX(rt0.c4));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c4)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (HEX(rt0.c4));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c4)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (HEX(rt0.c4));
SELECT COUNT(*) FROM vt1 INNER JOIN vt2 ON ((NULL COLLATE RTRIM)OR((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))) WHERE ((('-2010021373')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (+ (0X97e194c))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-2010021373')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON ((NULL COLLATE RTRIM)OR((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))) ORDER BY (+ (0x97e194c))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt2 ON ((NULL COLLATE RTRIM)OR((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))) WHERE ((('-2010021373')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (+ (0X97e194c))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-2010021373')LIKE(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON ((NULL COLLATE RTRIM)OR((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))) ORDER BY (+ (0x97e194c))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) AS NUMERIC));
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0))<((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<((v0.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0))<((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<((v0.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((vt1.c0))<((v0.c0))) IN ()));
SELECT COUNT(*) FROM vt2, v0, vt1, vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0)))%((((vt0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt2.c0, vt0.c0)))))) ORDER BY ((((COALESCE(DISTINCT vt2.c0, v0.c0, vt2.c0, vt0.c0))AND(((v0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE ((0.040197294319671006) NOTNULL)  WHEN (- (v0.c0)) THEN NULL ELSE vt2.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))%((((vt0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt2.c0, vt0.c0)))))) IS TRUE)  as count FROM vt2, v0, vt1, vt0 ORDER BY ((((COALESCE(DISTINCT vt2.c0, v0.c0, vt2.c0, vt0.c0))AND(((v0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE ((0.040197294319671006) NOTNULL)  WHEN (- (v0.c0)) THEN NULL ELSE vt2.c0 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM vt2, v0, vt1, vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0)))%((((vt0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt2.c0, vt0.c0)))))) ORDER BY ((((COALESCE(DISTINCT vt2.c0, v0.c0, vt2.c0, vt0.c0))AND(((v0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE ((0.040197294319671006) NOTNULL)  WHEN (- (v0.c0)) THEN NULL ELSE vt2.c0 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(vt0.c0)))OR(vt0.c0)))%((((vt0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt2.c0, vt0.c0)))))) IS TRUE)  as count FROM vt2, v0, vt1, vt0 ORDER BY ((((COALESCE(DISTINCT vt2.c0, v0.c0, vt2.c0, vt0.c0))AND(((v0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE ((0.040197294319671006) NOTNULL)  WHEN (- (v0.c0)) THEN NULL ELSE vt2.c0 COLLATE NOCASE END DESC);
SELECT COUNT(*) FROM vt2, v0, vt1, vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0)))%((((vt0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt2.c0, vt0.c0)))))) ORDER BY ((((COALESCE(DISTINCT vt2.c0, v0.c0, vt2.c0, vt0.c0))AND(((v0.c0) NOTNULL))))AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE ((0.040197294319671006) NOTNULL)  WHEN (- (v0.c0)) THEN NULL ELSE vt2.c0 COLLATE NOCASE END DESC;
SELECT ALL * FROM v0 WHERE (CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)|(v0.c0)) END) ORDER BY ((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.09982670956967232))))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)|(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.09982670956967232))))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 WHERE (CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)|(v0.c0)) END) ORDER BY ((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.09982670956967232))))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)|(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.09982670956967232))))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM v0 WHERE (CASE (v0.c0 IN (v0.c0, v0.c0))  WHEN ((v0.c0) NOT NULL) THEN ((v0.c0)|(v0.c0)) END) ORDER BY ((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))OR(LIKELIHOOD(v0.c0, 0.09982670956967232))))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt2 WHERE ((0.4294127741151691 IN ((+ (vt2.c0)), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((0.4294127741151691 IN ((+ (vt2.c0)), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((0.4294127741151691 IN ((+ (vt2.c0)), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((0.4294127741151691 IN ((+ (vt2.c0)), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((0.4294127741151691 IN ((+ (vt2.c0)), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (((vt2.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) CROSS JOIN v0 ON ((INSTR(rt0.c1, rt0.c2))&(vt2.c0)) CROSS JOIN vt2 ON '-1979285925' WHERE ((vt0.c0 COLLATE RTRIM IN ('-790702092'))) ORDER BY TRIM(DISTINCT ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ('-790702092'))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON (((vt2.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) CROSS JOIN v0 ON ((INSTR(rt0.c1, rt0.c2))&(vt2.c0)) CROSS JOIN vt2 ON '-1979285925' ORDER BY TRIM(DISTINCT ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (((vt2.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) CROSS JOIN v0 ON ((INSTR(rt0.c1, rt0.c2))&(vt2.c0)) CROSS JOIN vt2 ON '-1979285925' WHERE ((vt0.c0 COLLATE RTRIM IN ('-790702092'))) ORDER BY TRIM(DISTINCT ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ('-790702092'))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON (((vt2.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) CROSS JOIN v0 ON ((INSTR(rt0.c1, rt0.c2))&(vt2.c0)) CROSS JOIN vt2 ON '-1979285925' ORDER BY TRIM(DISTINCT ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (((vt2.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) CROSS JOIN v0 ON ((INSTR(rt0.c1, rt0.c2))&(vt2.c0)) CROSS JOIN vt2 ON '-1979285925' WHERE ((vt0.c0 COLLATE RTRIM IN ('-790702092'))) ORDER BY TRIM(DISTINCT ((((vt0.c0)OR(rt0.c0)))OR(vt2.c0))) DESC;
SELECT * FROM vt2 LEFT OUTER JOIN rt0 ON (((((((((- (v0.c0)))OR('720942959')))OR((rt0.c2 IN (v0.c0)))))OR((rt0.c3 IN ()))))AND(((rt0.c4)AND(rt0.c1)))) INNER JOIN v0 ON (NOT (((0.16851010362993724) IS FALSE))) WHERE (IFNULL(TOTAL_CHANGES(), ((x'') IS TRUE))) ORDER BY (((rt0.c4)IS(rt0.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(TOTAL_CHANGES(), ((x'') IS TRUE))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN rt0 ON (((((((((- (v0.c0)))OR('720942959')))OR((rt0.c2 IN (v0.c0)))))OR((rt0.c3 IN ()))))AND(((rt0.c4)AND(rt0.c1)))) INNER JOIN v0 ON (NOT (((0.16851010362993724) IS FALSE))) ORDER BY (((rt0.c4)IS(rt0.c4)) IN ())  NULLS FIRST);
SELECT * FROM vt2 LEFT OUTER JOIN rt0 ON (((((((((- (v0.c0)))OR('720942959')))OR((rt0.c2 IN (v0.c0)))))OR((rt0.c3 IN ()))))AND(((rt0.c4)AND(rt0.c1)))) INNER JOIN v0 ON (NOT (((0.16851010362993724) IS FALSE))) WHERE (IFNULL(TOTAL_CHANGES(), ((x'') IS TRUE))) ORDER BY (((rt0.c4)IS(rt0.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(TOTAL_CHANGES(), ((x'') IS TRUE))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN rt0 ON (((((((((- (v0.c0)))OR('720942959')))OR((rt0.c2 IN (v0.c0)))))OR((rt0.c3 IN ()))))AND(((rt0.c4)AND(rt0.c1)))) INNER JOIN v0 ON (NOT (((0.16851010362993724) IS FALSE))) ORDER BY (((rt0.c4)IS(rt0.c4)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, vt2, rt0 WHERE ((((rt0.c2 IN (vt1.c0)))-(rt0.c4))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt1.c0)))-(rt0.c4))) IS TRUE)  as count FROM v0, vt1, vt2, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, vt2, rt0 WHERE ((((rt0.c2 IN (vt1.c0)))-(rt0.c4))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt1.c0)))-(rt0.c4))) IS TRUE)  as count FROM v0, vt1, vt2, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, vt2, rt0 WHERE ((((rt0.c2 IN (vt1.c0)))-(rt0.c4))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2, rt0 WHERE (((rt0.c1)LIKE(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(vt2.c0)))AND(rt0.c0))))) ORDER BY TRIM(rt0.c0, ((0.727714074676718)&(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)LIKE(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(vt2.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY TRIM(rt0.c0, ((0.727714074676718)&(rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0 WHERE (((rt0.c1)LIKE(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(vt2.c0)))AND(rt0.c0))))) ORDER BY TRIM(rt0.c0, ((0.727714074676718)&(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)LIKE(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(vt2.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY TRIM(rt0.c0, ((0.727714074676718)&(rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0 WHERE (((rt0.c1)LIKE(((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))AND(vt2.c0)))AND(rt0.c0))))) ORDER BY TRIM(rt0.c0, ((0.727714074676718)&(rt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, vt2 RIGHT OUTER JOIN v0 ON (rt0.c1 IN ()) COLLATE BINARY WHERE ((((vt1.c0, rt0.c2, rt0.c4)) BETWEEN ((((vt2.c0)IS(rt0.c0)), (NOT (vt2.c0)), CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((NULL, (rt0.c2 IN ()), ((rt0.c1)-(vt1.c0)))))) ORDER BY ((((vt1.c0) IS FALSE))&(CAST(rt0.c3 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c2, rt0.c4)) BETWEEN ((((vt2.c0)IS(rt0.c0)), (NOT (vt2.c0)), CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((NULL, (rt0.c2 IN ()), ((rt0.c1)-(vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1, vt2 RIGHT OUTER JOIN v0 ON (rt0.c1 IN ()) COLLATE BINARY ORDER BY ((((vt1.c0) IS FALSE))&(CAST(rt0.c3 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt1, vt2 RIGHT OUTER JOIN v0 ON (rt0.c1 IN ()) COLLATE BINARY WHERE ((((vt1.c0, rt0.c2, rt0.c4)) BETWEEN ((((vt2.c0)IS(rt0.c0)), (NOT (vt2.c0)), CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((NULL, (rt0.c2 IN ()), ((rt0.c1)-(vt1.c0)))))) ORDER BY ((((vt1.c0) IS FALSE))&(CAST(rt0.c3 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, rt0.c2, rt0.c4)) BETWEEN ((((vt2.c0)IS(rt0.c0)), (NOT (vt2.c0)), CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((NULL, (rt0.c2 IN ()), ((rt0.c1)-(vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1, vt2 RIGHT OUTER JOIN v0 ON (rt0.c1 IN ()) COLLATE BINARY ORDER BY ((((vt1.c0) IS FALSE))&(CAST(rt0.c3 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt1, vt2 RIGHT OUTER JOIN v0 ON (rt0.c1 IN ()) COLLATE BINARY WHERE ((((vt1.c0, rt0.c2, rt0.c4)) BETWEEN ((((vt2.c0)IS(rt0.c0)), (NOT (vt2.c0)), CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 END)) AND ((NULL, (rt0.c2 IN ()), ((rt0.c1)-(vt1.c0)))))) ORDER BY ((((vt1.c0) IS FALSE))&(CAST(rt0.c3 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM vt2 NOT INDEXED, v0, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt2, v0, rt0);
SELECT COUNT(*) FROM vt2 NOT INDEXED, v0, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt2, v0, rt0);
SELECT COUNT(*) FROM vt2 NOT INDEXED, v0, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))&(UPPER(DISTINCT rt0.c1)))) ORDER BY (NOT (((rt0.c3) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))&(UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (((rt0.c3) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))&(UPPER(DISTINCT rt0.c1)))) ORDER BY (NOT (((rt0.c3) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))&(UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (((rt0.c3) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))&(UPPER(DISTINCT rt0.c1)))) ORDER BY (NOT (((rt0.c3) NOT NULL))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (x'') ORDER BY (((rt0.c1 IN ()))%(((rt0.c3)AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY (((rt0.c1 IN ()))%(((rt0.c3)AND(rt0.c3)))));
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (x'') ORDER BY (((rt0.c1 IN ()))%(((rt0.c3)AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY (((rt0.c1 IN ()))%(((rt0.c3)AND(rt0.c3)))));
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (x'') ORDER BY (((rt0.c1 IN ()))%(((rt0.c3)AND(rt0.c3))));
SELECT * FROM vt0, vt2 WHERE ((((vt0.c0)) BETWEEN ((vt2.c0 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt2.c0 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, vt2 WHERE ((((vt0.c0)) BETWEEN ((vt2.c0 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt2.c0 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, vt2 WHERE ((((vt0.c0)) BETWEEN ((vt2.c0 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS TEXT))))) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((- (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY '-246365427' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, vt2, v0 ORDER BY '-246365427' DESC);
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY '-246365427' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, vt2, v0 ORDER BY '-246365427' DESC);
SELECT COUNT(*) FROM vt0, rt0, vt2, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (CAST(rt0.c2 AS INTEGER)))) ORDER BY '-246365427' DESC;
SELECT COUNT(*) FROM v0, vt2 WHERE (CAST(((vt2.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0, vt2);
SELECT COUNT(*) FROM v0, vt2 WHERE (CAST(((vt2.c0) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0) IS TRUE) AS REAL)) IS TRUE)  as count FROM v0, vt2);
SELECT COUNT(*) FROM v0, vt2 WHERE (CAST(((vt2.c0) IS TRUE) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)OR(-6.0572353E7)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY ((TYPEOF(DISTINCT vt1.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(-6.0572353E7)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((TYPEOF(DISTINCT vt1.c0)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)OR(-6.0572353E7)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY ((TYPEOF(DISTINCT vt1.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(-6.0572353E7)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((TYPEOF(DISTINCT vt1.c0)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)OR(-6.0572353E7)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY ((TYPEOF(DISTINCT vt1.c0)) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0, vt2, vt0, vt1, v0 WHERE (((((rt0.c0) IS TRUE))>>(NULL))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))>>(NULL))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt2, vt0, vt1, v0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM rt0, vt2, vt0, vt1, v0 WHERE (((((rt0.c0) IS TRUE))>>(NULL))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))>>(NULL))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt2, vt0, vt1, v0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM rt0, vt2, vt0, vt1, v0 WHERE (((((rt0.c0) IS TRUE))>>(NULL))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt1, vt2 WHERE ((NOT (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt1, vt2);
SELECT COUNT(*) FROM rt0, v0, vt1, vt2 WHERE ((NOT (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt1, vt2);
SELECT COUNT(*) FROM rt0, v0, vt1, vt2 WHERE ((NOT (v0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0)|(rt0.c3)))>>((((('-1677818095')OR(x'')))OR(vt0.c0)))) CROSS JOIN v0 ON (((((rt0.c2)<=(vt1.c0))))<=((((v0.c0)|('%s潨*'))))) WHERE ((+ ((('-1644295261') IS FALSE)))) ORDER BY '' COLLATE RTRIM  NULLS LAST, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-1644295261') IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0)|(rt0.c3)))>>((((('-1677818095')OR(x'')))OR(vt0.c0)))) CROSS JOIN v0 ON (((((rt0.c2)<=(vt1.c0))))<=((((v0.c0)|('%s潨*'))))) ORDER BY '' COLLATE RTRIM  NULLS LAST, vt1.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0)|(rt0.c3)))>>((((('-1677818095')OR(x'')))OR(vt0.c0)))) CROSS JOIN v0 ON (((((rt0.c2)<=(vt1.c0))))<=((((v0.c0)|('%s潨*'))))) WHERE ((+ ((('-1644295261') IS FALSE)))) ORDER BY '' COLLATE RTRIM  NULLS LAST, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-1644295261') IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0)|(rt0.c3)))>>((((('-1677818095')OR(x'')))OR(vt0.c0)))) CROSS JOIN v0 ON (((((rt0.c2)<=(vt1.c0))))<=((((v0.c0)|('%s潨*'))))) ORDER BY '' COLLATE RTRIM  NULLS LAST, vt1.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0)|(rt0.c3)))>>((((('-1677818095')OR(x'')))OR(vt0.c0)))) CROSS JOIN v0 ON (((((rt0.c2)<=(vt1.c0))))<=((((v0.c0)|('%s潨*'))))) WHERE ((+ ((('-1644295261') IS FALSE)))) ORDER BY '' COLLATE RTRIM  NULLS LAST, vt1.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, v0, rt0, vt1 WHERE (x'') ORDER BY ((CASE WHEN v0.c0 THEN rt0.c4 END) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))))  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, v0, rt0, vt1 ORDER BY ((CASE WHEN v0.c0 THEN rt0.c4 END) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))))  NULLS LAST, rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, v0, rt0, vt1 WHERE (x'') ORDER BY ((CASE WHEN v0.c0 THEN rt0.c4 END) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))))  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, v0, rt0, vt1 ORDER BY ((CASE WHEN v0.c0 THEN rt0.c4 END) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))))  NULLS LAST, rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, v0, rt0, vt1 WHERE (x'') ORDER BY ((CASE WHEN v0.c0 THEN rt0.c4 END) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))))  NULLS LAST, rt0.c1  NULLS LAST;
SELECT ALL * FROM v0, vt1, rt0, vt2 WHERE ((~ (rt0.c4)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((('#z')&(rt0.c1))) BETWEEN (0.33851612179767054 COLLATE BINARY) AND (((((rt0.c4)OR(vt1.c0)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c4)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, rt0, vt2 ORDER BY (((('#z')&(rt0.c1))) BETWEEN (0.33851612179767054 COLLATE BINARY) AND (((((rt0.c4)OR(vt1.c0)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, rt0, vt2 WHERE ((~ (rt0.c4)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((('#z')&(rt0.c1))) BETWEEN (0.33851612179767054 COLLATE BINARY) AND (((((rt0.c4)OR(vt1.c0)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c4)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, rt0, vt2 ORDER BY (((('#z')&(rt0.c1))) BETWEEN (0.33851612179767054 COLLATE BINARY) AND (((((rt0.c4)OR(vt1.c0)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, rt0, vt2 WHERE ((~ (rt0.c4)) COLLATE BINARY COLLATE NOCASE) ORDER BY (((('#z')&(rt0.c1))) BETWEEN (0.33851612179767054 COLLATE BINARY) AND (((((rt0.c4)OR(vt1.c0)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt2, vt0 CROSS JOIN vt1 ON (NOT (CASE NULL  WHEN vt2.c0 THEN vt0.c0 ELSE rt0.c1 END)) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)AND('6묽9笎8p2A')))AND(rt0.c2)))>=(((vt0.c0)IS(rt0.c4)))) WHERE (CAST(0.05536702543155647 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.05536702543155647 AS TEXT)) IS TRUE)  as count FROM v0, vt2, vt0 CROSS JOIN vt1 ON (NOT (CASE NULL  WHEN vt2.c0 THEN vt0.c0 ELSE rt0.c1 END)) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)AND('6묽9笎8p2A')))AND(rt0.c2)))>=(((vt0.c0)IS(rt0.c4)))));
SELECT COUNT(*) FROM v0, vt2, vt0 CROSS JOIN vt1 ON (NOT (CASE NULL  WHEN vt2.c0 THEN vt0.c0 ELSE rt0.c1 END)) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)AND('6묽9笎8p2A')))AND(rt0.c2)))>=(((vt0.c0)IS(rt0.c4)))) WHERE (CAST(0.05536702543155647 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.05536702543155647 AS TEXT)) IS TRUE)  as count FROM v0, vt2, vt0 CROSS JOIN vt1 ON (NOT (CASE NULL  WHEN vt2.c0 THEN vt0.c0 ELSE rt0.c1 END)) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0)AND('6묽9笎8p2A')))AND(rt0.c2)))>=(((vt0.c0)IS(rt0.c4)))));
SELECT ALL * FROM v0, vt2, vt0, rt0 WHERE (((v0.c0 COLLATE BINARY)AND((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3))) ISNULL), x'';
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)AND((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0, vt2, vt0, rt0 ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3))) ISNULL), x'');
SELECT ALL * FROM v0, vt2, vt0, rt0 WHERE (((v0.c0 COLLATE BINARY)AND((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3))) ISNULL), x'';
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)AND((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0, vt2, vt0, rt0 ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3))) ISNULL), x'');
SELECT ALL * FROM v0, vt2, vt0, rt0 WHERE (((v0.c0 COLLATE BINARY)AND((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c3))) ISNULL), x'';
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ('') ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST, ((NULL) NOT NULL) DESC, (+ (rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST, ((NULL) NOT NULL) DESC, (+ (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ('') ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST, ((NULL) NOT NULL) DESC, (+ (rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST, ((NULL) NOT NULL) DESC, (+ (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ('') ORDER BY (~ ((NOT (v0.c0)))) DESC  NULLS FIRST, ((NULL) NOT NULL) DESC, (+ (rt0.c0)) COLLATE RTRIM;
SELECT ALL * FROM v0 WHERE (json_array_length((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_array_length((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_array_length((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)OR(rt0.c1)) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)OR(rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)OR(rt0.c1)) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c0)OR(rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c0)OR(rt0.c1)) IN (rt0.c1)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM((((vt0.c0)) NOT BETWEEN (('')) AND ((v0.c0))), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0)) NOT BETWEEN (('')) AND ((v0.c0))), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM((((vt0.c0)) NOT BETWEEN (('')) AND ((v0.c0))), vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0)) NOT BETWEEN (('')) AND ((v0.c0))), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (TRIM((((vt0.c0)) NOT BETWEEN (('')) AND ((v0.c0))), vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt2 INNER JOIN vt0 ON CAST('208270175' AS REAL) COLLATE NOCASE WHERE (((((x'')<<(vt2.c0)))IS NOT((vt2.c0 IN ())))) ORDER BY (((- (vt2.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<<(vt2.c0)))IS NOT((vt2.c0 IN ())))) IS TRUE)  as count FROM vt2 INNER JOIN vt0 ON CAST('208270175' AS REAL) COLLATE NOCASE ORDER BY (((- (vt2.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt2 INNER JOIN vt0 ON CAST('208270175' AS REAL) COLLATE NOCASE WHERE (((((x'')<<(vt2.c0)))IS NOT((vt2.c0 IN ())))) ORDER BY (((- (vt2.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')<<(vt2.c0)))IS NOT((vt2.c0 IN ())))) IS TRUE)  as count FROM vt2 INNER JOIN vt0 ON CAST('208270175' AS REAL) COLLATE NOCASE ORDER BY (((- (vt2.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt2 INNER JOIN vt0 ON CAST('208270175' AS REAL) COLLATE NOCASE WHERE (((((x'')<<(vt2.c0)))IS NOT((vt2.c0 IN ())))) ORDER BY (((- (vt2.c0))) IS FALSE) DESC;
SELECT ALL * FROM vt2, v0 WHERE (((MIN(v0.c0, vt2.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((MIN(v0.c0, vt2.c0)) IS FALSE)) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (((MIN(v0.c0, vt2.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((MIN(v0.c0, vt2.c0)) IS FALSE)) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (((MIN(v0.c0, vt2.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, v0, vt2, vt1 WHERE (((((((((((((STRFTIME(vt0.c0, vt1.c0, 0x67b1c6a0))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END)))AND(x'')))AND(TOTAL_CHANGES())))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR((((v0.c0))>=((vt0.c0))))))AND(vt1.c0))) ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC  NULLS LAST, ((vt2.c0) BETWEEN (((((((((vt1.c0)AND(vt2.c0)))OR(v0.c0)))AND(-6.0572353E7)))AND(v0.c0))) AND (((v0.c0) ISNULL)))  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(CAST(NULL AS TEXT))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((STRFTIME(vt0.c0, vt1.c0, 0X67b1c6a0))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END)))AND(x'')))AND(TOTAL_CHANGES())))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR((((v0.c0))>=((vt0.c0))))))AND(vt1.c0))) IS TRUE)  as count FROM vt0, v0, vt2, vt1 ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC  NULLS LAST, ((vt2.c0) BETWEEN (((((((((vt1.c0)AND(vt2.c0)))OR(v0.c0)))AND(-6.0572353E7)))AND(v0.c0))) AND (((v0.c0) ISNULL)))  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(CAST(NULL AS TEXT))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt2, vt1 WHERE (((((((((((((STRFTIME(vt0.c0, vt1.c0, 0x67b1c6a0))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END)))AND(x'')))AND(TOTAL_CHANGES())))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR((((v0.c0))>=((vt0.c0))))))AND(vt1.c0))) ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC  NULLS LAST, ((vt2.c0) BETWEEN (((((((((vt1.c0)AND(vt2.c0)))OR(v0.c0)))AND(-6.0572353E7)))AND(v0.c0))) AND (((v0.c0) ISNULL)))  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(CAST(NULL AS TEXT))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((STRFTIME(vt0.c0, vt1.c0, 0X67b1c6a0))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END)))AND(x'')))AND(TOTAL_CHANGES())))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR((((v0.c0))>=((vt0.c0))))))AND(vt1.c0))) IS TRUE)  as count FROM vt0, v0, vt2, vt1 ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC  NULLS LAST, ((vt2.c0) BETWEEN (((((((((vt1.c0)AND(vt2.c0)))OR(v0.c0)))AND(-6.0572353E7)))AND(v0.c0))) AND (((v0.c0) ISNULL)))  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(CAST(NULL AS TEXT))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt2, vt1 WHERE (((((((((((((STRFTIME(vt0.c0, vt1.c0, 0x67b1c6a0))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE v0.c0 END)))AND(x'')))AND(TOTAL_CHANGES())))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))OR((((v0.c0))>=((vt0.c0))))))AND(vt1.c0))) ORDER BY ((v0.c0) NOTNULL) COLLATE RTRIM ASC  NULLS LAST, ((vt2.c0) BETWEEN (((((((((vt1.c0)AND(vt2.c0)))OR(v0.c0)))AND(-6.0572353E7)))AND(v0.c0))) AND (((v0.c0) ISNULL)))  NULLS FIRST, ((((((vt0.c0) NOTNULL))OR(CAST(NULL AS TEXT))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)>(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((NOT (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((NOT (vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)>(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((NOT (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((NOT (vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)>(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)&(vt1.c0)))) AND (((NOT (vt1.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt2, vt1, rt0 WHERE (((((load_extension(rt0.c0))OR(CASE WHEN x'' THEN rt0.c3 END)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((load_extension(rt0.c0))OR(CASE WHEN x'' THEN rt0.c3 END)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, vt2, vt1, rt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt1, rt0 WHERE (((((load_extension(rt0.c0))OR(CASE WHEN x'' THEN rt0.c3 END)))AND((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((load_extension(rt0.c0))OR(CASE WHEN x'' THEN rt0.c3 END)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, vt2, vt1, rt0);
SELECT * FROM vt0, v0, vt2, rt0, vt1 WHERE (CAST(CASE WHEN rt0.c2 THEN v0.c0 END AS INTEGER)) ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(vt1.c0, vt0.c0))) AND (('秡)'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0, vt2, rt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(vt1.c0, vt0.c0))) AND (('秡)'))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, vt2, rt0, vt1 WHERE (CAST(CASE WHEN rt0.c2 THEN v0.c0 END AS INTEGER)) ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(vt1.c0, vt0.c0))) AND (('秡)'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0, vt2, rt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(vt1.c0, vt0.c0))) AND (('秡)'))) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, vt2, rt0, vt1 WHERE (CAST(CASE WHEN rt0.c2 THEN v0.c0 END AS INTEGER)) ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(vt1.c0, vt0.c0))) AND (('秡)'))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0, vt2 WHERE (((vt0.c0)*(0Xffffffff80748789)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(0Xffffffff80748789))) IS TRUE)  as count FROM v0, vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, vt2 WHERE (((vt0.c0)*(0Xffffffff80748789)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(0Xffffffff80748789))) IS TRUE)  as count FROM v0, vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, vt2 WHERE (((vt0.c0)*(0Xffffffff80748789)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0, vt2 WHERE (((0.98389711699956)>=(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.98389711699956)>=(vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, vt2 WHERE (((0.98389711699956)>=(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.98389711699956)>=(vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, vt2 WHERE (((0.98389711699956)>=(vt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0, v0, rt0 CROSS JOIN vt2 ON PRINTF(((rt0.c2) IS FALSE)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, v0, rt0 CROSS JOIN vt2 ON PRINTF(((rt0.c2) IS FALSE)));
SELECT COUNT(*) FROM vt1, vt0, v0, rt0 CROSS JOIN vt2 ON PRINTF(((rt0.c2) IS FALSE)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, v0, rt0 CROSS JOIN vt2 ON PRINTF(((rt0.c2) IS FALSE)));
SELECT COUNT(*) FROM vt1, vt0, v0, rt0 CROSS JOIN vt2 ON PRINTF(((rt0.c2) IS FALSE)) WHERE (x'');
SELECT * FROM vt1, vt2, vt0 WHERE (((vt1.c0 COLLATE RTRIM)+(((vt1.c0)/(vt0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE), (+ (vt1.c0)), vt0.c0)) AND ((0.7576734810545543, (((vt1.c0))>((vt1.c0))), ((vt2.c0)<(vt2.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)+(((vt1.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt1, vt2, vt0 ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE), (+ (vt1.c0)), vt0.c0)) AND ((0.7576734810545543, (((vt1.c0))>((vt1.c0))), ((vt2.c0)<(vt2.c0))))) ASC);
SELECT * FROM vt1, vt2, vt0 WHERE (((vt1.c0 COLLATE RTRIM)+(((vt1.c0)/(vt0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE), (+ (vt1.c0)), vt0.c0)) AND ((0.7576734810545543, (((vt1.c0))>((vt1.c0))), ((vt2.c0)<(vt2.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)+(((vt1.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt1, vt2, vt0 ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE), (+ (vt1.c0)), vt0.c0)) AND ((0.7576734810545543, (((vt1.c0))>((vt1.c0))), ((vt2.c0)<(vt2.c0))))) ASC);
SELECT * FROM vt1, vt2, vt0 WHERE (((vt1.c0 COLLATE RTRIM)+(((vt1.c0)/(vt0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE), (+ (vt1.c0)), vt0.c0)) AND ((0.7576734810545543, (((vt1.c0))>((vt1.c0))), ((vt2.c0)<(vt2.c0))))) ASC;
SELECT * FROM vt2 CROSS JOIN vt1 ON 0xffffffffcc5ed41d INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))=((+ (vt1.c0)))) INNER JOIN vt0 ON ((rt0.c0)!=(CAST(rt0.c4 AS INTEGER))) WHERE (rt0.c4) ORDER BY (((('-1060980962')OR(((vt2.c0)IS(rt0.c2)))))AND(((rt0.c4) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt2 CROSS JOIN vt1 ON 0xffffffffcc5ed41d INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))==((+ (vt1.c0)))) INNER JOIN vt0 ON ((rt0.c0)<>(CAST(rt0.c4 AS INTEGER))) ORDER BY (((('-1060980962')OR(((vt2.c0)IS(rt0.c2)))))AND(((rt0.c4) NOT NULL))) DESC);
SELECT * FROM vt2 CROSS JOIN vt1 ON 0xffffffffcc5ed41d INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))=((+ (vt1.c0)))) INNER JOIN vt0 ON ((rt0.c0)!=(CAST(rt0.c4 AS INTEGER))) WHERE (rt0.c4) ORDER BY (((('-1060980962')OR(((vt2.c0)IS(rt0.c2)))))AND(((rt0.c4) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt2 CROSS JOIN vt1 ON 0xffffffffcc5ed41d INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))==((+ (vt1.c0)))) INNER JOIN vt0 ON ((rt0.c0)<>(CAST(rt0.c4 AS INTEGER))) ORDER BY (((('-1060980962')OR(((vt2.c0)IS(rt0.c2)))))AND(((rt0.c4) NOT NULL))) DESC);
SELECT * FROM vt2 CROSS JOIN vt1 ON 0xffffffffcc5ed41d INNER JOIN rt0 ON ((((rt0.c1) NOTNULL))=((+ (vt1.c0)))) INNER JOIN vt0 ON ((rt0.c0)!=(CAST(rt0.c4 AS INTEGER))) WHERE (rt0.c4) ORDER BY (((('-1060980962')OR(((vt2.c0)IS(rt0.c2)))))AND(((rt0.c4) NOT NULL))) DESC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c1) IS FALSE) THEN ((vt1.c0) IS TRUE) ELSE (rt0.c2 IN (0X50e930eb)) END LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c0 END, TRIM(rt0.c4)) WHERE (((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL)) ORDER BY ((((NULLIF(vt1.c0, vt0.c0))OR((~ (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c1) IS FALSE) THEN ((vt1.c0) IS TRUE) ELSE (rt0.c2 IN (0X50e930eb)) END LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c0 END, TRIM(rt0.c4)) ORDER BY ((((NULLIF(vt1.c0, vt0.c0))OR((~ (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c1) IS FALSE) THEN ((vt1.c0) IS TRUE) ELSE (rt0.c2 IN (0X50e930eb)) END LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c0 END, TRIM(rt0.c4)) WHERE (((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL)) ORDER BY ((((NULLIF(vt1.c0, vt0.c0))OR((~ (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c1) IS FALSE) THEN ((vt1.c0) IS TRUE) ELSE (rt0.c2 IN (0X50e930eb)) END LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c0 END, TRIM(rt0.c4)) ORDER BY ((((NULLIF(vt1.c0, vt0.c0))OR((~ (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c1) IS FALSE) THEN ((vt1.c0) IS TRUE) ELSE (rt0.c2 IN (0X50e930eb)) END LEFT OUTER JOIN vt0 ON IFNULL(DISTINCT CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c0 END, TRIM(rt0.c4)) WHERE (((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))) NOTNULL)) ORDER BY ((((NULLIF(vt1.c0, vt0.c0))OR((~ (rt0.c2)))))OR(rt0.c1 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt2, rt0, vt1, v0 WHERE (v0.c0) ORDER BY CASE ((x'82b5') NOT NULL)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((vt2.c0) BETWEEN (rt0.c4) AND ('')) WHEN (((rt0.c1, vt1.c0, vt2.c0, rt0.c1, rt0.c1)) BETWEEN ((vt1.c0, vt2.c0, x'985d', v0.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, rt0.c1, rt0.c0, rt0.c2))) THEN (~ (rt0.c4)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c4)) THEN ((vt2.c0) NOT BETWEEN (-1.750222019E9) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2, rt0, vt1, v0 ORDER BY CASE ((x'82b5') NOT NULL)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((vt2.c0) BETWEEN (rt0.c4) AND ('')) WHEN (((rt0.c1, vt1.c0, vt2.c0, rt0.c1, rt0.c1)) BETWEEN ((vt1.c0, vt2.c0, x'985d', v0.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, rt0.c1, rt0.c0, rt0.c2))) THEN (~ (rt0.c4)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c4)) THEN ((vt2.c0) NOT BETWEEN (-1.750222019E9) AND (rt0.c2)) END);
SELECT COUNT(*) FROM vt2, rt0, vt1, v0 WHERE (v0.c0) ORDER BY CASE ((x'82b5') NOT NULL)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((vt2.c0) BETWEEN (rt0.c4) AND ('')) WHEN (((rt0.c1, vt1.c0, vt2.c0, rt0.c1, rt0.c1)) BETWEEN ((vt1.c0, vt2.c0, x'985d', v0.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, rt0.c1, rt0.c0, rt0.c2))) THEN (~ (rt0.c4)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c4)) THEN ((vt2.c0) NOT BETWEEN (-1.750222019E9) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2, rt0, vt1, v0 ORDER BY CASE ((x'82b5') NOT NULL)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((vt2.c0) BETWEEN (rt0.c4) AND ('')) WHEN (((rt0.c1, vt1.c0, vt2.c0, rt0.c1, rt0.c1)) BETWEEN ((vt1.c0, vt2.c0, x'985d', v0.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, rt0.c1, rt0.c0, rt0.c2))) THEN (~ (rt0.c4)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c4)) THEN ((vt2.c0) NOT BETWEEN (-1.750222019E9) AND (rt0.c2)) END);
SELECT COUNT(*) FROM vt2, rt0, vt1, v0 WHERE (v0.c0) ORDER BY CASE ((x'82b5') NOT NULL)  WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((vt2.c0) BETWEEN (rt0.c4) AND ('')) WHEN (((rt0.c1, vt1.c0, vt2.c0, rt0.c1, rt0.c1)) BETWEEN ((vt1.c0, vt2.c0, x'985d', v0.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, rt0.c1, rt0.c0, rt0.c2))) THEN (~ (rt0.c4)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c4)) THEN ((vt2.c0) NOT BETWEEN (-1.750222019E9) AND (rt0.c2)) END;
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt0, vt2 WHERE (ABS(rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, v0, vt0, vt2);
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt0, vt2 WHERE (ABS(rt0.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, v0, vt0, vt2);
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt0, vt2 WHERE (ABS(rt0.c3) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE ((+ ((~ (vt1.c0))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON rt0.c0 ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE ((+ ((~ (vt1.c0))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt1.c0))))) IS TRUE)  as count FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON rt0.c0 ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt1 RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE ((+ ((~ (vt1.c0))))) ORDER BY ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt2, rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt1, vt2, rt0);
SELECT COUNT(*) FROM vt1, vt2, rt0 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt1, vt2, rt0);
SELECT COUNT(*) FROM vt1, vt2, rt0 WHERE ((~ (NULL)));
SELECT * FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0 IN ()))<<(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt1.c0 END)) CROSS JOIN rt0 ON rtreenode(CAST(v0.c0 AS INTEGER), (((rt0.c0, rt0.c0, vt0.c0, rt0.c2, v0.c0))>=((vt1.c0, rt0.c1, '0.6347250015085264', vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (('*|Q쌍mg')IS NOT(((vt2.c0)||(v0.c0)))) LEFT OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c3, -577556925))IS(v0.c0)) WHERE (((vt0.c0 COLLATE BINARY)<<(vt1.c0))) ORDER BY ((NOT (vt2.c0)) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)<<(vt1.c0))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0 IN ()))<<(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt1.c0 END)) CROSS JOIN rt0 ON rtreenode(CAST(v0.c0 AS INTEGER), (((rt0.c0, rt0.c0, vt0.c0, rt0.c2, v0.c0))>=((vt1.c0, rt0.c1, '0.6347250015085264', vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (('*|Q쌍mg')IS NOT(((vt2.c0)||(v0.c0)))) LEFT OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c3, -577556925))IS(v0.c0)) ORDER BY ((NOT (vt2.c0)) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0)<=(rt0.c3)))));
SELECT * FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0 IN ()))<<(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt1.c0 END)) CROSS JOIN rt0 ON rtreenode(CAST(v0.c0 AS INTEGER), (((rt0.c0, rt0.c0, vt0.c0, rt0.c2, v0.c0))>=((vt1.c0, rt0.c1, '0.6347250015085264', vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (('*|Q쌍mg')IS NOT(((vt2.c0)||(v0.c0)))) LEFT OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c3, -577556925))IS(v0.c0)) WHERE (((vt0.c0 COLLATE BINARY)<<(vt1.c0))) ORDER BY ((NOT (vt2.c0)) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)<<(vt1.c0))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0 IN ()))<<(CASE WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 ELSE vt1.c0 END)) CROSS JOIN rt0 ON rtreenode(CAST(v0.c0 AS INTEGER), (((rt0.c0, rt0.c0, vt0.c0, rt0.c2, v0.c0))>=((vt1.c0, rt0.c1, '0.6347250015085264', vt0.c0, vt1.c0)))) CROSS JOIN vt0 ON (('*|Q쌍mg')IS NOT(((vt2.c0)||(v0.c0)))) LEFT OUTER JOIN v0 ON ((IFNULL(DISTINCT rt0.c3, -577556925))IS(v0.c0)) ORDER BY ((NOT (vt2.c0)) IN (rt0.c2 COLLATE NOCASE, ((vt0.c0)<=(rt0.c3)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))<(((rt0.c4) IS TRUE)))) ORDER BY (+ (((rt0.c4)%(rt0.c4)))) ASC  NULLS LAST, '2007142872' DESC  NULLS FIRST, (CASE WHEN v0.c0 THEN rt0.c3 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER))<(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c4)%(rt0.c4)))) ASC  NULLS LAST, '2007142872' DESC  NULLS FIRST, (CASE WHEN v0.c0 THEN rt0.c3 END IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))<(((rt0.c4) IS TRUE)))) ORDER BY (+ (((rt0.c4)%(rt0.c4)))) ASC  NULLS LAST, '2007142872' DESC  NULLS FIRST, (CASE WHEN v0.c0 THEN rt0.c3 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS INTEGER))<(((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c4)%(rt0.c4)))) ASC  NULLS LAST, '2007142872' DESC  NULLS FIRST, (CASE WHEN v0.c0 THEN rt0.c3 END IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((CAST(rt0.c3 AS INTEGER))<(((rt0.c4) IS TRUE)))) ORDER BY (+ (((rt0.c4)%(rt0.c4)))) ASC  NULLS LAST, '2007142872' DESC  NULLS FIRST, (CASE WHEN v0.c0 THEN rt0.c3 END IN ());
SELECT * FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c4)) BETWEEN ((0.8750860454251799)) AND ((v0.c0)))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)) INNER JOIN vt0 ON (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) IN ()) FULL OUTER JOIN vt2 ON ((CAST(rt0.c0 AS INTEGER))*(NULL)) WHERE ((((((NULL)<(NULL)), (((vt1.c0, vt0.c0, rt0.c2))!=((v0.c0, v0.c0, vt0.c0))), ((vt2.c0)-(rt0.c2))))>=(('r*ᾮQXx', CASE rt0.c4  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, ((vt1.c0) IS FALSE))))) ORDER BY rt0.c4  NULLS LAST, ((rt0.c1 COLLATE BINARY)<>('1241218085')) DESC  NULLS FIRST, ((((SQLITE_COMPILEOPTION_GET(rt0.c0))AND(DATETIME(rt0.c3, vt2.c0, rt0.c0, vt1.c0, rt0.c2))))AND(vt2.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((((NULL)<(NULL)), (((vt1.c0, vt0.c0, rt0.c2))<>((v0.c0, v0.c0, vt0.c0))), ((vt2.c0)-(rt0.c2))))>=(('r*ᾮQXx', CASE rt0.c4  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c4)) BETWEEN ((0.8750860454251799)) AND ((v0.c0)))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)) INNER JOIN vt0 ON (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) IN ()) FULL OUTER JOIN vt2 ON ((CAST(rt0.c0 AS INTEGER))*(NULL)) ORDER BY rt0.c4  NULLS LAST, ((rt0.c1 COLLATE BINARY)!=('1241218085')) DESC  NULLS FIRST, ((((SQLITE_COMPILEOPTION_GET(rt0.c0))AND(DATETIME(rt0.c3, vt2.c0, rt0.c0, vt1.c0, rt0.c2))))AND(vt2.c0 COLLATE RTRIM)));
SELECT * FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c4)) BETWEEN ((0.8750860454251799)) AND ((v0.c0)))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)) INNER JOIN vt0 ON (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) IN ()) FULL OUTER JOIN vt2 ON ((CAST(rt0.c0 AS INTEGER))*(NULL)) WHERE ((((((NULL)<(NULL)), (((vt1.c0, vt0.c0, rt0.c2))!=((v0.c0, v0.c0, vt0.c0))), ((vt2.c0)-(rt0.c2))))>=(('r*ᾮQXx', CASE rt0.c4  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, ((vt1.c0) IS FALSE))))) ORDER BY rt0.c4  NULLS LAST, ((rt0.c1 COLLATE BINARY)<>('1241218085')) DESC  NULLS FIRST, ((((SQLITE_COMPILEOPTION_GET(rt0.c0))AND(DATETIME(rt0.c3, vt2.c0, rt0.c0, vt1.c0, rt0.c2))))AND(vt2.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((((NULL)<(NULL)), (((vt1.c0, vt0.c0, rt0.c2))<>((v0.c0, v0.c0, vt0.c0))), ((vt2.c0)-(rt0.c2))))>=(('r*ᾮQXx', CASE rt0.c4  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, ((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c4)) BETWEEN ((0.8750860454251799)) AND ((v0.c0)))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)) INNER JOIN vt0 ON (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) IN ()) FULL OUTER JOIN vt2 ON ((CAST(rt0.c0 AS INTEGER))*(NULL)) ORDER BY rt0.c4  NULLS LAST, ((rt0.c1 COLLATE BINARY)!=('1241218085')) DESC  NULLS FIRST, ((((SQLITE_COMPILEOPTION_GET(rt0.c0))AND(DATETIME(rt0.c3, vt2.c0, rt0.c0, vt1.c0, rt0.c2))))AND(vt2.c0 COLLATE RTRIM)));
SELECT * FROM v0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c4)) BETWEEN ((0.8750860454251799)) AND ((v0.c0)))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)) INNER JOIN vt0 ON (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)) IN ()) FULL OUTER JOIN vt2 ON ((CAST(rt0.c0 AS INTEGER))*(NULL)) WHERE ((((((NULL)<(NULL)), (((vt1.c0, vt0.c0, rt0.c2))!=((v0.c0, v0.c0, vt0.c0))), ((vt2.c0)-(rt0.c2))))>=(('r*ᾮQXx', CASE rt0.c4  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, ((vt1.c0) IS FALSE))))) ORDER BY rt0.c4  NULLS LAST, ((rt0.c1 COLLATE BINARY)<>('1241218085')) DESC  NULLS FIRST, ((((SQLITE_COMPILEOPTION_GET(rt0.c0))AND(DATETIME(rt0.c3, vt2.c0, rt0.c0, vt1.c0, rt0.c2))))AND(vt2.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY (+ (x'05c8')), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (x'05c8')), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((NULL))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY (+ (x'05c8')), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (x'05c8')), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((NULL))) DESC);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY (+ (x'05c8')), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((NULL))) DESC;
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c3)) AS NUMERIC));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) RIGHT OUTER JOIN vt2 ON ((0.625031250214268)+(CASE vt2.c0  WHEN vt1.c0 THEN rt0.c1 END)) FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) RIGHT OUTER JOIN vt2 ON ((0.625031250214268)+(CASE vt2.c0  WHEN vt1.c0 THEN rt0.c1 END)) FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY rt0.c0);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) RIGHT OUTER JOIN vt2 ON ((0.625031250214268)+(CASE vt2.c0  WHEN vt1.c0 THEN rt0.c1 END)) FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) RIGHT OUTER JOIN vt2 ON ((0.625031250214268)+(CASE vt2.c0  WHEN vt1.c0 THEN rt0.c1 END)) FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY rt0.c0);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt1 ON ((NULL) NOTNULL) RIGHT OUTER JOIN vt2 ON ((0.625031250214268)+(CASE vt2.c0  WHEN vt1.c0 THEN rt0.c1 END)) FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) ORDER BY rt0.c0;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0, v0, vt2 WHERE ('''3ေ8-G');
SELECT SUM(count) FROM (SELECT (('''3ေ8-G') IS TRUE)  as count FROM vt1, rt0, v0, vt2);
SELECT COUNT(*) FROM vt1, rt0, v0, vt2 WHERE ('''3ေ8-G');
SELECT SUM(count) FROM (SELECT (('''3ေ8-G') IS TRUE)  as count FROM vt1, rt0, v0, vt2);
SELECT COUNT(*) FROM vt1, rt0, v0, vt2 WHERE ('''3ေ8-G');
SELECT ALL COUNT(*) FROM v0, vt2, vt1 WHERE (vt1.c0) ORDER BY CASE vt2.c0 COLLATE NOCASE  WHEN x'' THEN CAST(NULL AS NUMERIC) WHEN ((NULL)||(vt2.c0)) THEN ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN '~!' END THEN (('')==(vt2.c0)) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) END, (((((((((((((- (v0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))OR(LOWER(vt1.c0))))OR(CASE 'Ctl''헮f!>U'  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)))AND(CAST(vt2.c0 AS REAL))))AND((vt1.c0 IN ()))))OR((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt2, vt1 ORDER BY CASE vt2.c0 COLLATE NOCASE  WHEN x'' THEN CAST(NULL AS NUMERIC) WHEN ((NULL)||(vt2.c0)) THEN ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN '~!' END THEN (('')=(vt2.c0)) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) END, (((((((((((((- (v0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))OR(LOWER(vt1.c0))))OR(CASE 'Ctl''헮f!>U'  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)))AND(CAST(vt2.c0 AS REAL))))AND((vt1.c0 IN ()))))OR((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt2, vt1 WHERE (vt1.c0) ORDER BY CASE vt2.c0 COLLATE NOCASE  WHEN x'' THEN CAST(NULL AS NUMERIC) WHEN ((NULL)||(vt2.c0)) THEN ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN '~!' END THEN (('')==(vt2.c0)) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) END, (((((((((((((- (v0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))OR(LOWER(vt1.c0))))OR(CASE 'Ctl''헮f!>U'  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)))AND(CAST(vt2.c0 AS REAL))))AND((vt1.c0 IN ()))))OR((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt2, vt1 ORDER BY CASE vt2.c0 COLLATE NOCASE  WHEN x'' THEN CAST(NULL AS NUMERIC) WHEN ((NULL)||(vt2.c0)) THEN ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN '~!' END THEN (('')=(vt2.c0)) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) END, (((((((((((((- (v0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))OR(LOWER(vt1.c0))))OR(CASE 'Ctl''헮f!>U'  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)))AND(CAST(vt2.c0 AS REAL))))AND((vt1.c0 IN ()))))OR((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt2, vt1 WHERE (vt1.c0) ORDER BY CASE vt2.c0 COLLATE NOCASE  WHEN x'' THEN CAST(NULL AS NUMERIC) WHEN ((NULL)||(vt2.c0)) THEN ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN '~!' END THEN (('')==(vt2.c0)) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) END, (((((((((((((- (v0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)))OR(LOWER(vt1.c0))))OR(CASE 'Ctl''헮f!>U'  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)))AND(CAST(vt2.c0 AS REAL))))AND((vt1.c0 IN ()))))OR((+ (v0.c0))));
SELECT * FROM vt2 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE '1285366993'  WHEN vt2.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) AND ((((((rt0.c3)AND(vt0.c0)))AND(x''))))) FULL OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt2.c0 COLLATE BINARY)) AND (('-18020421'))) FULL OUTER JOIN rt0 ON (NOT (v0.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)))AND('t|7')))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY WHERE (x'') ORDER BY (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt2 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE '1285366993'  WHEN vt2.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) AND ((((((rt0.c3)AND(vt0.c0)))AND(x''))))) FULL OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt2.c0 COLLATE BINARY)) AND (('-18020421'))) FULL OUTER JOIN rt0 ON (NOT (v0.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)))AND('t|7')))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY ORDER BY (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4))) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt2 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE '1285366993'  WHEN vt2.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) AND ((((((rt0.c3)AND(vt0.c0)))AND(x''))))) FULL OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt2.c0 COLLATE BINARY)) AND (('-18020421'))) FULL OUTER JOIN rt0 ON (NOT (v0.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)))AND('t|7')))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY WHERE (x'') ORDER BY (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt2 INNER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((CASE '1285366993'  WHEN vt2.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)) AND ((((((rt0.c3)AND(vt0.c0)))AND(x''))))) FULL OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((vt2.c0 COLLATE BINARY)) AND (('-18020421'))) FULL OUTER JOIN rt0 ON (NOT (v0.c0 COLLATE NOCASE)) CROSS JOIN vt0 ON ((((((((((((vt1.c0)AND(rt0.c0)))OR(v0.c0)))AND(v0.c0)))AND('t|7')))OR(rt0.c3)))OR(rt0.c4)) COLLATE BINARY ORDER BY (((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4))) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1.909068534E9))))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1.909068534E9))))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1.909068534E9))))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1.909068534E9))))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1.909068534E9))))%((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE WHEN json_remove(vt2.c0, vt2.c0) THEN (+ (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_remove(vt2.c0, vt2.c0) THEN (+ (vt2.c0)) END) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE WHEN json_remove(vt2.c0, vt2.c0) THEN (+ (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_remove(vt2.c0, vt2.c0) THEN (+ (vt2.c0)) END) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND ('-1872051616'))) WHERE (((((vt1.c0)%(v0.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN 0x26134c47 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(v0.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN 0x26134c47 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN vt1 ON LOWER(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND ('-1872051616'))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND ('-1872051616'))) WHERE (((((vt1.c0)%(v0.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN 0x26134c47 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)%(v0.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN 0x26134c47 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED INNER JOIN vt1 ON LOWER(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND ('-1872051616'))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((v0.c0) NOT BETWEEN (v0.c0) AND ('-1872051616'))) WHERE (((((vt1.c0)%(v0.c0))) BETWEEN (CASE v0.c0  WHEN vt1.c0 THEN 0x26134c47 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) AND (((vt1.c0)-(vt1.c0)))));
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt1 WHERE (CASE v0.c0  WHEN rt0.c2 THEN vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN rt0.c2 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt1 WHERE (CASE v0.c0  WHEN rt0.c2 THEN vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN rt0.c2 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1);
SELECT ALL * FROM v0, rt0 NOT INDEXED, vt1 WHERE (CASE v0.c0  WHEN rt0.c2 THEN vt1.c0 END COLLATE RTRIM);
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN (NOT (rt0.c3)) ELSE ((((vt0.c0)AND(rt0.c3)))AND(0.8296581360600351)) END RIGHT OUTER JOIN v0 ON GLOB(CAST(rt0.c2 AS NUMERIC), (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) WHERE (((((rt0.c4)<<(rt0.c3)))=((~ (-1483040486)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<<(rt0.c3)))==((~ (-1483040486))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN (NOT (rt0.c3)) ELSE ((((vt0.c0)AND(rt0.c3)))AND(0.8296581360600351)) END RIGHT OUTER JOIN v0 ON GLOB(CAST(rt0.c2 AS NUMERIC), (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN (NOT (rt0.c3)) ELSE ((((vt0.c0)AND(rt0.c3)))AND(0.8296581360600351)) END RIGHT OUTER JOIN v0 ON GLOB(CAST(rt0.c2 AS NUMERIC), (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) WHERE (((((rt0.c4)<<(rt0.c3)))=((~ (-1483040486)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<<(rt0.c3)))==((~ (-1483040486))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN (NOT (rt0.c3)) ELSE ((((vt0.c0)AND(rt0.c3)))AND(0.8296581360600351)) END RIGHT OUTER JOIN v0 ON GLOB(CAST(rt0.c2 AS NUMERIC), (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS REAL) THEN (NOT (rt0.c3)) ELSE ((((vt0.c0)AND(rt0.c3)))AND(0.8296581360600351)) END RIGHT OUTER JOIN v0 ON GLOB(CAST(rt0.c2 AS NUMERIC), (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) WHERE (((((rt0.c4)<<(rt0.c3)))=((~ (-1483040486)))));
SELECT ALL * FROM vt1 CROSS JOIN v0 ON vt1.c0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), vt1.c0, 0.24285861669370934, (vt0.c0 IN ()), ((x'')&(v0.c0)))) AND ((((vt1.c0)+(vt1.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0)<=(vt1.c0)), ((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY CASE CASE WHEN x'' THEN vt1.c0 ELSE v0.c0 END  WHEN ((0.4407478038392336)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON vt1.c0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), vt1.c0, 0.24285861669370934, (vt0.c0 IN ()), ((x'')&(v0.c0)))) AND ((((vt1.c0)+(vt1.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0)<=(vt1.c0)), ((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) ORDER BY CASE CASE WHEN x'' THEN vt1.c0 ELSE v0.c0 END  WHEN ((0.4407478038392336)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON vt1.c0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), vt1.c0, 0.24285861669370934, (vt0.c0 IN ()), ((x'')&(v0.c0)))) AND ((((vt1.c0)+(vt1.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0)<=(vt1.c0)), ((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY CASE CASE WHEN x'' THEN vt1.c0 ELSE v0.c0 END  WHEN ((0.4407478038392336)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON vt1.c0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), vt1.c0, 0.24285861669370934, (vt0.c0 IN ()), ((x'')&(v0.c0)))) AND ((((vt1.c0)+(vt1.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0)<=(vt1.c0)), ((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) ORDER BY CASE CASE WHEN x'' THEN vt1.c0 ELSE v0.c0 END  WHEN ((0.4407478038392336)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON vt1.c0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), vt1.c0, 0.24285861669370934, (vt0.c0 IN ()), ((x'')&(v0.c0)))) AND ((((vt1.c0)+(vt1.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0)<=(vt1.c0)), ((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY CASE CASE WHEN x'' THEN vt1.c0 ELSE v0.c0 END  WHEN ((0.4407478038392336)IS NOT(v0.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON vt2.c0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN x'406e' ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0.7860178255805663)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN x'406e' ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0.7860178255805663))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt2 ON vt2.c0);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON vt2.c0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN x'406e' ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0.7860178255805663)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN x'406e' ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0.7860178255805663))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt2 ON vt2.c0);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON vt2.c0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN x'406e' ELSE v0.c0 END) NOT BETWEEN (v0.c0) AND (0.7860178255805663)));
SELECT COUNT(*) FROM vt2, rt0 NOT INDEXED, vt0, v0, vt1 WHERE (vt2.c0) ORDER BY HEX(LIKELY(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, rt0, vt0, v0, vt1 ORDER BY HEX(LIKELY(vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, rt0 NOT INDEXED, vt0, v0, vt1 WHERE (vt2.c0) ORDER BY HEX(LIKELY(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, rt0, vt0, v0, vt1 ORDER BY HEX(LIKELY(vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, rt0 NOT INDEXED, vt0, v0, vt1 WHERE (vt2.c0) ORDER BY HEX(LIKELY(vt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE ((NOT (rt0.c3))) ORDER BY (x'' IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY (x'' IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE ((NOT (rt0.c3))) ORDER BY (x'' IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY (x'' IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE ((NOT (rt0.c3))) ORDER BY (x'' IN ()) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt2 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN 't~J5W' COLLATE BINARY THEN ((((v0.c0)AND(vt0.c0)))AND(vt2.c0)) WHEN LIKE(rt0.c3, v0.c0) THEN (vt0.c0 IN (rt0.c4)) END RIGHT OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS NUMERIC) WHERE ((((rt0.c1)) BETWEEN (((((rt0.c3))>((v0.c0))))) AND ((SUBSTR(rt0.c2, v0.c0))))) ORDER BY ((((((rt0.c1)<<(vt2.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((- (rt0.c0)))) DESC  NULLS LAST, ((((((((CAST(rt0.c4 AS REAL))OR(((rt0.c3) IS FALSE))))OR(v0.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c0 THEN rt0.c3 END)))OR(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt2.c0)))AND(json_patch(rt0.c4, vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((rt0.c3))>((v0.c0))))) AND ((SUBSTR(rt0.c2, v0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt2 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN 't~J5W' COLLATE BINARY THEN ((((v0.c0)AND(vt0.c0)))AND(vt2.c0)) WHEN LIKE(rt0.c3, v0.c0) THEN (vt0.c0 IN (rt0.c4)) END RIGHT OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS NUMERIC) ORDER BY ((((((rt0.c1)<<(vt2.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((- (rt0.c0)))) DESC  NULLS LAST, ((((((((CAST(rt0.c4 AS REAL))OR(((rt0.c3) IS FALSE))))OR(v0.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c0 THEN rt0.c3 END)))OR(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt2.c0)))AND(json_patch(rt0.c4, vt2.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt2 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN 't~J5W' COLLATE BINARY THEN ((((v0.c0)AND(vt0.c0)))AND(vt2.c0)) WHEN LIKE(rt0.c3, v0.c0) THEN (vt0.c0 IN (rt0.c4)) END RIGHT OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS NUMERIC) WHERE ((((rt0.c1)) BETWEEN (((((rt0.c3))>((v0.c0))))) AND ((SUBSTR(rt0.c2, v0.c0))))) ORDER BY ((((((rt0.c1)<<(vt2.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((- (rt0.c0)))) DESC  NULLS LAST, ((((((((CAST(rt0.c4 AS REAL))OR(((rt0.c3) IS FALSE))))OR(v0.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c0 THEN rt0.c3 END)))OR(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt2.c0)))AND(json_patch(rt0.c4, vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((((rt0.c3))>((v0.c0))))) AND ((SUBSTR(rt0.c2, v0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt2 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)GLOB(rt0.c0)) WHEN 't~J5W' COLLATE BINARY THEN ((((v0.c0)AND(vt0.c0)))AND(vt2.c0)) WHEN LIKE(rt0.c3, v0.c0) THEN (vt0.c0 IN (rt0.c4)) END RIGHT OUTER JOIN vt0 ON CAST((rt0.c3 IN ()) AS NUMERIC) ORDER BY ((((((rt0.c1)<<(vt2.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((- (rt0.c0)))) DESC  NULLS LAST, ((((((((CAST(rt0.c4 AS REAL))OR(((rt0.c3) IS FALSE))))OR(v0.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c0 THEN rt0.c3 END)))OR(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt2.c0)))AND(json_patch(rt0.c4, vt2.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((x'') IS FALSE) CROSS JOIN v0 ON ((((v0.c0)/(rt0.c0))) BETWEEN (x'' COLLATE BINARY) AND (CAST(vt0.c0 AS INTEGER))) WHERE (CASE (((rt0.c1)) BETWEEN ((0xfffffffff8741e33)) AND ((vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((v0.c0)OR(rt0.c3)) WHEN HEX(DISTINCT rt0.c2) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) WHEN (((rt0.c4, rt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c4, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c4))) THEN CASE rt0.c0  WHEN '-691490281' THEN vt0.c0 ELSE '0.25569596042337295' END END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) BETWEEN ((0xfffffffff8741e33)) AND ((vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((v0.c0)OR(rt0.c3)) WHEN HEX(DISTINCT rt0.c2) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) WHEN (((rt0.c4, rt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c4, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c4))) THEN CASE rt0.c0  WHEN '-691490281' THEN vt0.c0 ELSE '0.25569596042337295' END END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((x'') IS FALSE) CROSS JOIN v0 ON ((((v0.c0)/(rt0.c0))) BETWEEN (x'' COLLATE BINARY) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((x'') IS FALSE) CROSS JOIN v0 ON ((((v0.c0)/(rt0.c0))) BETWEEN (x'' COLLATE BINARY) AND (CAST(vt0.c0 AS INTEGER))) WHERE (CASE (((rt0.c1)) BETWEEN ((0xfffffffff8741e33)) AND ((vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((v0.c0)OR(rt0.c3)) WHEN HEX(DISTINCT rt0.c2) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) WHEN (((rt0.c4, rt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c4, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c4))) THEN CASE rt0.c0  WHEN '-691490281' THEN vt0.c0 ELSE '0.25569596042337295' END END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c1)) BETWEEN ((0xfffffffff8741e33)) AND ((vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((v0.c0)OR(rt0.c3)) WHEN HEX(DISTINCT rt0.c2) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) WHEN (((rt0.c4, rt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c4, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c4))) THEN CASE rt0.c0  WHEN '-691490281' THEN vt0.c0 ELSE '0.25569596042337295' END END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((x'') IS FALSE) CROSS JOIN v0 ON ((((v0.c0)/(rt0.c0))) BETWEEN (x'' COLLATE BINARY) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((x'') IS FALSE) CROSS JOIN v0 ON ((((v0.c0)/(rt0.c0))) BETWEEN (x'' COLLATE BINARY) AND (CAST(vt0.c0 AS INTEGER))) WHERE (CASE (((rt0.c1)) BETWEEN ((0xfffffffff8741e33)) AND ((vt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((v0.c0)OR(rt0.c3)) WHEN HEX(DISTINCT rt0.c2) THEN ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) WHEN (((rt0.c4, rt0.c1, vt0.c0)) BETWEEN ((rt0.c4, rt0.c4, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c4))) THEN CASE rt0.c0  WHEN '-691490281' THEN vt0.c0 ELSE '0.25569596042337295' END END);
SELECT COUNT(*) FROM vt2, vt0, vt1, rt0, v0 WHERE (CAST((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt1.c0, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c1, vt2.c0))) AS NUMERIC)) ORDER BY (((rt0.c4)GLOB(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt1.c0, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c1, vt2.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt2, vt0, vt1, rt0, v0 ORDER BY (((rt0.c4)GLOB(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt2, vt0, vt1, rt0, v0 WHERE (CAST((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt1.c0, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c1, vt2.c0))) AS NUMERIC)) ORDER BY (((rt0.c4)GLOB(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt1.c0, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c1, vt2.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt2, vt0, vt1, rt0, v0 ORDER BY (((rt0.c4)GLOB(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt2, vt0, vt1, rt0, v0 WHERE (CAST((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt1.c0, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c1, vt2.c0))) AS NUMERIC)) ORDER BY (((rt0.c4)GLOB(rt0.c1)) IN ());
SELECT COUNT(*) FROM vt0, rt0, v0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0, vt1);
SELECT COUNT(*) FROM vt0, rt0, v0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0, vt1);
SELECT COUNT(*) FROM vt0, rt0, v0, vt1 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c4)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.09606343439519682 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) AND (CASE WHEN '-547234422' THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((rt0.c1) BETWEEN ((('')&(rt0.c0))) AND (((NULL)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c4)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.09606343439519682 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) AND (CASE WHEN '-547234422' THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN ((('')&(rt0.c0))) AND (((NULL)+(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c4)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.09606343439519682 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) AND (CASE WHEN '-547234422' THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((rt0.c1) BETWEEN ((('')&(rt0.c0))) AND (((NULL)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c4)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.09606343439519682 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) AND (CASE WHEN '-547234422' THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN ((('')&(rt0.c0))) AND (((NULL)+(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c4)) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN 0.09606343439519682 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END) AND (CASE WHEN '-547234422' THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((rt0.c1) BETWEEN ((('')&(rt0.c0))) AND (((NULL)+(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0) ORDER BY (((CAST(vt2.c0 AS BLOB), vt2.c0 COLLATE RTRIM, (+ (vt2.c0))))<((vt2.c0, IFNULL(vt2.c0, vt2.c0), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY (((CAST(vt2.c0 AS BLOB), vt2.c0 COLLATE RTRIM, (+ (vt2.c0))))<((vt2.c0, IFNULL(vt2.c0, vt2.c0), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0) ORDER BY (((CAST(vt2.c0 AS BLOB), vt2.c0 COLLATE RTRIM, (+ (vt2.c0))))<((vt2.c0, IFNULL(vt2.c0, vt2.c0), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY (((CAST(vt2.c0 AS BLOB), vt2.c0 COLLATE RTRIM, (+ (vt2.c0))))<((vt2.c0, IFNULL(vt2.c0, vt2.c0), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0) ORDER BY (((CAST(vt2.c0 AS BLOB), vt2.c0 COLLATE RTRIM, (+ (vt2.c0))))<((vt2.c0, IFNULL(vt2.c0, vt2.c0), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c0)))));
SELECT ALL * FROM v0, vt0, rt0, vt2, vt1 WHERE (((((((rt0.c3)-(rt0.c3)))AND(v0.c0 COLLATE NOCASE)))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (json_type(rt0.c3) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)-(rt0.c3)))AND(v0.c0 COLLATE NOCASE)))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0, vt2, vt1 ORDER BY (json_type(rt0.c3) IN ()));
SELECT ALL * FROM v0, vt0, rt0, vt2, vt1 WHERE (((((((rt0.c3)-(rt0.c3)))AND(v0.c0 COLLATE NOCASE)))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (json_type(rt0.c3) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)-(rt0.c3)))AND(v0.c0 COLLATE NOCASE)))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0, vt2, vt1 ORDER BY (json_type(rt0.c3) IN ()));
SELECT ALL * FROM v0, vt0, rt0, vt2, vt1 WHERE (((((((rt0.c3)-(rt0.c3)))AND(v0.c0 COLLATE NOCASE)))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (json_type(rt0.c3) IN ());
SELECT * FROM rt0, v0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c3 END)OR(((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))))OR(((rt0.c3)/(rt0.c3))))) ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))||(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN rt0.c3 END)OR(((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))))OR(((rt0.c3)/(rt0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))||(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c3 END)OR(((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))))OR(((rt0.c3)/(rt0.c3))))) ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))||(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN rt0.c3 END)OR(((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))))OR(((rt0.c3)/(rt0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))||(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((CASE WHEN rt0.c4 THEN rt0.c3 END)OR(((((rt0.c2)OR(rt0.c3)))AND(v0.c0)))))OR(((rt0.c3)/(rt0.c3))))) ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))||(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 CROSS JOIN v0 ON ((rt0.c1)%(vt1.c0)) COLLATE NOCASE INNER JOIN vt1 ON (((rt0.c4)) BETWEEN ((((rt0.c4)&(rt0.c1)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, rt0, vt0 CROSS JOIN v0 ON ((rt0.c1)%(vt1.c0)) COLLATE NOCASE INNER JOIN vt1 ON (((rt0.c4)) BETWEEN ((((rt0.c4)&(rt0.c1)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 CROSS JOIN v0 ON ((rt0.c1)%(vt1.c0)) COLLATE NOCASE INNER JOIN vt1 ON (((rt0.c4)) BETWEEN ((((rt0.c4)&(rt0.c1)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, rt0, vt0 CROSS JOIN v0 ON ((rt0.c1)%(vt1.c0)) COLLATE NOCASE INNER JOIN vt1 ON (((rt0.c4)) BETWEEN ((((rt0.c4)&(rt0.c1)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 CROSS JOIN v0 ON ((rt0.c1)%(vt1.c0)) COLLATE NOCASE INNER JOIN vt1 ON (((rt0.c4)) BETWEEN ((((rt0.c4)&(rt0.c1)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) WHERE (vt0.c0);
SELECT COUNT(*) FROM vt2, rt0, v0, vt0 WHERE (CAST(('493936098' IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('493936098' IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, v0, vt0);
SELECT COUNT(*) FROM vt2, rt0, v0, vt0 WHERE (CAST(('493936098' IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('493936098' IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, v0, vt0);
SELECT COUNT(*) FROM vt2, rt0, v0, vt0 WHERE (CAST(('493936098' IN ()) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, vt2 WHERE (COALESCE((rt0.c2 IN ()), CAST(rt0.c4 AS BLOB), CASE 0.8750860454251799  WHEN rt0.c2 THEN rt0.c4 END, ((rt0.c4)!=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE((rt0.c2 IN ()), CAST(rt0.c4 AS BLOB), CASE 0.8750860454251799  WHEN rt0.c2 THEN rt0.c4 END, ((rt0.c4)!=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT COUNT(*) FROM vt0, rt0, vt2 WHERE (COALESCE((rt0.c2 IN ()), CAST(rt0.c4 AS BLOB), CASE 0.8750860454251799  WHEN rt0.c2 THEN rt0.c4 END, ((rt0.c4)!=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE((rt0.c2 IN ()), CAST(rt0.c4 AS BLOB), CASE 0.8750860454251799  WHEN rt0.c2 THEN rt0.c4 END, ((rt0.c4)!=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT COUNT(*) FROM vt0, rt0, vt2 WHERE (COALESCE((rt0.c2 IN ()), CAST(rt0.c4 AS BLOB), CASE 0.8750860454251799  WHEN rt0.c2 THEN rt0.c4 END, ((rt0.c4)!=(rt0.c2))));
SELECT * FROM vt0, vt1, v0 WHERE (x'666b') ORDER BY ((CAST(vt0.c0 AS NUMERIC))+(((x'') IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'666b') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, v0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))+(((x'') IS TRUE))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, v0 WHERE (x'666b') ORDER BY ((CAST(vt0.c0 AS NUMERIC))+(((x'') IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'666b') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, v0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))+(((x'') IS TRUE))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, v0 WHERE (x'666b') ORDER BY ((CAST(vt0.c0 AS NUMERIC))+(((x'') IS TRUE))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE (0.697901649349734) ORDER BY CAST(0xffffffffba935924 AS NUMERIC)  NULLS FIRST, CASE WHEN ((((vt2.c0)AND('S-%3>ཛྷvT2')))AND(vt1.c0)) THEN rt0.c1 ELSE x'' END;
SELECT SUM(count) FROM (SELECT ALL ((0.697901649349734) IS TRUE)  as count FROM vt2, rt0, vt1 ORDER BY CAST(0xffffffffba935924 AS NUMERIC)  NULLS FIRST, CASE WHEN ((((vt2.c0)AND('S-%3>ཛྷvT2')))AND(vt1.c0)) THEN rt0.c1 ELSE x'' END);
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE (0.697901649349734) ORDER BY CAST(0xffffffffba935924 AS NUMERIC)  NULLS FIRST, CASE WHEN ((((vt2.c0)AND('S-%3>ཛྷvT2')))AND(vt1.c0)) THEN rt0.c1 ELSE x'' END;
SELECT SUM(count) FROM (SELECT ALL ((0.697901649349734) IS TRUE)  as count FROM vt2, rt0, vt1 ORDER BY CAST(0xffffffffba935924 AS NUMERIC)  NULLS FIRST, CASE WHEN ((((vt2.c0)AND('S-%3>ཛྷvT2')))AND(vt1.c0)) THEN rt0.c1 ELSE x'' END);
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE (0.697901649349734) ORDER BY CAST(0xffffffffba935924 AS NUMERIC)  NULLS FIRST, CASE WHEN ((((vt2.c0)AND('S-%3>ཛྷvT2')))AND(vt1.c0)) THEN rt0.c1 ELSE x'' END;
SELECT * FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND ('㮦D왚A1QB(')))LIKE(rt0.c1)) INNER JOIN vt2 ON CAST(((rt0.c2)%(x'')) AS BLOB) WHERE ((((vt2.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), ((vt2.c0) NOTNULL), CAST(x'519e' AS TEXT))) AND (((((vt2.c0)) NOT BETWEEN ((0xfffffffff150c30d)) AND ((vt2.c0))), rt0.c1, 'V?M\rS뜞鰎u'))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), ((vt2.c0) NOTNULL), CAST(x'519e' AS TEXT))) AND (((((vt2.c0)) NOT BETWEEN ((0Xfffffffff150c30d)) AND ((vt2.c0))), rt0.c1, 'V?M\rS뜞鰎u')))) IS TRUE)  as count FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND ('㮦D왚A1QB(')))LIKE(rt0.c1)) INNER JOIN vt2 ON CAST(((rt0.c2)%(x'')) AS BLOB));
SELECT * FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND ('㮦D왚A1QB(')))LIKE(rt0.c1)) INNER JOIN vt2 ON CAST(((rt0.c2)%(x'')) AS BLOB) WHERE ((((vt2.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), ((vt2.c0) NOTNULL), CAST(x'519e' AS TEXT))) AND (((((vt2.c0)) NOT BETWEEN ((0xfffffffff150c30d)) AND ((vt2.c0))), rt0.c1, 'V?M\rS뜞鰎u'))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), ((vt2.c0) NOTNULL), CAST(x'519e' AS TEXT))) AND (((((vt2.c0)) NOT BETWEEN ((0Xfffffffff150c30d)) AND ((vt2.c0))), rt0.c1, 'V?M\rS뜞鰎u')))) IS TRUE)  as count FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND ('㮦D왚A1QB(')))LIKE(rt0.c1)) INNER JOIN vt2 ON CAST(((rt0.c2)%(x'')) AS BLOB));
SELECT * FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND ('㮦D왚A1QB(')))LIKE(rt0.c1)) INNER JOIN vt2 ON CAST(((rt0.c2)%(x'')) AS BLOB) WHERE ((((vt2.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c4)))AND(vt2.c0)), ((vt2.c0) NOTNULL), CAST(x'519e' AS TEXT))) AND (((((vt2.c0)) NOT BETWEEN ((0xfffffffff150c30d)) AND ((vt2.c0))), rt0.c1, 'V?M\rS뜞鰎u'))));
SELECT * FROM v0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((NULL)!=(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((NULL)<>(v0.c0)))))  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((NULL)!=(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((NULL)<>(v0.c0)))))  NULLS FIRST);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS INTEGER))) AND ((((NULL)!=(v0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN vt2 ON (((((((vt2.c0))>((vt0.c0))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((vt1.c0)OR(((v0.c0)>>(v0.c0)))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY WHERE (UPPER((((x'6d63e148'))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((x'6d63e148'))>=((vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON (((((((vt2.c0))>((vt0.c0))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((vt1.c0)OR(((v0.c0)>>(v0.c0)))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt1 INNER JOIN vt2 ON (((((((vt2.c0))>((vt0.c0))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((vt1.c0)OR(((v0.c0)>>(v0.c0)))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY WHERE (UPPER((((x'6d63e148'))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((x'6d63e148'))>=((vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON (((((((vt2.c0))>((vt0.c0))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((vt1.c0)OR(((v0.c0)>>(v0.c0)))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt1 INNER JOIN vt2 ON (((((((vt2.c0))>((vt0.c0))))AND(((vt1.c0) NOTNULL))))AND(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN v0 ON ((((vt1.c0)OR(((v0.c0)>>(v0.c0)))))AND(vt1.c0 COLLATE BINARY)) LEFT OUTER JOIN vt0 ON (v0.c0 IN ()) COLLATE BINARY WHERE (UPPER((((x'6d63e148'))>=((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY))<>((((vt0.c0)LIKE(vt0.c0)), ((1.7976931348623157E308)/(vt0.c0)), ((vt0.c0) NOT NULL))))) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY))<>((((vt0.c0)LIKE(vt0.c0)), ((1.7976931348623157E308)/(vt0.c0)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY))<>((((vt0.c0)LIKE(vt0.c0)), ((1.7976931348623157E308)/(vt0.c0)), ((vt0.c0) NOT NULL))))) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY))<>((((vt0.c0)LIKE(vt0.c0)), ((1.7976931348623157E308)/(vt0.c0)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE BINARY))<>((((vt0.c0)LIKE(vt0.c0)), ((1.7976931348623157E308)/(vt0.c0)), ((vt0.c0) NOT NULL))))) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NATURAL JOIN v0 WHERE (((((+ (rt0.c4)), ((rt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN 0.9049264258442075 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 END, TIME(rt0.c0, '939060094', ')쌍2w', rt0.c3, vt1.c0, rt0.c3, rt0.c0), (v0.c0 IN (rt0.c0))))>=((CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END, ((rt0.c4)<=(rt0.c1)), UNICODE(vt1.c0), ((rt0.c0)IS NOT(rt0.c4)), CASE vt0.c0  WHEN '*Tp	qAJh3' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c4)), ((rt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN 0.9049264258442075 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 END, TIME(rt0.c0, '939060094', ')쌍2w', rt0.c3, vt1.c0, rt0.c3, rt0.c0), (v0.c0 IN (rt0.c0))))>=((CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END, ((rt0.c4)<=(rt0.c1)), UNICODE(vt1.c0), ((rt0.c0)IS NOT(rt0.c4)), CASE vt0.c0  WHEN '*Tp	qAJh3' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NATURAL JOIN v0 WHERE (((((+ (rt0.c4)), ((rt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN 0.9049264258442075 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 END, TIME(rt0.c0, '939060094', ')쌍2w', rt0.c3, vt1.c0, rt0.c3, rt0.c0), (v0.c0 IN (rt0.c0))))>=((CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END, ((rt0.c4)<=(rt0.c1)), UNICODE(vt1.c0), ((rt0.c0)IS NOT(rt0.c4)), CASE vt0.c0  WHEN '*Tp	qAJh3' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt0.c4)), ((rt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN 0.9049264258442075 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 END, TIME(rt0.c0, '939060094', ')쌍2w', rt0.c3, vt1.c0, rt0.c3, rt0.c0), (v0.c0 IN (rt0.c0))))>=((CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END, ((rt0.c4)<=(rt0.c1)), UNICODE(vt1.c0), ((rt0.c0)IS NOT(rt0.c4)), CASE vt0.c0  WHEN '*Tp	qAJh3' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 NATURAL JOIN v0 WHERE (((((+ (rt0.c4)), ((rt0.c1) IS FALSE), CASE vt0.c0  WHEN vt1.c0 THEN 0.9049264258442075 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 END, TIME(rt0.c0, '939060094', ')쌍2w', rt0.c3, vt1.c0, rt0.c3, rt0.c0), (v0.c0 IN (rt0.c0))))>=((CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END, ((rt0.c4)<=(rt0.c1)), UNICODE(vt1.c0), ((rt0.c0)IS NOT(rt0.c4)), CASE vt0.c0  WHEN '*Tp	qAJh3' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN vt0.c0 END))));
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))+((- (rt0.c2)))) WHERE ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((IFNULL(0Xffffffffdfcfd54b, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((IFNULL(0xffffffffdfcfd54b, rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))+((- (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))+((- (rt0.c2)))) WHERE ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((IFNULL(0Xffffffffdfcfd54b, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((IFNULL(0xffffffffdfcfd54b, rt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))+((- (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))+((- (rt0.c2)))) WHERE ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((IFNULL(0Xffffffffdfcfd54b, rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((NULL) BETWEEN (vt0.c0) AND (rt0.c1))))) DESC, (NOT ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((NULL) BETWEEN (vt0.c0) AND (rt0.c1))))) DESC, (NOT ((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((NULL) BETWEEN (vt0.c0) AND (rt0.c1))))) DESC, (NOT ((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((NULL) BETWEEN (vt0.c0) AND (rt0.c1))))) DESC, (NOT ((rt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((NULL) BETWEEN (vt0.c0) AND (rt0.c1))))) DESC, (NOT ((rt0.c0 IN ()))) ASC;
SELECT ALL * FROM vt0, vt2, v0 WHERE ((+ (json_array_length(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array_length(v0.c0)))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((+ (json_array_length(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array_length(v0.c0)))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((+ (json_array_length(v0.c0))));
SELECT COUNT(*) FROM v0, vt0, rt0, vt2, vt1 WHERE ((NOT (((rt0.c0)==(vt1.c0))))) ORDER BY COALESCE((('0.3324956255918483') BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1) ASC, (((((vt0.c0, rt0.c2, rt0.c4))<((v0.c0, rt0.c4, 0.5294913882851393))))/(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)=(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, rt0, vt2, vt1 ORDER BY COALESCE((('0.3324956255918483') BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1) ASC, (((((vt0.c0, rt0.c2, rt0.c4))<((v0.c0, rt0.c4, 0.5294913882851393))))/(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0, vt2, vt1 WHERE ((NOT (((rt0.c0)==(vt1.c0))))) ORDER BY COALESCE((('0.3324956255918483') BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1) ASC, (((((vt0.c0, rt0.c2, rt0.c4))<((v0.c0, rt0.c4, 0.5294913882851393))))/(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)=(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, rt0, vt2, vt1 ORDER BY COALESCE((('0.3324956255918483') BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1) ASC, (((((vt0.c0, rt0.c2, rt0.c4))<((v0.c0, rt0.c4, 0.5294913882851393))))/(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0, vt2, vt1 WHERE ((NOT (((rt0.c0)==(vt1.c0))))) ORDER BY COALESCE((('0.3324956255918483') BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1) ASC, (((((vt0.c0, rt0.c2, rt0.c4))<((v0.c0, rt0.c4, 0.5294913882851393))))/(vt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 CROSS JOIN vt2 ON rt0.c1 RIGHT OUTER JOIN v0 ON NULLIF(rt0.c3, NULL) COLLATE BINARY COLLATE BINARY WHERE ((((LIKELIHOOD(DISTINCT rt0.c1, 0.6395659715997636)))=((CASE rt0.c1  WHEN rt0.c4 THEN vt2.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(DISTINCT rt0.c1, 0.6395659715997636)))=((CASE rt0.c1  WHEN rt0.c4 THEN vt2.c0 END)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt2 ON rt0.c1 RIGHT OUTER JOIN v0 ON NULLIF(rt0.c3, NULL) COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt1, rt0 CROSS JOIN vt2 ON rt0.c1 RIGHT OUTER JOIN v0 ON NULLIF(rt0.c3, NULL) COLLATE BINARY COLLATE BINARY WHERE ((((LIKELIHOOD(DISTINCT rt0.c1, 0.6395659715997636)))=((CASE rt0.c1  WHEN rt0.c4 THEN vt2.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(DISTINCT rt0.c1, 0.6395659715997636)))=((CASE rt0.c1  WHEN rt0.c4 THEN vt2.c0 END)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt2 ON rt0.c1 RIGHT OUTER JOIN v0 ON NULLIF(rt0.c3, NULL) COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt1, rt0 CROSS JOIN vt2 ON rt0.c1 RIGHT OUTER JOIN v0 ON NULLIF(rt0.c3, NULL) COLLATE BINARY COLLATE BINARY WHERE ((((LIKELIHOOD(DISTINCT rt0.c1, 0.6395659715997636)))=((CASE rt0.c1  WHEN rt0.c4 THEN vt2.c0 END))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN CAST(0.7228767207743876 AS INTEGER) ELSE (- (rt0.c2)) END) ORDER BY ((vt1.c0 COLLATE BINARY)<=(((((((((((((rt0.c1)AND(x'')))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) ASC  NULLS LAST, ((((rt0.c0)<>(rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN CAST(0.7228767207743876 AS INTEGER) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)<=(((((((((((((rt0.c1)AND(x'')))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) ASC  NULLS LAST, ((((rt0.c0)<>(rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN CAST(0.7228767207743876 AS INTEGER) ELSE (- (rt0.c2)) END) ORDER BY ((vt1.c0 COLLATE BINARY)<=(((((((((((((rt0.c1)AND(x'')))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) ASC  NULLS LAST, ((((rt0.c0)<>(rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN CAST(0.7228767207743876 AS INTEGER) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)<=(((((((((((((rt0.c1)AND(x'')))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) ASC  NULLS LAST, ((((rt0.c0)<>(rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN CAST(0.7228767207743876 AS INTEGER) ELSE (- (rt0.c2)) END) ORDER BY ((vt1.c0 COLLATE BINARY)<=(((((((((((((rt0.c1)AND(x'')))AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))) ASC  NULLS LAST, ((((rt0.c0)<>(rt0.c1))) BETWEEN (rt0.c0) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))));
SELECT * FROM v0, vt0, vt2, vt1 LEFT OUTER JOIN rt0 ON -1e500 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY ((NULLIF(rt0.c4, rt0.c1))|(vt2.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0, vt2, vt1 LEFT OUTER JOIN rt0 ON -1e500 ORDER BY ((NULLIF(rt0.c4, rt0.c1))|(vt2.c0)) ASC);
SELECT * FROM v0, vt0, vt2, vt1 LEFT OUTER JOIN rt0 ON -1e500 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY ((NULLIF(rt0.c4, rt0.c1))|(vt2.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0, vt2, vt1 LEFT OUTER JOIN rt0 ON -1e500 ORDER BY ((NULLIF(rt0.c4, rt0.c1))|(vt2.c0)) ASC);
SELECT * FROM v0, vt0, vt2, vt1 LEFT OUTER JOIN rt0 ON -1e500 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY ((NULLIF(rt0.c4, rt0.c1))|(vt2.c0)) ASC;
SELECT COUNT(*) FROM vt1, rt0, v0, vt2 WHERE (json((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json((~ (rt0.c0)))) IS TRUE)  as count FROM vt1, rt0, v0, vt2);
SELECT COUNT(*) FROM vt1, rt0, v0, vt2 WHERE (json((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json((~ (rt0.c0)))) IS TRUE)  as count FROM vt1, rt0, v0, vt2);
SELECT COUNT(*) FROM vt1, rt0, v0, vt2 WHERE (json((~ (rt0.c0))));
SELECT COUNT(*) FROM vt2 WHERE ((((((('ofddWa')OR(vt2.c0)))OR(vt2.c0)))*(((vt2.c0)>(vt2.c0))))) ORDER BY ((((((vt2.c0)<=(NULL)))AND(x'aed1')))OR(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))), vt2.c0, (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('ofddWa')OR(vt2.c0)))OR(vt2.c0)))*(((vt2.c0)>(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY ((((((vt2.c0)<=(NULL)))AND(x'aed1')))OR(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))), vt2.c0, (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((((((('ofddWa')OR(vt2.c0)))OR(vt2.c0)))*(((vt2.c0)>(vt2.c0))))) ORDER BY ((((((vt2.c0)<=(NULL)))AND(x'aed1')))OR(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))), vt2.c0, (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('ofddWa')OR(vt2.c0)))OR(vt2.c0)))*(((vt2.c0)>(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY ((((((vt2.c0)<=(NULL)))AND(x'aed1')))OR(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))), vt2.c0, (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((((((('ofddWa')OR(vt2.c0)))OR(vt2.c0)))*(((vt2.c0)>(vt2.c0))))) ORDER BY ((((((vt2.c0)<=(NULL)))AND(x'aed1')))OR(((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))), vt2.c0, (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt1, vt2, rt0 WHERE (((((((((((((((((rt0.c4)AND(vt2.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c0)))AND(((((rt0.c0)AND(vt2.c0)))AND(rt0.c4)))))AND((((rt0.c2))>=((rt0.c3)))))) ORDER BY (- (((rt0.c2)/(vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c4)AND(vt2.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c0)))AND(((((rt0.c0)AND(vt2.c0)))AND(rt0.c4)))))AND((((rt0.c2))>=((rt0.c3)))))) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY (- (((rt0.c2)/(vt2.c0)))) DESC);
SELECT ALL * FROM vt1, vt2, rt0 WHERE (((((((((((((((((rt0.c4)AND(vt2.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c0)))AND(((((rt0.c0)AND(vt2.c0)))AND(rt0.c4)))))AND((((rt0.c2))>=((rt0.c3)))))) ORDER BY (- (((rt0.c2)/(vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c4)AND(vt2.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c0)))AND(((((rt0.c0)AND(vt2.c0)))AND(rt0.c4)))))AND((((rt0.c2))>=((rt0.c3)))))) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY (- (((rt0.c2)/(vt2.c0)))) DESC);
SELECT ALL * FROM vt1, vt2, rt0 WHERE (((((((((((((((((rt0.c4)AND(vt2.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))AND(CAST(rt0.c1 AS BLOB))))OR(rt0.c0)))AND(((((rt0.c0)AND(vt2.c0)))AND(rt0.c4)))))AND((((rt0.c2))>=((rt0.c3)))))) ORDER BY (- (((rt0.c2)/(vt2.c0)))) DESC;
SELECT * FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt2.c0)))AND(vt2.c0)), vt2.c0, 'u甋B', vt1.c0 COLLATE BINARY, (((vt1.c0))=((v0.c0))))) AND ((((v0.c0) NOTNULL), (v0.c0 IN ()), '-866200547', vt2.c0 COLLATE BINARY, ((vt1.c0)-(vt1.c0))))) LEFT OUTER JOIN v0 ON ((((vt2.c0)=(vt2.c0)))IS NOT(((vt2.c0) NOT BETWEEN (v0.c0) AND (0.3501127984948671)))) WHERE (((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0)))))<=((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7769940811255853 ELSE v0.c0 END)))) ORDER BY vt2.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0)))))<=((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7769940811255853 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt2.c0)))AND(vt2.c0)), vt2.c0, 'u甋B', vt1.c0 COLLATE BINARY, (((vt1.c0))==((v0.c0))))) AND ((((v0.c0) NOTNULL), (v0.c0 IN ()), '-866200547', vt2.c0 COLLATE BINARY, ((vt1.c0)-(vt1.c0))))) LEFT OUTER JOIN v0 ON ((((vt2.c0)==(vt2.c0)))IS NOT(((vt2.c0) NOT BETWEEN (v0.c0) AND (0.3501127984948671)))) ORDER BY vt2.c0 ASC  NULLS LAST);
SELECT * FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt2.c0)))AND(vt2.c0)), vt2.c0, 'u甋B', vt1.c0 COLLATE BINARY, (((vt1.c0))=((v0.c0))))) AND ((((v0.c0) NOTNULL), (v0.c0 IN ()), '-866200547', vt2.c0 COLLATE BINARY, ((vt1.c0)-(vt1.c0))))) LEFT OUTER JOIN v0 ON ((((vt2.c0)=(vt2.c0)))IS NOT(((vt2.c0) NOT BETWEEN (v0.c0) AND (0.3501127984948671)))) WHERE (((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0)))))<=((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7769940811255853 ELSE v0.c0 END)))) ORDER BY vt2.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0)))))<=((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN 0.7769940811255853 ELSE v0.c0 END)))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt1 ON (((v0.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(vt1.c0)))AND(v0.c0)))AND(vt2.c0)))AND(vt2.c0)), vt2.c0, 'u甋B', vt1.c0 COLLATE BINARY, (((vt1.c0))==((v0.c0))))) AND ((((v0.c0) NOTNULL), (v0.c0 IN ()), '-866200547', vt2.c0 COLLATE BINARY, ((vt1.c0)-(vt1.c0))))) LEFT OUTER JOIN v0 ON ((((vt2.c0)==(vt2.c0)))IS NOT(((vt2.c0) NOT BETWEEN (v0.c0) AND (0.3501127984948671)))) ORDER BY vt2.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((CAST(vt2.c0 AS REAL))OR((((v0.c0))>=((-1979285925))))))OR((NOT (vt2.c0)))) CROSS JOIN vt2 ON (((rt0.c0 IN ()))>=(((rt0.c0) IS TRUE))) INNER JOIN rt0 ON ((CASE rt0.c3  WHEN x'3f87' THEN x'' ELSE rt0.c1 END) BETWEEN (((rt0.c4) IS TRUE)) AND ((rt0.c2 IN ()))) WHERE ((((vt2.c0 COLLATE RTRIM))<(((((vt0.c0, rt0.c2, rt0.c1, vt2.c0, vt1.c0, v0.c0, rt0.c0))=((rt0.c1, v0.c0, vt2.c0, rt0.c1, 'ojz*{7\rmA', rt0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0 COLLATE RTRIM))<(((((vt0.c0, rt0.c2, rt0.c1, vt2.c0, vt1.c0, v0.c0, rt0.c0))==((rt0.c1, v0.c0, vt2.c0, rt0.c1, 'ojz*{7\rmA', rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((CAST(vt2.c0 AS REAL))OR((((v0.c0))>=((-1979285925))))))OR((NOT (vt2.c0)))) CROSS JOIN vt2 ON (((rt0.c0 IN ()))>=(((rt0.c0) IS TRUE))) INNER JOIN rt0 ON ((CASE rt0.c3  WHEN x'3f87' THEN x'' ELSE rt0.c1 END) BETWEEN (((rt0.c4) IS TRUE)) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((CAST(vt2.c0 AS REAL))OR((((v0.c0))>=((-1979285925))))))OR((NOT (vt2.c0)))) CROSS JOIN vt2 ON (((rt0.c0 IN ()))>=(((rt0.c0) IS TRUE))) INNER JOIN rt0 ON ((CASE rt0.c3  WHEN x'3f87' THEN x'' ELSE rt0.c1 END) BETWEEN (((rt0.c4) IS TRUE)) AND ((rt0.c2 IN ()))) WHERE ((((vt2.c0 COLLATE RTRIM))<(((((vt0.c0, rt0.c2, rt0.c1, vt2.c0, vt1.c0, v0.c0, rt0.c0))=((rt0.c1, v0.c0, vt2.c0, rt0.c1, 'ojz*{7\rmA', rt0.c0, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0 COLLATE RTRIM))<(((((vt0.c0, rt0.c2, rt0.c1, vt2.c0, vt1.c0, v0.c0, rt0.c0))==((rt0.c1, v0.c0, vt2.c0, rt0.c1, 'ojz*{7\rmA', rt0.c0, rt0.c1))))))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON ((((CAST(vt2.c0 AS REAL))OR((((v0.c0))>=((-1979285925))))))OR((NOT (vt2.c0)))) CROSS JOIN vt2 ON (((rt0.c0 IN ()))>=(((rt0.c0) IS TRUE))) INNER JOIN rt0 ON ((CASE rt0.c3  WHEN x'3f87' THEN x'' ELSE rt0.c1 END) BETWEEN (((rt0.c4) IS TRUE)) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)>(vt0.c0))))>((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))))) WHERE ('h' COLLATE BINARY) ORDER BY (+ ((('-2097421983')+(v0.c0))))  NULLS FIRST, CASE WHEN ((v0.c0)OR(rt0.c4)) THEN ((rt0.c4)GLOB(rt0.c3)) ELSE v0.c0 COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('h' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)>(vt0.c0))))>((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY (+ ((('-2097421983')+(v0.c0))))  NULLS FIRST, CASE WHEN ((v0.c0)OR(rt0.c4)) THEN ((rt0.c4)GLOB(rt0.c3)) ELSE v0.c0 COLLATE NOCASE END DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)>(vt0.c0))))>((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))))) WHERE ('h' COLLATE BINARY) ORDER BY (+ ((('-2097421983')+(v0.c0))))  NULLS FIRST, CASE WHEN ((v0.c0)OR(rt0.c4)) THEN ((rt0.c4)GLOB(rt0.c3)) ELSE v0.c0 COLLATE NOCASE END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('h' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)>(vt0.c0))))>((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY (+ ((('-2097421983')+(v0.c0))))  NULLS FIRST, CASE WHEN ((v0.c0)OR(rt0.c4)) THEN ((rt0.c4)GLOB(rt0.c3)) ELSE v0.c0 COLLATE NOCASE END DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((v0.c0)>(vt0.c0))))>((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))))) WHERE ('h' COLLATE BINARY) ORDER BY (+ ((('-2097421983')+(v0.c0))))  NULLS FIRST, CASE WHEN ((v0.c0)OR(rt0.c4)) THEN ((rt0.c4)GLOB(rt0.c3)) ELSE v0.c0 COLLATE NOCASE END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON ((((rt0.c4 IN ()), rt0.c1, '-381586419'))<=((((rt0.c1) BETWEEN (-1709103131) AND (vt1.c0)), ((vt0.c0) NOTNULL), (('eV') IS TRUE)))) RIGHT OUTER JOIN vt0 ON (IFNULL('1546946283', vt0.c0) IN ()) LEFT OUTER JOIN vt2 ON CAST(((rt0.c1) BETWEEN (x'') AND (0.6024365468853097)) AS BLOB) WHERE ((((('l~|dɇW1')OR(CAST(rt0.c0 AS TEXT))))AND(CASE 'Ugળ*ὴ'  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('l~|dɇW1')OR(CAST(rt0.c0 AS TEXT))))AND(CASE 'Ugળ*ὴ'  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN v0 ON ((((rt0.c4 IN ()), rt0.c1, '-381586419'))<=((((rt0.c1) BETWEEN (-1709103131) AND (vt1.c0)), ((vt0.c0) NOTNULL), (('eV') IS TRUE)))) RIGHT OUTER JOIN vt0 ON (IFNULL('1546946283', vt0.c0) IN ()) LEFT OUTER JOIN vt2 ON CAST(((rt0.c1) BETWEEN (x'') AND (0.6024365468853097)) AS BLOB));
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN v0 ON ((((rt0.c4 IN ()), rt0.c1, '-381586419'))<=((((rt0.c1) BETWEEN (-1709103131) AND (vt1.c0)), ((vt0.c0) NOTNULL), (('eV') IS TRUE)))) RIGHT OUTER JOIN vt0 ON (IFNULL('1546946283', vt0.c0) IN ()) LEFT OUTER JOIN vt2 ON CAST(((rt0.c1) BETWEEN (x'') AND (0.6024365468853097)) AS BLOB) WHERE ((((('l~|dɇW1')OR(CAST(rt0.c0 AS TEXT))))AND(CASE 'Ugળ*ὴ'  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('l~|dɇW1')OR(CAST(rt0.c0 AS TEXT))))AND(CASE 'Ugળ*ὴ'  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN v0 ON ((((rt0.c4 IN ()), rt0.c1, '-381586419'))<=((((rt0.c1) BETWEEN (-1709103131) AND (vt1.c0)), ((vt0.c0) NOTNULL), (('eV') IS TRUE)))) RIGHT OUTER JOIN vt0 ON (IFNULL('1546946283', vt0.c0) IN ()) LEFT OUTER JOIN vt2 ON CAST(((rt0.c1) BETWEEN (x'') AND (0.6024365468853097)) AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt2, vt1 WHERE ((('_7i')%(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('_7i')%(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt2, vt1);
SELECT ALL COUNT(*) FROM v0, vt2, vt1 WHERE ((('_7i')%(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('_7i')%(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt2, vt1);
SELECT ALL COUNT(*) FROM v0, vt2, vt1 WHERE ((('_7i')%(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt2, vt1, vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt2.c0)!=(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt2.c0)!=(vt2.c0))))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT COUNT(*) FROM vt2, vt1, vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt2.c0)!=(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt2.c0)!=(vt2.c0))))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT COUNT(*) FROM vt2, vt1, vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt2.c0)!=(vt2.c0)))));
SELECT * FROM vt1, vt0, vt2 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT * FROM vt1, vt0, vt2 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT * FROM vt1, vt0, vt2 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER));
SELECT ALL * FROM v0, vt1, vt0, rt0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0, rt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0, rt0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0, rt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0, rt0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM rt0, vt1, vt2, v0, vt0 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY CAST(((rt0.c4)>(vt2.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt2, v0, vt0 ORDER BY CAST(((rt0.c4)>(vt2.c0)) AS REAL)  NULLS FIRST);
SELECT * FROM rt0, vt1, vt2, v0, vt0 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY CAST(((rt0.c4)>(vt2.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt2, v0, vt0 ORDER BY CAST(((rt0.c4)>(vt2.c0)) AS REAL)  NULLS FIRST);
SELECT * FROM rt0, vt1, vt2, v0, vt0 WHERE ((((vt1.c0 IN ())) ISNULL)) ORDER BY CAST(((rt0.c4)>(vt2.c0)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt0, vt2, v0, vt0, vt1 WHERE (CAST(CASE WHEN 0X66f398d7 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0x66f398d7 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt2, v0, vt0, vt1);
SELECT ALL * FROM rt0, vt2, v0, vt0, vt1 WHERE (CAST(CASE WHEN 0X66f398d7 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0x66f398d7 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt2, v0, vt0, vt1);
SELECT ALL * FROM rt0, vt2, v0, vt0, vt1 WHERE (CAST(CASE WHEN 0X66f398d7 THEN v0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM vt1 WHERE (CASE LIKELIHOOD(DISTINCT vt1.c0, 0.8532491570607383)  WHEN ROUND(vt1.c0, vt1.c0) THEN ((vt1.c0)+(vt1.c0)) ELSE (vt1.c0 IN ()) END) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN CASE WHEN '&/[x[wL黛#' THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0))!=((vt1.c0))) ELSE ((vt1.c0)*(vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(DISTINCT vt1.c0, 0.8532491570607383)  WHEN ROUND(vt1.c0, vt1.c0) THEN ((vt1.c0)+(vt1.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN CASE WHEN '&/[x[wL黛#' THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0))!=((vt1.c0))) ELSE ((vt1.c0)*(vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE LIKELIHOOD(DISTINCT vt1.c0, 0.8532491570607383)  WHEN ROUND(vt1.c0, vt1.c0) THEN ((vt1.c0)+(vt1.c0)) ELSE (vt1.c0 IN ()) END) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN CASE WHEN '&/[x[wL黛#' THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0))!=((vt1.c0))) ELSE ((vt1.c0)*(vt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(DISTINCT vt1.c0, 0.8532491570607383)  WHEN ROUND(vt1.c0, vt1.c0) THEN ((vt1.c0)+(vt1.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN CASE WHEN '&/[x[wL黛#' THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0))!=((vt1.c0))) ELSE ((vt1.c0)*(vt1.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE LIKELIHOOD(DISTINCT vt1.c0, 0.8532491570607383)  WHEN ROUND(vt1.c0, vt1.c0) THEN ((vt1.c0)+(vt1.c0)) ELSE (vt1.c0 IN ()) END) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt1.c0)-(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN CASE WHEN '&/[x[wL黛#' THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0))!=((vt1.c0))) ELSE ((vt1.c0)*(vt1.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0, vt2 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c2)GLOB(0.24285861669370934)))))OR(CAST(rt0.c3 AS TEXT))))AND(((rt0.c1) BETWEEN ('316630926') AND (0.43948269039936616)))))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3))))) ORDER BY rt0.c0 ASC, (((rt0.c2 IN (rt0.c3, rt0.c1)))+(CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c4 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c2)GLOB(0.24285861669370934)))))OR(CAST(rt0.c3 AS TEXT))))AND(((rt0.c1) BETWEEN ('316630926') AND (0.43948269039936616)))))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt2 ORDER BY rt0.c0 ASC, (((rt0.c2 IN (rt0.c3, rt0.c1)))+(CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c4 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt2 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c2)GLOB(0.24285861669370934)))))OR(CAST(rt0.c3 AS TEXT))))AND(((rt0.c1) BETWEEN ('316630926') AND (0.43948269039936616)))))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3))))) ORDER BY rt0.c0 ASC, (((rt0.c2 IN (rt0.c3, rt0.c1)))+(CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c4 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c2)GLOB(0.24285861669370934)))))OR(CAST(rt0.c3 AS TEXT))))AND(((rt0.c1) BETWEEN ('316630926') AND (0.43948269039936616)))))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, vt2 ORDER BY rt0.c0 ASC, (((rt0.c2 IN (rt0.c3, rt0.c1)))+(CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c4 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt2 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(((rt0.c2)GLOB(0.24285861669370934)))))OR(CAST(rt0.c3 AS TEXT))))AND(((rt0.c1) BETWEEN ('316630926') AND (0.43948269039936616)))))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c3))))) ORDER BY rt0.c0 ASC, (((rt0.c2 IN (rt0.c3, rt0.c1)))+(CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c4 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt2, rt0 WHERE (((load_extension(vt2.c0, vt1.c0))AND((NOT ('-820084329'))))) ORDER BY json_array((NOT (rt0.c4)), ((vt1.c0)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt2.c0, vt1.c0))AND((NOT ('-820084329'))))) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY json_array((NOT (rt0.c4)), ((vt1.c0)IS NOT(rt0.c2))));
SELECT COUNT(*) FROM vt1, vt2, rt0 WHERE (((load_extension(vt2.c0, vt1.c0))AND((NOT ('-820084329'))))) ORDER BY json_array((NOT (rt0.c4)), ((vt1.c0)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt2.c0, vt1.c0))AND((NOT ('-820084329'))))) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY json_array((NOT (rt0.c4)), ((vt1.c0)IS NOT(rt0.c2))));
SELECT ALL * FROM vt2 NOT INDEXED, vt1, rt0, vt0, v0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (((rt0.c2, rt0.c2, x''))>=(('1964298705', 0.324237162775768, vt2.c0))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (((rt0.c2, rt0.c2, x''))>=(('1964298705', 0.324237162775768, vt2.c0))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt2, vt1, rt0, vt0, v0);
SELECT ALL * FROM vt2 NOT INDEXED, vt1, rt0, vt0, v0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (((rt0.c2, rt0.c2, x''))>=(('1964298705', 0.324237162775768, vt2.c0))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (((rt0.c2, rt0.c2, x''))>=(('1964298705', 0.324237162775768, vt2.c0))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt2, vt1, rt0, vt0, v0);
SELECT ALL * FROM vt2 NOT INDEXED, vt1, rt0, vt0, v0 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (((rt0.c2, rt0.c2, x''))>=(('1964298705', 0.324237162775768, vt2.c0))) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT COUNT(*) FROM v0, rt0, vt2, vt1, vt0 WHERE (NULLIF(DISTINCT (((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt2, vt1, vt0 ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM v0, rt0, vt2, vt1, vt0 WHERE (NULLIF(DISTINCT (((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)))) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt2, vt1, vt0 ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM v0, rt0, vt2, vt1, vt0 WHERE (NULLIF(DISTINCT (((rt0.c3)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), (NOT (vt0.c0)))) ORDER BY rt0.c3 ASC;
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (CAST(((rt0.c4) NOT BETWEEN (vt2.c0) AND (vt2.c0)) AS REAL)) ORDER BY CAST(((rt0.c3) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (vt2.c0) AND (vt2.c0)) AS REAL)) IS TRUE)  as count FROM vt2, vt1, rt0 RIGHT OUTER JOIN vt0 ON vt2.c0 ORDER BY CAST(((rt0.c3) IS TRUE) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (CAST(((rt0.c4) NOT BETWEEN (vt2.c0) AND (vt2.c0)) AS REAL)) ORDER BY CAST(((rt0.c3) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (vt2.c0) AND (vt2.c0)) AS REAL)) IS TRUE)  as count FROM vt2, vt1, rt0 RIGHT OUTER JOIN vt0 ON vt2.c0 ORDER BY CAST(((rt0.c3) IS TRUE) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (CAST(((rt0.c4) NOT BETWEEN (vt2.c0) AND (vt2.c0)) AS REAL)) ORDER BY CAST(((rt0.c3) IS TRUE) AS INTEGER) DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((((((((((((rt0.c0)OR(((x'')<<(rt0.c0)))))OR((+ (rt0.c2)))))AND(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.98389711699956 THEN rt0.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1)))OR(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(((x'')<<(rt0.c0)))))OR((+ (rt0.c2)))))AND(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.98389711699956 THEN rt0.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1)))OR(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((((((rt0.c0)OR(((x'')<<(rt0.c0)))))OR((+ (rt0.c2)))))AND(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.98389711699956 THEN rt0.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1)))OR(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(((x'')<<(rt0.c0)))))OR((+ (rt0.c2)))))AND(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.98389711699956 THEN rt0.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1)))OR(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((((((rt0.c0)OR(((x'')<<(rt0.c0)))))OR((+ (rt0.c2)))))AND(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN 0.98389711699956 THEN rt0.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1)))OR(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)IS(vt1.c0))))<((CAST(v0.c0 AS REAL)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND (((('') NOTNULL))))) ORDER BY ((((vt1.c0))=((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND (((('') NOTNULL))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)IS(vt1.c0))))<((CAST(v0.c0 AS REAL)))) ORDER BY ((((vt1.c0))=((vt0.c0))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)IS(vt1.c0))))<((CAST(v0.c0 AS REAL)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND (((('') NOTNULL))))) ORDER BY ((((vt1.c0))=((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND (((('') NOTNULL))))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)IS(vt1.c0))))<((CAST(v0.c0 AS REAL)))) ORDER BY ((((vt1.c0))=((vt0.c0))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)IS(vt1.c0))))<((CAST(v0.c0 AS REAL)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND (((('') NOTNULL))))) ORDER BY ((((vt1.c0))=((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((((- (v0.c0)))|((((''))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))|((((''))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((- (v0.c0)))|((((''))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))|((((''))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((- (v0.c0)))|((((''))<((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 WHERE (0.7324204929122922) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c0))>((vt1.c0)))))  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7324204929122922) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c0))>((vt1.c0)))))  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 WHERE (0.7324204929122922) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c0))>((vt1.c0)))))  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7324204929122922) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c0))>((vt1.c0)))))  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 WHERE (0.7324204929122922) ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE BINARY  NULLS LAST, (NOT ((((vt0.c0))>((vt1.c0)))))  NULLS LAST, (~ (vt1.c0)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE (((((+ (rt0.c1))))>((((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c1))))>((((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0, vt2 ORDER BY NULL);
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE (((((+ (rt0.c1))))>((((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c1))))>((((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0, vt2 ORDER BY NULL);
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE (((((+ (rt0.c1))))>((((rt0.c4) BETWEEN (rt0.c1) AND (vt2.c0)))))) ORDER BY NULL;
SELECT ALL * FROM v0, vt2, rt0, vt0 WHERE ((((- (rt0.c2)))AND(0.6361350095039308))) ORDER BY ((((rt0.c1)+(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c3))) AND ((((rt0.c4))=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))AND(0.6361350095039308))) IS TRUE)  as count FROM v0, vt2, rt0, vt0 ORDER BY ((((rt0.c1)+(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c3))) AND ((((rt0.c4))=((rt0.c1))))));
SELECT ALL * FROM v0, vt2, rt0, vt0 WHERE ((((- (rt0.c2)))AND(0.6361350095039308))) ORDER BY ((((rt0.c1)+(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c3))) AND ((((rt0.c4))=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))AND(0.6361350095039308))) IS TRUE)  as count FROM v0, vt2, rt0, vt0 ORDER BY ((((rt0.c1)+(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c3))) AND ((((rt0.c4))=((rt0.c1))))));
SELECT ALL * FROM v0, vt2, rt0, vt0 WHERE ((((- (rt0.c2)))AND(0.6361350095039308))) ORDER BY ((((rt0.c1)+(rt0.c1))) NOT BETWEEN (((rt0.c2)*(rt0.c3))) AND ((((rt0.c4))=((rt0.c1)))));
SELECT COUNT(*) FROM vt2, vt1 WHERE ((+ (CASE WHEN vt2.c0 THEN vt1.c0 END))) ORDER BY LIKELIHOOD(DISTINCT CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, 0.9725816709825699);
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt2.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt2, vt1 ORDER BY LIKELIHOOD(DISTINCT CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, 0.9725816709825699));
SELECT COUNT(*) FROM vt2, vt1 WHERE ((+ (CASE WHEN vt2.c0 THEN vt1.c0 END))) ORDER BY LIKELIHOOD(DISTINCT CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, 0.9725816709825699);
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt2.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt2, vt1 ORDER BY LIKELIHOOD(DISTINCT CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, 0.9725816709825699));
SELECT COUNT(*) FROM vt2, vt1 WHERE ((+ (CASE WHEN vt2.c0 THEN vt1.c0 END))) ORDER BY LIKELIHOOD(DISTINCT CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, 0.9725816709825699);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c0) AND ('c\nfYk]60'))  WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 COLLATE RTRIM END) ORDER BY (((CASE NULL  WHEN rt0.c0 THEN rt0.c1 END))>=((rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c0) AND ('c\nfYk]60'))  WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY (((CASE NULL  WHEN rt0.c0 THEN rt0.c1 END))>=((rt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c0) AND ('c\nfYk]60'))  WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 COLLATE RTRIM END) ORDER BY (((CASE NULL  WHEN rt0.c0 THEN rt0.c1 END))>=((rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c0) AND ('c\nfYk]60'))  WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY (((CASE NULL  WHEN rt0.c0 THEN rt0.c1 END))>=((rt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c0) AND ('c\nfYk]60'))  WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 COLLATE RTRIM END) ORDER BY (((CASE NULL  WHEN rt0.c0 THEN rt0.c1 END))>=((rt0.c0 COLLATE RTRIM)));
SELECT * FROM vt2, vt0, v0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR('6묽9笎8p2a')))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE NOCASE)OR('6묽9笎8p2a')))AND(NULL))) IS TRUE)  as count FROM vt2, vt0, v0, vt1);
SELECT * FROM vt2, vt0, v0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR('6묽9笎8p2a')))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE NOCASE)OR('6묽9笎8p2a')))AND(NULL))) IS TRUE)  as count FROM vt2, vt0, v0, vt1);
SELECT * FROM vt2, vt0, v0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR('6묽9笎8p2a')))AND(NULL)));
SELECT * FROM rt0, v0, vt0, vt1 WHERE (CASE CASE WHEN rt0.c3 THEN vt0.c0 ELSE x'' END  WHEN rt0.c3 THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) END) ORDER BY (((vt1.c0)|(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN vt0.c0 ELSE x'' END  WHEN rt0.c3 THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY (((vt1.c0)|(rt0.c0)) IN ()) ASC);
SELECT * FROM rt0, v0, vt0, vt1 WHERE (CASE CASE WHEN rt0.c3 THEN vt0.c0 ELSE x'' END  WHEN rt0.c3 THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) END) ORDER BY (((vt1.c0)|(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN vt0.c0 ELSE x'' END  WHEN rt0.c3 THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY (((vt1.c0)|(rt0.c0)) IN ()) ASC);
SELECT * FROM rt0, v0, vt0, vt1 WHERE (CASE CASE WHEN rt0.c3 THEN vt0.c0 ELSE x'' END  WHEN rt0.c3 THEN ((rt0.c0) BETWEEN (x'') AND (rt0.c0)) END) ORDER BY (((vt1.c0)|(rt0.c0)) IN ()) ASC;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))>=((rt0.c3 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY CASE '122707735'  WHEN (- (rt0.c4)) THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))>=((rt0.c3 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE '122707735'  WHEN (- (rt0.c4)) THEN NULL END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))>=((rt0.c3 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY CASE '122707735'  WHEN (- (rt0.c4)) THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))>=((rt0.c3 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE '122707735'  WHEN (- (rt0.c4)) THEN NULL END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3 IN (vt0.c0, vt0.c0)), CAST(vt0.c0 AS REAL), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))>=((rt0.c3 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 END)))) ORDER BY CASE '122707735'  WHEN (- (rt0.c4)) THEN NULL END  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.20256259463363713) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) WHEN rt0.c0 THEN ((((((((rt0.c4)AND(NULL)))OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)) WHEN (+ (rt0.c3)) THEN vt1.c0 COLLATE BINARY WHEN (((rt0.c1))<((vt1.c0))) THEN x'' END) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.20256259463363713) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) WHEN rt0.c0 THEN ((((((((rt0.c4)AND(NULL)))OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)) WHEN (+ (rt0.c3)) THEN vt1.c0 COLLATE BINARY WHEN (((rt0.c1))<((vt1.c0))) THEN x'' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.20256259463363713) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) WHEN rt0.c0 THEN ((((((((rt0.c4)AND(NULL)))OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)) WHEN (+ (rt0.c3)) THEN vt1.c0 COLLATE BINARY WHEN (((rt0.c1))<((vt1.c0))) THEN x'' END) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.20256259463363713) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) WHEN rt0.c0 THEN ((((((((rt0.c4)AND(NULL)))OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)) WHEN (+ (rt0.c3)) THEN vt1.c0 COLLATE BINARY WHEN (((rt0.c1))<((vt1.c0))) THEN x'' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN LIKELIHOOD(DISTINCT rt0.c0, 0.20256259463363713) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) WHEN rt0.c0 THEN ((((((((rt0.c4)AND(NULL)))OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c1)) WHEN (+ (rt0.c3)) THEN vt1.c0 COLLATE BINARY WHEN (((rt0.c1))<((vt1.c0))) THEN x'' END) ORDER BY rt0.c1  NULLS LAST;
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((vt0.c0))>=((vt0.c0))))));
SELECT COUNT(*) FROM vt2, vt1, vt0 WHERE ((((((vt2.c0, x'', vt0.c0)) BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, '-1542499055'))))>(((((((((vt2.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt2.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0, x'', vt0.c0)) BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, '-1542499055'))))>(((((((((vt2.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt2.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT COUNT(*) FROM vt2, vt1, vt0 WHERE ((((((vt2.c0, x'', vt0.c0)) BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, '-1542499055'))))>(((((((((vt2.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt2.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0, x'', vt0.c0)) BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, '-1542499055'))))>(((((((((vt2.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt2.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT COUNT(*) FROM vt2, vt1, vt0 WHERE ((((((vt2.c0, x'', vt0.c0)) BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt2.c0, '-1542499055'))))>(((((((((vt2.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt2.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2, vt1, v0, rt0 WHERE ((794177998 IN ())) ORDER BY 0Xffffffffd2153777  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((794177998 IN ())) IS TRUE)  as count FROM vt2, vt1, v0, rt0 ORDER BY 0xffffffffd2153777  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1, v0, rt0 WHERE ((794177998 IN ())) ORDER BY 0Xffffffffd2153777  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((794177998 IN ())) IS TRUE)  as count FROM vt2, vt1, v0, rt0 ORDER BY 0xffffffffd2153777  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1, v0, rt0 WHERE ((794177998 IN ())) ORDER BY 0Xffffffffd2153777  NULLS LAST;
SELECT ALL * FROM v0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ABS('') ELSE LENGTH(vt1.c0) END) ORDER BY HEX(vt1.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ABS('') ELSE LENGTH(vt1.c0) END) IS TRUE)  as count FROM v0, vt1 ORDER BY HEX(vt1.c0) COLLATE RTRIM);
SELECT ALL * FROM v0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ABS('') ELSE LENGTH(vt1.c0) END) ORDER BY HEX(vt1.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ABS('') ELSE LENGTH(vt1.c0) END) IS TRUE)  as count FROM v0, vt1 ORDER BY HEX(vt1.c0) COLLATE RTRIM);
SELECT ALL * FROM v0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ABS('') ELSE LENGTH(vt1.c0) END) ORDER BY HEX(vt1.c0) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE ((((rt0.c3))>=((rt0.c4))) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3))>=((rt0.c4))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE ((((rt0.c3))>=((rt0.c4))) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3))>=((rt0.c4))) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE ((((rt0.c3))>=((rt0.c4))) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM v0, rt0, vt0, vt2 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c1)IS(vt0.c0)) THEN ((vt2.c0)%(0.19325172036045446)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c4)<<(vt2.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)) ELSE (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN ((rt0.c1)IS(vt0.c0)) THEN ((vt2.c0)%(0.19325172036045446)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c4)<<(vt2.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0, vt2);
SELECT ALL * FROM v0, rt0, vt0, vt2 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c1)IS(vt0.c0)) THEN ((vt2.c0)%(0.19325172036045446)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c4)<<(vt2.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)) ELSE (rt0.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN ((rt0.c1)IS(vt0.c0)) THEN ((vt2.c0)%(0.19325172036045446)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c4)<<(vt2.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)) ELSE (rt0.c3 IN ()) END) IS TRUE)  as count FROM v0 NOT INDEXED, rt0, vt0, vt2);
SELECT ALL * FROM v0, rt0, vt0, vt2 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c1)IS(vt0.c0)) THEN ((vt2.c0)%(0.19325172036045446)) WHEN CAST(v0.c0 AS BLOB) THEN ((rt0.c4)<<(vt2.c0)) WHEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE v0.c0 END THEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)) ELSE (rt0.c3 IN ()) END);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0) BETWEEN ('[]') AND (0.3084771040556544)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ('[]') AND (0.3084771040556544)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0) BETWEEN ('[]') AND (0.3084771040556544)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ('[]') AND (0.3084771040556544)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((vt1.c0) BETWEEN ('[]') AND (0.3084771040556544)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt2 NATURAL JOIN vt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c2 THEN '*᥌uxg쪭LQ/' END))) ORDER BY 'MN' DESC  NULLS LAST, 0.6361350095039308  NULLS FIRST, x'e4fa' ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c2 THEN '*᥌uxg쪭LQ/' END))) IS TRUE)  as count FROM rt0, vt2 NATURAL JOIN vt0 ORDER BY 'MN' DESC  NULLS LAST, 0.6361350095039308  NULLS FIRST, x'e4fa' ASC);
SELECT COUNT(*) FROM rt0, vt2 NATURAL JOIN vt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c2 THEN '*᥌uxg쪭LQ/' END))) ORDER BY 'MN' DESC  NULLS LAST, 0.6361350095039308  NULLS FIRST, x'e4fa' ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c2 THEN '*᥌uxg쪭LQ/' END))) IS TRUE)  as count FROM rt0, vt2 NATURAL JOIN vt0 ORDER BY 'MN' DESC  NULLS LAST, 0.6361350095039308  NULLS FIRST, x'e4fa' ASC);
SELECT COUNT(*) FROM rt0, vt2 NATURAL JOIN vt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c2 THEN '*᥌uxg쪭LQ/' END))) ORDER BY 'MN' DESC  NULLS LAST, 0.6361350095039308  NULLS FIRST, x'e4fa' ASC;
SELECT COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE (((((('-416027701')) BETWEEN ((vt1.c0)) AND ((rt0.c3)))) NOT NULL)) ORDER BY IFNULL(DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (~ (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((('-416027701')) BETWEEN ((vt1.c0)) AND ((rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (~ (rt0.c1))) ASC);
SELECT COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE (((((('-416027701')) BETWEEN ((vt1.c0)) AND ((rt0.c3)))) NOT NULL)) ORDER BY IFNULL(DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (~ (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((('-416027701')) BETWEEN ((vt1.c0)) AND ((rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (~ (rt0.c1))) ASC);
SELECT COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE (((((('-416027701')) BETWEEN ((vt1.c0)) AND ((rt0.c3)))) NOT NULL)) ORDER BY IFNULL(DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))), (~ (rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1, v0, vt2 WHERE (((((((((((((((v0.c0)AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND('1991433785')))>(CAST(v0.c0 AS REAL)))) ORDER BY CASE (((vt2.c0))<=((vt2.c0)))  WHEN v0.c0 COLLATE BINARY THEN (+ (rt0.c4)) ELSE TRIM(rt0.c4, rt0.c4) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0)AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND('1991433785')))>(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, v0, vt2 ORDER BY CASE (((vt2.c0))<=((vt2.c0)))  WHEN v0.c0 COLLATE BINARY THEN (+ (rt0.c4)) ELSE TRIM(rt0.c4, rt0.c4) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0, vt2 WHERE (((((((((((((((v0.c0)AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND('1991433785')))>(CAST(v0.c0 AS REAL)))) ORDER BY CASE (((vt2.c0))<=((vt2.c0)))  WHEN v0.c0 COLLATE BINARY THEN (+ (rt0.c4)) ELSE TRIM(rt0.c4, rt0.c4) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((v0.c0)AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND('1991433785')))>(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, v0, vt2 ORDER BY CASE (((vt2.c0))<=((vt2.c0)))  WHEN v0.c0 COLLATE BINARY THEN (+ (rt0.c4)) ELSE TRIM(rt0.c4, rt0.c4) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, v0, vt2 WHERE (((((((((((((((v0.c0)AND(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c3)))AND('1991433785')))>(CAST(v0.c0 AS REAL)))) ORDER BY CASE (((vt2.c0))<=((vt2.c0)))  WHEN v0.c0 COLLATE BINARY THEN (+ (rt0.c4)) ELSE TRIM(rt0.c4, rt0.c4) END ASC  NULLS FIRST;
SELECT * FROM vt2 WHERE ((((CAST(vt2.c0 AS TEXT), (((vt2.c0, 0.2862635673674996, 0Xffffffff87b2d2af)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)-(vt2.c0)), ((vt2.c0)%(vt2.c0)), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((CASE WHEN '-2110488696' THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN '' ELSE vt2.c0 END, vt2.c0 COLLATE NOCASE, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), (((vt2.c0))<=((vt2.c0))), CAST(vt2.c0 AS REAL))))) ORDER BY ((+ (vt2.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt2.c0 AS TEXT), (((vt2.c0, 0.2862635673674996, 0xffffffff87b2d2af)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)-(vt2.c0)), ((vt2.c0)%(vt2.c0)), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((CASE WHEN '-2110488696' THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN '' ELSE vt2.c0 END, vt2.c0 COLLATE NOCASE, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), (((vt2.c0))<=((vt2.c0))), CAST(vt2.c0 AS REAL))))) IS TRUE)  as count FROM vt2 ORDER BY ((+ (vt2.c0)) IN ()));
SELECT * FROM vt2 WHERE ((((CAST(vt2.c0 AS TEXT), (((vt2.c0, 0.2862635673674996, 0Xffffffff87b2d2af)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)-(vt2.c0)), ((vt2.c0)%(vt2.c0)), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((CASE WHEN '-2110488696' THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN '' ELSE vt2.c0 END, vt2.c0 COLLATE NOCASE, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), (((vt2.c0))<=((vt2.c0))), CAST(vt2.c0 AS REAL))))) ORDER BY ((+ (vt2.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt2.c0 AS TEXT), (((vt2.c0, 0.2862635673674996, 0xffffffff87b2d2af)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)-(vt2.c0)), ((vt2.c0)%(vt2.c0)), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((CASE WHEN '-2110488696' THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN '' ELSE vt2.c0 END, vt2.c0 COLLATE NOCASE, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), (((vt2.c0))<=((vt2.c0))), CAST(vt2.c0 AS REAL))))) IS TRUE)  as count FROM vt2 ORDER BY ((+ (vt2.c0)) IN ()));
SELECT * FROM vt2 WHERE ((((CAST(vt2.c0 AS TEXT), (((vt2.c0, 0.2862635673674996, 0Xffffffff87b2d2af)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)-(vt2.c0)), ((vt2.c0)%(vt2.c0)), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<=((CASE WHEN '-2110488696' THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN '' ELSE vt2.c0 END, vt2.c0 COLLATE NOCASE, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), (((vt2.c0))<=((vt2.c0))), CAST(vt2.c0 AS REAL))))) ORDER BY ((+ (vt2.c0)) IN ());
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0 IN ())))<>(('-1486329932'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0 IN ())))<>(('-1486329932')))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0 IN ())))<>(('-1486329932'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0 IN ())))<>(('-1486329932')))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0 IN ())))<>(('-1486329932'))));
SELECT COUNT(*) FROM vt0, vt1, v0, rt0 NOT INDEXED WHERE (((((rt0.c1) BETWEEN (x'') AND (rt0.c3)))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (x'') AND (rt0.c3)))+(v0.c0))) IS TRUE)  as count FROM vt0, vt1, v0, rt0);
SELECT COUNT(*) FROM vt0, vt1, v0, rt0 NOT INDEXED WHERE (((((rt0.c1) BETWEEN (x'') AND (rt0.c3)))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (x'') AND (rt0.c3)))+(v0.c0))) IS TRUE)  as count FROM vt0, vt1, v0, rt0);
SELECT COUNT(*) FROM vt0, vt1, v0, rt0 NOT INDEXED WHERE (((((rt0.c1) BETWEEN (x'') AND (rt0.c3)))+(v0.c0)));
SELECT ALL * FROM vt2 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))IS(LIKELY(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))IS(LIKELY(vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))IS(LIKELY(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))IS(LIKELY(vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))IS(LIKELY(vt2.c0))));
SELECT ALL * FROM vt2, v0 WHERE (CAST(CAST(vt2.c0 AS BLOB) AS NUMERIC)) ORDER BY (((vt2.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt2.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt2, v0 ORDER BY (((vt2.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM vt2, v0 WHERE (CAST(CAST(vt2.c0 AS BLOB) AS NUMERIC)) ORDER BY (((vt2.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt2.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt2, v0 ORDER BY (((vt2.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM vt2, v0 WHERE (CAST(CAST(vt2.c0 AS BLOB) AS NUMERIC)) ORDER BY (((vt2.c0 IN ()))GLOB(CASE WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT * FROM vt1, v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))OR(vt2.c0)) FULL OUTER JOIN vt2 ON (((((NULL, v0.c0, rt0.c1)) BETWEEN ((rt0.c4, vt1.c0, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c3)))) NOT NULL) WHERE ((((((rt0.c4)AND(vt2.c0)))OR(v0.c0)) IN ())) ORDER BY NULLIF(LIKELY(rt0.c0), ((rt0.c3)<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)AND(vt2.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))OR(vt2.c0)) FULL OUTER JOIN vt2 ON (((((NULL, v0.c0, rt0.c1)) BETWEEN ((rt0.c4, vt1.c0, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c3)))) NOT NULL) ORDER BY NULLIF(LIKELY(rt0.c0), ((rt0.c3)<(v0.c0)))  NULLS FIRST);
SELECT * FROM vt1, v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))OR(vt2.c0)) FULL OUTER JOIN vt2 ON (((((NULL, v0.c0, rt0.c1)) BETWEEN ((rt0.c4, vt1.c0, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c3)))) NOT NULL) WHERE ((((((rt0.c4)AND(vt2.c0)))OR(v0.c0)) IN ())) ORDER BY NULLIF(LIKELY(rt0.c0), ((rt0.c3)<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)AND(vt2.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt1, v0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))OR(vt2.c0)) FULL OUTER JOIN vt2 ON (((((NULL, v0.c0, rt0.c1)) BETWEEN ((rt0.c4, vt1.c0, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c3)))) NOT NULL) ORDER BY NULLIF(LIKELY(rt0.c0), ((rt0.c3)<(v0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((json_extract(vt2.c0, vt1.c0, vt2.c0, x''))) AND (((x'' IN (vt1.c0))))) INNER JOIN vt1 ON (NOT (vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((json_extract(vt2.c0, vt1.c0, vt2.c0, x''))) AND (((x'' IN (vt1.c0))))) INNER JOIN vt1 ON (NOT (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((json_extract(vt2.c0, vt1.c0, vt2.c0, x''))) AND (((x'' IN (vt1.c0))))) INNER JOIN vt1 ON (NOT (vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) BETWEEN ((json_extract(vt2.c0, vt1.c0, vt2.c0, x''))) AND (((x'' IN (vt1.c0))))) INNER JOIN vt1 ON (NOT (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt1 WHERE ((((((v0.c0, vt1.c0, vt1.c0))>((vt1.c0, v0.c0, vt1.c0))))<(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END))) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, vt1.c0, vt1.c0))>((vt1.c0, v0.c0, vt1.c0))))<(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(vt1.c0 AS BLOB)) NOTNULL) ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt1 WHERE ((((((v0.c0, vt1.c0, vt1.c0))>((vt1.c0, v0.c0, vt1.c0))))<(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END))) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, vt1.c0, vt1.c0))>((vt1.c0, v0.c0, vt1.c0))))<(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(vt1.c0 AS BLOB)) NOTNULL) ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt1 WHERE ((((((v0.c0, vt1.c0, vt1.c0))>((vt1.c0, v0.c0, vt1.c0))))<(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END))) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(rt0.c3));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(rt0.c3));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS(rt0.c3));
SELECT * FROM vt0, v0, vt2, rt0, vt1 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, v0, vt2, rt0, vt1);
SELECT * FROM vt0, v0, vt2, rt0, vt1 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, v0, vt2, rt0, vt1);
SELECT * FROM vt0, v0, vt2, rt0, vt1 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((NOT (0.36115123593922904))))>(((x'' IN ()))))) ORDER BY (- (LOWER(vt1.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('/B\n5?X[R('))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (0.36115123593922904))))>(((x'' IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (LOWER(vt1.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('/B\n5?X[R('))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((NOT (0.36115123593922904))))>(((x'' IN ()))))) ORDER BY (- (LOWER(vt1.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('/B\n5?X[R('))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (0.36115123593922904))))>(((x'' IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (LOWER(vt1.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('/B\n5?X[R('))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((NOT (0.36115123593922904))))>(((x'' IN ()))))) ORDER BY (- (LOWER(vt1.c0))) ASC, (((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('/B\n5?X[R('))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, v0, vt0, vt2, rt0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt1, v0, vt0, vt2, rt0);
SELECT COUNT(*) FROM vt1, v0, vt0, vt2, rt0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt1, v0, vt0, vt2, rt0);
SELECT COUNT(*) FROM vt1, v0, vt0, vt2, rt0 WHERE (vt2.c0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4) IS FALSE), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c1) IS TRUE)))<=((LIKELIHOOD(rt0.c1, 0.6538907540434331), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) IS FALSE))))) ORDER BY CASE WHEN x'8cc267cd' THEN rt0.c3 ELSE rt0.c4 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4) IS FALSE), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c1) IS TRUE)))<=((LIKELIHOOD(rt0.c1, 0.6538907540434331), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'8cc267cd' THEN rt0.c3 ELSE rt0.c4 END COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4) IS FALSE), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c1) IS TRUE)))<=((LIKELIHOOD(rt0.c1, 0.6538907540434331), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) IS FALSE))))) ORDER BY CASE WHEN x'8cc267cd' THEN rt0.c3 ELSE rt0.c4 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4) IS FALSE), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c1) IS TRUE)))<=((LIKELIHOOD(rt0.c1, 0.6538907540434331), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'8cc267cd' THEN rt0.c3 ELSE rt0.c4 END COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4) IS FALSE), ((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c1) IS TRUE)))<=((LIKELIHOOD(rt0.c1, 0.6538907540434331), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((NULL) IS FALSE))))) ORDER BY CASE WHEN x'8cc267cd' THEN rt0.c3 ELSE rt0.c4 END COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (x'');
SELECT ALL * FROM vt2, vt1 WHERE (((vt1.c0)*(CASE vt2.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))) ORDER BY ((vt2.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC, ((((NULLIF(vt2.c0, 9.56537198E8))OR(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(CASE vt2.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((vt2.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC, ((((NULLIF(vt2.c0, 9.56537198E8))OR(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, vt1 WHERE (((vt1.c0)*(CASE vt2.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))) ORDER BY ((vt2.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC, ((((NULLIF(vt2.c0, 9.56537198E8))OR(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(CASE vt2.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((vt2.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC, ((((NULLIF(vt2.c0, 9.56537198E8))OR(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, vt1 WHERE (((vt1.c0)*(CASE vt2.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END))) ORDER BY ((vt2.c0)GLOB(vt1.c0)) COLLATE NOCASE COLLATE NOCASE DESC, ((((NULLIF(vt2.c0, 9.56537198E8))OR(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))) DESC  NULLS LAST;
SELECT * FROM vt1, v0, rt0, vt2 CROSS JOIN vt0 ON NULL WHERE ((CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, v0, rt0, vt2 CROSS JOIN vt0 ON NULL);
SELECT * FROM vt1, v0, rt0, vt2 CROSS JOIN vt0 ON NULL WHERE ((CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, v0, rt0, vt2 CROSS JOIN vt0 ON NULL);
SELECT * FROM vt1, v0, rt0, vt2 CROSS JOIN vt0 ON NULL WHERE ((CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM vt2, v0, vt1 CROSS JOIN rt0 ON (((~ (v0.c0)))||(CAST(v0.c0 AS BLOB))) WHERE ((- (GLOB(vt2.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((- (GLOB(vt2.c0, NULL)))) IS TRUE)  as count FROM vt2, v0, vt1 CROSS JOIN rt0 ON (((~ (v0.c0)))||(CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt2, v0, vt1 CROSS JOIN rt0 ON (((~ (v0.c0)))||(CAST(v0.c0 AS BLOB))) WHERE ((- (GLOB(vt2.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((- (GLOB(vt2.c0, NULL)))) IS TRUE)  as count FROM vt2, v0, vt1 CROSS JOIN rt0 ON (((~ (v0.c0)))||(CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt2, v0, vt1 CROSS JOIN rt0 ON (((~ (v0.c0)))||(CAST(v0.c0 AS BLOB))) WHERE ((- (GLOB(vt2.c0, NULL))));
SELECT ALL * FROM v0, rt0, vt2 NATURAL JOIN vt1 WHERE (((((vt2.c0)==(rt0.c4)))||(((rt0.c3)IS(rt0.c3))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((((vt2.c0)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)=(rt0.c4)))||(((rt0.c3)IS(rt0.c3))))) IS TRUE)  as count FROM v0, rt0, vt2 NATURAL JOIN vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((((vt2.c0)!=(v0.c0))))));
SELECT ALL * FROM v0, rt0, vt2 NATURAL JOIN vt1 WHERE (((((vt2.c0)==(rt0.c4)))||(((rt0.c3)IS(rt0.c3))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((((vt2.c0)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)=(rt0.c4)))||(((rt0.c3)IS(rt0.c3))))) IS TRUE)  as count FROM v0, rt0, vt2 NATURAL JOIN vt1 ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((((vt2.c0)!=(v0.c0))))));
SELECT ALL * FROM v0, rt0, vt2 NATURAL JOIN vt1 WHERE (((((vt2.c0)==(rt0.c4)))||(((rt0.c3)IS(rt0.c3))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((((vt2.c0)!=(v0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY ((((v0.c0)==(v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN '1060162099' END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)==(v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN '1060162099' END)));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY ((((v0.c0)==(v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN '1060162099' END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)==(v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN '1060162099' END)));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) ORDER BY ((((v0.c0)==(v0.c0)))>>(CASE v0.c0  WHEN v0.c0 THEN '1060162099' END));
SELECT ALL COUNT(*) FROM v0, rt0, vt2, vt0 WHERE (((CAST(vt2.c0 AS BLOB)) BETWEEN ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)<<(rt0.c2)))IS(((rt0.c1)IS(vt2.c0)))), (((((vt0.c0))=((v0.c0)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS BLOB)) BETWEEN ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt2, vt0 ORDER BY ((((vt0.c0)<<(rt0.c2)))IS(((rt0.c1)IS(vt2.c0)))), (((((vt0.c0))==((v0.c0)))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt2, vt0 WHERE (((CAST(vt2.c0 AS BLOB)) BETWEEN ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)<<(rt0.c2)))IS(((rt0.c1)IS(vt2.c0)))), (((((vt0.c0))=((v0.c0)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS BLOB)) BETWEEN ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt2, vt0 ORDER BY ((((vt0.c0)<<(rt0.c2)))IS(((rt0.c1)IS(vt2.c0)))), (((((vt0.c0))==((v0.c0)))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM v0, rt0, vt2, vt0 WHERE (((CAST(vt2.c0 AS BLOB)) BETWEEN ((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c3)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)<<(rt0.c2)))IS(((rt0.c1)IS(vt2.c0)))), (((((vt0.c0))=((v0.c0)))) NOTNULL) ASC;
SELECT COUNT(*) FROM v0, rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0, vt2.c0)) ISNULL) WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM v0, rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0, vt2.c0)) ISNULL));
SELECT COUNT(*) FROM v0, rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0, vt2.c0)) ISNULL) WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM v0, rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0, vt2.c0)) ISNULL));
SELECT COUNT(*) FROM v0, rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON ((TRIM(v0.c0, vt2.c0)) ISNULL) WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))==((vt1.c0))))=((((((((((((('-1820936535')AND(x'6363560e')))AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))) CROSS JOIN v0 ON (((+ (NULL))) NOT NULL) WHERE ((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))=((vt1.c0))))==((((((((((((('-1820936535')AND(x'6363560e')))AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))) CROSS JOIN v0 ON (((+ (NULL))) NOT NULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))==((vt1.c0))))=((((((((((((('-1820936535')AND(x'6363560e')))AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))) CROSS JOIN v0 ON (((+ (NULL))) NOT NULL) WHERE ((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))=((vt1.c0))))==((((((((((((('-1820936535')AND(x'6363560e')))AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))) CROSS JOIN v0 ON (((+ (NULL))) NOT NULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))==((vt1.c0))))=((((((((((((('-1820936535')AND(x'6363560e')))AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1)))) CROSS JOIN v0 ON (((+ (NULL))) NOT NULL) WHERE ((((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))) ISNULL));
SELECT COUNT(*) FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((((vt2.c0)<(vt2.c0)), (((NULL)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0)) AND ((json_remove(vt2.c0, vt2.c0, vt2.c0, vt2.c0), (vt2.c0 IN ()), (vt2.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((((vt2.c0)<(vt2.c0)), (((NULL)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0)) AND ((json_remove(vt2.c0, vt2.c0, vt2.c0, vt2.c0), (vt2.c0 IN ()), (vt2.c0 IN ()))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((((vt2.c0)<(vt2.c0)), (((NULL)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0)) AND ((json_remove(vt2.c0, vt2.c0, vt2.c0, vt2.c0), (vt2.c0 IN ()), (vt2.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((((vt2.c0)<(vt2.c0)), (((NULL)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), vt2.c0)) AND ((json_remove(vt2.c0, vt2.c0, vt2.c0, vt2.c0), (vt2.c0 IN ()), (vt2.c0 IN ()))))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM rt0 WHERE (((((0Xffffffffc69b90b2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffc69b90b2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((0Xffffffffc69b90b2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffc69b90b2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((0Xffffffffc69b90b2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))<((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))<((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))<((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))<((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))<((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0, vt1 FULL OUTER JOIN vt2 ON rt0.c3 WHERE (NULLIF(DISTINCT (vt2.c0 IN (vt0.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) ORDER BY (((('0.5294913882851393') IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (vt2.c0 IN (vt0.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 FULL OUTER JOIN vt2 ON rt0.c3 ORDER BY (((('0.5294913882851393') IS FALSE)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, vt1 FULL OUTER JOIN vt2 ON rt0.c3 WHERE (NULLIF(DISTINCT (vt2.c0 IN (vt0.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) ORDER BY (((('0.5294913882851393') IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (vt2.c0 IN (vt0.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 FULL OUTER JOIN vt2 ON rt0.c3 ORDER BY (((('0.5294913882851393') IS FALSE)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0, vt1 FULL OUTER JOIN vt2 ON rt0.c3 WHERE (NULLIF(DISTINCT (vt2.c0 IN (vt0.c0)), (((NULL)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) ORDER BY (((('0.5294913882851393') IS FALSE)) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt2, v0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN 'F+' WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (CAST(x'' AS REAL))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()) WHERE (rt0.c3 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt2, v0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN 'F+' WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (CAST(x'' AS REAL))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt2, v0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN 'F+' WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (CAST(x'' AS REAL))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()) WHERE (rt0.c3 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt2, v0 FULL OUTER JOIN vt1 ON ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c4 WHEN v0.c0 THEN 'F+' WHEN rt0.c4 THEN v0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c1)AND(rt0.c2))) AND (CAST(x'' AS REAL))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM v0, vt1, vt2 WHERE (LIKE('i8RP', ((v0.c0) NOTNULL), '{')) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((LIKE('i8RP', ((v0.c0) NOTNULL), '{')) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt2 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0, vt1, vt2 WHERE (LIKE('i8RP', ((v0.c0) NOTNULL), '{')) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((LIKE('i8RP', ((v0.c0) NOTNULL), '{')) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt2 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0, vt1, vt2 WHERE (LIKE('i8RP', ((v0.c0) NOTNULL), '{')) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY WHERE (ABS((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.3450275047004979, v0.c0, vt1.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.3450275047004979, v0.c0, vt1.c0, v0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY WHERE (ABS((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.3450275047004979, v0.c0, vt1.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.3450275047004979, v0.c0, vt1.c0, v0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY WHERE (ABS((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, 0.3450275047004979, v0.c0, vt1.c0, v0.c0)))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c4) NOTNULL) THEN CASE 0.5952823164264859  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((-1992931717)>(rt0.c2)) WHEN rt0.c1 THEN x'' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4) NOTNULL) THEN CASE 0.5952823164264859  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((-1992931717)>(rt0.c2)) WHEN rt0.c1 THEN x'' COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c4) NOTNULL) THEN CASE 0.5952823164264859  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((-1992931717)>(rt0.c2)) WHEN rt0.c1 THEN x'' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4) NOTNULL) THEN CASE 0.5952823164264859  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((-1992931717)>(rt0.c2)) WHEN rt0.c1 THEN x'' COLLATE NOCASE END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c4) NOTNULL) THEN CASE 0.5952823164264859  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((-1992931717)>(rt0.c2)) WHEN rt0.c1 THEN x'' COLLATE NOCASE END);
SELECT ALL * FROM vt2, vt1, vt0, v0 WHERE (LIKE(CASE WHEN vt2.c0 THEN v0.c0 END, (v0.c0 IN (vt1.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE WHEN vt2.c0 THEN v0.c0 END, (v0.c0 IN (vt1.c0, v0.c0)))) IS TRUE)  as count FROM vt2, vt1, vt0, v0);
SELECT ALL * FROM vt2, vt1, vt0, v0 WHERE (LIKE(CASE WHEN vt2.c0 THEN v0.c0 END, (v0.c0 IN (vt1.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE WHEN vt2.c0 THEN v0.c0 END, (v0.c0 IN (vt1.c0, v0.c0)))) IS TRUE)  as count FROM vt2, vt1, vt0, v0);
SELECT ALL * FROM vt2, vt1, vt0, v0 WHERE (LIKE(CASE WHEN vt2.c0 THEN v0.c0 END, (v0.c0 IN (vt1.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))<=(((NOT (-2.46365427E8)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))<=(((NOT (-2.46365427E8)))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))<=(((NOT (-2.46365427E8)))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))<=(((NOT (-2.46365427E8)))))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))<=(((NOT (-2.46365427E8)))))) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM vt1, vt2, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT ALL * FROM vt1, vt2, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT ALL * FROM vt1, vt2, vt0 WHERE ('');
SELECT ALL * FROM vt2 NOT INDEXED, vt0 NATURAL JOIN v0 WHERE ((((((vt2.c0, vt0.c0, v0.c0)) BETWEEN ((vt2.c0, 'Aea< kN', 1.274001423E9)) AND ((vt0.c0, v0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0, vt0.c0, v0.c0)) BETWEEN ((vt2.c0, 'Aea< kN', 1.274001423E9)) AND ((vt0.c0, v0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt2, vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt2 NOT INDEXED, vt0 NATURAL JOIN v0 WHERE ((((((vt2.c0, vt0.c0, v0.c0)) BETWEEN ((vt2.c0, 'Aea< kN', 1.274001423E9)) AND ((vt0.c0, v0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0, vt0.c0, v0.c0)) BETWEEN ((vt2.c0, 'Aea< kN', 1.274001423E9)) AND ((vt0.c0, v0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt2, vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt2 NOT INDEXED, vt0 NATURAL JOIN v0 WHERE ((((((vt2.c0, vt0.c0, v0.c0)) BETWEEN ((vt2.c0, 'Aea< kN', 1.274001423E9)) AND ((vt0.c0, v0.c0, vt0.c0)))) IS FALSE));
SELECT COUNT(*) FROM vt0, vt2, vt1, v0 WHERE ((((vt1.c0)) BETWEEN ((((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((x'')))) IS TRUE)  as count FROM vt0, vt2, vt1, v0);
SELECT COUNT(*) FROM vt0, vt2, vt1, v0 WHERE ((((vt1.c0)) BETWEEN ((((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((x'')))) IS TRUE)  as count FROM vt0, vt2, vt1, v0);
SELECT COUNT(*) FROM vt0, vt2, vt1, v0 WHERE ((((vt1.c0)) BETWEEN ((((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((x''))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<((('')>(rt0.c0))))) ORDER BY '4';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<((('')>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY '4');
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<((('')>(rt0.c0))))) ORDER BY '4';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<((('')>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY '4');
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<((('')>(rt0.c0))))) ORDER BY '4';
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt2 ON ((((((((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)))AND(vt2.c0))) IS FALSE) WHERE (CAST('520889784' AS TEXT)) ORDER BY ((RTRIM(vt1.c0)) BETWEEN (vt1.c0) AND (((vt1.c0)=(vt2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('520889784' AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON ((((((((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)))AND(vt2.c0))) IS FALSE) ORDER BY ((RTRIM(vt1.c0)) BETWEEN (vt1.c0) AND (((vt1.c0)=(vt2.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt2 ON ((((((((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)))AND(vt2.c0))) IS FALSE) WHERE (CAST('520889784' AS TEXT)) ORDER BY ((RTRIM(vt1.c0)) BETWEEN (vt1.c0) AND (((vt1.c0)=(vt2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('520889784' AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON ((((((((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)))AND(vt2.c0))) IS FALSE) ORDER BY ((RTRIM(vt1.c0)) BETWEEN (vt1.c0) AND (((vt1.c0)=(vt2.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt2 ON ((((((((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c0)))AND(vt2.c0))) IS FALSE) WHERE (CAST('520889784' AS TEXT)) ORDER BY ((RTRIM(vt1.c0)) BETWEEN (vt1.c0) AND (((vt1.c0)=(vt2.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((((((((((NOT (rt0.c1)))AND((rt0.c0 IN (rt0.c1)))))OR((((rt0.c0))>=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(UNLIKELY(vt0.c0)))) ORDER BY (((json_type(rt0.c2)))<=(((~ (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt0.c1)))AND((rt0.c0 IN (rt0.c1)))))OR((((rt0.c0))>=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY (((json_type(rt0.c2)))<=(((~ (rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((((((((((NOT (rt0.c1)))AND((rt0.c0 IN (rt0.c1)))))OR((((rt0.c0))>=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(UNLIKELY(vt0.c0)))) ORDER BY (((json_type(rt0.c2)))<=(((~ (rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt0.c1)))AND((rt0.c0 IN (rt0.c1)))))OR((((rt0.c0))>=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 ORDER BY (((json_type(rt0.c2)))<=(((~ (rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((((((((((NOT (rt0.c1)))AND((rt0.c0 IN (rt0.c1)))))OR((((rt0.c0))>=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))))OR(UNLIKELY(vt0.c0)))) ORDER BY (((json_type(rt0.c2)))<=(((~ (rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE (((CAST(vt2.c0 AS BLOB)) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS BLOB)) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE (((CAST(vt2.c0 AS BLOB)) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS BLOB)) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE (((CAST(vt2.c0 AS BLOB)) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0, v0, vt1 WHERE (((((((((((vt1.c0)AND(v0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(v0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE (((((((((((vt1.c0)AND(v0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(v0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT ALL * FROM rt0, v0, vt1 WHERE (((((((((((vt1.c0)AND(v0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt2, vt1, vt0 WHERE (((((CASE WHEN -1.120735329E9 THEN vt0.c0 ELSE vt1.c0 END)OR(((vt0.c0) ISNULL))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN -1.120735329E9 THEN vt0.c0 ELSE vt1.c0 END)OR(((vt0.c0) ISNULL))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0 WHERE (((((CASE WHEN -1.120735329E9 THEN vt0.c0 ELSE vt1.c0 END)OR(((vt0.c0) ISNULL))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN -1.120735329E9 THEN vt0.c0 ELSE vt1.c0 END)OR(((vt0.c0) ISNULL))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0 WHERE (((((CASE WHEN -1.120735329E9 THEN vt0.c0 ELSE vt1.c0 END)OR(((vt0.c0) ISNULL))))AND(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>(vt1.c0)), vt1.c0)) AND (((- (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((-5.77556925E8)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>(vt1.c0)), vt1.c0)) AND (((- (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((-5.77556925E8))))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>(vt1.c0)), vt1.c0)) AND (((- (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((-5.77556925E8)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>(vt1.c0)), vt1.c0)) AND (((- (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((-5.77556925E8))))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>(vt1.c0)), vt1.c0)) AND (((- (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((-5.77556925E8)))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC))OR(CASE rt0.c4  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c4 END)))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((0.4838979783384728)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS NUMERIC))OR(CASE rt0.c4  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c4 END)))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((0.4838979783384728)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC))OR(CASE rt0.c4  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c4 END)))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((0.4838979783384728)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c3 AS NUMERIC))OR(CASE rt0.c4  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c4 END)))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((0.4838979783384728)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((CAST(rt0.c3 AS NUMERIC))OR(CASE rt0.c4  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c4 END)))AND(rt0.c3 COLLATE BINARY))) ORDER BY (((0.4838979783384728)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN v0 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (v0.c0 IN ()) THEN ((vt1.c0) ISNULL) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (NOT (v0.c0)) WHEN ((vt0.c0)|(0.4294127741151691)) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) END WHERE ((((((vt0.c0))>=((vt1.c0))))==(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((v0.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt1.c0))))=(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN v0 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (v0.c0 IN ()) THEN ((vt1.c0) ISNULL) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (NOT (v0.c0)) WHEN ((vt0.c0)|(0.4294127741151691)) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) END ORDER BY (((v0.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN v0 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (v0.c0 IN ()) THEN ((vt1.c0) ISNULL) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (NOT (v0.c0)) WHEN ((vt0.c0)|(0.4294127741151691)) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) END WHERE ((((((vt0.c0))>=((vt1.c0))))==(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((v0.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((vt1.c0))))=(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN v0 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (v0.c0 IN ()) THEN ((vt1.c0) ISNULL) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (NOT (v0.c0)) WHEN ((vt0.c0)|(0.4294127741151691)) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) END ORDER BY (((v0.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN v0 ON CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (v0.c0 IN ()) THEN ((vt1.c0) ISNULL) WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN (NOT (v0.c0)) WHEN ((vt0.c0)|(0.4294127741151691)) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) END WHERE ((((((vt0.c0))>=((vt1.c0))))==(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((v0.c0)OR(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0, v0, vt0 WHERE (((0.8063144183856091) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.8063144183856091) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, v0, vt0);
SELECT * FROM vt1, rt0, v0, vt0 WHERE (((0.8063144183856091) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.8063144183856091) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, v0, vt0);
SELECT * FROM vt1, rt0, v0, vt0 WHERE (((0.8063144183856091) IS TRUE));
SELECT ALL * FROM rt0, v0, vt0, vt1 WHERE ((((((rt0.c2))<>((rt0.c3)))) BETWEEN (NULL COLLATE NOCASE) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((rt0.c3)))) BETWEEN (NULL COLLATE NOCASE) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0, vt1);
SELECT ALL * FROM rt0, v0, vt0, vt1 WHERE ((((((rt0.c2))<>((rt0.c3)))) BETWEEN (NULL COLLATE NOCASE) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((rt0.c3)))) BETWEEN (NULL COLLATE NOCASE) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0, vt1);
SELECT ALL * FROM rt0, v0, vt0, vt1 WHERE ((((((rt0.c2))<>((rt0.c3)))) BETWEEN (NULL COLLATE NOCASE) AND ((vt1.c0 IN ()))));
SELECT * FROM vt1, rt0, vt2, v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt2, v0);
SELECT * FROM vt1, rt0, vt2, v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt2, v0);
SELECT * FROM vt1, rt0, vt2, v0 WHERE (CAST(rt0.c1 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN x'5c3e' THEN vt1.c0 END COLLATE RTRIM) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN x'5c3e' THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN x'5c3e' THEN vt1.c0 END COLLATE RTRIM) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN x'5c3e' THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN x'5c3e' THEN vt1.c0 END COLLATE RTRIM) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(vt1.c0 COLLATE RTRIM)) ASC;
SELECT * FROM vt0, vt2, rt0, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c0))))LIKE(CASE rt0.c3  WHEN v0.c0 THEN vt2.c0 ELSE '-547234422' END))) ORDER BY NULLIF(((((vt0.c0)OR(vt0.c0)))AND(x'')), json_array(rt0.c4, rt0.c4)), (((vt0.c0))<((rt0.c2 COLLATE BINARY))) ASC  NULLS FIRST, (((vt2.c0)) NOT BETWEEN (((('-1243439422') BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((rt0.c4 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c0))))LIKE(CASE rt0.c3  WHEN v0.c0 THEN vt2.c0 ELSE '-547234422' END))) IS TRUE)  as count FROM vt0, vt2, rt0, v0 ORDER BY NULLIF(((((vt0.c0)OR(vt0.c0)))AND(x'')), json_array(rt0.c4, rt0.c4)), (((vt0.c0))<((rt0.c2 COLLATE BINARY))) ASC  NULLS FIRST, (((vt2.c0)) NOT BETWEEN (((('-1243439422') BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((rt0.c4 IN ())))) ASC);
SELECT * FROM vt0, vt2, rt0, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c0))))LIKE(CASE rt0.c3  WHEN v0.c0 THEN vt2.c0 ELSE '-547234422' END))) ORDER BY NULLIF(((((vt0.c0)OR(vt0.c0)))AND(x'')), json_array(rt0.c4, rt0.c4)), (((vt0.c0))<((rt0.c2 COLLATE BINARY))) ASC  NULLS FIRST, (((vt2.c0)) NOT BETWEEN (((('-1243439422') BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((rt0.c4 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c0))))LIKE(CASE rt0.c3  WHEN v0.c0 THEN vt2.c0 ELSE '-547234422' END))) IS TRUE)  as count FROM vt0, vt2, rt0, v0 ORDER BY NULLIF(((((vt0.c0)OR(vt0.c0)))AND(x'')), json_array(rt0.c4, rt0.c4)), (((vt0.c0))<((rt0.c2 COLLATE BINARY))) ASC  NULLS FIRST, (((vt2.c0)) NOT BETWEEN (((('-1243439422') BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((rt0.c4 IN ())))) ASC);
SELECT * FROM vt0, vt2, rt0, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c0))))LIKE(CASE rt0.c3  WHEN v0.c0 THEN vt2.c0 ELSE '-547234422' END))) ORDER BY NULLIF(((((vt0.c0)OR(vt0.c0)))AND(x'')), json_array(rt0.c4, rt0.c4)), (((vt0.c0))<((rt0.c2 COLLATE BINARY))) ASC  NULLS FIRST, (((vt2.c0)) NOT BETWEEN (((('-1243439422') BETWEEN (rt0.c3) AND (rt0.c0)))) AND (((rt0.c4 IN ())))) ASC;
SELECT COUNT(*) FROM v0 NATURAL JOIN vt2 WHERE (CASE vt2.c0 COLLATE BINARY  WHEN LTRIM(v0.c0, x'') THEN CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END ELSE ((vt2.c0)&(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt2.c0 COLLATE BINARY  WHEN LTRIM(v0.c0, x'') THEN CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END ELSE ((vt2.c0)&(v0.c0)) END) IS TRUE)  as count FROM v0 NATURAL JOIN vt2);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt2 WHERE (CASE vt2.c0 COLLATE BINARY  WHEN LTRIM(v0.c0, x'') THEN CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END ELSE ((vt2.c0)&(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt2.c0 COLLATE BINARY  WHEN LTRIM(v0.c0, x'') THEN CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END ELSE ((vt2.c0)&(v0.c0)) END) IS TRUE)  as count FROM v0 NATURAL JOIN vt2);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt2 WHERE (CASE vt2.c0 COLLATE BINARY  WHEN LTRIM(v0.c0, x'') THEN CASE v0.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE x'' END ELSE ((vt2.c0)&(v0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6714857494415472 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0)<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6714857494415472 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0)!=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6714857494415472 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0)<>(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6714857494415472 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0)!=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6714857494415472 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0)<>(vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN (NULL)), 0.38491173290621206));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (vt0.c0 IN (NULL)), 0.38491173290621206)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN (NULL)), 0.38491173290621206));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (vt0.c0 IN (NULL)), 0.38491173290621206)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c0 IN (NULL)), 0.38491173290621206));
SELECT ALL * FROM vt2 WHERE (CASE WHEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) ELSE vt2.c0 COLLATE RTRIM END) ORDER BY ((((vt2.c0) ISNULL)) NOT BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (((vt2.c0)*(vt2.c0)))) ASC, CHAR(vt2.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) ELSE vt2.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0) ISNULL)) NOT BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (((vt2.c0)*(vt2.c0)))) ASC, CHAR(vt2.c0) COLLATE RTRIM DESC);
SELECT ALL * FROM vt2 WHERE (CASE WHEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) ELSE vt2.c0 COLLATE RTRIM END) ORDER BY ((((vt2.c0) ISNULL)) NOT BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (((vt2.c0)*(vt2.c0)))) ASC, CHAR(vt2.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) ELSE vt2.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0) ISNULL)) NOT BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (((vt2.c0)*(vt2.c0)))) ASC, CHAR(vt2.c0) COLLATE RTRIM DESC);
SELECT ALL * FROM vt2 WHERE (CASE WHEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) ELSE vt2.c0 COLLATE RTRIM END) ORDER BY ((((vt2.c0) ISNULL)) NOT BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END) AND (((vt2.c0)*(vt2.c0)))) ASC, CHAR(vt2.c0) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (NULL) ORDER BY ((((v0.c0)AND(((v0.c0)IS(v0.c0)))))AND(((0.98389711699956) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((((v0.c0)AND(((v0.c0)IS(v0.c0)))))AND(((0.98389711699956) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (NULL) ORDER BY ((((v0.c0)AND(((v0.c0)IS(v0.c0)))))AND(((0.98389711699956) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((((v0.c0)AND(((v0.c0)IS(v0.c0)))))AND(((0.98389711699956) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (NULL) ORDER BY ((((v0.c0)AND(((v0.c0)IS(v0.c0)))))AND(((0.98389711699956) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt2, v0, vt0, rt0, vt1 WHERE ((CAST(NULL AS REAL) IN ((rt0.c1 IN ())))) ORDER BY CAST(((rt0.c4)=(rt0.c0)) AS TEXT) ASC  NULLS LAST, CAST(((v0.c0)<(rt0.c3)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(NULL AS REAL) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt2, v0, vt0, rt0, vt1 ORDER BY CAST(((rt0.c4)==(rt0.c0)) AS TEXT) ASC  NULLS LAST, CAST(((v0.c0)<(rt0.c3)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0, vt0, rt0, vt1 WHERE ((CAST(NULL AS REAL) IN ((rt0.c1 IN ())))) ORDER BY CAST(((rt0.c4)=(rt0.c0)) AS TEXT) ASC  NULLS LAST, CAST(((v0.c0)<(rt0.c3)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(NULL AS REAL) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt2, v0, vt0, rt0, vt1 ORDER BY CAST(((rt0.c4)==(rt0.c0)) AS TEXT) ASC  NULLS LAST, CAST(((v0.c0)<(rt0.c3)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0, vt0, rt0, vt1 WHERE ((CAST(NULL AS REAL) IN ((rt0.c1 IN ())))) ORDER BY CAST(((rt0.c4)=(rt0.c0)) AS TEXT) ASC  NULLS LAST, CAST(((v0.c0)<(rt0.c3)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE WHERE (HEX((rt0.c2 IN (rt0.c3, vt0.c0)))) ORDER BY rt0.c4  NULLS FIRST, ((- (vt0.c0)) IN (((rt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX((rt0.c2 IN (rt0.c3, vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE ORDER BY rt0.c4  NULLS FIRST, ((- (vt0.c0)) IN (((rt0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE WHERE (HEX((rt0.c2 IN (rt0.c3, vt0.c0)))) ORDER BY rt0.c4  NULLS FIRST, ((- (vt0.c0)) IN (((rt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX((rt0.c2 IN (rt0.c3, vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE ORDER BY rt0.c4  NULLS FIRST, ((- (vt0.c0)) IN (((rt0.c0) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE BINARY COLLATE NOCASE WHERE (HEX((rt0.c2 IN (rt0.c3, vt0.c0)))) ORDER BY rt0.c4  NULLS FIRST, ((- (vt0.c0)) IN (((rt0.c0) NOT NULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt2, v0, vt0, vt1 WHERE (((0.3624850529724808)/(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c3))<>((rt0.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3624850529724808)/(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt2, v0, vt0, vt1 ORDER BY ((((rt0.c3))!=((rt0.c1))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt2, v0, vt0, vt1 WHERE (((0.3624850529724808)/(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c3))<>((rt0.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3624850529724808)/(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt2, v0, vt0, vt1 ORDER BY ((((rt0.c3))!=((rt0.c1))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt2, v0, vt0, vt1 WHERE (((0.3624850529724808)/(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c3))<>((rt0.c1))) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0, v0 WHERE (0.7874952810802539);
SELECT SUM(count) FROM (SELECT ALL ((0.7874952810802539) IS TRUE)  as count FROM vt1, vt2, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0, v0 WHERE (0.7874952810802539);
SELECT SUM(count) FROM (SELECT ALL ((0.7874952810802539) IS TRUE)  as count FROM vt1, vt2, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0, v0 WHERE (0.7874952810802539);
SELECT ALL COUNT(*) FROM vt2, vt0, v0, rt0 WHERE (LOWER(((rt0.c0) BETWEEN (x'') AND (vt0.c0)))) ORDER BY ((0.0751652284032377) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0) BETWEEN (x'') AND (vt0.c0)))) IS TRUE)  as count FROM vt2, vt0, v0, rt0 ORDER BY ((0.0751652284032377) NOTNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt2, vt0, v0, rt0 WHERE (LOWER(((rt0.c0) BETWEEN (x'') AND (vt0.c0)))) ORDER BY ((0.0751652284032377) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0) BETWEEN (x'') AND (vt0.c0)))) IS TRUE)  as count FROM vt2, vt0, v0, rt0 ORDER BY ((0.0751652284032377) NOTNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt2, vt0, v0, rt0 WHERE (LOWER(((rt0.c0) BETWEEN (x'') AND (vt0.c0)))) ORDER BY ((0.0751652284032377) NOTNULL) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))=(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY ((((rt0.c0)>('1357459691')))>=(((rt0.c3)AND(rt0.c2))))  NULLS LAST, (((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c0)&(rt0.c4)), (((rt0.c2, rt0.c0, 0.4657158296424865)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, '739319930'))), ((((((((rt0.c2)OR(2.119765852E9)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))) AND (((NOT (rt0.c3)), CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))==(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>('1357459691')))>=(((rt0.c3)AND(rt0.c2))))  NULLS LAST, (((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c0)&(rt0.c4)), (((rt0.c2, rt0.c0, 0.4657158296424865)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, '739319930'))), ((((((((rt0.c2)OR(2.119765852E9)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))) AND (((NOT (rt0.c3)), CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))=(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY ((((rt0.c0)>('1357459691')))>=(((rt0.c3)AND(rt0.c2))))  NULLS LAST, (((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c0)&(rt0.c4)), (((rt0.c2, rt0.c0, 0.4657158296424865)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, '739319930'))), ((((((((rt0.c2)OR(2.119765852E9)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))) AND (((NOT (rt0.c3)), CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))==(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>('1357459691')))>=(((rt0.c3)AND(rt0.c2))))  NULLS LAST, (((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c0)&(rt0.c4)), (((rt0.c2, rt0.c0, 0.4657158296424865)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, '739319930'))), ((((((((rt0.c2)OR(2.119765852E9)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))) AND (((NOT (rt0.c3)), CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))=(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY ((((rt0.c0)>('1357459691')))>=(((rt0.c3)AND(rt0.c2))))  NULLS LAST, (((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c0)&(rt0.c4)), (((rt0.c2, rt0.c0, 0.4657158296424865)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, '739319930'))), ((((((((rt0.c2)OR(2.119765852E9)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))) AND (((NOT (rt0.c3)), CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, rt0.c3)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)==(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)==(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)==(vt1.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1, v0 WHERE ((((((rt0.c4 IN ()))OR('862470779')))AND(vt2.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4 IN ()))OR('862470779')))AND(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt2, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1, v0 WHERE ((((((rt0.c4 IN ()))OR('862470779')))AND(vt2.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4 IN ()))OR('862470779')))AND(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt2, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1, v0 WHERE ((((((rt0.c4 IN ()))OR('862470779')))AND(vt2.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt2, v0, rt0, vt0, vt1 WHERE ((((((vt2.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN -1677818095 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c0) AND ((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN -1677818095 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt2, v0, rt0, vt0, vt1 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c0) AND ((rt0.c3 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0, rt0, vt0, vt1 WHERE ((((((vt2.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN -1677818095 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c0) AND ((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN -1677818095 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt2, v0, rt0, vt0, vt1 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c0) AND ((rt0.c3 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0, rt0, vt0, vt1 WHERE ((((((vt2.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN -1677818095 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c0) AND ((rt0.c3 IN ())))  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt2, vt1 WHERE ((NOT ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt2, vt1);
SELECT ALL * FROM rt0, v0, vt2, vt1 WHERE ((NOT ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt2, vt1);
SELECT ALL * FROM rt0, v0, vt2, vt1 WHERE ((NOT ((- (rt0.c2)))));
SELECT ALL * FROM vt1, vt2, v0 WHERE (((((vt2.c0) NOT BETWEEN (v0.c0) AND (0xffffffffd1750603)))AND('0.6347250015085264')));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (v0.c0) AND (0xffffffffd1750603)))AND('0.6347250015085264'))) IS TRUE)  as count FROM vt1, vt2, v0);
SELECT ALL * FROM vt1, vt2, v0 WHERE (((((vt2.c0) NOT BETWEEN (v0.c0) AND (0xffffffffd1750603)))AND('0.6347250015085264')));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (v0.c0) AND (0xffffffffd1750603)))AND('0.6347250015085264'))) IS TRUE)  as count FROM vt1, vt2, v0);
SELECT ALL * FROM vt1, vt2, v0 WHERE (((((vt2.c0) NOT BETWEEN (v0.c0) AND (0xffffffffd1750603)))AND('0.6347250015085264')));
SELECT ALL COUNT(*) FROM v0, rt0, vt2 INNER JOIN vt0 ON ((((((vt1.c0, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3, x'', rt0.c3)) AND ((rt0.c3, v0.c0, v0.c0)))))>((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0))))) FULL OUTER JOIN vt1 ON COALESCE((vt0.c0 IN ()), CASE WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt2.c0 END, (((vt0.c0))>=((rt0.c1))), (rt0.c4 IN ())) WHERE (CASE rt0.c4  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c4 END COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt2 INNER JOIN vt0 ON ((((((vt1.c0, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3, x'', rt0.c3)) AND ((rt0.c3, v0.c0, v0.c0)))))>((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0))))) FULL OUTER JOIN vt1 ON COALESCE((vt0.c0 IN ()), CASE WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt2.c0 END, (((vt0.c0))>=((rt0.c1))), (rt0.c4 IN ())));
SELECT ALL COUNT(*) FROM v0, rt0, vt2 INNER JOIN vt0 ON ((((((vt1.c0, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3, x'', rt0.c3)) AND ((rt0.c3, v0.c0, v0.c0)))))>((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0))))) FULL OUTER JOIN vt1 ON COALESCE((vt0.c0 IN ()), CASE WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt2.c0 END, (((vt0.c0))>=((rt0.c1))), (rt0.c4 IN ())) WHERE (CASE rt0.c4  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c4 END COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt2 INNER JOIN vt0 ON ((((((vt1.c0, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3, x'', rt0.c3)) AND ((rt0.c3, v0.c0, v0.c0)))))>((((rt0.c2) BETWEEN (v0.c0) AND (vt0.c0))))) FULL OUTER JOIN vt1 ON COALESCE((vt0.c0 IN ()), CASE WHEN rt0.c4 THEN vt2.c0 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt2.c0 END, (((vt0.c0))>=((rt0.c1))), (rt0.c4 IN ())));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((MAX(vt1.c0, 0.43948269039936616, vt1.c0, '1770117410'))<>(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((MAX(vt1.c0, 0.43948269039936616, vt1.c0, '1770117410'))<>(vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((MAX(vt1.c0, 0.43948269039936616, vt1.c0, '1770117410'))<>(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((MAX(vt1.c0, 0.43948269039936616, vt1.c0, '1770117410'))<>(vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((MAX(vt1.c0, 0.43948269039936616, vt1.c0, '1770117410'))<>(vt1.c0))  NULLS LAST;
SELECT * FROM vt1, vt0, v0 NOT INDEXED WHERE (('816513607' IN ()));
SELECT SUM(count) FROM (SELECT ((('816513607' IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 NOT INDEXED WHERE (('816513607' IN ()));
SELECT SUM(count) FROM (SELECT ((('816513607' IN ())) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 NOT INDEXED WHERE (('816513607' IN ()));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c3 AS BLOB))<>(rt0.c0 COLLATE RTRIM))) ORDER BY (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3))))  NULLS LAST, ((((UPPER(DISTINCT rt0.c1))AND(CAST(rt0.c1 AS BLOB))))AND(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))<>(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3))))  NULLS LAST, ((((UPPER(DISTINCT rt0.c1))AND(CAST(rt0.c1 AS BLOB))))AND(NULL)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c3 AS BLOB))<>(rt0.c0 COLLATE RTRIM))) ORDER BY (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3))))  NULLS LAST, ((((UPPER(DISTINCT rt0.c1))AND(CAST(rt0.c1 AS BLOB))))AND(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))<>(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3))))  NULLS LAST, ((((UPPER(DISTINCT rt0.c1))AND(CAST(rt0.c1 AS BLOB))))AND(NULL)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CAST(rt0.c3 AS BLOB))<>(rt0.c0 COLLATE RTRIM))) ORDER BY (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c3))))  NULLS LAST, ((((UPPER(DISTINCT rt0.c1))AND(CAST(rt0.c1 AS BLOB))))AND(NULL)) DESC;
SELECT * FROM v0, vt0, rt0, vt2 WHERE ((((CASE WHEN 0Xffffffffb6cf6ac9 THEN vt0.c0 END))<((((vt2.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN 0xffffffffb6cf6ac9 THEN vt0.c0 END))<((((vt2.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0, rt0, vt2);
SELECT * FROM v0, vt0, rt0, vt2 WHERE ((((CASE WHEN 0Xffffffffb6cf6ac9 THEN vt0.c0 END))<((((vt2.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN 0xffffffffb6cf6ac9 THEN vt0.c0 END))<((((vt2.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0, rt0, vt2);
SELECT * FROM v0, vt0, rt0, vt2 WHERE ((((CASE WHEN 0Xffffffffb6cf6ac9 THEN vt0.c0 END))<((((vt2.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt0, v0, vt1, vt2 WHERE (vt0.c0) ORDER BY ABS(vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, vt1, vt2 ORDER BY ABS(vt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0, v0, vt1, vt2 WHERE (vt0.c0) ORDER BY ABS(vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0, vt1, vt2 ORDER BY ABS(vt0.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0, v0, vt1, vt2 WHERE (vt0.c0) ORDER BY ABS(vt0.c0 COLLATE NOCASE);
SELECT * FROM rt0, v0, vt2, vt1, vt0 WHERE (((((rt0.c1)|(rt0.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt2, vt1, vt0);
SELECT * FROM rt0, v0, vt2, vt1, vt0 WHERE (((((rt0.c1)|(rt0.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c4))) NOT NULL)) IS TRUE)  as count FROM rt0, v0, vt2, vt1, vt0);
SELECT * FROM rt0, v0, vt2, vt1, vt0 WHERE (((((rt0.c1)|(rt0.c4))) NOT NULL));
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE RTRIM WHERE (CASE WHEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END THEN CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt0.c1 END WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((((v0.c0)AND(rt0.c1)))OR(NULL)) THEN ((v0.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END) ORDER BY ((rt0.c1)>>((rt0.c4 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END THEN CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt0.c1 END WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((((v0.c0)AND(rt0.c1)))OR(NULL)) THEN ((v0.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE RTRIM ORDER BY ((rt0.c1)>>((rt0.c4 IN (vt0.c0)))) ASC);
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE RTRIM WHERE (CASE WHEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END THEN CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt0.c1 END WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((((v0.c0)AND(rt0.c1)))OR(NULL)) THEN ((v0.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END) ORDER BY ((rt0.c1)>>((rt0.c4 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END THEN CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt0.c1 END WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((((v0.c0)AND(rt0.c1)))OR(NULL)) THEN ((v0.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE RTRIM ORDER BY ((rt0.c1)>>((rt0.c4 IN (vt0.c0)))) ASC);
SELECT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON v0.c0 COLLATE RTRIM WHERE (CASE WHEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c1 END THEN CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt0.c1 END WHEN rt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((((v0.c0)AND(rt0.c1)))OR(NULL)) THEN ((v0.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END) ORDER BY ((rt0.c1)>>((rt0.c4 IN (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt2, rt0 WHERE (((((rt0.c4)GLOB(rt0.c3)))GLOB(CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)GLOB(rt0.c3)))GLOB(CASE WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, vt2, rt0);
SELECT ALL COUNT(*) FROM vt1, vt2, rt0 WHERE (((((rt0.c4)GLOB(rt0.c3)))GLOB(CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)GLOB(rt0.c3)))GLOB(CASE WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM vt1, vt2, rt0);
SELECT ALL COUNT(*) FROM vt1, vt2, rt0 WHERE (((((rt0.c4)GLOB(rt0.c3)))GLOB(CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (((json_type(vt1.c0)) NOT NULL)) ORDER BY '1285366993' ASC  NULLS LAST, NULLIF(DISTINCT rt0.c4, rt0.c4) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt2, vt1, rt0 NOT INDEXED, vt0 ORDER BY '1285366993' ASC  NULLS LAST, NULLIF(DISTINCT rt0.c4, rt0.c4) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (((json_type(vt1.c0)) NOT NULL)) ORDER BY '1285366993' ASC  NULLS LAST, NULLIF(DISTINCT rt0.c4, rt0.c4) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt2, vt1, rt0 NOT INDEXED, vt0 ORDER BY '1285366993' ASC  NULLS LAST, NULLIF(DISTINCT rt0.c4, rt0.c4) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt2 WHERE (LIKELY(-1762684954)) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN '473956162' COLLATE BINARY THEN ((vt0.c0)||(vt0.c0)) END  NULLS FIRST, (((vt0.c0 IN ()))&(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(-1762684954)) IS TRUE)  as count FROM vt0, vt2 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN '473956162' COLLATE BINARY THEN ((vt0.c0)||(vt0.c0)) END  NULLS FIRST, (((vt0.c0 IN ()))&(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt2 WHERE (LIKELY(-1762684954)) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN '473956162' COLLATE BINARY THEN ((vt0.c0)||(vt0.c0)) END  NULLS FIRST, (((vt0.c0 IN ()))&(vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(-1762684954)) IS TRUE)  as count FROM vt0, vt2 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN '473956162' COLLATE BINARY THEN ((vt0.c0)||(vt0.c0)) END  NULLS FIRST, (((vt0.c0 IN ()))&(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt2 WHERE (LIKELY(-1762684954)) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN '473956162' COLLATE BINARY THEN ((vt0.c0)||(vt0.c0)) END  NULLS FIRST, (((vt0.c0 IN ()))&(vt0.c0 COLLATE NOCASE));
SELECT * FROM vt2, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0))) NOT NULL)) ORDER BY ((((vt2.c0)AND(vt2.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (SQLITE_SOURCE_ID())) DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((- (vt2.c0))) AND (((NULL) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((((vt2.c0)AND(vt2.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (SQLITE_SOURCE_ID())) DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((- (vt2.c0))) AND (((NULL) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt2, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0))) NOT NULL)) ORDER BY ((((vt2.c0)AND(vt2.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (SQLITE_SOURCE_ID())) DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((- (vt2.c0))) AND (((NULL) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((((vt2.c0)AND(vt2.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (SQLITE_SOURCE_ID())) DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((- (vt2.c0))) AND (((NULL) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt2, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (vt0.c0))) NOT NULL)) ORDER BY ((((vt2.c0)AND(vt2.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (SQLITE_SOURCE_ID())) DESC  NULLS FIRST, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((- (vt2.c0))) AND (((NULL) IS TRUE)))  NULLS FIRST;
SELECT COUNT(*) FROM vt2 WHERE (LIKE(vt2.c0 COLLATE NOCASE, vt2.c0 COLLATE RTRIM, 's'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt2.c0 COLLATE NOCASE, vt2.c0 COLLATE RTRIM, 's')) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (LIKE(vt2.c0 COLLATE NOCASE, vt2.c0 COLLATE RTRIM, 's'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt2.c0 COLLATE NOCASE, vt2.c0 COLLATE RTRIM, 's')) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (LIKE(vt2.c0 COLLATE NOCASE, vt2.c0 COLLATE RTRIM, 's'));
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((('*Tp	qAJh3', (rt0.c0 IN ()), v0.c0, (+ (vt0.c0)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END))=((CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, ((1542088990)!=(rt0.c4)), ((rt0.c4) NOTNULL), CAST(rt0.c2 AS TEXT), (((v0.c0, rt0.c2, rt0.c4)) NOT BETWEEN (('Ugળ*ὴ', rt0.c0, rt0.c4)) AND ((rt0.c4, v0.c0, v0.c0)))))) WHERE ((((rt0.c1 IN ()))LIKE(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY 'B≬oMYq'  NULLS LAST, json_patch((((rt0.c1))>=(('N-M㧔xf\'))), ((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))  NULLS FIRST, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))LIKE(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((('*Tp	qAJh3', (rt0.c0 IN ()), v0.c0, (+ (vt0.c0)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END))==((CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, ((1542088990)!=(rt0.c4)), ((rt0.c4) NOTNULL), CAST(rt0.c2 AS TEXT), (((v0.c0, rt0.c2, rt0.c4)) NOT BETWEEN (('Ugળ*ὴ', rt0.c0, rt0.c4)) AND ((rt0.c4, v0.c0, v0.c0)))))) ORDER BY 'B≬oMYq'  NULLS LAST, json_patch((((rt0.c1))>=(('N-M㧔xf\'))), ((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))  NULLS FIRST, rt0.c1 ASC  NULLS FIRST);
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((('*Tp	qAJh3', (rt0.c0 IN ()), v0.c0, (+ (vt0.c0)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END))=((CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, ((1542088990)!=(rt0.c4)), ((rt0.c4) NOTNULL), CAST(rt0.c2 AS TEXT), (((v0.c0, rt0.c2, rt0.c4)) NOT BETWEEN (('Ugળ*ὴ', rt0.c0, rt0.c4)) AND ((rt0.c4, v0.c0, v0.c0)))))) WHERE ((((rt0.c1 IN ()))LIKE(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY 'B≬oMYq'  NULLS LAST, json_patch((((rt0.c1))>=(('N-M㧔xf\'))), ((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))  NULLS FIRST, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))LIKE(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((('*Tp	qAJh3', (rt0.c0 IN ()), v0.c0, (+ (vt0.c0)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END))==((CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, ((1542088990)!=(rt0.c4)), ((rt0.c4) NOTNULL), CAST(rt0.c2 AS TEXT), (((v0.c0, rt0.c2, rt0.c4)) NOT BETWEEN (('Ugળ*ὴ', rt0.c0, rt0.c4)) AND ((rt0.c4, v0.c0, v0.c0)))))) ORDER BY 'B≬oMYq'  NULLS LAST, json_patch((((rt0.c1))>=(('N-M㧔xf\'))), ((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))  NULLS FIRST, rt0.c1 ASC  NULLS FIRST);
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((('*Tp	qAJh3', (rt0.c0 IN ()), v0.c0, (+ (vt0.c0)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END))=((CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END, ((1542088990)!=(rt0.c4)), ((rt0.c4) NOTNULL), CAST(rt0.c2 AS TEXT), (((v0.c0, rt0.c2, rt0.c4)) NOT BETWEEN (('Ugળ*ὴ', rt0.c0, rt0.c4)) AND ((rt0.c4, v0.c0, v0.c0)))))) WHERE ((((rt0.c1 IN ()))LIKE(((v0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) ORDER BY 'B≬oMYq'  NULLS LAST, json_patch((((rt0.c1))>=(('N-M㧔xf\'))), ((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))  NULLS FIRST, rt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt2, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt2, vt1);
SELECT COUNT(*) FROM rt0, v0, vt2, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, v0, vt2, vt1);
SELECT COUNT(*) FROM rt0, v0, vt2, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT));
SELECT * FROM vt0, vt2, vt1 WHERE ((((vt1.c0)%(vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt2.c0)) IN ())) IS TRUE)  as count FROM vt0, vt2, vt1);
SELECT * FROM vt0, vt2, vt1 WHERE ((((vt1.c0)%(vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt2.c0)) IN ())) IS TRUE)  as count FROM vt0, vt2, vt1);
SELECT * FROM vt0, vt2, vt1 WHERE ((((vt1.c0)%(vt2.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS(v0.c0)))=((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(v0.c0)))=((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS(v0.c0)))=((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS(v0.c0)))=((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)IS(v0.c0)))=((v0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (LIKELY(DISTINCT ((NULL) IS TRUE))) ORDER BY ((((((((rt0.c1)AND(x'')))OR(rt0.c1)))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('zかWf'))))))AND(((0.9045942562795717) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((((rt0.c1)=(rt0.c4)))LIKE(rt0.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((NULL) IS TRUE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) ORDER BY ((((((((rt0.c1)AND(x'')))OR(rt0.c1)))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('zかWf'))))))AND(((0.9045942562795717) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((((rt0.c1)=(rt0.c4)))LIKE(rt0.c3 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (LIKELY(DISTINCT ((NULL) IS TRUE))) ORDER BY ((((((((rt0.c1)AND(x'')))OR(rt0.c1)))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('zかWf'))))))AND(((0.9045942562795717) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((((rt0.c1)=(rt0.c4)))LIKE(rt0.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((NULL) IS TRUE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) ORDER BY ((((((((rt0.c1)AND(x'')))OR(rt0.c1)))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('zかWf'))))))AND(((0.9045942562795717) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((((rt0.c1)=(rt0.c4)))LIKE(rt0.c3 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (LIKELY(DISTINCT ((NULL) IS TRUE))) ORDER BY ((((((((rt0.c1)AND(x'')))OR(rt0.c1)))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND (('zかWf'))))))AND(((0.9045942562795717) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((((rt0.c1)=(rt0.c4)))LIKE(rt0.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM vt2, v0 WHERE ((('1946339824') BETWEEN ((('-780859901')>(v0.c0))) AND (LTRIM(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('1946339824') BETWEEN ((('-780859901')>(v0.c0))) AND (LTRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE ((('1946339824') BETWEEN ((('-780859901')>(v0.c0))) AND (LTRIM(v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('1946339824') BETWEEN ((('-780859901')>(v0.c0))) AND (LTRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE ((('1946339824') BETWEEN ((('-780859901')>(v0.c0))) AND (LTRIM(v0.c0, v0.c0))));
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (((((rt0.c1)<<(vt0.c0))))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END))) RIGHT OUTER JOIN v0 ON NULL LEFT OUTER JOIN vt1 ON CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE vt1.c0 END CROSS JOIN rt0 ON (((((vt1.c0)AND(vt2.c0)))OR(rt0.c1)) IN ()) WHERE (((((vt0.c0, rt0.c4, v0.c0))<=((rt0.c4, vt2.c0, rt0.c4))) IN (v0.c0, ((rt0.c3)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, rt0.c4, v0.c0))<=((rt0.c4, vt2.c0, rt0.c4))) IN (v0.c0, ((rt0.c3)/(rt0.c3))))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (((((rt0.c1)<<(vt0.c0))))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END))) RIGHT OUTER JOIN v0 ON NULL LEFT OUTER JOIN vt1 ON CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE vt1.c0 END CROSS JOIN rt0 ON (((((vt1.c0)AND(vt2.c0)))OR(rt0.c1)) IN ()));
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (((((rt0.c1)<<(vt0.c0))))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END))) RIGHT OUTER JOIN v0 ON NULL LEFT OUTER JOIN vt1 ON CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE vt1.c0 END CROSS JOIN rt0 ON (((((vt1.c0)AND(vt2.c0)))OR(rt0.c1)) IN ()) WHERE (((((vt0.c0, rt0.c4, v0.c0))<=((rt0.c4, vt2.c0, rt0.c4))) IN (v0.c0, ((rt0.c3)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, rt0.c4, v0.c0))<=((rt0.c4, vt2.c0, rt0.c4))) IN (v0.c0, ((rt0.c3)/(rt0.c3))))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (((((rt0.c1)<<(vt0.c0))))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END))) RIGHT OUTER JOIN v0 ON NULL LEFT OUTER JOIN vt1 ON CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE vt1.c0 END CROSS JOIN rt0 ON (((((vt1.c0)AND(vt2.c0)))OR(rt0.c1)) IN ()));
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (((((rt0.c1)<<(vt0.c0))))<=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END))) RIGHT OUTER JOIN v0 ON NULL LEFT OUTER JOIN vt1 ON CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE vt1.c0 END CROSS JOIN rt0 ON (((((vt1.c0)AND(vt2.c0)))OR(rt0.c1)) IN ()) WHERE (((((vt0.c0, rt0.c4, v0.c0))<=((rt0.c4, vt2.c0, rt0.c4))) IN (v0.c0, ((rt0.c3)/(rt0.c3)))));
SELECT * FROM vt2, vt1, rt0 WHERE ((((('rd', rt0.c0, rt0.c2))==((rt0.c1, 0.22525494708840277, rt0.c1))) IN ())) ORDER BY (NOT (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('rd', rt0.c0, rt0.c2))=((rt0.c1, 0.22525494708840277, rt0.c1))) IN ())) IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY (NOT (NULL)) DESC);
SELECT * FROM vt2, vt1, rt0 WHERE ((((('rd', rt0.c0, rt0.c2))==((rt0.c1, 0.22525494708840277, rt0.c1))) IN ())) ORDER BY (NOT (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('rd', rt0.c0, rt0.c2))=((rt0.c1, 0.22525494708840277, rt0.c1))) IN ())) IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY (NOT (NULL)) DESC);
SELECT * FROM vt2, vt1, rt0 WHERE ((((('rd', rt0.c0, rt0.c2))==((rt0.c1, 0.22525494708840277, rt0.c1))) IN ())) ORDER BY (NOT (NULL)) DESC;
SELECT ALL * FROM rt0, vt0, v0, vt1 INNER JOIN vt2 ON ((v0.c0)>((rt0.c0 IN ()))) WHERE (((v0.c0)LIKE(rt0.c4)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((((('-1220434172')AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE vt2.c0 END)))OR((- (vt0.c0)))))AND((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(rt0.c4)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0, vt1 INNER JOIN vt2 ON ((v0.c0)>((rt0.c0 IN ()))) ORDER BY (((((((('-1220434172')AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE vt2.c0 END)))OR((- (vt0.c0)))))AND((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0, vt1 INNER JOIN vt2 ON ((v0.c0)>((rt0.c0 IN ()))) WHERE (((v0.c0)LIKE(rt0.c4)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((((('-1220434172')AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE vt2.c0 END)))OR((- (vt0.c0)))))AND((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(rt0.c4)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0, vt1 INNER JOIN vt2 ON ((v0.c0)>((rt0.c0 IN ()))) ORDER BY (((((((('-1220434172')AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE vt2.c0 END)))OR((- (vt0.c0)))))AND((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0, vt1 INNER JOIN vt2 ON ((v0.c0)>((rt0.c0 IN ()))) WHERE (((v0.c0)LIKE(rt0.c4)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((((('-1220434172')AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE vt2.c0 END)))OR((- (vt0.c0)))))AND((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM vt2 WHERE ((~ ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((~ ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((~ ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))));
SELECT * FROM vt1 INNER JOIN v0 ON 0X5b8b1f56 INNER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((vt0.c0)&(v0.c0)) ELSE CAST(vt2.c0 AS INTEGER) END INNER JOIN vt0 ON (((0.44053391271978115)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))))) INNER JOIN vt2 ON (((vt0.c0, '-1472758339', v0.c0))!=((rt0.c1, v0.c0, vt1.c0))) COLLATE BINARY WHERE (vt1.c0) ORDER BY (- (((rt0.c3)AND(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON 0x5b8b1f56 INNER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((vt0.c0)&(v0.c0)) ELSE CAST(vt2.c0 AS INTEGER) END INNER JOIN vt0 ON (((0.44053391271978115)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))))) INNER JOIN vt2 ON (((vt0.c0, '-1472758339', v0.c0))<>((rt0.c1, v0.c0, vt1.c0))) COLLATE BINARY ORDER BY (- (((rt0.c3)AND(x'')))) DESC);
SELECT * FROM vt1 INNER JOIN v0 ON 0X5b8b1f56 INNER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((vt0.c0)&(v0.c0)) ELSE CAST(vt2.c0 AS INTEGER) END INNER JOIN vt0 ON (((0.44053391271978115)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))))) INNER JOIN vt2 ON (((vt0.c0, '-1472758339', v0.c0))!=((rt0.c1, v0.c0, vt1.c0))) COLLATE BINARY WHERE (vt1.c0) ORDER BY (- (((rt0.c3)AND(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON 0x5b8b1f56 INNER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((vt0.c0)&(v0.c0)) ELSE CAST(vt2.c0 AS INTEGER) END INNER JOIN vt0 ON (((0.44053391271978115)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))))) INNER JOIN vt2 ON (((vt0.c0, '-1472758339', v0.c0))<>((rt0.c1, v0.c0, vt1.c0))) COLLATE BINARY ORDER BY (- (((rt0.c3)AND(x'')))) DESC);
SELECT * FROM vt1 INNER JOIN v0 ON 0X5b8b1f56 INNER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN ((vt0.c0)&(v0.c0)) ELSE CAST(vt2.c0 AS INTEGER) END INNER JOIN vt0 ON (((0.44053391271978115)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))))) INNER JOIN vt2 ON (((vt0.c0, '-1472758339', v0.c0))!=((rt0.c1, v0.c0, vt1.c0))) COLLATE BINARY WHERE (vt1.c0) ORDER BY (- (((rt0.c3)AND(x'')))) DESC;
SELECT * FROM rt0, vt1, vt2, v0, vt0 WHERE ((~ (COALESCE(DISTINCT vt2.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT vt2.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt2, v0, vt0);
SELECT * FROM rt0, vt1, vt2, v0, vt0 WHERE ((~ (COALESCE(DISTINCT vt2.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT vt2.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt2, v0, vt0);
SELECT * FROM rt0, vt1, vt2, v0, vt0 WHERE ((~ (COALESCE(DISTINCT vt2.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) AS REAL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) AS REAL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) AS REAL));
SELECT ALL * FROM vt1, vt2 LEFT OUTER JOIN rt0 ON ((0.3457724938743698 COLLATE RTRIM)|(CASE rt0.c2  WHEN NULL THEN NULL ELSE rt0.c4 END)) RIGHT OUTER JOIN v0 ON ((((((((rt0.c3)OR(CASE WHEN NULL THEN v0.c0 END)))AND((- (rt0.c0)))))AND((((rt0.c1, v0.c0, rt0.c3))==((rt0.c4, v0.c0, rt0.c1))))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((LOWER(rt0.c2))||('xQ+'))) ORDER BY CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.9878849329836894) THEN ((v0.c0)*(rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2))||('xQ+'))) IS TRUE)  as count FROM vt1, vt2 LEFT OUTER JOIN rt0 ON ((0.3457724938743698 COLLATE RTRIM)|(CASE rt0.c2  WHEN NULL THEN NULL ELSE rt0.c4 END)) RIGHT OUTER JOIN v0 ON ((((((((rt0.c3)OR(CASE WHEN NULL THEN v0.c0 END)))AND((- (rt0.c0)))))AND((((rt0.c1, v0.c0, rt0.c3))==((rt0.c4, v0.c0, rt0.c1))))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) ORDER BY CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.9878849329836894) THEN ((v0.c0)*(rt0.c3)) END ASC);
SELECT ALL * FROM vt1, vt2 LEFT OUTER JOIN rt0 ON ((0.3457724938743698 COLLATE RTRIM)|(CASE rt0.c2  WHEN NULL THEN NULL ELSE rt0.c4 END)) RIGHT OUTER JOIN v0 ON ((((((((rt0.c3)OR(CASE WHEN NULL THEN v0.c0 END)))AND((- (rt0.c0)))))AND((((rt0.c1, v0.c0, rt0.c3))==((rt0.c4, v0.c0, rt0.c1))))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((LOWER(rt0.c2))||('xQ+'))) ORDER BY CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.9878849329836894) THEN ((v0.c0)*(rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2))||('xQ+'))) IS TRUE)  as count FROM vt1, vt2 LEFT OUTER JOIN rt0 ON ((0.3457724938743698 COLLATE RTRIM)|(CASE rt0.c2  WHEN NULL THEN NULL ELSE rt0.c4 END)) RIGHT OUTER JOIN v0 ON ((((((((rt0.c3)OR(CASE WHEN NULL THEN v0.c0 END)))AND((- (rt0.c0)))))AND((((rt0.c1, v0.c0, rt0.c3))==((rt0.c4, v0.c0, rt0.c1))))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) ORDER BY CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.9878849329836894) THEN ((v0.c0)*(rt0.c3)) END ASC);
SELECT ALL * FROM vt1, vt2 LEFT OUTER JOIN rt0 ON ((0.3457724938743698 COLLATE RTRIM)|(CASE rt0.c2  WHEN NULL THEN NULL ELSE rt0.c4 END)) RIGHT OUTER JOIN v0 ON ((((((((rt0.c3)OR(CASE WHEN NULL THEN v0.c0 END)))AND((- (rt0.c0)))))AND((((rt0.c1, v0.c0, rt0.c3))==((rt0.c4, v0.c0, rt0.c1))))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE (((LOWER(rt0.c2))||('xQ+'))) ORDER BY CASE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0)))  WHEN LIKELIHOOD(DISTINCT rt0.c0, 0.9878849329836894) THEN ((v0.c0)*(rt0.c3)) END ASC;
SELECT * FROM v0 FULL OUTER JOIN vt2 ON v0.c0 INNER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt2.c0)))AND(vt2.c0)))OR(((rt0.c1)GLOB(rt0.c2)))) WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))>(((rt0.c2)<<(rt0.c2))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))>(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON v0.c0 INNER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt2.c0)))AND(vt2.c0)))OR(((rt0.c1)GLOB(rt0.c2)))) ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN vt2 ON v0.c0 INNER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt2.c0)))AND(vt2.c0)))OR(((rt0.c1)GLOB(rt0.c2)))) WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))>(((rt0.c2)<<(rt0.c2))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))>(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON v0.c0 INNER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt2.c0)))AND(vt2.c0)))OR(((rt0.c1)GLOB(rt0.c2)))) ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN vt2 ON v0.c0 INNER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt2.c0)))AND(vt2.c0)))OR(((rt0.c1)GLOB(rt0.c2)))) WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))>(((rt0.c2)<<(rt0.c2))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN (vt0.c0))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)!=(vt0.c0)) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN (vt0.c0))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)!=(vt0.c0)) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN (vt0.c0))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC;
SELECT * FROM v0 WHERE (CASE (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0)))  WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN (+ (v0.c0)) THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)GLOB(v0.c0)) ELSE 0.11014347959641735 END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0)))  WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN (+ (v0.c0)) THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)GLOB(v0.c0)) ELSE 0.11014347959641735 END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0)))  WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN (+ (v0.c0)) THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)GLOB(v0.c0)) ELSE 0.11014347959641735 END);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0)))  WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN (+ (v0.c0)) THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)GLOB(v0.c0)) ELSE 0.11014347959641735 END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (((v0.c0)) BETWEEN ((x'')) AND ((v0.c0)))  WHEN v0.c0 COLLATE RTRIM THEN v0.c0 WHEN (+ (v0.c0)) THEN NULL WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0)GLOB(v0.c0)) ELSE 0.11014347959641735 END);
SELECT * FROM vt1 INNER JOIN vt0 ON (+ (((vt0.c0)<(vt1.c0)))) LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<=((json_array(v0.c0, vt2.c0)))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c3)))OR(rt0.c1)))<>(((v0.c0)IS NOT(vt0.c0)))) LEFT OUTER JOIN vt2 ON ((COALESCE(rt0.c0, vt2.c0))AND(rt0.c0 COLLATE BINARY)) WHERE (((NULL COLLATE BINARY) BETWEEN (((rt0.c2) IS FALSE)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) BETWEEN (((rt0.c2) IS FALSE)) AND (x''))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (+ (((vt0.c0)<(vt1.c0)))) LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<=((json_array(v0.c0, vt2.c0)))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c3)))OR(rt0.c1)))<>(((v0.c0)IS NOT(vt0.c0)))) LEFT OUTER JOIN vt2 ON ((COALESCE(rt0.c0, vt2.c0))AND(rt0.c0 COLLATE BINARY)));
SELECT * FROM vt1 INNER JOIN vt0 ON (+ (((vt0.c0)<(vt1.c0)))) LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<=((json_array(v0.c0, vt2.c0)))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c3)))OR(rt0.c1)))<>(((v0.c0)IS NOT(vt0.c0)))) LEFT OUTER JOIN vt2 ON ((COALESCE(rt0.c0, vt2.c0))AND(rt0.c0 COLLATE BINARY)) WHERE (((NULL COLLATE BINARY) BETWEEN (((rt0.c2) IS FALSE)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) BETWEEN (((rt0.c2) IS FALSE)) AND (x''))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (+ (((vt0.c0)<(vt1.c0)))) LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<=((json_array(v0.c0, vt2.c0)))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(rt0.c3)))OR(rt0.c1)))<>(((v0.c0)IS NOT(vt0.c0)))) LEFT OUTER JOIN vt2 ON ((COALESCE(rt0.c0, vt2.c0))AND(rt0.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC, ((((((((x'')OR(((vt1.c0)*(vt1.c0)))))AND(((vt1.c0)<>(0.2942761013609021)))))OR(vt1.c0)))OR((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC, ((((((((x'')OR(((vt1.c0)*(vt1.c0)))))AND(((vt1.c0)<>(0.2942761013609021)))))OR(vt1.c0)))OR((vt1.c0 IN ())))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC, ((((((((x'')OR(((vt1.c0)*(vt1.c0)))))AND(((vt1.c0)<>(0.2942761013609021)))))OR(vt1.c0)))OR((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC, ((((((((x'')OR(((vt1.c0)*(vt1.c0)))))AND(((vt1.c0)<>(0.2942761013609021)))))OR(vt1.c0)))OR((vt1.c0 IN ())))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN ((~ (vt1.c0))) AND (LIKELY(vt1.c0)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE) ASC, ((((((((x'')OR(((vt1.c0)*(vt1.c0)))))AND(((vt1.c0)<>(0.2942761013609021)))))OR(vt1.c0)))OR((vt1.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))%((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))%((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))%((NOT (vt0.c0)))));
