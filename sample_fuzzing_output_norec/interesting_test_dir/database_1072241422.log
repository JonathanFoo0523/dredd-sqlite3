-- Time: 2024/06/11 11:36:37
-- Database: database22
-- Database version: 3.40.0
-- seed value: 1072241422
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, order=ASC); -- 1ms;
CREATE TEMP TABLE t1 (c0 TEXT ); -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.cell_size_check; -- 1ms;
UPDATE OR ROLLBACK vt0 SET c0='' WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CAST(NULL AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('v0ciYs'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 0.11944612112089348); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 286772025);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41770'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(203898549, NULL) WHERE (CAST(vt0.c0 AS TEXT) IN ()); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'6d7f'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1531228119,11');\n; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='{P}I3*(n' WHERE vt0.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0=0xffffffffc4e30592 WHERE CASE WHEN CASE '0.0'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)=(vt0.c0)) WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) NOT NULL) WHEN PRINTF(vt0.c0, x'63ea', vt0.c0) THEN ((((((((((((NULL)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END; -- 0ms;
PRAGMA stats; -- 0ms;
REINDEX; -- 0ms;
VACUUM; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(1531228119); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.11944612112089348, 0.1666400793464441); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1531228119')<('203898549')) AS INTEGER); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1583565023); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INT , c1 REAL COLLATE RTRIM , c2 INT ); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=('_Y>e/^e^N', '!s', x'') WHERE ((CAST(vt0.c0 AS TEXT))&(((vt0.c0)-(vt0.c0)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('286772025'); -- 0ms;
PRAGMA main.application_id; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11628'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=286772025,5');\n; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=('1531228119', '!s', '!S'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM; -- 1ms;
SELECT rtreecheck('rt0'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.1904561666978778; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))>>(x''))) ORDER BY (+ ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((rt0.c1, x'', rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c2)))>>(x''))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((rt0.c1, x'', rt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))>>(x''))) ORDER BY (+ ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((rt0.c1, x'', rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c2)))>>(x''))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((rt0.c1, x'', rt0.c2))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c2)))>>(x''))) ORDER BY (+ ((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((rt0.c1, x'', rt0.c2))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c2)) NOTNULL)) ORDER BY ((((rt0.c2)<(rt0.c2))) BETWEEN ((1531228119 IN ())) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c2)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)<(rt0.c2))) BETWEEN ((1531228119 IN ())) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c2)) NOTNULL)) ORDER BY ((((rt0.c2)<(rt0.c2))) BETWEEN ((1531228119 IN ())) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c2)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)<(rt0.c2))) BETWEEN ((1531228119 IN ())) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c2)) NOTNULL)) ORDER BY ((((rt0.c2)<(rt0.c2))) BETWEEN ((1531228119 IN ())) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((rt0.c0)GLOB(rt0.c1)))<<(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c1)))<<(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((rt0.c0)GLOB(rt0.c1)))<<(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c1)))<<(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((rt0.c0)GLOB(rt0.c1)))<<(CAST(rt0.c2 AS REAL))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON json_insert(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)|(vt0.c0)), (((vt1.c0))=((vt0.c0)))) WHERE ('6H');
SELECT SUM(count) FROM (SELECT (('6H') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON json_insert(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)|(vt0.c0)), (((vt1.c0))==((vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON json_insert(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)|(vt0.c0)), (((vt1.c0))=((vt0.c0)))) WHERE ('6H');
SELECT SUM(count) FROM (SELECT (('6H') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON json_insert(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)|(vt0.c0)), (((vt1.c0))==((vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON json_insert(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)|(vt0.c0)), (((vt1.c0))=((vt0.c0)))) WHERE ('6H');
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (TRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN (TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (TRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN (TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN (TRIM(rt0.c0))));
SELECT * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c2)))<>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY load_extension('-991754862') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c2)))<>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY load_extension('-991754862') ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c2)))<>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY load_extension('-991754862') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c2)))<>(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY load_extension('-991754862') ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0)>>(rt0.c2)))<>(CAST(rt0.c0 AS NUMERIC)))) ORDER BY load_extension('-991754862') ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (0.9229582739019324) AND (vt0.c0))  NULLS FIRST, (((((vt0.c0))<=((vt0.c0))))/(CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (0.9229582739019324) AND (vt0.c0))  NULLS FIRST, (((((vt0.c0))<=((vt0.c0))))/(CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (0.9229582739019324) AND (vt0.c0))  NULLS FIRST, (((((vt0.c0))<=((vt0.c0))))/(CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (0.9229582739019324) AND (vt0.c0))  NULLS FIRST, (((((vt0.c0))<=((vt0.c0))))/(CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (0.9229582739019324) AND (vt0.c0))  NULLS FIRST, (((((vt0.c0))<=((vt0.c0))))/(CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, rt0.c1))IS((~ (rt0.c1)))) WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((vt1.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, rt0.c1))IS((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, rt0.c1))IS((~ (rt0.c1)))) WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((vt1.c0)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, rt0.c1))IS((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c0, rt0.c1))IS((~ (rt0.c1)))) WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((vt1.c0))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((NOT (vt1.c0))))>((CAST(rt0.c2 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt1.c0))))>((CAST(rt0.c2 AS REAL))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((NOT (vt1.c0))))>((CAST(rt0.c2 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt1.c0))))>((CAST(rt0.c2 AS REAL))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((NOT (vt1.c0))))>((CAST(rt0.c2 AS REAL)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(0xfffffffff292d5db COLLATE BINARY)) ORDER BY ((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0))) IS TRUE) ASC  NULLS FIRST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(0xfffffffff292d5db COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0))) IS TRUE) ASC  NULLS FIRST, ''  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(0xfffffffff292d5db COLLATE BINARY)) ORDER BY ((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0))) IS TRUE) ASC  NULLS FIRST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(0xfffffffff292d5db COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0))) IS TRUE) ASC  NULLS FIRST, ''  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LOWER(0xfffffffff292d5db COLLATE BINARY)) ORDER BY ((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0))) IS TRUE) ASC  NULLS FIRST, ''  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (CASE '>/(<uq+}'  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE '>/(<uq+}'  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (CASE '>/(<uq+}'  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE '>/(<uq+}'  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (CASE '>/(<uq+}'  WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (LIKELIHOOD(DISTINCT 0.08588050316770057, 0.23929288242046798) IN ()) WHERE ((+ (LIKELIHOOD(vt1.c0, 0.7045106230250796)))) ORDER BY rt0.c1 DESC, ((rt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM  NULLS LAST, (((vt0.c0)<(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(vt1.c0, 0.7045106230250796)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON (LIKELIHOOD(DISTINCT 0.08588050316770057, 0.23929288242046798) IN ()) ORDER BY rt0.c1 DESC, ((rt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM  NULLS LAST, (((vt0.c0)<(rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (LIKELIHOOD(DISTINCT 0.08588050316770057, 0.23929288242046798) IN ()) WHERE ((+ (LIKELIHOOD(vt1.c0, 0.7045106230250796)))) ORDER BY rt0.c1 DESC, ((rt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM  NULLS LAST, (((vt0.c0)<(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(vt1.c0, 0.7045106230250796)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON (LIKELIHOOD(DISTINCT 0.08588050316770057, 0.23929288242046798) IN ()) ORDER BY rt0.c1 DESC, ((rt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM  NULLS LAST, (((vt0.c0)<(rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (LIKELIHOOD(DISTINCT 0.08588050316770057, 0.23929288242046798) IN ()) WHERE ((+ (LIKELIHOOD(vt1.c0, 0.7045106230250796)))) ORDER BY rt0.c1 DESC, ((rt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM  NULLS LAST, (((vt0.c0)<(rt0.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((1559490578) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((1559490578) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((1559490578) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((1559490578) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((1559490578) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE (vt1.c0 IN (rt0.c1, vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN (- (rt0.c1)) WHEN ((rt0.c1)>>(NULL)) THEN '6H' WHEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) THEN x'eb83' ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (rt0.c1, vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN (- (rt0.c1)) WHEN ((rt0.c1)>>(NULL)) THEN '6H' WHEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) THEN x'eb83' ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE (vt1.c0 IN (rt0.c1, vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN (- (rt0.c1)) WHEN ((rt0.c1)>>(NULL)) THEN '6H' WHEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) THEN x'eb83' ELSE CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (rt0.c1, vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN (- (rt0.c1)) WHEN ((rt0.c1)>>(NULL)) THEN '6H' WHEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) THEN x'eb83' ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE (vt1.c0 IN (rt0.c1, vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN (- (rt0.c1)) WHEN ((rt0.c1)>>(NULL)) THEN '6H' WHEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) THEN x'eb83' ELSE CAST(rt0.c0 AS BLOB) END);
SELECT * FROM vt0 WHERE ((((CAST('203898549' AS TEXT)))>((json_insert(vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((1531228119)||((NOT (vt0.c0)))), (((+ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 2.03898549E8 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST('203898549' AS TEXT)))>((json_insert(vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((1531228119)||((NOT (vt0.c0)))), (((+ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 2.03898549E8 END))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((CAST('203898549' AS TEXT)))>((json_insert(vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((1531228119)||((NOT (vt0.c0)))), (((+ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 2.03898549E8 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST('203898549' AS TEXT)))>((json_insert(vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((1531228119)||((NOT (vt0.c0)))), (((+ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 2.03898549E8 END))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((CAST('203898549' AS TEXT)))>((json_insert(vt0.c0, vt0.c0, vt0.c0))))) ORDER BY ((1531228119)||((NOT (vt0.c0)))), (((+ (vt0.c0)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 2.03898549E8 END))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((~ (json_array(vt1.c0, vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((((((x'7f59' IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR((vt1.c0 IN ()))))AND(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_array(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((((((x'7f59' IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR((vt1.c0 IN ()))))AND(vt1.c0)) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((~ (json_array(vt1.c0, vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((((((x'7f59' IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR((vt1.c0 IN ()))))AND(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_array(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((((((x'7f59' IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR((vt1.c0 IN ()))))AND(vt1.c0)) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((~ (json_array(vt1.c0, vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((((((x'7f59' IN ()))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR((vt1.c0 IN ()))))AND(vt1.c0)) ASC;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (SQLITE_VERSION()) ORDER BY (((((rt0.c1)IS NOT(vt0.c0))))>=((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((rt0.c1)IS NOT(vt0.c0))))>=((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (SQLITE_VERSION()) ORDER BY (((((rt0.c1)IS NOT(vt0.c0))))>=((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((rt0.c1)IS NOT(vt0.c0))))>=((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (SQLITE_VERSION()) ORDER BY (((((rt0.c1)IS NOT(vt0.c0))))>=((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (COALESCE(((rt0.c1) NOTNULL), vt0.c0)) ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c1) NOTNULL), vt0.c0)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (COALESCE(((rt0.c1) NOTNULL), vt0.c0)) ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c1) NOTNULL), vt0.c0)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (COALESCE(((rt0.c1) NOTNULL), vt0.c0)) ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY SUBSTR('1531228119', ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY SUBSTR('1531228119', ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY SUBSTR('1531228119', ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY SUBSTR('1531228119', ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('') ORDER BY SUBSTR('1531228119', ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)));
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0 IN ()))LIKE(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))LIKE(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0 IN ()))LIKE(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))LIKE(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0 IN ()))LIKE(CAST(vt1.c0 AS BLOB))));
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOT NULL))!=('-225258021')) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT NULL))!=('-225258021')) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOT NULL))!=('-225258021')) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT NULL))!=('-225258021')) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOT NULL))!=('-225258021')) ASC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))) ORDER BY ((((vt0.c0)GLOB(vt1.c0)))|(((vt1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)GLOB(vt1.c0)))|(((vt1.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))) ORDER BY ((((vt0.c0)GLOB(vt1.c0)))|(((vt1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)GLOB(vt1.c0)))|(((vt1.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))) ORDER BY ((((vt0.c0)GLOB(vt1.c0)))|(((vt1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((((((rt0.c0)AND(vt0.c0)))AND(NULL)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((((rt0.c0)AND(vt0.c0)))AND(NULL)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((((((rt0.c0)AND(vt0.c0)))AND(NULL)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((((rt0.c0)AND(vt0.c0)))AND(NULL)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((((((rt0.c0)AND(vt0.c0)))AND(NULL)))>=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((LIKELIHOOD(vt0.c0, 0.23171290405074096))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY ((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))))>=(((vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((LIKELIHOOD(vt0.c0, 0.23171290405074096))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))))>=(((vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((LIKELIHOOD(vt0.c0, 0.23171290405074096))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY ((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))))>=(((vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((LIKELIHOOD(vt0.c0, 0.23171290405074096))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))))>=(((vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((LIKELIHOOD(vt0.c0, 0.23171290405074096))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY ((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0)))))>=(((vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((- ((~ (rt0.c1))))) ORDER BY ((((((((json_patch(vt1.c0, rt0.c2))AND(((((vt1.c0)OR('286772025')))OR(rt0.c0)))))OR(((vt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((vt0.c0)>(rt0.c1)))))OR(((rt0.c1)AND(vt1.c0)))) ASC  NULLS FIRST, LOWER(load_extension(rt0.c2, vt0.c0)) DESC, ((((vt1.c0) NOTNULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((((((json_patch(vt1.c0, rt0.c2))AND(((((vt1.c0)OR('286772025')))OR(rt0.c0)))))OR(((vt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((vt0.c0)>(rt0.c1)))))OR(((rt0.c1)AND(vt1.c0)))) ASC  NULLS FIRST, LOWER(load_extension(rt0.c2, vt0.c0)) DESC, ((((vt1.c0) NOTNULL)) NOT NULL) DESC);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((- ((~ (rt0.c1))))) ORDER BY ((((((((json_patch(vt1.c0, rt0.c2))AND(((((vt1.c0)OR('286772025')))OR(rt0.c0)))))OR(((vt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((vt0.c0)>(rt0.c1)))))OR(((rt0.c1)AND(vt1.c0)))) ASC  NULLS FIRST, LOWER(load_extension(rt0.c2, vt0.c0)) DESC, ((((vt1.c0) NOTNULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((((((json_patch(vt1.c0, rt0.c2))AND(((((vt1.c0)OR('286772025')))OR(rt0.c0)))))OR(((vt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((vt0.c0)>(rt0.c1)))))OR(((rt0.c1)AND(vt1.c0)))) ASC  NULLS FIRST, LOWER(load_extension(rt0.c2, vt0.c0)) DESC, ((((vt1.c0) NOTNULL)) NOT NULL) DESC);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((- ((~ (rt0.c1))))) ORDER BY ((((((((json_patch(vt1.c0, rt0.c2))AND(((((vt1.c0)OR('286772025')))OR(rt0.c0)))))OR(((vt0.c0) BETWEEN (NULL) AND (rt0.c1)))))OR(((vt0.c0)>(rt0.c1)))))OR(((rt0.c1)AND(vt1.c0)))) ASC  NULLS FIRST, LOWER(load_extension(rt0.c2, vt0.c0)) DESC, ((((vt1.c0) NOTNULL)) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c2) ORDER BY (- (x'' COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (- (x'' COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c2) ORDER BY (- (x'' COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (- (x'' COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c2) ORDER BY (- (x'' COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, rt0 WHERE (((0.1666400793464441) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (~ ((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.1666400793464441) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (~ ((+ (vt0.c0)))) DESC);
SELECT * FROM vt0, vt1, rt0 WHERE (((0.1666400793464441) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (~ ((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.1666400793464441) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (~ ((+ (vt0.c0)))) DESC);
SELECT * FROM vt0, vt1, rt0 WHERE (((0.1666400793464441) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (~ ((+ (vt0.c0)))) DESC;
SELECT * FROM vt0, rt0, vt1 WHERE (json_array_length((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (json_array_length((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (json_array_length((- (vt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((rt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (x''))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((rt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (x''))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((rt0.c0 IN (x'')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS NUMERIC)) ORDER BY CAST(((((((((vt1.c0)AND(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((((((vt1.c0)AND(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS NUMERIC)) ORDER BY CAST(((((((((vt1.c0)AND(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((((((vt1.c0)AND(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS NUMERIC)) ORDER BY CAST(((((((((vt1.c0)AND(x'')))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c2) ORDER BY ((((((vt1.c0) ISNULL))AND(0X43ff8b9c)))AND(((rt0.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((vt1.c0) ISNULL))AND(0X43ff8b9c)))AND(((rt0.c1) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c2) ORDER BY ((((((vt1.c0) ISNULL))AND(0X43ff8b9c)))AND(((rt0.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((vt1.c0) ISNULL))AND(0X43ff8b9c)))AND(((rt0.c1) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c2) ORDER BY ((((((vt1.c0) ISNULL))AND(0X43ff8b9c)))AND(((rt0.c1) NOT NULL))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((vt1.c0) NOT NULL)))<((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND((rt0.c2 IN ()))))AND((((rt0.c0, vt0.c0, vt1.c0))<((vt0.c0, rt0.c0, vt1.c0))))))OR((rt0.c0 IN ()))))AND((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL)))<((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND((rt0.c2 IN ()))))AND((((rt0.c0, vt0.c0, vt1.c0))<((vt0.c0, rt0.c0, vt1.c0))))))OR((rt0.c0 IN ()))))AND((x'' IN ()))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((vt1.c0) NOT NULL)))<((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND((rt0.c2 IN ()))))AND((((rt0.c0, vt0.c0, vt1.c0))<((vt0.c0, rt0.c0, vt1.c0))))))OR((rt0.c0 IN ()))))AND((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL)))<((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND((rt0.c2 IN ()))))AND((((rt0.c0, vt0.c0, vt1.c0))<((vt0.c0, rt0.c0, vt1.c0))))))OR((rt0.c0 IN ()))))AND((x'' IN ()))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON '1140820892' FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c2)) AND (((vt0.c0) IS TRUE))) WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '1140820892' FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c2)) AND (((vt0.c0) IS TRUE))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON '1140820892' FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c2)) AND (((vt0.c0) IS TRUE))) WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '1140820892' FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c2)) AND (((vt0.c0) IS TRUE))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON '1140820892' FULL OUTER JOIN vt1 ON (((rt0.c1 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c2)) AND (((vt0.c0) IS TRUE))) WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0 COLLATE BINARY)AND((('') ISNULL))))AND(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE RTRIM WHERE ('{P}I3*(n') ORDER BY json_object((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('{P}I3*(n') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0 COLLATE BINARY)AND((('') ISNULL))))AND(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE RTRIM ORDER BY json_object((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0 COLLATE BINARY)AND((('') ISNULL))))AND(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE RTRIM WHERE ('{P}I3*(n') ORDER BY json_object((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('{P}I3*(n') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((rt0.c0 COLLATE BINARY)AND((('') ISNULL))))AND(((vt0.c0) IS TRUE))) RIGHT OUTER JOIN rt0 ON (~ (rt0.c2)) COLLATE RTRIM ORDER BY json_object((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (NULL COLLATE RTRIM))) ORDER BY ((((vt0.c0)+(vt0.c0)))|(CAST(0.24337161209484148 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0)+(vt0.c0)))|(CAST(0.24337161209484148 AS NUMERIC))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (NULL COLLATE RTRIM))) ORDER BY ((((vt0.c0)+(vt0.c0)))|(CAST(0.24337161209484148 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0)+(vt0.c0)))|(CAST(0.24337161209484148 AS NUMERIC))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (NULL COLLATE RTRIM))) ORDER BY ((((vt0.c0)+(vt0.c0)))|(CAST(0.24337161209484148 AS NUMERIC)));
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (((vt1.c0)<>(rt0.c1))))) ORDER BY (x'' IN ())  NULLS LAST, 0.6940143897549761;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)<>(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (x'' IN ())  NULLS LAST, 0.6940143897549761);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (((vt1.c0)<>(rt0.c1))))) ORDER BY (x'' IN ())  NULLS LAST, 0.6940143897549761;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)<>(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (x'' IN ())  NULLS LAST, 0.6940143897549761);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((NOT (((vt1.c0)<>(rt0.c1))))) ORDER BY (x'' IN ())  NULLS LAST, 0.6940143897549761;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (NULLIF(DISTINCT 30886171, vt1.c0))) WHERE (0.04606223887437633) ORDER BY (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.04606223887437633) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (- (NULLIF(DISTINCT 30886171, vt1.c0))) ORDER BY (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (NULLIF(DISTINCT 30886171, vt1.c0))) WHERE (0.04606223887437633) ORDER BY (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.04606223887437633) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (- (NULLIF(DISTINCT 30886171, vt1.c0))) ORDER BY (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (NULLIF(DISTINCT 30886171, vt1.c0))) WHERE (0.04606223887437633) ORDER BY (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CAST((NOT (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CAST((NOT (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CAST((NOT (rt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))LIKE((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))LIKE((- (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))LIKE((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))LIKE((- (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN ())) ORDER BY ((((vt1.c0)IS NOT(vt1.c0)))LIKE((- (vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0)||(rt0.c2)))OR(x'')))OR((rt0.c1 IN (rt0.c0)))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(CAST(rt0.c1 AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR(((rt0.c0)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)||(rt0.c2)))OR(x'')))OR((rt0.c1 IN (rt0.c0)))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(CAST(rt0.c1 AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR(((rt0.c0)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0)||(rt0.c2)))OR(x'')))OR((rt0.c1 IN (rt0.c0)))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(CAST(rt0.c1 AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR(((rt0.c0)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)||(rt0.c2)))OR(x'')))OR((rt0.c1 IN (rt0.c0)))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(CAST(rt0.c1 AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR(((rt0.c0)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0)||(rt0.c2)))OR(x'')))OR((rt0.c1 IN (rt0.c0)))))OR(((rt0.c1)GLOB(rt0.c1)))))OR(CAST(rt0.c1 AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c2))))OR(((rt0.c0)==(rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS(((vt1.c0)==(vt1.c0))))) ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN 0.5371004211729027 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((((vt1.c0)||(vt1.c0))))), vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN 0.5371004211729027 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((((vt1.c0)||(vt1.c0))))), vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS(((vt1.c0)==(vt1.c0))))) ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN 0.5371004211729027 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((((vt1.c0)||(vt1.c0))))), vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN 0.5371004211729027 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((((vt1.c0)||(vt1.c0))))), vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))IS(((vt1.c0)==(vt1.c0))))) ORDER BY (((CASE vt1.c0  WHEN vt1.c0 THEN 0.5371004211729027 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))>=((((vt1.c0)||(vt1.c0))))), vt1.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN 0.5096491464932669 END  WHEN (- (rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN IFNULL(DISTINCT 0.6692120875333957, rt0.c0) END) ORDER BY 0.6688312811106166 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN 0.5096491464932669 END  WHEN (- (rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN IFNULL(DISTINCT 0.6692120875333957, rt0.c0) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.6688312811106166 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN 0.5096491464932669 END  WHEN (- (rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN IFNULL(DISTINCT 0.6692120875333957, rt0.c0) END) ORDER BY 0.6688312811106166 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN 0.5096491464932669 END  WHEN (- (rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN IFNULL(DISTINCT 0.6692120875333957, rt0.c0) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.6688312811106166 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN 0.5096491464932669 END  WHEN (- (rt0.c0)) THEN (NOT (rt0.c1)) WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN IFNULL(DISTINCT 0.6692120875333957, rt0.c0) END) ORDER BY 0.6688312811106166 DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((('Eh-J헛')=(vt1.c0)))/(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((('Eh-J헛')==(vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((('Eh-J헛')=(vt1.c0)))/(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((('Eh-J헛')==(vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((('Eh-J헛')=(vt1.c0)))/(((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ('1531228119');
SELECT SUM(count) FROM (SELECT ALL (('1531228119') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('1531228119');
SELECT SUM(count) FROM (SELECT ALL (('1531228119') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('1531228119');
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) IS TRUE)) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X5b44afd7 THEN vt1.c0 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X5b44afd7 THEN vt1.c0 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c0 IN ()) END DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) IS TRUE)) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X5b44afd7 THEN vt1.c0 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X5b44afd7 THEN vt1.c0 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c0 IN ()) END DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) IS TRUE)) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X5b44afd7 THEN vt1.c0 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c0 IN ()) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE) ORDER BY CAST((rt0.c1 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c1 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE) ORDER BY CAST((rt0.c1 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c1 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0) COLLATE NOCASE) ORDER BY CAST((rt0.c1 IN (rt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c0)>(rt0.c2)))))OR(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(((rt0.c0)>(rt0.c2)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c0)>(rt0.c2)))))OR(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT NULL))AND(((rt0.c0)>(rt0.c2)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c0)>(rt0.c2)))))OR(((rt0.c2) IS FALSE))));
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(DISTINCT (((vt0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((vt0.c0))<=((rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(DISTINCT (((vt0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((vt0.c0))<=((rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(DISTINCT (((vt0.c0))<=((rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((TYPEOF(rt0.c2) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((TYPEOF(rt0.c2) IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((TYPEOF(rt0.c2) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((TYPEOF(rt0.c2) IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((TYPEOF(rt0.c2) IN (rt0.c1)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((('䤛D\ni'))>((CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((('䤛D\ni'))>((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((('䤛D\ni'))>((CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((('䤛D\ni'))>((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((('䤛D\ni'))>((CAST(rt0.c2 AS NUMERIC)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (0.24995033307278713) AND (vt0.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (((vt0.c0))<((vt0.c0))) WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((((+ (vt1.c0)))%((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c0, NULL, vt1.c0)))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))%((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c0, NULL, vt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (0.24995033307278713) AND (vt0.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (((vt0.c0))<((vt0.c0))) WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (0.24995033307278713) AND (vt0.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (((vt0.c0))<((vt0.c0))) WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((((+ (vt1.c0)))%((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c0, NULL, vt1.c0)))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))%((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c0, NULL, vt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (0.24995033307278713) AND (vt0.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (((vt0.c0))<((vt0.c0))) WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (0.24995033307278713) AND (vt0.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (((vt0.c0))<((vt0.c0))) WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE ((((+ (vt1.c0)))%((((vt1.c0, vt1.c0, vt1.c0))>=((vt0.c0, NULL, vt1.c0)))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((('1981137938') IS TRUE)) ORDER BY rt0.c1, (((('')OR(CASE WHEN 0x1604bc60 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1981137938') IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, (((('')OR(CASE WHEN 0x1604bc60 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((('1981137938') IS TRUE)) ORDER BY rt0.c1, (((('')OR(CASE WHEN 0x1604bc60 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1981137938') IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, (((('')OR(CASE WHEN 0x1604bc60 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((('1981137938') IS TRUE)) ORDER BY rt0.c1, (((('')OR(CASE WHEN 0x1604bc60 THEN rt0.c1 ELSE rt0.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(LIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(LIKELY(vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(LIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(LIKELY(vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(LIKELY(vt0.c0)));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON TRIM((vt1.c0 IN ())) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON TRIM((vt1.c0 IN ())) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON TRIM((vt1.c0 IN ())) WHERE (vt0.c0);
SELECT * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))|(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))|(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))|(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))|(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))|(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((x'')) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((x'')) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((vt1.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT NULL) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT NULL) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT NULL) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT NULL) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT NULL) IN (vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt0.c0)OR(NULL)))AND(NULL))))!=((ROUND(-785879699, NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(NULL)))AND(NULL))))<>((ROUND(-785879699, NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt0.c0)OR(NULL)))AND(NULL))))!=((ROUND(-785879699, NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(NULL)))AND(NULL))))<>((ROUND(-785879699, NULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt0.c0)OR(NULL)))AND(NULL))))!=((ROUND(-785879699, NULL)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY)||((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY '541437746' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)||((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '541437746' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY)||((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY '541437746' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)||((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '541437746' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY)||((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY '541437746' DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((TRIM(rt0.c1)))=((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((TRIM(rt0.c1)))==((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((TRIM(rt0.c1)))=((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((TRIM(rt0.c1)))==((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((TRIM(rt0.c1)))=((((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))OR(rt0.c0)))OR(vt0.c0))))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 INNER JOIN vt0 ON (- (((0.08588050316770057)<=(rt0.c2)))) WHERE (((NULL) NOT NULL)) ORDER BY ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 INNER JOIN vt0 ON (- (((0.08588050316770057)<=(rt0.c2)))) ORDER BY ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()) DESC);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 INNER JOIN vt0 ON (- (((0.08588050316770057)<=(rt0.c2)))) WHERE (((NULL) NOT NULL)) ORDER BY ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 INNER JOIN vt0 ON (- (((0.08588050316770057)<=(rt0.c2)))) ORDER BY ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()) DESC);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 INNER JOIN vt0 ON (- (((0.08588050316770057)<=(rt0.c2)))) WHERE (((NULL) NOT NULL)) ORDER BY ((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ()) DESC;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON NULL INNER JOIN vt0 ON ((((~ (rt0.c0))))==((((rt0.c2)IS(rt0.c0))))) WHERE (UPPER(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c2)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON NULL INNER JOIN vt0 ON ((((~ (rt0.c0))))==((((rt0.c2)IS(rt0.c0))))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON NULL INNER JOIN vt0 ON ((((~ (rt0.c0))))==((((rt0.c2)IS(rt0.c0))))) WHERE (UPPER(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c2)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON NULL INNER JOIN vt0 ON ((((~ (rt0.c0))))==((((rt0.c2)IS(rt0.c0))))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON NULL INNER JOIN vt0 ON ((((~ (rt0.c0))))==((((rt0.c2)IS(rt0.c0))))) WHERE (UPPER(rt0.c2));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)OR('-225258021')))OR(vt1.c0))) ISNULL) WHERE (LOWER(DISTINCT rt0.c0)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.c0 END)OR(((rt0.c1)>>(vt0.c0)))))OR(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c0)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)OR('-225258021')))OR(vt1.c0))) ISNULL) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.c0 END)OR(((rt0.c1)>>(vt0.c0)))))OR(((rt0.c1)!=(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)OR('-225258021')))OR(vt1.c0))) ISNULL) WHERE (LOWER(DISTINCT rt0.c0)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.c0 END)OR(((rt0.c1)>>(vt0.c0)))))OR(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c0)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)OR('-225258021')))OR(vt1.c0))) ISNULL) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.c0 END)OR(((rt0.c1)>>(vt0.c0)))))OR(((rt0.c1)!=(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)OR('-225258021')))OR(vt1.c0))) ISNULL) WHERE (LOWER(DISTINCT rt0.c0)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.c0 END)OR(((rt0.c1)>>(vt0.c0)))))OR(((rt0.c1)<>(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN (((rt0.c1))<=((rt0.c1))) WHEN (((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))) THEN (+ (rt0.c1)) WHEN ((rt0.c0) IS TRUE) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN (((rt0.c1))<=((rt0.c1))) WHEN (((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))) THEN (+ (rt0.c1)) WHEN ((rt0.c0) IS TRUE) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN (((rt0.c1))<=((rt0.c1))) WHEN (((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))) THEN (+ (rt0.c1)) WHEN ((rt0.c0) IS TRUE) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN (((rt0.c1))<=((rt0.c1))) WHEN (((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))) THEN (+ (rt0.c1)) WHEN ((rt0.c0) IS TRUE) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN (((rt0.c1))<=((rt0.c1))) WHEN (((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c0, rt0.c0))) THEN (+ (rt0.c1)) WHEN ((rt0.c0) IS TRUE) THEN rt0.c2 COLLATE RTRIM END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c2) ORDER BY (((((~ (vt0.c0)))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((~ (vt0.c0)))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c2) ORDER BY (((((~ (vt0.c0)))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((~ (vt0.c0)))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c2) ORDER BY (((((~ (vt0.c0)))OR(((((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (LIKE(((vt0.c0)<<(rt0.c1)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt0.c0)<<(rt0.c1)), vt0.c0)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKE(((vt0.c0)<<(rt0.c1)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt0.c0)<<(rt0.c1)), vt0.c0)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKE(((vt0.c0)<<(rt0.c1)), vt0.c0));
SELECT ALL * FROM rt0, vt1 WHERE (((((rtreenode(rt0.c1, vt1.c0))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(NULL))) ORDER BY json_quote(NULL) ASC  NULLS LAST, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rtreenode(rt0.c1, vt1.c0))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY json_quote(NULL) ASC  NULLS LAST, vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((rtreenode(rt0.c1, vt1.c0))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(NULL))) ORDER BY json_quote(NULL) ASC  NULLS LAST, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rtreenode(rt0.c1, vt1.c0))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY json_quote(NULL) ASC  NULLS LAST, vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((rtreenode(rt0.c1, vt1.c0))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(NULL))) ORDER BY json_quote(NULL) ASC  NULLS LAST, vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((json_extract(vt1.c0, vt0.c0), ((vt1.c0) IS FALSE), TRIM(vt1.c0)))!=((vt0.c0, vt1.c0, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY ((vt1.c0 COLLATE NOCASE)>=(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((json_extract(vt1.c0, vt0.c0), ((vt1.c0) IS FALSE), TRIM(vt1.c0)))<>((vt0.c0, vt1.c0, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)>=(vt0.c0)) DESC);
SELECT * FROM vt0, vt1 WHERE ((((json_extract(vt1.c0, vt0.c0), ((vt1.c0) IS FALSE), TRIM(vt1.c0)))!=((vt0.c0, vt1.c0, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY ((vt1.c0 COLLATE NOCASE)>=(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((json_extract(vt1.c0, vt0.c0), ((vt1.c0) IS FALSE), TRIM(vt1.c0)))<>((vt0.c0, vt1.c0, ((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)>=(vt0.c0)) DESC);
SELECT * FROM vt0, vt1 WHERE ((((json_extract(vt1.c0, vt0.c0), ((vt1.c0) IS FALSE), TRIM(vt1.c0)))!=((vt0.c0, vt1.c0, ((vt0.c0)LIKE(vt0.c0)))))) ORDER BY ((vt1.c0 COLLATE NOCASE)>=(vt0.c0)) DESC;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (rt0.c0) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (rt0.c0) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (rt0.c0) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS REAL)  NULLS FIRST;
SELECT * FROM vt0, rt0, vt1 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((((rt0.c1))!=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((((rt0.c1))!=((rt0.c2))))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((((rt0.c1))!=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((((rt0.c1))!=((rt0.c2))))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((((rt0.c1))!=((rt0.c2)))))));
SELECT ALL * FROM vt1 WHERE (ABS(CAST(vt1.c0 AS NUMERIC))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)*(NULL))) AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)*(NULL))) AND ((+ (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (ABS(CAST(vt1.c0 AS NUMERIC))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)*(NULL))) AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)*(NULL))) AND ((+ (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (ABS(CAST(vt1.c0 AS NUMERIC))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))IS NOT(vt1.c0 COLLATE BINARY))  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0)*(NULL))) AND ((+ (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CHAR(vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)=(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ('o6kp4<J' IN ()) WHEN ABS(vt1.c0) THEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CHAR(vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)==(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ('o6kp4<J' IN ()) WHEN ABS(vt1.c0) THEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CHAR(vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)=(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ('o6kp4<J' IN ()) WHEN ABS(vt1.c0) THEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CHAR(vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)==(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ('o6kp4<J' IN ()) WHEN ABS(vt1.c0) THEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CHAR(vt1.c0)  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)=(vt1.c0)) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ('o6kp4<J' IN ()) WHEN ABS(vt1.c0) THEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) ORDER BY CAST((~ (rt0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST((~ (rt0.c1)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) ORDER BY CAST((~ (rt0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST((~ (rt0.c1)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS BLOB)) ORDER BY CAST((~ (rt0.c1)) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((vt1.c0 COLLATE NOCASE)-((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)-((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((vt1.c0 COLLATE NOCASE)-((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)-((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((vt1.c0 COLLATE NOCASE)-((~ (rt0.c1)))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(0.9356636515492478)))OR(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '*X')))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(0.9356636515492478)))OR(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '*X')))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(0.9356636515492478)))OR(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '*X')))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(0.9356636515492478)))OR(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '*X')))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(0.9356636515492478)))OR(vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '*X')))) AND ((+ (vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c2)))<>(CASE '-785879699'  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY CASE rt0.c2  WHEN (NOT (vt0.c0)) THEN CASE WHEN 30886171 THEN rt0.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))!=(CASE '-785879699'  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c2  WHEN (NOT (vt0.c0)) THEN CASE WHEN 30886171 THEN rt0.c2 END END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c2)))<>(CASE '-785879699'  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY CASE rt0.c2  WHEN (NOT (vt0.c0)) THEN CASE WHEN 30886171 THEN rt0.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))!=(CASE '-785879699'  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c2  WHEN (NOT (vt0.c0)) THEN CASE WHEN 30886171 THEN rt0.c2 END END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c2)))<>(CASE '-785879699'  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY CASE rt0.c2  WHEN (NOT (vt0.c0)) THEN CASE WHEN 30886171 THEN rt0.c2 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c0))))) ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC, json_array_length(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC, json_array_length(vt0.c0) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c0))))) ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC, json_array_length(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC, json_array_length(vt0.c0) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((NOT (vt0.c0))))) ORDER BY (~ (vt0.c0 COLLATE BINARY)) DESC, json_array_length(vt0.c0) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c0) NOTNULL)))) ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0))<=((NULL))))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(NULL)))OR('-785879699' COLLATE RTRIM))  NULLS LAST, CAST(COALESCE(vt0.c0, vt0.c0) AS INTEGER), (286772025 IN ());
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0))<=((NULL))))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(NULL)))OR('-785879699' COLLATE RTRIM))  NULLS LAST, CAST(COALESCE(vt0.c0, vt0.c0) AS INTEGER), (286772025 IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c0) NOTNULL)))) ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0))<=((NULL))))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(NULL)))OR('-785879699' COLLATE RTRIM))  NULLS LAST, CAST(COALESCE(vt0.c0, vt0.c0) AS INTEGER), (286772025 IN ());
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0))<=((NULL))))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(NULL)))OR('-785879699' COLLATE RTRIM))  NULLS LAST, CAST(COALESCE(vt0.c0, vt0.c0) AS INTEGER), (286772025 IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN (((vt0.c0) NOTNULL)))) ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0))<=((NULL))))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(NULL)))OR('-785879699' COLLATE RTRIM))  NULLS LAST, CAST(COALESCE(vt0.c0, vt0.c0) AS INTEGER), (286772025 IN ());
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL), ((0x5b4aac14) ISNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=(((((vt0.c0, vt0.c0, 0.4991196529917338))<>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))))) ORDER BY (NOT (CAST('0.6692120875333957' AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL), ((0X5b4aac14) ISNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=(((((vt0.c0, vt0.c0, 0.4991196529917338))!=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST('0.6692120875333957' AS NUMERIC)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL), ((0x5b4aac14) ISNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=(((((vt0.c0, vt0.c0, 0.4991196529917338))<>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))))) ORDER BY (NOT (CAST('0.6692120875333957' AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL), ((0X5b4aac14) ISNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=(((((vt0.c0, vt0.c0, 0.4991196529917338))!=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST('0.6692120875333957' AS NUMERIC)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL), ((0x5b4aac14) ISNULL), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=(((((vt0.c0, vt0.c0, 0.4991196529917338))<>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL), ((vt0.c0) NOT NULL))))) ORDER BY (NOT (CAST('0.6692120875333957' AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE ((0.02436226180117984)||(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c1 WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN json(rt0.c1) WHEN ((vt1.c0)/(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) END WHERE (IFNULL((rt0.c1 IN (vt1.c0)), ((1.559490578E9) NOT BETWEEN (vt1.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c1 IN (vt1.c0)), ((1.559490578E9) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE ((0.02436226180117984)||(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c1 WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN json(rt0.c1) WHEN ((vt1.c0)/(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE ((0.02436226180117984)||(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c1 WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN json(rt0.c1) WHEN ((vt1.c0)/(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) END WHERE (IFNULL((rt0.c1 IN (vt1.c0)), ((1.559490578E9) NOT BETWEEN (vt1.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c1 IN (vt1.c0)), ((1.559490578E9) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CASE ((0.02436226180117984)||(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c1 WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN json(rt0.c1) WHEN ((vt1.c0)/(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CASE ((0.02436226180117984)||(rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN rt0.c1 WHEN ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN json(rt0.c1) WHEN ((vt1.c0)/(rt0.c2)) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) END WHERE (IFNULL((rt0.c1 IN (vt1.c0)), ((1.559490578E9) NOT BETWEEN (vt1.c0) AND (rt0.c1))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN x'8fa7' THEN (((vt0.c0))<((vt0.c0))) WHEN NULL THEN (369409120 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN '-225258021' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'8fa7' THEN (((vt0.c0))<((vt0.c0))) WHEN NULL THEN (369409120 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN '-225258021' END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN x'8fa7' THEN (((vt0.c0))<((vt0.c0))) WHEN NULL THEN (369409120 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN '-225258021' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'8fa7' THEN (((vt0.c0))<((vt0.c0))) WHEN NULL THEN (369409120 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN '-225258021' END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN x'8fa7' THEN (((vt0.c0))<((vt0.c0))) WHEN NULL THEN (369409120 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN '-225258021' END);
SELECT ALL * FROM vt0 WHERE (('-804696774' IN ())) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND ('1188709633')))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0) IS FALSE))))AND(0.9356636515492478)))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((('-804696774' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND ('1188709633')))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0) IS FALSE))))AND(0.9356636515492478)))OR(x'')));
SELECT ALL * FROM vt0 WHERE (('-804696774' IN ())) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND ('1188709633')))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0) IS FALSE))))AND(0.9356636515492478)))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((('-804696774' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND ('1188709633')))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0) IS FALSE))))AND(0.9356636515492478)))OR(x'')));
SELECT ALL * FROM vt0 WHERE (('-804696774' IN ())) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND ('1188709633')))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0) IS FALSE))))AND(0.9356636515492478)))OR(x''));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) ISNULL))))AND((vt1.c0 IN ()))) CROSS JOIN vt1 ON 0xfffffffff292d5db WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM) ORDER BY (((- (vt0.c0)))>(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) ISNULL))))AND((vt1.c0 IN ()))) CROSS JOIN vt1 ON 0Xfffffffff292d5db ORDER BY (((- (vt0.c0)))>(rt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) ISNULL))))AND((vt1.c0 IN ()))) CROSS JOIN vt1 ON 0xfffffffff292d5db WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM) ORDER BY (((- (vt0.c0)))>(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) ISNULL))))AND((vt1.c0 IN ()))) CROSS JOIN vt1 ON 0Xfffffffff292d5db ORDER BY (((- (vt0.c0)))>(rt0.c0)) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c0) ISNULL))))AND((vt1.c0 IN ()))) CROSS JOIN vt1 ON 0xfffffffff292d5db WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM) ORDER BY (((- (vt0.c0)))>(rt0.c0)) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT BETWEEN ('1294546345') AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((NOT (vt0.c0)))IS NOT(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) NOT BETWEEN ('1294546345') AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))IS NOT(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT BETWEEN ('1294546345') AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((NOT (vt0.c0)))IS NOT(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) NOT BETWEEN ('1294546345') AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))IS NOT(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT BETWEEN ('1294546345') AND (((vt0.c0)>=(vt0.c0))))) ORDER BY (((NOT (vt0.c0)))IS NOT(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)IS(vt1.c0))) AND (vt1.c0))) ORDER BY (~ (x'b0f6')) DESC  NULLS LAST, ((x'')IS(LIKELY(DISTINCT rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)IS(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (~ (x'b0f6')) DESC  NULLS LAST, ((x'')IS(LIKELY(DISTINCT rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)IS(vt1.c0))) AND (vt1.c0))) ORDER BY (~ (x'b0f6')) DESC  NULLS LAST, ((x'')IS(LIKELY(DISTINCT rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)IS(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (~ (x'b0f6')) DESC  NULLS LAST, ((x'')IS(LIKELY(DISTINCT rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)IS(vt1.c0))) AND (vt1.c0))) ORDER BY (~ (x'b0f6')) DESC  NULLS LAST, ((x'')IS(LIKELY(DISTINCT rt0.c0))) DESC;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))>((vt0.c0 IN ())))) ORDER BY ((((rt0.c0)||(rt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (']dceiO2T(')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c0)||(rt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (']dceiO2T(')))) DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))>((vt0.c0 IN ())))) ORDER BY ((((rt0.c0)||(rt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (']dceiO2T(')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c0)||(rt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (']dceiO2T(')))) DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))>((vt0.c0 IN ())))) ORDER BY ((((rt0.c0)||(rt0.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (vt0.c0) AND (']dceiO2T(')))) DESC;
SELECT * FROM rt0 WHERE (CAST(HEX(DISTINCT rt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(HEX(DISTINCT rt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT rt0.c1) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(HEX(DISTINCT rt0.c1) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))AND(((x'2f12')>(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))AND(((x'2f12')>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))AND(((x'2f12')>(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))AND(((x'2f12')>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c0)))AND(((x'2f12')>(vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN (rt0.c0) AND (((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN (rt0.c0) AND (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN (rt0.c0) AND (((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN (rt0.c0) AND (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN (rt0.c0) AND (((vt1.c0)%(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (('H괐<E' COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('H괐<E' COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (('H괐<E' COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('H괐<E' COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((((((rt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ORDER BY (('H괐<E' COLLATE NOCASE) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (vt1.c0))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY LTRIM(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY LTRIM(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY LTRIM(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY LTRIM(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY LTRIM(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c0) NOT NULL)) DESC  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE '1531620372' END)) AND ((((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER)) ORDER BY LIKE(rt0.c2, NULLIF(vt1.c0, rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE '1531620372' END)) AND ((((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) ORDER BY LIKE(rt0.c2, NULLIF(vt1.c0, rt0.c1)) DESC  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE '1531620372' END)) AND ((((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER)) ORDER BY LIKE(rt0.c2, NULLIF(vt1.c0, rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE '1531620372' END)) AND ((((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) ORDER BY LIKE(rt0.c2, NULLIF(vt1.c0, rt0.c1)) DESC  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE '1531620372' END)) AND ((((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER)) ORDER BY LIKE(rt0.c2, NULLIF(vt1.c0, rt0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (TRIM(x'', CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TRIM(x'', CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (TRIM(x'', CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TRIM(x'', CAST(rt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (TRIM(x'', CAST(rt0.c0 AS NUMERIC)));
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt1 WHERE ((((vt1.c0))=((x'03da'))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))==((x'03da')))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0))=((x'03da'))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))==((x'03da')))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0))=((x'03da'))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(vt0.c0)))||(vt1.c0)) WHERE (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(vt1.c0))) BETWEEN ((- (vt0.c0))) AND (rt0.c2))) ORDER BY (('369409120' COLLATE RTRIM)IS NOT((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(vt1.c0))) BETWEEN ((- (vt0.c0))) AND (rt0.c2))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(vt0.c0)))||(vt1.c0)) ORDER BY (('369409120' COLLATE RTRIM)IS NOT((~ (vt1.c0)))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(vt0.c0)))||(vt1.c0)) WHERE (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(vt1.c0))) BETWEEN ((- (vt0.c0))) AND (rt0.c2))) ORDER BY (('369409120' COLLATE RTRIM)IS NOT((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(vt1.c0))) BETWEEN ((- (vt0.c0))) AND (rt0.c2))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(vt0.c0)))||(vt1.c0)) ORDER BY (('369409120' COLLATE RTRIM)IS NOT((~ (vt1.c0)))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)>>(vt0.c0)))||(vt1.c0)) WHERE (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(vt1.c0))) BETWEEN ((- (vt0.c0))) AND (rt0.c2))) ORDER BY (('369409120' COLLATE RTRIM)IS NOT((~ (vt1.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((x'')))) ORDER BY NULLIF((rt0.c2 IN ()), LIKELY(DISTINCT vt1.c0)), ((rt0.c0 COLLATE BINARY)/(((((rt0.c1)AND(x'')))AND(rt0.c0)))) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((x'')))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY NULLIF((rt0.c2 IN ()), LIKELY(DISTINCT vt1.c0)), ((rt0.c0 COLLATE BINARY)/(((((rt0.c1)AND(x'')))AND(rt0.c0)))) ASC  NULLS FIRST, rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((x'')))) ORDER BY NULLIF((rt0.c2 IN ()), LIKELY(DISTINCT vt1.c0)), ((rt0.c0 COLLATE BINARY)/(((((rt0.c1)AND(x'')))AND(rt0.c0)))) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((x'')))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY NULLIF((rt0.c2 IN ()), LIKELY(DISTINCT vt1.c0)), ((rt0.c0 COLLATE BINARY)/(((((rt0.c1)AND(x'')))AND(rt0.c0)))) ASC  NULLS FIRST, rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((x'')))) ORDER BY NULLIF((rt0.c2 IN ()), LIKELY(DISTINCT vt1.c0)), ((rt0.c0 COLLATE BINARY)/(((((rt0.c1)AND(x'')))AND(rt0.c0)))) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((TYPEOF(rt0.c0))>>(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c0))>>(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((TYPEOF(rt0.c0))>>(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c0))>>(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((TYPEOF(rt0.c0))>>(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))!=((CAST(rt0.c1 AS REAL))))) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN json_valid(rt0.c1) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END  NULLS LAST, (- (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))!=((CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN json_valid(rt0.c1) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END  NULLS LAST, (- (((rt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))!=((CAST(rt0.c1 AS REAL))))) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN json_valid(rt0.c1) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END  NULLS LAST, (- (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))!=((CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN json_valid(rt0.c1) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END  NULLS LAST, (- (((rt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))!=((CAST(rt0.c1 AS REAL))))) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN json_valid(rt0.c1) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END  NULLS LAST, (- (((rt0.c0) NOT NULL)));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c2 THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE 0Xffffffffc572e6d1 END WHEN '78D12' THEN (+ (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c2 THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE 0Xffffffffc572e6d1 END WHEN '78D12' THEN (+ (x'')) END) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c2 THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE 0Xffffffffc572e6d1 END WHEN '78D12' THEN (+ (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c2 THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE 0Xffffffffc572e6d1 END WHEN '78D12' THEN (+ (x'')) END) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END WHEN rt0.c2 THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE 0Xffffffffc572e6d1 END WHEN '78D12' THEN (+ (x'')) END);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((TRIM(DISTINCT 0X8355480, vt0.c0) IN (((vt0.c0)<=(rt0.c1)), CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT 0X8355480, vt0.c0) IN (((vt0.c0)<=(rt0.c1)), CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((TRIM(DISTINCT 0X8355480, vt0.c0) IN (((vt0.c0)<=(rt0.c1)), CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT 0X8355480, vt0.c0) IN (((vt0.c0)<=(rt0.c1)), CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((TRIM(DISTINCT 0X8355480, vt0.c0) IN (((vt0.c0)<=(rt0.c1)), CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) ELSE x'' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) ELSE x'' END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c0)AND(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) ELSE x'' END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'151d1897') NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((NULL)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'151d1897') NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((NULL)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'151d1897') NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((NULL)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'151d1897') NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((NULL)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'151d1897') NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND (((NULL)LIKE(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS BLOB))>(((0.9187007858814478)>=('-842585412')))) INNER JOIN rt0 ON ((rt0.c2) BETWEEN (((vt0.c0)AND(vt1.c0))) AND (((((((((vt0.c0)AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(0.6940143897549761)))) WHERE ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '-785879699' WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END IN ())) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) NOTNULL)  NULLS LAST, (((vt1.c0))<>((0.2442949904237499))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '-785879699' WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS BLOB))>(((0.9187007858814478)>=('-842585412')))) INNER JOIN rt0 ON ((rt0.c2) BETWEEN (((vt0.c0)AND(vt1.c0))) AND (((((((((vt0.c0)AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(0.6940143897549761)))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) NOTNULL)  NULLS LAST, (((vt1.c0))!=((0.2442949904237499))) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS BLOB))>(((0.9187007858814478)>=('-842585412')))) INNER JOIN rt0 ON ((rt0.c2) BETWEEN (((vt0.c0)AND(vt1.c0))) AND (((((((((vt0.c0)AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(0.6940143897549761)))) WHERE ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '-785879699' WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END IN ())) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) NOTNULL)  NULLS LAST, (((vt1.c0))<>((0.2442949904237499))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '-785879699' WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS BLOB))>(((0.9187007858814478)>=('-842585412')))) INNER JOIN rt0 ON ((rt0.c2) BETWEEN (((vt0.c0)AND(vt1.c0))) AND (((((((((vt0.c0)AND(vt1.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(0.6940143897549761)))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))) NOTNULL)  NULLS LAST, (((vt1.c0))!=((0.2442949904237499))) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(((x'')LIKE(rt0.c1)))) ORDER BY (+ (TRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((x'')LIKE(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (TRIM(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(((x'')LIKE(rt0.c1)))) ORDER BY (+ (TRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((x'')LIKE(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (TRIM(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_GET(((x'')LIKE(rt0.c1)))) ORDER BY (+ (TRIM(rt0.c2)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON '-300634864' WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON '-300634864');
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON '-300634864' WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON '-300634864');
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON '-300634864' WHERE (SQLITE_VERSION());
SELECT ALL * FROM rt0, vt1 WHERE (((((((((rt0.c2)OR('-1443544333')))OR(rt0.c1)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))OR(rt0.c2))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR('-1443544333')))OR(rt0.c1)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))));
SELECT ALL * FROM rt0, vt1 WHERE (((((((((rt0.c2)OR('-1443544333')))OR(rt0.c1)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))OR(rt0.c2))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR('-1443544333')))OR(rt0.c1)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2)))));
SELECT ALL * FROM rt0, vt1 WHERE (((((((((rt0.c2)OR('-1443544333')))OR(rt0.c1)))OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))OR(rt0.c2))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(((((vt1.c0)OR(rt0.c0)))AND(rt0.c2))));
SELECT * FROM vt1 WHERE (NULL) ORDER BY ((vt1.c0)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (NULL) ORDER BY ((vt1.c0)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (NULL) ORDER BY ((vt1.c0)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))==(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((json_array_length(rt0.c0, rt0.c2))>((~ ('gS헛')))) WHERE ((((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt1.c0))))>>(((rt0.c1)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt1.c0))))>>(((rt0.c1)/(rt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((json_array_length(rt0.c0, rt0.c2))>((~ ('gS헛')))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((json_array_length(rt0.c0, rt0.c2))>((~ ('gS헛')))) WHERE ((((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt1.c0))))>>(((rt0.c1)/(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt1.c0))))>>(((rt0.c1)/(rt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((json_array_length(rt0.c0, rt0.c2))>((~ ('gS헛')))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((json_array_length(rt0.c0, rt0.c2))>((~ ('gS헛')))) WHERE ((((((rt0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt1.c0))))>>(((rt0.c1)/(rt0.c0)))));
SELECT * FROM rt0 WHERE (((TYPEOF(rt0.c2)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((rt0.c0)OR(rt0.c0)))AND(NULL))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((rt0.c0)OR(rt0.c0)))AND(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL))));
SELECT * FROM rt0 WHERE (((TYPEOF(rt0.c2)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((rt0.c0)OR(rt0.c0)))AND(NULL))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((rt0.c0)OR(rt0.c0)))AND(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL))));
SELECT * FROM rt0 WHERE (((TYPEOF(rt0.c2)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((rt0.c0)OR(rt0.c0)))AND(NULL))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (rt0.c2);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(vt1.c0)) ELSE (rt0.c2 IN ()) END, CAST(rt0.c2 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(vt1.c0)) ELSE (rt0.c2 IN ()) END, CAST(rt0.c2 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(vt1.c0)) ELSE (rt0.c2 IN ()) END, CAST(rt0.c2 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(vt1.c0)) ELSE (rt0.c2 IN ()) END, CAST(rt0.c2 AS BLOB) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(vt1.c0)) ELSE (rt0.c2 IN ()) END, CAST(rt0.c2 AS BLOB) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CAST(vt0.c0 AS REAL), (NOT (rt0.c0)))) WHERE ((((rt0.c2 IN (rt0.c0, rt0.c1)))<(CAST(rt0.c2 AS REAL)))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((vt0.c0 IN (rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c0, rt0.c1)))<(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CAST(vt0.c0 AS REAL), (NOT (rt0.c0)))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((vt0.c0 IN (rt0.c2, rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CAST(vt0.c0 AS REAL), (NOT (rt0.c0)))) WHERE ((((rt0.c2 IN (rt0.c0, rt0.c1)))<(CAST(rt0.c2 AS REAL)))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((vt0.c0 IN (rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c0, rt0.c1)))<(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CAST(vt0.c0 AS REAL), (NOT (rt0.c0)))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((vt0.c0 IN (rt0.c2, rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((- (vt0.c0)) IN (CAST(vt0.c0 AS REAL), (NOT (rt0.c0)))) WHERE ((((rt0.c2 IN (rt0.c0, rt0.c1)))<(CAST(rt0.c2 AS REAL)))) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND ((vt0.c0 IN (rt0.c2, rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS NUMERIC) WHERE ((((rt0.c2 IN ()))|(((rt0.c1) IS FALSE)))) ORDER BY CAST((0.15096596512974902 IN ()) AS BLOB)  NULLS LAST, (((vt0.c0 IN (rt0.c1, rt0.c1)))||((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))|(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS NUMERIC) ORDER BY CAST((0.15096596512974902 IN ()) AS BLOB)  NULLS LAST, (((vt0.c0 IN (rt0.c1, rt0.c1)))||((rt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS NUMERIC) WHERE ((((rt0.c2 IN ()))|(((rt0.c1) IS FALSE)))) ORDER BY CAST((0.15096596512974902 IN ()) AS BLOB)  NULLS LAST, (((vt0.c0 IN (rt0.c1, rt0.c1)))||((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))|(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS NUMERIC) ORDER BY CAST((0.15096596512974902 IN ()) AS BLOB)  NULLS LAST, (((vt0.c0 IN (rt0.c1, rt0.c1)))||((rt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(UPPER(vt0.c0) AS NUMERIC) WHERE ((((rt0.c2 IN ()))|(((rt0.c1) IS FALSE)))) ORDER BY CAST((0.15096596512974902 IN ()) AS BLOB)  NULLS LAST, (((vt0.c0 IN (rt0.c1, rt0.c1)))||((rt0.c1 IN ()))) ASC;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c2) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c2) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c2) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c2) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c2) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY NULLIF(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>>(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>>(vt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY NULLIF(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>>(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>>(vt1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY NULLIF(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)>>(vt1.c0))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT (vt1.c0 IN ()), ((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (vt1.c0 IN ()), ((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT (vt1.c0 IN ()), ((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (vt1.c0 IN ()), ((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT (vt1.c0 IN ()), ((vt1.c0)*(vt1.c0))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) INNER JOIN vt0 ON ((((NULL)IS(vt0.c0))) ISNULL) WHERE (CASE ((rt0.c0)&(rt0.c1))  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN rt0.c1 ELSE ((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)&(rt0.c1))  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN rt0.c1 ELSE ((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) INNER JOIN vt0 ON ((((NULL)IS(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) INNER JOIN vt0 ON ((((NULL)IS(vt0.c0))) ISNULL) WHERE (CASE ((rt0.c0)&(rt0.c1))  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN rt0.c1 ELSE ((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)&(rt0.c1))  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN rt0.c1 ELSE ((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) INNER JOIN vt0 ON ((((NULL)IS(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (rt0.c0 COLLATE NOCASE IN ()) INNER JOIN vt0 ON ((((NULL)IS(vt0.c0))) ISNULL) WHERE (CASE ((rt0.c0)&(rt0.c1))  WHEN NULLIF(DISTINCT rt0.c2, rt0.c1) THEN rt0.c1 ELSE ((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ABS(vt0.c0) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.46409291122036034) THEN NULL ELSE ((vt0.c0)<>(vt0.c0)) END ASC, (((vt0.c0 IN (vt0.c0, x''))) NOT BETWEEN (NULL) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ABS(vt0.c0) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.46409291122036034) THEN NULL ELSE ((vt0.c0)<>(vt0.c0)) END ASC, (((vt0.c0 IN (vt0.c0, x''))) NOT BETWEEN (NULL) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ABS(vt0.c0) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.46409291122036034) THEN NULL ELSE ((vt0.c0)<>(vt0.c0)) END ASC, (((vt0.c0 IN (vt0.c0, x''))) NOT BETWEEN (NULL) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ABS(vt0.c0) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.46409291122036034) THEN NULL ELSE ((vt0.c0)<>(vt0.c0)) END ASC, (((vt0.c0 IN (vt0.c0, x''))) NOT BETWEEN (NULL) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0)>>(vt0.c0)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN ABS(vt0.c0) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY CASE WHEN LIKELIHOOD(vt0.c0, 0.46409291122036034) THEN NULL ELSE ((vt0.c0)<>(vt0.c0)) END ASC, (((vt0.c0 IN (vt0.c0, x''))) NOT BETWEEN (NULL) AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'')) DESC;
SELECT * FROM vt1 WHERE (CASE ((NULL)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE ']dceiO2T(' END THEN ((vt1.c0) NOTNULL) ELSE vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE ']dceiO2T(' END THEN ((vt1.c0) NOTNULL) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((NULL)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE ']dceiO2T(' END THEN ((vt1.c0) NOTNULL) ELSE vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE ']dceiO2T(' END THEN ((vt1.c0) NOTNULL) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((NULL)%(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE ']dceiO2T(' END THEN ((vt1.c0) NOTNULL) ELSE vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)LIKE(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c1)), (NOT (rt0.c1))))<=((2.03898549E8, ((rt0.c1)IS NOT(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)LIKE(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c1)), (NOT (rt0.c1))))<=((2.03898549E8, ((rt0.c1)IS NOT(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)LIKE(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c1)), (NOT (rt0.c1))))<=((2.03898549E8, ((rt0.c1)IS NOT(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)LIKE(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c1)), (NOT (rt0.c1))))<=((2.03898549E8, ((rt0.c1)IS NOT(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)LIKE(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c1)), (NOT (rt0.c1))))<=((2.03898549E8, ((rt0.c1)IS NOT(rt0.c0)), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))*((((rt0.c1))==((vt0.c0))))) WHERE (((LIKELY(rt0.c1)) IS FALSE)) ORDER BY ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))*((((rt0.c1))==((vt0.c0))))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))*((((rt0.c1))==((vt0.c0))))) WHERE (((LIKELY(rt0.c1)) IS FALSE)) ORDER BY ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))*((((rt0.c1))==((vt0.c0))))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))*((((rt0.c1))==((vt0.c0))))) WHERE (((LIKELY(rt0.c1)) IS FALSE)) ORDER BY ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1)) DESC;
SELECT * FROM rt0, vt1 WHERE (((((('-991754862')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)==(rt0.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('-991754862')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)==(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((('-991754862')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)==(rt0.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('-991754862')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)==(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((('-991754862')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c0) AND (((rt0.c1)==(rt0.c0))))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))<=((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)<=(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))<=((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)<=(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))<=((vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=(('-2035281166'))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=(('-2035281166')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=(('-2035281166'))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=(('-2035281166')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=(('-2035281166'))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((('[Gg6WX')|(vt1.c0)) IN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, '')))))) ORDER BY CAST(((x'4f51') IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((('[Gg6WX')|(vt1.c0)) IN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, '')))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST(((x'4f51') IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((('[Gg6WX')|(vt1.c0)) IN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, '')))))) ORDER BY CAST(((x'4f51') IS FALSE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((('[Gg6WX')|(vt1.c0)) IN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, '')))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST(((x'4f51') IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((('[Gg6WX')|(vt1.c0)) IN ((((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, '')))))) ORDER BY CAST(((x'4f51') IS FALSE) AS INTEGER);
SELECT * FROM vt1, rt0 WHERE ((~ (rt0.c1 COLLATE BINARY))) ORDER BY NULL  NULLS LAST, (((((((((rt0.c0 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((+ (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))AND((((rt0.c2))>=((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL  NULLS LAST, (((((((((rt0.c0 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((+ (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))AND((((rt0.c2))>=((rt0.c2)))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((~ (rt0.c1 COLLATE BINARY))) ORDER BY NULL  NULLS LAST, (((((((((rt0.c0 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((+ (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))AND((((rt0.c2))>=((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULL  NULLS LAST, (((((((((rt0.c0 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((+ (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))AND((((rt0.c2))>=((rt0.c2)))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((~ (rt0.c1 COLLATE BINARY))) ORDER BY NULL  NULLS LAST, (((((((((rt0.c0 IN ()))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((+ (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))AND((((rt0.c2))>=((rt0.c2)))))  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0)<<(rt0.c2)) THEN SQLITE_COMPILEOPTION_GET(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<<(rt0.c2)) THEN SQLITE_COMPILEOPTION_GET(vt1.c0) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0)<<(rt0.c2)) THEN SQLITE_COMPILEOPTION_GET(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<<(rt0.c2)) THEN SQLITE_COMPILEOPTION_GET(vt1.c0) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0)<<(rt0.c2)) THEN SQLITE_COMPILEOPTION_GET(vt1.c0) END);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(x'')))OR(rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(x'')))OR(rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(x'')))OR(rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(x'')))OR(rt0.c2))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c0)AND(x'')))OR(rt0.c2))) AND (rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((x''))>(((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x''))>(((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((x''))>(((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x''))>(((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((x''))>(((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS TEXT) CROSS JOIN vt1 ON (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS TEXT) CROSS JOIN vt1 ON (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS TEXT) CROSS JOIN vt1 ON (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS TEXT) CROSS JOIN vt1 ON (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS TEXT) CROSS JOIN vt1 ON (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY json(CASE WHEN rt0.c0 THEN rt0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY json(CASE WHEN rt0.c0 THEN rt0.c0 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY json(CASE WHEN rt0.c0 THEN rt0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY json(CASE WHEN rt0.c0 THEN rt0.c0 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY json(CASE WHEN rt0.c0 THEN rt0.c0 END)  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON x'' WHERE (LOWER(1188709633));
SELECT SUM(count) FROM (SELECT ((LOWER(1188709633)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON x'');
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON x'' WHERE (LOWER(1188709633));
SELECT SUM(count) FROM (SELECT ((LOWER(1188709633)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON x'');
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON x'' WHERE (LOWER(1188709633));
SELECT ALL * FROM rt0, vt1 WHERE (0.2700766833727153);
SELECT SUM(count) FROM (SELECT ALL ((0.2700766833727153) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (0.2700766833727153);
SELECT SUM(count) FROM (SELECT ALL ((0.2700766833727153) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (0.2700766833727153);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ (rt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((1531620372)IS NOT(vt0.c0)))>=((('-1503896953') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((1531620372)IS NOT(vt0.c0)))>=((('-1503896953') ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((1531620372)IS NOT(vt0.c0)))>=((('-1503896953') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((1531620372)IS NOT(vt0.c0)))>=((('-1503896953') ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((1531620372)IS NOT(vt0.c0)))>=((('-1503896953') ISNULL))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)+(rt0.c1)))>=(rt0.c0 COLLATE RTRIM))) ORDER BY load_extension(rt0.c0, (((('䤛D\ni')AND(vt1.c0)))OR(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(rt0.c1)))>=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1 ORDER BY load_extension(rt0.c0, (((('䤛D\ni')AND(vt1.c0)))OR(vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)+(rt0.c1)))>=(rt0.c0 COLLATE RTRIM))) ORDER BY load_extension(rt0.c0, (((('䤛D\ni')AND(vt1.c0)))OR(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(rt0.c1)))>=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1 ORDER BY load_extension(rt0.c0, (((('䤛D\ni')AND(vt1.c0)))OR(vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)+(rt0.c1)))>=(rt0.c0 COLLATE RTRIM))) ORDER BY load_extension(rt0.c0, (((('䤛D\ni')AND(vt1.c0)))OR(vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL COLLATE NOCASE  WHEN CHANGES() THEN vt0.c0 WHEN SUBSTR(vt0.c0, vt0.c0) THEN (((vt0.c0, vt0.c0, 'Eh-J헛'))==((vt0.c0, vt0.c0, vt0.c0))) WHEN '78D12' THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE NOCASE  WHEN CHANGES() THEN vt0.c0 WHEN SUBSTR(vt0.c0, vt0.c0) THEN (((vt0.c0, vt0.c0, 'Eh-J헛'))=((vt0.c0, vt0.c0, vt0.c0))) WHEN '78D12' THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL COLLATE NOCASE  WHEN CHANGES() THEN vt0.c0 WHEN SUBSTR(vt0.c0, vt0.c0) THEN (((vt0.c0, vt0.c0, 'Eh-J헛'))==((vt0.c0, vt0.c0, vt0.c0))) WHEN '78D12' THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE NOCASE  WHEN CHANGES() THEN vt0.c0 WHEN SUBSTR(vt0.c0, vt0.c0) THEN (((vt0.c0, vt0.c0, 'Eh-J헛'))=((vt0.c0, vt0.c0, vt0.c0))) WHEN '78D12' THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL COLLATE NOCASE  WHEN CHANGES() THEN vt0.c0 WHEN SUBSTR(vt0.c0, vt0.c0) THEN (((vt0.c0, vt0.c0, 'Eh-J헛'))==((vt0.c0, vt0.c0, vt0.c0))) WHEN '78D12' THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((((((((rt0.c1))=((rt0.c0))))AND(rt0.c0)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1))=((rt0.c0))))AND(rt0.c0)))AND(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((((((((rt0.c1))=((rt0.c0))))AND(rt0.c0)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1))=((rt0.c0))))AND(rt0.c0)))AND(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 NOT INDEXED WHERE ((((((((rt0.c1))=((rt0.c0))))AND(rt0.c0)))AND(rt0.c0)));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 IN (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (json_insert(vt0.c0, ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), (vt1.c0 IN ()))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt0.c0, ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (json_insert(vt0.c0, ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), (vt1.c0 IN ()))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt0.c0, ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM ORDER BY vt1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (json_insert(vt0.c0, ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), (vt1.c0 IN ()))) ORDER BY vt1.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((rt0.c1)<(vt1.c0)) IN ())) ORDER BY (('-2112738812') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (('-2112738812') NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((rt0.c1)<(vt1.c0)) IN ())) ORDER BY (('-2112738812') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (('-2112738812') NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((rt0.c1)<(vt1.c0)) IN ())) ORDER BY (('-2112738812') NOT NULL) ASC;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0)) NOT BETWEEN (((+ (vt1.c0)))) AND ((NULLIF(vt1.c0, vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((+ (vt1.c0)))) AND ((NULLIF(vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt0.c0 DESC  NULLS LAST, vt1.c0 ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0)) NOT BETWEEN (((+ (vt1.c0)))) AND ((NULLIF(vt1.c0, vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((+ (vt1.c0)))) AND ((NULLIF(vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt0.c0 DESC  NULLS LAST, vt1.c0 ASC);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.c0)) NOT BETWEEN (((+ (vt1.c0)))) AND ((NULLIF(vt1.c0, vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST, vt1.c0 ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS TEXT))>>(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))>>(((vt1.c0) NOTNULL))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS TEXT))>>(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))>>(((vt1.c0) NOTNULL))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0))>=((vt0.c0))) COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS TEXT))>>(((vt1.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT NULL))>(CAST(rt0.c1 AS TEXT)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (600328360)))OR((- (rt0.c0)))) DESC  NULLS LAST, ((rt0.c2)<<(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))>(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (600328360)))OR((- (rt0.c0)))) DESC  NULLS LAST, ((rt0.c2)<<(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT NULL))>(CAST(rt0.c1 AS TEXT)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (600328360)))OR((- (rt0.c0)))) DESC  NULLS LAST, ((rt0.c2)<<(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))>(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (600328360)))OR((- (rt0.c0)))) DESC  NULLS LAST, ((rt0.c2)<<(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT NULL))>(CAST(rt0.c1 AS TEXT)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (600328360)))OR((- (rt0.c0)))) DESC  NULLS LAST, ((rt0.c2)<<(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c1)AND(rt0.c2)))||(CAST(rt0.c1 AS NUMERIC))) DESC, CASE CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END  WHEN LAST_INSERT_ROWID() THEN vt1.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)AND(rt0.c2)))||(CAST(rt0.c1 AS NUMERIC))) DESC, CASE CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END  WHEN LAST_INSERT_ROWID() THEN vt1.c0 COLLATE RTRIM END ASC  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c1)AND(rt0.c2)))||(CAST(rt0.c1 AS NUMERIC))) DESC, CASE CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END  WHEN LAST_INSERT_ROWID() THEN vt1.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)AND(rt0.c2)))||(CAST(rt0.c1 AS NUMERIC))) DESC, CASE CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END  WHEN LAST_INSERT_ROWID() THEN vt1.c0 COLLATE RTRIM END ASC  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((((rt0.c1)AND(rt0.c2)))||(CAST(rt0.c1 AS NUMERIC))) DESC, CASE CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 END  WHEN LAST_INSERT_ROWID() THEN vt1.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>(vt0.c0)))|(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))|(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>(vt0.c0)))|(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))|(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>(vt0.c0)))|(vt0.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE ('-1002928581') ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND(0.04606223887437633 COLLATE BINARY)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, x'' DESC;
SELECT SUM(count) FROM (SELECT (('-1002928581') IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND(0.04606223887437633 COLLATE BINARY)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, x'' DESC);
SELECT ALL * FROM vt0 WHERE ('-1002928581') ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND(0.04606223887437633 COLLATE BINARY)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, x'' DESC;
SELECT SUM(count) FROM (SELECT (('-1002928581') IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND(0.04606223887437633 COLLATE BINARY)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, x'' DESC);
SELECT ALL * FROM vt0 WHERE ('-1002928581') ORDER BY ((((((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE NOCASE)))AND(0.04606223887437633 COLLATE BINARY)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST, x'' DESC;
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))GLOB(CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE 0.10849820050600167 END)) CROSS JOIN rt0 ON '-785879699' WHERE (((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(x'' AS REAL)))) ORDER BY ((((vt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.5173106522297352, rt0.c1, rt0.c2))) IN ()), (- ((- (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))GLOB(CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE 0.10849820050600167 END)) CROSS JOIN rt0 ON '-785879699' ORDER BY ((((vt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.5173106522297352, rt0.c1, rt0.c2))) IN ()), (- ((- (rt0.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))GLOB(CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE 0.10849820050600167 END)) CROSS JOIN rt0 ON '-785879699' WHERE (((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(x'' AS REAL)))) ORDER BY ((((vt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.5173106522297352, rt0.c1, rt0.c2))) IN ()), (- ((- (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))LIKE(CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))GLOB(CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE 0.10849820050600167 END)) CROSS JOIN rt0 ON '-785879699' ORDER BY ((((vt0.c0, rt0.c1, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.5173106522297352, rt0.c1, rt0.c2))) IN ()), (- ((- (rt0.c2)))));
SELECT * FROM vt1 WHERE (RTRIM(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((RTRIM(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (RTRIM(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((RTRIM(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (RTRIM(vt1.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON LIKELY(LIKE(vt1.c0, vt1.c0, 'T')) WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt1.c0)|(vt0.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON LIKELY(LIKE(vt1.c0, vt1.c0, 'T')) ORDER BY ((((vt1.c0)|(vt0.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON LIKELY(LIKE(vt1.c0, vt1.c0, 'T')) WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt1.c0)|(vt0.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON LIKELY(LIKE(vt1.c0, vt1.c0, 'T')) ORDER BY ((((vt1.c0)|(vt0.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON LIKELY(LIKE(vt1.c0, vt1.c0, 'T')) WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((((vt1.c0)|(vt0.c0))) BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((CAST(rt0.c0 AS INTEGER) IN (((vt1.c0)%(rt0.c2))))) ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN (((vt1.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON vt0.c0 ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((CAST(rt0.c0 AS INTEGER) IN (((vt1.c0)%(rt0.c2))))) ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN (((vt1.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON vt0.c0 ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((CAST(rt0.c0 AS INTEGER) IN (((vt1.c0)%(rt0.c2))))) ORDER BY CAST(rt0.c2 AS INTEGER) COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON ((((rt0.c2)OR(1497742327)))OR(rt0.c1)) COLLATE RTRIM WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (ABS(vt0.c0)) AND (ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (ABS(vt0.c0)) AND (ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON ((((rt0.c2)OR(1497742327)))OR(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON ((((rt0.c2)OR(1497742327)))OR(rt0.c1)) COLLATE RTRIM WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (ABS(vt0.c0)) AND (ABS(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (ABS(vt0.c0)) AND (ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON ((((rt0.c2)OR(1497742327)))OR(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON ((((rt0.c2)OR(1497742327)))OR(rt0.c1)) COLLATE RTRIM WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (ABS(vt0.c0)) AND (ABS(DISTINCT vt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN rt0.c0 WHEN (+ (rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN '0.5173106522297352' THEN ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY COALESCE(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)), ((rt0.c2)|(vt0.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN rt0.c0 WHEN (+ (rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN '0.5173106522297352' THEN ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END ORDER BY COALESCE(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)), ((rt0.c2)|(vt0.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN rt0.c0 WHEN (+ (rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN '0.5173106522297352' THEN ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY COALESCE(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)), ((rt0.c2)|(vt0.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN rt0.c0 WHEN (+ (rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN '0.5173106522297352' THEN ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END ORDER BY COALESCE(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)), ((rt0.c2)|(vt0.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) DESC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN rt0.c0 WHEN (+ (rt0.c2)) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN '0.5173106522297352' THEN ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) END WHERE ((((NOT (rt0.c0))) IS FALSE)) ORDER BY COALESCE(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)), ((rt0.c2)|(vt0.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) DESC;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c0)*(vt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(x'2cbe')))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(vt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(x'2cbe')))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c0)*(vt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(x'2cbe')))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(vt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(x'2cbe')))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c0)*(vt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(x'2cbe')))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((rt0.c2)LIKE(rt0.c1)))AND(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((1282443078) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)LIKE(rt0.c1)))AND(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((1282443078) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((rt0.c2)LIKE(rt0.c1)))AND(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((1282443078) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)LIKE(rt0.c1)))AND(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((1282443078) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((((rt0.c2)LIKE(rt0.c1)))AND(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((1282443078) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ('') ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ('') ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ('') ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c0))OR(highlight(vt0.c0, '0.1904561666978778', vt0.c0, vt0.c0))))OR(NULLIF(DISTINCT vt0.c0, vt0.c0)))) ORDER BY (NULL COLLATE BINARY IN (((vt0.c0)<=(vt0.c0)))), (- ((~ (vt0.c0)))), (vt0.c0 IN (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c0))OR(highlight(vt0.c0, '0.1904561666978778', vt0.c0, vt0.c0))))OR(NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL COLLATE BINARY IN (((vt0.c0)<=(vt0.c0)))), (- ((~ (vt0.c0)))), (vt0.c0 IN (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c0))OR(highlight(vt0.c0, '0.1904561666978778', vt0.c0, vt0.c0))))OR(NULLIF(DISTINCT vt0.c0, vt0.c0)))) ORDER BY (NULL COLLATE BINARY IN (((vt0.c0)<=(vt0.c0)))), (- ((~ (vt0.c0)))), (vt0.c0 IN (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt0.c0))OR(highlight(vt0.c0, '0.1904561666978778', vt0.c0, vt0.c0))))OR(NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL COLLATE BINARY IN (((vt0.c0)<=(vt0.c0)))), (- ((~ (vt0.c0)))), (vt0.c0 IN (vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0 WHERE (((((TRIM(DISTINCT vt0.c0))OR(highlight(vt0.c0, '0.1904561666978778', vt0.c0, vt0.c0))))OR(NULLIF(DISTINCT vt0.c0, vt0.c0)))) ORDER BY (NULL COLLATE BINARY IN (((vt0.c0)<=(vt0.c0)))), (- ((~ (vt0.c0)))), (vt0.c0 IN (vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))));
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON (('') IS TRUE) COLLATE NOCASE WHERE (CAST((- (vt1.c0)) AS REAL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN (NULL IN ()) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c0)|(rt0.c1)) THEN ((vt1.c0) NOTNULL) END, rt0.c1  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON (('') IS TRUE) COLLATE NOCASE ORDER BY CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN (NULL IN ()) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c0)|(rt0.c1)) THEN ((vt1.c0) NOTNULL) END, rt0.c1  NULLS FIRST, rt0.c1 DESC);
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON (('') IS TRUE) COLLATE NOCASE WHERE (CAST((- (vt1.c0)) AS REAL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN (NULL IN ()) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c0)|(rt0.c1)) THEN ((vt1.c0) NOTNULL) END, rt0.c1  NULLS FIRST, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON (('') IS TRUE) COLLATE NOCASE ORDER BY CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN (NULL IN ()) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c0)|(rt0.c1)) THEN ((vt1.c0) NOTNULL) END, rt0.c1  NULLS FIRST, rt0.c1 DESC);
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON (('') IS TRUE) COLLATE NOCASE WHERE (CAST((- (vt1.c0)) AS REAL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END WHEN (NULL IN ()) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c0)|(rt0.c1)) THEN ((vt1.c0) NOTNULL) END, rt0.c1  NULLS FIRST, rt0.c1 DESC;
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0)<=(vt1.c0)))OR((-1443544333 IN ()))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY 0.37315812833855766;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt1.c0)))OR((-1443544333 IN ()))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.37315812833855766);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0)<=(vt1.c0)))OR((-1443544333 IN ()))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY 0.37315812833855766;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt1.c0)))OR((-1443544333 IN ()))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.37315812833855766);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c0)<=(vt1.c0)))OR((-1443544333 IN ()))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY 0.37315812833855766;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((NOT (rt0.c0))))) ORDER BY CAST(((vt0.c0)<(rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 NOT INDEXED ORDER BY CAST(((vt0.c0)<(rt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((NOT (rt0.c0))))) ORDER BY CAST(((vt0.c0)<(rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 NOT INDEXED ORDER BY CAST(((vt0.c0)<(rt0.c1)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((NOT (rt0.c0))))) ORDER BY CAST(((vt0.c0)<(rt0.c1)) AS TEXT)  NULLS FIRST;
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((rt0.c2)+(vt1.c0)) THEN TYPEOF(DISTINCT rt0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c0)<<(vt0.c0)) THEN (NOT (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)+(vt1.c0)) THEN TYPEOF(DISTINCT rt0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c0)<<(vt0.c0)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((rt0.c2)+(vt1.c0)) THEN TYPEOF(DISTINCT rt0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c0)<<(vt0.c0)) THEN (NOT (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)+(vt1.c0)) THEN TYPEOF(DISTINCT rt0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c0)<<(vt0.c0)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((rt0.c2)+(vt1.c0)) THEN TYPEOF(DISTINCT rt0.c2) WHEN (vt0.c0 IN ()) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c0)<<(vt0.c0)) THEN (NOT (rt0.c1)) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FULL OUTER JOIN vt1 ON ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FULL OUTER JOIN vt1 ON ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FULL OUTER JOIN vt1 ON ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FULL OUTER JOIN vt1 ON ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((NULL) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FULL OUTER JOIN vt1 ON ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((0x2c100526, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ()) WHERE ((0.7474724783412395 IN ())) ORDER BY (((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, (CAST(vt0.c0 AS NUMERIC) IN ((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((0.7474724783412395 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((0X2c100526, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ()) ORDER BY (((((rt0.c2, rt0.c2, rt0.c0))=((rt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, (CAST(vt0.c0 AS NUMERIC) IN ((~ (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((0x2c100526, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ()) WHERE ((0.7474724783412395 IN ())) ORDER BY (((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, (CAST(vt0.c0 AS NUMERIC) IN ((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((0.7474724783412395 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((0X2c100526, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ()) ORDER BY (((((rt0.c2, rt0.c2, rt0.c0))=((rt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, (CAST(vt0.c0 AS NUMERIC) IN ((~ (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((0x2c100526, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ()) WHERE ((0.7474724783412395 IN ())) ORDER BY (((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC, (CAST(vt0.c0 AS NUMERIC) IN ((~ (rt0.c2)))) ASC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2))<((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2))<((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2))<((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((0.1440280819987858 IN ()));
SELECT SUM(count) FROM (SELECT (((0.1440280819987858 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((0.1440280819987858 IN ()));
SELECT SUM(count) FROM (SELECT (((0.1440280819987858 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((0.1440280819987858 IN ()));
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((((((NOT (rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))))))AND('')))AND(((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1)+(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((((NOT (rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))))))AND('')))AND(((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1)+(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((((((NOT (rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))))))AND('')))AND(((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1)+(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((((NOT (rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))))))AND('')))AND(((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1)+(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((((((((NOT (rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))))))AND('')))AND(((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1)+(vt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT * FROM vt1 WHERE (((((vt1.c0)>(0.303331110874555))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(0.303331110874555))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>(0.303331110874555))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(0.303331110874555))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>(0.303331110874555))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)<<(vt0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0)>=(rt0.c2)))) RIGHT OUTER JOIN rt0 ON x'' WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)<<(vt0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0)>=(rt0.c2)))) RIGHT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)<<(vt0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0)>=(rt0.c2)))) RIGHT OUTER JOIN rt0 ON x'' WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)<<(vt0.c0))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((vt0.c0)>=(rt0.c2)))) RIGHT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON (('1282443078')!=(CAST(rt0.c1 AS TEXT))) WHERE (CAST(CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB)) ORDER BY ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (('1282443078')<>(CAST(rt0.c1 AS TEXT))) ORDER BY ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON (('1282443078')!=(CAST(rt0.c1 AS TEXT))) WHERE (CAST(CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB)) ORDER BY ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON (('1282443078')<>(CAST(rt0.c1 AS TEXT))) ORDER BY ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt1 FULL OUTER JOIN vt0 ON (('1282443078')!=(CAST(rt0.c1 AS TEXT))) WHERE (CAST(CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB)) ORDER BY ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT NULL);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)||(vt0.c0))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)||(vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)||(vt0.c0))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)||(vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (((vt0.c0) IS TRUE)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)||(vt0.c0))) AND (((vt0.c0) IS TRUE)));
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((vt0.c0 IN (rt0.c1)) COLLATE RTRIM) ORDER BY CAST(((rt0.c0) NOT NULL) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST(((rt0.c0) NOT NULL) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((vt0.c0 IN (rt0.c1)) COLLATE RTRIM) ORDER BY CAST(((rt0.c0) NOT NULL) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CAST(((rt0.c0) NOT NULL) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((vt0.c0 IN (rt0.c1)) COLLATE RTRIM) ORDER BY CAST(((rt0.c0) NOT NULL) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(x'' AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(x'' AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) IS FALSE)))!=((rt0.c0))) FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) IS FALSE)))!=((rt0.c0))) FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) IS FALSE)))!=((rt0.c0))) FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) IS FALSE)))!=((rt0.c0))) FULL OUTER JOIN rt0 ON (CAST(rt0.c1 AS REAL) IN ()));
SELECT * FROM rt0 INNER JOIN vt0 ON (((((((((((((rt0.c2 IN ()))OR((((vt1.c0))=((0.40783663174610996))))))AND(0X3ae61ee1 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(NULLIF(rt0.c2, NULL))))AND(x'')))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))) INNER JOIN vt1 ON ((((((rt0.c2))==((vt1.c0)))))>(((vt0.c0 IN ())))) WHERE (((((((((CASE '-1e500'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND((NOT (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))OR((((rt0.c1, vt0.c0, rt0.c0))<>((-1155074164, x'', vt1.c0))))))OR(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-1e500'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND((NOT (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))OR((((rt0.c1, vt0.c0, rt0.c0))!=((-1155074164, x'', vt1.c0))))))OR(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((((((((((rt0.c2 IN ()))OR((((vt1.c0))=((0.40783663174610996))))))AND(0x3ae61ee1 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(NULLIF(rt0.c2, NULL))))AND(x'')))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))) INNER JOIN vt1 ON ((((((rt0.c2))==((vt1.c0)))))>(((vt0.c0 IN ())))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((((((((((((rt0.c2 IN ()))OR((((vt1.c0))=((0.40783663174610996))))))AND(0X3ae61ee1 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(NULLIF(rt0.c2, NULL))))AND(x'')))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))) INNER JOIN vt1 ON ((((((rt0.c2))==((vt1.c0)))))>(((vt0.c0 IN ())))) WHERE (((((((((CASE '-1e500'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND((NOT (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))OR((((rt0.c1, vt0.c0, rt0.c0))<>((-1155074164, x'', vt1.c0))))))OR(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-1e500'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND((NOT (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))OR((((rt0.c1, vt0.c0, rt0.c0))!=((-1155074164, x'', vt1.c0))))))OR(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((((((((((rt0.c2 IN ()))OR((((vt1.c0))=((0.40783663174610996))))))AND(0x3ae61ee1 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(NULLIF(rt0.c2, NULL))))AND(x'')))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))) INNER JOIN vt1 ON ((((((rt0.c2))==((vt1.c0)))))>(((vt0.c0 IN ())))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((((((((((((rt0.c2 IN ()))OR((((vt1.c0))=((0.40783663174610996))))))AND(0X3ae61ee1 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(NULLIF(rt0.c2, NULL))))AND(x'')))AND(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)))) INNER JOIN vt1 ON ((((((rt0.c2))==((vt1.c0)))))>(((vt0.c0 IN ())))) WHERE (((((((((CASE '-1e500'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND((NOT (vt0.c0)))))OR(CAST(vt1.c0 AS REAL))))OR((((rt0.c1, vt0.c0, rt0.c0))<>((-1155074164, x'', vt1.c0))))))OR(((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'7543');
SELECT SUM(count) FROM (SELECT ALL ((x'7543') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'7543');
SELECT SUM(count) FROM (SELECT ALL ((x'7543') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'7543');
SELECT ALL * FROM rt0, vt0 INNER JOIN vt1 ON ((((((vt1.c0) IS FALSE))OR(((vt1.c0)-(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))) WHERE (CAST(((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((((vt1.c0) IS FALSE))OR(((vt1.c0)-(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))));
SELECT ALL * FROM rt0, vt0 INNER JOIN vt1 ON ((((((vt1.c0) IS FALSE))OR(((vt1.c0)-(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))) WHERE (CAST(((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((((vt1.c0) IS FALSE))OR(((vt1.c0)-(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))));
SELECT ALL * FROM rt0, vt0 INNER JOIN vt1 ON ((((((vt1.c0) IS FALSE))OR(((vt1.c0)-(rt0.c2)))))OR(CAST(rt0.c1 AS TEXT))) WHERE (CAST(((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) NOTNULL)) ORDER BY (((LOWER(vt1.c0)))<((((vt1.c0)<=(vt1.c0)))))  NULLS LAST, (((((((((vt1.c0 IN ()))AND(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) NOT NULL)))  NULLS LAST, ((((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((LOWER(vt1.c0)))<((((vt1.c0)<=(vt1.c0)))))  NULLS LAST, (((((((((vt1.c0 IN ()))AND(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) NOT NULL)))  NULLS LAST, ((((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) NOTNULL)) ORDER BY (((LOWER(vt1.c0)))<((((vt1.c0)<=(vt1.c0)))))  NULLS LAST, (((((((((vt1.c0 IN ()))AND(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) NOT NULL)))  NULLS LAST, ((((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((LOWER(vt1.c0)))<((((vt1.c0)<=(vt1.c0)))))  NULLS LAST, (((((((((vt1.c0 IN ()))AND(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) NOT NULL)))  NULLS LAST, ((((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) NOTNULL)) ORDER BY (((LOWER(vt1.c0)))<((((vt1.c0)<=(vt1.c0)))))  NULLS LAST, (((((((((vt1.c0 IN ()))AND(vt1.c0 COLLATE NOCASE)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) NOT NULL)))  NULLS LAST, ((((((vt1.c0)%(vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0, vt1 WHERE ((((- (vt1.c0)))IS NOT(((rt0.c1) NOT NULL)))) ORDER BY 0.9238118951130289  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))IS NOT(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY 0.9238118951130289  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE ((((- (vt1.c0)))IS NOT(((rt0.c1) NOT NULL)))) ORDER BY 0.9238118951130289  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))IS NOT(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY 0.9238118951130289  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE ((((- (vt1.c0)))IS NOT(((rt0.c1) NOT NULL)))) ORDER BY 0.9238118951130289  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt1 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM WHERE (((vt1.c0)<<(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY NULLIF(rt0.c1, vt1.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<<(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM ORDER BY NULLIF(rt0.c1, vt1.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM WHERE (((vt1.c0)<<(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY NULLIF(rt0.c1, vt1.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<<(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM ORDER BY NULLIF(rt0.c1, vt1.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM WHERE (((vt1.c0)<<(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY NULLIF(rt0.c1, vt1.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(CAST(rt0.c1 AS BLOB)))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(CAST(rt0.c1 AS BLOB)))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))LIKE(CAST(rt0.c1 AS BLOB)))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (INSTR(CAST(rt0.c1 AS BLOB), ((vt1.c0)/(vt1.c0)))) ORDER BY json_object((NOT (vt1.c0)), COALESCE(DISTINCT vt0.c0, rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt0.c1 AS BLOB), ((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY json_object((NOT (vt1.c0)), COALESCE(DISTINCT vt0.c0, rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (INSTR(CAST(rt0.c1 AS BLOB), ((vt1.c0)/(vt1.c0)))) ORDER BY json_object((NOT (vt1.c0)), COALESCE(DISTINCT vt0.c0, rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt0.c1 AS BLOB), ((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY json_object((NOT (vt1.c0)), COALESCE(DISTINCT vt0.c0, rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (INSTR(CAST(rt0.c1 AS BLOB), ((vt1.c0)/(vt1.c0)))) ORDER BY json_object((NOT (vt1.c0)), COALESCE(DISTINCT vt0.c0, rt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (((((rt0.c0)) BETWEEN (('0.40783663174610996')) AND ((rt0.c0))))||(((vt0.c0)/(rt0.c1)))) WHERE (CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (((((rt0.c0)) BETWEEN (('0.40783663174610996')) AND ((rt0.c0))))||(((vt0.c0)/(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (((((rt0.c0)) BETWEEN (('0.40783663174610996')) AND ((rt0.c0))))||(((vt0.c0)/(rt0.c1)))) WHERE (CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (((((rt0.c0)) BETWEEN (('0.40783663174610996')) AND ((rt0.c0))))||(((vt0.c0)/(rt0.c1)))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(CASE rt0.c2  WHEN '78D12' THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))OR((rt0.c1 IN ()))))OR(highlight(rt0.c1, rt0.c0, rt0.c1, vt0.c0))))OR((- (rt0.c2)))))OR(((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN '78D12' THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))OR((rt0.c1 IN ()))))OR(highlight(rt0.c1, rt0.c0, rt0.c1, vt0.c0))))OR((- (rt0.c2)))))OR(((rt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(CASE rt0.c2  WHEN '78D12' THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))OR((rt0.c1 IN ()))))OR(highlight(rt0.c1, rt0.c0, rt0.c1, vt0.c0))))OR((- (rt0.c2)))))OR(((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN '78D12' THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))OR((rt0.c1 IN ()))))OR(highlight(rt0.c1, rt0.c0, rt0.c1, vt0.c0))))OR((- (rt0.c2)))))OR(((rt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(CASE rt0.c2  WHEN '78D12' THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER)) ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))OR((rt0.c1 IN ()))))OR(highlight(rt0.c1, rt0.c0, rt0.c1, vt0.c0))))OR((- (rt0.c2)))))OR(((rt0.c1) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((x'')OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) IN ())) ORDER BY LIKE(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), (((rt0.c0))>=((rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((x'')OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY LIKE(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), (((rt0.c0))>=((rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((x'')OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) IN ())) ORDER BY LIKE(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), (((rt0.c0))>=((rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((x'')OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY LIKE(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), (((rt0.c0))>=((rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((x'')OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)) IN ())) ORDER BY LIKE(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), (((rt0.c0))>=((rt0.c2))))  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY LTRIM(x'', x'');
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY LTRIM(x'', x''));
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY LTRIM(x'', x'');
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY LTRIM(x'', x''));
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY LTRIM(x'', x'');
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0))<>((vt1.c0))) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))!=((vt1.c0))) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0))<>((vt1.c0))) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))!=((vt1.c0))) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0))<>((vt1.c0))) IN ((+ (vt0.c0)))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY ((((((vt1.c0)AND(0.6788388678173155)))AND('_Y>e/^e^N')))<((vt0.c0 IN (rt0.c2)))), CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN 'i)|oX/Wꁅ' WHEN 0.1532656246770866 THEN rt0.c1 END THEN CASE WHEN rt0.c1 THEN NULL END ELSE (((rt0.c2, vt0.c0, '0.37315812833855766')) BETWEEN ((vt1.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, vt1.c0))) END, (0Xffffffff8971fbf3 COLLATE RTRIM IN ((rt0.c1 IN (x'', 0.5325785645686886))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((((vt1.c0)AND(0.6788388678173155)))AND('_Y>e/^e^N')))<((vt0.c0 IN (rt0.c2)))), CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN 'i)|oX/Wꁅ' WHEN 0.1532656246770866 THEN rt0.c1 END THEN CASE WHEN rt0.c1 THEN NULL END ELSE (((rt0.c2, vt0.c0, '0.37315812833855766')) BETWEEN ((vt1.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, vt1.c0))) END, (0Xffffffff8971fbf3 COLLATE RTRIM IN ((rt0.c1 IN (x'', 0.5325785645686886))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY ((((((vt1.c0)AND(0.6788388678173155)))AND('_Y>e/^e^N')))<((vt0.c0 IN (rt0.c2)))), CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN 'i)|oX/Wꁅ' WHEN 0.1532656246770866 THEN rt0.c1 END THEN CASE WHEN rt0.c1 THEN NULL END ELSE (((rt0.c2, vt0.c0, '0.37315812833855766')) BETWEEN ((vt1.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, vt1.c0))) END, (0Xffffffff8971fbf3 COLLATE RTRIM IN ((rt0.c1 IN (x'', 0.5325785645686886))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((((vt1.c0)AND(0.6788388678173155)))AND('_Y>e/^e^N')))<((vt0.c0 IN (rt0.c2)))), CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN 'i)|oX/Wꁅ' WHEN 0.1532656246770866 THEN rt0.c1 END THEN CASE WHEN rt0.c1 THEN NULL END ELSE (((rt0.c2, vt0.c0, '0.37315812833855766')) BETWEEN ((vt1.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, vt1.c0))) END, (0Xffffffff8971fbf3 COLLATE RTRIM IN ((rt0.c1 IN (x'', 0.5325785645686886))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY ((((((vt1.c0)AND(0.6788388678173155)))AND('_Y>e/^e^N')))<((vt0.c0 IN (rt0.c2)))), CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN 'i)|oX/Wꁅ' WHEN 0.1532656246770866 THEN rt0.c1 END THEN CASE WHEN rt0.c1 THEN NULL END ELSE (((rt0.c2, vt0.c0, '0.37315812833855766')) BETWEEN ((vt1.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, vt1.c0))) END, (0Xffffffff8971fbf3 COLLATE RTRIM IN ((rt0.c1 IN (x'', 0.5325785645686886))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(LIKELIHOOD(vt1.c0, 0.16829910861384445) AS BLOB)) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))OR('H괐<E')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(vt1.c0, 0.16829910861384445) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))OR('H괐<E')) DESC);
SELECT ALL * FROM vt1 WHERE (CAST(LIKELIHOOD(vt1.c0, 0.16829910861384445) AS BLOB)) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))OR('H괐<E')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(vt1.c0, 0.16829910861384445) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))OR('H괐<E')) DESC);
SELECT ALL * FROM vt1 WHERE (CAST(LIKELIHOOD(vt1.c0, 0.16829910861384445) AS BLOB)) ORDER BY ((((CAST(vt1.c0 AS TEXT))OR(vt1.c0 COLLATE NOCASE)))OR('H괐<E')) DESC;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (LIKELIHOOD(DISTINCT vt1.c0, 0.32964824160429773)) AND (((x'')||(vt1.c0)))) WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (LIKELIHOOD(DISTINCT vt1.c0, 0.32964824160429773)) AND (((x'')||(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (LIKELIHOOD(DISTINCT vt1.c0, 0.32964824160429773)) AND (((x'')||(vt1.c0)))) WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (LIKELIHOOD(DISTINCT vt1.c0, 0.32964824160429773)) AND (((x'')||(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 NOT INDEXED INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (LIKELIHOOD(DISTINCT vt1.c0, 0.32964824160429773)) AND (((x'')||(vt1.c0)))) WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT NULL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)OR(x'')) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0)*(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN LIKELY(DISTINCT vt1.c0) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)OR(x'')) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0)*(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN LIKELY(DISTINCT vt1.c0) THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)OR(x'')) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0)*(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN LIKELY(DISTINCT vt1.c0) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)OR(x'')) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0)*(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN LIKELY(DISTINCT vt1.c0) THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)OR(x'')) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0)*(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN LIKELY(DISTINCT vt1.c0) THEN vt0.c0 END);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((('-804696774')GLOB((~ (vt1.c0))))) ORDER BY (((vt1.c0) IS FALSE) IN ()), x'479a' DESC  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((('-804696774')GLOB((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) IS FALSE) IN ()), x'479a' DESC  NULLS FIRST, vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((('-804696774')GLOB((~ (vt1.c0))))) ORDER BY (((vt1.c0) IS FALSE) IN ()), x'479a' DESC  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((('-804696774')GLOB((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) IS FALSE) IN ()), x'479a' DESC  NULLS FIRST, vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((('-804696774')GLOB((~ (vt1.c0))))) ORDER BY (((vt1.c0) IS FALSE) IN ()), x'479a' DESC  NULLS FIRST, vt1.c0;
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(vt1.c0))) NOT BETWEEN (rt0.c0) AND (0.35039099684228237)) WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(vt1.c0))) NOT BETWEEN (rt0.c0) AND (0.35039099684228237)));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(vt1.c0))) NOT BETWEEN (rt0.c0) AND (0.35039099684228237)) WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(vt1.c0))) NOT BETWEEN (rt0.c0) AND (0.35039099684228237)));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c2)==(vt1.c0))) NOT BETWEEN (rt0.c0) AND (0.35039099684228237)) WHERE ((x'' IN ()));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (((((rt0.c0)OR(x'')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c0)OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (((((rt0.c0)OR(x'')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c0)OR(x'')))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (((((rt0.c0)OR(x'')))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0)<<(rt0.c1 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0)<<(rt0.c1 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0)<<(rt0.c1 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0)<<(rt0.c1 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0)<<(rt0.c1 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM WHERE (((+ (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON 0.200328839758246 COLLATE BINARY RIGHT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) WHERE (((0.9308362616120592)/((~ (vt0.c0))))) ORDER BY ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(((rt0.c1)%(rt0.c2)))))OR((+ (rt0.c0)))))AND((- (rt0.c2)))) DESC  NULLS FIRST, CAST(json_array(vt0.c0, vt0.c0) AS TEXT) DESC  NULLS FIRST, rt0.c1  NULLS FIRST, 'Y)v~E*媇'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9308362616120592)/((~ (vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON 0.200328839758246 COLLATE BINARY RIGHT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(((rt0.c1)%(rt0.c2)))))OR((+ (rt0.c0)))))AND((- (rt0.c2)))) DESC  NULLS FIRST, CAST(json_array(vt0.c0, vt0.c0) AS TEXT) DESC  NULLS FIRST, rt0.c1  NULLS FIRST, 'Y)v~E*媇'  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON 0.200328839758246 COLLATE BINARY RIGHT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) WHERE (((0.9308362616120592)/((~ (vt0.c0))))) ORDER BY ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(((rt0.c1)%(rt0.c2)))))OR((+ (rt0.c0)))))AND((- (rt0.c2)))) DESC  NULLS FIRST, CAST(json_array(vt0.c0, vt0.c0) AS TEXT) DESC  NULLS FIRST, rt0.c1  NULLS FIRST, 'Y)v~E*媇'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9308362616120592)/((~ (vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON 0.200328839758246 COLLATE BINARY RIGHT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(((rt0.c1)%(rt0.c2)))))OR((+ (rt0.c0)))))AND((- (rt0.c2)))) DESC  NULLS FIRST, CAST(json_array(vt0.c0, vt0.c0) AS TEXT) DESC  NULLS FIRST, rt0.c1  NULLS FIRST, 'Y)v~E*媇'  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON 0.200328839758246 COLLATE BINARY RIGHT OUTER JOIN vt0 ON (((rt0.c2)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) WHERE (((0.9308362616120592)/((~ (vt0.c0))))) ORDER BY ((((((((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(((rt0.c1)%(rt0.c2)))))OR((+ (rt0.c0)))))AND((- (rt0.c2)))) DESC  NULLS FIRST, CAST(json_array(vt0.c0, vt0.c0) AS TEXT) DESC  NULLS FIRST, rt0.c1  NULLS FIRST, 'Y)v~E*媇'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)%(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL))|(((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))|(((vt0.c0)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)%(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL))|(((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))|(((vt0.c0)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR('')))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0)%(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL))|(((vt0.c0)%(vt0.c0))));
SELECT * FROM rt0, vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((872708088)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS FALSE) THEN ((vt1.c0)<>(rt0.c1)) ELSE ((rt0.c2)!=(rt0.c1)) END) ORDER BY (((vt1.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-2009417820')))) AND (((+ (rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0)) NOT BETWEEN ((872708088)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS FALSE) THEN ((vt1.c0)!=(rt0.c1)) ELSE ((rt0.c2)<>(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-2009417820')))) AND (((+ (rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((872708088)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS FALSE) THEN ((vt1.c0)<>(rt0.c1)) ELSE ((rt0.c2)!=(rt0.c1)) END) ORDER BY (((vt1.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-2009417820')))) AND (((+ (rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0)) NOT BETWEEN ((872708088)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS FALSE) THEN ((vt1.c0)!=(rt0.c1)) ELSE ((rt0.c2)<>(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-2009417820')))) AND (((+ (rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((872708088)) AND ((rt0.c1)))  WHEN ((rt0.c0) IS FALSE) THEN ((vt1.c0)<>(rt0.c1)) ELSE ((rt0.c2)!=(rt0.c1)) END) ORDER BY (((vt1.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-2009417820')))) AND (((+ (rt0.c0)))))  NULLS LAST;
SELECT * FROM vt0, rt0, vt1 WHERE (CAST(((rt0.c2) IS TRUE) AS INTEGER)) ORDER BY ((((load_extension(rt0.c2))AND((vt1.c0 IN ()))))AND((vt0.c0 IN (rt0.c0, 0X5b4aac14))));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((load_extension(rt0.c2))AND((vt1.c0 IN ()))))AND((vt0.c0 IN (rt0.c0, 0X5b4aac14)))));
SELECT * FROM vt0, rt0, vt1 WHERE (CAST(((rt0.c2) IS TRUE) AS INTEGER)) ORDER BY ((((load_extension(rt0.c2))AND((vt1.c0 IN ()))))AND((vt0.c0 IN (rt0.c0, 0X5b4aac14))));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((load_extension(rt0.c2))AND((vt1.c0 IN ()))))AND((vt0.c0 IN (rt0.c0, 0X5b4aac14)))));
SELECT ALL * FROM vt0, vt1 NOT INDEXED, rt0 WHERE (IFNULL(vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((vt1.c0) ISNULL))) ASC, ((x'')+(((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST, (((((rt0.c2)GLOB(vt0.c0))))!=((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((vt1.c0) ISNULL))) ASC, ((x'')+(((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST, (((((rt0.c2)GLOB(vt0.c0))))!=((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL * FROM vt0, vt1 NOT INDEXED, rt0 WHERE (IFNULL(vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((vt1.c0) ISNULL))) ASC, ((x'')+(((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST, (((((rt0.c2)GLOB(vt0.c0))))!=((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((vt1.c0) ISNULL))) ASC, ((x'')+(((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST, (((((rt0.c2)GLOB(vt0.c0))))!=((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))));
SELECT ALL * FROM vt0, vt1 NOT INDEXED, rt0 WHERE (IFNULL(vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((vt1.c0) ISNULL))) ASC, ((x'')+(((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0))))  NULLS LAST, (((((rt0.c2)GLOB(vt0.c0))))!=((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))*(((vt1.c0)>('2489164'))))) ORDER BY ((x'')!=(((vt1.c0)|(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))*(((vt1.c0)>('2489164'))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((x'')!=(((vt1.c0)|(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))*(((vt1.c0)>('2489164'))))) ORDER BY ((x'')!=(((vt1.c0)|(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))*(((vt1.c0)>('2489164'))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((x'')!=(((vt1.c0)|(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))*(((vt1.c0)>('2489164'))))) ORDER BY ((x'')!=(((vt1.c0)|(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((0.9748518190951935)-(vt1.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((0.9748518190951935)-(vt1.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (vt1.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((0.9748518190951935)-(vt1.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((0.9748518190951935)-(vt1.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (vt1.c0))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((0.9748518190951935)-(vt1.c0))) BETWEEN (((rt0.c0) IS FALSE)) AND (vt1.c0)));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (NOT (0.9748518190951935))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (NOT (0.9748518190951935))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (NOT (0.9748518190951935))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (NOT (0.9748518190951935))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (NOT (0.9748518190951935))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('2057026865');
SELECT SUM(count) FROM (SELECT ALL (('2057026865') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('2057026865');
SELECT SUM(count) FROM (SELECT ALL (('2057026865') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ('2057026865');
SELECT ALL COUNT(*) FROM vt1 WHERE (739247398) ORDER BY ((vt1.c0 COLLATE RTRIM)*(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((739247398) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)*(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (739247398) ORDER BY ((vt1.c0 COLLATE RTRIM)*(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((739247398) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)*(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (739247398) ORDER BY ((vt1.c0 COLLATE RTRIM)*(vt1.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (TRIM(DISTINCT vt0.c0, 0.15768774270752317) COLLATE BINARY) ORDER BY 0.4110150935525446;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0, 0.15768774270752317) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.4110150935525446);
SELECT * FROM vt1, vt0 WHERE (TRIM(DISTINCT vt0.c0, 0.15768774270752317) COLLATE BINARY) ORDER BY 0.4110150935525446;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0, 0.15768774270752317) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.4110150935525446);
SELECT * FROM vt1, vt0 WHERE (TRIM(DISTINCT vt0.c0, 0.15768774270752317) COLLATE BINARY) ORDER BY 0.4110150935525446;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(rt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, vt1, rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))>=(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))>=(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))>=(((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM rt0, vt0, vt1 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((rt0.c2 IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((vt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) WHERE (((((rt0.c2) BETWEEN (x'50ff') AND (vt0.c0)))<(CAST(x'' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (x'50ff') AND (vt0.c0)))<(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) WHERE (((((rt0.c2) BETWEEN (x'50ff') AND (vt0.c0)))<(CAST(x'' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (x'50ff') AND (vt0.c0)))<(CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) WHERE (((((rt0.c2) BETWEEN (x'50ff') AND (vt0.c0)))<(CAST(x'' AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ROUND(CAST(vt1.c0 AS REAL), ('f^*Z1\颂*' IN (vt1.c0, vt0.c0)))) ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL)  NULLS FIRST, ((vt1.c0) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((ROUND(CAST(vt1.c0 AS REAL), ('f^*Z1\颂*' IN (vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL)  NULLS FIRST, ((vt1.c0) ISNULL) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ROUND(CAST(vt1.c0 AS REAL), ('f^*Z1\颂*' IN (vt1.c0, vt0.c0)))) ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL)  NULLS FIRST, ((vt1.c0) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((ROUND(CAST(vt1.c0 AS REAL), ('f^*Z1\颂*' IN (vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL)  NULLS FIRST, ((vt1.c0) ISNULL) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ROUND(CAST(vt1.c0 AS REAL), ('f^*Z1\颂*' IN (vt1.c0, vt0.c0)))) ORDER BY CAST(((vt0.c0) IS TRUE) AS REAL)  NULLS FIRST, ((vt1.c0) ISNULL) ASC;
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN 0.020513260613568507 ELSE vt0.c0 END THEN ABS(rt0.c0) ELSE ((rt0.c1)<(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN 0.020513260613568507 ELSE vt0.c0 END THEN ABS(rt0.c0) ELSE ((rt0.c1)<(rt0.c1)) END) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN 0.020513260613568507 ELSE vt0.c0 END THEN ABS(rt0.c0) ELSE ((rt0.c1)<(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN 0.020513260613568507 ELSE vt0.c0 END THEN ABS(rt0.c0) ELSE ((rt0.c1)<(rt0.c1)) END) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN 0.020513260613568507 ELSE vt0.c0 END THEN ABS(rt0.c0) ELSE ((rt0.c1)<(rt0.c1)) END);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('⋸<')) AND (((0.7573206748773008 IN (vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('⋸<')) AND (((0.7573206748773008 IN (vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('⋸<')) AND (((0.7573206748773008 IN (vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('⋸<')) AND (((0.7573206748773008 IN (vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (('⋸<')) AND (((0.7573206748773008 IN (vt1.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))<>((NOT (rt0.c1)))) WHERE (CAST((('778979488') IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('778979488') IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))!=((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))<>((NOT (rt0.c1)))) WHERE (CAST((('778979488') IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('778979488') IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))!=((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))<>((NOT (rt0.c1)))) WHERE (CAST((('778979488') IS FALSE) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF(CAST(rt0.c1 AS NUMERIC)) WHERE (((rt0.c0)IS(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF(CAST(rt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF(CAST(rt0.c1 AS NUMERIC)) WHERE (((rt0.c0)IS(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF(CAST(rt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON TYPEOF(CAST(rt0.c1 AS NUMERIC)) WHERE (((rt0.c0)IS(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c2)AND(x'')))AND(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (LOWER(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c2)AND(x'')))AND(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON rt0.c1);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c2)AND(x'')))AND(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (LOWER(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c2)AND(x'')))AND(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON rt0.c1);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c2)AND(x'')))AND(rt0.c2))) NOT BETWEEN (rt0.c1) AND (((rt0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (LOWER(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND (json_valid(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND (json_valid(vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND (json_valid(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND (json_valid(vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((vt1.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND (json_valid(vt1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1140820892' END) ISNULL)) ORDER BY UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0))>=((0x40460c01, vt0.c0, 0.30893933371664284)))), ((((((-340492114)AND(x'')))OR(vt0.c0)))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), (- (vt0.c0))))<=((LIKELY(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1140820892' END) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0))>=((0x40460c01, vt0.c0, 0.30893933371664284)))), ((((((-340492114)AND(x'')))OR(vt0.c0)))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), (- (vt0.c0))))<=((LIKELY(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN ())))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1140820892' END) ISNULL)) ORDER BY UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0))>=((0x40460c01, vt0.c0, 0.30893933371664284)))), ((((((-340492114)AND(x'')))OR(vt0.c0)))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), (- (vt0.c0))))<=((LIKELY(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1140820892' END) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0))>=((0x40460c01, vt0.c0, 0.30893933371664284)))), ((((((-340492114)AND(x'')))OR(vt0.c0)))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), (- (vt0.c0))))<=((LIKELY(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN ())))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '1140820892' END) ISNULL)) ORDER BY UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0))>=((0x40460c01, vt0.c0, 0.30893933371664284)))), ((((((-340492114)AND(x'')))OR(vt0.c0)))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC, (((CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)), (- (vt0.c0))))<=((LIKELY(DISTINCT vt0.c0), vt0.c0, (vt0.c0 IN ())))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (CHAR(((rt0.c2)=(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, '33383645'));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((rt0.c2)==(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, '33383645')) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CHAR(((rt0.c2)=(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, '33383645'));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((rt0.c2)==(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, '33383645')) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CHAR(((rt0.c2)=(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 END, '33383645'));
SELECT COUNT(*) FROM vt0 WHERE ((NULLIF(DISTINCT vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULLIF(DISTINCT vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULLIF(DISTINCT vt0.c0, vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((('1213284698'))=(((((rt0.c1))>((vt0.c0))))))) ORDER BY ((SQLITE_COMPILEOPTION_GET(0.4568387009464129))AND(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('1213284698'))=(((((rt0.c1))>((vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((SQLITE_COMPILEOPTION_GET(0.4568387009464129))AND(((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((('1213284698'))=(((((rt0.c1))>((vt0.c0))))))) ORDER BY ((SQLITE_COMPILEOPTION_GET(0.4568387009464129))AND(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('1213284698'))=(((((rt0.c1))>((vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((SQLITE_COMPILEOPTION_GET(0.4568387009464129))AND(((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((('1213284698'))=(((((rt0.c1))>((vt0.c0))))))) ORDER BY ((SQLITE_COMPILEOPTION_GET(0.4568387009464129))AND(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)!=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)!=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)!=(vt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((rt0.c1)<=(rt0.c0)))%(((vt0.c0)&('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0)))%(((vt0.c0)&(''))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((rt0.c1)<=(rt0.c0)))%(((vt0.c0)&('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0)))%(((vt0.c0)&(''))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((rt0.c1)<=(rt0.c0)))%(((vt0.c0)&('')))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((486329011)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((486329011)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((486329011)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((486329011)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((486329011)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((rt0.c0) NOTNULL)))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((vt1.c0 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((vt1.c0 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((vt1.c0 IN (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((rt0.c2, 0.9016480650188907, rt0.c2)) BETWEEN (((~ (vt1.c0)), ((rt0.c1)&(rt0.c1)), NULLIF(rt0.c1, rt0.c2))) AND (((rt0.c0 IN (0.9104465899719685)), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)), (((vt0.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, 0.9016480650188907, rt0.c2)) BETWEEN (((~ (vt1.c0)), ((rt0.c1)&(rt0.c1)), NULLIF(rt0.c1, rt0.c2))) AND (((rt0.c0 IN (0.9104465899719685)), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)), (((vt0.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((rt0.c2, 0.9016480650188907, rt0.c2)) BETWEEN (((~ (vt1.c0)), ((rt0.c1)&(rt0.c1)), NULLIF(rt0.c1, rt0.c2))) AND (((rt0.c0 IN (0.9104465899719685)), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)), (((vt0.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, 0.9016480650188907, rt0.c2)) BETWEEN (((~ (vt1.c0)), ((rt0.c1)&(rt0.c1)), NULLIF(rt0.c1, rt0.c2))) AND (((rt0.c0 IN (0.9104465899719685)), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)), (((vt0.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((rt0.c2, 0.9016480650188907, rt0.c2)) BETWEEN (((~ (vt1.c0)), ((rt0.c1)&(rt0.c1)), NULLIF(rt0.c1, rt0.c2))) AND (((rt0.c0 IN (0.9104465899719685)), ((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)), (((vt0.c0))!=((vt1.c0)))))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c0) ISNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c0) ISNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c0) ISNULL) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0)%(rt0.c0)))))AND(((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0)%(rt0.c0)))))AND(((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0)%(rt0.c0)))))AND(((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0)%(rt0.c0)))))AND(((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0)%(rt0.c0)))))AND(((rt0.c2)|(rt0.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((((- (vt0.c0)))AND((vt0.c0 IN ()))))AND('8n][')));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND((vt0.c0 IN ()))))AND('8n]['))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((- (vt0.c0)))AND((vt0.c0 IN ()))))AND('8n][')));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND((vt0.c0 IN ()))))AND('8n]['))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((- (vt0.c0)))AND((vt0.c0 IN ()))))AND('8n][')));
SELECT * FROM rt0 WHERE (0.9143450837827117) ORDER BY ((((CAST(rt0.c2 AS TEXT))AND((((rt0.c0))<=((rt0.c0))))))AND((NULL IN ())))  NULLS LAST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9143450837827117) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c2 AS TEXT))AND((((rt0.c0))<=((rt0.c0))))))AND((NULL IN ())))  NULLS LAST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE ASC);
SELECT * FROM rt0 WHERE (0.9143450837827117) ORDER BY ((((CAST(rt0.c2 AS TEXT))AND((((rt0.c0))<=((rt0.c0))))))AND((NULL IN ())))  NULLS LAST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9143450837827117) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c2 AS TEXT))AND((((rt0.c0))<=((rt0.c0))))))AND((NULL IN ())))  NULLS LAST, ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2) NOTNULL) IN (vt1.c0))) ORDER BY ((((x'')AND((rt0.c1 IN ()))))OR(TRIM(DISTINCT vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOTNULL) IN (vt1.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((x'')AND((rt0.c1 IN ()))))OR(TRIM(DISTINCT vt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2) NOTNULL) IN (vt1.c0))) ORDER BY ((((x'')AND((rt0.c1 IN ()))))OR(TRIM(DISTINCT vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOTNULL) IN (vt1.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((x'')AND((rt0.c1 IN ()))))OR(TRIM(DISTINCT vt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2) NOTNULL) IN (vt1.c0))) ORDER BY ((((x'')AND((rt0.c1 IN ()))))OR(TRIM(DISTINCT vt1.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c2)) COLLATE RTRIM) ORDER BY '' ASC, ((rt0.c2) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY '' ASC, ((rt0.c2) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c2)) COLLATE RTRIM) ORDER BY '' ASC, ((rt0.c2) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY '' ASC, ((rt0.c2) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c2)) COLLATE RTRIM) ORDER BY '' ASC, ((rt0.c2) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) AND ((rt0.c2 COLLATE NOCASE))) DESC, CAST(CASE WHEN vt1.c0 THEN rt0.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) AND ((rt0.c2 COLLATE NOCASE))) DESC, CAST(CASE WHEN vt1.c0 THEN rt0.c2 END AS BLOB));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) AND ((rt0.c2 COLLATE NOCASE))) DESC, CAST(CASE WHEN vt1.c0 THEN rt0.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) AND ((rt0.c2 COLLATE NOCASE))) DESC, CAST(CASE WHEN vt1.c0 THEN rt0.c2 END AS BLOB));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) AND ((rt0.c2 COLLATE NOCASE))) DESC, CAST(CASE WHEN vt1.c0 THEN rt0.c2 END AS BLOB);
SELECT COUNT(*) FROM vt0, rt0 WHERE (RTRIM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c0 THEN x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c0 THEN x'' END)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (RTRIM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c0 THEN x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c0 THEN x'' END)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (RTRIM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c0 THEN x'' END)) DESC;
SELECT COUNT(*) FROM rt0 WHERE (json_array_length((rt0.c0 IN (rt0.c1, rt0.c1)))) ORDER BY rtreenode((~ (rt0.c2)), ((rt0.c2)AND(rt0.c0))), (((rt0.c0)%(rt0.c1)) IN (((rt0.c1)<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c0 IN (rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode((~ (rt0.c2)), ((rt0.c2)AND(rt0.c0))), (((rt0.c0)%(rt0.c1)) IN (((rt0.c1)<=(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (json_array_length((rt0.c0 IN (rt0.c1, rt0.c1)))) ORDER BY rtreenode((~ (rt0.c2)), ((rt0.c2)AND(rt0.c0))), (((rt0.c0)%(rt0.c1)) IN (((rt0.c1)<=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c0 IN (rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rtreenode((~ (rt0.c2)), ((rt0.c2)AND(rt0.c0))), (((rt0.c0)%(rt0.c1)) IN (((rt0.c1)<=(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (json_array_length((rt0.c0 IN (rt0.c1, rt0.c1)))) ORDER BY rtreenode((~ (rt0.c2)), ((rt0.c2)AND(rt0.c0))), (((rt0.c0)%(rt0.c1)) IN (((rt0.c1)<=(rt0.c1))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CAST((((vt1.c0, rt0.c2, vt0.c0))>=((rt0.c2, rt0.c2, vt0.c0))) AS INTEGER)) ORDER BY (((('1447319547')OR(TYPEOF(vt1.c0))))OR(((vt0.c0)<=(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, rt0.c2, vt0.c0))>=((rt0.c2, rt0.c2, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY (((('1447319547')OR(TYPEOF(vt1.c0))))OR(((vt0.c0)<=(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CAST((((vt1.c0, rt0.c2, vt0.c0))>=((rt0.c2, rt0.c2, vt0.c0))) AS INTEGER)) ORDER BY (((('1447319547')OR(TYPEOF(vt1.c0))))OR(((vt0.c0)<=(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, rt0.c2, vt0.c0))>=((rt0.c2, rt0.c2, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY (((('1447319547')OR(TYPEOF(vt1.c0))))OR(((vt0.c0)<=(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CAST((((vt1.c0, rt0.c2, vt0.c0))>=((rt0.c2, rt0.c2, vt0.c0))) AS INTEGER)) ORDER BY (((('1447319547')OR(TYPEOF(vt1.c0))))OR(((vt0.c0)<=(rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (TYPEOF((((rt0.c0))<(('c8'))))) ORDER BY ((vt1.c0 IN ()) IN ()), 0.4568387009464129;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c0))<(('c8'))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((vt1.c0 IN ()) IN ()), 0.4568387009464129);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (TYPEOF((((rt0.c0))<(('c8'))))) ORDER BY ((vt1.c0 IN ()) IN ()), 0.4568387009464129;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c0))<(('c8'))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((vt1.c0 IN ()) IN ()), 0.4568387009464129);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (TYPEOF((((rt0.c0))<(('c8'))))) ORDER BY ((vt1.c0 IN ()) IN ()), 0.4568387009464129;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) WHERE ((((1.7976931348623157E308) BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (IFNULL(vt0.c0, vt0.c0) IN ()) DESC, CAST(((vt1.c0)!=(vt0.c0)) AS BLOB) DESC  NULLS LAST, ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'e4d8'))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1.7976931348623157E308) BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) ORDER BY (IFNULL(vt0.c0, vt0.c0) IN ()) DESC, CAST(((vt1.c0)!=(vt0.c0)) AS BLOB) DESC  NULLS LAST, ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'e4d8'))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) WHERE ((((1.7976931348623157E308) BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (IFNULL(vt0.c0, vt0.c0) IN ()) DESC, CAST(((vt1.c0)!=(vt0.c0)) AS BLOB) DESC  NULLS LAST, ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'e4d8'))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1.7976931348623157E308) BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) ORDER BY (IFNULL(vt0.c0, vt0.c0) IN ()) DESC, CAST(((vt1.c0)!=(vt0.c0)) AS BLOB) DESC  NULLS LAST, ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'e4d8'))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) WHERE ((((1.7976931348623157E308) BETWEEN (vt0.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (IFNULL(vt0.c0, vt0.c0) IN ()) DESC, CAST(((vt1.c0)!=(vt0.c0)) AS BLOB) DESC  NULLS LAST, ((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'e4d8'))) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0)/(vt0.c0))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6636036401940185) ELSE CAST(vt0.c0 AS TEXT) END ASC, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)LIKE(0X298734c2)) ELSE json_array_length(vt0.c0) END DESC  NULLS FIRST, (((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(NULL))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6636036401940185) ELSE CAST(vt0.c0 AS TEXT) END ASC, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)LIKE(0X298734c2)) ELSE json_array_length(vt0.c0) END DESC  NULLS FIRST, (((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(NULL))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) ISNULL)))));
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0)/(vt0.c0))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6636036401940185) ELSE CAST(vt0.c0 AS TEXT) END ASC, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)LIKE(0X298734c2)) ELSE json_array_length(vt0.c0) END DESC  NULLS FIRST, (((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(NULL))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6636036401940185) ELSE CAST(vt0.c0 AS TEXT) END ASC, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)LIKE(0X298734c2)) ELSE json_array_length(vt0.c0) END DESC  NULLS FIRST, (((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(NULL))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) ISNULL)))));
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0))*(((vt0.c0)/(vt0.c0))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.6636036401940185) ELSE CAST(vt0.c0 AS TEXT) END ASC, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)LIKE(0X298734c2)) ELSE json_array_length(vt0.c0) END DESC  NULLS FIRST, (((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(NULL))))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), x'', ((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)/(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)/(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)/(vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c1)%(vt0.c0)))) ORDER BY ((('X>WiGM', vt0.c0, 1559490578, rt0.c0, rt0.c1)) BETWEEN ((LIKELY(rt0.c2), rt0.c0, (((rt0.c0))<>((rt0.c1))), ((rt0.c1)LIKE(rt0.c1)), DATE(rt0.c1, rt0.c0, rt0.c2))) AND (((~ (vt0.c0)), x'' COLLATE NOCASE, ((vt0.c0)IS NOT(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c0)), (((vt0.c0))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c1)%(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((('X>WiGM', vt0.c0, 1559490578, rt0.c0, rt0.c1)) BETWEEN ((LIKELY(rt0.c2), rt0.c0, (((rt0.c0))!=((rt0.c1))), ((rt0.c1)LIKE(rt0.c1)), DATE(rt0.c1, rt0.c0, rt0.c2))) AND (((~ (vt0.c0)), x'' COLLATE NOCASE, ((vt0.c0)IS NOT(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c0)), (((vt0.c0))==((rt0.c2)))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c1)%(vt0.c0)))) ORDER BY ((('X>WiGM', vt0.c0, 1559490578, rt0.c0, rt0.c1)) BETWEEN ((LIKELY(rt0.c2), rt0.c0, (((rt0.c0))<>((rt0.c1))), ((rt0.c1)LIKE(rt0.c1)), DATE(rt0.c1, rt0.c0, rt0.c2))) AND (((~ (vt0.c0)), x'' COLLATE NOCASE, ((vt0.c0)IS NOT(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c0)), (((vt0.c0))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c1)%(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((('X>WiGM', vt0.c0, 1559490578, rt0.c0, rt0.c1)) BETWEEN ((LIKELY(rt0.c2), rt0.c0, (((rt0.c0))!=((rt0.c1))), ((rt0.c1)LIKE(rt0.c1)), DATE(rt0.c1, rt0.c0, rt0.c2))) AND (((~ (vt0.c0)), x'' COLLATE NOCASE, ((vt0.c0)IS NOT(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c0)), (((vt0.c0))==((rt0.c2)))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (LIKELY(DISTINCT ((rt0.c1)%(vt0.c0)))) ORDER BY ((('X>WiGM', vt0.c0, 1559490578, rt0.c0, rt0.c1)) BETWEEN ((LIKELY(rt0.c2), rt0.c0, (((rt0.c0))<>((rt0.c1))), ((rt0.c1)LIKE(rt0.c1)), DATE(rt0.c1, rt0.c0, rt0.c2))) AND (((~ (vt0.c0)), x'' COLLATE NOCASE, ((vt0.c0)IS NOT(rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c0)), (((vt0.c0))==((rt0.c2))))));
SELECT ALL * FROM vt0, rt0 WHERE ('艌');
SELECT SUM(count) FROM (SELECT ALL (('艌') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('艌');
SELECT SUM(count) FROM (SELECT ALL (('艌') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('艌');
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN -1002928581 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN '1682813859' ELSE vt1.c0 END) NOT BETWEEN ((NOT (rt0.c0))) AND ((rt0.c1 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN -1002928581 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN '1682813859' ELSE vt1.c0 END) NOT BETWEEN ((NOT (rt0.c0))) AND ((rt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN -1002928581 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN '1682813859' ELSE vt1.c0 END) NOT BETWEEN ((NOT (rt0.c0))) AND ((rt0.c1 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN -1002928581 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN '1682813859' ELSE vt1.c0 END) NOT BETWEEN ((NOT (rt0.c0))) AND ((rt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN -1002928581 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN '1682813859' ELSE vt1.c0 END) NOT BETWEEN ((NOT (rt0.c0))) AND ((rt0.c1 IN (vt1.c0)))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(LIKELY(DISTINCT rt0.c2) AS REAL)) ORDER BY ('286772025' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c2) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ('286772025' IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(LIKELY(DISTINCT rt0.c2) AS REAL)) ORDER BY ('286772025' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c2) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ('286772025' IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(LIKELY(DISTINCT rt0.c2) AS REAL)) ORDER BY ('286772025' IN ()) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) ORDER BY ((((((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))))OR(((x'4b73') IS FALSE))))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))))OR(((x'4b73') IS FALSE))))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) ORDER BY ((((((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))))OR(((x'4b73') IS FALSE))))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))))OR(((x'4b73') IS FALSE))))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) ORDER BY ((((((((((vt1.c0)>=(vt1.c0)))OR(((vt1.c0)>=(vt1.c0)))))OR(((x'4b73') IS FALSE))))AND((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (x'') ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (x'') ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (x'') ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE (- (rt0.c0))  WHEN TOTAL_CHANGES() THEN rt0.c1 COLLATE RTRIM END) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c0))  WHEN TOTAL_CHANGES() THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE (- (rt0.c0))  WHEN TOTAL_CHANGES() THEN rt0.c1 COLLATE RTRIM END) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c0))  WHEN TOTAL_CHANGES() THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE (- (rt0.c0))  WHEN TOTAL_CHANGES() THEN rt0.c1 COLLATE RTRIM END) ORDER BY rt0.c2 DESC;
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0)IS(vt0.c0)) IN ((((rt0.c1))<>((rt0.c0))), IFNULL(rt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(vt0.c0)) IN ((((rt0.c1))!=((rt0.c0))), IFNULL(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0)IS(vt0.c0)) IN ((((rt0.c1))<>((rt0.c0))), IFNULL(rt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(vt0.c0)) IN ((((rt0.c1))!=((rt0.c0))), IFNULL(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0)IS(vt0.c0)) IN ((((rt0.c1))<>((rt0.c0))), IFNULL(rt0.c2, vt0.c0))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT ALL * FROM rt0, vt1 WHERE (((((((((NULL)OR((((rt0.c2))!=((rt0.c2))))))AND((rt0.c2 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))OR(UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR((((rt0.c2))<>((rt0.c2))))))AND((rt0.c2 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))OR(UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((NULL)OR((((rt0.c2))!=((rt0.c2))))))AND((rt0.c2 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))OR(UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)OR((((rt0.c2))<>((rt0.c2))))))AND((rt0.c2 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))OR(UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((NULL)OR((((rt0.c2))!=((rt0.c2))))))AND((rt0.c2 IN ()))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))OR(UPPER(DISTINCT rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((('^wh*_''O\r') IS FALSE))AND(IFNULL(rt0.c1, vt0.c0))))AND((rt0.c0 IN ())))) ORDER BY ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(rt0.c1 COLLATE RTRIM)))OR(('1983750003' IN (rt0.c0, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('^wh*_''O\r') IS FALSE))AND(IFNULL(rt0.c1, vt0.c0))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(rt0.c1 COLLATE RTRIM)))OR(('1983750003' IN (rt0.c0, rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((('^wh*_''O\r') IS FALSE))AND(IFNULL(rt0.c1, vt0.c0))))AND((rt0.c0 IN ())))) ORDER BY ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(rt0.c1 COLLATE RTRIM)))OR(('1983750003' IN (rt0.c0, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('^wh*_''O\r') IS FALSE))AND(IFNULL(rt0.c1, vt0.c0))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(rt0.c1 COLLATE RTRIM)))OR(('1983750003' IN (rt0.c0, rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((('^wh*_''O\r') IS FALSE))AND(IFNULL(rt0.c1, vt0.c0))))AND((rt0.c0 IN ())))) ORDER BY ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(rt0.c1 COLLATE RTRIM)))OR(('1983750003' IN (rt0.c0, rt0.c2))))  NULLS LAST;
SELECT * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS TEXT))|(CASE WHEN '(j_o␠' THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))|(CASE WHEN '(j_o␠' THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS TEXT))|(CASE WHEN '(j_o␠' THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))|(CASE WHEN '(j_o␠' THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (((CAST(rt0.c1 AS TEXT))|(CASE WHEN '(j_o␠' THEN rt0.c2 ELSE rt0.c1 END)));
SELECT ALL * FROM vt1, vt0 WHERE (((x'' COLLATE RTRIM)LIKE(x'7f0a'))) ORDER BY ((vt1.c0 COLLATE BINARY)>>((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM)LIKE(x'7f0a'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY)>>((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((x'' COLLATE RTRIM)LIKE(x'7f0a'))) ORDER BY ((vt1.c0 COLLATE BINARY)>>((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM)LIKE(x'7f0a'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY)>>((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((x'' COLLATE RTRIM)LIKE(x'7f0a'))) ORDER BY ((vt1.c0 COLLATE BINARY)>>((~ (vt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))||(rt0.c2 COLLATE NOCASE))) ORDER BY (~ ((('%B') NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((('%B') NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))||(rt0.c2 COLLATE NOCASE))) ORDER BY (~ ((('%B') NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))||(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((('%B') NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))||(rt0.c2 COLLATE NOCASE))) ORDER BY (~ ((('%B') NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c1))+((- (rt0.c0))))) ORDER BY (((-1361749053)) NOT BETWEEN ((rt0.c2)) AND ((''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c1))+((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((-1361749053)) NOT BETWEEN ((rt0.c2)) AND ((''))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c1))+((- (rt0.c0))))) ORDER BY (((-1361749053)) NOT BETWEEN ((rt0.c2)) AND ((''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c1))+((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((-1361749053)) NOT BETWEEN ((rt0.c2)) AND ((''))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((LOWER(DISTINCT rt0.c1))+((- (rt0.c0))))) ORDER BY (((-1361749053)) NOT BETWEEN ((rt0.c2)) AND ((''))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (LIKE(((vt1.c0) NOT NULL), ((vt1.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt1.c0) NOT NULL), ((vt1.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKE(((vt1.c0) NOT NULL), ((vt1.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt1.c0) NOT NULL), ((vt1.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKE(((vt1.c0) NOT NULL), ((vt1.c0)||(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.24995033307278713) ORDER BY UPPER((('-1150164246')=(rt0.c1))) DESC, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((0.24995033307278713) IS TRUE)  as count FROM rt0 ORDER BY UPPER((('-1150164246')=(rt0.c1))) DESC, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.24995033307278713) ORDER BY UPPER((('-1150164246')=(rt0.c1))) DESC, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((0.24995033307278713) IS TRUE)  as count FROM rt0 ORDER BY UPPER((('-1150164246')=(rt0.c1))) DESC, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.24995033307278713) ORDER BY UPPER((('-1150164246')=(rt0.c1))) DESC, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(COALESCE(DISTINCT rt0.c2, rt0.c2) AS NUMERIC) WHERE (((NULL)>(vt1.c0 COLLATE BINARY))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CAST(COALESCE(DISTINCT rt0.c2, rt0.c2) AS NUMERIC) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(COALESCE(DISTINCT rt0.c2, rt0.c2) AS NUMERIC) WHERE (((NULL)>(vt1.c0 COLLATE BINARY))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CAST(COALESCE(DISTINCT rt0.c2, rt0.c2) AS NUMERIC) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(COALESCE(DISTINCT rt0.c2, rt0.c2) AS NUMERIC) WHERE (((NULL)>(vt1.c0 COLLATE BINARY))) ORDER BY (rt0.c1 IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((+ (vt1.c0)), vt1.c0, ((vt1.c0) IS TRUE)))>=((((vt1.c0)-(vt1.c0)), ((vt1.c0)==(vt1.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) DESC, ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt1.c0)), vt1.c0, ((vt1.c0) IS TRUE)))>=((((vt1.c0)-(vt1.c0)), ((vt1.c0)==(vt1.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) DESC, ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((+ (vt1.c0)), vt1.c0, ((vt1.c0) IS TRUE)))>=((((vt1.c0)-(vt1.c0)), ((vt1.c0)==(vt1.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) DESC, ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt1.c0)), vt1.c0, ((vt1.c0) IS TRUE)))>=((((vt1.c0)-(vt1.c0)), ((vt1.c0)==(vt1.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) DESC, ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((+ (vt1.c0)), vt1.c0, ((vt1.c0) IS TRUE)))>=((((vt1.c0)-(vt1.c0)), ((vt1.c0)==(vt1.c0)), COALESCE(DISTINCT vt1.c0, vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) DESC, ((vt1.c0 IN ()) IN ((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN 0.36418887453050186 WHEN (NOT (0X2cca6312)) THEN ((0xffffffffc4e30592)IS NOT(vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN RTRIM(vt0.c0) END) ORDER BY ((((1757245215) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((((((((vt0.c0)AND(vt0.c0)))AND('Yw')))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN 0.36418887453050186 WHEN (NOT (0X2cca6312)) THEN ((0xffffffffc4e30592)IS NOT(vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN RTRIM(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((1757245215) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((((((((vt0.c0)AND(vt0.c0)))AND('Yw')))AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN 0.36418887453050186 WHEN (NOT (0X2cca6312)) THEN ((0xffffffffc4e30592)IS NOT(vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN RTRIM(vt0.c0) END) ORDER BY ((((1757245215) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((((((((vt0.c0)AND(vt0.c0)))AND('Yw')))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN 0.36418887453050186 WHEN (NOT (0X2cca6312)) THEN ((0xffffffffc4e30592)IS NOT(vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN RTRIM(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((1757245215) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((((((((vt0.c0)AND(vt0.c0)))AND('Yw')))AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN 0.36418887453050186 WHEN (NOT (0X2cca6312)) THEN ((0xffffffffc4e30592)IS NOT(vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN RTRIM(vt0.c0) END) ORDER BY ((((1757245215) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(((((((((vt0.c0)AND(vt0.c0)))AND('Yw')))AND(vt0.c0)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (highlight((rt0.c1 IN ()), rt0.c2 COLLATE NOCASE, TRIM(vt1.c0, rt0.c1), json_patch(rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((highlight((rt0.c1 IN ()), rt0.c2 COLLATE NOCASE, TRIM(vt1.c0, rt0.c1), json_patch(rt0.c2, rt0.c2))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (highlight((rt0.c1 IN ()), rt0.c2 COLLATE NOCASE, TRIM(vt1.c0, rt0.c1), json_patch(rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((highlight((rt0.c1 IN ()), rt0.c2 COLLATE NOCASE, TRIM(vt1.c0, rt0.c1), json_patch(rt0.c2, rt0.c2))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (highlight((rt0.c1 IN ()), rt0.c2 COLLATE NOCASE, TRIM(vt1.c0, rt0.c1), json_patch(rt0.c2, rt0.c2)));
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c0)LIKE(vt1.c0))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c1)LIKE(2.03898549E8)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c1)LIKE(2.03898549E8)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c0)LIKE(vt1.c0))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c1)LIKE(2.03898549E8)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c1)LIKE(2.03898549E8)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM)OR(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c0)LIKE(vt1.c0))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c1)LIKE(2.03898549E8)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL COLLATE NOCASE)<=(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)<=(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL COLLATE NOCASE)<=(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)<=(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL COLLATE NOCASE)<=(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c0)=(vt0.c0))))) ORDER BY NULL DESC  NULLS LAST, ((((((vt0.c0)>(vt0.c0)))AND((- (vt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))), LIKELY(rt0.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULL DESC  NULLS LAST, ((((((vt0.c0)>(vt0.c0)))AND((- (vt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))), LIKELY(rt0.c0) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c0)=(vt0.c0))))) ORDER BY NULL DESC  NULLS LAST, ((((((vt0.c0)>(vt0.c0)))AND((- (vt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))), LIKELY(rt0.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY NULL DESC  NULLS LAST, ((((((vt0.c0)>(vt0.c0)))AND((- (vt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))), LIKELY(rt0.c0) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (((rt0.c0)=(vt0.c0))))) ORDER BY NULL DESC  NULLS LAST, ((((((vt0.c0)>(vt0.c0)))AND((- (vt0.c0)))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))), LIKELY(rt0.c0) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0)AND(((vt1.c0)GLOB(rt0.c2)))))AND(((0.777179023155725)*(rt0.c2))))) ORDER BY CASE (vt1.c0 IN (rt0.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN x'' WHEN (('') NOT NULL) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS TEXT) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END  NULLS FIRST, (((- (rt0.c0)))|((rt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(((vt1.c0)GLOB(rt0.c2)))))AND(((0.777179023155725)*(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (vt1.c0 IN (rt0.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN x'' WHEN (('') NOT NULL) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS TEXT) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END  NULLS FIRST, (((- (rt0.c0)))|((rt0.c1 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0)AND(((vt1.c0)GLOB(rt0.c2)))))AND(((0.777179023155725)*(rt0.c2))))) ORDER BY CASE (vt1.c0 IN (rt0.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN x'' WHEN (('') NOT NULL) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS TEXT) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END  NULLS FIRST, (((- (rt0.c0)))|((rt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(((vt1.c0)GLOB(rt0.c2)))))AND(((0.777179023155725)*(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (vt1.c0 IN (rt0.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN x'' WHEN (('') NOT NULL) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS TEXT) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END  NULLS FIRST, (((- (rt0.c0)))|((rt0.c1 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0)AND(((vt1.c0)GLOB(rt0.c2)))))AND(((0.777179023155725)*(rt0.c2))))) ORDER BY CASE (vt1.c0 IN (rt0.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN x'' WHEN (('') NOT NULL) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN CAST(rt0.c2 AS TEXT) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END  NULLS FIRST, (((- (rt0.c0)))|((rt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((0x7606981d))<=((vt1.c0)))) BETWEEN (vt1.c0) AND (x''))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((0X7606981d))<=((vt1.c0)))) BETWEEN (vt1.c0) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((0x7606981d))<=((vt1.c0)))) BETWEEN (vt1.c0) AND (x''))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((0X7606981d))<=((vt1.c0)))) BETWEEN (vt1.c0) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((0x7606981d))<=((vt1.c0)))) BETWEEN (vt1.c0) AND (x''))) ORDER BY vt1.c0 ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) WHERE (((((vt1.c0)||(vt1.c0))) ISNULL)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))<((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))<((NOT (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) WHERE (((((vt1.c0)||(vt1.c0))) ISNULL)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))<((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))<((NOT (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (CASE WHEN vt1.c0 THEN vt0.c0 END IN ()) WHERE (((((vt1.c0)||(vt1.c0))) ISNULL)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))<((NOT (vt0.c0)))) DESC;
SELECT ALL * FROM rt0 WHERE ('xN3wzW>' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('xN3wzW>' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('xN3wzW>' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('xN3wzW>' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('xN3wzW>' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN ('-1756021239') AND (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.954864768074086))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN ('-1756021239') AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.954864768074086))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN ('-1756021239') AND (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.954864768074086))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN ('-1756021239') AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.954864768074086))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN ('-1756021239') AND (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)OR(LIKELIHOOD(vt1.c0, 0.954864768074086))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN ((((vt1.c0, vt1.c0, 0x52aad598))<>((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN ((((vt1.c0, vt1.c0, 0X52aad598))!=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN ((((vt1.c0, vt1.c0, 0x52aad598))<>((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN ((((vt1.c0, vt1.c0, 0X52aad598))!=((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN ((((vt1.c0, vt1.c0, 0x52aad598))<>((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ORDER BY 897022803 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY 897022803 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ORDER BY 897022803 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY 897022803 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE 0x2045af32  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE 0x2045af32  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE 0x2045af32  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE 0x2045af32  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE 0x2045af32  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) NOTNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))IS NOT(((rt0.c2)||(vt1.c0)))) CROSS JOIN vt0 ON CAST(ABS(DISTINCT rt0.c2) AS BLOB) WHERE (((NULL) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))IS NOT(((rt0.c2)||(vt1.c0)))) CROSS JOIN vt0 ON CAST(ABS(DISTINCT rt0.c2) AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))IS NOT(((rt0.c2)||(vt1.c0)))) CROSS JOIN vt0 ON CAST(ABS(DISTINCT rt0.c2) AS BLOB) WHERE (((NULL) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (vt0.c0) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))IS NOT(((rt0.c2)||(vt1.c0)))) CROSS JOIN vt0 ON CAST(ABS(DISTINCT rt0.c2) AS BLOB));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((rt0.c0)GLOB(vt0.c0))) NOTNULL)) ORDER BY (((rt0.c0 IN ()))/(((vt0.c0)<>('0.02436226180117984'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c0 IN ()))/(((vt0.c0)!=('0.02436226180117984')))));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((rt0.c0)GLOB(vt0.c0))) NOTNULL)) ORDER BY (((rt0.c0 IN ()))/(((vt0.c0)<>('0.02436226180117984'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((rt0.c0 IN ()))/(((vt0.c0)!=('0.02436226180117984')))));
SELECT COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((((rt0.c0)GLOB(vt0.c0))) NOTNULL)) ORDER BY (((rt0.c0 IN ()))/(((vt0.c0)<>('0.02436226180117984'))));
SELECT COUNT(*) FROM rt0 WHERE (SUBSTR((- (rt0.c2)), CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (rt0.c2)), CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (SUBSTR((- (rt0.c2)), CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (rt0.c2)), CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (SUBSTR((- (rt0.c2)), CAST(rt0.c0 AS BLOB)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) WHERE ((CAST(rt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) WHERE ((CAST(rt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) WHERE ((CAST(rt0.c0 AS BLOB) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-0.0')))<((((x'2bfb', vt0.c0, vt0.c0)) NOT BETWEEN ((x'331c', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((x'')*(0.28457572456318214))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-0.0')))<((((x'2bfb', vt0.c0, vt0.c0)) NOT BETWEEN ((x'331c', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((x'')*(0.28457572456318214))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-0.0')))<((((x'2bfb', vt0.c0, vt0.c0)) NOT BETWEEN ((x'331c', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((x'')*(0.28457572456318214))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND ('-0.0')))<((((x'2bfb', vt0.c0, vt0.c0)) NOT BETWEEN ((x'331c', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((x'')*(0.28457572456318214))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('-0.0')))<((((x'2bfb', vt0.c0, vt0.c0)) NOT BETWEEN ((x'331c', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((x'')*(0.28457572456318214))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((('872708088')<>((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('872708088')!=((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('872708088')<>((((vt0.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('872708088')!=((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('872708088')<>((((vt0.c0))==((vt0.c0))))));
SELECT * FROM rt0 WHERE ('G~ra봱{	J');
SELECT SUM(count) FROM (SELECT (('G~ra봱{	J') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('G~ra봱{	J');
SELECT SUM(count) FROM (SELECT (('G~ra봱{	J') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('G~ra봱{	J');
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN (('1765275341')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (('1765275341')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN (('1765275341')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (('1765275341')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN (('1765275341')) AND ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) IS TRUE));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((x'e4b7') NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (x'')) WHERE ((((((1245347447)OR(vt1.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((1245347447)OR(vt1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((x'e4b7') NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (x'')));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((x'e4b7') NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (x'')) WHERE ((((((1245347447)OR(vt1.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((1245347447)OR(vt1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((x'e4b7') NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (x'')));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((x'e4b7') NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (x'')) WHERE ((((((1245347447)OR(vt1.c0)))OR(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)AND(PRINTF(0Xffffffffbdc39882, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)AND(PRINTF(0Xffffffffbdc39882, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)AND(PRINTF(0Xffffffffbdc39882, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)AND(PRINTF(0Xffffffffbdc39882, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)AND(PRINTF(0Xffffffffbdc39882, vt0.c0, vt0.c0))));
SELECT ALL * FROM rt0 NOT INDEXED, vt1, vt0 WHERE ((CAST(rt0.c2 AS REAL) IN (TRIM(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN (TRIM(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt1, vt0 WHERE ((CAST(rt0.c2 AS REAL) IN (TRIM(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN (TRIM(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt1, vt0 WHERE ((CAST(rt0.c2 AS REAL) IN (TRIM(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)AND(vt0.c0)) WHEN x'' THEN NULL COLLATE BINARY WHEN ((vt0.c0)<(vt1.c0)) THEN json_array_length(vt0.c0, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)AND(vt0.c0)) WHEN x'' THEN NULL COLLATE BINARY WHEN ((vt0.c0)<(vt1.c0)) THEN json_array_length(vt0.c0, vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)AND(vt0.c0)) WHEN x'' THEN NULL COLLATE BINARY WHEN ((vt0.c0)<(vt1.c0)) THEN json_array_length(vt0.c0, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)AND(vt0.c0)) WHEN x'' THEN NULL COLLATE BINARY WHEN ((vt0.c0)<(vt1.c0)) THEN json_array_length(vt0.c0, vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE) ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0)AND(vt0.c0)) WHEN x'' THEN NULL COLLATE BINARY WHEN ((vt0.c0)<(vt1.c0)) THEN json_array_length(vt0.c0, vt0.c0) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>(vt0.c0))) ORDER BY ((((vt0.c0)<>(vt0.c0))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt0.c0)<=(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt0.c0)<=(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>(vt0.c0))) ORDER BY ((((vt0.c0)<>(vt0.c0))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt0.c0)<=(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt0.c0)<=(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>(vt0.c0))) ORDER BY ((((vt0.c0)<>(vt0.c0))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt0.c0)<=(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) NOTNULL) AS REAL)  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON (~ (((vt1.c0)-(rt0.c1)))) WHERE ((((((rt0.c2))==((rt0.c1)))) ISNULL)) ORDER BY (((~ (rt0.c2)))*(vt0.c0 COLLATE RTRIM)) DESC, ((((rt0.c2 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c2)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON (~ (((vt1.c0)-(rt0.c1)))) ORDER BY (((~ (rt0.c2)))*(vt0.c0 COLLATE RTRIM)) DESC, ((((rt0.c2 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c2)>>(rt0.c2)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON (~ (((vt1.c0)-(rt0.c1)))) WHERE ((((((rt0.c2))==((rt0.c1)))) ISNULL)) ORDER BY (((~ (rt0.c2)))*(vt0.c0 COLLATE RTRIM)) DESC, ((((rt0.c2 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c2)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON (~ (((vt1.c0)-(rt0.c1)))) ORDER BY (((~ (rt0.c2)))*(vt0.c0 COLLATE RTRIM)) DESC, ((((rt0.c2 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c2)>>(rt0.c2)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (- (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON (~ (((vt1.c0)-(rt0.c1)))) WHERE ((((((rt0.c2))==((rt0.c1)))) ISNULL)) ORDER BY (((~ (rt0.c2)))*(vt0.c0 COLLATE RTRIM)) DESC, ((((rt0.c2 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c2)>>(rt0.c2))));
SELECT * FROM vt0, vt1 WHERE (((TRIM(vt0.c0))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN GLOB(vt1.c0, vt1.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN GLOB(vt1.c0, vt1.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((TRIM(vt0.c0))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN GLOB(vt1.c0, vt1.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN GLOB(vt1.c0, vt1.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((TRIM(vt0.c0))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN GLOB(vt1.c0, vt1.c0) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0, vt1.c0, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), (((rt0.c0))==((rt0.c1))), (- (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0, rt0.c1)), rt0.c1 COLLATE BINARY, '-859856827')))) ORDER BY (~ ((NOT (rt0.c1)))) ASC, ((((rt0.c1)LIKE(rt0.c2)))-(CAST(vt1.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt1.c0, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), (((rt0.c0))==((rt0.c1))), (- (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0, rt0.c1)), rt0.c1 COLLATE BINARY, '-859856827')))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ ((NOT (rt0.c1)))) ASC, ((((rt0.c1)LIKE(rt0.c2)))-(CAST(vt1.c0 AS INTEGER))) ASC);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0, vt1.c0, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), (((rt0.c0))==((rt0.c1))), (- (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0, rt0.c1)), rt0.c1 COLLATE BINARY, '-859856827')))) ORDER BY (~ ((NOT (rt0.c1)))) ASC, ((((rt0.c1)LIKE(rt0.c2)))-(CAST(vt1.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt1.c0, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), (((rt0.c0))==((rt0.c1))), (- (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0, rt0.c1)), rt0.c1 COLLATE BINARY, '-859856827')))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ ((NOT (rt0.c1)))) ASC, ((((rt0.c1)LIKE(rt0.c2)))-(CAST(vt1.c0 AS INTEGER))) ASC);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0, vt1.c0, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), (((rt0.c0))==((rt0.c1))), (- (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0, rt0.c1)), rt0.c1 COLLATE BINARY, '-859856827')))) ORDER BY (~ ((NOT (rt0.c1)))) ASC, ((((rt0.c1)LIKE(rt0.c2)))-(CAST(vt1.c0 AS INTEGER))) ASC;
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON (TRIM(vt1.c0) IN ()) WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON (TRIM(vt1.c0) IN ()));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON (TRIM(vt1.c0) IN ()) WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON (TRIM(vt1.c0) IN ()));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN vt1 ON (TRIM(vt1.c0) IN ()) WHERE ((- (rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) ISNULL)) ORDER BY ((x'18558032')IS((- (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((x'18558032')IS((- (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) ISNULL)) ORDER BY ((x'18558032')IS((- (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((x'18558032')IS((- (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) ISNULL)) ORDER BY ((x'18558032')IS((- (rt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (((rt0.c0)>=(rt0.c2)))) INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))) WHERE ((((((((((- (vt0.c0)))OR(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0x644db3a3))))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY (rt0.c1 COLLATE RTRIM IN ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))OR(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0X644db3a3))))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (((rt0.c0)>=(rt0.c2)))) INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (((rt0.c0)>=(rt0.c2)))) INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))) WHERE ((((((((((- (vt0.c0)))OR(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0x644db3a3))))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY (rt0.c1 COLLATE RTRIM IN ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))OR(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0X644db3a3))))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (((rt0.c0)>=(rt0.c2)))) INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))) ORDER BY (rt0.c1 COLLATE RTRIM IN ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (((rt0.c0)>=(rt0.c2)))) INNER JOIN rt0 ON (((rt0.c1 IN ())) NOT BETWEEN (rt0.c0) AND (((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)))) WHERE ((((((((((- (vt0.c0)))OR(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((0x644db3a3))))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY (rt0.c1 COLLATE RTRIM IN ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) BETWEEN ('ज') AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN ('ज') AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) BETWEEN ('ज') AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN ('ज') AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0) BETWEEN ('ज') AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN vt0 ON (~ (((rt0.c2)LIKE(rt0.c2)))) WHERE (((TRIM(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON (~ (((rt0.c2)LIKE(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN vt0 ON (~ (((rt0.c2)LIKE(rt0.c2)))) WHERE (((TRIM(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON (~ (((rt0.c2)LIKE(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN vt0 ON (~ (((rt0.c2)LIKE(rt0.c2)))) WHERE (((TRIM(vt0.c0)) NOT NULL));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c2)+((~ (rt0.c2))))  NULLS FIRST, ((TRIM(DISTINCT rt0.c2)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) AND (IFNULL(rt0.c1, rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)+((~ (rt0.c2))))  NULLS FIRST, ((TRIM(DISTINCT rt0.c2)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) AND (IFNULL(rt0.c1, rt0.c2))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c2)+((~ (rt0.c2))))  NULLS FIRST, ((TRIM(DISTINCT rt0.c2)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) AND (IFNULL(rt0.c1, rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)+((~ (rt0.c2))))  NULLS FIRST, ((TRIM(DISTINCT rt0.c2)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) AND (IFNULL(rt0.c1, rt0.c2))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c2)+((~ (rt0.c2))))  NULLS FIRST, ((TRIM(DISTINCT rt0.c2)) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c1 END) AND (IFNULL(rt0.c1, rt0.c2))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE)/(vt0.c0)) WHERE ((((vt0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(0.28341457072210374 AS BLOB), ((vt0.c0)OR(vt0.c0)), (NOT (vt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END, CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END)) AND (((rt0.c1 IN (rt0.c1, x'a6bb')), CAST(rt0.c2 AS REAL), ((((((((NULL)OR(vt0.c0)))AND('137712768')))OR(vt1.c0)))AND(vt1.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), ((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(0.854943893370188)))AND(rt0.c2)))))) ORDER BY (x'f38c' IN ()) DESC, (((('-1756021239')OR(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(0.28341457072210374 AS BLOB), ((vt0.c0)OR(vt0.c0)), (NOT (vt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END, CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END)) AND (((rt0.c1 IN (rt0.c1, x'a6bb')), CAST(rt0.c2 AS REAL), ((((((((NULL)OR(vt0.c0)))AND('137712768')))OR(vt1.c0)))AND(vt1.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), ((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(0.854943893370188)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE)/(vt0.c0)) ORDER BY (x'f38c' IN ()) DESC, (((('-1756021239')OR(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE)/(vt0.c0)) WHERE ((((vt0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(0.28341457072210374 AS BLOB), ((vt0.c0)OR(vt0.c0)), (NOT (vt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END, CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END)) AND (((rt0.c1 IN (rt0.c1, x'a6bb')), CAST(rt0.c2 AS REAL), ((((((((NULL)OR(vt0.c0)))AND('137712768')))OR(vt1.c0)))AND(vt1.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), ((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(0.854943893370188)))AND(rt0.c2)))))) ORDER BY (x'f38c' IN ()) DESC, (((('-1756021239')OR(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(0.28341457072210374 AS BLOB), ((vt0.c0)OR(vt0.c0)), (NOT (vt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END, CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END)) AND (((rt0.c1 IN (rt0.c1, x'a6bb')), CAST(rt0.c2 AS REAL), ((((((((NULL)OR(vt0.c0)))AND('137712768')))OR(vt1.c0)))AND(vt1.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), ((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(0.854943893370188)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE)/(vt0.c0)) ORDER BY (x'f38c' IN ()) DESC, (((('-1756021239')OR(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE)/(vt0.c0)) WHERE ((((vt0.c0, rt0.c2, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((CAST(0.28341457072210374 AS BLOB), ((vt0.c0)OR(vt0.c0)), (NOT (vt0.c0)), CASE WHEN rt0.c1 THEN rt0.c0 END, CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END)) AND (((rt0.c1 IN (rt0.c1, x'a6bb')), CAST(rt0.c2 AS REAL), ((((((((NULL)OR(vt0.c0)))AND('137712768')))OR(vt1.c0)))AND(vt1.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)), ((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))AND(0.854943893370188)))AND(rt0.c2)))))) ORDER BY (x'f38c' IN ()) DESC, (((('-1756021239')OR(vt1.c0)))OR(rt0.c1)) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0))<>((vt1.c0)))))) ORDER BY NULL  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0))!=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0))<>((vt1.c0)))))) ORDER BY NULL  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0))!=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0))<>((vt1.c0)))))) ORDER BY NULL  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND ((NOT (x'')))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND ((NOT (x''))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND ((NOT (x'')))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND ((NOT (x''))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt0.c0))) AND ((NOT (x'')))));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1))=((vt0.c0)))) ISNULL) WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1))==((vt0.c0)))) ISNULL));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1))=((vt0.c0)))) ISNULL) WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1))==((vt0.c0)))) ISNULL));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c1))=((vt0.c0)))) ISNULL) WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON x'' CROSS JOIN vt0 ON json_object((((vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, x'2a2c30db', rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1, 0.7967654445292407, rt0.c0))), 0xfffffffff22123a1) WHERE (CAST(((vt0.c0)>>(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON x'' CROSS JOIN vt0 ON json_object((((vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, x'2a2c30db', rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1, 0.7967654445292407, rt0.c0))), 0xfffffffff22123a1));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON x'' CROSS JOIN vt0 ON json_object((((vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, x'2a2c30db', rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1, 0.7967654445292407, rt0.c0))), 0xfffffffff22123a1) WHERE (CAST(((vt0.c0)>>(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON x'' CROSS JOIN vt0 ON json_object((((vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, x'2a2c30db', rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1, 0.7967654445292407, rt0.c0))), 0xfffffffff22123a1));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON x'' CROSS JOIN vt0 ON json_object((((vt1.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, x'2a2c30db', rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1, 0.7967654445292407, rt0.c0))), 0xfffffffff22123a1) WHERE (CAST(((vt0.c0)>>(rt0.c0)) AS BLOB));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) COLLATE BINARY WHERE (((0Xffffffffa589e2b4) NOT BETWEEN (vt1.c0) AND (((rt0.c1)|(vt0.c0))))) ORDER BY (- (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((0xffffffffa589e2b4) NOT BETWEEN (vt1.c0) AND (((rt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) COLLATE BINARY ORDER BY (- (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) COLLATE BINARY WHERE (((0Xffffffffa589e2b4) NOT BETWEEN (vt1.c0) AND (((rt0.c1)|(vt0.c0))))) ORDER BY (- (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((0xffffffffa589e2b4) NOT BETWEEN (vt1.c0) AND (((rt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) COLLATE BINARY ORDER BY (- (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS TEXT) COLLATE BINARY WHERE (((0Xffffffffa589e2b4) NOT BETWEEN (vt1.c0) AND (((rt0.c1)|(vt0.c0))))) ORDER BY (- (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST('' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST('' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST('' AS REAL));
SELECT * FROM vt0, vt1, rt0 WHERE ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()));
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (((rt0.c2) BETWEEN ('zp') AND (rt0.c1))) AND (-740118903)) ASC, CAST(rt0.c1 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (((rt0.c2) BETWEEN ('zp') AND (rt0.c1))) AND (-740118903)) ASC, CAST(rt0.c1 AS REAL) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (((rt0.c2) BETWEEN ('zp') AND (rt0.c1))) AND (-740118903)) ASC, CAST(rt0.c1 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (((rt0.c2) BETWEEN ('zp') AND (rt0.c1))) AND (-740118903)) ASC, CAST(rt0.c1 AS REAL) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (((rt0.c2) BETWEEN ('zp') AND (rt0.c1))) AND (-740118903)) ASC, CAST(rt0.c1 AS REAL) ASC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS INTEGER) WHERE (((((0.41249598730275927)-(vt0.c0))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, 0.32054100579215594)))) AND (HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.41249598730275927)-(vt0.c0))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, 0.32054100579215594)))) AND (HEX(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS INTEGER) WHERE (((((0.41249598730275927)-(vt0.c0))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, 0.32054100579215594)))) AND (HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.41249598730275927)-(vt0.c0))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, 0.32054100579215594)))) AND (HEX(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST((+ (vt0.c0)) AS INTEGER) WHERE (((((0.41249598730275927)-(vt0.c0))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt1.c0, 0.32054100579215594)))) AND (HEX(vt1.c0))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)*(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)*(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)*(rt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((- (((0.6940143897549761) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((0.6940143897549761) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((- (((0.6940143897549761) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((0.6940143897549761) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((- (((0.6940143897549761) IS TRUE))));
SELECT * FROM vt1 WHERE (ABS((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ABS((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ABS((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c0)))/(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt1.c0)))OR(0.8397025834537709)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))/(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt1.c0)))OR(0.8397025834537709))))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c0)))/(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt1.c0)))OR(0.8397025834537709)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))/(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt1.c0)))OR(0.8397025834537709))))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c0)))/(((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt1.c0)))OR(0.8397025834537709)))));
SELECT ALL * FROM vt1 WHERE (ABS(DISTINCT ((vt1.c0)<>(vt1.c0)))) ORDER BY (((0.5556032626471795)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt1.c0)!=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((0.5556032626471795)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE (ABS(DISTINCT ((vt1.c0)<>(vt1.c0)))) ORDER BY (((0.5556032626471795)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt1.c0)!=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((0.5556032626471795)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE (ABS(DISTINCT ((vt1.c0)<>(vt1.c0)))) ORDER BY (((0.5556032626471795)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))<=((vt1.c0)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))<=((vt1.c0)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))<=((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))<=((vt1.c0)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, '1140820892', vt1.c0))AND(x'4f75')))AND(vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, '1140820892', vt1.c0))AND(x'4f75')))AND(vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, '1140820892', vt1.c0))AND(x'4f75')))AND(vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, '1140820892', vt1.c0))AND(x'4f75')))AND(vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((COALESCE(DISTINCT vt1.c0, vt1.c0, '1140820892', vt1.c0))AND(x'4f75')))AND(vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(NULL)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c0))>((x'e7d5')))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) AND (((('389030323')) NOT BETWEEN ((vt0.c0)) AND ((0.819324286601104))))) CROSS JOIN vt0 ON ((((((((((x'')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0)))%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((((vt0.c0)AND(0.8691781232823083)))OR(vt0.c0)))))) ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c0, 0.7573206748773008)) AND ((rt0.c2, rt0.c1, rt0.c1)))) NOTNULL), ((TIME(rt0.c2, 1294546345, 0.7915347303434962, rt0.c1, rt0.c1)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((rt0.c0)OR(rt0.c0)))AND(0.7093758988196543)))AND(vt1.c0)))OR(0.603984007680445)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((((vt0.c0)AND(0.8691781232823083)))OR(vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c0))>((x'e7d5')))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) AND (((('389030323')) NOT BETWEEN ((vt0.c0)) AND ((0.819324286601104))))) CROSS JOIN vt0 ON ((((((((((x'')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0)))%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c0, 0.7573206748773008)) AND ((rt0.c2, rt0.c1, rt0.c1)))) NOTNULL), ((TIME(rt0.c2, 1294546345, 0.7915347303434962, rt0.c1, rt0.c1)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((rt0.c0)OR(rt0.c0)))AND(0.7093758988196543)))AND(vt1.c0)))OR(0.603984007680445)))) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c0))>((x'e7d5')))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) AND (((('389030323')) NOT BETWEEN ((vt0.c0)) AND ((0.819324286601104))))) CROSS JOIN vt0 ON ((((((((((x'')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0)))%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((((vt0.c0)AND(0.8691781232823083)))OR(vt0.c0)))))) ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c0, 0.7573206748773008)) AND ((rt0.c2, rt0.c1, rt0.c1)))) NOTNULL), ((TIME(rt0.c2, 1294546345, 0.7915347303434962, rt0.c1, rt0.c1)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((rt0.c0)OR(rt0.c0)))AND(0.7093758988196543)))AND(vt1.c0)))OR(0.603984007680445)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) AND ((((((vt0.c0)AND(0.8691781232823083)))OR(vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c0))>((x'e7d5')))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) AND (((('389030323')) NOT BETWEEN ((vt0.c0)) AND ((0.819324286601104))))) CROSS JOIN vt0 ON ((((((((((x'')AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(vt1.c0)))%(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt1.c0, 0.7573206748773008)) AND ((rt0.c2, rt0.c1, rt0.c1)))) NOTNULL), ((TIME(rt0.c2, 1294546345, 0.7915347303434962, rt0.c1, rt0.c1)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((((((((rt0.c0)OR(rt0.c0)))AND(0.7093758988196543)))AND(vt1.c0)))OR(0.603984007680445)))) DESC);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE BINARY))) ORDER BY ((x'd3bd') NOTNULL)  NULLS FIRST, ((((((vt1.c0)IS(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, '-346359083', 545990259, x'65dc')))))  NULLS LAST, CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY ((x'd3bd') NOTNULL)  NULLS FIRST, ((((((vt1.c0)IS(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, '-346359083', 545990259, x'65dc')))))  NULLS LAST, CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE BINARY))) ORDER BY ((x'd3bd') NOTNULL)  NULLS FIRST, ((((((vt1.c0)IS(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, '-346359083', 545990259, x'65dc')))))  NULLS LAST, CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY ((x'd3bd') NOTNULL)  NULLS FIRST, ((((((vt1.c0)IS(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, '-346359083', 545990259, x'65dc')))))  NULLS LAST, CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>(vt1.c0 COLLATE BINARY))) ORDER BY ((x'd3bd') NOTNULL)  NULLS FIRST, ((((((vt1.c0)IS(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, NULL, vt1.c0, vt1.c0, vt1.c0)) AND (('', vt1.c0, '-346359083', 545990259, x'65dc')))))  NULLS LAST, CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (x'') AND (vt0.c0))) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS BLOB))%(((rt0.c1) NOT BETWEEN ('-1442539207') AND (rt0.c0))))  NULLS LAST, (+ (x'a044' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (x'') AND (vt0.c0))) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))%(((rt0.c1) NOT BETWEEN ('-1442539207') AND (rt0.c0))))  NULLS LAST, (+ (x'a044' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (x'') AND (vt0.c0))) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS BLOB))%(((rt0.c1) NOT BETWEEN ('-1442539207') AND (rt0.c0))))  NULLS LAST, (+ (x'a044' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (x'') AND (vt0.c0))) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))%(((rt0.c1) NOT BETWEEN ('-1442539207') AND (rt0.c0))))  NULLS LAST, (+ (x'a044' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1) BETWEEN (x'') AND (vt0.c0))) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS BLOB))%(((rt0.c1) NOT BETWEEN ('-1442539207') AND (rt0.c0))))  NULLS LAST, (+ (x'a044' COLLATE RTRIM));
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CAST(HEX(DISTINCT vt1.c0) AS TEXT)  NULLS FIRST, ((((('' IN (vt0.c0, x'')))AND((vt0.c0 IN ()))))AND(vt1.c0)) ASC, (~ (((vt1.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(HEX(DISTINCT vt1.c0) AS TEXT)  NULLS FIRST, ((((('' IN (vt0.c0, x'')))AND((vt0.c0 IN ()))))AND(vt1.c0)) ASC, (~ (((vt1.c0) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CAST(HEX(DISTINCT vt1.c0) AS TEXT)  NULLS FIRST, ((((('' IN (vt0.c0, x'')))AND((vt0.c0 IN ()))))AND(vt1.c0)) ASC, (~ (((vt1.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(HEX(DISTINCT vt1.c0) AS TEXT)  NULLS FIRST, ((((('' IN (vt0.c0, x'')))AND((vt0.c0 IN ()))))AND(vt1.c0)) ASC, (~ (((vt1.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0)<<(vt1.c0))));
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0)+(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((vt1.c0)+(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0)+(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((vt1.c0)+(vt1.c0)), ((vt1.c0)GLOB(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0)+(vt1.c0)), ((vt1.c0)GLOB(vt1.c0))));
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(TRIM(rt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt0.c0) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(TRIM(rt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(rt0.c0) AS REAL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(TRIM(rt0.c0) AS REAL));
SELECT ALL * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0) IN (vt0.c0))) ORDER BY (+ (((vt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0) IN (vt0.c0))) ORDER BY (+ (((vt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0) IN (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((TRIM(DISTINCT vt0.c0) IN (vt0.c0))) ORDER BY (+ (((vt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE '懧 &a-95' END) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST('33383645' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE '懧 &a-95' END) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST('33383645' AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE '懧 &a-95' END) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST('33383645' AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE '懧 &a-95' END) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST('33383645' AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE '懧 &a-95' END) NOT BETWEEN ((NOT (rt0.c1))) AND (CAST('33383645' AS REAL))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0X4a3a7e77)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY WHERE ((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1)+(vt1.c0)), ((rt0.c0) IS TRUE))) AND (((((rt0.c2, vt1.c0, rt0.c2))>=((rt0.c0, rt0.c1, NULL))), (((rt0.c1, rt0.c1, rt0.c1))>=((vt1.c0, rt0.c1, rt0.c1))), rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1)+(vt1.c0)), ((rt0.c0) IS TRUE))) AND (((((rt0.c2, vt1.c0, rt0.c2))>=((rt0.c0, rt0.c1, NULL))), (((rt0.c1, rt0.c1, rt0.c1))>=((vt1.c0, rt0.c1, rt0.c1))), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0x4a3a7e77)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0X4a3a7e77)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY WHERE ((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1)+(vt1.c0)), ((rt0.c0) IS TRUE))) AND (((((rt0.c2, vt1.c0, rt0.c2))>=((rt0.c0, rt0.c1, NULL))), (((rt0.c1, rt0.c1, rt0.c1))>=((vt1.c0, rt0.c1, rt0.c1))), rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1)+(vt1.c0)), ((rt0.c0) IS TRUE))) AND (((((rt0.c2, vt1.c0, rt0.c2))>=((rt0.c0, rt0.c1, NULL))), (((rt0.c1, rt0.c1, rt0.c1))>=((vt1.c0, rt0.c1, rt0.c1))), rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0x4a3a7e77)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((0X4a3a7e77)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY WHERE ((((vt1.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c1)+(vt1.c0)), ((rt0.c0) IS TRUE))) AND (((((rt0.c2, vt1.c0, rt0.c2))>=((rt0.c0, rt0.c1, NULL))), (((rt0.c1, rt0.c1, rt0.c1))>=((vt1.c0, rt0.c1, rt0.c1))), rt0.c2 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(((rt0.c1)%(rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, vt1.c0, '0.9229582739019324')))) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)%(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 ORDER BY ((rt0.c2) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, vt1.c0, '0.9229582739019324')))) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(((rt0.c1)%(rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, vt1.c0, '0.9229582739019324')))) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)%(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 ORDER BY ((rt0.c2) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, vt1.c0, '0.9229582739019324')))) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(((rt0.c1)%(rt0.c0)) AS INTEGER)) ORDER BY ((rt0.c2) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c2))>=((rt0.c0, vt1.c0, '0.9229582739019324')))) AND ((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON json_extract(IFNULL(DISTINCT vt1.c0, x'f1fe758b'), ((vt1.c0)>=('0.9238118951130289'))) CROSS JOIN vt1 ON CASE rt0.c2  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END END WHERE (CASE WHEN ((NULL)IS(vt0.c0)) THEN CASE rt0.c2  WHEN vt1.c0 THEN '-340492114' ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)IS(vt0.c0)) THEN CASE rt0.c2  WHEN vt1.c0 THEN '-340492114' ELSE vt1.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON json_extract(IFNULL(DISTINCT vt1.c0, x'f1fe758b'), ((vt1.c0)>=('0.9238118951130289'))) CROSS JOIN vt1 ON CASE rt0.c2  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON json_extract(IFNULL(DISTINCT vt1.c0, x'f1fe758b'), ((vt1.c0)>=('0.9238118951130289'))) CROSS JOIN vt1 ON CASE rt0.c2  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END END WHERE (CASE WHEN ((NULL)IS(vt0.c0)) THEN CASE rt0.c2  WHEN vt1.c0 THEN '-340492114' ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)IS(vt0.c0)) THEN CASE rt0.c2  WHEN vt1.c0 THEN '-340492114' ELSE vt1.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON json_extract(IFNULL(DISTINCT vt1.c0, x'f1fe758b'), ((vt1.c0)>=('0.9238118951130289'))) CROSS JOIN vt1 ON CASE rt0.c2  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE (DATE(COALESCE(rt0.c2, rt0.c2), ((rt0.c2)|(rt0.c0)), CASE WHEN rt0.c0 THEN 0.1532656246770866 END)) ORDER BY ((((rt0.c2)LIKE(rt0.c1)))||(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((DATE(COALESCE(rt0.c2, rt0.c2), ((rt0.c2)|(rt0.c0)), CASE WHEN rt0.c0 THEN 0.1532656246770866 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)LIKE(rt0.c1)))||(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (DATE(COALESCE(rt0.c2, rt0.c2), ((rt0.c2)|(rt0.c0)), CASE WHEN rt0.c0 THEN 0.1532656246770866 END)) ORDER BY ((((rt0.c2)LIKE(rt0.c1)))||(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((DATE(COALESCE(rt0.c2, rt0.c2), ((rt0.c2)|(rt0.c0)), CASE WHEN rt0.c0 THEN 0.1532656246770866 END)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)LIKE(rt0.c1)))||(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (DATE(COALESCE(rt0.c2, rt0.c2), ((rt0.c2)|(rt0.c0)), CASE WHEN rt0.c0 THEN 0.1532656246770866 END)) ORDER BY ((((rt0.c2)LIKE(rt0.c1)))||(rt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (ABS(DISTINCT rt0.c0) COLLATE NOCASE) ORDER BY (((rt0.c2 IN ()))<(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c2 IN ()))<(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (ABS(DISTINCT rt0.c0) COLLATE NOCASE) ORDER BY (((rt0.c2 IN ()))<(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c2 IN ()))<(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (ABS(DISTINCT rt0.c0) COLLATE NOCASE) ORDER BY (((rt0.c2 IN ()))<(((rt0.c0) ISNULL)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ ((+ (vt1.c0))))) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS LAST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt1.c0, vt0.c0))) DESC, TRIM(DISTINCT CAST(vt0.c0 AS TEXT))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) ISNULL) ASC  NULLS LAST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt1.c0, vt0.c0))) DESC, TRIM(DISTINCT CAST(vt0.c0 AS TEXT))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ ((+ (vt1.c0))))) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS LAST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt1.c0, vt0.c0))) DESC, TRIM(DISTINCT CAST(vt0.c0 AS TEXT))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) ISNULL) ASC  NULLS LAST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt1.c0, vt0.c0))) DESC, TRIM(DISTINCT CAST(vt0.c0 AS TEXT))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ ((+ (vt1.c0))))) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS LAST, ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt0.c0)))AND(COALESCE(DISTINCT vt1.c0, vt0.c0))) DESC, TRIM(DISTINCT CAST(vt0.c0 AS TEXT))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 AS REAL) COLLATE BINARY WHERE (CASE WHEN ((rt0.c0)&(vt1.c0)) THEN rt0.c0 ELSE TOTAL_CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)&(vt1.c0)) THEN rt0.c0 ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 AS REAL) COLLATE BINARY WHERE (CASE WHEN ((rt0.c0)&(vt1.c0)) THEN rt0.c0 ELSE TOTAL_CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)&(vt1.c0)) THEN rt0.c0 ELSE TOTAL_CHANGES() END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON CAST(rt0.c1 AS REAL) COLLATE BINARY WHERE (CASE WHEN ((rt0.c0)&(vt1.c0)) THEN rt0.c0 ELSE TOTAL_CHANGES() END);
SELECT ALL * FROM vt1 WHERE (0.6537218837511323) ORDER BY vt1.c0 DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)==(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'dbb2')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS FIRST, (+ ((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6537218837511323) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'dbb2')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS FIRST, (+ ((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0.6537218837511323) ORDER BY vt1.c0 DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)==(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'dbb2')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS FIRST, (+ ((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6537218837511323) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)=(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'dbb2')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS FIRST, (+ ((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0.6537218837511323) ORDER BY vt1.c0 DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0)) AND ((((vt1.c0)==(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'dbb2')), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC  NULLS FIRST, (+ ((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (RTRIM(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (RTRIM(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (RTRIM(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY ((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY ((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOTNULL)) ORDER BY ((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((((((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c1)==(rt0.c2)))<=(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, rt0 NOT INDEXED ORDER BY ((((rt0.c1)==(rt0.c2)))<=(rt0.c0)) ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((((((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c1)==(rt0.c2)))<=(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, rt0 NOT INDEXED ORDER BY ((((rt0.c1)==(rt0.c2)))<=(rt0.c0)) ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CAST(((((((((((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c1)==(rt0.c2)))<=(rt0.c0)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN (rt0.c1)))/(((rt0.c1)<=(rt0.c1))))) ORDER BY (((((rt0.c0)=(rt0.c2))))==(((NULL IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))/(((rt0.c1)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0)==(rt0.c2))))=(((NULL IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN (rt0.c1)))/(((rt0.c1)<=(rt0.c1))))) ORDER BY (((((rt0.c0)=(rt0.c2))))==(((NULL IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c1)))/(((rt0.c1)<=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0)==(rt0.c2))))=(((NULL IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0 IN (rt0.c1)))/(((rt0.c1)<=(rt0.c1))))) ORDER BY (((((rt0.c0)=(rt0.c2))))==(((NULL IN ())))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (LIKELY(DISTINCT ((rt0.c2)GLOB(rt0.c0)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.6135957206813831)) NOT NULL), rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt0.c2)GLOB(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.6135957206813831)) NOT NULL), rt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (LIKELY(DISTINCT ((rt0.c2)GLOB(rt0.c0)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.6135957206813831)) NOT NULL), rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt0.c2)GLOB(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.6135957206813831)) NOT NULL), rt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (LIKELY(DISTINCT ((rt0.c2)GLOB(rt0.c0)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.6135957206813831)) NOT NULL), rt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1))) IS TRUE)) ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((((rt0.c1)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((((rt0.c1)|(rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1))) IS TRUE)) ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((((rt0.c1)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((((rt0.c1)|(rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1))) IS TRUE)) ORDER BY rt0.c2  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((((rt0.c1)|(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, 0xffffffffc3557fd1, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, 0Xffffffffc3557fd1, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, 0xffffffffc3557fd1, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, 0Xffffffffc3557fd1, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, 0xffffffffc3557fd1, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c0)=(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) NOTNULL)) ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)AND(COALESCE(DISTINCT rt0.c0, rt0.c1))))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE RTRIM)AND(COALESCE(DISTINCT rt0.c0, rt0.c1))))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)AND(COALESCE(DISTINCT rt0.c0, rt0.c1))))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0 COLLATE RTRIM)AND(COALESCE(DISTINCT rt0.c0, rt0.c1))))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((((((rt0.c0 COLLATE RTRIM)AND(COALESCE(DISTINCT rt0.c0, rt0.c1))))AND(CAST(rt0.c2 AS TEXT))))OR((rt0.c2 IN ()))))OR(CAST(rt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN vt0 ON vt1.c0 WHERE ((~ (((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c2)OR(rt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN vt0 ON vt1.c0);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN vt0 ON vt1.c0 WHERE ((~ (((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c2)OR(rt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN vt0 ON vt1.c0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (rt0.c1 IN (NULL, 0.9212623876593851)) THEN (NULL IN (vt1.c0, rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (rt0.c1 IN (NULL, 0.9212623876593851)) THEN (NULL IN (vt1.c0, rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (rt0.c1 IN (NULL, 0.9212623876593851)) THEN (NULL IN (vt1.c0, rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (rt0.c1 IN (NULL, 0.9212623876593851)) THEN (NULL IN (vt1.c0, rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)<(vt1.c0))  WHEN (rt0.c1 IN (NULL, 0.9212623876593851)) THEN (NULL IN (vt1.c0, rt0.c1)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)>>(vt1.c0)))AND((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)>>(vt1.c0)))AND((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)>>(vt1.c0)))AND((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)>>(vt1.c0)))AND((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)>>(vt1.c0)))AND((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1))>=((rt0.c1))))LIKE(((vt0.c0)<(vt0.c0))))) ORDER BY (+ (((rt0.c2)%(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>=((rt0.c1))))LIKE(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((rt0.c2)%(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1))>=((rt0.c1))))LIKE(((vt0.c0)<(vt0.c0))))) ORDER BY (+ (((rt0.c2)%(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>=((rt0.c1))))LIKE(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((rt0.c2)%(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1))>=((rt0.c1))))LIKE(((vt0.c0)<(vt0.c0))))) ORDER BY (+ (((rt0.c2)%(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>=(rt0.c2))) NOT BETWEEN ('-340492114') AND (((rt0.c0)OR(rt0.c1))))) ORDER BY (((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c2)), LIKELIHOOD(rt0.c2, 0.5122006310037971)))!=((((NULL)IS NOT(rt0.c0)), CAST(rt0.c1 AS TEXT), (rt0.c2 IN (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c2))) NOT BETWEEN ('-340492114') AND (((rt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c2)), LIKELIHOOD(rt0.c2, 0.5122006310037971)))!=((((NULL)IS NOT(rt0.c0)), CAST(rt0.c1 AS TEXT), (rt0.c2 IN (rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>=(rt0.c2))) NOT BETWEEN ('-340492114') AND (((rt0.c0)OR(rt0.c1))))) ORDER BY (((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c2)), LIKELIHOOD(rt0.c2, 0.5122006310037971)))!=((((NULL)IS NOT(rt0.c0)), CAST(rt0.c1 AS TEXT), (rt0.c2 IN (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c2))) NOT BETWEEN ('-340492114') AND (((rt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c2)), LIKELIHOOD(rt0.c2, 0.5122006310037971)))!=((((NULL)IS NOT(rt0.c0)), CAST(rt0.c1 AS TEXT), (rt0.c2 IN (rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>=(rt0.c2))) NOT BETWEEN ('-340492114') AND (((rt0.c0)OR(rt0.c1))))) ORDER BY (((((rt0.c1)IS NOT(rt0.c2)), (+ (rt0.c2)), LIKELIHOOD(rt0.c2, 0.5122006310037971)))!=((((NULL)IS NOT(rt0.c0)), CAST(rt0.c1 AS TEXT), (rt0.c2 IN (rt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((x'') BETWEEN ((- (rt0.c2))) AND (((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((- (rt0.c2))) AND (((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((x'') BETWEEN ((- (rt0.c2))) AND (((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((- (rt0.c2))) AND (((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((x'') BETWEEN ((- (rt0.c2))) AND (((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON (((rt0.c1) BETWEEN (x'') AND (rt0.c1)) IN ()) WHERE (((CAST('398484893' AS INTEGER)) NOT NULL)) ORDER BY CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST, (NOT (((rt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('398484893' AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON (((rt0.c1) BETWEEN (x'') AND (rt0.c1)) IN ()) ORDER BY CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST, (NOT (((rt0.c1) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON (((rt0.c1) BETWEEN (x'') AND (rt0.c1)) IN ()) WHERE (((CAST('398484893' AS INTEGER)) NOT NULL)) ORDER BY CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST, (NOT (((rt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('398484893' AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON (((rt0.c1) BETWEEN (x'') AND (rt0.c1)) IN ()) ORDER BY CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST, (NOT (((rt0.c1) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON (((rt0.c1) BETWEEN (x'') AND (rt0.c1)) IN ()) WHERE (((CAST('398484893' AS INTEGER)) NOT NULL)) ORDER BY CAST(vt1.c0 AS NUMERIC) DESC  NULLS LAST, (NOT (((rt0.c1) NOT NULL))) DESC;
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN x'' END)+(x'1f76ccce')), ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END)OR(0.46398088484503175)))AND((((rt0.c2))!=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN x'' END)+(x'1f76ccce')), ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END)OR(0.46398088484503175)))AND((((rt0.c2))!=((rt0.c1))))));
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN x'' END)+(x'1f76ccce')), ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END)OR(0.46398088484503175)))AND((((rt0.c2))!=((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN x'' END)+(x'1f76ccce')), ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END)OR(0.46398088484503175)))AND((((rt0.c2))!=((rt0.c1))))));
SELECT * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN x'' END)+(x'1f76ccce')), ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END)OR(0.46398088484503175)))AND((((rt0.c2))!=((rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(x'6ced' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'6ced' AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(x'6ced' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'6ced' AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(x'6ced' AS INTEGER));
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN ((rt0.c1) ISNULL) WHEN (- ('')) THEN vt1.c0 COLLATE NOCASE WHEN (NOT (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN (rt0.c2 IN (vt1.c0, vt1.c0)) THEN ((((((((rt0.c0)OR('1531620372')))AND(vt1.c0)))AND(0x65fa61e7)))OR(rt0.c0)) WHEN ((rt0.c2)-(rt0.c0)) THEN ((((vt0.c0)AND(NULL)))OR(rt0.c2)) WHEN NULL THEN ((vt0.c0)>(NULL)) ELSE ((rt0.c1)OR(vt1.c0)) END WHERE (((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))*(((((vt0.c0)AND(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))*(((((vt0.c0)AND(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN ((rt0.c1) ISNULL) WHEN (- ('')) THEN vt1.c0 COLLATE NOCASE WHEN (NOT (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN (rt0.c2 IN (vt1.c0, vt1.c0)) THEN ((((((((rt0.c0)OR('1531620372')))AND(vt1.c0)))AND(0X65fa61e7)))OR(rt0.c0)) WHEN ((rt0.c2)-(rt0.c0)) THEN ((((vt0.c0)AND(NULL)))OR(rt0.c2)) WHEN NULL THEN ((vt0.c0)>(NULL)) ELSE ((rt0.c1)OR(vt1.c0)) END);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN ((rt0.c1) ISNULL) WHEN (- ('')) THEN vt1.c0 COLLATE NOCASE WHEN (NOT (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN (rt0.c2 IN (vt1.c0, vt1.c0)) THEN ((((((((rt0.c0)OR('1531620372')))AND(vt1.c0)))AND(0x65fa61e7)))OR(rt0.c0)) WHEN ((rt0.c2)-(rt0.c0)) THEN ((((vt0.c0)AND(NULL)))OR(rt0.c2)) WHEN NULL THEN ((vt0.c0)>(NULL)) ELSE ((rt0.c1)OR(vt1.c0)) END WHERE (((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))*(((((vt0.c0)AND(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))*(((((vt0.c0)AND(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN ((rt0.c1) ISNULL) WHEN (- ('')) THEN vt1.c0 COLLATE NOCASE WHEN (NOT (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN (rt0.c2 IN (vt1.c0, vt1.c0)) THEN ((((((((rt0.c0)OR('1531620372')))AND(vt1.c0)))AND(0X65fa61e7)))OR(rt0.c0)) WHEN ((rt0.c2)-(rt0.c0)) THEN ((((vt0.c0)AND(NULL)))OR(rt0.c2)) WHEN NULL THEN ((vt0.c0)>(NULL)) ELSE ((rt0.c1)OR(vt1.c0)) END);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN ((rt0.c1) ISNULL) WHEN (- ('')) THEN vt1.c0 COLLATE NOCASE WHEN (NOT (rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN (rt0.c2 IN (vt1.c0, vt1.c0)) THEN ((((((((rt0.c0)OR('1531620372')))AND(vt1.c0)))AND(0x65fa61e7)))OR(rt0.c0)) WHEN ((rt0.c2)-(rt0.c0)) THEN ((((vt0.c0)AND(NULL)))OR(rt0.c2)) WHEN NULL THEN ((vt0.c0)>(NULL)) ELSE ((rt0.c1)OR(vt1.c0)) END WHERE (((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))*(((((vt0.c0)AND(NULL)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((- (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) AND ((rt0.c2 IN ('d?', rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) AND ((rt0.c2 IN ('d?', rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((- (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) AND ((rt0.c2 IN ('d?', rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) AND ((rt0.c2 IN ('d?', rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((- (vt1.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(rt0.c2))) AND ((rt0.c2 IN ('d?', rt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)IS NOT(rt0.c0)))AND(ABS(rt0.c0))))AND(0xffffffff9d7da794))) ORDER BY CAST(0.9356636515492478 AS REAL) COLLATE RTRIM DESC  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c2)OR(rt0.c2))) AND (TRIM(DISTINCT rt0.c0, 1.757245215E9)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS NOT(rt0.c0)))AND(ABS(rt0.c0))))AND(0Xffffffff9d7da794))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(0.9356636515492478 AS REAL) COLLATE RTRIM DESC  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c2)OR(rt0.c2))) AND (TRIM(DISTINCT rt0.c0, 1.757245215E9))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)IS NOT(rt0.c0)))AND(ABS(rt0.c0))))AND(0xffffffff9d7da794))) ORDER BY CAST(0.9356636515492478 AS REAL) COLLATE RTRIM DESC  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c2)OR(rt0.c2))) AND (TRIM(DISTINCT rt0.c0, 1.757245215E9)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)IS NOT(rt0.c0)))AND(ABS(rt0.c0))))AND(0Xffffffff9d7da794))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(0.9356636515492478 AS REAL) COLLATE RTRIM DESC  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c2)OR(rt0.c2))) AND (TRIM(DISTINCT rt0.c0, 1.757245215E9))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)IS NOT(rt0.c0)))AND(ABS(rt0.c0))))AND(0xffffffff9d7da794))) ORDER BY CAST(0.9356636515492478 AS REAL) COLLATE RTRIM DESC  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c2)OR(rt0.c2))) AND (TRIM(DISTINCT rt0.c0, 1.757245215E9)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN vt0.c0 THEN (NOT (vt0.c0)) END);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT * FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST(((vt0.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT (((+ (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST(((vt0.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT (((+ (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST(((vt0.c0) IS FALSE) AS INTEGER) ASC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) IS TRUE);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY '', ((((LIKELY(DISTINCT vt1.c0))OR((+ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))) ASC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1 ORDER BY '', ((((LIKELY(DISTINCT vt1.c0))OR((+ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))) ASC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY '', ((((LIKELY(DISTINCT vt1.c0))OR((+ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))) ASC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1 ORDER BY '', ((((LIKELY(DISTINCT vt1.c0))OR((+ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))) ASC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY '', ((((LIKELY(DISTINCT vt1.c0))OR((+ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))) ASC, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS TEXT));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.1904561666978778) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((0.1904561666978778) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.1904561666978778) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((0.1904561666978778) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.1904561666978778) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) IS TRUE);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(1.682813859E9))) WHERE (((CAST(vt1.c0 AS BLOB))%(LTRIM(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))%(LTRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(1.682813859E9))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(1.682813859E9))) WHERE (((CAST(vt1.c0 AS BLOB))%(LTRIM(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))%(LTRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(1.682813859E9))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON UPPER(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(1.682813859E9))) WHERE (((CAST(vt1.c0 AS BLOB))%(LTRIM(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (load_extension('Qty+熹/N*', vt0.c0)) AND (((vt0.c0)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (load_extension('Qty+熹/N*', vt0.c0)) AND (((vt0.c0)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (load_extension('Qty+熹/N*', vt0.c0)) AND (((vt0.c0)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (load_extension('Qty+熹/N*', vt0.c0)) AND (((vt0.c0)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (load_extension('Qty+熹/N*', vt0.c0)) AND (((vt0.c0)==(vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (UPPER(((vt1.c0)*(vt1.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))IS('mqpk2onUi'))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0)))IS('mqpk2onUi'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))IS('mqpk2onUi'))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0)))IS('mqpk2onUi'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=((~ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))IS('mqpk2onUi'))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>=((~ (vt0.c0))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (NOT (TRIM(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (TRIM(vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (NOT (TRIM(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (TRIM(vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (NOT (TRIM(vt0.c0))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)=(rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)) THEN (rt0.c2 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) END) ORDER BY (((rt0.c1))>(((rt0.c2 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)=(rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)) THEN (rt0.c2 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>(((rt0.c2 IN ())))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)=(rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)) THEN (rt0.c2 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) END) ORDER BY (((rt0.c1))>(((rt0.c2 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)=(rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)) THEN (rt0.c2 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))>(((rt0.c2 IN ())))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)=(rt0.c2))  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)) THEN (rt0.c2 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) END) ORDER BY (((rt0.c1))>(((rt0.c2 IN ())))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, vt0 NOT INDEXED WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (vt1.c0)))-(((((x'')AND(rt0.c2)))OR(vt1.c0))))) ORDER BY (~ (((rt0.c2)|(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt0.c0) AND (vt1.c0)))-(((((x'')AND(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (~ (((rt0.c2)|(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 NOT INDEXED WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (vt1.c0)))-(((((x'')AND(rt0.c2)))OR(vt1.c0))))) ORDER BY (~ (((rt0.c2)|(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt0.c0) AND (vt1.c0)))-(((((x'')AND(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (~ (((rt0.c2)|(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 NOT INDEXED WHERE (((((x'') NOT BETWEEN (rt0.c0) AND (vt1.c0)))-(((((x'')AND(rt0.c2)))OR(vt1.c0))))) ORDER BY (~ (((rt0.c2)|(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN vt1.c0 ELSE (rt0.c2 IN (rt0.c1)) END) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS REAL) THEN vt1.c0 ELSE (rt0.c2 IN (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN vt1.c0 ELSE (rt0.c2 IN (rt0.c1)) END) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS REAL) THEN vt1.c0 ELSE (rt0.c2 IN (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN CAST(rt0.c2 AS REAL) THEN vt1.c0 ELSE (rt0.c2 IN (rt0.c1)) END) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((0X564457fb)OR(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(vt0.c0) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('\rज>N싶R3')))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.7400135051257993 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE NOCASE END) ORDER BY 0.23097028237949946  NULLS LAST, ((NULL)/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), -761336879 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0x564457fb)OR(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(vt0.c0) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('\rज>N싶R3')))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.7400135051257993 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY 0.23097028237949946  NULLS LAST, ((NULL)/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), -761336879 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((0X564457fb)OR(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(vt0.c0) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('\rज>N싶R3')))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.7400135051257993 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE NOCASE END) ORDER BY 0.23097028237949946  NULLS LAST, ((NULL)/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), -761336879 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0x564457fb)OR(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN UNLIKELY(vt0.c0) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('\rज>N싶R3')))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN 0.7400135051257993 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY 0.23097028237949946  NULLS LAST, ((NULL)/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), -761336879 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(((rt0.c1) IS TRUE))))OR(((rt0.c1) ISNULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (x'') AND (NULL))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.2502684237076448 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (x'') AND (NULL))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.2502684237076448 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (x'') AND (NULL))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.2502684237076448 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (x'') AND (NULL))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.2502684237076448 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (x'') AND (NULL))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.2502684237076448 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c2) NOT NULL))) INNER JOIN vt1 ON (((((vt0.c0 IN (rt0.c0)))OR(((rt0.c1)/(rt0.c1)))))AND((- (rt0.c0)))) WHERE (((((x'')AND(NULLIF(vt0.c0, vt1.c0))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(NULLIF(vt0.c0, vt1.c0))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (NOT (((rt0.c2) NOT NULL))) INNER JOIN vt1 ON (((((vt0.c0 IN (rt0.c0)))OR(((rt0.c1)/(rt0.c1)))))AND((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c2) NOT NULL))) INNER JOIN vt1 ON (((((vt0.c0 IN (rt0.c0)))OR(((rt0.c1)/(rt0.c1)))))AND((- (rt0.c0)))) WHERE (((((x'')AND(NULLIF(vt0.c0, vt1.c0))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(NULLIF(vt0.c0, vt1.c0))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (NOT (((rt0.c2) NOT NULL))) INNER JOIN vt1 ON (((((vt0.c0 IN (rt0.c0)))OR(((rt0.c1)/(rt0.c1)))))AND((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c2) NOT NULL))) INNER JOIN vt1 ON (((((vt0.c0 IN (rt0.c0)))OR(((rt0.c1)/(rt0.c1)))))AND((- (rt0.c0)))) WHERE (((((x'')AND(NULLIF(vt0.c0, vt1.c0))))OR(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND((NULL IN ()))))AND(CAST(vt1.c0 AS TEXT))) INNER JOIN vt1 ON rt0.c0 WHERE (LOWER(TRIM(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(TRIM(vt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND((NULL IN ()))))AND(CAST(vt1.c0 AS TEXT))) INNER JOIN vt1 ON rt0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND((NULL IN ()))))AND(CAST(vt1.c0 AS TEXT))) INNER JOIN vt1 ON rt0.c0 WHERE (LOWER(TRIM(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(TRIM(vt1.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND((NULL IN ()))))AND(CAST(vt1.c0 AS TEXT))) INNER JOIN vt1 ON rt0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND((NULL IN ()))))AND(CAST(vt1.c0 AS TEXT))) INNER JOIN vt1 ON rt0.c0 WHERE (LOWER(TRIM(vt1.c0)));
SELECT * FROM vt1 WHERE (CASE (+ (x''))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-346359083' ELSE vt1.c0 END THEN (- (vt1.c0)) END) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (x''))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-346359083' ELSE vt1.c0 END THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC) ASC);
SELECT * FROM vt1 WHERE (CASE (+ (x''))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-346359083' ELSE vt1.c0 END THEN (- (vt1.c0)) END) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (x''))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-346359083' ELSE vt1.c0 END THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC) ASC);
SELECT * FROM vt1 WHERE (CASE (+ (x''))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-346359083' ELSE vt1.c0 END THEN (- (vt1.c0)) END) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS FIRST, CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)<=(rt0.c0)) IN ())) ORDER BY (((+ (rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)<=(rt0.c0)) IN ())) ORDER BY (((+ (rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)<=(rt0.c0)) IN ())) ORDER BY (((+ (rt0.c1))) IS TRUE) ASC;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (rt0.c2 IN (rt0.c2, vt1.c0))  WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END THEN rt0.c1 END) ORDER BY (((~ (rt0.c0)))AND(vt1.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, (- (((vt0.c0)IS NOT(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN (rt0.c2, vt1.c0))  WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END THEN rt0.c1 END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((~ (rt0.c0)))AND(vt1.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, (- (((vt0.c0)IS NOT(vt1.c0)))) ASC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (rt0.c2 IN (rt0.c2, vt1.c0))  WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END THEN rt0.c1 END) ORDER BY (((~ (rt0.c0)))AND(vt1.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, (- (((vt0.c0)IS NOT(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN (rt0.c2, vt1.c0))  WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END THEN rt0.c1 END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((~ (rt0.c0)))AND(vt1.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, (- (((vt0.c0)IS NOT(vt1.c0)))) ASC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (CASE (rt0.c2 IN (rt0.c2, vt1.c0))  WHEN CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END THEN rt0.c1 END) ORDER BY (((~ (rt0.c0)))AND(vt1.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, (- (((vt0.c0)IS NOT(vt1.c0)))) ASC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (((0.557323218902391)<=((rt0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((0.557323218902391)<=((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (((0.557323218902391)<=((rt0.c0 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((0.557323218902391)<=((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c1 WHERE (((0.557323218902391)<=((rt0.c0 IN (rt0.c2)))));
SELECT * FROM vt0, rt0, vt1 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE TYPEOF(rt0.c1)  WHEN (+ (NULL)) THEN CAST(rt0.c0 AS REAL) WHEN LAST_INSERT_ROWID() THEN (vt0.c0 IN (x'')) WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c1 ELSE rt0.c1 END INNER JOIN vt1 ON ((json_type(vt1.c0))>>((rt0.c2 IN ()))) WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, 0X1))<>((rt0.c2, 0.7439924772038609, vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE TYPEOF(rt0.c1)  WHEN (+ (NULL)) THEN CAST(rt0.c0 AS REAL) WHEN LAST_INSERT_ROWID() THEN (vt0.c0 IN (x'')) WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c1 ELSE rt0.c1 END INNER JOIN vt1 ON ((json_type(vt1.c0))>>((rt0.c2 IN ()))) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, 0X1))!=((rt0.c2, 0.7439924772038609, vt0.c0)))))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE TYPEOF(rt0.c1)  WHEN (+ (NULL)) THEN CAST(rt0.c0 AS REAL) WHEN LAST_INSERT_ROWID() THEN (vt0.c0 IN (x'')) WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c1 ELSE rt0.c1 END INNER JOIN vt1 ON ((json_type(vt1.c0))>>((rt0.c2 IN ()))) WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, 0X1))<>((rt0.c2, 0.7439924772038609, vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE TYPEOF(rt0.c1)  WHEN (+ (NULL)) THEN CAST(rt0.c0 AS REAL) WHEN LAST_INSERT_ROWID() THEN (vt0.c0 IN (x'')) WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c1 ELSE rt0.c1 END INNER JOIN vt1 ON ((json_type(vt1.c0))>>((rt0.c2 IN ()))) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, 0X1))!=((rt0.c2, 0.7439924772038609, vt0.c0)))))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE TYPEOF(rt0.c1)  WHEN (+ (NULL)) THEN CAST(rt0.c0 AS REAL) WHEN LAST_INSERT_ROWID() THEN (vt0.c0 IN (x'')) WHEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c1 ELSE rt0.c1 END INNER JOIN vt1 ON ((json_type(vt1.c0))>>((rt0.c2 IN ()))) WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, 0X1))<>((rt0.c2, 0.7439924772038609, vt0.c0)))))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS TEXT)) ORDER BY ((((vt0.c0)IS(rt0.c1)))LIKE(vt0.c0)) ASC  NULLS FIRST, json_extract(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((((1.497742327E9)AND(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0)IS(rt0.c1)))LIKE(vt0.c0)) ASC  NULLS FIRST, json_extract(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((((1.497742327E9)AND(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS TEXT)) ORDER BY ((((vt0.c0)IS(rt0.c1)))LIKE(vt0.c0)) ASC  NULLS FIRST, json_extract(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((((1.497742327E9)AND(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0)IS(rt0.c1)))LIKE(vt0.c0)) ASC  NULLS FIRST, json_extract(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((((1.497742327E9)AND(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS TEXT)) ORDER BY ((((vt0.c0)IS(rt0.c1)))LIKE(vt0.c0)) ASC  NULLS FIRST, json_extract(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((((1.497742327E9)AND(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) THEN (~ (vt0.c0)) END);
SELECT ALL * FROM vt1, vt0 NOT INDEXED, rt0 WHERE (((rt0.c0)/(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)/(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (+ ((NOT (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 NOT INDEXED, rt0 WHERE (((rt0.c0)/(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)/(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (+ ((NOT (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 NOT INDEXED, rt0 WHERE (((rt0.c0)/(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ ((NOT (vt0.c0))));
SELECT * FROM vt1, rt0 WHERE (NULLIF(DISTINCT CAST(rt0.c1 AS BLOB), ((rt0.c0) ISNULL))) ORDER BY CAST(LTRIM(rt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(rt0.c1 AS BLOB), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(LTRIM(rt0.c0) AS INTEGER) DESC);
SELECT * FROM vt1, rt0 WHERE (NULLIF(DISTINCT CAST(rt0.c1 AS BLOB), ((rt0.c0) ISNULL))) ORDER BY CAST(LTRIM(rt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(rt0.c1 AS BLOB), ((rt0.c0) ISNULL))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(LTRIM(rt0.c0) AS INTEGER) DESC);
SELECT * FROM vt1, rt0 WHERE (NULLIF(DISTINCT CAST(rt0.c1 AS BLOB), ((rt0.c0) ISNULL))) ORDER BY CAST(LTRIM(rt0.c0) AS INTEGER) DESC;
SELECT * FROM rt0 CROSS JOIN vt1 ON (((((((rt0.c1)AND(NULL)))OR(rt0.c1))))<=((vt1.c0))) INNER JOIN vt0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c0 END WHERE (((rt0.c1)GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt1.c0 COLLATE NOCASE, SUBSTR(1531620372, rt0.c0), ((rt0.c0)IS NOT(vt0.c0))))<>((rt0.c2 COLLATE RTRIM, rt0.c0, ((((((((((((vt1.c0)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((((((rt0.c1)AND(NULL)))OR(rt0.c1))))<=((vt1.c0))) INNER JOIN vt0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c0 END ORDER BY (((vt1.c0 COLLATE NOCASE, SUBSTR(1531620372, rt0.c0), ((rt0.c0)IS NOT(vt0.c0))))!=((rt0.c2 COLLATE RTRIM, rt0.c0, ((((((((((((vt1.c0)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt1 ON (((((((rt0.c1)AND(NULL)))OR(rt0.c1))))<=((vt1.c0))) INNER JOIN vt0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c0 END WHERE (((rt0.c1)GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt1.c0 COLLATE NOCASE, SUBSTR(1531620372, rt0.c0), ((rt0.c0)IS NOT(vt0.c0))))<>((rt0.c2 COLLATE RTRIM, rt0.c0, ((((((((((((vt1.c0)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((((((rt0.c1)AND(NULL)))OR(rt0.c1))))<=((vt1.c0))) INNER JOIN vt0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c0 END ORDER BY (((vt1.c0 COLLATE NOCASE, SUBSTR(1531620372, rt0.c0), ((rt0.c0)IS NOT(vt0.c0))))!=((rt0.c2 COLLATE RTRIM, rt0.c0, ((((((((((((vt1.c0)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt1 ON (((((((rt0.c1)AND(NULL)))OR(rt0.c1))))<=((vt1.c0))) INNER JOIN vt0 ON CASE CAST(vt1.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c0 END WHERE (((rt0.c1)GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt1.c0 COLLATE NOCASE, SUBSTR(1531620372, rt0.c0), ((rt0.c0)IS NOT(vt0.c0))))<>((rt0.c2 COLLATE RTRIM, rt0.c0, ((((((((((((vt1.c0)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))<>((((rt0.c1)|(NULL)))))) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))<>((((rt0.c1)|(NULL)))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2))) ISNULL));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))<>((((rt0.c1)|(NULL)))))) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))<>((((rt0.c1)|(NULL)))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2))) ISNULL));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))<>((((rt0.c1)|(NULL)))))) ORDER BY (((rt0.c0 IN (rt0.c1, rt0.c2))) ISNULL);
SELECT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)*(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ((('') NOT NULL)) ORDER BY (CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<<(vt0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL))==(vt0.c0)) ASC  NULLS LAST, (LIKELIHOOD(vt0.c0, 0.5830685855752265) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<<(vt0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL))=(vt0.c0)) ASC  NULLS LAST, (LIKELIHOOD(vt0.c0, 0.5830685855752265) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((('') NOT NULL)) ORDER BY (CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<<(vt0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL))==(vt0.c0)) ASC  NULLS LAST, (LIKELIHOOD(vt0.c0, 0.5830685855752265) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<<(vt0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL))=(vt0.c0)) ASC  NULLS LAST, (LIKELIHOOD(vt0.c0, 0.5830685855752265) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((('') NOT NULL)) ORDER BY (CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<<(vt0.c0))))  NULLS LAST, ((CAST(vt0.c0 AS REAL))==(vt0.c0)) ASC  NULLS LAST, (LIKELIHOOD(vt0.c0, 0.5830685855752265) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) WHERE (CASE WHEN ((vt0.c0)>=(vt1.c0)) THEN 0xc273eb5 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 WHEN NULL THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=(vt1.c0)) THEN 0xc273eb5 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 WHEN NULL THEN vt1.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) WHERE (CASE WHEN ((vt0.c0)>=(vt1.c0)) THEN 0xc273eb5 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 WHEN NULL THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=(vt1.c0)) THEN 0xc273eb5 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 WHEN NULL THEN vt1.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) WHERE (CASE WHEN ((vt0.c0)>=(vt1.c0)) THEN 0xc273eb5 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS BLOB) WHEN (((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))) THEN CAST(vt1.c0 AS TEXT) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 WHEN NULL THEN vt1.c0 END);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND ('Kl1yhU')))+(((vt1.c0)-(0.7400135051257993))))) ORDER BY (NOT ((~ (vt0.c0)))) ASC, ((((vt1.c0))<((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND ('Kl1yhU')))+(((vt1.c0)-(0.7400135051257993))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) ORDER BY (NOT ((~ (vt0.c0)))) ASC, ((((vt1.c0))<((vt0.c0))) IN ()) ASC);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND ('Kl1yhU')))+(((vt1.c0)-(0.7400135051257993))))) ORDER BY (NOT ((~ (vt0.c0)))) ASC, ((((vt1.c0))<((vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND ('Kl1yhU')))+(((vt1.c0)-(0.7400135051257993))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) ORDER BY (NOT ((~ (vt0.c0)))) ASC, ((((vt1.c0))<((vt0.c0))) IN ()) ASC);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN ()) WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND ('Kl1yhU')))+(((vt1.c0)-(0.7400135051257993))))) ORDER BY (NOT ((~ (vt0.c0)))) ASC, ((((vt1.c0))<((vt0.c0))) IN ()) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(SUBSTR(rt0.c1, rt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(SUBSTR(rt0.c1, rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(SUBSTR(rt0.c1, rt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(SUBSTR(rt0.c1, rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(SUBSTR(rt0.c1, rt0.c1) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((('h')/(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (TYPEOF(rt0.c2)) AND (((rt0.c0)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((('h')/(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (TYPEOF(rt0.c2)) AND (((rt0.c0)*(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((('h')/(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (TYPEOF(rt0.c2)) AND (((rt0.c0)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((('h')/(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (TYPEOF(rt0.c2)) AND (((rt0.c0)*(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND((('h')/(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) BETWEEN (TYPEOF(rt0.c2)) AND (((rt0.c0)*(rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c0))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c0))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c0))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c0))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, vt0.c0))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (0.7818614303433062) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (0.7818614303433062) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (0.7818614303433062) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (0.7818614303433062) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (0.7818614303433062) AND (rt0.c1)) AS REAL));
SELECT * FROM rt0 WHERE (((NOT (rt0.c2)) IN ())) ORDER BY ((((((rt0.c1)+(rt0.c1)))AND(0.2615199138998895 COLLATE RTRIM)))OR(rt0.c0))  NULLS FIRST, ((rt0.c0)>>(rt0.c1)) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)+(rt0.c1)))AND(0.2615199138998895 COLLATE RTRIM)))OR(rt0.c0))  NULLS FIRST, ((rt0.c0)>>(rt0.c1)) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((NOT (rt0.c2)) IN ())) ORDER BY ((((((rt0.c1)+(rt0.c1)))AND(0.2615199138998895 COLLATE RTRIM)))OR(rt0.c0))  NULLS FIRST, ((rt0.c0)>>(rt0.c1)) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)+(rt0.c1)))AND(0.2615199138998895 COLLATE RTRIM)))OR(rt0.c0))  NULLS FIRST, ((rt0.c0)>>(rt0.c1)) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((NOT (rt0.c2)) IN ())) ORDER BY ((((((rt0.c1)+(rt0.c1)))AND(0.2615199138998895 COLLATE RTRIM)))OR(rt0.c0))  NULLS FIRST, ((rt0.c0)>>(rt0.c1)) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ('-1989018637');
SELECT SUM(count) FROM (SELECT (('-1989018637') IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ('-1989018637');
SELECT SUM(count) FROM (SELECT (('-1989018637') IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ('-1989018637');
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY vt0.c0, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x'59d9'))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x'59d9'))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY vt0.c0, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x'59d9'))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x'59d9'))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) IS TRUE)) ORDER BY vt0.c0, ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x'59d9'))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR('?쐒T(L')))AND(vt1.c0)))AND(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR('?쐒T(L')))AND(vt1.c0)))AND(((vt1.c0) ISNULL))));
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR('?쐒T(L')))AND(vt1.c0)))AND(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR('?쐒T(L')))AND(vt1.c0)))AND(((vt1.c0) ISNULL))));
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c0)) IN ())) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR('?쐒T(L')))AND(vt1.c0)))AND(((vt1.c0) ISNULL)));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT * FROM rt0, vt1, vt0 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)) THEN (rt0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE HEX(rt0.c0)  WHEN -1.756021239E9 THEN ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.4386234761827962) THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c0))) THEN ((NULL)>(rt0.c1)) ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE HEX(rt0.c0)  WHEN -1.756021239E9 THEN ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.4386234761827962) THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c0))) THEN ((NULL)>(rt0.c1)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE HEX(rt0.c0)  WHEN -1.756021239E9 THEN ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.4386234761827962) THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c0))) THEN ((NULL)>(rt0.c1)) ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE HEX(rt0.c0)  WHEN -1.756021239E9 THEN ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.4386234761827962) THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c0))) THEN ((NULL)>(rt0.c1)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE HEX(rt0.c0)  WHEN -1.756021239E9 THEN ((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.4386234761827962) THEN ((rt0.c1) IS TRUE) WHEN (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c0))) THEN ((NULL)>(rt0.c1)) ELSE (rt0.c1 IN ()) END);
SELECT ALL * FROM rt0 WHERE ((0.7158607326528841 IN ())) ORDER BY HEX(DISTINCT (+ (rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.7158607326528841 IN ())) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (+ (rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((0.7158607326528841 IN ())) ORDER BY HEX(DISTINCT (+ (rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.7158607326528841 IN ())) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT (+ (rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((0.7158607326528841 IN ())) ORDER BY HEX(DISTINCT (+ (rt0.c2))) ASC  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt1 ON '-982325551' FULL OUTER JOIN vt0 ON (~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'' WHEN rt0.c0 THEN vt0.c0 WHEN '\rie' THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((((rt0.c2 IN ()))<=(((rt0.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))<=(((rt0.c0)>>(vt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON '-982325551' FULL OUTER JOIN vt0 ON (~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'' WHEN rt0.c0 THEN vt0.c0 WHEN '\rie' THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM rt0 INNER JOIN vt1 ON '-982325551' FULL OUTER JOIN vt0 ON (~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'' WHEN rt0.c0 THEN vt0.c0 WHEN '\rie' THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((((rt0.c2 IN ()))<=(((rt0.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))<=(((rt0.c0)>>(vt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON '-982325551' FULL OUTER JOIN vt0 ON (~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'' WHEN rt0.c0 THEN vt0.c0 WHEN '\rie' THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM rt0 INNER JOIN vt1 ON '-982325551' FULL OUTER JOIN vt0 ON (~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN x'' WHEN rt0.c0 THEN vt0.c0 WHEN '\rie' THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((((rt0.c2 IN ()))<=(((rt0.c0)>>(vt1.c0)))));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((NULL)|(vt1.c0)))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((NULL)|(vt1.c0)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((NULL)|(vt1.c0)))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((NULL)|(vt1.c0)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((NULL)|(vt1.c0)))) AND (((vt1.c0 IN ())))));
SELECT * FROM rt0 INNER JOIN vt1 ON LIKELY(rt0.c2) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(LIKELIHOOD(vt1.c0, 0.806861353059796))))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(LIKELIHOOD(vt1.c0, 0.806861353059796))))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON LIKELY(rt0.c2) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt0.c0);
SELECT * FROM rt0 INNER JOIN vt1 ON LIKELY(rt0.c2) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(LIKELIHOOD(vt1.c0, 0.806861353059796))))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(LIKELIHOOD(vt1.c0, 0.806861353059796))))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON LIKELY(rt0.c2) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt0.c0);
SELECT * FROM rt0 INNER JOIN vt1 ON LIKELY(rt0.c2) COLLATE BINARY RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))AND(LIKELIHOOD(vt1.c0, 0.806861353059796))))OR((rt0.c0 IN ()))))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)))AND(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) ISNULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) ISNULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) END);
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt1.c0))>=((~ (vt0.c0))))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END  NULLS LAST, CASE WHEN ABS(DISTINCT vt0.c0) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))>=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END  NULLS LAST, CASE WHEN ABS(DISTINCT vt0.c0) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt1.c0))>=((~ (vt0.c0))))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END  NULLS LAST, CASE WHEN ABS(DISTINCT vt0.c0) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0))>=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END  NULLS LAST, CASE WHEN ABS(DISTINCT vt0.c0) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt1.c0))>=((~ (vt0.c0))))) ORDER BY CASE (vt1.c0 IN ())  WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt0.c0)) END  NULLS LAST, CASE WHEN ABS(DISTINCT vt0.c0) THEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))GLOB(((rt0.c2)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))GLOB(((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))GLOB(((rt0.c2)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))GLOB(((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))GLOB(((rt0.c2)LIKE(rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<=((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<=((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<=((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<=((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<=((((((vt1.c0)AND(rt0.c2)))AND(rt0.c2))))));
SELECT * FROM rt0, vt1 WHERE (((((((1531620372)AND(rt0.c2)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((1531620372)AND(rt0.c2)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((1531620372)AND(rt0.c2)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((1531620372)AND(rt0.c2)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((1531620372)AND(rt0.c2)))OR(rt0.c2))) ISNULL));
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY (('qty+熹/n*')>(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (('qty+熹/n*')>(rt0.c1)) COLLATE BINARY);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY (('qty+熹/n*')>(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (('qty+熹/n*')>(rt0.c1)) COLLATE BINARY);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY (('qty+熹/n*')>(rt0.c1)) COLLATE BINARY;
SELECT COUNT(*) FROM vt1 WHERE ((- (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0))<((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0))<((NULL))) END) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0))<((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0))<((NULL))) END) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0))<((NULL))) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)<=(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)<=(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)<=(rt0.c1)) AS BLOB));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS INTEGER))) WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)-(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE rt0.c2  WHEN NULL THEN vt1.c0 END) AND ((NOT (vt0.c0)))) DESC  NULLS LAST, JULIANDAY(rt0.c0, 'vr', vt1.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)-(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS INTEGER))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE rt0.c2  WHEN NULL THEN vt1.c0 END) AND ((NOT (vt0.c0)))) DESC  NULLS LAST, JULIANDAY(rt0.c0, 'vr', vt1.c0) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS INTEGER))) WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)-(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE rt0.c2  WHEN NULL THEN vt1.c0 END) AND ((NOT (vt0.c0)))) DESC  NULLS LAST, JULIANDAY(rt0.c0, 'vr', vt1.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)-(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS INTEGER))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE rt0.c2  WHEN NULL THEN vt1.c0 END) AND ((NOT (vt0.c0)))) DESC  NULLS LAST, JULIANDAY(rt0.c0, 'vr', vt1.c0) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) ISNULL)) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS INTEGER))) WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 END)-(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE rt0.c2  WHEN NULL THEN vt1.c0 END) AND ((NOT (vt0.c0)))) DESC  NULLS LAST, JULIANDAY(rt0.c0, 'vr', vt1.c0) COLLATE RTRIM;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((('-785879699') NOT NULL))/(((vt0.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('-785879699') NOT NULL))/(((vt0.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((('-785879699') NOT NULL))/(((vt0.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('-785879699') NOT NULL))/(((vt0.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((('-785879699') NOT NULL))/(((vt0.c0)<<(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (x'')))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST((+ (x'')) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (x'')) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (x'')))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST((+ (x'')) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (x'')) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (x'')))>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST((+ (x'')) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ('/[]T')) RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c1))<((rt0.c0)))) AND ('545990259'))) ORDER BY (CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE vt1.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c1))<((rt0.c0)))) AND ('545990259'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ('/[]T')) RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) ORDER BY (CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE vt1.c0 END IN ())  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ('/[]T')) RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c1))<((rt0.c0)))) AND ('545990259'))) ORDER BY (CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE vt1.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c1))<((rt0.c0)))) AND ('545990259'))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ('/[]T')) RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) ORDER BY (CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE vt1.c0 END IN ())  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ('/[]T')) RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE NOCASE)) WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c1))<((rt0.c0)))) AND ('545990259'))) ORDER BY (CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE vt1.c0 END IN ())  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((x'' COLLATE RTRIM)IS NOT(((rt0.c2) NOT NULL))) WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((x'' COLLATE RTRIM)IS NOT(((rt0.c2) NOT NULL))) ORDER BY vt0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((x'' COLLATE RTRIM)IS NOT(((rt0.c2) NOT NULL))) WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((x'' COLLATE RTRIM)IS NOT(((rt0.c2) NOT NULL))) ORDER BY vt0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((x'' COLLATE RTRIM)IS NOT(((rt0.c2) NOT NULL))) WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN x'' THEN rt0.c2 END)LIKE(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN x'' THEN rt0.c2 END)LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN x'' THEN rt0.c2 END)LIKE(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN x'' THEN rt0.c2 END)LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN x'' THEN rt0.c2 END)LIKE(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((rt0.c1 IN ())) ORDER BY ((CAST(vt1.c0 AS REAL))&(')')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))&(')')) ASC);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((rt0.c1 IN ())) ORDER BY ((CAST(vt1.c0 AS REAL))&(')')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))&(')')) ASC);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((rt0.c1 IN ())) ORDER BY ((CAST(vt1.c0 AS REAL))&(')')) ASC;
SELECT * FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY vt0.c0;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c1)<(rt0.c0)))))OR(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c1)<(rt0.c0)))))OR(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c1)<(rt0.c0)))))OR(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c1)<(rt0.c0)))))OR(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))AND(((rt0.c1)<(rt0.c0)))))OR(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=(((rt0.c1 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=(((rt0.c1 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=(((rt0.c1 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=(((rt0.c1 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=(((rt0.c1 IN (rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0) ISNULL) IN ((rt0.c0 IN ()), rt0.c2)) WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0) ISNULL) IN ((rt0.c0 IN ()), rt0.c2)));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0) ISNULL) IN ((rt0.c0 IN ()), rt0.c2)) WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0) ISNULL) IN ((rt0.c0 IN ()), rt0.c2)));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0) ISNULL) IN ((rt0.c0 IN ()), rt0.c2)) WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL * FROM vt0 WHERE (((- (vt0.c0)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((- (vt0.c0)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((- (vt0.c0)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((NULL)-(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))) WHERE (NULL) ORDER BY TRIM(((rt0.c1) ISNULL), (rt0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((NULL)-(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY TRIM(((rt0.c1) ISNULL), (rt0.c1 IN ()))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((NULL)-(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))) WHERE (NULL) ORDER BY TRIM(((rt0.c1) ISNULL), (rt0.c1 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((NULL)-(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY TRIM(((rt0.c1) ISNULL), (rt0.c1 IN ()))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((NULL)-(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))) WHERE (NULL) ORDER BY TRIM(((rt0.c1) ISNULL), (rt0.c1 IN ()))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((CASE WHEN '0.7093758988196543' THEN vt1.c0 END)/(0x5cf3f012)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '0.7093758988196543' THEN vt1.c0 END)/(0x5cf3f012))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((CASE WHEN '0.7093758988196543' THEN vt1.c0 END)/(0x5cf3f012)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '0.7093758988196543' THEN vt1.c0 END)/(0x5cf3f012))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((CASE WHEN '0.7093758988196543' THEN vt1.c0 END)/(0x5cf3f012)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE NOCASE) WHERE ((('-1668479910') NOTNULL)) ORDER BY ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((('-1668479910') NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (~ (CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE NOCASE) ORDER BY ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE NOCASE) WHERE ((('-1668479910') NOTNULL)) ORDER BY ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((('-1668479910') NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (~ (CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE NOCASE) ORDER BY ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (CAST(vt0.c0 AS INTEGER))) FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED(vt1.c0 COLLATE NOCASE) WHERE ((('-1668479910') NOTNULL)) ORDER BY ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))AND(((vt1.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))AND(((vt1.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))AND(((vt1.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))AND(((vt1.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0)AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))))AND(((vt1.c0)OR(rt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)<=(rt0.c0))) ISNULL) WHERE ((+ (rt0.c2)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)<=(rt0.c0))) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)<=(rt0.c0))) ISNULL) WHERE ((+ (rt0.c2)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)<=(rt0.c0))) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)<=(rt0.c0))) ISNULL) WHERE ((+ (rt0.c2)) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND('')))AND(rt0.c2)))OR('k'))) AND (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON ((vt1.c0)==(rt0.c2)) COLLATE RTRIM WHERE (((((rt0.c2) NOTNULL)) IS FALSE)) ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND('')))AND(rt0.c2)))OR('k'))) AND (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON ((vt1.c0)=(rt0.c2)) COLLATE RTRIM ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND('')))AND(rt0.c2)))OR('k'))) AND (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON ((vt1.c0)==(rt0.c2)) COLLATE RTRIM WHERE (((((rt0.c2) NOTNULL)) IS FALSE)) ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND('')))AND(rt0.c2)))OR('k'))) AND (((rt0.c1) IS FALSE))) LEFT OUTER JOIN vt0 ON ((vt1.c0)=(rt0.c2)) COLLATE RTRIM ORDER BY ((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 NOT INDEXED WHERE (0Xffffffff93dab234);
SELECT SUM(count) FROM (SELECT ((0xffffffff93dab234) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 NOT INDEXED WHERE (0Xffffffff93dab234);
SELECT SUM(count) FROM (SELECT ((0xffffffff93dab234) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 NOT INDEXED WHERE (0Xffffffff93dab234);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((CAST(rt0.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((CAST(rt0.c2 AS NUMERIC)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR((((rt0.c2))<>((vt0.c0))))))OR(vt0.c0)) WHERE (NULL) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR((((rt0.c2))<>((vt0.c0))))))OR(vt0.c0)) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR((((rt0.c2))<>((vt0.c0))))))OR(vt0.c0)) WHERE (NULL) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR((((rt0.c2))<>((vt0.c0))))))OR(vt0.c0)) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR((((rt0.c2))<>((vt0.c0))))))OR(vt0.c0)) WHERE (NULL) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (COALESCE(vt1.c0, vt1.c0)))) ORDER BY ((((((vt1.c0) IS TRUE))AND(CASE WHEN vt1.c0 THEN '' END)))AND(((vt1.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (COALESCE(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) IS TRUE))AND(CASE WHEN vt1.c0 THEN '' END)))AND(((vt1.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (COALESCE(vt1.c0, vt1.c0)))) ORDER BY ((((((vt1.c0) IS TRUE))AND(CASE WHEN vt1.c0 THEN '' END)))AND(((vt1.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (COALESCE(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) IS TRUE))AND(CASE WHEN vt1.c0 THEN '' END)))AND(((vt1.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (COALESCE(vt1.c0, vt1.c0)))) ORDER BY ((((((vt1.c0) IS TRUE))AND(CASE WHEN vt1.c0 THEN '' END)))AND(((vt1.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (0xffffffff882e6044);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff882e6044) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (0xffffffff882e6044);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff882e6044) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (0xffffffff882e6044);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (LIKELIHOOD(DISTINCT x'', 0.7624056410807074));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT x'', 0.7624056410807074)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (LIKELIHOOD(DISTINCT x'', 0.7624056410807074));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT x'', 0.7624056410807074)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (LIKELIHOOD(DISTINCT x'', 0.7624056410807074));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON 0x2cca6312 RIGHT OUTER JOIN vt1 ON (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)>=(rt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9187007858814478 THEN rt0.c1 END)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c1) IS FALSE), ((rt0.c2) NOT NULL)))) WHERE (rt0.c1 COLLATE BINARY) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0X2cca6312 RIGHT OUTER JOIN vt1 ON (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)>=(rt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9187007858814478 THEN rt0.c1 END)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c1) IS FALSE), ((rt0.c2) NOT NULL)))) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON 0x2cca6312 RIGHT OUTER JOIN vt1 ON (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)>=(rt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9187007858814478 THEN rt0.c1 END)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c1) IS FALSE), ((rt0.c2) NOT NULL)))) WHERE (rt0.c1 COLLATE BINARY) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0X2cca6312 RIGHT OUTER JOIN vt1 ON (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)>=(rt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9187007858814478 THEN rt0.c1 END)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c1) IS FALSE), ((rt0.c2) NOT NULL)))) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON 0x2cca6312 RIGHT OUTER JOIN vt1 ON (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt1.c0)>=(rt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN 0.9187007858814478 THEN rt0.c1 END)) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c1) IS FALSE), ((rt0.c2) NOT NULL)))) WHERE (rt0.c1 COLLATE BINARY) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)) AND (((~ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END)) AND (((~ (rt0.c2))))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (rt0.c1 COLLATE NOCASE)) WHERE (((((((rt0.c2) NOT NULL))AND(((rt0.c2) NOTNULL))))OR(rt0.c2))) ORDER BY ((((rt0.c2) IS FALSE))>(((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(x'c702')))AND(rt0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT NULL))AND(((rt0.c2) NOTNULL))))OR(rt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (rt0.c1 COLLATE NOCASE)) ORDER BY ((((rt0.c2) IS FALSE))>(((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(x'c702')))AND(rt0.c2)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (rt0.c1 COLLATE NOCASE)) WHERE (((((((rt0.c2) NOT NULL))AND(((rt0.c2) NOTNULL))))OR(rt0.c2))) ORDER BY ((((rt0.c2) IS FALSE))>(((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(x'c702')))AND(rt0.c2)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) NOT NULL))AND(((rt0.c2) NOTNULL))))OR(rt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (~ (rt0.c1 COLLATE NOCASE)) ORDER BY ((((rt0.c2) IS FALSE))>(((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(x'c702')))AND(rt0.c2)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (~ (rt0.c1 COLLATE NOCASE)) WHERE (((((((rt0.c2) NOT NULL))AND(((rt0.c2) NOTNULL))))OR(rt0.c2))) ORDER BY ((((rt0.c2) IS FALSE))>(((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(x'c702')))AND(rt0.c2)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)<=((('-2105334752')>>(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=((('-2105334752')>>(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) ISNULL));
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)<=((('-2105334752')>>(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=((('-2105334752')>>(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) ISNULL));
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)<=((('-2105334752')>>(rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) ISNULL);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)>(vt1.c0)) AS INTEGER)) ORDER BY ((vt0.c0)/(0.4910829481399961));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)/(0.4910829481399961)));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)>(vt1.c0)) AS INTEGER)) ORDER BY ((vt0.c0)/(0.4910829481399961));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)/(0.4910829481399961)));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0)>(vt1.c0)) AS INTEGER)) ORDER BY ((vt0.c0)/(0.4910829481399961));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY '~'  NULLS FIRST, (((vt1.c0 COLLATE NOCASE))<=((SQLITE_COMPILEOPTION_USED(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY '~'  NULLS FIRST, (((vt1.c0 COLLATE NOCASE))<=((SQLITE_COMPILEOPTION_USED(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY '~'  NULLS FIRST, (((vt1.c0 COLLATE NOCASE))<=((SQLITE_COMPILEOPTION_USED(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY '~'  NULLS FIRST, (((vt1.c0 COLLATE NOCASE))<=((SQLITE_COMPILEOPTION_USED(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY '~'  NULLS FIRST, (((vt1.c0 COLLATE NOCASE))<=((SQLITE_COMPILEOPTION_USED(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)|((NOT (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)|((NOT (rt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)|((NOT (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)|((NOT (rt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)|((NOT (rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((vt0.c0)GLOB(NULL)), ((rt0.c2)IS(rt0.c0)))) ORDER BY ((((rt0.c1)||(rt0.c0)))>(rt0.c0));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0)GLOB(NULL)), ((rt0.c2)IS(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)||(rt0.c0)))>(rt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((vt0.c0)GLOB(NULL)), ((rt0.c2)IS(rt0.c0)))) ORDER BY ((((rt0.c1)||(rt0.c0)))>(rt0.c0));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0)GLOB(NULL)), ((rt0.c2)IS(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)||(rt0.c0)))>(rt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF(((vt0.c0)GLOB(NULL)), ((rt0.c2)IS(rt0.c0)))) ORDER BY ((((rt0.c1)||(rt0.c0)))>(rt0.c0));
SELECT ALL * FROM rt0, vt1 WHERE (((((((0.004256805020516841) ISNULL))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END))>=((rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.004256805020516841) ISNULL))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END))>=((rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((0.004256805020516841) ISNULL))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END))>=((rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.004256805020516841) ISNULL))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END))>=((rt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((0.004256805020516841) ISNULL))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END))>=((rt0.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<=(rt0.c2)))AND(((((0X4d2935a9)AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c2)AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)<=(rt0.c2)))AND(((((0x4d2935a9)AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c2)AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<=(rt0.c2)))AND(((((0X4d2935a9)AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c2)AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)<=(rt0.c2)))AND(((((0x4d2935a9)AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c2)AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)<=(rt0.c2)))AND(((((0X4d2935a9)AND(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c2)AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (0) ORDER BY ((CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((rt0.c2 IN ()))) ASC  NULLS LAST, (((((739247398) ISNULL), ((vt0.c0)=(rt0.c0)), rt0.c2))<=((((rt0.c0)IS NOT(rt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)*(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((rt0.c2 IN ()))) ASC  NULLS LAST, (((((739247398) ISNULL), ((vt0.c0)==(rt0.c0)), rt0.c2))<=((((rt0.c0)IS NOT(rt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)*(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (0) ORDER BY ((CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((rt0.c2 IN ()))) ASC  NULLS LAST, (((((739247398) ISNULL), ((vt0.c0)=(rt0.c0)), rt0.c2))<=((((rt0.c0)IS NOT(rt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)*(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((rt0.c2 IN ()))) ASC  NULLS LAST, (((((739247398) ISNULL), ((vt0.c0)==(rt0.c0)), rt0.c2))<=((((rt0.c0)IS NOT(rt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)*(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (0) ORDER BY ((CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((((rt0.c0))=((vt0.c0)))) AND ((rt0.c2 IN ()))) ASC  NULLS LAST, (((((739247398) ISNULL), ((vt0.c0)=(rt0.c0)), rt0.c2))<=((((rt0.c0)IS NOT(rt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)*(rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE WHERE ('1851502242') ORDER BY ((CAST(x'' AS INTEGER))=(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1851502242') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE ORDER BY ((CAST(x'' AS INTEGER))==(NULL)) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE WHERE ('1851502242') ORDER BY ((CAST(x'' AS INTEGER))=(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1851502242') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE ORDER BY ((CAST(x'' AS INTEGER))==(NULL)) ASC);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE WHERE ('1851502242') ORDER BY ((CAST(x'' AS INTEGER))=(NULL)) ASC;
SELECT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) ISNULL) WHERE ((((~ (rt0.c2)))>>(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))>>(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) ISNULL));
SELECT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) ISNULL) WHERE ((((~ (rt0.c2)))>>(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))>>(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) ISNULL));
SELECT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) ISNULL) WHERE ((((~ (rt0.c2)))>>(CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT NULL)))) ORDER BY UPPER(TYPEOF(DISTINCT vt0.c0)) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(TYPEOF(DISTINCT vt0.c0)) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT NULL)))) ORDER BY UPPER(TYPEOF(DISTINCT vt0.c0)) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(TYPEOF(DISTINCT vt0.c0)) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT NULL)))) ORDER BY UPPER(TYPEOF(DISTINCT vt0.c0)) DESC  NULLS LAST, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0)))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c0);
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, '-1777926429', rt0.c0, '743393378', rt0.c0)) NOT BETWEEN (((- (rt0.c2)), CAST(rt0.c2 AS INTEGER), ((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), UPPER(rt0.c0), ((rt0.c0)%(vt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, (- (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END, rt0.c2)))) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, '-1777926429', rt0.c0, '743393378', rt0.c0)) NOT BETWEEN (((- (rt0.c2)), CAST(rt0.c2 AS INTEGER), ((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), UPPER(rt0.c0), ((rt0.c0)%(vt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, (- (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c2 IN ()) END DESC);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, '-1777926429', rt0.c0, '743393378', rt0.c0)) NOT BETWEEN (((- (rt0.c2)), CAST(rt0.c2 AS INTEGER), ((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), UPPER(rt0.c0), ((rt0.c0)%(vt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, (- (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END, rt0.c2)))) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, '-1777926429', rt0.c0, '743393378', rt0.c0)) NOT BETWEEN (((- (rt0.c2)), CAST(rt0.c2 AS INTEGER), ((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), UPPER(rt0.c0), ((rt0.c0)%(vt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, (- (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c2 IN ()) END DESC);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, '-1777926429', rt0.c0, '743393378', rt0.c0)) NOT BETWEEN (((- (rt0.c2)), CAST(rt0.c2 AS INTEGER), ((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), UPPER(rt0.c0), ((rt0.c0)%(vt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, (- (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END, rt0.c2)))) ORDER BY CASE WHEN rt0.c1 COLLATE RTRIM THEN (rt0.c2 IN ()) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) ORDER BY (rt0.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) ORDER BY (rt0.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) ORDER BY (rt0.c1 IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0))OR((('bOd斝f*D')-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c0))OR((('bOd斝f*D')-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0))OR((('bOd斝f*D')-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c0))OR((('bOd斝f*D')-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0))OR((('bOd斝f*D')-(vt0.c0)))));
