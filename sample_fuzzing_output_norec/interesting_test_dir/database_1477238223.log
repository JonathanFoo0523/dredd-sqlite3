-- Time: 2024/06/09 00:52:57
-- Database: database23
-- Database version: 3.40.0
-- seed value: 1477238223
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, tokenize = "unicode61 remove_diacritics 2 tokenchars '' separators ''"); -- 1ms;
PRAGMA temp.cache_size; -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=0.8163722062418478 WHERE (- (highlight(x'b33e', vt0.c1, vt0.c0, vt0.c0))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE x'2f4389ab3d94'; -- 2ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 375465314); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt0 SET (c0, c1)=('', x'21d7'); -- 1ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 1ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (NULL, 0.8163722062418478); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 1ms;
VACUUM main; -- 2ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=(NULL, NULL, ''); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM vt1 WHERE (((((((((vt1.c0 IN ()))OR((+ (vt1.c0)))))AND(((vt1.c0)||(vt1.c0)))))AND(vt1.c0)))OR(CAST(vt1.c0 AS TEXT))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10714'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2054481028,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR ROLLBACK vt0 SET c0='1622463565' WHERE ((((((((vt0.c1 COLLATE RTRIM)OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(json_array(vt0.c0, vt0.c1))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES ('y%|g*Fr(', NULL); -- 0ms;
UPDATE vt1 SET c0=NULL WHERE (((vt1.c0 COLLATE NOCASE))>((CAST(vt1.c0 AS TEXT)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'b5d7' WHERE '2075192697'; -- 2ms;
UPDATE OR ABORT vt1 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.3642475511353137, x'') WHERE CASE WHEN (vt0.c1 IN ()) THEN vt0.c0 WHEN vt0.c0 THEN ((vt0.c0)%(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((((vt0.c1)OR(vt0.c0)))OR(0.8163722062418478)) END; -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt1 SET c0='nፗmI', c0=NULL; -- 0ms;
PRAGMA mmap_size = 2109556435375823571; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7508222041950904 IN ('1456345943')))<=(((NULL)OR(NULL)))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET c1=x''; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.7997341938284639) WHERE '^+	'; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE ((((vt1.c0)+(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND ((NOT (vt1.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL); -- 1ms;
PRAGMA main.cache_size = 0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1500883588); -- 1ms;
UPDATE OR ROLLBACK vt1 SET c0=NULL; -- 0ms;
PRAGMA soft_heap_limit = 8689103732544035850; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER('K7푍2') AS BLOB); -- 1ms;
PRAGMA cache_spill = true; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X50885bde; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT rt0 SET c1=x''; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=1351113694 WHERE NULL; -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
DROP TABLE IF EXISTS vt1; -- 1ms;
UPDATE OR FAIL rt0 SET (c0, c0)=(NULL, x'') WHERE rt0.c1; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'' WHERE ((rt0.c0) ISNULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=('^EMc') WHERE UNLIKELY((('1456345943')/(vt0.c1))); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE (((rt0.c2))<=((rt0.c1))) COLLATE RTRIM; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=1.622463565E9; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN (vt0.c1)));
SELECT * FROM rt0 WHERE ((((UPPER(rt0.c1), (((rt0.c0))>((rt0.c0))), rt0.c0 COLLATE RTRIM, (rt0.c2 IN ()), ((rt0.c0)=(rt0.c1)), CASE rt0.c2  WHEN 0X7895e5ced2cedc0a THEN rt0.c2 END, CAST(rt0.c0 AS INTEGER)))<>(((rt0.c0 IN ()), rt0.c2 COLLATE BINARY, LIKE(NULL, rt0.c0, 'l'), ((rt0.c0) NOTNULL), ((rt0.c1)IS NOT(rt0.c2)), rt0.c2 COLLATE NOCASE, '-w')))) ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.30810937564191687) END;
SELECT SUM(count) FROM (SELECT (((((UPPER(rt0.c1), (((rt0.c0))>((rt0.c0))), rt0.c0 COLLATE RTRIM, (rt0.c2 IN ()), ((rt0.c0)=(rt0.c1)), CASE rt0.c2  WHEN 0X7895e5ced2cedc0a THEN rt0.c2 END, CAST(rt0.c0 AS INTEGER)))<>(((rt0.c0 IN ()), rt0.c2 COLLATE BINARY, LIKE(NULL, rt0.c0, 'l'), ((rt0.c0) NOTNULL), ((rt0.c1)IS NOT(rt0.c2)), rt0.c2 COLLATE NOCASE, '-w')))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.30810937564191687) END);
SELECT * FROM rt0 WHERE ((((UPPER(rt0.c1), (((rt0.c0))>((rt0.c0))), rt0.c0 COLLATE RTRIM, (rt0.c2 IN ()), ((rt0.c0)=(rt0.c1)), CASE rt0.c2  WHEN 0X7895e5ced2cedc0a THEN rt0.c2 END, CAST(rt0.c0 AS INTEGER)))<>(((rt0.c0 IN ()), rt0.c2 COLLATE BINARY, LIKE(NULL, rt0.c0, 'l'), ((rt0.c0) NOTNULL), ((rt0.c1)IS NOT(rt0.c2)), rt0.c2 COLLATE NOCASE, '-w')))) ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.30810937564191687) END;
SELECT SUM(count) FROM (SELECT (((((UPPER(rt0.c1), (((rt0.c0))>((rt0.c0))), rt0.c0 COLLATE RTRIM, (rt0.c2 IN ()), ((rt0.c0)=(rt0.c1)), CASE rt0.c2  WHEN 0X7895e5ced2cedc0a THEN rt0.c2 END, CAST(rt0.c0 AS INTEGER)))<>(((rt0.c0 IN ()), rt0.c2 COLLATE BINARY, LIKE(NULL, rt0.c0, 'l'), ((rt0.c0) NOTNULL), ((rt0.c1)IS NOT(rt0.c2)), rt0.c2 COLLATE NOCASE, '-w')))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.30810937564191687) END);
SELECT * FROM rt0 WHERE ((((UPPER(rt0.c1), (((rt0.c0))>((rt0.c0))), rt0.c0 COLLATE RTRIM, (rt0.c2 IN ()), ((rt0.c0)=(rt0.c1)), CASE rt0.c2  WHEN 0X7895e5ced2cedc0a THEN rt0.c2 END, CAST(rt0.c0 AS INTEGER)))<>(((rt0.c0 IN ()), rt0.c2 COLLATE BINARY, LIKE(NULL, rt0.c0, 'l'), ((rt0.c0) NOTNULL), ((rt0.c1)IS NOT(rt0.c2)), rt0.c2 COLLATE NOCASE, '-w')))) ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.30810937564191687) END;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((vt0.c0)%(vt0.c1)))>=((vt0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c1)))>=((vt0.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((vt0.c0)%(vt0.c1)))>=((vt0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c1)))>=((vt0.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY ((((vt0.c0)%(vt0.c1)))>=((vt0.c1 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0) IS FALSE) IN ((((rt0.c0))<=(('-691254012'))))) WHERE (x'075e') ORDER BY ((rt0.c2 IN ()) IN (((((rt0.c0)OR(rt0.c1)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'075e') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0) IS FALSE) IN ((((rt0.c0))<=(('-691254012'))))) ORDER BY ((rt0.c2 IN ()) IN (((((rt0.c0)OR(rt0.c1)))OR(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0) IS FALSE) IN ((((rt0.c0))<=(('-691254012'))))) WHERE (x'075e') ORDER BY ((rt0.c2 IN ()) IN (((((rt0.c0)OR(rt0.c1)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'075e') IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0) IS FALSE) IN ((((rt0.c0))<=(('-691254012'))))) ORDER BY ((rt0.c2 IN ()) IN (((((rt0.c0)OR(rt0.c1)))OR(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((vt0.c0) IS FALSE) IN ((((rt0.c0))<=(('-691254012'))))) WHERE (x'075e') ORDER BY ((rt0.c2 IN ()) IN (((((rt0.c0)OR(rt0.c1)))OR(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) IN (rt0.c1 COLLATE BINARY))) ORDER BY ('qx5歭ub' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ('qx5歭ub' IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) IN (rt0.c1 COLLATE BINARY))) ORDER BY ('qx5歭ub' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ('qx5歭ub' IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) IN (rt0.c1 COLLATE BINARY))) ORDER BY ('qx5歭ub' IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))<=((((rt0.c0) IS FALSE))))) ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))<=((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))<=((((rt0.c0) IS FALSE))))) ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))<=((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1))<=((((rt0.c0) IS FALSE))))) ORDER BY (((+ (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((NOT (rt0.c0)))<<(((vt0.c0)&(rt0.c2))))) ORDER BY ((((x'9951')>=(vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<<(((vt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((x'9951')>=(vt0.c1))) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE ((((NOT (rt0.c0)))<<(((vt0.c0)&(rt0.c2))))) ORDER BY ((((x'9951')>=(vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0)))<<(((vt0.c0)&(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((x'9951')>=(vt0.c1))) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE ((((NOT (rt0.c0)))<<(((vt0.c0)&(rt0.c2))))) ORDER BY ((((x'9951')>=(vt0.c1))) NOT NULL);
SELECT * FROM rt0, vt0 WHERE ('1331461429') ORDER BY UPPER(((0.6455545393569523) BETWEEN (rt0.c2) AND (vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1331461429') IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(((0.6455545393569523) BETWEEN (rt0.c2) AND (vt0.c1))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ('1331461429') ORDER BY UPPER(((0.6455545393569523) BETWEEN (rt0.c2) AND (vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1331461429') IS TRUE)  as count FROM rt0, vt0 ORDER BY UPPER(((0.6455545393569523) BETWEEN (rt0.c2) AND (vt0.c1))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ('1331461429') ORDER BY UPPER(((0.6455545393569523) BETWEEN (rt0.c2) AND (vt0.c1))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)>>(rt0.c1)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY (- (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC, (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (- (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC, (+ (rt0.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY (- (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC, (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (- (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC, (+ (rt0.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY (- (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) ASC, (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0)<('0ꍴ')) IN ())) ORDER BY ((((ABS(vt0.c1))AND(((((rt0.c0)OR(rt0.c0)))OR(vt0.c1)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1)))  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST, (~ (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<('0ꍴ')) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((ABS(vt0.c1))AND(((((rt0.c0)OR(rt0.c0)))OR(vt0.c1)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1)))  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST, (~ (NULL)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0)<('0ꍴ')) IN ())) ORDER BY ((((ABS(vt0.c1))AND(((((rt0.c0)OR(rt0.c0)))OR(vt0.c1)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1)))  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST, (~ (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<('0ꍴ')) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((ABS(vt0.c1))AND(((((rt0.c0)OR(rt0.c0)))OR(vt0.c1)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1)))  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST, (~ (NULL)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0)<('0ꍴ')) IN ())) ORDER BY ((((ABS(vt0.c1))AND(((((rt0.c0)OR(rt0.c0)))OR(vt0.c1)))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1)))  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST, (~ (NULL)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<<(CAST(rt0.c1 AS NUMERIC)))) ORDER BY x'' COLLATE RTRIM COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY x'' COLLATE RTRIM COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<<(CAST(rt0.c1 AS NUMERIC)))) ORDER BY x'' COLLATE RTRIM COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<<(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY x'' COLLATE RTRIM COLLATE RTRIM ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<<(CAST(rt0.c1 AS NUMERIC)))) ORDER BY x'' COLLATE RTRIM COLLATE RTRIM ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON -109194084 WHERE (((((vt0.c1) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON -109194084);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON -109194084 WHERE (((((vt0.c1) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON -109194084);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON -109194084 WHERE (((((vt0.c1) IS TRUE)) NOTNULL));
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c1, 809817177, vt0.c1))))|(((vt0.c1)GLOB(vt0.c1))))) ORDER BY ((((x'')*(rt0.c1)))%(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c1, 809817177, vt0.c1))))|(((vt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((x'')*(rt0.c1)))%(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c1, 809817177, vt0.c1))))|(((vt0.c1)GLOB(vt0.c1))))) ORDER BY ((((x'')*(rt0.c1)))%(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c1, 809817177, vt0.c1))))|(((vt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((x'')*(rt0.c1)))%(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c1, 809817177, vt0.c1))))|(((vt0.c1)GLOB(vt0.c1))))) ORDER BY ((((x'')*(rt0.c1)))%(CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, ((rt0.c1) IS FALSE), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))==((0X4f5c7d35, ((((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1412310342')))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, ((rt0.c1) IS FALSE), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))==((0X4f5c7d35, ((((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1412310342')))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, ((rt0.c1) IS FALSE), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))==((0X4f5c7d35, ((((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1412310342')))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, ((rt0.c1) IS FALSE), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))==((0X4f5c7d35, ((((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1412310342')))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, ((rt0.c1) IS FALSE), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))==((0X4f5c7d35, ((((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND('1412310342')))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c1 AS NUMERIC)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((65132990)OR(vt0.c0)))OR(852333970))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((65132990)OR(vt0.c0)))OR(852333970))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((65132990)OR(vt0.c0)))OR(852333970))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((65132990)OR(vt0.c0)))OR(852333970))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((65132990)OR(vt0.c0)))OR(852333970))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)GLOB(CAST(vt0.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)GLOB(CAST(vt0.c1 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)GLOB(CAST(vt0.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)GLOB(CAST(vt0.c1 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS REAL)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)GLOB(CAST(vt0.c1 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ()) WHERE (IFNULL(CAST('-691254012' AS TEXT), (vt0.c1 IN ()))) ORDER BY ((((rt0.c0) IS FALSE))<=((0Xffffffffad454f63 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST('-691254012' AS TEXT), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ()) ORDER BY ((((rt0.c0) IS FALSE))<=((0Xffffffffad454f63 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ()) WHERE (IFNULL(CAST('-691254012' AS TEXT), (vt0.c1 IN ()))) ORDER BY ((((rt0.c0) IS FALSE))<=((0Xffffffffad454f63 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST('-691254012' AS TEXT), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ()) ORDER BY ((((rt0.c0) IS FALSE))<=((0Xffffffffad454f63 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c2) NOT NULL) IN ()) WHERE (IFNULL(CAST('-691254012' AS TEXT), (vt0.c1 IN ()))) ORDER BY ((((rt0.c0) IS FALSE))<=((0Xffffffffad454f63 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(vt0.c0, rt0.c1)) AND (LIKELY(DISTINCT rt0.c1))) WHERE (CAST((- (vt0.c1)) AS NUMERIC)) ORDER BY NULLIF(DISTINCT vt0.c0, x'' COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(vt0.c0, rt0.c1)) AND (LIKELY(DISTINCT rt0.c1))) ORDER BY NULLIF(DISTINCT vt0.c0, x'' COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(vt0.c0, rt0.c1)) AND (LIKELY(DISTINCT rt0.c1))) WHERE (CAST((- (vt0.c1)) AS NUMERIC)) ORDER BY NULLIF(DISTINCT vt0.c0, x'' COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(vt0.c0, rt0.c1)) AND (LIKELY(DISTINCT rt0.c1))) ORDER BY NULLIF(DISTINCT vt0.c0, x'' COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(vt0.c0, rt0.c1)) AND (LIKELY(DISTINCT rt0.c1))) WHERE (CAST((- (vt0.c1)) AS NUMERIC)) ORDER BY NULLIF(DISTINCT vt0.c0, x'' COLLATE NOCASE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) ORDER BY (((((rt0.c1 IN ()))AND(rt0.c0)))OR(((rt0.c1) ISNULL))), (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c0)<(vt0.c1)), rt0.c2))<(((+ (rt0.c2)), ((rt0.c1) IS FALSE), CAST(rt0.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1 IN ()))AND(rt0.c0)))OR(((rt0.c1) ISNULL))), (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c0)<(vt0.c1)), rt0.c2))<(((+ (rt0.c2)), ((rt0.c1) IS FALSE), CAST(rt0.c0 AS REAL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) ORDER BY (((((rt0.c1 IN ()))AND(rt0.c0)))OR(((rt0.c1) ISNULL))), (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c0)<(vt0.c1)), rt0.c2))<(((+ (rt0.c2)), ((rt0.c1) IS FALSE), CAST(rt0.c0 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1 IN ()))AND(rt0.c0)))OR(((rt0.c1) ISNULL))), (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c0)<(vt0.c1)), rt0.c2))<(((+ (rt0.c2)), ((rt0.c1) IS FALSE), CAST(rt0.c0 AS REAL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT NULL)) ORDER BY (((((rt0.c1 IN ()))AND(rt0.c0)))OR(((rt0.c1) ISNULL))), (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c0)<(vt0.c1)), rt0.c2))<(((+ (rt0.c2)), ((rt0.c1) IS FALSE), CAST(rt0.c0 AS REAL))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NOT (rt0.c2)), ((vt0.c0)<=(rt0.c0)), ((((rt0.c2)AND(0.047671235355707275)))AND(rt0.c1))))<(((vt0.c0 IN ()), ((vt0.c1) BETWEEN (vt0.c0) AND (1833733674)), COALESCE(DISTINCT '1133565039', rt0.c1))))) ORDER BY (('m\n')-((((vt0.c0))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c2)), ((vt0.c0)<=(rt0.c0)), ((((rt0.c2)AND(0.047671235355707275)))AND(rt0.c1))))<(((vt0.c0 IN ()), ((vt0.c1) BETWEEN (vt0.c0) AND (1833733674)), COALESCE(DISTINCT '1133565039', rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('m\n')-((((vt0.c0))<=((vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NOT (rt0.c2)), ((vt0.c0)<=(rt0.c0)), ((((rt0.c2)AND(0.047671235355707275)))AND(rt0.c1))))<(((vt0.c0 IN ()), ((vt0.c1) BETWEEN (vt0.c0) AND (1833733674)), COALESCE(DISTINCT '1133565039', rt0.c1))))) ORDER BY (('m\n')-((((vt0.c0))<=((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c2)), ((vt0.c0)<=(rt0.c0)), ((((rt0.c2)AND(0.047671235355707275)))AND(rt0.c1))))<(((vt0.c0 IN ()), ((vt0.c1) BETWEEN (vt0.c0) AND (1833733674)), COALESCE(DISTINCT '1133565039', rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('m\n')-((((vt0.c0))<=((vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NOT (rt0.c2)), ((vt0.c0)<=(rt0.c0)), ((((rt0.c2)AND(0.047671235355707275)))AND(rt0.c1))))<(((vt0.c0 IN ()), ((vt0.c1) BETWEEN (vt0.c0) AND (1833733674)), COALESCE(DISTINCT '1133565039', rt0.c1))))) ORDER BY (('m\n')-((((vt0.c0))<=((vt0.c0))))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)IS('K7푍2')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS('K7푍2')) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)IS('K7푍2')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)IS('K7푍2')) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)IS('K7푍2')) AS REAL));
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY LIKELY(rt0.c0 COLLATE BINARY), CAST(((rt0.c1)||(rt0.c0)) AS INTEGER) DESC, COALESCE(vt0.c1, rt0.c1) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(rt0.c0 COLLATE BINARY), CAST(((rt0.c1)||(rt0.c0)) AS INTEGER) DESC, COALESCE(vt0.c1, rt0.c1) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY LIKELY(rt0.c0 COLLATE BINARY), CAST(((rt0.c1)||(rt0.c0)) AS INTEGER) DESC, COALESCE(vt0.c1, rt0.c1) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(rt0.c0 COLLATE BINARY), CAST(((rt0.c1)||(rt0.c0)) AS INTEGER) DESC, COALESCE(vt0.c1, rt0.c1) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY LIKELY(rt0.c0 COLLATE BINARY), CAST(((rt0.c1)||(rt0.c0)) AS INTEGER) DESC, COALESCE(vt0.c1, rt0.c1) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)*(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)*(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)*(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)*(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)*(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((NOT (vt0.c1)))>(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0))!=(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c1)))>(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0))!=(rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((NOT (vt0.c1)))>(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0))!=(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c1)))>(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0))!=(rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((NOT (vt0.c1)))>(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0))!=(rt0.c2))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)>=(vt0.c0))) ISNULL)) ORDER BY HEX(((((vt0.c1)AND(vt0.c0)))AND(-9223372036854775808)))  NULLS FIRST, CAST(rt0.c1 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX(((((vt0.c1)AND(vt0.c0)))AND(-9223372036854775808)))  NULLS FIRST, CAST(rt0.c1 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)>=(vt0.c0))) ISNULL)) ORDER BY HEX(((((vt0.c1)AND(vt0.c0)))AND(-9223372036854775808)))  NULLS FIRST, CAST(rt0.c1 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX(((((vt0.c1)AND(vt0.c0)))AND(-9223372036854775808)))  NULLS FIRST, CAST(rt0.c1 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1)>=(vt0.c0))) ISNULL)) ORDER BY HEX(((((vt0.c1)AND(vt0.c0)))AND(-9223372036854775808)))  NULLS FIRST, CAST(rt0.c1 COLLATE RTRIM AS INTEGER);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (((~ (rt0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (((~ (rt0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ('') ORDER BY (((~ (rt0.c2))) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS REAL))==((((vt0.c1))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))==((((vt0.c1))>=((rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS REAL))==((((vt0.c1))>=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))==((((vt0.c1))>=((rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS REAL))==((((vt0.c1))>=((rt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(IFNULL(x'', vt0.c1) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(x'', vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(IFNULL(x'', vt0.c1) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(x'', vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(IFNULL(x'', vt0.c1) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('') BETWEEN (vt0.c0) AND (vt0.c0))))>((rtreenode(vt0.c0, '*xGMc5w'))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN '-1878533502' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('') BETWEEN (vt0.c0) AND (vt0.c0))))>((rtreenode(vt0.c0, '*xGMc5w'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN '-1878533502' END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('') BETWEEN (vt0.c0) AND (vt0.c0))))>((rtreenode(vt0.c0, '*xGMc5w'))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN '-1878533502' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('') BETWEEN (vt0.c0) AND (vt0.c0))))>((rtreenode(vt0.c0, '*xGMc5w'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN '-1878533502' END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('') BETWEEN (vt0.c0) AND (vt0.c0))))>((rtreenode(vt0.c0, '*xGMc5w'))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN '-1878533502' END  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END) ORDER BY rt0.c2, ((rt0.c1)>(rt0.c2)) COLLATE NOCASE ASC, (((('1331461429')||(rt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, ((rt0.c1)>(rt0.c2)) COLLATE NOCASE ASC, (((('1331461429')||(rt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END) ORDER BY rt0.c2, ((rt0.c1)>(rt0.c2)) COLLATE NOCASE ASC, (((('1331461429')||(rt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, ((rt0.c1)>(rt0.c2)) COLLATE NOCASE ASC, (((('1331461429')||(rt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c1 IN ()) END) ORDER BY rt0.c2, ((rt0.c1)>(rt0.c2)) COLLATE NOCASE ASC, (((('1331461429')||(rt0.c1))) IS FALSE) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c2)=(NULL))))) ORDER BY COALESCE(DISTINCT rt0.c1, (((vt0.c0))>=((vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c2)=(NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(DISTINCT rt0.c1, (((vt0.c0))>=((vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c2)=(NULL))))) ORDER BY COALESCE(DISTINCT rt0.c1, (((vt0.c0))>=((vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c2)=(NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(DISTINCT rt0.c1, (((vt0.c0))>=((vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c2)=(NULL))))) ORDER BY COALESCE(DISTINCT rt0.c1, (((vt0.c0))>=((vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))AND('''vg?<+')))AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) ISNULL) END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)OR(vt0.c0)))AND('''vg?<+')))AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))AND('''vg?<+')))AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) ISNULL) END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)OR(vt0.c0)))AND('''vg?<+')))AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))AND('''vg?<+')))AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0) ISNULL) END) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((0X3e1d9be) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) ORDER BY (((vt0.c0 IN ()))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((0X3e1d9be) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN ()))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((0X3e1d9be) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) ORDER BY (((vt0.c0 IN ()))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((0X3e1d9be) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN ()))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((0X3e1d9be) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) ORDER BY (((vt0.c0 IN ()))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY ((((vt0.c0)AND((((vt0.c1))!=((vt0.c0))))))AND((((vt0.c0))>((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND((((vt0.c1))!=((vt0.c0))))))AND((((vt0.c0))>((vt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY ((((vt0.c0)AND((((vt0.c1))!=((vt0.c0))))))AND((((vt0.c0))>((vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND((((vt0.c1))!=((vt0.c0))))))AND((((vt0.c0))>((vt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY ((((vt0.c0)AND((((vt0.c1))!=((vt0.c0))))))AND((((vt0.c0))>((vt0.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.7657945268150467));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.7657945268150467)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.7657945268150467));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.7657945268150467)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), 0.7657945268150467));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB)) ORDER BY ((vt0.c1) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1)))) AND (vt0.c1 COLLATE BINARY)), ((x'9c32') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1)))) AND (vt0.c1 COLLATE BINARY)), ((x'9c32') NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB)) ORDER BY ((vt0.c1) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1)))) AND (vt0.c1 COLLATE BINARY)), ((x'9c32') NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1)))) AND (vt0.c1 COLLATE BINARY)), ((x'9c32') NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB)) ORDER BY ((vt0.c1) BETWEEN ((((vt0.c1, vt0.c1, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1)))) AND (vt0.c1 COLLATE BINARY)), ((x'9c32') NOT NULL) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_insert(rt0.c0, ((vt0.c1) BETWEEN (rt0.c1) AND (x'')), (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(rt0.c0, ((vt0.c1) BETWEEN (rt0.c1) AND (x'')), (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_insert(rt0.c0, ((vt0.c1) BETWEEN (rt0.c1) AND (x'')), (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(rt0.c0, ((vt0.c1) BETWEEN (rt0.c1) AND (x'')), (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_insert(rt0.c0, ((vt0.c1) BETWEEN (rt0.c1) AND (x'')), (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) ORDER BY (+ (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, ((rt0.c0 IN ()) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, ((rt0.c0 IN ()) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, rt0.c1)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) ORDER BY (+ (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, ((rt0.c0 IN ()) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (+ (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, ((rt0.c0 IN ()) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, rt0.c1)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) ORDER BY (+ (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1))))  NULLS FIRST, ((rt0.c0 IN ()) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, rt0.c1)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (x'5cc4') ORDER BY ((NULL) NOT BETWEEN (((rt0.c2)+(rt0.c0))) AND (((rt0.c1)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'5cc4') IS TRUE)  as count FROM rt0 ORDER BY ((NULL) NOT BETWEEN (((rt0.c2)+(rt0.c0))) AND (((rt0.c1)+(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'5cc4') ORDER BY ((NULL) NOT BETWEEN (((rt0.c2)+(rt0.c0))) AND (((rt0.c1)+(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'5cc4') IS TRUE)  as count FROM rt0 ORDER BY ((NULL) NOT BETWEEN (((rt0.c2)+(rt0.c0))) AND (((rt0.c1)+(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'5cc4') ORDER BY ((NULL) NOT BETWEEN (((rt0.c2)+(rt0.c0))) AND (((rt0.c1)+(rt0.c1))))  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)) IN ()) WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)) IN ()));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)) IN ()) WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)) IN ()));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)) IN ()) WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE (((((((((((((vt0.c0)AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((rt0.c0) BETWEEN (1339953424) AND (rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(rt0.c1)))OR((((rt0.c0, rt0.c1, vt0.c1))=((rt0.c1, rt0.c0, rt0.c1))))))OR(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((rt0.c0) BETWEEN (1339953424) AND (rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(rt0.c1)))OR((((rt0.c0, rt0.c1, vt0.c1))=((rt0.c1, rt0.c0, rt0.c1))))))OR(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((((vt0.c0)AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((rt0.c0) BETWEEN (1339953424) AND (rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(rt0.c1)))OR((((rt0.c0, rt0.c1, vt0.c1))=((rt0.c1, rt0.c0, rt0.c1))))))OR(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((rt0.c0) BETWEEN (1339953424) AND (rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(rt0.c1)))OR((((rt0.c0, rt0.c1, vt0.c1))=((rt0.c1, rt0.c0, rt0.c1))))))OR(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((((((((vt0.c0)AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((rt0.c0) BETWEEN (1339953424) AND (rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(rt0.c1)))OR((((rt0.c0, rt0.c1, vt0.c1))=((rt0.c1, rt0.c0, rt0.c1))))))OR(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))==((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))==((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1))==((vt0.c0))) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c1)))<=((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c1)))<=((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c1)))<=((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c1)))<=((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c1)))<=((- (rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((('1456345943') IS FALSE)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((('1456345943') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((('1456345943') IS FALSE)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((('1456345943') IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((('1456345943') IS FALSE)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)>>(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '0.7997341938284639' END)/(((vt0.c1) ISNULL)))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN '0.7997341938284639' END)/(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '0.7997341938284639' END)/(((vt0.c1) ISNULL)))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN '0.7997341938284639' END)/(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN '0.7997341938284639' END)/(((vt0.c1) ISNULL)))) ORDER BY (((vt0.c1, vt0.c0, vt0.c1))=((vt0.c0, vt0.c1, vt0.c1))) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c1))) AND (LOWER(DISTINCT rt0.c2)))) ORDER BY (((CAST(vt0.c1 AS NUMERIC)))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) BETWEEN (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c1))) AND (LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (((CAST(vt0.c1 AS NUMERIC)))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c1))) AND (LOWER(DISTINCT rt0.c2)))) ORDER BY (((CAST(vt0.c1 AS NUMERIC)))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) BETWEEN (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c1))) AND (LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (((CAST(vt0.c1 AS NUMERIC)))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c1))) AND (LOWER(DISTINCT rt0.c2)))) ORDER BY (((CAST(vt0.c1 AS NUMERIC)))==((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((0.866725047957308) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((rt0.c1)GLOB('')))))) ORDER BY (- (((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((0.866725047957308) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((rt0.c1)GLOB('')))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (- (((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((0.866725047957308) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((rt0.c1)GLOB('')))))) ORDER BY (- (((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((0.866725047957308) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((rt0.c1)GLOB('')))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY (- (((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((0.866725047957308) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((rt0.c1)GLOB('')))))) ORDER BY (- (((rt0.c2) IS FALSE)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((json_quote(vt0.c0))||(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((json_quote(vt0.c0))||(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((json_quote(vt0.c0))||(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((json_quote(vt0.c0))||(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((json_quote(vt0.c0))||(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.15361996299015335) ORDER BY CASE WHEN DATETIME(rt0.c0, 0.5339535162247429, rt0.c0, rt0.c0, rt0.c1) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL ((0.15361996299015335) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN DATETIME(rt0.c0, 0.5339535162247429, rt0.c0, rt0.c0, rt0.c1) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.15361996299015335) ORDER BY CASE WHEN DATETIME(rt0.c0, 0.5339535162247429, rt0.c0, rt0.c0, rt0.c1) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL ((0.15361996299015335) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN DATETIME(rt0.c0, 0.5339535162247429, rt0.c0, rt0.c0, rt0.c1) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.15361996299015335) ORDER BY CASE WHEN DATETIME(rt0.c0, 0.5339535162247429, rt0.c0, rt0.c0, rt0.c1) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS REAL))>>(((0.34729927365476776) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))>>(((0.34729927365476776) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS REAL))>>(((0.34729927365476776) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))>>(((0.34729927365476776) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS REAL))>>(((0.34729927365476776) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN (NULL)))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN (NULL)))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN (NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((~ (rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((~ (rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((~ (rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((~ (rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN ((~ (rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((x'')<(rt0.c0))))) WHERE ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((x'')<(rt0.c0))))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((x'')<(rt0.c0))))) WHERE ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((x'')<(rt0.c0))))));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((x'')<(rt0.c0))))) WHERE ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (((((x'')OR(((((x'8ead')AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY 0Xfffffffff653848d DESC;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((((x'8ead')AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0xfffffffff653848d DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((x'')OR(((((x'8ead')AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY 0Xfffffffff653848d DESC;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((((x'8ead')AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0xfffffffff653848d DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((x'')OR(((((x'8ead')AND(rt0.c2)))OR(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY 0Xfffffffff653848d DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1 COLLATE NOCASE)OR(((x'babe') ISNULL))))OR(UNLIKELY(DISTINCT vt0.c0))))AND(NULL)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE NOCASE)OR(((x'babe') ISNULL))))OR(UNLIKELY(DISTINCT vt0.c0))))AND(NULL)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1 COLLATE NOCASE)OR(((x'babe') ISNULL))))OR(UNLIKELY(DISTINCT vt0.c0))))AND(NULL)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1 COLLATE NOCASE)OR(((x'babe') ISNULL))))OR(UNLIKELY(DISTINCT vt0.c0))))AND(NULL)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1 COLLATE NOCASE)OR(((x'babe') ISNULL))))OR(UNLIKELY(DISTINCT vt0.c0))))AND(NULL)))AND(vt0.c1)));
SELECT * FROM vt0 WHERE (CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS TEXT));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) WHERE (CASE WHEN rt0.c0 THEN '1331461429' ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))+((+ ('852333970')))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN '1331461429' ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) ORDER BY ((((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))+((+ ('852333970')))) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) WHERE (CASE WHEN rt0.c0 THEN '1331461429' ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))+((+ ('852333970')))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN '1331461429' ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) ORDER BY ((((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))+((+ ('852333970')))) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2))) NOTNULL) WHERE (CASE WHEN rt0.c0 THEN '1331461429' ELSE rt0.c0 END COLLATE RTRIM) ORDER BY ((((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))+((+ ('852333970')))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((0.016917541022734794 IN (rt0.c2)))<=(rt0.c2)) WHERE (((((vt0.c1)OR(((vt0.c0) BETWEEN ('pTE\rdF]/') AND (0.6257170207002646)))))AND(((rt0.c0)GLOB(vt0.c1))))) ORDER BY LOWER(((rt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(((vt0.c0) BETWEEN ('pTE\rdF]/') AND (0.6257170207002646)))))AND(((rt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((0.016917541022734794 IN (rt0.c2)))<=(rt0.c2)) ORDER BY LOWER(((rt0.c0) IS TRUE)) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((0.016917541022734794 IN (rt0.c2)))<=(rt0.c2)) WHERE (((((vt0.c1)OR(((vt0.c0) BETWEEN ('pTE\rdF]/') AND (0.6257170207002646)))))AND(((rt0.c0)GLOB(vt0.c1))))) ORDER BY LOWER(((rt0.c0) IS TRUE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(((vt0.c0) BETWEEN ('pTE\rdF]/') AND (0.6257170207002646)))))AND(((rt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((0.016917541022734794 IN (rt0.c2)))<=(rt0.c2)) ORDER BY LOWER(((rt0.c0) IS TRUE)) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((0.016917541022734794 IN (rt0.c2)))<=(rt0.c2)) WHERE (((((vt0.c1)OR(((vt0.c0) BETWEEN ('pTE\rdF]/') AND (0.6257170207002646)))))AND(((rt0.c0)GLOB(vt0.c1))))) ORDER BY LOWER(((rt0.c0) IS TRUE)) DESC;
SELECT * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))OR(LIKELIHOOD(vt0.c0, 0.7321726363877281))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TRIM(DISTINCT LOWER(DISTINCT vt0.c1), vt0.c1 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))OR(LIKELIHOOD(vt0.c0, 0.7321726363877281))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT LOWER(DISTINCT vt0.c1), vt0.c1 COLLATE BINARY)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))OR(LIKELIHOOD(vt0.c0, 0.7321726363877281))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TRIM(DISTINCT LOWER(DISTINCT vt0.c1), vt0.c1 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))OR(LIKELIHOOD(vt0.c0, 0.7321726363877281))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT LOWER(DISTINCT vt0.c1), vt0.c1 COLLATE BINARY)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))OR(LIKELIHOOD(vt0.c0, 0.7321726363877281))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TRIM(DISTINCT LOWER(DISTINCT vt0.c1), vt0.c1 COLLATE BINARY)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1)GLOB(rt0.c1)) COLLATE RTRIM) ORDER BY vt0.c1;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON STRFTIME(LOWER(rt0.c0), ((rt0.c1)OR(rt0.c2)), CAST(rt0.c1 AS TEXT)) WHERE ((((~ (vt0.c1))) NOT BETWEEN ('6\rs,r') AND (((NULL)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) NOT BETWEEN ('6\rs,r') AND (((NULL)<>(vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON STRFTIME(LOWER(rt0.c0), ((rt0.c1)OR(rt0.c2)), CAST(rt0.c1 AS TEXT)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON STRFTIME(LOWER(rt0.c0), ((rt0.c1)OR(rt0.c2)), CAST(rt0.c1 AS TEXT)) WHERE ((((~ (vt0.c1))) NOT BETWEEN ('6\rs,r') AND (((NULL)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) NOT BETWEEN ('6\rs,r') AND (((NULL)<>(vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON STRFTIME(LOWER(rt0.c0), ((rt0.c1)OR(rt0.c2)), CAST(rt0.c1 AS TEXT)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON STRFTIME(LOWER(rt0.c0), ((rt0.c1)OR(rt0.c2)), CAST(rt0.c1 AS TEXT)) WHERE ((((~ (vt0.c1))) NOT BETWEEN ('6\rs,r') AND (((NULL)!=(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((vt0.c1)GLOB(vt0.c0))))) ORDER BY (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((rt0.c0)!=(x''))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((rt0.c0)<>(x''))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((vt0.c1)GLOB(vt0.c0))))) ORDER BY (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((rt0.c0)!=(x''))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((rt0.c0)<>(x''))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((vt0.c1)GLOB(vt0.c0))))) ORDER BY (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c1, vt0.c1)) AND ((rt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((rt0.c0)!=(x''))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 END)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) ORDER BY '731142952'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '731142952'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) ORDER BY '731142952'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '731142952'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1) NOT NULL) IN ())) ORDER BY '731142952'  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((TRIM(DISTINCT vt0.c0, vt0.c0))<(CAST(vt0.c1 AS REAL))) WHERE (CAST(CASE WHEN vt0.c1 THEN rt0.c0 END AS TEXT)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM, CAST(rt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((TRIM(DISTINCT vt0.c0, vt0.c0))<(CAST(vt0.c1 AS REAL))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM, CAST(rt0.c0 AS TEXT) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((TRIM(DISTINCT vt0.c0, vt0.c0))<(CAST(vt0.c1 AS REAL))) WHERE (CAST(CASE WHEN vt0.c1 THEN rt0.c0 END AS TEXT)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM, CAST(rt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((TRIM(DISTINCT vt0.c0, vt0.c0))<(CAST(vt0.c1 AS REAL))) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM, CAST(rt0.c0 AS TEXT) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((TRIM(DISTINCT vt0.c0, vt0.c0))<(CAST(vt0.c1 AS REAL))) WHERE (CAST(CASE WHEN vt0.c1 THEN rt0.c0 END AS TEXT)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END COLLATE RTRIM, CAST(rt0.c0 AS TEXT) ASC;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)|(rt0.c2)) IN ()) WHERE (((((((vt0.c1)OR(vt0.c0)))AND(x'')))OR(((rt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c0)))AND(x'')))OR(((rt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)|(rt0.c2)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)|(rt0.c2)) IN ()) WHERE (((((((vt0.c1)OR(vt0.c0)))AND(x'')))OR(((rt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c0)))AND(x'')))OR(((rt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)|(rt0.c2)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c2)|(rt0.c2)) IN ()) WHERE (((((((vt0.c1)OR(vt0.c0)))AND(x'')))OR(((rt0.c0)|(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS NOT(rt0.c2))))) ORDER BY (((rt0.c0))=((rt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0))==((rt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS NOT(rt0.c2))))) ORDER BY (((rt0.c0))=((rt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0))==((rt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS NOT(rt0.c2))))) ORDER BY (((rt0.c0))=((rt0.c0))) COLLATE RTRIM;
SELECT * FROM vt0 WHERE ('124363636');
SELECT SUM(count) FROM (SELECT (('124363636') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('124363636');
SELECT SUM(count) FROM (SELECT (('124363636') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('124363636');
SELECT * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c0))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c1, vt0.c0))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c0))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c1, vt0.c0))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c1, vt0.c0))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0 COLLATE NOCASE)/(HEX(0.34729927365476776)))  NULLS LAST, ((LAST_INSERT_ROWID()) IS TRUE) DESC, (((NOT (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)/(HEX(0.34729927365476776)))  NULLS LAST, ((LAST_INSERT_ROWID()) IS TRUE) DESC, (((NOT (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0 COLLATE NOCASE)/(HEX(0.34729927365476776)))  NULLS LAST, ((LAST_INSERT_ROWID()) IS TRUE) DESC, (((NOT (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)/(HEX(0.34729927365476776)))  NULLS LAST, ((LAST_INSERT_ROWID()) IS TRUE) DESC, (((NOT (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0 COLLATE NOCASE)/(HEX(0.34729927365476776)))  NULLS LAST, ((LAST_INSERT_ROWID()) IS TRUE) DESC, (((NOT (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((((((NULL)>(vt0.c0)))OR(json_patch(1635776082, rt0.c2))))AND('1133565039'))) ORDER BY LIKELIHOOD((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0.7099900933992195)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)>(vt0.c0)))OR(json_patch(1635776082, rt0.c2))))AND('1133565039'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0.7099900933992195)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((((NULL)>(vt0.c0)))OR(json_patch(1635776082, rt0.c2))))AND('1133565039'))) ORDER BY LIKELIHOOD((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0.7099900933992195)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)>(vt0.c0)))OR(json_patch(1635776082, rt0.c2))))AND('1133565039'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0.7099900933992195)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((((NULL)>(vt0.c0)))OR(json_patch(1635776082, rt0.c2))))AND('1133565039'))) ORDER BY LIKELIHOOD((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c1))), 0.7099900933992195)  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0))>(((NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>(((NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))>(((NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>(((NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))>(((NOT (vt0.c1))))));
SELECT * FROM vt0, rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))==(((('65132990')-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))=(((('65132990')-(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))==(((('65132990')-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))=(((('65132990')-(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))==(((('65132990')-(rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOTNULL)))) ORDER BY CAST(((vt0.c0)<(vt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOTNULL)))) ORDER BY CAST(((vt0.c0)<(vt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1) NOTNULL)))) ORDER BY CAST(((vt0.c0)<(vt0.c1)) AS REAL);
SELECT * FROM vt0 INNER JOIN rt0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (json_type(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (json_type(vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 INNER JOIN rt0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (json_type(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (json_type(vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 INNER JOIN rt0 ON (- (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c1)))) WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (json_type(vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) AND ((json_array(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c1)))<>((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) AND ((json_array(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c1)))!=((vt0.c1 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) AND ((json_array(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c1)))<>((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) AND ((json_array(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c1)))!=((vt0.c1 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) AND ((json_array(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)AND(vt0.c1)))<>((vt0.c1 IN ()))) ASC;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c0))<((vt0.c1))) AS NUMERIC) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c0))<((vt0.c1))) AS NUMERIC));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c0))<((vt0.c1))) AS NUMERIC) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c0))<((vt0.c1))) AS NUMERIC));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c0))<((vt0.c1))) AS NUMERIC) WHERE (rt0.c2);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.46002961137753395)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.46002961137753395)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.46002961137753395)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.46002961137753395)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.46002961137753395)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY CASE rt0.c1  WHEN '-1999403757' THEN rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN '-1999403757' THEN rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY CASE rt0.c1  WHEN '-1999403757' THEN rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN '-1999403757' THEN rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY CASE rt0.c1  WHEN '-1999403757' THEN rt0.c1 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)OR(vt0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (~ (CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)) WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY rt0.c1 DESC, (LOWER(DISTINCT rt0.c2) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (~ (CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)) ORDER BY rt0.c1 DESC, (LOWER(DISTINCT rt0.c2) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (~ (CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)) WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY rt0.c1 DESC, (LOWER(DISTINCT rt0.c2) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (~ (CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)) ORDER BY rt0.c1 DESC, (LOWER(DISTINCT rt0.c2) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (~ (CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 END)) WHERE (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM) ORDER BY rt0.c1 DESC, (LOWER(DISTINCT rt0.c2) IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(rt0.c0)))OR(rt0.c2))) ORDER BY json_valid((~ (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS BLOB))AND(rt0.c0)))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY json_valid((~ (NULL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(rt0.c0)))OR(rt0.c2))) ORDER BY json_valid((~ (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS BLOB))AND(rt0.c0)))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY json_valid((~ (NULL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(rt0.c0)))OR(rt0.c2))) ORDER BY json_valid((~ (NULL)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c2)) BETWEEN (x'') AND (CAST(rt0.c2 AS BLOB)))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) BETWEEN (x'') AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)<=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c2)) BETWEEN (x'') AND (CAST(rt0.c2 AS BLOB)))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2)) BETWEEN (x'') AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)<=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((HEX(rt0.c2)) BETWEEN (x'') AND (CAST(rt0.c2 AS BLOB)))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c1)<=(rt0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, ((vt0.c1)<<('')), CAST(rt0.c2 AS NUMERIC)))<=((vt0.c0, CASE WHEN vt0.c1 THEN rt0.c1 END, vt0.c0))) WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, ((vt0.c1)<<('')), CAST(rt0.c2 AS NUMERIC)))<=((vt0.c0, CASE WHEN vt0.c1 THEN rt0.c1 END, vt0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, ((vt0.c1)<<('')), CAST(rt0.c2 AS NUMERIC)))<=((vt0.c0, CASE WHEN vt0.c1 THEN rt0.c1 END, vt0.c0))) WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, ((vt0.c1)<<('')), CAST(rt0.c2 AS NUMERIC)))<=((vt0.c0, CASE WHEN vt0.c1 THEN rt0.c1 END, vt0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((rt0.c1, ((vt0.c1)<<('')), CAST(rt0.c2 AS NUMERIC)))<=((vt0.c0, CASE WHEN vt0.c1 THEN rt0.c1 END, vt0.c0))) WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)IS NOT(0.016917541022734794)))==(0.6916986730844756))) ORDER BY ((((CAST(rt0.c2 AS REAL))AND((((rt0.c1))<>((rt0.c1))))))AND(0X473bacdf));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(0.016917541022734794)))==(0.6916986730844756))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(rt0.c2 AS REAL))AND((((rt0.c1))!=((rt0.c1))))))AND(0x473bacdf)));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)IS NOT(0.016917541022734794)))==(0.6916986730844756))) ORDER BY ((((CAST(rt0.c2 AS REAL))AND((((rt0.c1))<>((rt0.c1))))))AND(0X473bacdf));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(0.016917541022734794)))==(0.6916986730844756))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(rt0.c2 AS REAL))AND((((rt0.c1))!=((rt0.c1))))))AND(0x473bacdf)));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)IS NOT(0.016917541022734794)))==(0.6916986730844756))) ORDER BY ((((CAST(rt0.c2 AS REAL))AND((((rt0.c1))<>((rt0.c1))))))AND(0X473bacdf));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((x'', rt0.c2, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), ((vt0.c1)IS(vt0.c1)), ((rt0.c1)IS(vt0.c0)), rt0.c1, HEX(vt0.c1))) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(vt0.c1)))AND(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (('-1999403757')LIKE(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'', rt0.c2, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), ((vt0.c1)IS(vt0.c1)), ((rt0.c1)IS(vt0.c0)), rt0.c1, HEX(vt0.c1))) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(vt0.c1)))AND(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (('-1999403757')LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((x'', rt0.c2, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), ((vt0.c1)IS(vt0.c1)), ((rt0.c1)IS(vt0.c0)), rt0.c1, HEX(vt0.c1))) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(vt0.c1)))AND(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (('-1999403757')LIKE(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'', rt0.c2, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), ((vt0.c1)IS(vt0.c1)), ((rt0.c1)IS(vt0.c0)), rt0.c1, HEX(vt0.c1))) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(vt0.c1)))AND(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (('-1999403757')LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((x'', rt0.c2, vt0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((((((((((NULL)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)), ((vt0.c1)IS(vt0.c1)), ((rt0.c1)IS(vt0.c0)), rt0.c1, HEX(vt0.c1))) AND ((rt0.c2 COLLATE BINARY, ((((NULL)AND(vt0.c1)))AND(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), (('-1999403757')LIKE(vt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((x'', rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, vt0.c1))))>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((x'', rt0.c2, rt0.c2))==((rt0.c2, vt0.c0, vt0.c1))))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((x'', rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, vt0.c1))))>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((x'', rt0.c2, rt0.c2))==((rt0.c2, vt0.c0, vt0.c1))))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((x'', rt0.c2, rt0.c2))=((rt0.c2, vt0.c0, vt0.c1))))>(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOTNULL) WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))&(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))&(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOTNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOTNULL) WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))&(((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))&(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOTNULL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOTNULL) WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))&(((vt0.c0)OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN UNICODE(vt0.c0) WHEN MAX(vt0.c1, vt0.c0) THEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) WHEN (((vt0.c0))<=((vt0.c1))) THEN CAST(vt0.c0 AS INTEGER) ELSE (((vt0.c0))<=((vt0.c1))) END) ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN UNICODE(vt0.c0) WHEN MAX(vt0.c1, vt0.c0) THEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) WHEN (((vt0.c0))<=((vt0.c1))) THEN CAST(vt0.c0 AS INTEGER) ELSE (((vt0.c0))<=((vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN UNICODE(vt0.c0) WHEN MAX(vt0.c1, vt0.c0) THEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) WHEN (((vt0.c0))<=((vt0.c1))) THEN CAST(vt0.c0 AS INTEGER) ELSE (((vt0.c0))<=((vt0.c1))) END) ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN UNICODE(vt0.c0) WHEN MAX(vt0.c1, vt0.c0) THEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) WHEN (((vt0.c0))<=((vt0.c1))) THEN CAST(vt0.c0 AS INTEGER) ELSE (((vt0.c0))<=((vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN UNICODE(vt0.c0) WHEN MAX(vt0.c1, vt0.c0) THEN (((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) WHEN (((vt0.c0))<=((vt0.c1))) THEN CAST(vt0.c0 AS INTEGER) ELSE (((vt0.c0))<=((vt0.c1))) END) ORDER BY ((vt0.c1) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (TRIM((((rt0.c2))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt0.c2))<=((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM((((rt0.c2))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt0.c2))<=((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM((((rt0.c2))<=((rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)OR((~ (rt0.c1)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)OR((~ (rt0.c1)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)OR((~ (rt0.c1)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)OR((~ (rt0.c1)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)OR((~ (rt0.c1)))))OR(rt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(((vt0.c0)>(vt0.c1)), vt0.c1)) ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c0)|(vt0.c0)))))OR(1329293785));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt0.c0)>(vt0.c1)), vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c0)|(vt0.c0)))))OR(1329293785)));
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(((vt0.c0)>(vt0.c1)), vt0.c1)) ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c0)|(vt0.c0)))))OR(1329293785));
SELECT SUM(count) FROM (SELECT ALL ((MIN(((vt0.c0)>(vt0.c1)), vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c0)|(vt0.c0)))))OR(1329293785)));
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(((vt0.c0)>(vt0.c1)), vt0.c1)) ORDER BY (((((vt0.c1 IN ()))AND(((vt0.c0)|(vt0.c0)))))OR(1329293785));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((x'09b3', rt0.c1 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((x'09b3', rt0.c1 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((x'09b3', rt0.c1 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((x'09b3', rt0.c1 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((x'09b3', rt0.c1 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))) ORDER BY rt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0))) ORDER BY (((NOT (vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0))) ORDER BY (((NOT (vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0))) ORDER BY (((NOT (vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)|(CASE WHEN rt0.c2 THEN vt0.c0 END)) WHERE ((((vt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)|(CASE WHEN rt0.c2 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)|(CASE WHEN rt0.c2 THEN vt0.c0 END)) WHERE ((((vt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)|(CASE WHEN rt0.c2 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 END)|(CASE WHEN rt0.c2 THEN vt0.c0 END)) WHERE ((((vt0.c1) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)GLOB(((rt0.c2)==(rt0.c2))))) ORDER BY (((rt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c1)), CASE rt0.c2  WHEN '-1878533502' THEN vt0.c0 ELSE rt0.c2 END, ((((vt0.c0)OR('0.6455545393569523')))OR(vt0.c0)))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(((rt0.c2)=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c1)), CASE rt0.c2  WHEN '-1878533502' THEN vt0.c0 ELSE rt0.c2 END, ((((vt0.c0)OR('0.6455545393569523')))OR(vt0.c0)))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)GLOB(((rt0.c2)==(rt0.c2))))) ORDER BY (((rt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c1)), CASE rt0.c2  WHEN '-1878533502' THEN vt0.c0 ELSE rt0.c2 END, ((((vt0.c0)OR('0.6455545393569523')))OR(vt0.c0)))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(((rt0.c2)=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c1)), CASE rt0.c2  WHEN '-1878533502' THEN vt0.c0 ELSE rt0.c2 END, ((((vt0.c0)OR('0.6455545393569523')))OR(vt0.c0)))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0)GLOB(((rt0.c2)==(rt0.c2))))) ORDER BY (((rt0.c1, vt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c1)), CASE rt0.c2  WHEN '-1878533502' THEN vt0.c0 ELSE rt0.c2 END, ((((vt0.c0)OR('0.6455545393569523')))OR(vt0.c0)))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('1622463565')))))AND((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY '-1387966621'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('1622463565')))))AND((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY '-1387966621'  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('1622463565')))))AND((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY '-1387966621'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('1622463565')))))AND((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY '-1387966621'  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c2)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND ('1622463565')))))AND((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) ORDER BY '-1387966621'  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/(((((-608236318)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)/(((((-608236318)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/(((((-608236318)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)/(((((-608236318)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/(((((-608236318)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1)==(rt0.c1)))>=(((((((((vt0.c1)AND(vt0.c1)))OR('-1532331468')))AND(rt0.c0)))AND(vt0.c1))))) ORDER BY x'150a'  NULLS LAST, (((((vt0.c0))<=((rt0.c0)))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END) AND ((rt0.c0 IN (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)=(rt0.c1)))>=(((((((((vt0.c1)AND(vt0.c1)))OR('-1532331468')))AND(rt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'150a'  NULLS LAST, (((((vt0.c0))<=((rt0.c0)))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END) AND ((rt0.c0 IN (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1)==(rt0.c1)))>=(((((((((vt0.c1)AND(vt0.c1)))OR('-1532331468')))AND(rt0.c0)))AND(vt0.c1))))) ORDER BY x'150a'  NULLS LAST, (((((vt0.c0))<=((rt0.c0)))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END) AND ((rt0.c0 IN (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)=(rt0.c1)))>=(((((((((vt0.c1)AND(vt0.c1)))OR('-1532331468')))AND(rt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'150a'  NULLS LAST, (((((vt0.c0))<=((rt0.c0)))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END) AND ((rt0.c0 IN (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1)==(rt0.c1)))>=(((((((((vt0.c1)AND(vt0.c1)))OR('-1532331468')))AND(rt0.c0)))AND(vt0.c1))))) ORDER BY x'150a'  NULLS LAST, (((((vt0.c0))<=((rt0.c0)))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 END) AND ((rt0.c0 IN (rt0.c2)))) DESC;
SELECT * FROM rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)>=(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(-1e500))))) ORDER BY (((((((((rt0.c2)OR('')))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)>=(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(-1e500))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)OR('')))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)>=(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(-1e500))))) ORDER BY (((((((((rt0.c2)OR('')))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)>=(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(-1e500))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)OR('')))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)>=(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(-1e500))))) ORDER BY (((((((((rt0.c2)OR('')))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR((((rt0.c2))<((rt0.c2))))))OR(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((((rt0.c2))<((rt0.c2))))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR((((rt0.c2))<((rt0.c2))))))OR(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((((rt0.c2))<((rt0.c2))))))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR((((rt0.c2))<((rt0.c2))))))OR(((rt0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE ('3S');
SELECT SUM(count) FROM (SELECT ALL (('3S') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('3S');
SELECT SUM(count) FROM (SELECT ALL (('3S') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('3S');
SELECT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2))IS((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(rt0.c2))IS((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2))IS((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(rt0.c2))IS((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c2))IS((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ()) WHERE (json_insert(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)), LIKELIHOOD(vt0.c1, 0.6952586121443267), (((rt0.c2))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((json_insert(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)), LIKELIHOOD(vt0.c1, 0.6952586121443267), (((rt0.c2))=((vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ()) WHERE (json_insert(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)), LIKELIHOOD(vt0.c1, 0.6952586121443267), (((rt0.c2))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((json_insert(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)), LIKELIHOOD(vt0.c1, 0.6952586121443267), (((rt0.c2))=((vt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END IN ()) WHERE (json_insert(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)), LIKELIHOOD(vt0.c1, 0.6952586121443267), (((rt0.c2))==((vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1, vt0.c1, '1351113694', vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c2)))))>((((rt0.c2)>(rt0.c0)))))) ORDER BY CASE WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) END ASC, NULL COLLATE NOCASE, (((- (rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))) AND (TRIM(vt0.c1, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1, vt0.c1, '1351113694', vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c2)))))>((((rt0.c2)>(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) END ASC, NULL COLLATE NOCASE, (((- (rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))) AND (TRIM(vt0.c1, rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1, vt0.c1, '1351113694', vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c2)))))>((((rt0.c2)>(rt0.c0)))))) ORDER BY CASE WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) END ASC, NULL COLLATE NOCASE, (((- (rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))) AND (TRIM(vt0.c1, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1, vt0.c1, '1351113694', vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c2)))))>((((rt0.c2)>(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) END ASC, NULL COLLATE NOCASE, (((- (rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))) AND (TRIM(vt0.c1, rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1, vt0.c1, '1351113694', vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c2)))))>((((rt0.c2)>(rt0.c0)))))) ORDER BY CASE WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)) END ASC, NULL COLLATE NOCASE, (((- (rt0.c2))) NOT BETWEEN (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0))) AND (TRIM(vt0.c1, rt0.c2))) ASC;
SELECT * FROM vt0 WHERE (x'') ORDER BY (~ (((vt0.c1) BETWEEN (',K') AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) BETWEEN (',K') AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (~ (((vt0.c1) BETWEEN (',K') AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) BETWEEN (',K') AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY (~ (((vt0.c1) BETWEEN (',K') AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 NOT INDEXED WHERE (rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY UNLIKELY(DISTINCT ((rt0.c0)<=(rt0.c0))), (((('0.6916986730844756')OR((- ('C#')))))AND(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c0)<=(rt0.c0))), (((('0.6916986730844756')OR((- ('C#')))))AND(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY UNLIKELY(DISTINCT ((rt0.c0)<=(rt0.c0))), (((('0.6916986730844756')OR((- ('C#')))))AND(rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c0)<=(rt0.c0))), (((('0.6916986730844756')OR((- ('C#')))))AND(rt0.c2)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY UNLIKELY(DISTINCT ((rt0.c0)<=(rt0.c0))), (((('0.6916986730844756')OR((- ('C#')))))AND(rt0.c2)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (+ (0.7716895372547562)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (0.7716895372547562)) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (+ (0.7716895372547562)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (0.7716895372547562)) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (vt0.c0 COLLATE RTRIM))) ORDER BY (+ (0.7716895372547562)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) ISNULL)) ORDER BY SQLITE_SOURCE_ID();
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2, '-691254012', rt0.c2, rt0.c1, rt0.c0, vt0.c1, 0x333c9843)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, rt0.c2, vt0.c0, vt0.c1)) AND ((x'440a', rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c2))) IN ())) ORDER BY (((((rt0.c0))<>((vt0.c1))))>>(((vt0.c0)>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, '-691254012', rt0.c2, rt0.c1, rt0.c0, vt0.c1, 0X333c9843)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, rt0.c2, vt0.c0, vt0.c1)) AND ((x'440a', rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((rt0.c0))<>((vt0.c1))))>>(((vt0.c0)>(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2, '-691254012', rt0.c2, rt0.c1, rt0.c0, vt0.c1, 0x333c9843)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, rt0.c2, vt0.c0, vt0.c1)) AND ((x'440a', rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c2))) IN ())) ORDER BY (((((rt0.c0))<>((vt0.c1))))>>(((vt0.c0)>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, '-691254012', rt0.c2, rt0.c1, rt0.c0, vt0.c1, 0X333c9843)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, rt0.c2, vt0.c0, vt0.c1)) AND ((x'440a', rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (((((rt0.c0))<>((vt0.c1))))>>(((vt0.c0)>(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2, '-691254012', rt0.c2, rt0.c1, rt0.c0, vt0.c1, 0x333c9843)) NOT BETWEEN ((NULL, vt0.c1, vt0.c1, vt0.c0, rt0.c2, vt0.c0, vt0.c1)) AND ((x'440a', rt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c2))) IN ())) ORDER BY (((((rt0.c0))<>((vt0.c1))))>>(((vt0.c0)>(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT * FROM vt0 WHERE (((((2053163305)OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (8.5233397E8) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((2053163305)OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (8.5233397E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((2053163305)OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (8.5233397E8) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((2053163305)OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (8.5233397E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((2053163305)OR(UNLIKELY(vt0.c0))))OR(((vt0.c0) BETWEEN (8.5233397E8) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((-1271678692 IN ()));
SELECT SUM(count) FROM (SELECT (((-1271678692 IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((-1271678692 IN ()));
SELECT SUM(count) FROM (SELECT (((-1271678692 IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((-1271678692 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(0x617ff652)))AND(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(0X617ff652)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(0x617ff652)))AND(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(0X617ff652)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(0x617ff652)))AND(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0X4ce01ab8 THEN vt0.c0 END) NOT BETWEEN (((rt0.c1)*(1.456345943E9))) AND (((rt0.c0)IS(vt0.c1))))) ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC)  NULLS LAST, ((TRIM(DISTINCT vt0.c1, rt0.c0))<<(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0X4ce01ab8 THEN vt0.c0 END) NOT BETWEEN (((rt0.c1)*(1.456345943E9))) AND (((rt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC)  NULLS LAST, ((TRIM(DISTINCT vt0.c1, rt0.c0))<<(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0X4ce01ab8 THEN vt0.c0 END) NOT BETWEEN (((rt0.c1)*(1.456345943E9))) AND (((rt0.c0)IS(vt0.c1))))) ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC)  NULLS LAST, ((TRIM(DISTINCT vt0.c1, rt0.c0))<<(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0X4ce01ab8 THEN vt0.c0 END) NOT BETWEEN (((rt0.c1)*(1.456345943E9))) AND (((rt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC)  NULLS LAST, ((TRIM(DISTINCT vt0.c1, rt0.c0))<<(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0X4ce01ab8 THEN vt0.c0 END) NOT BETWEEN (((rt0.c1)*(1.456345943E9))) AND (((rt0.c0)IS(vt0.c1))))) ORDER BY CAST(((rt0.c1) NOT NULL) AS NUMERIC)  NULLS LAST, ((TRIM(DISTINCT vt0.c1, rt0.c0))<<(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT)) ORDER BY (((((rt0.c1)AND('^emc')), (- (NULL)), CAST(rt0.c2 AS INTEGER)))==((CAST(0.2188996770291738 AS INTEGER), (((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0))), CAST(rt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)AND('^emc')), (- (NULL)), CAST(rt0.c2 AS INTEGER)))=((CAST(0.2188996770291738 AS INTEGER), (((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0))), CAST(rt0.c0 AS BLOB)))) ASC);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT)) ORDER BY (((((rt0.c1)AND('^emc')), (- (NULL)), CAST(rt0.c2 AS INTEGER)))==((CAST(0.2188996770291738 AS INTEGER), (((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0))), CAST(rt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)AND('^emc')), (- (NULL)), CAST(rt0.c2 AS INTEGER)))=((CAST(0.2188996770291738 AS INTEGER), (((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0))), CAST(rt0.c0 AS BLOB)))) ASC);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END AS TEXT)) ORDER BY (((((rt0.c1)AND('^emc')), (- (NULL)), CAST(rt0.c2 AS INTEGER)))==((CAST(0.2188996770291738 AS INTEGER), (((rt0.c2, rt0.c2, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c0))), CAST(rt0.c0 AS BLOB)))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(rt0.c1)))+(CAST(x'' AS NUMERIC)))) ORDER BY ((CAST(vt0.c1 AS REAL))>>(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c1)))OR(rt0.c1)))+(CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c1 AS REAL))>>(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(rt0.c1)))+(CAST(x'' AS NUMERIC)))) ORDER BY ((CAST(vt0.c1 AS REAL))>>(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c1)))OR(rt0.c1)))+(CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c1 AS REAL))>>(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1)AND(rt0.c1)))OR(rt0.c1)))+(CAST(x'' AS NUMERIC)))) ORDER BY ((CAST(vt0.c1 AS REAL))>>(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) IS FALSE));
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(x'')))OR(vt0.c0)))GLOB(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))GLOB(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(x'')))OR(vt0.c0)))GLOB(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))GLOB(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(x'')))OR(vt0.c0)))GLOB(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT * FROM rt0 WHERE (((rt0.c0)>>(rt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN (+ (rt0.c1)) THEN 0.6951536709669686 WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CHAR(rt0.c0, rt0.c1, rt0.c2) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>>(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN 0.6951536709669686 WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CHAR(rt0.c0, rt0.c1, rt0.c2) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c2 DESC);
SELECT * FROM rt0 WHERE (((rt0.c0)>>(rt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN (+ (rt0.c1)) THEN 0.6951536709669686 WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CHAR(rt0.c0, rt0.c1, rt0.c2) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>>(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN 0.6951536709669686 WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CHAR(rt0.c0, rt0.c1, rt0.c2) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c2 DESC);
SELECT * FROM rt0 WHERE (((rt0.c0)>>(rt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN (+ (rt0.c1)) THEN 0.6951536709669686 WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN CHAR(rt0.c0, rt0.c1, rt0.c2) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END END ASC  NULLS FIRST, rt0.c2 DESC;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS TEXT));
SELECT * FROM vt0, rt0 WHERE ((((NOT (rt0.c2)))AND(((rt0.c1)/(vt0.c0))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))AND(((rt0.c1)/(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((NOT (rt0.c2)))AND(((rt0.c1)/(vt0.c0))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2)))AND(((rt0.c1)/(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((NOT (rt0.c2)))AND(((rt0.c1)/(vt0.c0))))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, rt0.c2))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, rt0.c2))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, rt0.c2))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, rt0.c2))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)) THEN (NOT (vt0.c1)) WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) END) ORDER BY (((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, rt0.c2))) AND ((vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)IS NOT(LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)IS NOT(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)IS NOT(LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)IS NOT(LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)IS NOT(LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL)))) ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL)))) ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END)) AND ((NULL)))) ORDER BY CAST(CAST(NULL AS NUMERIC) AS TEXT);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN '^' THEN LTRIM(rt0.c0) WHEN ((rt0.c2)||(rt0.c1)) THEN (0.3822960853127356 IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END THEN '1289755320' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN '^' THEN LTRIM(rt0.c0) WHEN ((rt0.c2)||(rt0.c1)) THEN (0.3822960853127356 IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END THEN '1289755320' END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN '^' THEN LTRIM(rt0.c0) WHEN ((rt0.c2)||(rt0.c1)) THEN (0.3822960853127356 IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END THEN '1289755320' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN '^' THEN LTRIM(rt0.c0) WHEN ((rt0.c2)||(rt0.c1)) THEN (0.3822960853127356 IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END THEN '1289755320' END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c0  WHEN '^' THEN LTRIM(rt0.c0) WHEN ((rt0.c2)||(rt0.c1)) THEN (0.3822960853127356 IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END THEN '1289755320' END);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c0 AS INTEGER))) WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c0 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c0 AS INTEGER))) WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c0 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c0 AS INTEGER))) WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) AS TEXT)) ORDER BY rt0.c2 ASC, CHAR(rt0.c0 COLLATE RTRIM, NULL, CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END) ASC  NULLS LAST, ((((rt0.c1) NOT NULL))=(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC, CHAR(rt0.c0 COLLATE RTRIM, NULL, CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END) ASC  NULLS LAST, ((((rt0.c1) NOT NULL))=(rt0.c1)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) AS TEXT)) ORDER BY rt0.c2 ASC, CHAR(rt0.c0 COLLATE RTRIM, NULL, CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END) ASC  NULLS LAST, ((((rt0.c1) NOT NULL))=(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC, CHAR(rt0.c0 COLLATE RTRIM, NULL, CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END) ASC  NULLS LAST, ((((rt0.c1) NOT NULL))=(rt0.c1)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) AS TEXT)) ORDER BY rt0.c2 ASC, CHAR(rt0.c0 COLLATE RTRIM, NULL, CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END) ASC  NULLS LAST, ((((rt0.c1) NOT NULL))=(rt0.c1)) DESC;
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY CASE (NOT (rt0.c1))  WHEN ((((rt0.c2)AND(0.30625114284688126)))AND(vt0.c0)) THEN HEX(rt0.c2) ELSE (- (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (NOT (rt0.c1))  WHEN ((((rt0.c2)AND(0.30625114284688126)))AND(vt0.c0)) THEN HEX(rt0.c2) ELSE (- (vt0.c1)) END DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY CASE (NOT (rt0.c1))  WHEN ((((rt0.c2)AND(0.30625114284688126)))AND(vt0.c0)) THEN HEX(rt0.c2) ELSE (- (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (NOT (rt0.c1))  WHEN ((((rt0.c2)AND(0.30625114284688126)))AND(vt0.c0)) THEN HEX(rt0.c2) ELSE (- (vt0.c1)) END DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY CASE (NOT (rt0.c1))  WHEN ((((rt0.c2)AND(0.30625114284688126)))AND(vt0.c0)) THEN HEX(rt0.c2) ELSE (- (vt0.c1)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c2  WHEN rt0.c2 THEN x'' END ELSE (rt0.c0 IN ()) END) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<>(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c2  WHEN rt0.c2 THEN x'' END ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<>(rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c2  WHEN rt0.c2 THEN x'' END ELSE (rt0.c0 IN ()) END) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<>(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c2  WHEN rt0.c2 THEN x'' END ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<>(rt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE rt0.c2  WHEN rt0.c2 THEN x'' END ELSE (rt0.c0 IN ()) END) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<>(rt0.c0)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((x'')+(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'')+(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'')+(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST('' AS REAL)) AND (TOTAL_CHANGES())) DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST('' AS REAL)) AND (TOTAL_CHANGES())) DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST('' AS REAL)) AND (TOTAL_CHANGES())) DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST('' AS REAL)) AND (TOTAL_CHANGES())) DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST('' AS REAL)) AND (TOTAL_CHANGES())) DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY CAST(MIN(rt0.c0, rt0.c1) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(MIN(rt0.c0, rt0.c1) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY CAST(MIN(rt0.c0, rt0.c1) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(MIN(rt0.c0, rt0.c1) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY CAST(MIN(rt0.c0, rt0.c1) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((((((x'')OR((- (rt0.c2)))))OR(((rt0.c1)|(vt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c0)||(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) COLLATE RTRIM, CASE WHEN ((vt0.c1)&(rt0.c2)) THEN (- (vt0.c1)) ELSE rt0.c1 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR((- (rt0.c2)))))OR(((rt0.c1)|(vt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) COLLATE RTRIM, CASE WHEN ((vt0.c1)&(rt0.c2)) THEN (- (vt0.c1)) ELSE rt0.c1 COLLATE RTRIM END DESC);
SELECT * FROM rt0, vt0 WHERE (((((((((x'')OR((- (rt0.c2)))))OR(((rt0.c1)|(vt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c0)||(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) COLLATE RTRIM, CASE WHEN ((vt0.c1)&(rt0.c2)) THEN (- (vt0.c1)) ELSE rt0.c1 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR((- (rt0.c2)))))OR(((rt0.c1)|(vt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) COLLATE RTRIM, CASE WHEN ((vt0.c1)&(rt0.c2)) THEN (- (vt0.c1)) ELSE rt0.c1 COLLATE RTRIM END DESC);
SELECT * FROM rt0, vt0 WHERE (((((((((x'')OR((- (rt0.c2)))))OR(((rt0.c1)|(vt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((rt0.c0)||(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c1, vt0.c0))) COLLATE RTRIM, CASE WHEN ((vt0.c1)&(rt0.c2)) THEN (- (vt0.c1)) ELSE rt0.c1 COLLATE RTRIM END DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (0.5410590202903005 IN ()) THEN ((rt0.c2)*(vt0.c0)) ELSE (((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((vt0.c0, rt0.c1, vt0.c0))) END WHERE ((~ (((vt0.c1)OR(vt0.c1))))) ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN 0xffffffff9007da82 ELSE rt0.c1 END)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (0.5410590202903005 IN ()) THEN ((rt0.c2)*(vt0.c0)) ELSE (((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((vt0.c0, rt0.c1, vt0.c0))) END ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN 0Xffffffff9007da82 ELSE rt0.c1 END)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (0.5410590202903005 IN ()) THEN ((rt0.c2)*(vt0.c0)) ELSE (((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((vt0.c0, rt0.c1, vt0.c0))) END WHERE ((~ (((vt0.c1)OR(vt0.c1))))) ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN 0xffffffff9007da82 ELSE rt0.c1 END)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (0.5410590202903005 IN ()) THEN ((rt0.c2)*(vt0.c0)) ELSE (((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((vt0.c0, rt0.c1, vt0.c0))) END ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN 0Xffffffff9007da82 ELSE rt0.c1 END)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN (0.5410590202903005 IN ()) THEN ((rt0.c2)*(vt0.c0)) ELSE (((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((vt0.c0, rt0.c1, vt0.c0))) END WHERE ((~ (((vt0.c1)OR(vt0.c1))))) ORDER BY ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(CASE vt0.c0  WHEN rt0.c0 THEN 0xffffffff9007da82 ELSE rt0.c1 END)))OR(NULL)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((((vt0.c0)OR(rt0.c2)))AND(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c1)))AND((((0.2280471848059673))>=((vt0.c1))))))AND(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt0.c1)))AND((((0.2280471848059673))>=((vt0.c1))))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c1)))AND((((0.2280471848059673))>=((vt0.c1))))))AND(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt0.c1)))AND((((0.2280471848059673))>=((vt0.c1))))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c1)))AND((((0.2280471848059673))>=((vt0.c1))))))AND(((vt0.c0)LIKE(vt0.c0))))) ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM));
SELECT ALL * FROM rt0 WHERE (((COALESCE(rt0.c2, rt0.c0)) BETWEEN (CHANGES()) AND ((rt0.c1 IN (rt0.c1, NULL))))) ORDER BY 0.3597861908508918 ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt0.c0)) BETWEEN (CHANGES()) AND ((rt0.c1 IN (rt0.c1, NULL))))) IS TRUE)  as count FROM rt0 ORDER BY 0.3597861908508918 ASC);
SELECT ALL * FROM rt0 WHERE (((COALESCE(rt0.c2, rt0.c0)) BETWEEN (CHANGES()) AND ((rt0.c1 IN (rt0.c1, NULL))))) ORDER BY 0.3597861908508918 ASC;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt0.c0)) BETWEEN (CHANGES()) AND ((rt0.c1 IN (rt0.c1, NULL))))) IS TRUE)  as count FROM rt0 ORDER BY 0.3597861908508918 ASC);
SELECT ALL * FROM rt0 WHERE (((COALESCE(rt0.c2, rt0.c0)) BETWEEN (CHANGES()) AND ((rt0.c1 IN (rt0.c1, NULL))))) ORDER BY 0.3597861908508918 ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) ORDER BY ((CASE WHEN vt0.c1 THEN '' ELSE vt0.c0 END) BETWEEN ((- ('0.7997341938284639'))) AND (((vt0.c1)IS NOT(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN '' ELSE vt0.c0 END) BETWEEN ((- ('0.7997341938284639'))) AND (((vt0.c1)IS NOT(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) ORDER BY ((CASE WHEN vt0.c1 THEN '' ELSE vt0.c0 END) BETWEEN ((- ('0.7997341938284639'))) AND (((vt0.c1)IS NOT(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN '' ELSE vt0.c0 END) BETWEEN ((- ('0.7997341938284639'))) AND (((vt0.c1)IS NOT(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL)) ORDER BY ((CASE WHEN vt0.c1 THEN '' ELSE vt0.c0 END) BETWEEN ((- ('0.7997341938284639'))) AND (((vt0.c1)IS NOT(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))/(rt0.c2)));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(((x'') NOTNULL))))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))OR(((x'') NOTNULL))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(((x'') NOTNULL))))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))OR(((x'') NOTNULL))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(((x'') NOTNULL))))OR(((vt0.c0) NOTNULL))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))<=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))<=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))<=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))<=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)))<=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0  NULLS LAST, (+ (x''));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0  NULLS LAST, (+ (x'')));
SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0  NULLS LAST, (+ (x''));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0  NULLS LAST, (+ (x'')));
SELECT * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0  NULLS LAST, (+ (x''));
SELECT * FROM rt0, vt0 WHERE (0.45029112401851334) ORDER BY 0X769a374 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.45029112401851334) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0X769a374 DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (0.45029112401851334) ORDER BY 0X769a374 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.45029112401851334) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0X769a374 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'15fcc947');
SELECT SUM(count) FROM (SELECT ALL ((x'15fcc947') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'15fcc947');
SELECT SUM(count) FROM (SELECT ALL ((x'15fcc947') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'15fcc947');
SELECT ALL * FROM rt0, vt0 WHERE ('') ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ('') ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ('') ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c2))) IS FALSE)) ORDER BY (((rt0.c0)>=(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)>=(vt0.c1)) IN ()) ASC);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c2))) IS FALSE)) ORDER BY (((rt0.c0)>=(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)>=(vt0.c1)) IN ()) ASC);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c2))) IS FALSE)) ORDER BY (((rt0.c0)>=(vt0.c1)) IN ()) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1) NOT NULL)))) ORDER BY ((CASE WHEN '1133565039' THEN vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN '1133565039' THEN vt0.c0 END) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1) NOT NULL)))) ORDER BY ((CASE WHEN '1133565039' THEN vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN '1133565039' THEN vt0.c0 END) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1) NOT NULL)))) ORDER BY ((CASE WHEN '1133565039' THEN vt0.c0 END) IS TRUE);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) ISNULL));
SELECT ALL * FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY (((((- (rt0.c1)))OR((NULL IN ()))))OR(((rt0.c1)IS(rt0.c1))))  NULLS FIRST, (((rt0.c0 IN (x'c9bd')))>=(8689103732544035850)) ASC  NULLS FIRST, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c1)))OR((NULL IN ()))))OR(((rt0.c1)IS(rt0.c1))))  NULLS FIRST, (((rt0.c0 IN (x'c9bd')))>=(8689103732544035850)) ASC  NULLS FIRST, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY (((((- (rt0.c1)))OR((NULL IN ()))))OR(((rt0.c1)IS(rt0.c1))))  NULLS FIRST, (((rt0.c0 IN (x'c9bd')))>=(8689103732544035850)) ASC  NULLS FIRST, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((- (rt0.c1)))OR((NULL IN ()))))OR(((rt0.c1)IS(rt0.c1))))  NULLS FIRST, (((rt0.c0 IN (x'c9bd')))>=(8689103732544035850)) ASC  NULLS FIRST, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY (((((- (rt0.c1)))OR((NULL IN ()))))OR(((rt0.c1)IS(rt0.c1))))  NULLS FIRST, (((rt0.c0 IN (x'c9bd')))>=(8689103732544035850)) ASC  NULLS FIRST, CAST(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)) AS REAL);
SELECT * FROM rt0, vt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, IFNULL(rt0.c0, rt0.c1), (+ (vt0.c0)))) AND ((((((1364027177)OR(rt0.c2)))AND(rt0.c2)), CAST('1364027177' AS BLOB), CAST(rt0.c0 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, IFNULL(rt0.c0, rt0.c1), (+ (vt0.c0)))) AND ((((((1364027177)OR(rt0.c2)))AND(rt0.c2)), CAST('1364027177' AS BLOB), CAST(rt0.c0 AS REAL))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, IFNULL(rt0.c0, rt0.c1), (+ (vt0.c0)))) AND ((((((1364027177)OR(rt0.c2)))AND(rt0.c2)), CAST('1364027177' AS BLOB), CAST(rt0.c0 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, IFNULL(rt0.c0, rt0.c1), (+ (vt0.c0)))) AND ((((((1364027177)OR(rt0.c2)))AND(rt0.c2)), CAST('1364027177' AS BLOB), CAST(rt0.c0 AS REAL))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, IFNULL(rt0.c0, rt0.c1), (+ (vt0.c0)))) AND ((((((1364027177)OR(rt0.c2)))AND(rt0.c2)), CAST('1364027177' AS BLOB), CAST(rt0.c0 AS REAL))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN (vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))LIKE(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)) WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR((((rt0.c1, vt0.c1, x'', rt0.c0, '-162298739')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c1, x'', vt0.c1))))))OR(SUBSTR(rt0.c1, x'6671')))) ORDER BY CAST((- (rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR((((rt0.c1, vt0.c1, x'', rt0.c0, '-162298739')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c1, x'', vt0.c1))))))OR(SUBSTR(rt0.c1, x'6671')))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))LIKE(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)) ORDER BY CAST((- (rt0.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))LIKE(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)) WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR((((rt0.c1, vt0.c1, x'', rt0.c0, '-162298739')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c1, x'', vt0.c1))))))OR(SUBSTR(rt0.c1, x'6671')))) ORDER BY CAST((- (rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR((((rt0.c1, vt0.c1, x'', rt0.c0, '-162298739')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c1, x'', vt0.c1))))))OR(SUBSTR(rt0.c1, x'6671')))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))LIKE(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)) ORDER BY CAST((- (rt0.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))LIKE(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)) WHERE (((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR((((rt0.c1, vt0.c1, x'', rt0.c0, '-162298739')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c1, x'', vt0.c1))))))OR(SUBSTR(rt0.c1, x'6671')))) ORDER BY CAST((- (rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c1)))==(((vt0.c0)<(0Xffffffffb5e984e3)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c1)))=(((vt0.c0)<(0xffffffffb5e984e3))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c1)))==(((vt0.c0)<(0Xffffffffb5e984e3)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c1)))=(((vt0.c0)<(0xffffffffb5e984e3))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)||(vt0.c1)))==(((vt0.c0)<(0Xffffffffb5e984e3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN (rt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c1 IN (vt0.c1))))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((8.5233397E8, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c0))))))OR('844694177'));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((8.5233397E8, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c0))))))OR('844694177')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN (rt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c1 IN (vt0.c1))))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((8.5233397E8, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c0))))))OR('844694177'));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((8.5233397E8, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c0))))))OR('844694177')));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN (rt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((rt0.c1 IN (vt0.c1))))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)OR((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((8.5233397E8, rt0.c2, rt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c0))))))OR('844694177'));
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY (NOT (((rt0.c1)<>(rt0.c1)))) ASC, (((((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR((rt0.c1 IN ()))))OR(ABS(rt0.c2))))OR(((rt0.c2)OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)!=(rt0.c1)))) ASC, (((((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR((rt0.c1 IN ()))))OR(ABS(rt0.c2))))OR(((rt0.c2)OR(rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY (NOT (((rt0.c1)<>(rt0.c1)))) ASC, (((((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR((rt0.c1 IN ()))))OR(ABS(rt0.c2))))OR(((rt0.c2)OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)!=(rt0.c1)))) ASC, (((((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR((rt0.c1 IN ()))))OR(ABS(rt0.c2))))OR(((rt0.c2)OR(rt0.c2)))) ASC);
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY (NOT (((rt0.c1)<>(rt0.c1)))) ASC, (((((((((NOT (rt0.c1)))AND(CAST(rt0.c1 AS REAL))))OR((rt0.c1 IN ()))))OR(ABS(rt0.c2))))OR(((rt0.c2)OR(rt0.c2)))) ASC;
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c0) BETWEEN (x'6f2e9b08') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c0) BETWEEN (x'6f2e9b08') AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c0) BETWEEN (x'6f2e9b08') AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c0) BETWEEN (x'6f2e9b08') AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c0) BETWEEN (x'6f2e9b08') AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(((((vt0.c0)AND(vt0.c1)))AND(rt0.c0))) WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE RTRIM ELSE json_insert(vt0.c0, rt0.c0, rt0.c2) END) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS BLOB)  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE RTRIM ELSE json_insert(vt0.c0, rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(((((vt0.c0)AND(vt0.c1)))AND(rt0.c0))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(((((vt0.c0)AND(vt0.c1)))AND(rt0.c0))) WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE RTRIM ELSE json_insert(vt0.c0, rt0.c0, rt0.c2) END) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS BLOB)  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE RTRIM ELSE json_insert(vt0.c0, rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(((((vt0.c0)AND(vt0.c1)))AND(rt0.c0))) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(((((vt0.c0)AND(vt0.c1)))AND(rt0.c0))) WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 COLLATE RTRIM ELSE json_insert(vt0.c0, rt0.c0, rt0.c2) END) ORDER BY ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) DESC;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) IS TRUE) WHERE (CASE WHEN ((rt0.c0)<=(rt0.c0)) THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<=(rt0.c0)) THEN vt0.c1 END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) IS TRUE) WHERE (CASE WHEN ((rt0.c0)<=(rt0.c0)) THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<=(rt0.c0)) THEN vt0.c1 END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM) IS TRUE) WHERE (CASE WHEN ((rt0.c0)<=(rt0.c0)) THEN vt0.c1 END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c1)))>(((vt0.c1)%(NULL)))) WHERE (((((~ (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END, CAST(vt0.c0 AS BLOB)))==((((rt0.c2)<<(8.5233397E8)), 'ji)g]Q', rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END, CAST(vt0.c0 AS BLOB)))==((((rt0.c2)<<(8.5233397E8)), 'ji)g]Q', rt0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c1)))>(((vt0.c1)%(NULL)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c1)))>(((vt0.c1)%(NULL)))) WHERE (((((~ (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END, CAST(vt0.c0 AS BLOB)))==((((rt0.c2)<<(8.5233397E8)), 'ji)g]Q', rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END, CAST(vt0.c0 AS BLOB)))==((((rt0.c2)<<(8.5233397E8)), 'ji)g]Q', rt0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c1)))>(((vt0.c1)%(NULL)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2)+(rt0.c1)))>(((vt0.c1)%(NULL)))) WHERE (((((~ (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END, CAST(vt0.c0 AS BLOB)))==((((rt0.c2)<<(8.5233397E8)), 'ji)g]Q', rt0.c2))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))OR(-1.387966621E9)) COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c1)))OR(-1.387966621E9)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))OR(-1.387966621E9)) COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c1)))OR(-1.387966621E9)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))OR(-1.387966621E9)) COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))|(CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))==((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))|(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))==((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))|(CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))==((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))|(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))==((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))|(CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(vt0.c0 AS INTEGER))<((((vt0.c0))==((vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULLIF(DISTINCT ((rt0.c2)/(rt0.c1)), (vt0.c0 IN (vt0.c0)))) ORDER BY (((~ (rt0.c2))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2)/(rt0.c1)), (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c2))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULLIF(DISTINCT ((rt0.c2)/(rt0.c1)), (vt0.c0 IN (vt0.c0)))) ORDER BY (((~ (rt0.c2))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2)/(rt0.c1)), (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c2))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULLIF(DISTINCT ((rt0.c2)/(rt0.c1)), (vt0.c0 IN (vt0.c0)))) ORDER BY (((~ (rt0.c2))) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (UPPER(DISTINCT rt0.c1))) WHERE (CASE WHEN ((vt0.c1)%(rt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0))>((rt0.c0, rt0.c2, rt0.c1))) ELSE UNLIKELY(DISTINCT rt0.c1) END) ORDER BY (((vt0.c1)) BETWEEN ((CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 852333970 ELSE NULL END)) AND ((CASE NULL  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)%(rt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0))>((rt0.c0, rt0.c2, rt0.c1))) ELSE UNLIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (UPPER(DISTINCT rt0.c1))) ORDER BY (((vt0.c1)) BETWEEN ((CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 852333970 ELSE NULL END)) AND ((CASE NULL  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (UPPER(DISTINCT rt0.c1))) WHERE (CASE WHEN ((vt0.c1)%(rt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0))>((rt0.c0, rt0.c2, rt0.c1))) ELSE UNLIKELY(DISTINCT rt0.c1) END) ORDER BY (((vt0.c1)) BETWEEN ((CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 852333970 ELSE NULL END)) AND ((CASE NULL  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)%(rt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0))>((rt0.c0, rt0.c2, rt0.c1))) ELSE UNLIKELY(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (UPPER(DISTINCT rt0.c1))) ORDER BY (((vt0.c1)) BETWEEN ((CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 852333970 ELSE NULL END)) AND ((CASE NULL  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (UPPER(DISTINCT rt0.c1))) WHERE (CASE WHEN ((vt0.c1)%(rt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0))>((rt0.c0, rt0.c2, rt0.c1))) ELSE UNLIKELY(DISTINCT rt0.c1) END) ORDER BY (((vt0.c1)) BETWEEN ((CASE vt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 852333970 ELSE NULL END)) AND ((CASE NULL  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1) IS TRUE)))) ORDER BY vt0.c0 DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC, rt0.c0  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1) IS TRUE)))) ORDER BY vt0.c0 DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC, rt0.c0  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) AND (((rt0.c1) IS TRUE)))) ORDER BY vt0.c0 DESC, rt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY 0.7508222041950904  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 0.7508222041950904  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY 0.7508222041950904  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 0.7508222041950904  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY 0.7508222041950904  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY CAST((rt0.c0 IN (rt0.c2, rt0.c2)) AS BLOB)  NULLS FIRST, (((((rt0.c1)>(rt0.c0))))>=((rt0.c1))) ASC, ((((rt0.c0) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((rt0.c0 IN (rt0.c2, rt0.c2)) AS BLOB)  NULLS FIRST, (((((rt0.c1)>(rt0.c0))))>=((rt0.c1))) ASC, ((((rt0.c0) NOTNULL)) IS TRUE) DESC);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY CAST((rt0.c0 IN (rt0.c2, rt0.c2)) AS BLOB)  NULLS FIRST, (((((rt0.c1)>(rt0.c0))))>=((rt0.c1))) ASC, ((((rt0.c0) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((rt0.c0 IN (rt0.c2, rt0.c2)) AS BLOB)  NULLS FIRST, (((((rt0.c1)>(rt0.c0))))>=((rt0.c1))) ASC, ((((rt0.c0) NOTNULL)) IS TRUE) DESC);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ())) NOT NULL)) ORDER BY CAST((rt0.c0 IN (rt0.c2, rt0.c2)) AS BLOB)  NULLS FIRST, (((((rt0.c1)>(rt0.c0))))>=((rt0.c1))) ASC, ((((rt0.c0) NOTNULL)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c1)>=(CASE WHEN rt0.c0 THEN vt0.c1 END)), CAST(vt0.c1 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1)>=(CASE WHEN rt0.c0 THEN vt0.c1 END)), CAST(vt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c1)>=(CASE WHEN rt0.c0 THEN vt0.c1 END)), CAST(vt0.c1 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1)>=(CASE WHEN rt0.c0 THEN vt0.c1 END)), CAST(vt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((vt0.c1)>=(CASE WHEN rt0.c0 THEN vt0.c1 END)), CAST(vt0.c1 AS TEXT) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN -1.09194084E8 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)-(((rt0.c2) NOT BETWEEN (0Xffffffffad454f63) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN -1.09194084E8 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)-(((rt0.c2) NOT BETWEEN (0xffffffffad454f63) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN -1.09194084E8 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)-(((rt0.c2) NOT BETWEEN (0Xffffffffad454f63) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN -1.09194084E8 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)-(((rt0.c2) NOT BETWEEN (0xffffffffad454f63) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN -1.09194084E8 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)-(((rt0.c2) NOT BETWEEN (0Xffffffffad454f63) AND (rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND('-933437242')))OR((+ (0.5310821164600602))))) ORDER BY (- (((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND('-933437242')))OR((+ (0.5310821164600602))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((vt0.c1) IS TRUE))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND('-933437242')))OR((+ (0.5310821164600602))))) ORDER BY (- (((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND('-933437242')))OR((+ (0.5310821164600602))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((vt0.c1) IS TRUE))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND('-933437242')))OR((+ (0.5310821164600602))))) ORDER BY (- (((vt0.c1) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)!=(rt0.c1)) IN ('G㈜LoA}' COLLATE NOCASE, ROUND(rt0.c1, rt0.c2)))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((rt0.c2, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)!=(rt0.c1)) IN ('G㈜LoA}' COLLATE NOCASE, ROUND(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((rt0.c2, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)!=(rt0.c1)) IN ('G㈜LoA}' COLLATE NOCASE, ROUND(rt0.c1, rt0.c2)))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((rt0.c2, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)!=(rt0.c1)) IN ('G㈜LoA}' COLLATE NOCASE, ROUND(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((rt0.c2, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)!=(rt0.c1)) IN ('G㈜LoA}' COLLATE NOCASE, ROUND(rt0.c1, rt0.c2)))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND((((rt0.c2, rt0.c0, rt0.c1))>=((rt0.c0, rt0.c1, rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) ORDER BY (((((vt0.c1)*(vt0.c0))))>((CASE NULL  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)*(vt0.c0))))>((CASE NULL  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) ORDER BY (((((vt0.c1)*(vt0.c0))))>((CASE NULL  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)*(vt0.c0))))>((CASE NULL  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)-(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) ORDER BY (((((vt0.c1)*(vt0.c0))))>((CASE NULL  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(vt0.c0)) WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(vt0.c0)) ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(vt0.c0)) WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(vt0.c0)) ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c0)>(vt0.c0)) WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'') IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((x'') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((x'') IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((x'') IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c1, NULL)) NOT BETWEEN ((((rt0.c0)+(vt0.c1)), ((0xffffffffe907d722) BETWEEN (rt0.c0) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE), ((vt0.c1)AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt0.c1, NULL)) NOT BETWEEN ((((rt0.c0)+(vt0.c1)), ((0xffffffffe907d722) BETWEEN (rt0.c0) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE), ((vt0.c1)AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c1, NULL)) NOT BETWEEN ((((rt0.c0)+(vt0.c1)), ((0xffffffffe907d722) BETWEEN (rt0.c0) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE), ((vt0.c1)AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, vt0.c1, NULL)) NOT BETWEEN ((((rt0.c0)+(vt0.c1)), ((0xffffffffe907d722) BETWEEN (rt0.c0) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE), ((vt0.c1)AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1, vt0.c1, NULL)) NOT BETWEEN ((((rt0.c0)+(vt0.c1)), ((0xffffffffe907d722) BETWEEN (rt0.c0) AND (rt0.c1)), CAST(rt0.c1 AS TEXT))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE), ((vt0.c1)AND(rt0.c0))))));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((1.329293785E9))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((1.329293785E9))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((1.329293785E9))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((1.329293785E9))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((1.329293785E9))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c1)IS NOT(rt0.c1)), 0.5687125517206948)) ORDER BY ((CASE 0.3822960853127356  WHEN rt0.c1 THEN rt0.c0 END)<=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c1)IS NOT(rt0.c1)), 0.5687125517206948)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE 0.3822960853127356  WHEN rt0.c1 THEN rt0.c0 END)<=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c1)IS NOT(rt0.c1)), 0.5687125517206948)) ORDER BY ((CASE 0.3822960853127356  WHEN rt0.c1 THEN rt0.c0 END)<=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c1)IS NOT(rt0.c1)), 0.5687125517206948)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE 0.3822960853127356  WHEN rt0.c1 THEN rt0.c0 END)<=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c1)IS NOT(rt0.c1)), 0.5687125517206948)) ORDER BY ((CASE 0.3822960853127356  WHEN rt0.c1 THEN rt0.c0 END)<=(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (vt0.c0);
SELECT * FROM rt0, vt0 WHERE ((((~ (rt0.c1))) ISNULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((~ (rt0.c1))) ISNULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((~ (rt0.c1))) ISNULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS NUMERIC))*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS NUMERIC))*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS NUMERIC))*((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((vt0.c0)|(vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)|(vt0.c1)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((vt0.c0)|(vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)|(vt0.c1)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((vt0.c0)|(vt0.c1)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN 0.40369210637245145 THEN rt0.c0 END AS BLOB)) ORDER BY (+ ((((vt0.c1, rt0.c0, vt0.c0))<=((NULL, vt0.c1, rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0.40369210637245145 THEN rt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((((vt0.c1, rt0.c0, vt0.c0))<=((NULL, vt0.c1, rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN 0.40369210637245145 THEN rt0.c0 END AS BLOB)) ORDER BY (+ ((((vt0.c1, rt0.c0, vt0.c0))<=((NULL, vt0.c1, rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 0.40369210637245145 THEN rt0.c0 END AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((((vt0.c1, rt0.c0, vt0.c0))<=((NULL, vt0.c1, rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN 0.40369210637245145 THEN rt0.c0 END AS BLOB)) ORDER BY (+ ((((vt0.c1, rt0.c0, vt0.c0))<=((NULL, vt0.c1, rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((1.28975532E9)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((1.28975532E9)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((1.28975532E9)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((1.28975532E9)) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (NOT (rt0.c2)) WHERE ((rt0.c0 COLLATE NOCASE IN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.c1) IS FALSE)))) ORDER BY ((((((rt0.c0)||(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (NOT (rt0.c2)) ORDER BY ((((((rt0.c0)||(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (NOT (rt0.c2)) WHERE ((rt0.c0 COLLATE NOCASE IN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.c1) IS FALSE)))) ORDER BY ((((((rt0.c0)||(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (NOT (rt0.c2)) ORDER BY ((((((rt0.c0)||(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON (NOT (rt0.c2)) WHERE ((rt0.c0 COLLATE NOCASE IN (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.c1) IS FALSE)))) ORDER BY ((((((rt0.c0)||(rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (x'd661');
SELECT SUM(count) FROM (SELECT ALL ((x'd661') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'd661');
SELECT SUM(count) FROM (SELECT ALL ((x'd661') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'd661');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))%(((rt0.c1)-(vt0.c0)))) WHERE ((+ (vt0.c0)) COLLATE RTRIM COLLATE BINARY) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))%(((rt0.c1)-(vt0.c0)))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))%(((rt0.c1)-(vt0.c0)))) WHERE ((+ (vt0.c0)) COLLATE RTRIM COLLATE BINARY) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))%(((rt0.c1)-(vt0.c0)))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))%(((rt0.c1)-(vt0.c0)))) WHERE ((+ (vt0.c0)) COLLATE RTRIM COLLATE BINARY) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY (+ (CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY (+ (CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY (+ (CAST(rt0.c0 AS NUMERIC)));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))==(((rt0.c0)||(rt0.c2))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))==(((rt0.c0)||(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))==(((rt0.c0)||(rt0.c2))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))==(((rt0.c0)||(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))==(((rt0.c0)||(rt0.c2))))) ORDER BY rt0.c2 ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)/('')) AS NUMERIC) WHERE ((rt0.c1 IN ()) COLLATE RTRIM) ORDER BY (((((rt0.c1))>((vt0.c1))))||((((vt0.c0))!=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)/('')) AS NUMERIC) ORDER BY (((((rt0.c1))>((vt0.c1))))||((((vt0.c0))<>((rt0.c2))))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)/('')) AS NUMERIC) WHERE ((rt0.c1 IN ()) COLLATE RTRIM) ORDER BY (((((rt0.c1))>((vt0.c1))))||((((vt0.c0))!=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)/('')) AS NUMERIC) ORDER BY (((((rt0.c1))>((vt0.c1))))||((((vt0.c0))<>((rt0.c2))))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(((vt0.c1)/('')) AS NUMERIC) WHERE ((rt0.c1 IN ()) COLLATE RTRIM) ORDER BY (((((rt0.c1))>((vt0.c1))))||((((vt0.c0))!=((rt0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND('֜O*ꐄ\')))AND(rt0.c1)) IN ()) ASC, rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND('֜O*ꐄ\')))AND(rt0.c1)) IN ()) ASC, rt0.c0);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND('֜O*ꐄ\')))AND(rt0.c1)) IN ()) ASC, rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND('֜O*ꐄ\')))AND(rt0.c1)) IN ()) ASC, rt0.c0);
SELECT * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND('֜O*ꐄ\')))AND(rt0.c1)) IN ()) ASC, rt0.c0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST('x-_c|~Jm' AS BLOB) THEN CASE WHEN vt0.c1 THEN x'' END WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (+ (vt0.c1)) END) ORDER BY CAST(((vt0.c1) IS TRUE) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST('x-_c|~Jm' AS BLOB) THEN CASE WHEN vt0.c1 THEN x'' END WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) IS TRUE) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST('x-_c|~Jm' AS BLOB) THEN CASE WHEN vt0.c1 THEN x'' END WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (+ (vt0.c1)) END) ORDER BY CAST(((vt0.c1) IS TRUE) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST('x-_c|~Jm' AS BLOB) THEN CASE WHEN vt0.c1 THEN x'' END WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) IS TRUE) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST('x-_c|~Jm' AS BLOB) THEN CASE WHEN vt0.c1 THEN x'' END WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (+ (vt0.c1)) END) ORDER BY CAST(((vt0.c1) IS TRUE) AS TEXT) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c1) ISNULL))))AND(((rt0.c2)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(((rt0.c1) ISNULL))))AND(((rt0.c2)AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c1) ISNULL))))AND(((rt0.c2)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(((rt0.c1) ISNULL))))AND(((rt0.c2)AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)AND(((rt0.c1) ISNULL))))AND(((rt0.c2)AND(rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (((((UPPER(DISTINCT rt0.c1))OR(((vt0.c0) IS TRUE))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((UPPER(DISTINCT rt0.c1))OR(((vt0.c0) IS TRUE))))AND(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((UPPER(DISTINCT rt0.c1))OR(((vt0.c0) IS TRUE))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((UPPER(DISTINCT rt0.c1))OR(((vt0.c0) IS TRUE))))AND(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((UPPER(DISTINCT rt0.c1))OR(((vt0.c0) IS TRUE))))AND(rt0.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)IS NOT(vt0.c1)))/(rt0.c0))) ORDER BY ((((rt0.c0)AND(((vt0.c1)OR(vt0.c1)))))OR(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(vt0.c1)))/(rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)AND(((vt0.c1)OR(vt0.c1)))))OR(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)IS NOT(vt0.c1)))/(rt0.c0))) ORDER BY ((((rt0.c0)AND(((vt0.c1)OR(vt0.c1)))))OR(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(vt0.c1)))/(rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)AND(((vt0.c1)OR(vt0.c1)))))OR(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)IS NOT(vt0.c1)))/(rt0.c0))) ORDER BY ((((rt0.c0)AND(((vt0.c1)OR(vt0.c1)))))OR(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((NULL, vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, '390939936')))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((NULL, vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, '390939936')))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL, vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, '390939936')))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((NULL, vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, '390939936')))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL, vt0.c0, vt0.c0))<((vt0.c1, vt0.c1, '390939936')))) NOT NULL));
SELECT ALL * FROM rt0, vt0 WHERE ((x'efbb1c15' IN ()) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT NULL))|((((vt0.c0, '1329293785', vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((x'efbb1c15' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT NULL))|((((vt0.c0, '1329293785', vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c1))))));
SELECT ALL * FROM rt0, vt0 WHERE ((x'efbb1c15' IN ()) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT NULL))|((((vt0.c0, '1329293785', vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((x'efbb1c15' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT NULL))|((((vt0.c0, '1329293785', vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c1))))));
SELECT ALL * FROM rt0, vt0 WHERE ((x'efbb1c15' IN ()) COLLATE RTRIM) ORDER BY ((((rt0.c0) NOT NULL))|((((vt0.c0, '1329293785', vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c0, rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKE(rt0.c2, rt0.c1))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((LIKE(rt0.c2, rt0.c1))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKE(rt0.c2, rt0.c1))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((LIKE(rt0.c2, rt0.c1))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKE(rt0.c2, rt0.c1))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY rt0.c2;
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<=(((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<=(((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))<=(((rt0.c0 IN ())))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB(((vt0.c0)||(vt0.c0))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB(((vt0.c0)||(vt0.c0))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB(((vt0.c0)||(vt0.c0))))) ORDER BY vt0.c1 ASC;
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)))||(CASE vt0.c1  WHEN x'' THEN rt0.c0 END))) ORDER BY 0.835950449737395 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)))||(CASE vt0.c1  WHEN x'' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.835950449737395 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)))||(CASE vt0.c1  WHEN x'' THEN rt0.c0 END))) ORDER BY 0.835950449737395 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)))||(CASE vt0.c1  WHEN x'' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.835950449737395 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)))||(CASE vt0.c1  WHEN x'' THEN rt0.c0 END))) ORDER BY 0.835950449737395 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER) DESC, ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) DESC, ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER) DESC, ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) DESC, ((vt0.c0) IS TRUE));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER) DESC, ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) DESC, ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER) DESC, ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) DESC, ((vt0.c0) IS TRUE));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER) DESC, ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) DESC, ((vt0.c0) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.8906967857967485) AND (vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.8906967857967485) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.8906967857967485) AND (vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.8906967857967485) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.8906967857967485) AND (vt0.c1))) ISNULL));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULLIF(DISTINCT rt0.c1, vt0.c0)) NOTNULL)) ORDER BY LOWER(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULLIF(DISTINCT rt0.c1, vt0.c0)) NOTNULL)) ORDER BY LOWER(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY LOWER(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULLIF(DISTINCT rt0.c1, vt0.c0)) NOTNULL)) ORDER BY LOWER(DISTINCT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) DESC;
SELECT * FROM rt0 WHERE ((((''))>((UPPER(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((''))>((UPPER(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((''))>((UPPER(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((''))>((UPPER(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((''))>((UPPER(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c1)/(vt0.c0))  WHEN (rt0.c0 IN (vt0.c0)) THEN CAST(rt0.c2 AS REAL) END) ORDER BY IFNULL(rt0.c0, rt0.c2) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(vt0.c0))  WHEN (rt0.c0 IN (vt0.c0)) THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(rt0.c0, rt0.c2) COLLATE RTRIM ASC);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c1)/(vt0.c0))  WHEN (rt0.c0 IN (vt0.c0)) THEN CAST(rt0.c2 AS REAL) END) ORDER BY IFNULL(rt0.c0, rt0.c2) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)/(vt0.c0))  WHEN (rt0.c0 IN (vt0.c0)) THEN CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(rt0.c0, rt0.c2) COLLATE RTRIM ASC);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c1)/(vt0.c0))  WHEN (rt0.c0 IN (vt0.c0)) THEN CAST(rt0.c2 AS REAL) END) ORDER BY IFNULL(rt0.c0, rt0.c2) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (TYPEOF(vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (TYPEOF(vt0.c1) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (TYPEOF(vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (TYPEOF(vt0.c1) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (TYPEOF(vt0.c1) IN ());
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('713735895')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('713735895')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('713735895')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND ('713735895')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('713735895')) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (CAST('809817177' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('809817177' AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST('809817177' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('809817177' AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST('809817177' AS INTEGER));
SELECT * FROM vt0 WHERE (json_array_length(COALESCE(DISTINCT vt0.c1, '0.6916986730844756'))) ORDER BY (('1266150371')LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(COALESCE(DISTINCT vt0.c1, '0.6916986730844756'))) IS TRUE)  as count FROM vt0 ORDER BY (('1266150371')LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (json_array_length(COALESCE(DISTINCT vt0.c1, '0.6916986730844756'))) ORDER BY (('1266150371')LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(COALESCE(DISTINCT vt0.c1, '0.6916986730844756'))) IS TRUE)  as count FROM vt0 ORDER BY (('1266150371')LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON -2034383552 WHERE ((- (((rt0.c1) BETWEEN (vt0.c1) AND (x'80e4')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) BETWEEN (vt0.c1) AND (x'80e4'))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON -2034383552);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON -2034383552 WHERE ((- (((rt0.c1) BETWEEN (vt0.c1) AND (x'80e4')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) BETWEEN (vt0.c1) AND (x'80e4'))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON -2034383552);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON -2034383552 WHERE ((- (((rt0.c1) BETWEEN (vt0.c1) AND (x'80e4')))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) ISNULL))AND((NOT (vt0.c1))))) ORDER BY ((((((((json_remove(vt0.c0, vt0.c1, vt0.c0, '809817177'))OR((+ (vt0.c1)))))AND((vt0.c0 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((json_remove(vt0.c0, vt0.c1, vt0.c0, '809817177'))OR((+ (vt0.c1)))))AND((vt0.c0 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) ISNULL))AND((NOT (vt0.c1))))) ORDER BY ((((((((json_remove(vt0.c0, vt0.c1, vt0.c0, '809817177'))OR((+ (vt0.c1)))))AND((vt0.c0 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((json_remove(vt0.c0, vt0.c1, vt0.c0, '809817177'))OR((+ (vt0.c1)))))AND((vt0.c0 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) ISNULL))AND((NOT (vt0.c1))))) ORDER BY ((((((((json_remove(vt0.c0, vt0.c1, vt0.c0, '809817177'))OR((+ (vt0.c1)))))AND((vt0.c0 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))<<((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))<<((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))<<((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))<<((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))<<((NOT (rt0.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (- (vt0.c0)) WHERE (CASE (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))  WHEN ((rt0.c2)>=(vt0.c0)) THEN (((rt0.c1))>=((vt0.c0))) END) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))  WHEN ((rt0.c2)>=(vt0.c0)) THEN (((rt0.c1))>=((vt0.c0))) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (- (vt0.c0)) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END DESC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (- (vt0.c0)) WHERE (CASE (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))  WHEN ((rt0.c2)>=(vt0.c0)) THEN (((rt0.c1))>=((vt0.c0))) END) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))  WHEN ((rt0.c2)>=(vt0.c0)) THEN (((rt0.c1))>=((vt0.c0))) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (- (vt0.c0)) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END DESC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (- (vt0.c0)) WHERE (CASE (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))  WHEN ((rt0.c2)>=(vt0.c0)) THEN (((rt0.c1))>=((vt0.c0))) END) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(CAST(vt0.c1 AS TEXT), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(vt0.c1 AS TEXT), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(CAST(vt0.c1 AS TEXT), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(vt0.c1 AS TEXT), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(CAST(vt0.c1 AS TEXT), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)<>((((((((('731142952')OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1))))) ORDER BY (NOT (rt0.c1)) COLLATE BINARY, SUBSTR(CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)<>((((((((('731142952')OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c1)) COLLATE BINARY, SUBSTR(CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)<>((((((((('731142952')OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1))))) ORDER BY (NOT (rt0.c1)) COLLATE BINARY, SUBSTR(CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)<>((((((((('731142952')OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c1)) COLLATE BINARY, SUBSTR(CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)<>((((((((('731142952')OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1))))) ORDER BY (NOT (rt0.c1)) COLLATE BINARY, SUBSTR(CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((('', rt0.c0, rt0.c1, 0.18295132050946628, 0X2a8abed7)) BETWEEN ((((rt0.c1)>(vt0.c1)), (NOT (rt0.c2)), CAST(vt0.c0 AS INTEGER), vt0.c1, (~ (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (~ (rt0.c2)), IFNULL(vt0.c0, vt0.c0), ((vt0.c1)OR(rt0.c2)), ((vt0.c1)<>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('', rt0.c0, rt0.c1, 0.18295132050946628, 0x2a8abed7)) BETWEEN ((((rt0.c1)>(vt0.c1)), (NOT (rt0.c2)), CAST(vt0.c0 AS INTEGER), vt0.c1, (~ (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (~ (rt0.c2)), IFNULL(vt0.c0, vt0.c0), ((vt0.c1)OR(rt0.c2)), ((vt0.c1)<>(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((('', rt0.c0, rt0.c1, 0.18295132050946628, 0X2a8abed7)) BETWEEN ((((rt0.c1)>(vt0.c1)), (NOT (rt0.c2)), CAST(vt0.c0 AS INTEGER), vt0.c1, (~ (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (~ (rt0.c2)), IFNULL(vt0.c0, vt0.c0), ((vt0.c1)OR(rt0.c2)), ((vt0.c1)<>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('', rt0.c0, rt0.c1, 0.18295132050946628, 0x2a8abed7)) BETWEEN ((((rt0.c1)>(vt0.c1)), (NOT (rt0.c2)), CAST(vt0.c0 AS INTEGER), vt0.c1, (~ (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (~ (rt0.c2)), IFNULL(vt0.c0, vt0.c0), ((vt0.c1)OR(rt0.c2)), ((vt0.c1)<>(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((('', rt0.c0, rt0.c1, 0.18295132050946628, 0X2a8abed7)) BETWEEN ((((rt0.c1)>(vt0.c1)), (NOT (rt0.c2)), CAST(vt0.c0 AS INTEGER), vt0.c1, (~ (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (~ (rt0.c2)), IFNULL(vt0.c0, vt0.c0), ((vt0.c1)OR(rt0.c2)), ((vt0.c1)<>(rt0.c0))))));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (CASE (((rt0.c2, rt0.c0, 0.8925816854073327)) NOT BETWEEN ((rt0.c1, rt0.c2, vt0.c0)) AND ((-874149019, rt0.c0, rt0.c0)))  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((vt0.c1)IS NOT(vt0.c1)) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2, rt0.c0, 0.8925816854073327)) NOT BETWEEN ((rt0.c1, rt0.c2, vt0.c0)) AND ((-874149019, rt0.c0, rt0.c0)))  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((vt0.c1)IS NOT(vt0.c1)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (CASE (((rt0.c2, rt0.c0, 0.8925816854073327)) NOT BETWEEN ((rt0.c1, rt0.c2, vt0.c0)) AND ((-874149019, rt0.c0, rt0.c0)))  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((vt0.c1)IS NOT(vt0.c1)) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2, rt0.c0, 0.8925816854073327)) NOT BETWEEN ((rt0.c1, rt0.c2, vt0.c0)) AND ((-874149019, rt0.c0, rt0.c0)))  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((vt0.c1)IS NOT(vt0.c1)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (CASE (((rt0.c2, rt0.c0, 0.8925816854073327)) NOT BETWEEN ((rt0.c1, rt0.c2, vt0.c0)) AND ((-874149019, rt0.c0, rt0.c0)))  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN ((vt0.c1)IS NOT(vt0.c1)) ELSE (- (vt0.c0)) END);
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS INTEGER))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((rt0.c2))) DESC, ((((vt0.c1)OR('0.46002961137753395'))) ISNULL);
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((rt0.c2))) DESC, ((((vt0.c1)OR('0.46002961137753395'))) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS INTEGER))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((rt0.c2))) DESC, ((((vt0.c1)OR('0.46002961137753395'))) ISNULL);
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((rt0.c2))) DESC, ((((vt0.c1)OR('0.46002961137753395'))) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS INTEGER))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((rt0.c2))) DESC, ((((vt0.c1)OR('0.46002961137753395'))) ISNULL);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (CASE WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)));
SELECT * FROM vt0, rt0 WHERE (0x74ca1c4) ORDER BY rt0.c1 ASC, '/1 [';
SELECT SUM(count) FROM (SELECT ((0x74ca1c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 ASC, '/1 [');
SELECT * FROM vt0, rt0 WHERE (0x74ca1c4) ORDER BY rt0.c1 ASC, '/1 [';
SELECT SUM(count) FROM (SELECT ((0x74ca1c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 ASC, '/1 [');
SELECT * FROM vt0, rt0 WHERE (0x74ca1c4) ORDER BY rt0.c1 ASC, '/1 [';
SELECT * FROM rt0 WHERE (((rt0.c1)<(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)<(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)<(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((json_valid(rt0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) WHERE (((x'')||(((vt0.c0)>>(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 END IN ())  NULLS FIRST, ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END)LIKE(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, UPPER(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((((x'')||(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((json_valid(rt0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 END IN ())  NULLS FIRST, ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END)LIKE(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, UPPER(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((json_valid(rt0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) WHERE (((x'')||(((vt0.c0)>>(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 END IN ())  NULLS FIRST, ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END)LIKE(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, UPPER(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((((x'')||(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((json_valid(rt0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 END IN ())  NULLS FIRST, ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END)LIKE(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, UPPER(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((json_valid(rt0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) WHERE (((x'')||(((vt0.c0)>>(vt0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c2 END IN ())  NULLS FIRST, ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END)LIKE(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, UPPER(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL), (((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c1))), ((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)))) AND (((NULL IN ()), (~ (rt0.c2)), rt0.c0)))) ORDER BY ((((((((('' IN ()))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE))))AND(((('', rt0.c0, x'a1ad'))>((rt0.c1, vt0.c1, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL), (((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c1))), ((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)))) AND (((NULL IN ()), (~ (rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((('' IN ()))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE))))AND(((('', rt0.c0, x'a1ad'))>((rt0.c1, vt0.c1, vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL), (((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c1))), ((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)))) AND (((NULL IN ()), (~ (rt0.c2)), rt0.c0)))) ORDER BY ((((((((('' IN ()))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE))))AND(((('', rt0.c0, x'a1ad'))>((rt0.c1, vt0.c1, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL), (((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c1))), ((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)))) AND (((NULL IN ()), (~ (rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((('' IN ()))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE))))AND(((('', rt0.c0, x'a1ad'))>((rt0.c1, vt0.c1, vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL), (((rt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, x'', rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c1))), ((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)))) AND (((NULL IN ()), (~ (rt0.c2)), rt0.c0)))) ORDER BY ((((((((('' IN ()))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE))))AND(((('', rt0.c0, x'a1ad'))>((rt0.c1, vt0.c1, vt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL)%(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((NULL)%(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL)%(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((NULL)%(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NULL)%(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((((((rt0.c1)AND('859609155')))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((((((rt0.c1)AND('859609155')))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((((((rt0.c1)AND('859609155')))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((((((rt0.c1)AND('859609155')))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)+(rt0.c0)))) AND ((((((((((rt0.c1)AND('859609155')))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)=(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)==(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)=(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)==(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)=(rt0.c2)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)&(rt0.c0))) BETWEEN (((('220196054', rt0.c1, rt0.c2)) NOT BETWEEN (('56898215', vt0.c1, 0.022736904115395418)) AND ((x'', vt0.c0, vt0.c1)))) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(rt0.c0))) BETWEEN (((('220196054', rt0.c1, rt0.c2)) NOT BETWEEN (('56898215', vt0.c1, 0.022736904115395418)) AND ((x'', vt0.c0, vt0.c1)))) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)&(rt0.c0))) BETWEEN (((('220196054', rt0.c1, rt0.c2)) NOT BETWEEN (('56898215', vt0.c1, 0.022736904115395418)) AND ((x'', vt0.c0, vt0.c1)))) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(rt0.c0))) BETWEEN (((('220196054', rt0.c1, rt0.c2)) NOT BETWEEN (('56898215', vt0.c1, 0.022736904115395418)) AND ((x'', vt0.c0, vt0.c1)))) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)&(rt0.c0))) BETWEEN (((('220196054', rt0.c1, rt0.c2)) NOT BETWEEN (('56898215', vt0.c1, 0.022736904115395418)) AND ((x'', vt0.c0, vt0.c1)))) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END)));
SELECT * FROM rt0, vt0 WHERE (((UPPER(rt0.c2))&(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c2))&(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((UPPER(rt0.c2))&(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((UPPER(rt0.c2))&(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((UPPER(rt0.c2))&(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c1)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c1)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c1)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c1)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c1)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((LIKE(vt0.c1, rt0.c1))LIKE(((rt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, rt0.c1))LIKE(((rt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((LIKE(vt0.c1, rt0.c1))LIKE(((rt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, rt0.c1))LIKE(((rt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((LIKE(vt0.c1, rt0.c1))LIKE(((rt0.c0)IS(vt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY rt0.c1;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL)) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL)) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL)) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)+(rt0.c2)) IN ((NOT ('Xh옻')), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c0) IS FALSE))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(((((rt0.c2)AND(rt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0)IS(rt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))>((~ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(rt0.c2)) IN ((NOT ('Xh옻')), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0) IS FALSE))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(((((rt0.c2)AND(rt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0)IS(rt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))>((~ (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)+(rt0.c2)) IN ((NOT ('Xh옻')), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c0) IS FALSE))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(((((rt0.c2)AND(rt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0)IS(rt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))>((~ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(rt0.c2)) IN ((NOT ('Xh옻')), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0) IS FALSE))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(((((rt0.c2)AND(rt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0)IS(rt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))>((~ (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)+(rt0.c2)) IN ((NOT ('Xh옻')), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c0) IS FALSE))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))OR(((((rt0.c2)AND(rt0.c0)))OR(vt0.c0))))  NULLS LAST, ((vt0.c0)IS(rt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c1)))>((~ (rt0.c0)))) ASC;
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN x'f1ce' ELSE vt0.c0 END)AND(CASE WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL))  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN vt0.c1 THEN x'f1ce' ELSE vt0.c0 END)AND(CASE WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL))  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) END);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN x'f1ce' ELSE vt0.c0 END)AND(CASE WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL))  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN vt0.c1 THEN x'f1ce' ELSE vt0.c0 END)AND(CASE WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL))  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) END);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN vt0.c1 THEN x'f1ce' ELSE vt0.c0 END)AND(CASE WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL))  WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) END;
SELECT COUNT(*) FROM rt0 WHERE ((INSTR(rt0.c0, rt0.c1) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((INSTR(rt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((INSTR(rt0.c0, rt0.c1) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((INSTR(rt0.c0, rt0.c1) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((INSTR(rt0.c0, rt0.c1) IN ())) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 END IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE CASE x''  WHEN 'R4' THEN rt0.c2 END  WHEN ((rt0.c0)IS(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) ELSE SQLITE_VERSION() END) ORDER BY CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) AS BLOB) ASC, x'ca15';
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE x''  WHEN 'R4' THEN rt0.c2 END  WHEN ((rt0.c0)IS(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) ELSE SQLITE_VERSION() END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) AS BLOB) ASC, x'ca15');
SELECT ALL * FROM rt0 WHERE (CASE CASE x''  WHEN 'R4' THEN rt0.c2 END  WHEN ((rt0.c0)IS(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) ELSE SQLITE_VERSION() END) ORDER BY CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) AS BLOB) ASC, x'ca15';
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE x''  WHEN 'R4' THEN rt0.c2 END  WHEN ((rt0.c0)IS(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) ELSE SQLITE_VERSION() END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) AS BLOB) ASC, x'ca15');
SELECT ALL * FROM rt0 WHERE (CASE CASE x''  WHEN 'R4' THEN rt0.c2 END  WHEN ((rt0.c0)IS(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) ELSE SQLITE_VERSION() END) ORDER BY CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) AS BLOB) ASC, x'ca15';
SELECT * FROM vt0 WHERE ((~ ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((~ ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((~ ((~ (vt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c0 IN ()))AND(rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0 IN ()))AND(rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c0 IN ()))AND(rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0 IN ()))AND(rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)IS NOT(vt0.c0)) THEN ((((((((rt0.c2)OR(vt0.c1)))OR(124363636)))AND(rt0.c1)))OR(rt0.c0)) ELSE ((vt0.c0) ISNULL) END WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)IS NOT(vt0.c0)) THEN ((((((((rt0.c2)OR(vt0.c1)))OR(124363636)))AND(rt0.c1)))OR(rt0.c0)) ELSE ((vt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)IS NOT(vt0.c0)) THEN ((((((((rt0.c2)OR(vt0.c1)))OR(124363636)))AND(rt0.c1)))OR(rt0.c0)) ELSE ((vt0.c0) ISNULL) END WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)IS NOT(vt0.c0)) THEN ((((((((rt0.c2)OR(vt0.c1)))OR(124363636)))AND(rt0.c1)))OR(rt0.c0)) ELSE ((vt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)IS NOT(vt0.c0)) THEN ((((((((rt0.c2)OR(vt0.c1)))OR(124363636)))AND(rt0.c1)))OR(rt0.c0)) ELSE ((vt0.c0) ISNULL) END WHERE (CAST(x'' AS TEXT));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1))) ISNULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1))) ISNULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1))) ISNULL)) ORDER BY rt0.c1;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE NULL  WHEN rt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE NULL  WHEN rt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE NULL  WHEN rt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE NULL  WHEN rt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (CASE NULL  WHEN rt0.c2 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1)!=(vt0.c0)))))AND(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1)<>(vt0.c0)))))AND(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1)!=(vt0.c0)))))AND(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1)<>(vt0.c0)))))AND(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c1)!=(vt0.c0)))))AND(NULL)))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((COALESCE(vt0.c0, vt0.c0), 'Y*>P6s9', LIKE(vt0.c1, vt0.c0)))<((((vt0.c0)>>(vt0.c1)), TIME(0.368582981654606, vt0.c1, vt0.c0), ((vt0.c0)|(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((COALESCE(vt0.c0, vt0.c0), 'Y*>P6s9', LIKE(vt0.c1, vt0.c0)))<((((vt0.c0)>>(vt0.c1)), TIME(0.368582981654606, vt0.c1, vt0.c0), ((vt0.c0)|(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((COALESCE(vt0.c0, vt0.c0), 'Y*>P6s9', LIKE(vt0.c1, vt0.c0)))<((((vt0.c0)>>(vt0.c1)), TIME(0.368582981654606, vt0.c1, vt0.c0), ((vt0.c0)|(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((COALESCE(vt0.c0, vt0.c0), 'Y*>P6s9', LIKE(vt0.c1, vt0.c0)))<((((vt0.c0)>>(vt0.c1)), TIME(0.368582981654606, vt0.c1, vt0.c0), ((vt0.c0)|(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((COALESCE(vt0.c0, vt0.c0), 'Y*>P6s9', LIKE(vt0.c1, vt0.c0)))<((((vt0.c0)>>(vt0.c1)), TIME(0.368582981654606, vt0.c1, vt0.c0), ((vt0.c0)|(vt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(NULL)))AND(rt0.c2)))IS NOT((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c2, rt0.c1, rt0.c1)))))) ORDER BY (~ ((rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(NULL)))AND(rt0.c2)))IS NOT((((rt0.c2, rt0.c1, rt0.c1))<>((rt0.c2, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c1 IN (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(NULL)))AND(rt0.c2)))IS NOT((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c2, rt0.c1, rt0.c1)))))) ORDER BY (~ ((rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(NULL)))AND(rt0.c2)))IS NOT((((rt0.c2, rt0.c1, rt0.c1))<>((rt0.c2, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c1 IN (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(NULL)))AND(rt0.c2)))IS NOT((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c2, rt0.c1, rt0.c1)))))) ORDER BY (~ ((rt0.c1 IN (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT NULL))<(rt0.c1)) WHERE (DATETIME(rt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (rt0.c1)))) ORDER BY ((NULL) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(rt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT NULL))<(rt0.c1)) ORDER BY ((NULL) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT NULL))<(rt0.c1)) WHERE (DATETIME(rt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (rt0.c1)))) ORDER BY ((NULL) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(rt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT NULL))<(rt0.c1)) ORDER BY ((NULL) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT NULL))<(rt0.c1)) WHERE (DATETIME(rt0.c0, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN (rt0.c1)))) ORDER BY ((NULL) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c0)AND(rt0.c2)))));
SELECT * FROM rt0 WHERE (QUOTE(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (QUOTE(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (QUOTE(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)%(0.9724071294120904)) ELSE (((vt0.c1))<((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)%(0.9724071294120904)) ELSE (((vt0.c1))<((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)%(0.9724071294120904)) ELSE (((vt0.c1))<((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)%(0.9724071294120904)) ELSE (((vt0.c1))<((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (((vt0.c1))>((vt0.c1))) THEN ((vt0.c0)%(0.9724071294120904)) ELSE (((vt0.c1))<((vt0.c1))) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c1) NOT NULL))))OR(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c1) NOT NULL))))OR(((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c1) NOT NULL))))OR(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c1) NOT NULL))))OR(((NULL) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c1) NOT NULL))))OR(((NULL) IS TRUE))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)=((NOT (rt0.c0)))) WHERE (CASE rt0.c0  WHEN (+ (x'')) THEN x'6758' WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS BLOB) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (+ (x'')) THEN x'6758' WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS BLOB) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)==((NOT (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)=((NOT (rt0.c0)))) WHERE (CASE rt0.c0  WHEN (+ (x'')) THEN x'6758' WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS BLOB) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (+ (x'')) THEN x'6758' WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS BLOB) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)==((NOT (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1)=((NOT (rt0.c0)))) WHERE (CASE rt0.c0  WHEN (+ (x'')) THEN x'6758' WHEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS BLOB) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN CAST(rt0.c2 AS INTEGER) END);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_VERSION());
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)AND(rt0.c0))  WHEN vt0.c0 THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c0)+(vt0.c1)) WHEN (((6898357)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS FALSE) END WHERE (((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)AND(rt0.c0))  WHEN vt0.c0 THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c0)+(vt0.c1)) WHEN (((6898357)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS FALSE) END);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)AND(rt0.c0))  WHEN vt0.c0 THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c0)+(vt0.c1)) WHEN (((6898357)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS FALSE) END WHERE (((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)AND(rt0.c0))  WHEN vt0.c0 THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c0)+(vt0.c1)) WHEN (((6898357)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS FALSE) END);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((vt0.c0)AND(rt0.c0))  WHEN vt0.c0 THEN CAST(rt0.c1 AS NUMERIC) WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c0)+(vt0.c1)) WHEN (((6898357)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS FALSE) END WHERE (((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (vt0.c1 IN ()) WHERE (((((vt0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (vt0.c1 IN ()));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (vt0.c1 IN ()) WHERE (((((vt0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (vt0.c1 IN ()));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (vt0.c1 IN ()) WHERE (((((vt0.c0) IS FALSE)) IS TRUE));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT ALL * FROM rt0 WHERE (LIKELY((((rt0.c2, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, 2.053163305E9))))) ORDER BY (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) IN ()), ((((rt0.c1)&(rt0.c2)))&(((((((((-1.387966621E9)OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c2, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, 2.053163305E9))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) IN ()), ((((rt0.c1)&(rt0.c2)))&(((((((((-1.387966621E9)OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LIKELY((((rt0.c2, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, 2.053163305E9))))) ORDER BY (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) IN ()), ((((rt0.c1)&(rt0.c2)))&(((((((((-1.387966621E9)OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c2, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, 2.053163305E9))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) IN ()), ((((rt0.c1)&(rt0.c2)))&(((((((((-1.387966621E9)OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (LIKELY((((rt0.c2, rt0.c2, rt0.c1))<((rt0.c0, rt0.c2, 2.053163305E9))))) ORDER BY (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) IN ()), ((((rt0.c1)&(rt0.c2)))&(((((((((-1.387966621E9)OR(NULL)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY (((rt0.c1 COLLATE BINARY))<>((rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE BINARY))!=((rt0.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY (((rt0.c1 COLLATE BINARY))<>((rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE BINARY))!=((rt0.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c1) NOTNULL)))) ORDER BY (((rt0.c1 COLLATE BINARY))<>((rt0.c1))) DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))) AND (json_remove(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))) AND (json_remove(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))) AND (json_remove(rt0.c0, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))) AND (json_remove(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))) AND (json_remove(rt0.c0, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)==(rt0.c0)) COLLATE RTRIM) ORDER BY (- (((rt0.c0) IS FALSE))) ASC, ((((vt0.c0)IS NOT(vt0.c0)))<>('6\rs,r')), CAST((NOT (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)==(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c0) IS FALSE))) ASC, ((((vt0.c0)IS NOT(vt0.c0)))<>('6\rs,r')), CAST((NOT (rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)==(rt0.c0)) COLLATE RTRIM) ORDER BY (- (((rt0.c0) IS FALSE))) ASC, ((((vt0.c0)IS NOT(vt0.c0)))<>('6\rs,r')), CAST((NOT (rt0.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)==(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c0) IS FALSE))) ASC, ((((vt0.c0)IS NOT(vt0.c0)))<>('6\rs,r')), CAST((NOT (rt0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)==(rt0.c0)) COLLATE RTRIM) ORDER BY (- (((rt0.c0) IS FALSE))) ASC, ((((vt0.c0)IS NOT(vt0.c0)))<>('6\rs,r')), CAST((NOT (rt0.c2)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0)))) NOT BETWEEN (LOWER(rt0.c2)) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((rt0.c0)))) NOT BETWEEN (LOWER(rt0.c2)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0)))) NOT BETWEEN (LOWER(rt0.c2)) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<((rt0.c0)))) NOT BETWEEN (LOWER(rt0.c2)) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))<((rt0.c0)))) NOT BETWEEN (LOWER(rt0.c2)) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (((vt0.c0))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((vt0.c0))>=((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (((vt0.c0))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (((vt0.c0))>=((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (((vt0.c0))>=((vt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) WHERE ((NOT (((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) WHERE ((NOT (((rt0.c0)&(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))) WHERE ((NOT (((rt0.c0)&(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY json_remove(CAST(NULL AS REAL), vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_remove(CAST(NULL AS REAL), vt0.c0) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY json_remove(CAST(NULL AS REAL), vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_remove(CAST(NULL AS REAL), vt0.c0) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY json_remove(CAST(NULL AS REAL), vt0.c0) DESC;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (IFNULL(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE RTRIM)) WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (CAST(rt0.c2 AS BLOB)))) ORDER BY (((vt0.c1, rt0.c2, vt0.c0)) NOT BETWEEN (((NOT (0x5093bcc1)), 0.3587296758557632 COLLATE NOCASE, rt0.c0)) AND ((CAST(rt0.c1 AS TEXT), ((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (IFNULL(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE RTRIM)) ORDER BY (((vt0.c1, rt0.c2, vt0.c0)) NOT BETWEEN (((NOT (0X5093bcc1)), 0.3587296758557632 COLLATE NOCASE, rt0.c0)) AND ((CAST(rt0.c1 AS TEXT), ((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(rt0.c2))))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (IFNULL(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE RTRIM)) WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (CAST(rt0.c2 AS BLOB)))) ORDER BY (((vt0.c1, rt0.c2, vt0.c0)) NOT BETWEEN (((NOT (0x5093bcc1)), 0.3587296758557632 COLLATE NOCASE, rt0.c0)) AND ((CAST(rt0.c1 AS TEXT), ((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (IFNULL(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE RTRIM)) ORDER BY (((vt0.c1, rt0.c2, vt0.c0)) NOT BETWEEN (((NOT (0X5093bcc1)), 0.3587296758557632 COLLATE NOCASE, rt0.c0)) AND ((CAST(rt0.c1 AS TEXT), ((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(rt0.c2))))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (IFNULL(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE RTRIM)) WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN (CAST(rt0.c2 AS BLOB)))) ORDER BY (((vt0.c1, rt0.c2, vt0.c0)) NOT BETWEEN (((NOT (0x5093bcc1)), 0.3587296758557632 COLLATE NOCASE, rt0.c0)) AND ((CAST(rt0.c1 AS TEXT), ((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (0.032559178383419485) ORDER BY (((vt0.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT rt0.c0, 0.8010046088051459))));
SELECT SUM(count) FROM (SELECT ((0.032559178383419485) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT rt0.c0, 0.8010046088051459)))));
SELECT * FROM vt0, rt0 WHERE (0.032559178383419485) ORDER BY (((vt0.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT rt0.c0, 0.8010046088051459))));
SELECT SUM(count) FROM (SELECT ((0.032559178383419485) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT rt0.c0, 0.8010046088051459)))));
SELECT * FROM vt0, rt0 WHERE (0.032559178383419485) ORDER BY (((vt0.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT rt0.c0, 0.8010046088051459))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (GLOB(((rt0.c2)+(rt0.c2)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(((rt0.c2)+(rt0.c2)), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (GLOB(((rt0.c2)+(rt0.c2)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(((rt0.c2)+(rt0.c2)), (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (GLOB(((rt0.c2)+(rt0.c2)), (NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))OR(vt0.c0))) ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ('-934815015'));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ('-934815015')));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))OR(vt0.c0))) ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ('-934815015'));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ('-934815015')));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))OR(vt0.c0))) ORDER BY (((- (vt0.c1))) BETWEEN (vt0.c1 COLLATE BINARY) AND ('-934815015'));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN ('') AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((((x'a8f3')<<(vt0.c0)))-(vt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN ('') AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'a8f3')<<(vt0.c0)))-(vt0.c1))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN ('') AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((((x'a8f3')<<(vt0.c0)))-(vt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN ('') AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'a8f3')<<(vt0.c0)))-(vt0.c1))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN ('') AND (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((((x'a8f3')<<(vt0.c0)))-(vt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)>=(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)>=(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)>=(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('G槙L22ULD')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('G槙L22ULD')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('G槙L22ULD')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('G槙L22ULD')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c0 AS REAL)) AND ('G槙L22ULD')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (NOT ((NOT (rt0.c2)))) WHERE ((+ (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT ((NOT (rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (NOT ((NOT (rt0.c2)))) WHERE ((+ (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (NOT ((NOT (rt0.c2)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (NOT ((NOT (rt0.c2)))) WHERE ((+ (vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((vt0.c1)GLOB(rt0.c0))))) ORDER BY (((0.9309057450024858)>=(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((0.9309057450024858)>=(rt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((vt0.c1)GLOB(rt0.c0))))) ORDER BY (((0.9309057450024858)>=(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((0.9309057450024858)>=(rt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((vt0.c1)GLOB(rt0.c0))))) ORDER BY (((0.9309057450024858)>=(rt0.c2)) IN ()) ASC;
SELECT * FROM vt0, rt0 WHERE (json_extract(((vt0.c0)OR('S|')), (rt0.c1 IN ()), (NULL IN ()), CAST(rt0.c1 AS TEXT))) ORDER BY ((vt0.c1)GLOB(NULL)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c0)OR('S|')), (rt0.c1 IN ()), (NULL IN ()), CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1)GLOB(NULL)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (json_extract(((vt0.c0)OR('S|')), (rt0.c1 IN ()), (NULL IN ()), CAST(rt0.c1 AS TEXT))) ORDER BY ((vt0.c1)GLOB(NULL)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c0)OR('S|')), (rt0.c1 IN ()), (NULL IN ()), CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c1)GLOB(NULL)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt0, rt0 WHERE (json_extract(((vt0.c0)OR('S|')), (rt0.c1 IN ()), (NULL IN ()), CAST(rt0.c1 AS TEXT))) ORDER BY ((vt0.c1)GLOB(NULL)) COLLATE RTRIM COLLATE BINARY;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) WHERE ((- (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND((~ (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, NULL)))) ASC, CASE ((vt0.c1) IS TRUE)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) IS FALSE) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) WHEN ((vt0.c1)<=(rt0.c1)) THEN IFNULL(vt0.c0, rt0.c1) ELSE ((vt0.c1)-('1635776082')) END ASC, rtreenode(vt0.c1, CAST(rt0.c1 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) ORDER BY (((((+ (vt0.c0)))AND((~ (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, NULL)))) ASC, CASE ((vt0.c1) IS TRUE)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) IS FALSE) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) WHEN ((vt0.c1)<=(rt0.c1)) THEN IFNULL(vt0.c0, rt0.c1) ELSE ((vt0.c1)-('1635776082')) END ASC, rtreenode(vt0.c1, CAST(rt0.c1 AS NUMERIC)) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) WHERE ((- (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND((~ (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, NULL)))) ASC, CASE ((vt0.c1) IS TRUE)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) IS FALSE) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) WHEN ((vt0.c1)<=(rt0.c1)) THEN IFNULL(vt0.c0, rt0.c1) ELSE ((vt0.c1)-('1635776082')) END ASC, rtreenode(vt0.c1, CAST(rt0.c1 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) ORDER BY (((((+ (vt0.c0)))AND((~ (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, NULL)))) ASC, CASE ((vt0.c1) IS TRUE)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) IS FALSE) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) WHEN ((vt0.c1)<=(rt0.c1)) THEN IFNULL(vt0.c0, rt0.c1) ELSE ((vt0.c1)-('1635776082')) END ASC, rtreenode(vt0.c1, CAST(rt0.c1 AS NUMERIC)) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) WHERE ((- (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))))) ORDER BY (((((+ (vt0.c0)))AND((~ (rt0.c2)))))AND((rt0.c0 IN (vt0.c0, NULL)))) ASC, CASE ((vt0.c1) IS TRUE)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c0) IS FALSE) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1) ISNULL) WHEN ((vt0.c1)<=(rt0.c1)) THEN IFNULL(vt0.c0, rt0.c1) ELSE ((vt0.c1)-('1635776082')) END ASC, rtreenode(vt0.c1, CAST(rt0.c1 AS NUMERIC)) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (((((vt0.c0)AND(x'')))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (((((vt0.c0)AND(x'')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (((((vt0.c0)AND(x'')))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (((((vt0.c0)AND(x'')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (((((vt0.c0)AND(x'')))AND(vt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) AS TEXT)) ORDER BY (+ (x'')) ASC, CASE WHEN (rt0.c1 IN ('', rt0.c0)) THEN '耀p' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (+ (x'')) ASC, CASE WHEN (rt0.c1 IN ('', rt0.c0)) THEN '耀p' END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) AS TEXT)) ORDER BY (+ (x'')) ASC, CASE WHEN (rt0.c1 IN ('', rt0.c0)) THEN '耀p' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (+ (x'')) ASC, CASE WHEN (rt0.c1 IN ('', rt0.c0)) THEN '耀p' END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) AS TEXT)) ORDER BY (+ (x'')) ASC, CASE WHEN (rt0.c1 IN ('', rt0.c0)) THEN '耀p' END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END  WHEN UNLIKELY(rt0.c1) THEN (rt0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)>=(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)>=(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c1)>=(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN 0x1b568715 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN 0X1b568715 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN 0x1b568715 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN 0X1b568715 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN 0x1b568715 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (('1759565357' IN ())) AND (((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (('1759565357' IN ())) AND (((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (('1759565357' IN ())) AND (((rt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (('1759565357' IN ())) AND (((rt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (('1759565357' IN ())) AND (((rt0.c0)AND(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY((((('1622463565')OR(vt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((('1622463565')OR(vt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY((((('1622463565')OR(vt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((('1622463565')OR(vt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (LIKELY((((('1622463565')OR(vt0.c0)))OR(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 END)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c1 END)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END)>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (- (((rt0.c0)>=(rt0.c0))))  NULLS LAST, (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, (((vt0.c0 IN ())) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c0)>=(rt0.c0))))  NULLS LAST, (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, (((vt0.c0 IN ())) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (- (((rt0.c0)>=(rt0.c0))))  NULLS LAST, (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, (((vt0.c0 IN ())) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c0)>=(rt0.c0))))  NULLS LAST, (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, (((vt0.c0 IN ())) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (- (((rt0.c0)>=(rt0.c0))))  NULLS LAST, (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, (((vt0.c0 IN ())) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))) WHERE ((((((('2061467648')OR(rt0.c2)))OR(vt0.c0))) NOT BETWEEN (((rt0.c1)*(vt0.c1))) AND (IFNULL(rt0.c0, rt0.c2)))) ORDER BY (((NULL IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((((('2061467648')OR(rt0.c2)))OR(vt0.c0))) NOT BETWEEN (((rt0.c1)*(vt0.c1))) AND (IFNULL(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))) ORDER BY (((NULL IN ())) IS TRUE) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))) WHERE ((((((('2061467648')OR(rt0.c2)))OR(vt0.c0))) NOT BETWEEN (((rt0.c1)*(vt0.c1))) AND (IFNULL(rt0.c0, rt0.c2)))) ORDER BY (((NULL IN ())) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((((('2061467648')OR(rt0.c2)))OR(vt0.c0))) NOT BETWEEN (((rt0.c1)*(vt0.c1))) AND (IFNULL(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))) ORDER BY (((NULL IN ())) IS TRUE) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c1)))) WHERE ((((((('2061467648')OR(rt0.c2)))OR(vt0.c0))) NOT BETWEEN (((rt0.c1)*(vt0.c1))) AND (IFNULL(rt0.c0, rt0.c2)))) ORDER BY (((NULL IN ())) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)>(rt0.c2))  WHEN ((rt0.c0) NOT NULL) THEN (+ (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(NULL AS BLOB) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((NULL)OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)>(rt0.c2))  WHEN ((rt0.c0) NOT NULL) THEN (+ (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(NULL AS BLOB) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((NULL)OR(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)>(rt0.c2))  WHEN ((rt0.c0) NOT NULL) THEN (+ (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(NULL AS BLOB) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((NULL)OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)>(rt0.c2))  WHEN ((rt0.c0) NOT NULL) THEN (+ (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(NULL AS BLOB) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((NULL)OR(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0)>(rt0.c2))  WHEN ((rt0.c0) NOT NULL) THEN (+ (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(NULL AS BLOB) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((NULL)OR(rt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))>=(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))>=(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))>=(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))>=(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))>=(((rt0.c2) ISNULL))));
SELECT * FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c2)||(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c2)||(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c2)||(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c2)||(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LOWER(DISTINCT ((rt0.c2)||(rt0.c1))));
SELECT ALL * FROM vt0 WHERE (CAST('1456345943' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('1456345943' AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST('1456345943' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('1456345943' AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST('1456345943' AS REAL));
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND((+ (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND((+ (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND((+ (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND((+ (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))AND((+ (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, 0X32cd9592))), vt0.c0)) ORDER BY 0.49834335404875296 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, 0x32cd9592))), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY 0.49834335404875296 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, 0X32cd9592))), vt0.c0)) ORDER BY 0.49834335404875296 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, 0x32cd9592))), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY 0.49834335404875296 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, 0X32cd9592))), vt0.c0)) ORDER BY 0.49834335404875296 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0))<=((rt0.c2))))<>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c2))))<>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0))<=((rt0.c2))))<>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c2))))<>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0))<=((rt0.c2))))<>(vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((UNLIKELY(DISTINCT rt0.c0) IN ((((rt0.c2))<>((0.7997341938284639))), (~ (NULL))))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT rt0.c0) IN ((((rt0.c2))!=((0.7997341938284639))), (~ (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2)) COLLATE RTRIM, rt0.c0 DESC);
SELECT ALL * FROM rt0 WHERE ((UNLIKELY(DISTINCT rt0.c0) IN ((((rt0.c2))<>((0.7997341938284639))), (~ (NULL))))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT rt0.c0) IN ((((rt0.c2))!=((0.7997341938284639))), (~ (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2)) COLLATE RTRIM, rt0.c0 DESC);
SELECT ALL * FROM rt0 WHERE ((UNLIKELY(DISTINCT rt0.c0) IN ((((rt0.c2))<>((0.7997341938284639))), (~ (NULL))))) ORDER BY (NOT (rt0.c2)) COLLATE RTRIM, rt0.c0 DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)&(rt0.c2))) BETWEEN ((- ('-1355017103'))) AND (UNLIKELY(vt0.c1)))) ORDER BY ((vt0.c0)<((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)&(rt0.c2))) BETWEEN ((- ('-1355017103'))) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)<((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)&(rt0.c2))) BETWEEN ((- ('-1355017103'))) AND (UNLIKELY(vt0.c1)))) ORDER BY ((vt0.c0)<((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)&(rt0.c2))) BETWEEN ((- ('-1355017103'))) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)<((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)&(rt0.c2))) BETWEEN ((- ('-1355017103'))) AND (UNLIKELY(vt0.c1)))) ORDER BY ((vt0.c0)<((vt0.c1 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)||(vt0.c1)))%(((rt0.c2)*(vt0.c0))))) ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC, ((ROUND(rt0.c0, rt0.c2)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(vt0.c1)))%(((rt0.c2)*(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC, ((ROUND(rt0.c0, rt0.c2)) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)||(vt0.c1)))%(((rt0.c2)*(vt0.c0))))) ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC, ((ROUND(rt0.c0, rt0.c2)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(vt0.c1)))%(((rt0.c2)*(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC, ((ROUND(rt0.c0, rt0.c2)) IS FALSE) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)||(vt0.c1)))%(((rt0.c2)*(vt0.c0))))) ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC, ((ROUND(rt0.c0, rt0.c2)) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)-(vt0.c0)), vt0.c0, ((rt0.c0) NOT NULL))) AND ((NULL, (+ ('-1647740840')), (((rt0.c0))=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)-(vt0.c0)), vt0.c0, ((rt0.c0) NOT NULL))) AND ((NULL, (+ ('-1647740840')), (((rt0.c0))=((vt0.c0))))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)-(vt0.c0)), vt0.c0, ((rt0.c0) NOT NULL))) AND ((NULL, (+ ('-1647740840')), (((rt0.c0))=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)-(vt0.c0)), vt0.c0, ((rt0.c0) NOT NULL))) AND ((NULL, (+ ('-1647740840')), (((rt0.c0))=((vt0.c0))))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c0, vt0.c0)) BETWEEN ((((rt0.c0)-(vt0.c0)), vt0.c0, ((rt0.c0) NOT NULL))) AND ((NULL, (+ ('-1647740840')), (((rt0.c0))=((vt0.c0)))))));
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)>=(rt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, rt0.c0) THEN (((rt0.c1, '0.3642475511353137', rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))) WHEN IFNULL(DISTINCT vt0.c0, rt0.c0) THEN ((rt0.c2)==(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END ELSE vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(rt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, rt0.c0) THEN (((rt0.c1, '0.3642475511353137', rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))) WHEN IFNULL(DISTINCT vt0.c0, rt0.c0) THEN ((rt0.c2)=(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END ELSE vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)>=(rt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, rt0.c0) THEN (((rt0.c1, '0.3642475511353137', rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))) WHEN IFNULL(DISTINCT vt0.c0, rt0.c0) THEN ((rt0.c2)==(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END ELSE vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(rt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, rt0.c0) THEN (((rt0.c1, '0.3642475511353137', rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))) WHEN IFNULL(DISTINCT vt0.c0, rt0.c0) THEN ((rt0.c2)=(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END ELSE vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c1)>=(rt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (CAST(rt0.c1 AS INTEGER)))) ORDER BY CASE WHEN TRIM(DISTINCT vt0.c1, rt0.c0) THEN (((rt0.c1, '0.3642475511353137', rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))) WHEN IFNULL(DISTINCT vt0.c0, rt0.c0) THEN ((rt0.c2)==(rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END ELSE vt0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE COLLATE NOCASE WHERE (((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE COLLATE NOCASE WHERE (((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE COLLATE NOCASE WHERE (((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE (CASE ((((NULL)AND(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE WHEN rt0.c1 THEN NULL END THEN NULL END) ORDER BY ((1417140484) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((NULL)AND(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE WHEN rt0.c1 THEN NULL END THEN NULL END) IS TRUE)  as count FROM rt0 ORDER BY ((1417140484) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE ((((NULL)AND(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE WHEN rt0.c1 THEN NULL END THEN NULL END) ORDER BY ((1417140484) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((NULL)AND(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE WHEN rt0.c1 THEN NULL END THEN NULL END) IS TRUE)  as count FROM rt0 ORDER BY ((1417140484) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE ((((NULL)AND(rt0.c0)))OR(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((((x'')OR(rt0.c1)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN CASE WHEN rt0.c1 THEN NULL END THEN NULL END) ORDER BY ((1417140484) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((((((((rt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('1833733674')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('1833733674')) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((((rt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('1833733674')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('1833733674')) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((((rt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('1833733674')) IN ()));
SELECT ALL * FROM rt0 WHERE ('298559591');
SELECT SUM(count) FROM (SELECT (('298559591') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('298559591');
SELECT SUM(count) FROM (SELECT (('298559591') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('298559591');
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (0.5776875704709383)))GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0.5776875704709383)))GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (0.5776875704709383)))GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (0.5776875704709383)))GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (0.5776875704709383)))GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0))<=((rt0.c0)))) ORDER BY ((((rt0.c1)*(rt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)*(rt0.c1))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0))<=((rt0.c0)))) ORDER BY ((((rt0.c1)*(rt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)*(rt0.c1))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0))<=((rt0.c0)))) ORDER BY ((((rt0.c1)*(rt0.c1))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((vt0.c1) NOTNULL))AND(CASE WHEN 8.09817177E8 THEN vt0.c0 END)))AND((rt0.c0 IN ()))))AND(((rt0.c2)|(rt0.c0)))))AND('1622463565'))) ORDER BY (((rt0.c1)IS NOT(rt0.c2)) IN ()) DESC, (((vt0.c1 IN ())) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (SQLITE_SOURCE_ID())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOTNULL))AND(CASE WHEN 8.09817177E8 THEN vt0.c0 END)))AND((rt0.c0 IN ()))))AND(((rt0.c2)|(rt0.c0)))))AND('1622463565'))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c1)IS NOT(rt0.c2)) IN ()) DESC, (((vt0.c1 IN ())) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (SQLITE_SOURCE_ID())) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((vt0.c1) NOTNULL))AND(CASE WHEN 8.09817177E8 THEN vt0.c0 END)))AND((rt0.c0 IN ()))))AND(((rt0.c2)|(rt0.c0)))))AND('1622463565'))) ORDER BY (((rt0.c1)IS NOT(rt0.c2)) IN ()) DESC, (((vt0.c1 IN ())) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (SQLITE_SOURCE_ID())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOTNULL))AND(CASE WHEN 8.09817177E8 THEN vt0.c0 END)))AND((rt0.c0 IN ()))))AND(((rt0.c2)|(rt0.c0)))))AND('1622463565'))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c1)IS NOT(rt0.c2)) IN ()) DESC, (((vt0.c1 IN ())) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (SQLITE_SOURCE_ID())) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((((((vt0.c1) NOTNULL))AND(CASE WHEN 8.09817177E8 THEN vt0.c0 END)))AND((rt0.c0 IN ()))))AND(((rt0.c2)|(rt0.c0)))))AND('1622463565'))) ORDER BY (((rt0.c1)IS NOT(rt0.c2)) IN ()) DESC, (((vt0.c1 IN ())) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (SQLITE_SOURCE_ID())) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(highlight('1339953424', NULL, vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(highlight('1339953424', NULL, vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(highlight('1339953424', NULL, vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(highlight('1339953424', NULL, vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (0.10555042069771536) AND (rt0.c2)))>=(((vt0.c1)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (0.10555042069771536) AND (rt0.c2)))>=(((vt0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (0.10555042069771536) AND (rt0.c2)))>=(((vt0.c1)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (0.10555042069771536) AND (rt0.c2)))>=(((vt0.c1)>=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (0.10555042069771536) AND (rt0.c2)))>=(((vt0.c1)>=(rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((+ (SQLITE_VERSION()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((+ (SQLITE_VERSION()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (SQLITE_VERSION())));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON NULLIF(IFNULL(9.37731076E8, rt0.c2), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) WHERE ((((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((0.2543411139496101))))&(rt0.c0))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((0.2543411139496101))))&(rt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON NULLIF(IFNULL(9.37731076E8, rt0.c2), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON NULLIF(IFNULL(9.37731076E8, rt0.c2), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) WHERE ((((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((0.2543411139496101))))&(rt0.c0))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((0.2543411139496101))))&(rt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON NULLIF(IFNULL(9.37731076E8, rt0.c2), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON NULLIF(IFNULL(9.37731076E8, rt0.c2), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END) WHERE ((((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((0.2543411139496101))))&(rt0.c0))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))!=((vt0.c1)))) ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))<>((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))!=((vt0.c1)))) ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))<>((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))!=((vt0.c1)))) ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(rt0.c1, 0.3607850580894988)) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (~ (x'')) DESC, ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(rt0.c1, 0.3607850580894988)) NOT NULL) ORDER BY (~ (x'')) DESC, ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(rt0.c1, 0.3607850580894988)) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (~ (x'')) DESC, ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(rt0.c1, 0.3607850580894988)) NOT NULL) ORDER BY (~ (x'')) DESC, ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((LIKELIHOOD(rt0.c1, 0.3607850580894988)) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY (~ (x'')) DESC, ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)<(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)<(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)<(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)<(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END)<(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY ((((rt0.c0))<((x''))) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0))<((x''))) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY ((((rt0.c0))<((x''))) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0))<((x''))) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY ((((rt0.c0))<((x''))) IN ())  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))AND(vt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))IS(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, ((((((vt0.c1)OR(rt0.c2)))OR(vt0.c1)))/(((((vt0.c1)AND('')))OR(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))IS(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, ((((((vt0.c1)OR(rt0.c2)))OR(vt0.c1)))/(((((vt0.c1)AND('')))OR(vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))IS(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, ((((((vt0.c1)OR(rt0.c2)))OR(vt0.c1)))/(((((vt0.c1)AND('')))OR(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))IS(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, ((((((vt0.c1)OR(rt0.c2)))OR(vt0.c1)))/(((((vt0.c1)AND('')))OR(vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))IS(CAST(rt0.c2 AS INTEGER))) DESC  NULLS FIRST, ((((((vt0.c1)OR(rt0.c2)))OR(vt0.c1)))/(((((vt0.c1)AND('')))OR(vt0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c2)AND(1037436027)))OR(rt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(1037436027)))OR(rt0.c1))) IS TRUE) DESC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c2)AND(1037436027)))OR(rt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(1037436027)))OR(rt0.c1))) IS TRUE) DESC);
SELECT * FROM rt0 WHERE (NULL) ORDER BY ((((((rt0.c2)AND(1037436027)))OR(rt0.c1))) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ('157599291') ORDER BY ((rt0.c1)OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN 'k7푍2' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('157599291') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN 'k7푍2' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('157599291') ORDER BY ((rt0.c1)OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN 'k7푍2' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('157599291') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN 'k7푍2' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('157599291') ORDER BY ((rt0.c1)OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c1 WHEN 'k7푍2' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c1)))!=(((vt0.c0)||(vt0.c1))))) ORDER BY ((vt0.c1)=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c0)IS(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1)))<>(((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c0)IS(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c1)))!=(((vt0.c0)||(vt0.c1))))) ORDER BY ((vt0.c1)=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c0)IS(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1)))<>(((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c0)IS(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c1)))!=(((vt0.c0)||(vt0.c1))))) ORDER BY ((vt0.c1)=(vt0.c1)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((((vt0.c0)IS(vt0.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))<((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))<((vt0.c0 IN ()))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)) AS REAL)) ORDER BY ((LTRIM(vt0.c1, rt0.c1))<<(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LTRIM(vt0.c1, rt0.c1))<<(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)) AS REAL)) ORDER BY ((LTRIM(vt0.c1, rt0.c1))<<(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LTRIM(vt0.c1, rt0.c1))<<(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((((((rt0.c1)AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)) AS REAL)) ORDER BY ((LTRIM(vt0.c1, rt0.c1))<<(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(0X1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))) WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY (((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(0X1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))) ORDER BY (((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT * FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(0X1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))) WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY (((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(0X1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))) ORDER BY (((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) IN ()));
SELECT * FROM rt0 CROSS JOIN vt0 ON COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(0X1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1))) WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY (((((vt0.c1)AND(rt0.c1)))OR(rt0.c2)) IN ());
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 END, TRIM(DISTINCT rt0.c1)) WHERE ((((((+ (vt0.c0)))OR(((rt0.c1)<(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))OR(((rt0.c1)<(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 END, TRIM(DISTINCT rt0.c1)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 END, TRIM(DISTINCT rt0.c1)) WHERE ((((((+ (vt0.c0)))OR(((rt0.c1)<(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))OR(((rt0.c1)<(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 END, TRIM(DISTINCT rt0.c1)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON IFNULL(CASE WHEN vt0.c0 THEN vt0.c1 END, TRIM(DISTINCT rt0.c1)) WHERE ((((((+ (vt0.c0)))OR(((rt0.c1)<(rt0.c0)))))AND(((((vt0.c1)AND(rt0.c1)))AND(vt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0)<(rt0.c1)))+(((rt0.c1)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(rt0.c1)))+(((rt0.c1)<=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)<(rt0.c1)))+(((rt0.c1)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(rt0.c1)))+(((rt0.c1)<=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)<(rt0.c1)))+(((rt0.c1)<=(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) NOTNULL)));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 IN (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 IN (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 IN (rt0.c1)) IN ()));
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((rt0.c0 IN ())))) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((rt0.c0 IN ())))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((rt0.c0 IN ())))) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((rt0.c0 IN ())))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT))) AND (((rt0.c0 IN ())))) WHERE ((NOT (vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0)*(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0)*(vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0)*(vt0.c1)) AS TEXT));
SELECT ALL * FROM rt0 WHERE (ABS(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS(rt0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN (vt0.c1))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c1 AS TEXT) END) ORDER BY json(((vt0.c0)LIKE(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN (vt0.c1))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY json(((vt0.c0)LIKE(vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN (vt0.c1))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c1 AS TEXT) END) ORDER BY json(((vt0.c0)LIKE(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN (vt0.c1))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY json(((vt0.c0)LIKE(vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c1 IN (vt0.c1))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c1 AS TEXT) END) ORDER BY json(((vt0.c0)LIKE(vt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)!=(rt0.c0)))<=(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(rt0.c0)))<=(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)!=(rt0.c0)))<=(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(rt0.c0)))<=(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)!=(rt0.c0)))<=(CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY CAST((NOT (rt0.c1)) AS TEXT) DESC, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((NOT (rt0.c1)) AS TEXT) DESC, rt0.c2  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY CAST((NOT (rt0.c1)) AS TEXT) DESC, rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((NOT (rt0.c1)) AS TEXT) DESC, rt0.c2  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) IN ())) ORDER BY CAST((NOT (rt0.c1)) AS TEXT) DESC, rt0.c2  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((NULL) IS TRUE));
SELECT * FROM vt0 WHERE ((((('227295457')IS(vt0.c0)))%(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((('227295457')IS(vt0.c0)))%(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('227295457')IS(vt0.c0)))%(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((('227295457')IS(vt0.c0)))%(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('227295457')IS(vt0.c0)))%(CAST(vt0.c1 AS TEXT))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))IS((~ (0.2280471848059673)))) WHERE ((((vt0.c1) NOT NULL) IN (((rt0.c1)||(rt0.c1))))) ORDER BY ((((rt0.c0)*(x'5a02'))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((~ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT NULL) IN (((rt0.c1)||(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))IS((~ (0.2280471848059673)))) ORDER BY ((((rt0.c0)*(x'5a02'))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((~ (rt0.c1)))) ASC);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))IS((~ (0.2280471848059673)))) WHERE ((((vt0.c1) NOT NULL) IN (((rt0.c1)||(rt0.c1))))) ORDER BY ((((rt0.c0)*(x'5a02'))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((~ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT NULL) IN (((rt0.c1)||(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))IS((~ (0.2280471848059673)))) ORDER BY ((((rt0.c0)*(x'5a02'))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((~ (rt0.c1)))) ASC);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)))IS((~ (0.2280471848059673)))) WHERE ((((vt0.c1) NOT NULL) IN (((rt0.c1)||(rt0.c1))))) ORDER BY ((((rt0.c0)*(x'5a02'))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((~ (rt0.c1)))) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1  NULLS LAST, (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))=((((vt0.c0) ISNULL), ((vt0.c1) ISNULL), (~ (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))==((((vt0.c0) ISNULL), ((vt0.c1) ISNULL), (~ (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1  NULLS LAST, (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))=((((vt0.c0) ISNULL), ((vt0.c1) ISNULL), (~ (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))==((((vt0.c0) ISNULL), ((vt0.c1) ISNULL), (~ (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1  NULLS LAST, (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)), (~ (vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))))=((((vt0.c0) ISNULL), ((vt0.c1) ISNULL), (~ (vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY ((0.3466615540861693)LIKE(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((0.3466615540861693)LIKE(vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY ((0.3466615540861693)LIKE(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((0.3466615540861693)LIKE(vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM) ORDER BY ((0.3466615540861693)LIKE(vt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CHANGES()) ORDER BY (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CHANGES()) ORDER BY (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CHANGES()) ORDER BY (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_extract(x'', vt0.c0)) IS FALSE) WHERE (CAST((- (rt0.c1)) AS NUMERIC)) ORDER BY 0.16456863736851834 DESC, TRIM(LTRIM(rt0.c2), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_extract(x'', vt0.c0)) IS FALSE) ORDER BY 0.16456863736851834 DESC, TRIM(LTRIM(rt0.c2), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_extract(x'', vt0.c0)) IS FALSE) WHERE (CAST((- (rt0.c1)) AS NUMERIC)) ORDER BY 0.16456863736851834 DESC, TRIM(LTRIM(rt0.c2), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_extract(x'', vt0.c0)) IS FALSE) ORDER BY 0.16456863736851834 DESC, TRIM(LTRIM(rt0.c2), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_extract(x'', vt0.c0)) IS FALSE) WHERE (CAST((- (rt0.c1)) AS NUMERIC)) ORDER BY 0.16456863736851834 DESC, TRIM(LTRIM(rt0.c2), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)IS NOT(rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE) ORDER BY '-857434272' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-857434272' ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE) ORDER BY '-857434272' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-857434272' ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE) ORDER BY '-857434272' ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (('-257498265' IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((('-257498265' IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (('-257498265' IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((('-257498265' IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (('-257498265' IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT * FROM rt0 WHERE (0.8474744556580359) ORDER BY PRINTF(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.8474744556580359) IS TRUE)  as count FROM rt0 ORDER BY PRINTF(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (0.8474744556580359) ORDER BY PRINTF(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.8474744556580359) IS TRUE)  as count FROM rt0 ORDER BY PRINTF(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (0.8474744556580359) ORDER BY PRINTF(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY vt0.c1 DESC;
SELECT COUNT(*) FROM rt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY ((rt0.c2 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 IN ()) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY ((rt0.c2 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 IN ()) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY ((rt0.c2 IN ()) IN ()) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0))>(((NOT (rt0.c2)))))) ORDER BY CASE RTRIM(rt0.c2)  WHEN (('-2034383552') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN 3732053 ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE RTRIM(rt0.c2)  WHEN (('-2034383552') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN 3732053 ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END, rt0.c1 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0))>(((NOT (rt0.c2)))))) ORDER BY CASE RTRIM(rt0.c2)  WHEN (('-2034383552') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN 3732053 ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>(((NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE RTRIM(rt0.c2)  WHEN (('-2034383552') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN 3732053 ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END, rt0.c1 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0))>(((NOT (rt0.c2)))))) ORDER BY CASE RTRIM(rt0.c2)  WHEN (('-2034383552') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN 3732053 ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END END, rt0.c1 ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT ((vt0.c0) ISNULL))) ORDER BY ((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)OR((+ (vt0.c1)))))AND(((NULL) NOT NULL))) DESC  NULLS LAST, ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE 0.314791495948181 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)OR((+ (vt0.c1)))))AND(((NULL) NOT NULL))) DESC  NULLS LAST, ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE 0.314791495948181 END) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT ((vt0.c0) ISNULL))) ORDER BY ((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)OR((+ (vt0.c1)))))AND(((NULL) NOT NULL))) DESC  NULLS LAST, ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE 0.314791495948181 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)OR((+ (vt0.c1)))))AND(((NULL) NOT NULL))) DESC  NULLS LAST, ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE 0.314791495948181 END) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (LOWER(DISTINCT ((vt0.c0) ISNULL))) ORDER BY ((((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)OR((+ (vt0.c1)))))AND(((NULL) NOT NULL))) DESC  NULLS LAST, ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE 0.314791495948181 END) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(x'')), (rt0.c2 IN ()), rt0.c2)) AND ((CAST('' AS REAL), '', ((rt0.c1)>=(vt0.c0)))))) ORDER BY ((rt0.c1) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(x'')), (rt0.c2 IN ()), rt0.c2)) AND ((CAST('' AS REAL), '', ((rt0.c1)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY ((rt0.c1) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>=(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(x'')), (rt0.c2 IN ()), rt0.c2)) AND ((CAST('' AS REAL), '', ((rt0.c1)>=(vt0.c0)))))) ORDER BY ((rt0.c1) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(x'')), (rt0.c2 IN ()), rt0.c2)) AND ((CAST('' AS REAL), '', ((rt0.c1)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED ORDER BY ((rt0.c1) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>=(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(x'')), (rt0.c2 IN ()), rt0.c2)) AND ((CAST('' AS REAL), '', ((rt0.c1)>=(vt0.c0)))))) ORDER BY ((rt0.c1) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>=(rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (IFNULL(DISTINCT ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)), ((rt0.c1)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)), ((rt0.c1)>>(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (IFNULL(DISTINCT ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)), ((rt0.c1)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)), ((rt0.c1)>>(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (IFNULL(DISTINCT ((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)), ((rt0.c1)>>(rt0.c1))));
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)LIKE(NULL))  WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c0 IN (rt0.c1, rt0.c0)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c2 END THEN (((('1266150371')AND(rt0.c0)))AND(NULL)) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2))=((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)LIKE(NULL))  WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c0 IN (rt0.c1, rt0.c0)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c2 END THEN (((('1266150371')AND(rt0.c0)))AND(NULL)) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2))=((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)LIKE(NULL))  WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c0 IN (rt0.c1, rt0.c0)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c2 END THEN (((('1266150371')AND(rt0.c0)))AND(NULL)) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2))=((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)LIKE(NULL))  WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c0 IN (rt0.c1, rt0.c0)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c2 END THEN (((('1266150371')AND(rt0.c0)))AND(NULL)) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2))=((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)LIKE(NULL))  WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c0 IN (rt0.c1, rt0.c0)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c2 END THEN (((('1266150371')AND(rt0.c0)))AND(NULL)) WHEN ((rt0.c2) ISNULL) THEN (((rt0.c2))=((rt0.c0))) END);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)!=(vt0.c1))))) ORDER BY (((((vt0.c1) IS TRUE)))<=((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) IS TRUE)))<=((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)!=(vt0.c1))))) ORDER BY (((((vt0.c1) IS TRUE)))<=((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) IS TRUE)))<=((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c0)!=(vt0.c1))))) ORDER BY (((((vt0.c1) IS TRUE)))<=((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1, rt0.c1, vt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))) COLLATE NOCASE) ORDER BY '<3R'  NULLS LAST, ((TYPEOF(DISTINCT vt0.c0)) IS FALSE)  NULLS FIRST, 0.8228483202743605 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, vt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY '<3R'  NULLS LAST, ((TYPEOF(DISTINCT vt0.c0)) IS FALSE)  NULLS FIRST, 0.8228483202743605 ASC);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1, rt0.c1, vt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))) COLLATE NOCASE) ORDER BY '<3R'  NULLS LAST, ((TYPEOF(DISTINCT vt0.c0)) IS FALSE)  NULLS FIRST, 0.8228483202743605 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, vt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY '<3R'  NULLS LAST, ((TYPEOF(DISTINCT vt0.c0)) IS FALSE)  NULLS FIRST, 0.8228483202743605 ASC);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1, rt0.c1, vt0.c1))<=((rt0.c0, rt0.c1, vt0.c0))) COLLATE NOCASE) ORDER BY '<3R'  NULLS LAST, ((TYPEOF(DISTINCT vt0.c0)) IS FALSE)  NULLS FIRST, 0.8228483202743605 ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) NOTNULL))>=(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOTNULL))>=(vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) NOTNULL))>=(vt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOTNULL))>=(vt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) NOTNULL))>=(vt0.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((((vt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY TYPEOF(rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((((vt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TYPEOF(rt0.c1 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((((vt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY TYPEOF(rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((((vt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TYPEOF(rt0.c1 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c2))) NOT BETWEEN (TRIM(rt0.c0)) AND ((((vt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, vt0.c1, vt0.c0, vt0.c0)))))) ORDER BY TYPEOF(rt0.c1 COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 END)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN vt0.c0 END)IS NOT(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 END)IS NOT(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN vt0.c0 END)IS NOT(rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 END)IS NOT(rt0.c2)));
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS REAL) THEN (vt0.c0 IN ()) WHEN vt0.c1 COLLATE BINARY THEN '+j-p|' WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY NULLIF(CAST('-1647740840' AS INTEGER), '') ASC, (((vt0.c0)) BETWEEN ((0.3523974200282658 COLLATE RTRIM)) AND ((json_quote(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c1 AS REAL) THEN (vt0.c0 IN ()) WHEN vt0.c1 COLLATE BINARY THEN '+j-p|' WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(CAST('-1647740840' AS INTEGER), '') ASC, (((vt0.c0)) BETWEEN ((0.3523974200282658 COLLATE RTRIM)) AND ((json_quote(vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS REAL) THEN (vt0.c0 IN ()) WHEN vt0.c1 COLLATE BINARY THEN '+j-p|' WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END) ORDER BY NULLIF(CAST('-1647740840' AS INTEGER), '') ASC, (((vt0.c0)) BETWEEN ((0.3523974200282658 COLLATE RTRIM)) AND ((json_quote(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c1 AS REAL) THEN (vt0.c0 IN ()) WHEN vt0.c1 COLLATE BINARY THEN '+j-p|' WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(CAST('-1647740840' AS INTEGER), '') ASC, (((vt0.c0)) BETWEEN ((0.3523974200282658 COLLATE RTRIM)) AND ((json_quote(vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((-1.999403757E9) NOT BETWEEN (rt0.c0) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) WHERE ((((((rt0.c2)LIKE(vt0.c0))))<=(((rt0.c1 IN ()))))) ORDER BY (((NOT (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)LIKE(vt0.c0))))<=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((-1.999403757E9) NOT BETWEEN (rt0.c0) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) ORDER BY (((NOT (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((-1.999403757E9) NOT BETWEEN (rt0.c0) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) WHERE ((((((rt0.c2)LIKE(vt0.c0))))<=(((rt0.c1 IN ()))))) ORDER BY (((NOT (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)LIKE(vt0.c0))))<=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((-1.999403757E9) NOT BETWEEN (rt0.c0) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) ORDER BY (((NOT (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((-1.999403757E9) NOT BETWEEN (rt0.c0) AND (CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END)) WHERE ((((((rt0.c2)LIKE(vt0.c0))))<=(((rt0.c1 IN ()))))) ORDER BY (((NOT (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c0, rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (rt0.c0, rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c0, rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (rt0.c0, rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c0, rt0.c1)) AS TEXT));
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((x'36c3') BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'36c3') BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'36c3') BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'36c3') BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'36c3') BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)>(rt0.c1 COLLATE BINARY))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)>(rt0.c1 COLLATE BINARY))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)>(rt0.c1 COLLATE BINARY))) ORDER BY vt0.c1;
SELECT ALL * FROM vt0 WHERE (x'53e8');
SELECT SUM(count) FROM (SELECT ALL ((x'53e8') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'53e8');
SELECT SUM(count) FROM (SELECT ALL ((x'53e8') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'53e8');
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, 0.6158100958154242)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND ('0.016917541022734794')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, 0.6158100958154242)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND ('0.016917541022734794')) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, 0.6158100958154242)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND ('0.016917541022734794')) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, 0.6158100958154242)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND ('0.016917541022734794')) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c1, 0.6158100958154242)))) BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c1) AND ('0.016917541022734794')) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT (rt0.c1 IN ()), 0.6617890178499276));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (rt0.c1 IN ()), 0.6617890178499276)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT (rt0.c1 IN ()), 0.6617890178499276));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (rt0.c1 IN ()), 0.6617890178499276)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT (rt0.c1 IN ()), 0.6617890178499276));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c0) IS TRUE)))) ORDER BY ((~ (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c1)) IN ()));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c0) IS TRUE)))) ORDER BY ((~ (rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c1)) IN ()));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c0) IS TRUE)))) ORDER BY ((~ (rt0.c1)) IN ());
SELECT COUNT(*) FROM rt0 WHERE (((SQLITE_VERSION()) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((SQLITE_VERSION()) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((SQLITE_VERSION()) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY rt0.c0;
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)) ORDER BY ((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)IS(((rt0.c1)<=(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)IS(((rt0.c1)<=(NULL)))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)) ORDER BY ((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)IS(((rt0.c1)<=(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)IS(((rt0.c1)<=(NULL)))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS REAL)) ORDER BY ((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)IS(((rt0.c1)<=(NULL))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((- ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((- ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((- ((- (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ('-1532331468');
SELECT SUM(count) FROM (SELECT (('-1532331468') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('-1532331468');
SELECT SUM(count) FROM (SELECT (('-1532331468') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ('-1532331468');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 COLLATE RTRIM, LIKELY(x''), (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<((((NULL) NOTNULL), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))))) ORDER BY (((vt0.c0)) BETWEEN ((0.5391880654727379)) AND ((((rt0.c1)||(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, LIKELY(x''), (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<((((NULL) NOTNULL), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((0.5391880654727379)) AND ((((rt0.c1)||(vt0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 COLLATE RTRIM, LIKELY(x''), (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<((((NULL) NOTNULL), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))))) ORDER BY (((vt0.c0)) BETWEEN ((0.5391880654727379)) AND ((((rt0.c1)||(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, LIKELY(x''), (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<((((NULL) NOTNULL), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((0.5391880654727379)) AND ((((rt0.c1)||(vt0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 COLLATE RTRIM, LIKELY(x''), (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<((((NULL) NOTNULL), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))))) ORDER BY (((vt0.c0)) BETWEEN ((0.5391880654727379)) AND ((((rt0.c1)||(vt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((((rt0.c1)OR(vt0.c0)))OR(rt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((((rt0.c1)OR(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((((rt0.c1)OR(vt0.c0)))OR(rt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((((rt0.c1)OR(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((((rt0.c1)OR(vt0.c0)))OR(rt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT * FROM rt0, vt0 WHERE (0.728958695640229);
SELECT SUM(count) FROM (SELECT ALL ((0.728958695640229) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (0.728958695640229);
SELECT SUM(count) FROM (SELECT ALL ((0.728958695640229) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (0.728958695640229);
SELECT * FROM rt0, vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY (((vt0.c1 COLLATE BINARY))>(((- (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1 COLLATE BINARY))>(((- (rt0.c1))))) ASC);
SELECT * FROM rt0, vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY (((vt0.c1 COLLATE BINARY))>(((- (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1 COLLATE BINARY))>(((- (rt0.c1))))) ASC);
SELECT * FROM rt0, vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY (((vt0.c1 COLLATE BINARY))>(((- (rt0.c1))))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY (~ (((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY (~ (((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY (~ (((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(NULL) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(NULL) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(NULL) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(NULL) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(NULL) THEN (vt0.c1 IN ()) ELSE (vt0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END;
SELECT * FROM rt0 WHERE (((((((rt0.c0)-(rt0.c1)))AND((~ (rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'4279' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((rt0.c2 IN ())))<=(((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)-(rt0.c1)))AND((~ (rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'4279' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))<=(((~ (rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((rt0.c0)-(rt0.c1)))AND((~ (rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'4279' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((rt0.c2 IN ())))<=(((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)-(rt0.c1)))AND((~ (rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'4279' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))<=(((~ (rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((rt0.c0)-(rt0.c1)))AND((~ (rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'4279' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY ((((rt0.c2 IN ())))<=(((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN '-691254012' WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LIKELY(rt0.c0) ELSE ((((((((-1801681085)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(((rt0.c0) BETWEEN ('7&') AND (rt0.c0)))))OR(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS INTEGER)  WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN '-691254012' WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LIKELY(rt0.c0) ELSE ((((((((-1801681085)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(((rt0.c0) BETWEEN ('7&') AND (rt0.c0)))))OR(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN '-691254012' WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LIKELY(rt0.c0) ELSE ((((((((-1801681085)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(((rt0.c0) BETWEEN ('7&') AND (rt0.c0)))))OR(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS INTEGER)  WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN '-691254012' WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LIKELY(rt0.c0) ELSE ((((((((-1801681085)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(((rt0.c0) BETWEEN ('7&') AND (rt0.c0)))))OR(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN '-691254012' WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN LIKELY(rt0.c0) ELSE ((((((((-1801681085)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(((rt0.c0) BETWEEN ('7&') AND (rt0.c0)))))OR(rt0.c0)))AND(((rt0.c0) NOTNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ()), (((vt0.c1, vt0.c0, x'2d5e')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, '0', vt0.c0))), vt0.c0 COLLATE NOCASE))!=((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, COALESCE(DISTINCT vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ()), (((vt0.c1, vt0.c0, x'2d5e')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, '0', vt0.c0))), vt0.c0 COLLATE NOCASE))!=((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, COALESCE(DISTINCT vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ()), (((vt0.c1, vt0.c0, x'2d5e')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, '0', vt0.c0))), vt0.c0 COLLATE NOCASE))!=((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, COALESCE(DISTINCT vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ()), (((vt0.c1, vt0.c0, x'2d5e')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, '0', vt0.c0))), vt0.c0 COLLATE NOCASE))!=((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, COALESCE(DISTINCT vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ()), (((vt0.c1, vt0.c0, x'2d5e')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, '0', vt0.c0))), vt0.c0 COLLATE NOCASE))!=((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, COALESCE(DISTINCT vt0.c1, vt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c1)AND(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c1)))AND(NULL)) WHEN rt0.c1 THEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN ((rt0.c2)>=(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN ((rt0.c1)AND(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c1)))AND(NULL)) WHEN rt0.c1 THEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN ((rt0.c2)>=(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c1)AND(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c1)))AND(NULL)) WHEN rt0.c1 THEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN ((rt0.c2)>=(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN ((rt0.c1)AND(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c1)))AND(NULL)) WHEN rt0.c1 THEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN ((rt0.c2)>=(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((rt0.c1)AND(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c1)))AND(NULL)) WHEN rt0.c1 THEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END WHEN ((rt0.c2)>=(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))) END);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0 IN (rt0.c0)))*(((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0)))*(((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0 IN (rt0.c0)))*(((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0)))*(((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0 IN (rt0.c0)))*(((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE ((~ (((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ (((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ (((rt0.c2)LIKE(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))||((((vt0.c1, vt0.c0, x'7990'))<=((x'', vt0.c0, rt0.c2)))))) ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))||((((vt0.c1, vt0.c0, x'7990'))<=((x'', vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))||((((vt0.c1, vt0.c0, x'7990'))<=((x'', vt0.c0, rt0.c2)))))) ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))||((((vt0.c1, vt0.c0, x'7990'))<=((x'', vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) IS TRUE))||((((vt0.c1, vt0.c0, x'7990'))<=((x'', vt0.c0, rt0.c2)))))) ORDER BY ((((rt0.c1) ISNULL)) IS TRUE)  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (TYPEOF(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(vt0.c0) COLLATE BINARY);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((x'')*(((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'')*(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'')*(((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'')*(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'')*(((vt0.c0)<=(vt0.c1)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)) WHERE ((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT ('3S')), rt0.c1 COLLATE RTRIM, x'')) AND ((((vt0.c0) NOT NULL), '', -1561147137)))) ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)  NULLS LAST, ((CASE WHEN rt0.c1 THEN vt0.c1 ELSE '1037436027' END) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT ('3S')), rt0.c1 COLLATE RTRIM, x'')) AND ((((vt0.c0) NOT NULL), '', -1561147137)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)  NULLS LAST, ((CASE WHEN rt0.c1 THEN vt0.c1 ELSE '1037436027' END) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)) WHERE ((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT ('3S')), rt0.c1 COLLATE RTRIM, x'')) AND ((((vt0.c0) NOT NULL), '', -1561147137)))) ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)  NULLS LAST, ((CASE WHEN rt0.c1 THEN vt0.c1 ELSE '1037436027' END) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT ('3S')), rt0.c1 COLLATE RTRIM, x'')) AND ((((vt0.c0) NOT NULL), '', -1561147137)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)  NULLS LAST, ((CASE WHEN rt0.c1 THEN vt0.c1 ELSE '1037436027' END) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c2 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)) WHERE ((((vt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((NOT ('3S')), rt0.c1 COLLATE RTRIM, x'')) AND ((((vt0.c0) NOT NULL), '', -1561147137)))) ORDER BY CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)  NULLS LAST, ((CASE WHEN rt0.c1 THEN vt0.c1 ELSE '1037436027' END) BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c0) IS FALSE)))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((vt0.c1 IN (rt0.c1, vt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1 IN (rt0.c1, vt0.c0))) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((vt0.c1 IN (rt0.c1, vt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c1 IN (rt0.c1, vt0.c0))) ISNULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((vt0.c1 IN (rt0.c1, vt0.c0))) ISNULL)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0))<((rt0.c1))) AS NUMERIC)) ORDER BY ((rt0.c1 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))<((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0))<((rt0.c1))) AS NUMERIC)) ORDER BY ((rt0.c1 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))<((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0))<((rt0.c1))) AS NUMERIC)) ORDER BY ((rt0.c1 COLLATE BINARY) IS FALSE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT * FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 COLLATE NOCASE WHEN CAST('/1 [' AS TEXT) THEN TYPEOF(DISTINCT rt0.c0) WHEN (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))>=((rt0.c1, -2.034383552E9, rt0.c0, rt0.c1, rt0.c0))) THEN LIKELY(rt0.c2) WHEN (((rt0.c1))==((rt0.c1))) THEN '1133565039' ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, NULL))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) IS FALSE)  WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 COLLATE NOCASE WHEN CAST('/1 [' AS TEXT) THEN TYPEOF(DISTINCT rt0.c0) WHEN (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))>=((rt0.c1, -2.034383552E9, rt0.c0, rt0.c1, rt0.c0))) THEN LIKELY(rt0.c2) WHEN (((rt0.c1))==((rt0.c1))) THEN '1133565039' ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, NULL))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 COLLATE NOCASE WHEN CAST('/1 [' AS TEXT) THEN TYPEOF(DISTINCT rt0.c0) WHEN (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))>=((rt0.c1, -2.034383552E9, rt0.c0, rt0.c1, rt0.c0))) THEN LIKELY(rt0.c2) WHEN (((rt0.c1))==((rt0.c1))) THEN '1133565039' ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, NULL))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) IS FALSE)  WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 COLLATE NOCASE WHEN CAST('/1 [' AS TEXT) THEN TYPEOF(DISTINCT rt0.c0) WHEN (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))>=((rt0.c1, -2.034383552E9, rt0.c0, rt0.c1, rt0.c0))) THEN LIKELY(rt0.c2) WHEN (((rt0.c1))==((rt0.c1))) THEN '1133565039' ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, NULL))) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 COLLATE NOCASE WHEN CAST('/1 [' AS TEXT) THEN TYPEOF(DISTINCT rt0.c0) WHEN (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))>=((rt0.c1, -2.034383552E9, rt0.c0, rt0.c1, rt0.c0))) THEN LIKELY(rt0.c2) WHEN (((rt0.c1))==((rt0.c1))) THEN '1133565039' ELSE (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c2, rt0.c1, NULL))) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CAST(((rt0.c2)>(vt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)>(vt0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CAST(((rt0.c2)>(vt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)>(vt0.c1)) AS REAL) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CAST(((rt0.c2)>(vt0.c1)) AS REAL) DESC;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN 0.7543709153045587 WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.6916986730844756')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN 0.7543709153045587 WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.6916986730844756')) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN 0.7543709153045587 WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.6916986730844756')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN 0.7543709153045587 WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.6916986730844756')) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2) ISNULL)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END THEN 0.7543709153045587 WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 COLLATE RTRIM WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.6916986730844756')) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (('349037161', rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (('349037161', rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (('349037161', rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (('349037161', rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (('349037161', rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (-1.242987293E9 COLLATE BINARY) ORDER BY COALESCE(DISTINCT (((vt0.c0, rt0.c1, rt0.c1))=((vt0.c0, rt0.c0, 0xffffffff96eabf7b))), ((rt0.c0) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.242987293E9 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(DISTINCT (((vt0.c0, rt0.c1, rt0.c1))=((vt0.c0, rt0.c0, 0xffffffff96eabf7b))), ((rt0.c0) IS TRUE))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (-1.242987293E9 COLLATE BINARY) ORDER BY COALESCE(DISTINCT (((vt0.c0, rt0.c1, rt0.c1))=((vt0.c0, rt0.c0, 0xffffffff96eabf7b))), ((rt0.c0) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.242987293E9 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(DISTINCT (((vt0.c0, rt0.c1, rt0.c1))=((vt0.c0, rt0.c0, 0xffffffff96eabf7b))), ((rt0.c0) IS TRUE))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (-1.242987293E9 COLLATE BINARY) ORDER BY COALESCE(DISTINCT (((vt0.c0, rt0.c1, rt0.c1))=((vt0.c0, rt0.c0, 0xffffffff96eabf7b))), ((rt0.c0) IS TRUE))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0)GLOB(rt0.c2)))*(((rt0.c2) ISNULL))) WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2))) IS FALSE)) ORDER BY (- ((((('Y*>P6s9')AND(0.0559483650200685)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt0.c0)GLOB(rt0.c2)))*(((rt0.c2) ISNULL))) ORDER BY (- ((((('Y*>P6s9')AND(0.0559483650200685)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0)GLOB(rt0.c2)))*(((rt0.c2) ISNULL))) WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2))) IS FALSE)) ORDER BY (- ((((('Y*>P6s9')AND(0.0559483650200685)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt0.c0)GLOB(rt0.c2)))*(((rt0.c2) ISNULL))) ORDER BY (- ((((('Y*>P6s9')AND(0.0559483650200685)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((vt0.c0)GLOB(rt0.c2)))*(((rt0.c2) ISNULL))) WHERE (((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c2))) IS FALSE)) ORDER BY (- ((((('Y*>P6s9')AND(0.0559483650200685)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT ((vt0.c1)IS NOT(rt0.c1))) WHERE (0.34691630563454234) ORDER BY (((rt0.c2 IN ())) BETWEEN (vt0.c1) AND (((((rt0.c2)OR(rt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.34691630563454234) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT ((vt0.c1)IS NOT(rt0.c1))) ORDER BY (((rt0.c2 IN ())) BETWEEN (vt0.c1) AND (((((rt0.c2)OR(rt0.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT ((vt0.c1)IS NOT(rt0.c1))) WHERE (0.34691630563454234) ORDER BY (((rt0.c2 IN ())) BETWEEN (vt0.c1) AND (((((rt0.c2)OR(rt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.34691630563454234) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT ((vt0.c1)IS NOT(rt0.c1))) ORDER BY (((rt0.c2 IN ())) BETWEEN (vt0.c1) AND (((((rt0.c2)OR(rt0.c0)))OR(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON UPPER(DISTINCT ((vt0.c1)IS NOT(rt0.c1))) WHERE (0.34691630563454234) ORDER BY (((rt0.c2 IN ())) BETWEEN (vt0.c1) AND (((((rt0.c2)OR(rt0.c0)))OR(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY '');
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY '');
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY '';
SELECT ALL * FROM vt0, rt0 WHERE (rtreenode(NULL, (rt0.c1 IN ()))) ORDER BY ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((vt0.c1)IS('tJMoWDMq'))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE '4e/5uc4앀' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, (rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((vt0.c1)IS('tJMoWDMq'))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE '4e/5uc4앀' END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rtreenode(NULL, (rt0.c1 IN ()))) ORDER BY ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((vt0.c1)IS('tJMoWDMq'))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE '4e/5uc4앀' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, (rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((vt0.c1)IS('tJMoWDMq'))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE '4e/5uc4앀' END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rtreenode(NULL, (rt0.c1 IN ()))) ORDER BY ((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (((vt0.c1)IS('tJMoWDMq'))) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE '4e/5uc4앀' END)) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((NULL))<((((rt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<((((rt0.c1) NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((NULL))<((((rt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<((((rt0.c1) NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((NULL))<((((rt0.c1) NOT NULL)))));
SELECT * FROM rt0 WHERE (('y%|g*Fr(' IN ())) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((('y%|g*Fr(' IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE (('y%|g*Fr(' IN ())) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((('y%|g*Fr(' IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE (('y%|g*Fr(' IN ())) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (('220196054') NOTNULL) WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (('220196054') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (('220196054') NOTNULL) WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (('220196054') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (('220196054') NOTNULL) WHERE ((NOT ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)<(rt0.c0))))) ORDER BY CASE WHEN MAX(rt0.c2, rt0.c1, x'', rt0.c1) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c0)<=(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN load_extension(rt0.c0, rt0.c1) WHEN LOWER(rt0.c1) THEN x'0ce9' ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN MAX(rt0.c2, rt0.c1, x'', rt0.c1) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c0)<=(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN load_extension(rt0.c0, rt0.c1) WHEN LOWER(rt0.c1) THEN x'0ce9' ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)<(rt0.c0))))) ORDER BY CASE WHEN MAX(rt0.c2, rt0.c1, x'', rt0.c1) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c0)<=(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN load_extension(rt0.c0, rt0.c1) WHEN LOWER(rt0.c1) THEN x'0ce9' ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN MAX(rt0.c2, rt0.c1, x'', rt0.c1) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c0)<=(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN load_extension(rt0.c0, rt0.c1) WHEN LOWER(rt0.c1) THEN x'0ce9' ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)<(rt0.c0))))) ORDER BY CASE WHEN MAX(rt0.c2, rt0.c1, x'', rt0.c1) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c0)<=(rt0.c1)) THEN (rt0.c2 IN (rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN load_extension(rt0.c0, rt0.c1) WHEN LOWER(rt0.c1) THEN x'0ce9' ELSE rt0.c0 END;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(-1327048478)) THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(-1327048478)) THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(-1327048478)) THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(-1327048478)) THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(-1327048478)) THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (x''))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (x''))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (x''))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c1)))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))))OR(NULL)))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))))OR(NULL)))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c1)))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))))OR(NULL)))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))))OR(NULL)))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c1)))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))))OR(NULL)))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1) ISNULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-894255910))))) ORDER BY QUOTE('0.8925816854073327') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1) ISNULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-894255910))))) IS TRUE)  as count FROM vt0 ORDER BY QUOTE('0.8925816854073327') ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1) ISNULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-894255910))))) ORDER BY QUOTE('0.8925816854073327') ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1) ISNULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-894255910))))) IS TRUE)  as count FROM vt0 ORDER BY QUOTE('0.8925816854073327') ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c1) ISNULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-894255910))))) ORDER BY QUOTE('0.8925816854073327') ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'f8d6'))) IN ()) WHERE (((((rt0.c2)IS(rt0.c2)))*(((rt0.c2)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2)))*(((rt0.c2)LIKE(vt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'f8d6'))) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'f8d6'))) IN ()) WHERE (((((rt0.c2)IS(rt0.c2)))*(((rt0.c2)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c2)))*(((rt0.c2)LIKE(vt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'f8d6'))) IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'f8d6'))) IN ()) WHERE (((((rt0.c2)IS(rt0.c2)))*(((rt0.c2)LIKE(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0)))GLOB(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))GLOB(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0)))GLOB(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))GLOB(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0)))GLOB(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0, vt0 WHERE ('993663395') ORDER BY CASE WHEN '901613562' THEN (rt0.c2 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL (('993663395') IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN '901613562' THEN (rt0.c2 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END END);
SELECT ALL * FROM rt0, vt0 WHERE ('993663395') ORDER BY CASE WHEN '901613562' THEN (rt0.c2 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL (('993663395') IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN '901613562' THEN (rt0.c2 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END END);
SELECT ALL * FROM rt0, vt0 WHERE ('993663395') ORDER BY CASE WHEN '901613562' THEN (rt0.c2 IN ()) ELSE CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END END;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)IS(rt0.c1)))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY x''  NULLS LAST, CASE (NOT (vt0.c0))  WHEN (- (rt0.c1)) THEN (('-257498265')>(vt0.c0)) ELSE CASE WHEN vt0.c1 THEN rt0.c0 END END ASC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c1)))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x''  NULLS LAST, CASE (NOT (vt0.c0))  WHEN (- (rt0.c1)) THEN (('-257498265')>(vt0.c0)) ELSE CASE WHEN vt0.c1 THEN rt0.c0 END END ASC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)IS(rt0.c1)))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY x''  NULLS LAST, CASE (NOT (vt0.c0))  WHEN (- (rt0.c1)) THEN (('-257498265')>(vt0.c0)) ELSE CASE WHEN vt0.c1 THEN rt0.c0 END END ASC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c1)))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x''  NULLS LAST, CASE (NOT (vt0.c0))  WHEN (- (rt0.c1)) THEN (('-257498265')>(vt0.c0)) ELSE CASE WHEN vt0.c1 THEN rt0.c0 END END ASC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)IS(rt0.c1)))<=(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY x''  NULLS LAST, CASE (NOT (vt0.c0))  WHEN (- (rt0.c1)) THEN (('-257498265')>(vt0.c0)) ELSE CASE WHEN vt0.c1 THEN rt0.c0 END END ASC  NULLS LAST, ((((vt0.c1) NOT NULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c0)) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))>(((rt0.c2) IS TRUE)))) ORDER BY 0.6516437186360058  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))>(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY 0.6516437186360058  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))>(((rt0.c2) IS TRUE)))) ORDER BY 0.6516437186360058  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))>(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY 0.6516437186360058  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))>(((rt0.c2) IS TRUE)))) ORDER BY 0.6516437186360058  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)/(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)/(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)/(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)/(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)/(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&((((vt0.c0))==((vt0.c1)))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))=(((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)&((((vt0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))==(((vt0.c0)/(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&((((vt0.c0))==((vt0.c1)))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))=(((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)&((((vt0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))==(((vt0.c0)/(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&((((vt0.c0))==((vt0.c1)))))) ORDER BY ((CAST(vt0.c1 AS INTEGER))=(((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<<(0.2404819403680486)))>=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(0.2404819403680486)))>=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<<(0.2404819403680486)))>=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(0.2404819403680486)))>=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<<(0.2404819403680486)))>=(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN ()))GLOB(((((vt0.c1)AND(rt0.c1)))AND(vt0.c1))))) ORDER BY CAST(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))GLOB(((((vt0.c1)AND(rt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN ()))GLOB(((((vt0.c1)AND(rt0.c1)))AND(vt0.c1))))) ORDER BY CAST(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))GLOB(((((vt0.c1)AND(rt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0 IN ()))GLOB(((((vt0.c1)AND(rt0.c1)))AND(vt0.c1))))) ORDER BY CAST(((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)) AS BLOB) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)>=(vt0.c1))) BETWEEN ((vt0.c1 IN (rt0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(vt0.c1))) BETWEEN ((vt0.c1 IN (rt0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)>=(vt0.c1))) BETWEEN ((vt0.c1 IN (rt0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(vt0.c1))) BETWEEN ((vt0.c1 IN (rt0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c1)>=(vt0.c1))) BETWEEN ((vt0.c1 IN (rt0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (('v裡.BmG줬(') IS TRUE) THEN (((rt0.c1))>((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN (('v裡.BmG줬(') IS TRUE) THEN (((rt0.c1))>((vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (('v裡.BmG줬(') IS TRUE) THEN (((rt0.c1))>((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN (('v裡.BmG줬(') IS TRUE) THEN (((rt0.c1))>((vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (('v裡.BmG줬(') IS TRUE) THEN (((rt0.c1))>((vt0.c0))) END);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN json_array(rt0.c2, rt0.c1) ELSE NULL END WHERE (((((rt0.c2 IN ())))<(((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((x'e221', rt0.c2, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ())))<(((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((x'e221', rt0.c2, rt0.c0))))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN json_array(rt0.c2, rt0.c1) ELSE NULL END);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN json_array(rt0.c2, rt0.c1) ELSE NULL END WHERE (((((rt0.c2 IN ())))<(((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((x'e221', rt0.c2, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ())))<(((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((x'e221', rt0.c2, rt0.c0))))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN json_array(rt0.c2, rt0.c1) ELSE NULL END);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN json_array(rt0.c2, rt0.c1) ELSE NULL END WHERE (((((rt0.c2 IN ())))<(((((rt0.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c2)) AND ((x'e221', rt0.c2, rt0.c0)))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB)) ORDER BY ((((vt0.c1) IS TRUE))%(((rt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1) IS TRUE))%(((rt0.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB)) ORDER BY ((((vt0.c1) IS TRUE))%(((rt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1) IS TRUE))%(((rt0.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS BLOB)) ORDER BY ((((vt0.c1) IS TRUE))%(((rt0.c0) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))<<((vt0.c1 IN ())))) ORDER BY CAST(rt0.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))<<((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c0 AS BLOB) ASC);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))<<((vt0.c1 IN ())))) ORDER BY CAST(rt0.c0 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))<<((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c0 AS BLOB) ASC);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)))<<((vt0.c1 IN ())))) ORDER BY CAST(rt0.c0 AS BLOB) ASC;
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)||(rt0.c2)) COLLATE NOCASE) ORDER BY IFNULL(NULL, (~ (rt0.c0)))  NULLS FIRST, (((rt0.c2 IN (rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(NULL, (~ (rt0.c0)))  NULLS FIRST, (((rt0.c2 IN (rt0.c1))) IS FALSE));
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)||(rt0.c2)) COLLATE NOCASE) ORDER BY IFNULL(NULL, (~ (rt0.c0)))  NULLS FIRST, (((rt0.c2 IN (rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY IFNULL(NULL, (~ (rt0.c0)))  NULLS FIRST, (((rt0.c2 IN (rt0.c1))) IS FALSE));
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)||(rt0.c2)) COLLATE NOCASE) ORDER BY IFNULL(NULL, (~ (rt0.c0)))  NULLS FIRST, (((rt0.c2 IN (rt0.c1))) IS FALSE);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(x'' AS NUMERIC) IN (((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS NUMERIC) IN (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(x'' AS NUMERIC) IN (((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS NUMERIC) IN (((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(x'' AS NUMERIC) IN (((vt0.c0)+(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((x'7d16')>=(x'c491')), load_extension(((vt0.c1)AND(vt0.c0)), CAST(vt0.c1 AS REAL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((x'7d16')>=(x'c491')), load_extension(((vt0.c1)AND(vt0.c0)), CAST(vt0.c1 AS REAL)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY ((x'7d16')>=(x'c491')), load_extension(((vt0.c1)AND(vt0.c0)), CAST(vt0.c1 AS REAL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((x'7d16')>=(x'c491')), load_extension(((vt0.c1)AND(vt0.c0)), CAST(vt0.c1 AS REAL)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((- ((NOT (rt0.c2))))) ORDER BY (((((((((0.1634318476512826)AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((0.1634318476512826)AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)) IN ()) DESC);
SELECT * FROM rt0, vt0 WHERE ((- ((NOT (rt0.c2))))) ORDER BY (((((((((0.1634318476512826)AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((0.1634318476512826)AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)) IN ()) DESC);
SELECT * FROM rt0, vt0 WHERE ((- ((NOT (rt0.c2))))) ORDER BY (((((((((0.1634318476512826)AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c1)))AND(rt0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB))>=(((NULL)>(vt0.c0)))) WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((LENGTH(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((LENGTH(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB))>=(((NULL)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB))>=(((NULL)>(vt0.c0)))) WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((LENGTH(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((LENGTH(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB))>=(((NULL)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB))>=(((NULL)>(vt0.c0)))) WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((LENGTH(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((x'') ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'') ISNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((x'') ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'') ISNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((x'') ISNULL) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (x'fdc2');
SELECT SUM(count) FROM (SELECT ALL ((x'fdc2') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'fdc2');
SELECT SUM(count) FROM (SELECT ALL ((x'fdc2') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'fdc2');
SELECT ALL * FROM vt0, rt0 WHERE (x'') ORDER BY ((0X68e0d62d)<=(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0X68e0d62d)<=(vt0.c1)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (x'') ORDER BY ((0X68e0d62d)<=(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0X68e0d62d)<=(vt0.c1)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (x'') ORDER BY ((0X68e0d62d)<=(vt0.c1)) DESC;
SELECT * FROM rt0, vt0 WHERE ((((HEX(rt0.c0), rt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (-468807001) AND (vt0.c1))))=((NULL, CASE 0.1626782270210385  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c0  WHEN 0Xffffffffb997f02f THEN '1833733674' ELSE rt0.c2 END)))) ORDER BY 0xe1bd086 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(rt0.c0), rt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (-468807001) AND (vt0.c1))))==((NULL, CASE 0.1626782270210385  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c0  WHEN 0Xffffffffb997f02f THEN '1833733674' ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0Xe1bd086 ASC);
SELECT * FROM rt0, vt0 WHERE ((((HEX(rt0.c0), rt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (-468807001) AND (vt0.c1))))=((NULL, CASE 0.1626782270210385  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c0  WHEN 0Xffffffffb997f02f THEN '1833733674' ELSE rt0.c2 END)))) ORDER BY 0xe1bd086 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(rt0.c0), rt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (-468807001) AND (vt0.c1))))==((NULL, CASE 0.1626782270210385  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END, CASE rt0.c0  WHEN 0Xffffffffb997f02f THEN '1833733674' ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0Xe1bd086 ASC);
SELECT * FROM vt0, rt0 WHERE (((((((((TRIM(rt0.c0, vt0.c1))OR(0.43816511211070197)))OR(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (9223372036854775807)))))AND(LIKELY(rt0.c2)))) ORDER BY ((((rt0.c2)<=(vt0.c0)))>>(((rt0.c2)GLOB(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(rt0.c0, vt0.c1))OR(0.43816511211070197)))OR(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (9223372036854775807)))))AND(LIKELY(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)<=(vt0.c0)))>>(((rt0.c2)GLOB(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((TRIM(rt0.c0, vt0.c1))OR(0.43816511211070197)))OR(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (9223372036854775807)))))AND(LIKELY(rt0.c2)))) ORDER BY ((((rt0.c2)<=(vt0.c0)))>>(((rt0.c2)GLOB(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((TRIM(rt0.c0, vt0.c1))OR(0.43816511211070197)))OR(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (9223372036854775807)))))AND(LIKELY(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)<=(vt0.c0)))>>(((rt0.c2)GLOB(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((TRIM(rt0.c0, vt0.c1))OR(0.43816511211070197)))OR(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (9223372036854775807)))))AND(LIKELY(rt0.c2)))) ORDER BY ((((rt0.c2)<=(vt0.c0)))>>(((rt0.c2)GLOB(vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND((vt0.c0 IN (vt0.c1)))))AND(((rt0.c1)GLOB(vt0.c1))))) ORDER BY json_type(((vt0.c0)IS NOT(vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND((vt0.c0 IN (vt0.c1)))))AND(((rt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_type(((vt0.c0)IS NOT(vt0.c1))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND((vt0.c0 IN (vt0.c1)))))AND(((rt0.c1)GLOB(vt0.c1))))) ORDER BY json_type(((vt0.c0)IS NOT(vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND((vt0.c0 IN (vt0.c1)))))AND(((rt0.c1)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY json_type(((vt0.c0)IS NOT(vt0.c1))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND((vt0.c0 IN (vt0.c1)))))AND(((rt0.c1)GLOB(vt0.c1))))) ORDER BY json_type(((vt0.c0)IS NOT(vt0.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON 0.5624326737405152 WHERE ((((((vt0.c0 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0 IN (rt0.c2))) NOT BETWEEN ('K5y ') AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 0.5624326737405152 ORDER BY (((vt0.c0 IN (rt0.c2))) NOT BETWEEN ('K5y ') AND (vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON 0.5624326737405152 WHERE ((((((vt0.c0 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0 IN (rt0.c2))) NOT BETWEEN ('K5y ') AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON 0.5624326737405152 ORDER BY (((vt0.c0 IN (rt0.c2))) NOT BETWEEN ('K5y ') AND (vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON 0.5624326737405152 WHERE ((((((vt0.c0 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0 IN (rt0.c2))) NOT BETWEEN ('K5y ') AND (vt0.c0)) ASC;
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY (((CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT vt0.c1, 0.35035948892750035), ((vt0.c0) IS TRUE)))!=((((rt0.c0)OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL))))) ASC, (((rt0.c2 IN ()))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT vt0.c1, 0.35035948892750035), ((vt0.c0) IS TRUE)))!=((((rt0.c0)OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL))))) ASC, (((rt0.c2 IN ()))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY (((CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT vt0.c1, 0.35035948892750035), ((vt0.c0) IS TRUE)))!=((((rt0.c0)OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL))))) ASC, (((rt0.c2 IN ()))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT vt0.c1, 0.35035948892750035), ((vt0.c0) IS TRUE)))!=((((rt0.c0)OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL))))) ASC, (((rt0.c2 IN ()))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY (((CAST(rt0.c0 AS NUMERIC), LIKELIHOOD(DISTINCT vt0.c1, 0.35035948892750035), ((vt0.c0) IS TRUE)))!=((((rt0.c0)OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL))))) ASC, (((rt0.c2 IN ()))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC;
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND (((rt0.c0)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND (((rt0.c0)>>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND (((rt0.c0)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND (((rt0.c0)>>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND (((rt0.c0)>>(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c2)GLOB(8689103732544035850))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE NOCASE WHEN SQLITE_SOURCE_ID() THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END WHEN UNLIKELY(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)GLOB(8689103732544035850))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE NOCASE WHEN SQLITE_SOURCE_ID() THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END WHEN UNLIKELY(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c2)GLOB(8689103732544035850))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE NOCASE WHEN SQLITE_SOURCE_ID() THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END WHEN UNLIKELY(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)GLOB(8689103732544035850))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE NOCASE WHEN SQLITE_SOURCE_ID() THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END WHEN UNLIKELY(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((rt0.c2)GLOB(8689103732544035850))  WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 COLLATE NOCASE WHEN SQLITE_SOURCE_ID() THEN CASE WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END WHEN UNLIKELY(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (vt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (vt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (vt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (vt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (vt0.c0)))*(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY LOWER(DISTINCT vt0.c0 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT vt0.c0 COLLATE BINARY)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY LOWER(DISTINCT vt0.c0 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS TEXT)) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT vt0.c0 COLLATE BINARY)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) BETWEEN (CASE vt0.c0  WHEN NULL THEN vt0.c0 END) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ORDER BY LOWER(DISTINCT vt0.c0 COLLATE BINARY)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2)+(rt0.c2)))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST, -152542556 DESC  NULLS LAST, (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c2)+(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST, -152542556 DESC  NULLS LAST, (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT ((rt0.c2)+(rt0.c2)))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST, -152542556 DESC  NULLS LAST, (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c2)+(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST, -152542556 DESC  NULLS LAST, (rt0.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2)GLOB(-3.85362142E8))) BETWEEN ((((rt0.c1))!=((vt0.c1)))) AND (((((rt0.c2)AND(rt0.c2)))OR(vt0.c1)))) WHERE ((((rt0.c1 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (vt0.c0))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) DESC, CAST(((vt0.c1)<<(rt0.c2)) AS INTEGER), '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (vt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c2)GLOB(-3.85362142E8))) BETWEEN ((((rt0.c1))!=((vt0.c1)))) AND (((((rt0.c2)AND(rt0.c2)))OR(vt0.c1)))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) DESC, CAST(((vt0.c1)<<(rt0.c2)) AS INTEGER), '' DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2)GLOB(-3.85362142E8))) BETWEEN ((((rt0.c1))!=((vt0.c1)))) AND (((((rt0.c2)AND(rt0.c2)))OR(vt0.c1)))) WHERE ((((rt0.c1 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (vt0.c0))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) DESC, CAST(((vt0.c1)<<(rt0.c2)) AS INTEGER), '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (vt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c2)GLOB(-3.85362142E8))) BETWEEN ((((rt0.c1))!=((vt0.c1)))) AND (((((rt0.c2)AND(rt0.c2)))OR(vt0.c1)))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) DESC, CAST(((vt0.c1)<<(rt0.c2)) AS INTEGER), '' DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2)GLOB(-3.85362142E8))) BETWEEN ((((rt0.c1))!=((vt0.c1)))) AND (((((rt0.c2)AND(rt0.c2)))OR(vt0.c1)))) WHERE ((((rt0.c1 IN ())) BETWEEN (((vt0.c1) IS FALSE)) AND (vt0.c0))) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) DESC, CAST(((vt0.c1)<<(rt0.c2)) AS INTEGER), '' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>>(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)>>(rt0.c2)) AS NUMERIC));
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((json_extract(0.1626782270210385, rt0.c1, rt0.c2, rt0.c0))) AND ((CASE x'e1fa'  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((json_extract(0.1626782270210385, rt0.c1, rt0.c2, rt0.c0))) AND ((CASE x'e1fa'  WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((json_extract(0.1626782270210385, rt0.c1, rt0.c2, rt0.c0))) AND ((CASE x'e1fa'  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((json_extract(0.1626782270210385, rt0.c1, rt0.c2, rt0.c0))) AND ((CASE x'e1fa'  WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((json_extract(0.1626782270210385, rt0.c1, rt0.c2, rt0.c0))) AND ((CASE x'e1fa'  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c2))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(x'')))OR(vt0.c1)))AND(rt0.c1))) DESC  NULLS LAST, (((vt0.c1, ((rt0.c2) NOT NULL), ((rt0.c2) NOT NULL)))<=((((x'') BETWEEN (vt0.c0) AND (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(x'')))OR(vt0.c1)))AND(rt0.c1))) DESC  NULLS LAST, (((vt0.c1, ((rt0.c2) NOT NULL), ((rt0.c2) NOT NULL)))<=((((x'') BETWEEN (vt0.c0) AND (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, x''))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c2))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(x'')))OR(vt0.c1)))AND(rt0.c1))) DESC  NULLS LAST, (((vt0.c1, ((rt0.c2) NOT NULL), ((rt0.c2) NOT NULL)))<=((((x'') BETWEEN (vt0.c0) AND (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(x'')))OR(vt0.c1)))AND(rt0.c1))) DESC  NULLS LAST, (((vt0.c1, ((rt0.c2) NOT NULL), ((rt0.c2) NOT NULL)))<=((((x'') BETWEEN (vt0.c0) AND (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, x''))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c2))) ORDER BY SQLITE_COMPILEOPTION_GET(((((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(x'')))OR(vt0.c1)))AND(rt0.c1))) DESC  NULLS LAST, (((vt0.c1, ((rt0.c2) NOT NULL), ((rt0.c2) NOT NULL)))<=((((x'') BETWEEN (vt0.c0) AND (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END, x''))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))) AND ((IFNULL(vt0.c1, vt0.c1)))), ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))) AND ((IFNULL(vt0.c1, vt0.c1)))), ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))) AND ((IFNULL(vt0.c1, vt0.c1)))), ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))) AND ((IFNULL(vt0.c1, vt0.c1)))), ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((vt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))) AND ((IFNULL(vt0.c1, vt0.c1)))), ((vt0.c0) NOT NULL) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((((((x'482c', vt0.c1, rt0.c1, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c1)*(vt0.c1)))))OR(rt0.c0))) ORDER BY (json_array_length(rt0.c2) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((x'482c', vt0.c1, rt0.c1, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c1)*(vt0.c1)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (json_array_length(rt0.c2) IN ())  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((((x'482c', vt0.c1, rt0.c1, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c1)*(vt0.c1)))))OR(rt0.c0))) ORDER BY (json_array_length(rt0.c2) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((x'482c', vt0.c1, rt0.c1, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c1)*(vt0.c1)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (json_array_length(rt0.c2) IN ())  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((((x'482c', vt0.c1, rt0.c1, vt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1, vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, vt0.c0, vt0.c0))))OR(((rt0.c1)*(vt0.c1)))))OR(rt0.c0))) ORDER BY (json_array_length(rt0.c2) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(844694177 AS TEXT)) ORDER BY ((((8689103732544035850)IS(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(844694177 AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((8689103732544035850)IS(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(844694177 AS TEXT)) ORDER BY ((((8689103732544035850)IS(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(844694177 AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((8689103732544035850)IS(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(844694177 AS TEXT)) ORDER BY ((((8689103732544035850)IS(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOTNULL));
