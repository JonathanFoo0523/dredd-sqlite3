-- Time: 2024/06/11 11:48:00
-- Database: database73
-- Database version: 3.40.0
-- seed value: 3432619973
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 101); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.5556090268628605), ('x~'), (0x6f55ee09); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0='1738185461' WHERE (((1.738185461E9)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)AND('-1e500'))))); -- 1ms;
PRAGMA foreign_keys; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-1456037284', c0='469314935'; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 525847727); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE ((((((vt0.c0)/(vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.5556090268628605, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'82b4'))))))OR(vt0.c0)); -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
PRAGMA soft_heap_limit = 8609004163416933651; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0x6f55ee09); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.5556090268628605); -- 0ms;
PRAGMA cache_spill = 2080215622359064144; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('-518946318'), (0.950689181637774), (x'ca90'), (x''), (0.45717737408704884); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
CREATE UNIQUE INDEX i87 ON t0((NOT (CASE WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN NULL THEN c0 END))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i86 ON t0(c0 ASC); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('0.45717737408704884'); -- 0ms;
UPDATE OR FAIL vt0 SET c0=0.5556090268628605, c0='uxo\r' WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.028423184649302158), (0.6697010280205382), (0.3908430149950658); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'1854'); -- 0ms;
UPDATE vt0 SET c0=0.02766071106331114 WHERE ((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0)OR(vt0.c0)))); -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('0.02766071106331114'), (-1117940250), (0xffffffffa3760d1f); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE TYPEOF(((('-727769465'))>=((vt0.c0)))); -- 1ms;
PRAGMA incremental_vacuum(1687321829); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ((((('-545923320'))=((0.19000004593460684))) IN ('' COLLATE NOCASE))); -- 0ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA incremental_vacuum(-455577752); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.03788037099364605 WHERE (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.08564610793340066 WHERE (~ (HEX(vt0.c0))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
UPDATE vt0 SET c0=0.03320947442650435 WHERE (NOT (NULL)); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1, prefix = 539); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c1)=(0.41426620332723707, '') WHERE ((LAST_INSERT_ROWID())LIKE((~ (vt1.c1)))); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c1, c1)=(0Xffffffff81e46acd, 0.5882570754235378, x''); -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c63; -- 1ms;
INSERT OR FAIL INTO vt1 VALUES (x'', x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c63, c63)=(NULL, NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES ('[ㆪ}f~2K'); -- 0ms;
PRAGMA short_column_names = false; -- 1ms;
UPDATE OR IGNORE t0 SET c63=NULL, c63=0.17060218453392517; -- 0ms;
REINDEX; -- 1ms;
REINDEX  vt1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2075683550); -- 0ms;
ANALYZE temp; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA cache_spill = 1125956314872991854; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
UPDATE OR REPLACE t0 SET c63='[ㆪ}f~2K' WHERE ((((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)AND(((((t0.c63)OR(t0.c63)))OR(t0.c63)))))OR((- (t0.c63)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (0.3274728194327454); -- 0ms;
UPDATE OR IGNORE t0 SET c63=NULL WHERE CASE t0.c63  WHEN ((0.4702906745965604)&(t0.c63)) THEN (~ (t0.c63)) ELSE t0.c63 COLLATE RTRIM END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='([6''0b'; -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='vx', c0=NULL, c0=''; -- 13ms;
PRAGMA integrity_check; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1.456037284E9); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE (('-545923320')IS NOT((- (vt0.c0)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 1ms;
PRAGMA main.soft_heap_limit = 0; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i99 ON t0(((c63) IS TRUE) COLLATE NOCASE ASC) WHERE (((c63, c63, c63)) BETWEEN ((c63 COLLATE RTRIM, COALESCE(DISTINCT c63, c63, c63, c63), (- (c63)))) AND ((CASE c63  WHEN c63 THEN c63 END, (((c63))<=((''))), 0xffffffff82820447))); -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL, c0=x''; -- 0ms;
DROP TABLE IF EXISTS vt1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((0.44183606490719707 IN ('-1117940250')))>>(('W~' IN ()))); -- 0ms;
CREATE INDEX i89 ON t0(NULL COLLATE NOCASE COLLATE NOCASE COLLATE BINARY ASC) WHERE (((~ (c63)))||(((c63)GLOB(c63)))); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=('0.950689181637774'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK t0 SET c63='.uV~' WHERE ((((t0.c63)*(t0.c63)))IS NOT(((t0.c63)>(t0.c63)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -761017702);\n; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE ((('-545923320')%((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((('-545923320')%((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('-545923320')%((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((('-545923320')%((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('-545923320')%((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))))));
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt0.c0 AS INTEGER) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((+ (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c63)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((+ (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c63)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((+ (t0.c63)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL)GLOB(((t0.c63)>(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((t0.c63)>(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL)GLOB(((t0.c63)>(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((t0.c63)>(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL)GLOB(((t0.c63)>(t0.c63)))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM))) ORDER BY MIN((vt0.c0 IN ()), '-1081922048')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY MIN((vt0.c0 IN ()), '-1081922048')  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM))) ORDER BY MIN((vt0.c0 IN ()), '-1081922048')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY MIN((vt0.c0 IN ()), '-1081922048')  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM))) ORDER BY MIN((vt0.c0 IN ()), '-1081922048')  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63)-(t0.c63)))IS(((t0.c63)AND(t0.c63))))) ORDER BY CAST(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) AS BLOB)  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63)-(t0.c63)))IS(((t0.c63)AND(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) AS BLOB)  NULLS FIRST, x'' DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63)-(t0.c63)))IS(((t0.c63)AND(t0.c63))))) ORDER BY CAST(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) AS BLOB)  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63)-(t0.c63)))IS(((t0.c63)AND(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) AS BLOB)  NULLS FIRST, x'' DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63)-(t0.c63)))IS(((t0.c63)AND(t0.c63))))) ORDER BY CAST(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) AS BLOB)  NULLS FIRST, x'' DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'' COLLATE RTRIM))>=(((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, x'698a', t0.c63, t0.c63)))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' COLLATE RTRIM))>=(((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, x'698a', t0.c63, t0.c63))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'' COLLATE RTRIM))>=(((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, x'698a', t0.c63, t0.c63)))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' COLLATE RTRIM))>=(((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, x'698a', t0.c63, t0.c63))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'' COLLATE RTRIM))>=(((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, x'698a', t0.c63, t0.c63)))))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT ALL * FROM t0 WHERE (((CASE WHEN 1.867902473E9 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN NULL ELSE t0.c63 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1.867902473E9 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN NULL ELSE t0.c63 END) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN 1.867902473E9 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN NULL ELSE t0.c63 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1.867902473E9 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN NULL ELSE t0.c63 END) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN 1.867902473E9 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN NULL ELSE t0.c63 END) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'ea63', vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'ea63', vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'ea63', vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'ea63', vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'ea63', vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x''  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((+ (LIKELIHOOD(vt0.c0, 0.987229228753015))));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(vt0.c0, 0.987229228753015)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (LIKELIHOOD(vt0.c0, 0.987229228753015))));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(vt0.c0, 0.987229228753015)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (LIKELIHOOD(vt0.c0, 0.987229228753015))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((- (t0.c63)))>(((t0.c63)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c63)))>(((t0.c63)LIKE(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((- (t0.c63)))>(((t0.c63)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c63)))>(((t0.c63)LIKE(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((- (t0.c63)))>(((t0.c63)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c63)*(vt0.c0))) ISNULL)) ORDER BY (NOT ((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c63)*(vt0.c0))) ISNULL)) ORDER BY (NOT ((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c63)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c63)*(vt0.c0))) ISNULL)) ORDER BY (NOT ((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((((((t0.c63)AND(vt0.c0)))AND(0.02766071106331114)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c63)AND(vt0.c0)))AND(0.02766071106331114)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((((((t0.c63)AND(vt0.c0)))AND(0.02766071106331114)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c63)AND(vt0.c0)))AND(0.02766071106331114)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((((((((t0.c63)AND(vt0.c0)))AND(0.02766071106331114)))AND(vt0.c0)))OR(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN vt0.c0 THEN '1867902473' ELSE vt0.c0 END THEN x'd392' END WHERE (((((((vt0.c0) NOT NULL))OR((- (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY 9223372036854775807 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR((- (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN vt0.c0 THEN '1867902473' ELSE vt0.c0 END THEN x'd392' END ORDER BY 9223372036854775807 ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN vt0.c0 THEN '1867902473' ELSE vt0.c0 END THEN x'd392' END WHERE (((((((vt0.c0) NOT NULL))OR((- (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY 9223372036854775807 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR((- (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN vt0.c0 THEN '1867902473' ELSE vt0.c0 END THEN x'd392' END ORDER BY 9223372036854775807 ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN vt0.c0 THEN '1867902473' ELSE vt0.c0 END THEN x'd392' END WHERE (((((((vt0.c0) NOT NULL))OR((- (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY 9223372036854775807 ASC;
SELECT ALL * FROM vt0, t0 WHERE (CASE (((vt0.c0))>((vt0.c0)))  WHEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63)<<(t0.c63)) THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c63)) WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 ELSE x'858ac253' END WHEN (+ (t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))>((vt0.c0)))  WHEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63)<<(t0.c63)) THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c63)) WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 ELSE x'858ac253' END WHEN (+ (t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE (((vt0.c0))>((vt0.c0)))  WHEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63)<<(t0.c63)) THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c63)) WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 ELSE x'858ac253' END WHEN (+ (t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))>((vt0.c0)))  WHEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63)<<(t0.c63)) THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c63)) WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 ELSE x'858ac253' END WHEN (+ (t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE (((vt0.c0))>((vt0.c0)))  WHEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63)<<(t0.c63)) THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c63)) WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 ELSE x'858ac253' END WHEN (+ (t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(CASE t0.c63  WHEN t0.c63 THEN 0.10608221190551803 ELSE t0.c63 END, CAST(0.9847836961749997 AS NUMERIC), ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), CAST(t0.c63 AS BLOB), CASE t0.c63  WHEN NULL THEN t0.c63 WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)) ORDER BY (NOT (t0.c63 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((DATE(CASE t0.c63  WHEN t0.c63 THEN 0.10608221190551803 ELSE t0.c63 END, CAST(0.9847836961749997 AS NUMERIC), ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), CAST(t0.c63 AS BLOB), CASE t0.c63  WHEN NULL THEN t0.c63 WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c63 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(CASE t0.c63  WHEN t0.c63 THEN 0.10608221190551803 ELSE t0.c63 END, CAST(0.9847836961749997 AS NUMERIC), ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), CAST(t0.c63 AS BLOB), CASE t0.c63  WHEN NULL THEN t0.c63 WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)) ORDER BY (NOT (t0.c63 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((DATE(CASE t0.c63  WHEN t0.c63 THEN 0.10608221190551803 ELSE t0.c63 END, CAST(0.9847836961749997 AS NUMERIC), ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), CAST(t0.c63 AS BLOB), CASE t0.c63  WHEN NULL THEN t0.c63 WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c63 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(CASE t0.c63  WHEN t0.c63 THEN 0.10608221190551803 ELSE t0.c63 END, CAST(0.9847836961749997 AS NUMERIC), ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), CAST(t0.c63 AS BLOB), CASE t0.c63  WHEN NULL THEN t0.c63 WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)) ORDER BY (NOT (t0.c63 COLLATE BINARY));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN -1.081922048E9 THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN -1.081922048E9 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN -1.081922048E9 THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN -1.081922048E9 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM WHEN -1.081922048E9 THEN (vt0.c0 IN ()) END);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==((vt0.c0 IN ())))) ORDER BY (((((vt0.c0))==((vt0.c0))))+(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))=((vt0.c0))))+(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==((vt0.c0 IN ())))) ORDER BY (((((vt0.c0))==((vt0.c0))))+(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))=((vt0.c0))))+(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==((vt0.c0 IN ())))) ORDER BY (((((vt0.c0))==((vt0.c0))))+(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))IS NOT(''))) ORDER BY ((((vt0.c0)<=(vt0.c0)))-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS NOT(''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0)))-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))IS NOT(''))) ORDER BY ((((vt0.c0)<=(vt0.c0)))-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))IS NOT(''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0)))-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))IS NOT(''))) ORDER BY ((((vt0.c0)<=(vt0.c0)))-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c63) NOTNULL)) NOT NULL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL * FROM t0 WHERE (((((t0.c63) NOTNULL)) NOT NULL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULL);
SELECT ALL * FROM t0 WHERE (((((t0.c63) NOTNULL)) NOT NULL)) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))==(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))==(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))==(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))==(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL))==(vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)OR(t0.c63)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c63)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)OR(t0.c63)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c63)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0)OR(t0.c63)))OR(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (COALESCE((~ (vt0.c0)), COALESCE(DISTINCT vt0.c0, '-687520083'), NULL, (- (x'')))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE((~ (vt0.c0)), COALESCE(DISTINCT vt0.c0, '-687520083'), NULL, (- (x'')))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (COALESCE((~ (vt0.c0)), COALESCE(DISTINCT vt0.c0, '-687520083'), NULL, (- (x'')))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE((~ (vt0.c0)), COALESCE(DISTINCT vt0.c0, '-687520083'), NULL, (- (x'')))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (COALESCE((~ (vt0.c0)), COALESCE(DISTINCT vt0.c0, '-687520083'), NULL, (- (x'')))) ORDER BY vt0.c0 ASC;
SELECT * FROM t0 WHERE (((((NOT (t0.c63))))>((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)))) ORDER BY (((CAST(t0.c63 AS BLOB), ((t0.c63)||(t0.c63)), ((t0.c63) ISNULL), (x'' IN ()), ((t0.c63)>=('-570302220'))))<>((LIKELY(DISTINCT x''), CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, (- (t0.c63)), (NOT (t0.c63)), x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c63))))>((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)))) IS TRUE)  as count FROM t0 ORDER BY (((CAST(t0.c63 AS BLOB), ((t0.c63)||(t0.c63)), ((t0.c63) ISNULL), (x'' IN ()), ((t0.c63)>=('-570302220'))))<>((LIKELY(DISTINCT x''), CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, (- (t0.c63)), (NOT (t0.c63)), x''))));
SELECT * FROM t0 WHERE (((((NOT (t0.c63))))>((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)))) ORDER BY (((CAST(t0.c63 AS BLOB), ((t0.c63)||(t0.c63)), ((t0.c63) ISNULL), (x'' IN ()), ((t0.c63)>=('-570302220'))))<>((LIKELY(DISTINCT x''), CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, (- (t0.c63)), (NOT (t0.c63)), x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c63))))>((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)))) IS TRUE)  as count FROM t0 ORDER BY (((CAST(t0.c63 AS BLOB), ((t0.c63)||(t0.c63)), ((t0.c63) ISNULL), (x'' IN ()), ((t0.c63)>=('-570302220'))))<>((LIKELY(DISTINCT x''), CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, (- (t0.c63)), (NOT (t0.c63)), x''))));
SELECT * FROM t0 WHERE (((((NOT (t0.c63))))>((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)))) ORDER BY (((CAST(t0.c63 AS BLOB), ((t0.c63)||(t0.c63)), ((t0.c63) ISNULL), (x'' IN ()), ((t0.c63)>=('-570302220'))))<>((LIKELY(DISTINCT x''), CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, (- (t0.c63)), (NOT (t0.c63)), x'')));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c63)/(t0.c63)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((t0.c63) ISNULL))<<('*N')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)/(t0.c63)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c63) ISNULL))<<('*N')) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c63)/(t0.c63)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((t0.c63) ISNULL))<<('*N')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)/(t0.c63)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c63) ISNULL))<<('*N')) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c63)/(t0.c63)) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((t0.c63) ISNULL))<<('*N')) DESC;
SELECT COUNT(*) FROM t0 WHERE (((-5.4592332E8 COLLATE NOCASE)||(((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))) ORDER BY (((((((((t0.c63 IN (t0.c63, x'')))OR(((t0.c63)-(t0.c63)))))AND(((t0.c63) ISNULL))))OR(((t0.c63) IS TRUE))))AND(((t0.c63)>(t0.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-5.4592332E8 COLLATE NOCASE)||(((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c63 IN (t0.c63, x'')))OR(((t0.c63)-(t0.c63)))))AND(((t0.c63) ISNULL))))OR(((t0.c63) IS TRUE))))AND(((t0.c63)>(t0.c63))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((-5.4592332E8 COLLATE NOCASE)||(((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))) ORDER BY (((((((((t0.c63 IN (t0.c63, x'')))OR(((t0.c63)-(t0.c63)))))AND(((t0.c63) ISNULL))))OR(((t0.c63) IS TRUE))))AND(((t0.c63)>(t0.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-5.4592332E8 COLLATE NOCASE)||(((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c63 IN (t0.c63, x'')))OR(((t0.c63)-(t0.c63)))))AND(((t0.c63) ISNULL))))OR(((t0.c63) IS TRUE))))AND(((t0.c63)>(t0.c63))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((-5.4592332E8 COLLATE NOCASE)||(((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))) ORDER BY (((((((((t0.c63 IN (t0.c63, x'')))OR(((t0.c63)-(t0.c63)))))AND(((t0.c63) ISNULL))))OR(((t0.c63) IS TRUE))))AND(((t0.c63)>(t0.c63))))  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)AND(t0.c63)))OR((('')*(t0.c63)))))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND(1064735297))) ORDER BY t0.c63  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c63)))OR((('')*(t0.c63)))))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND(1064735297))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c63  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)AND(t0.c63)))OR((('')*(t0.c63)))))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND(1064735297))) ORDER BY t0.c63  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c63)))OR((('')*(t0.c63)))))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND(1064735297))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c63  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)AND(t0.c63)))OR((('')*(t0.c63)))))AND(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS TRUE))))AND(1064735297))) ORDER BY t0.c63  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63, t0.c63, '')) NOT BETWEEN (((NOT (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE WHEN '-1941037178' THEN t0.c63 END)) AND ((t0.c63, t0.c63, (NOT (t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63, t0.c63, '')) NOT BETWEEN (((NOT (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE WHEN '-1941037178' THEN t0.c63 END)) AND ((t0.c63, t0.c63, (NOT (t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63, t0.c63, '')) NOT BETWEEN (((NOT (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE WHEN '-1941037178' THEN t0.c63 END)) AND ((t0.c63, t0.c63, (NOT (t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63, t0.c63, '')) NOT BETWEEN (((NOT (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE WHEN '-1941037178' THEN t0.c63 END)) AND ((t0.c63, t0.c63, (NOT (t0.c63)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63, t0.c63, '')) NOT BETWEEN (((NOT (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE WHEN '-1941037178' THEN t0.c63 END)) AND ((t0.c63, t0.c63, (NOT (t0.c63))))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)IS NOT(((vt0.c0) IS FALSE))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)IS NOT(((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)IS NOT(((vt0.c0) IS FALSE))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)IS NOT(((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)IS NOT(((vt0.c0) IS FALSE))) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((CAST('-1208951196' AS BLOB))OR(CAST(vt0.c0 AS TEXT))))AND(((0.6657555952364788) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((('-1941037178')||(t0.c63)))))AND((+ (t0.c63))))) ORDER BY (- (((t0.c63) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST('-1208951196' AS BLOB))OR(CAST(vt0.c0 AS TEXT))))AND(((0.6657555952364788) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((('-1941037178')||(t0.c63)))))AND((+ (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((t0.c63) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((CAST('-1208951196' AS BLOB))OR(CAST(vt0.c0 AS TEXT))))AND(((0.6657555952364788) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((('-1941037178')||(t0.c63)))))AND((+ (t0.c63))))) ORDER BY (- (((t0.c63) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST('-1208951196' AS BLOB))OR(CAST(vt0.c0 AS TEXT))))AND(((0.6657555952364788) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((('-1941037178')||(t0.c63)))))AND((+ (t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (- (((t0.c63) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((CAST('-1208951196' AS BLOB))OR(CAST(vt0.c0 AS TEXT))))AND(((0.6657555952364788) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((('-1941037178')||(t0.c63)))))AND((+ (t0.c63))))) ORDER BY (- (((t0.c63) ISNULL)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c63)) NOT BETWEEN ((((t0.c63)+(vt0.c0)))) AND ((((NULL)<=(t0.c63)))))) ORDER BY (((t0.c63) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) NOT BETWEEN ((((t0.c63)+(vt0.c0)))) AND ((((NULL)<=(t0.c63)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c63) NOTNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c63)) NOT BETWEEN ((((t0.c63)+(vt0.c0)))) AND ((((NULL)<=(t0.c63)))))) ORDER BY (((t0.c63) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) NOT BETWEEN ((((t0.c63)+(vt0.c0)))) AND ((((NULL)<=(t0.c63)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c63) NOTNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c63)) NOT BETWEEN ((((t0.c63)+(vt0.c0)))) AND ((((NULL)<=(t0.c63)))))) ORDER BY (((t0.c63) NOTNULL) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<>((t0.c63, t0.c63, t0.c63, vt0.c0, vt0.c0))))GLOB(CAST(t0.c63 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))!=((t0.c63, t0.c63, t0.c63, vt0.c0, vt0.c0))))GLOB(CAST(t0.c63 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<>((t0.c63, t0.c63, t0.c63, vt0.c0, vt0.c0))))GLOB(CAST(t0.c63 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))!=((t0.c63, t0.c63, t0.c63, vt0.c0, vt0.c0))))GLOB(CAST(t0.c63 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<>((t0.c63, t0.c63, t0.c63, vt0.c0, vt0.c0))))GLOB(CAST(t0.c63 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))<((vt0.c0)))))) ORDER BY UNLIKELY(IFNULL(vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(IFNULL(vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))<((vt0.c0)))))) ORDER BY UNLIKELY(IFNULL(vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(IFNULL(vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS((((vt0.c0))<((vt0.c0)))))) ORDER BY UNLIKELY(IFNULL(vt0.c0, vt0.c0));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(((vt0.c0)%(vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (0.10608221190551803) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))<=(((t0.c63)>(vt0.c0)))) ASC  NULLS FIRST, ((((((vt0.c0)) BETWEEN ((t0.c63)) AND (('76429058')))))!=(((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ((0.10608221190551803) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))<=(((t0.c63)>(vt0.c0)))) ASC  NULLS FIRST, ((((((vt0.c0)) BETWEEN ((t0.c63)) AND (('76429058')))))<>(((t0.c63 IN ())))));
SELECT ALL * FROM t0, vt0 WHERE (0.10608221190551803) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))<=(((t0.c63)>(vt0.c0)))) ASC  NULLS FIRST, ((((((vt0.c0)) BETWEEN ((t0.c63)) AND (('76429058')))))!=(((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ((0.10608221190551803) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))<=(((t0.c63)>(vt0.c0)))) ASC  NULLS FIRST, ((((((vt0.c0)) BETWEEN ((t0.c63)) AND (('76429058')))))<>(((t0.c63 IN ())))));
SELECT ALL * FROM t0, vt0 WHERE (0.10608221190551803) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))<=(((t0.c63)>(vt0.c0)))) ASC  NULLS FIRST, ((((((vt0.c0)) BETWEEN ((t0.c63)) AND (('76429058')))))!=(((t0.c63 IN ()))));
SELECT * FROM t0 WHERE (((+ (t0.c63)) IN (((x'a1f3bdb74a97')AND('dཛ~y&hL,b')))));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c63)) IN (((x'a1f3bdb74a97')AND('dཛ~y&hL,b'))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((+ (t0.c63)) IN (((x'a1f3bdb74a97')AND('dཛ~y&hL,b')))));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c63)) IN (((x'a1f3bdb74a97')AND('dཛ~y&hL,b'))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((+ (t0.c63)) IN (((x'a1f3bdb74a97')AND('dཛ~y&hL,b')))));
SELECT * FROM t0 WHERE (((((t0.c63)IS(t0.c63)))/(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY (((((t0.c63, t0.c63, t0.c63))<((x'27af', t0.c63, t0.c63)))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63)IS(t0.c63)))/(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c63, t0.c63, t0.c63))<((x'27af', t0.c63, t0.c63)))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c63)IS(t0.c63)))/(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY (((((t0.c63, t0.c63, t0.c63))<((x'27af', t0.c63, t0.c63)))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63)IS(t0.c63)))/(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c63, t0.c63, t0.c63))<((x'27af', t0.c63, t0.c63)))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c63)IS(t0.c63)))/(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY (((((t0.c63, t0.c63, t0.c63))<((x'27af', t0.c63, t0.c63)))) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c63)<>(t0.c63)) AS BLOB)) ORDER BY CASE (t0.c63 IN ())  WHEN LIKELIHOOD(NULL, 0.9005136683754666) THEN (((x'', t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, 0.5216227954506899, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) ELSE ((0xffffffffa3760d1f) NOT BETWEEN (t0.c63) AND ('-570302220')) END ASC  NULLS FIRST, (CASE WHEN t0.c63 THEN x'6a8c' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)!=(t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c63 IN ())  WHEN LIKELIHOOD(NULL, 0.9005136683754666) THEN (((x'', t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, 0.5216227954506899, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) ELSE ((0xffffffffa3760d1f) NOT BETWEEN (t0.c63) AND ('-570302220')) END ASC  NULLS FIRST, (CASE WHEN t0.c63 THEN x'6a8c' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c63)<>(t0.c63)) AS BLOB)) ORDER BY CASE (t0.c63 IN ())  WHEN LIKELIHOOD(NULL, 0.9005136683754666) THEN (((x'', t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, 0.5216227954506899, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) ELSE ((0xffffffffa3760d1f) NOT BETWEEN (t0.c63) AND ('-570302220')) END ASC  NULLS FIRST, (CASE WHEN t0.c63 THEN x'6a8c' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)!=(t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c63 IN ())  WHEN LIKELIHOOD(NULL, 0.9005136683754666) THEN (((x'', t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, 0.5216227954506899, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) ELSE ((0xffffffffa3760d1f) NOT BETWEEN (t0.c63) AND ('-570302220')) END ASC  NULLS FIRST, (CASE WHEN t0.c63 THEN x'6a8c' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c63)<>(t0.c63)) AS BLOB)) ORDER BY CASE (t0.c63 IN ())  WHEN LIKELIHOOD(NULL, 0.9005136683754666) THEN (((x'', t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, 0.5216227954506899, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) ELSE ((0xffffffffa3760d1f) NOT BETWEEN (t0.c63) AND ('-570302220')) END ASC  NULLS FIRST, (CASE WHEN t0.c63 THEN x'6a8c' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ()) ASC;
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>(((+ (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE vt0.c0  WHEN '3IPM+p\n5' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (0.6316749210546827))  NULLS FIRST, ((((vt0.c0)&(vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE vt0.c0  WHEN '3IPM+p\n5' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (0.6316749210546827))  NULLS FIRST, ((((vt0.c0)&(vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>(((+ (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE vt0.c0  WHEN '3IPM+p\n5' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (0.6316749210546827))  NULLS FIRST, ((((vt0.c0)&(vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE vt0.c0  WHEN '3IPM+p\n5' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (0.6316749210546827))  NULLS FIRST, ((((vt0.c0)&(vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>(((+ (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE vt0.c0  WHEN '3IPM+p\n5' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (0.6316749210546827))  NULLS FIRST, ((((vt0.c0)&(vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT * FROM t0 WHERE ((((t0.c63)=(t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63)=(t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)=(t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63)=(t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)=(t0.c63)) IN ()));
SELECT ALL * FROM vt0 WHERE (((LOWER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LOWER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LOWER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM t0, vt0 WHERE (t0.c63) ORDER BY (((t0.c63, vt0.c0, t0.c63, NULL, t0.c63)) BETWEEN ((((t0.c63)GLOB(t0.c63)), (- (vt0.c0)), vt0.c0, IFNULL(DISTINCT t0.c63, '	K'), (- (t0.c63)))) AND ((NULLIF(vt0.c0, t0.c63), vt0.c0, ((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE RTRIM, t0.c63))), CAST((((t0.c63))>=((t0.c63))) AS BLOB), (((((NOT (t0.c63)))AND((- (t0.c63)))))AND((((t0.c63, '-518946318', t0.c63))<=((t0.c63, NULL, t0.c63)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c63, vt0.c0, t0.c63, NULL, t0.c63)) BETWEEN ((((t0.c63)GLOB(t0.c63)), (- (vt0.c0)), vt0.c0, IFNULL(DISTINCT t0.c63, '	K'), (- (t0.c63)))) AND ((NULLIF(vt0.c0, t0.c63), vt0.c0, ((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE RTRIM, t0.c63))), CAST((((t0.c63))>=((t0.c63))) AS BLOB), (((((NOT (t0.c63)))AND((- (t0.c63)))))AND((((t0.c63, '-518946318', t0.c63))<=((t0.c63, NULL, t0.c63)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c63) ORDER BY (((t0.c63, vt0.c0, t0.c63, NULL, t0.c63)) BETWEEN ((((t0.c63)GLOB(t0.c63)), (- (vt0.c0)), vt0.c0, IFNULL(DISTINCT t0.c63, '	K'), (- (t0.c63)))) AND ((NULLIF(vt0.c0, t0.c63), vt0.c0, ((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE RTRIM, t0.c63))), CAST((((t0.c63))>=((t0.c63))) AS BLOB), (((((NOT (t0.c63)))AND((- (t0.c63)))))AND((((t0.c63, '-518946318', t0.c63))<=((t0.c63, NULL, t0.c63)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c63, vt0.c0, t0.c63, NULL, t0.c63)) BETWEEN ((((t0.c63)GLOB(t0.c63)), (- (vt0.c0)), vt0.c0, IFNULL(DISTINCT t0.c63, '	K'), (- (t0.c63)))) AND ((NULLIF(vt0.c0, t0.c63), vt0.c0, ((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE RTRIM, t0.c63))), CAST((((t0.c63))>=((t0.c63))) AS BLOB), (((((NOT (t0.c63)))AND((- (t0.c63)))))AND((((t0.c63, '-518946318', t0.c63))<=((t0.c63, NULL, t0.c63)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c63) ORDER BY (((t0.c63, vt0.c0, t0.c63, NULL, t0.c63)) BETWEEN ((((t0.c63)GLOB(t0.c63)), (- (vt0.c0)), vt0.c0, IFNULL(DISTINCT t0.c63, '	K'), (- (t0.c63)))) AND ((NULLIF(vt0.c0, t0.c63), vt0.c0, ((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE RTRIM, t0.c63))), CAST((((t0.c63))>=((t0.c63))) AS BLOB), (((((NOT (t0.c63)))AND((- (t0.c63)))))AND((((t0.c63, '-518946318', t0.c63))<=((t0.c63, NULL, t0.c63)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CASE vt0.c0  WHEN t0.c63 THEN 0.8852035093960758 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN t0.c63 THEN 0.8852035093960758 END AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CASE vt0.c0  WHEN t0.c63 THEN 0.8852035093960758 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN t0.c63 THEN 0.8852035093960758 END AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(CASE vt0.c0  WHEN t0.c63 THEN 0.8852035093960758 END AS BLOB));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE '1688328675'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE '1688328675'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE '1688328675'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE '1688328675'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE '1688328675'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c63, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(t0.c63 AS TEXT), ((vt0.c0) BETWEEN (0.17095213242492724) AND (x'')), ((t0.c63)LIKE(t0.c63)))) AND ((((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE NOCASE, ((vt0.c0)/('-1991534276')))))) ORDER BY ((((NULL)AND(t0.c63 COLLATE BINARY)))OR(0x7e2cbe36)) ASC, ((((((((((vt0.c0)==(t0.c63)))OR(((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(((t0.c63)>=(vt0.c0)))))AND(CAST(t0.c63 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(t0.c63 AS TEXT), ((vt0.c0) BETWEEN (0.17095213242492724) AND (x'')), ((t0.c63)LIKE(t0.c63)))) AND ((((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE NOCASE, ((vt0.c0)/('-1991534276')))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((NULL)AND(t0.c63 COLLATE BINARY)))OR(0x7e2cbe36)) ASC, ((((((((((vt0.c0)=(t0.c63)))OR(((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(((t0.c63)>=(vt0.c0)))))AND(CAST(t0.c63 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c63, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(t0.c63 AS TEXT), ((vt0.c0) BETWEEN (0.17095213242492724) AND (x'')), ((t0.c63)LIKE(t0.c63)))) AND ((((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE NOCASE, ((vt0.c0)/('-1991534276')))))) ORDER BY ((((NULL)AND(t0.c63 COLLATE BINARY)))OR(0x7e2cbe36)) ASC, ((((((((((vt0.c0)==(t0.c63)))OR(((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(((t0.c63)>=(vt0.c0)))))AND(CAST(t0.c63 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(t0.c63 AS TEXT), ((vt0.c0) BETWEEN (0.17095213242492724) AND (x'')), ((t0.c63)LIKE(t0.c63)))) AND ((((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE NOCASE, ((vt0.c0)/('-1991534276')))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((NULL)AND(t0.c63 COLLATE BINARY)))OR(0x7e2cbe36)) ASC, ((((((((((vt0.c0)=(t0.c63)))OR(((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(((t0.c63)>=(vt0.c0)))))AND(CAST(t0.c63 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((t0.c63, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(t0.c63 AS TEXT), ((vt0.c0) BETWEEN (0.17095213242492724) AND (x'')), ((t0.c63)LIKE(t0.c63)))) AND ((((vt0.c0)<=(vt0.c0)), t0.c63 COLLATE NOCASE, ((vt0.c0)/('-1991534276')))))) ORDER BY ((((NULL)AND(t0.c63 COLLATE BINARY)))OR(0x7e2cbe36)) ASC, ((((((((((vt0.c0)==(t0.c63)))OR(((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) IS TRUE))))AND(((t0.c63)>=(vt0.c0)))))AND(CAST(t0.c63 AS TEXT)));
SELECT * FROM vt0 WHERE (((vt0.c0)||(CAST(vt0.c0 AS INTEGER)))) ORDER BY (((NOT (vt0.c0)))||(CAST(vt0.c0 AS TEXT))), CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))||(CAST(vt0.c0 AS TEXT))), CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)||(CAST(vt0.c0 AS INTEGER)))) ORDER BY (((NOT (vt0.c0)))||(CAST(vt0.c0 AS TEXT))), CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))||(CAST(vt0.c0 AS TEXT))), CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)||(CAST(vt0.c0 AS INTEGER)))) ORDER BY (((NOT (vt0.c0)))||(CAST(vt0.c0 AS TEXT))), CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY ((((((((vt0.c0)AND((- (vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '152824325' END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND((- (vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '152824325' END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY ((((((((vt0.c0)AND((- (vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '152824325' END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND((- (vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '152824325' END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY ((((((((vt0.c0)AND((- (vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN '152824325' END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM t0, vt0 WHERE (((+ (t0.c63)) IN ())) ORDER BY NULL ASC  NULLS LAST, ((((vt0.c0))!=((t0.c63))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c63)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL ASC  NULLS LAST, ((((vt0.c0))<>((t0.c63))) IN ()) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((+ (t0.c63)) IN ())) ORDER BY NULL ASC  NULLS LAST, ((((vt0.c0))!=((t0.c63))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c63)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL ASC  NULLS LAST, ((((vt0.c0))<>((t0.c63))) IN ()) DESC);
SELECT ALL * FROM t0, vt0 WHERE (((+ (t0.c63)) IN ())) ORDER BY NULL ASC  NULLS LAST, ((((vt0.c0))!=((t0.c63))) IN ()) DESC;
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY HEX(950088597)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY HEX(950088597)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY HEX(950088597)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY HEX(950088597)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY HEX(950088597)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (LTRIM(UNICODE(t0.c63))) ORDER BY (((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))) COLLATE RTRIM ASC, t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(UNICODE(t0.c63))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))) COLLATE RTRIM ASC, t0.c63 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (LTRIM(UNICODE(t0.c63))) ORDER BY (((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))) COLLATE RTRIM ASC, t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(UNICODE(t0.c63))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))) COLLATE RTRIM ASC, t0.c63 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (LTRIM(UNICODE(t0.c63))) ORDER BY (((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))) COLLATE RTRIM ASC, t0.c63 ASC;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE((t0.c63 IN ()))) WHERE ((+ (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE((t0.c63 IN ()))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE((t0.c63 IN ()))) WHERE ((+ (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE((t0.c63 IN ()))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt0.c0)LIKE((t0.c63 IN ()))) WHERE ((+ (((vt0.c0)<=(vt0.c0)))));
SELECT * FROM t0 WHERE ((((((((((('')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63))) BETWEEN (t0.c63) AND (((t0.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63))) BETWEEN (t0.c63) AND (((t0.c63) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((('')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63))) BETWEEN (t0.c63) AND (((t0.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63))) BETWEEN (t0.c63) AND (((t0.c63) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((('')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63))) BETWEEN (t0.c63) AND (((t0.c63) IS FALSE))));
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))), STRFTIME(vt0.c0, LIKELIHOOD(vt0.c0, 0.9110751467781703), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))), STRFTIME(vt0.c0, LIKELIHOOD(vt0.c0, 0.9110751467781703), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))), STRFTIME(vt0.c0, LIKELIHOOD(vt0.c0, 0.9110751467781703), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))), STRFTIME(vt0.c0, LIKELIHOOD(vt0.c0, 0.9110751467781703), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))), STRFTIME(vt0.c0, LIKELIHOOD(vt0.c0, 0.9110751467781703), ((vt0.c0)>(vt0.c0)), ((vt0.c0)<<(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c63)*(t0.c63)), ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), t0.c63 COLLATE BINARY))>=((t0.c63, t0.c63, (NOT (vt0.c0))))) WHERE ((t0.c63 IN ())) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c63 IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c63)*(t0.c63)), ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), t0.c63 COLLATE BINARY))>=((t0.c63, t0.c63, (NOT (vt0.c0))))) ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c63)*(t0.c63)), ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), t0.c63 COLLATE BINARY))>=((t0.c63, t0.c63, (NOT (vt0.c0))))) WHERE ((t0.c63 IN ())) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c63 IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c63)*(t0.c63)), ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), t0.c63 COLLATE BINARY))>=((t0.c63, t0.c63, (NOT (vt0.c0))))) ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((((t0.c63)*(t0.c63)), ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)), t0.c63 COLLATE BINARY))>=((t0.c63, t0.c63, (NOT (vt0.c0))))) WHERE ((t0.c63 IN ())) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c63)||(t0.c63)) THEN ('' IN (t0.c63, t0.c63)) ELSE ((vt0.c0) IS TRUE) END WHERE ((((x'', t0.c63, vt0.c0)) BETWEEN ((((t0.c63)||(t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) NOT NULL), (+ (t0.c63)))))) ORDER BY (((vt0.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', t0.c63, vt0.c0)) BETWEEN ((((t0.c63)||(t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0)<>(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) NOT NULL), (+ (t0.c63)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c63)||(t0.c63)) THEN ('' IN (t0.c63, t0.c63)) ELSE ((vt0.c0) IS TRUE) END ORDER BY (((vt0.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c63)||(t0.c63)) THEN ('' IN (t0.c63, t0.c63)) ELSE ((vt0.c0) IS TRUE) END WHERE ((((x'', t0.c63, vt0.c0)) BETWEEN ((((t0.c63)||(t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) NOT NULL), (+ (t0.c63)))))) ORDER BY (((vt0.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'', t0.c63, vt0.c0)) BETWEEN ((((t0.c63)||(t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0)<>(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) NOT NULL), (+ (t0.c63)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c63)||(t0.c63)) THEN ('' IN (t0.c63, t0.c63)) ELSE ((vt0.c0) IS TRUE) END ORDER BY (((vt0.c0) NOTNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c63)||(t0.c63)) THEN ('' IN (t0.c63, t0.c63)) ELSE ((vt0.c0) IS TRUE) END WHERE ((((x'', t0.c63, vt0.c0)) BETWEEN ((((t0.c63)||(t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0)!=(vt0.c0)))) AND ((vt0.c0, ((vt0.c0) NOT NULL), (+ (t0.c63)))))) ORDER BY (((vt0.c0) NOTNULL) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((NULL)>=(CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)));
SELECT COUNT(*) FROM t0 WHERE ((- (NULLIF(0.9616218165576441, t0.c63)))) ORDER BY ((NOT (0.7445622168196264)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (NULLIF(0.9616218165576441, t0.c63)))) IS TRUE)  as count FROM t0 ORDER BY ((NOT (0.7445622168196264)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((- (NULLIF(0.9616218165576441, t0.c63)))) ORDER BY ((NOT (0.7445622168196264)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (NULLIF(0.9616218165576441, t0.c63)))) IS TRUE)  as count FROM t0 ORDER BY ((NOT (0.7445622168196264)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((- (NULLIF(0.9616218165576441, t0.c63)))) ORDER BY ((NOT (0.7445622168196264)) IN ())  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)%(vt0.c0)))OR(json_insert(t0.c63, t0.c63, t0.c63))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))AND(((('-455577752'))>=((t0.c63)))))) ORDER BY x'971b';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)%(vt0.c0)))OR(json_insert(t0.c63, t0.c63, t0.c63))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))AND(((('-455577752'))>=((t0.c63)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY x'971b');
SELECT * FROM vt0, t0 WHERE (((((((((((vt0.c0)%(vt0.c0)))OR(json_insert(t0.c63, t0.c63, t0.c63))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))AND(((('-455577752'))>=((t0.c63)))))) ORDER BY x'971b';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)%(vt0.c0)))OR(json_insert(t0.c63, t0.c63, t0.c63))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))AND(((('-455577752'))>=((t0.c63)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY x'971b');
SELECT ALL * FROM vt0, t0 WHERE ((+ (json_array(t0.c63, t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array(t0.c63, t0.c63)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (json_array(t0.c63, t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((+ (json_array(t0.c63, t0.c63)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((+ (json_array(t0.c63, t0.c63))));
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c63) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((7.6429058E7) IS FALSE))))OR(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))OR(t0.c63)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c63) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((7.6429058E7) IS FALSE))))OR(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))OR(t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c63) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((7.6429058E7) IS FALSE))))OR(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))OR(t0.c63)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c63) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((7.6429058E7) IS FALSE))))OR(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))OR(t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c63) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((7.6429058E7) IS FALSE))))OR(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))OR(t0.c63)));
SELECT COUNT(*) FROM t0, vt0 WHERE (0.45707169971189254) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(t0.c63))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.45707169971189254) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(t0.c63))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.45707169971189254) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(t0.c63))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.45707169971189254) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(t0.c63))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (0.45707169971189254) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>>(t0.c63))) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((~ (t0.c63)))IS NOT(((vt0.c0)%(t0.c63))))) ORDER BY CASE (vt0.c0 IN (vt0.c0))  WHEN (((vt0.c0))<>((vt0.c0))) THEN (((vt0.c0))=((vt0.c0))) WHEN ((((((((t0.c63)OR(t0.c63)))OR(0.10367269757101949)))OR(vt0.c0)))OR(t0.c63)) THEN ((t0.c63) ISNULL) WHEN t0.c63 COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((7.6429058E7) IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c63)))IS NOT(((vt0.c0)%(t0.c63))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY CASE (vt0.c0 IN (vt0.c0))  WHEN (((vt0.c0))<>((vt0.c0))) THEN (((vt0.c0))==((vt0.c0))) WHEN ((((((((t0.c63)OR(t0.c63)))OR(0.10367269757101949)))OR(vt0.c0)))OR(t0.c63)) THEN ((t0.c63) ISNULL) WHEN t0.c63 COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((7.6429058E7) IS FALSE) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((~ (t0.c63)))IS NOT(((vt0.c0)%(t0.c63))))) ORDER BY CASE (vt0.c0 IN (vt0.c0))  WHEN (((vt0.c0))<>((vt0.c0))) THEN (((vt0.c0))=((vt0.c0))) WHEN ((((((((t0.c63)OR(t0.c63)))OR(0.10367269757101949)))OR(vt0.c0)))OR(t0.c63)) THEN ((t0.c63) ISNULL) WHEN t0.c63 COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((7.6429058E7) IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c63)))IS NOT(((vt0.c0)%(t0.c63))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY CASE (vt0.c0 IN (vt0.c0))  WHEN (((vt0.c0))<>((vt0.c0))) THEN (((vt0.c0))==((vt0.c0))) WHEN ((((((((t0.c63)OR(t0.c63)))OR(0.10367269757101949)))OR(vt0.c0)))OR(t0.c63)) THEN ((t0.c63) ISNULL) WHEN t0.c63 COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((7.6429058E7) IS FALSE) END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((~ (t0.c63)))IS NOT(((vt0.c0)%(t0.c63))))) ORDER BY CASE (vt0.c0 IN (vt0.c0))  WHEN (((vt0.c0))<>((vt0.c0))) THEN (((vt0.c0))=((vt0.c0))) WHEN ((((((((t0.c63)OR(t0.c63)))OR(0.10367269757101949)))OR(vt0.c0)))OR(t0.c63)) THEN ((t0.c63) ISNULL) WHEN t0.c63 COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((7.6429058E7) IS FALSE) END;
SELECT COUNT(*) FROM vt0 WHERE (((CHAR(vt0.c0)) IS TRUE)) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS FIRST, CAST((vt0.c0 IN ()) AS BLOB) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHAR(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS FIRST, CAST((vt0.c0 IN ()) AS BLOB) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CHAR(vt0.c0)) IS TRUE)) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS FIRST, CAST((vt0.c0 IN ()) AS BLOB) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHAR(vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS FIRST, CAST((vt0.c0 IN ()) AS BLOB) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CHAR(vt0.c0)) IS TRUE)) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)  NULLS FIRST, CAST((vt0.c0 IN ()) AS BLOB) ASC, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<>((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<>((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))!=((vt0.c0))) AS INTEGER));
SELECT * FROM t0, vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))OR(vt0.c0)))OR(t0.c63)))OR(((vt0.c0)|(vt0.c0)))))OR((((vt0.c0, t0.c63, NULL))<>((vt0.c0, t0.c63, t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))OR(vt0.c0)))OR(t0.c63)))OR(((vt0.c0)|(vt0.c0)))))OR((((vt0.c0, t0.c63, NULL))<>((vt0.c0, t0.c63, t0.c63)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))OR(vt0.c0)))OR(t0.c63)))OR(((vt0.c0)|(vt0.c0)))))OR((((vt0.c0, t0.c63, NULL))<>((vt0.c0, t0.c63, t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))OR(vt0.c0)))OR(t0.c63)))OR(((vt0.c0)|(vt0.c0)))))OR((((vt0.c0, t0.c63, NULL))<>((vt0.c0, t0.c63, t0.c63)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))OR(vt0.c0)))OR(t0.c63)))OR(((vt0.c0)|(vt0.c0)))))OR((((vt0.c0, t0.c63, NULL))<>((vt0.c0, t0.c63, t0.c63))))));
SELECT * FROM vt0, t0 WHERE ((((t0.c63 IN (t0.c63)))GLOB(t0.c63)));
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN (t0.c63)))GLOB(t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c63 IN (t0.c63)))GLOB(t0.c63)));
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN (t0.c63)))GLOB(t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c63 IN (t0.c63)))GLOB(t0.c63)));
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c0)))+((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))+((~ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c0)))+((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))+((~ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((~ (vt0.c0)))+((~ (vt0.c0)))));
SELECT * FROM t0 WHERE (CAST((((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))) AS REAL));
SELECT ALL * FROM t0 WHERE (SQLITE_VERSION()) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 ORDER BY t0.c63);
SELECT ALL * FROM t0 WHERE (SQLITE_VERSION()) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 ORDER BY t0.c63);
SELECT ALL * FROM t0 WHERE (SQLITE_VERSION()) ORDER BY t0.c63;
SELECT ALL * FROM t0 WHERE ((+ (t0.c63))) ORDER BY TRIM(t0.c63 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c63))) IS TRUE)  as count FROM t0 ORDER BY TRIM(t0.c63 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (t0.c63))) ORDER BY TRIM(t0.c63 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c63))) IS TRUE)  as count FROM t0 ORDER BY TRIM(t0.c63 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (t0.c63))) ORDER BY TRIM(t0.c63 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (TRIM(DISTINCT ((((((((vt0.c0)AND(t0.c63)))OR(803878899)))AND(t0.c63)))AND(t0.c63)), t0.c63));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((vt0.c0)AND(t0.c63)))OR(803878899)))AND(t0.c63)))AND(t0.c63)), t0.c63)) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (TRIM(DISTINCT ((((((((vt0.c0)AND(t0.c63)))OR(803878899)))AND(t0.c63)))AND(t0.c63)), t0.c63));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((((((vt0.c0)AND(t0.c63)))OR(803878899)))AND(t0.c63)))AND(t0.c63)), t0.c63)) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (TRIM(DISTINCT ((((((((vt0.c0)AND(t0.c63)))OR(803878899)))AND(t0.c63)))AND(t0.c63)), t0.c63));
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c63, t0.c63, t0.c63)) BETWEEN (((t0.c63 IN ()), LOWER(DISTINCT t0.c63), json_quote(t0.c63))) AND ((NULL COLLATE NOCASE, CAST(t0.c63 AS REAL), ((t0.c63) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c63, t0.c63, t0.c63)) BETWEEN (((t0.c63 IN ()), LOWER(DISTINCT t0.c63), json_quote(t0.c63))) AND ((NULL COLLATE NOCASE, CAST(t0.c63 AS REAL), ((t0.c63) IS FALSE))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c63, t0.c63, t0.c63)) BETWEEN (((t0.c63 IN ()), LOWER(DISTINCT t0.c63), json_quote(t0.c63))) AND ((NULL COLLATE NOCASE, CAST(t0.c63 AS REAL), ((t0.c63) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((t0.c63, t0.c63, t0.c63)) BETWEEN (((t0.c63 IN ()), LOWER(DISTINCT t0.c63), json_quote(t0.c63))) AND ((NULL COLLATE NOCASE, CAST(t0.c63 AS REAL), ((t0.c63) IS FALSE))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c63, t0.c63, t0.c63)) BETWEEN (((t0.c63 IN ()), LOWER(DISTINCT t0.c63), json_quote(t0.c63))) AND ((NULL COLLATE NOCASE, CAST(t0.c63 AS REAL), ((t0.c63) IS FALSE)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.2853520603956211), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS REAL))) DESC, ((((vt0.c0)!=(vt0.c0)))/(((x'b406') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN ((((vt0.c0)AND(0.2854663972096916)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE ((x'')&(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.2853520603956211), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS REAL))) DESC, ((((vt0.c0)<>(vt0.c0)))/(((x'b406') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN ((((vt0.c0)AND(0.2854663972096916)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE ((x'')&(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.2853520603956211), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS REAL))) DESC, ((((vt0.c0)!=(vt0.c0)))/(((x'b406') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN ((((vt0.c0)AND(0.2854663972096916)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE ((x'')&(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.2853520603956211), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS REAL))) DESC, ((((vt0.c0)<>(vt0.c0)))/(((x'b406') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN ((((vt0.c0)AND(0.2854663972096916)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE ((x'')&(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS TEXT), 0.2853520603956211), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c0 AS REAL))) DESC, ((((vt0.c0)!=(vt0.c0)))/(((x'b406') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN ((((vt0.c0)AND(0.2854663972096916)))AND(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) ELSE ((x'')&(vt0.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST((+ (t0.c63)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c63)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((+ (t0.c63)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c63)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((+ (t0.c63)) AS NUMERIC));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)), (((vt0.c0))>((vt0.c0))))) AND (('1688328675', highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY CAST(CAST(x'c31d' AS TEXT) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)), (((vt0.c0))>((vt0.c0))))) AND (('1688328675', highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(x'c31d' AS TEXT) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)), (((vt0.c0))>((vt0.c0))))) AND (('1688328675', highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY CAST(CAST(x'c31d' AS TEXT) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)), (((vt0.c0))>((vt0.c0))))) AND (('1688328675', highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(x'c31d' AS TEXT) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0)), (((vt0.c0))>((vt0.c0))))) AND (('1688328675', highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY CAST(CAST(x'c31d' AS TEXT) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((NULL COLLATE RTRIM))>(((((vt0.c0))>=((vt0.c0)))))) WHERE ((((((vt0.c0 IN ('Ma')))AND(LIKELY(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 'lg' WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ('Ma')))AND(LIKELY(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 'lg' WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((NULL COLLATE RTRIM))>(((((vt0.c0))>=((vt0.c0)))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((NULL COLLATE RTRIM))>(((((vt0.c0))>=((vt0.c0)))))) WHERE ((((((vt0.c0 IN ('Ma')))AND(LIKELY(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 'lg' WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ('Ma')))AND(LIKELY(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 'lg' WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((NULL COLLATE RTRIM))>(((((vt0.c0))>=((vt0.c0)))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((NULL COLLATE RTRIM))>(((((vt0.c0))>=((vt0.c0)))))) WHERE ((((((vt0.c0 IN ('Ma')))AND(LIKELY(vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN 'lg' WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 END)));
SELECT ALL * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0)))) ORDER BY CAST((- (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0)))) ORDER BY CAST((- (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((((((((NOT (vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0)))) ORDER BY CAST((- (vt0.c0)) AS NUMERIC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((((((((~ (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.9050096058201704))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR('1073444192')))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((((((~ (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.9050096058201704))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR('1073444192')))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((((((((~ (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.9050096058201704))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR('1073444192')))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((((((~ (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.9050096058201704))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR('1073444192')))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((((((((~ (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.9050096058201704))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR('1073444192')))AND(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT NULL);
SELECT ALL * FROM vt0, t0 WHERE (CAST((+ (t0.c63)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c63)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((+ (t0.c63)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c63)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((+ (t0.c63)) AS INTEGER));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON 0.3048967053717575 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.3048967053717575);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON 0.3048967053717575 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON 0.3048967053717575);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON 0.3048967053717575 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c63)OR(t0.c63)))AND(t0.c63)))+(CAST(t0.c63 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))+(CAST(t0.c63 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c63)OR(t0.c63)))AND(t0.c63)))+(CAST(t0.c63 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))+(CAST(t0.c63 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c63)OR(t0.c63)))AND(t0.c63)))+(CAST(t0.c63 AS BLOB))));
SELECT COUNT(*) FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c63);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))!=((((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))!=((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))!=((((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))!=((((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) ISNULL)))!=((((vt0.c0)IS(vt0.c0))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c63))!=((t0.c63)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63))<>((t0.c63)))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c63))!=((t0.c63)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63))<>((t0.c63)))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c63))!=((t0.c63)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON 0.502041748199787 WHERE (ABS((vt0.c0 IN ()))) ORDER BY (t0.c63 IN (t0.c63)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, (- (((((vt0.c0)OR(vt0.c0)))AND(t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 0.502041748199787 ORDER BY (t0.c63 IN (t0.c63)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, (- (((((vt0.c0)OR(vt0.c0)))AND(t0.c63))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON 0.502041748199787 WHERE (ABS((vt0.c0 IN ()))) ORDER BY (t0.c63 IN (t0.c63)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, (- (((((vt0.c0)OR(vt0.c0)))AND(t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON 0.502041748199787 ORDER BY (t0.c63 IN (t0.c63)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, (- (((((vt0.c0)OR(vt0.c0)))AND(t0.c63))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON 0.502041748199787 WHERE (ABS((vt0.c0 IN ()))) ORDER BY (t0.c63 IN (t0.c63)) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, (- (((((vt0.c0)OR(vt0.c0)))AND(t0.c63))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((((((t0.c63)AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))OR(((vt0.c0)OR('b,k0OZ')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((((((((t0.c63)AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))OR(((vt0.c0)OR('b,k0OZ'))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((((((t0.c63)AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))OR(((vt0.c0)OR('b,k0OZ')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((((((((t0.c63)AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))OR(((vt0.c0)OR('b,k0OZ'))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((((((t0.c63)AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))OR(((vt0.c0)OR('b,k0OZ')))));
SELECT COUNT(*) FROM t0 WHERE (PRINTF(CASE WHEN '152824325' THEN t0.c63 END, HEX(t0.c63), CAST(t0.c63 AS INTEGER))) ORDER BY ((TRIM(DISTINCT t0.c63, t0.c63))-(((t0.c63) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(CASE WHEN '152824325' THEN t0.c63 END, HEX(t0.c63), CAST(t0.c63 AS INTEGER))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(DISTINCT t0.c63, t0.c63))-(((t0.c63) IS TRUE))) ASC);
SELECT COUNT(*) FROM t0 WHERE (PRINTF(CASE WHEN '152824325' THEN t0.c63 END, HEX(t0.c63), CAST(t0.c63 AS INTEGER))) ORDER BY ((TRIM(DISTINCT t0.c63, t0.c63))-(((t0.c63) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((PRINTF(CASE WHEN '152824325' THEN t0.c63 END, HEX(t0.c63), CAST(t0.c63 AS INTEGER))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(DISTINCT t0.c63, t0.c63))-(((t0.c63) IS TRUE))) ASC);
SELECT COUNT(*) FROM t0 WHERE (PRINTF(CASE WHEN '152824325' THEN t0.c63 END, HEX(t0.c63), CAST(t0.c63 AS INTEGER))) ORDER BY ((TRIM(DISTINCT t0.c63, t0.c63))-(((t0.c63) IS TRUE))) ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c63 AS BLOB) IN ())) ORDER BY (+ (NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c63 AS BLOB) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (NULL COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c63 AS BLOB) IN ())) ORDER BY (+ (NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c63 AS BLOB) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (NULL COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c63 AS BLOB) IN ())) ORDER BY (+ (NULL COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c63) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c63) NOTNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c63) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c63) NOTNULL)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (((t0.c63) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((('1523222877')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((((((('1523222877')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((('1523222877')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((((((('1523222877')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((('1523222877')OR(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)) COLLATE RTRIM);
SELECT * FROM t0, vt0 WHERE (DATETIME(t0.c63, CAST(vt0.c0 AS REAL), (~ (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(t0.c63, CAST(vt0.c0 AS REAL), (~ (t0.c63)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (DATETIME(t0.c63, CAST(vt0.c0 AS REAL), (~ (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(t0.c63, CAST(vt0.c0 AS REAL), (~ (t0.c63)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (DATETIME(t0.c63, CAST(vt0.c0 AS REAL), (~ (t0.c63))));
SELECT ALL * FROM vt0, t0 WHERE (CASE json_quote(vt0.c0)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<<(t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_quote(vt0.c0)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<<(t0.c63)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE json_quote(vt0.c0)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<<(t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_quote(vt0.c0)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<<(t0.c63)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE json_quote(vt0.c0)  WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<<(t0.c63)) END);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c63, t0.c63, vt0.c0))<((t0.c63, vt0.c0, vt0.c0)))) NOTNULL) WHERE ((('-0.0') IS TRUE)) ORDER BY CAST(t0.c63 AS BLOB) COLLATE RTRIM, (vt0.c0 IN (-2.105408441E9)) COLLATE BINARY COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-0.0') IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c63, t0.c63, vt0.c0))<((t0.c63, vt0.c0, vt0.c0)))) NOTNULL) ORDER BY CAST(t0.c63 AS BLOB) COLLATE RTRIM, (vt0.c0 IN (-2.105408441E9)) COLLATE BINARY COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c63, t0.c63, vt0.c0))<((t0.c63, vt0.c0, vt0.c0)))) NOTNULL) WHERE ((('-0.0') IS TRUE)) ORDER BY CAST(t0.c63 AS BLOB) COLLATE RTRIM, (vt0.c0 IN (-2.105408441E9)) COLLATE BINARY COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-0.0') IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c63, t0.c63, vt0.c0))<((t0.c63, vt0.c0, vt0.c0)))) NOTNULL) ORDER BY CAST(t0.c63 AS BLOB) COLLATE RTRIM, (vt0.c0 IN (-2.105408441E9)) COLLATE BINARY COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((((t0.c63, t0.c63, vt0.c0))<((t0.c63, vt0.c0, vt0.c0)))) NOTNULL) WHERE ((('-0.0') IS TRUE)) ORDER BY CAST(t0.c63 AS BLOB) COLLATE RTRIM, (vt0.c0 IN (-2.105408441E9)) COLLATE BINARY COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)>(vt0.c0)))OR((('-1941037178')IS NOT(t0.c63)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))OR((('-1941037178')IS NOT(t0.c63)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)>(vt0.c0)))OR((('-1941037178')IS NOT(t0.c63)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))OR((('-1941037178')IS NOT(t0.c63)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)>(vt0.c0)))OR((('-1941037178')IS NOT(t0.c63)))))AND(vt0.c0)));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(t0.c63)))AND(((t0.c63)%(t0.c63))))) ORDER BY ((((((vt0.c0) NOTNULL))AND(((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(t0.c63)))AND(((t0.c63)%(t0.c63))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) ORDER BY ((((((vt0.c0) NOTNULL))AND(((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(t0.c63)))AND(((t0.c63)%(t0.c63))))) ORDER BY ((((((vt0.c0) NOTNULL))AND(((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))OR(t0.c63)))AND(((t0.c63)%(t0.c63))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) ORDER BY ((((((vt0.c0) NOTNULL))AND(((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(t0.c63)))AND(((t0.c63)%(t0.c63))))) ORDER BY ((((((vt0.c0) NOTNULL))AND(((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63))));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c63)-(CASE t0.c63  WHEN '152824325' THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))  NULLS LAST, (((+ (t0.c63))) BETWEEN ((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) AND (((((t0.c63)AND(t0.c63)))AND(t0.c63))))  NULLS FIRST, ((((x'c08469c2')OR(CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 'XnM' WHEN t0.c63 THEN 0.7763329205924913 END)))AND(JULIANDAY(t0.c63, t0.c63, t0.c63, 0x5aca895d, t0.c63)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63)-(CASE t0.c63  WHEN '152824325' THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))  NULLS LAST, (((+ (t0.c63))) BETWEEN ((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) AND (((((t0.c63)AND(t0.c63)))AND(t0.c63))))  NULLS FIRST, ((((x'c08469c2')OR(CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 'XnM' WHEN t0.c63 THEN 0.7763329205924913 END)))AND(JULIANDAY(t0.c63, t0.c63, t0.c63, 0X5aca895d, t0.c63)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c63)-(CASE t0.c63  WHEN '152824325' THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))  NULLS LAST, (((+ (t0.c63))) BETWEEN ((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) AND (((((t0.c63)AND(t0.c63)))AND(t0.c63))))  NULLS FIRST, ((((x'c08469c2')OR(CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 'XnM' WHEN t0.c63 THEN 0.7763329205924913 END)))AND(JULIANDAY(t0.c63, t0.c63, t0.c63, 0x5aca895d, t0.c63)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63)-(CASE t0.c63  WHEN '152824325' THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))  NULLS LAST, (((+ (t0.c63))) BETWEEN ((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) AND (((((t0.c63)AND(t0.c63)))AND(t0.c63))))  NULLS FIRST, ((((x'c08469c2')OR(CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 'XnM' WHEN t0.c63 THEN 0.7763329205924913 END)))AND(JULIANDAY(t0.c63, t0.c63, t0.c63, 0X5aca895d, t0.c63)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c63)-(CASE t0.c63  WHEN '152824325' THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))  NULLS LAST, (((+ (t0.c63))) BETWEEN ((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) AND (((((t0.c63)AND(t0.c63)))AND(t0.c63))))  NULLS FIRST, ((((x'c08469c2')OR(CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 'XnM' WHEN t0.c63 THEN 0.7763329205924913 END)))AND(JULIANDAY(t0.c63, t0.c63, t0.c63, 0x5aca895d, t0.c63)))  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((x'')) BETWEEN (((t0.c63 IN ()))) AND ((CAST(x'e8ef' AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((t0.c63 IN ()))) AND ((CAST(x'e8ef' AS NUMERIC))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((x'')) BETWEEN (((t0.c63 IN ()))) AND ((CAST(x'e8ef' AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((t0.c63 IN ()))) AND ((CAST(x'e8ef' AS NUMERIC))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((x'')) BETWEEN (((t0.c63 IN ()))) AND ((CAST(x'e8ef' AS NUMERIC)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63 IN ()))>>(((t0.c63)IS NOT(t0.c63))))) ORDER BY -223483906;
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN ()))>>(((t0.c63)IS NOT(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY -223483906);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63 IN ()))>>(((t0.c63)IS NOT(t0.c63))))) ORDER BY -223483906;
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN ()))>>(((t0.c63)IS NOT(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY -223483906);
SELECT * FROM t0 WHERE (((t0.c63) NOT BETWEEN (NULL) AND (((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY (((((t0.c63))>((t0.c63)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63) NOT BETWEEN (NULL) AND (((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c63))>((t0.c63)))) ISNULL));
SELECT * FROM t0 WHERE (((t0.c63) NOT BETWEEN (NULL) AND (((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY (((((t0.c63))>((t0.c63)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63) NOT BETWEEN (NULL) AND (((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c63))>((t0.c63)))) ISNULL));
SELECT * FROM t0 WHERE (((t0.c63) NOT BETWEEN (NULL) AND (((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY (((((t0.c63))>((t0.c63)))) ISNULL);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, '鏸|x|_')) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), 'W_BvLJY놝?'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, '鏸|x|_')) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), 'W_BvLJY놝?')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, '鏸|x|_')) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), 'W_BvLJY놝?'))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, '鏸|x|_')) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), 'W_BvLJY놝?')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, '鏸|x|_')) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0)/(vt0.c0)))) AND ((CASE WHEN NULL THEN vt0.c0 END, CAST(vt0.c0 AS NUMERIC), 'W_BvLJY놝?'))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c63)GLOB(vt0.c0)))AND(t0.c63)))AND(0.6410400635225271)) WHERE (t0.c63) ORDER BY CAST((~ (t0.c63)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c63)GLOB(vt0.c0)))AND(t0.c63)))AND(0.6410400635225271)) ORDER BY CAST((~ (t0.c63)) AS BLOB));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c63)GLOB(vt0.c0)))AND(t0.c63)))AND(0.6410400635225271)) WHERE (t0.c63) ORDER BY CAST((~ (t0.c63)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c63)GLOB(vt0.c0)))AND(t0.c63)))AND(0.6410400635225271)) ORDER BY CAST((~ (t0.c63)) AS BLOB));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((t0.c63)GLOB(vt0.c0)))AND(t0.c63)))AND(0.6410400635225271)) WHERE (t0.c63) ORDER BY CAST((~ (t0.c63)) AS BLOB);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c0)LIKE(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)LIKE(t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c0)LIKE(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)LIKE(t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (((vt0.c0)LIKE(t0.c63)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)AND(vt0.c0)))))AND((((vt0.c0))=(('1738185461'))))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(((x'5b31') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((MAX(vt0.c0, vt0.c0))-('vj*3f빜,hL' COLLATE BINARY)) DESC, ('-570302220' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)AND(vt0.c0)))))AND((((vt0.c0))==(('1738185461'))))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(((x'5b31') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((MAX(vt0.c0, vt0.c0))-('vj*3f빜,hL' COLLATE BINARY)) DESC, ('-570302220' IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)AND(vt0.c0)))))AND((((vt0.c0))=(('1738185461'))))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(((x'5b31') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((MAX(vt0.c0, vt0.c0))-('vj*3f빜,hL' COLLATE BINARY)) DESC, ('-570302220' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)AND(vt0.c0)))))AND((((vt0.c0))==(('1738185461'))))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(((x'5b31') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((MAX(vt0.c0, vt0.c0))-('vj*3f빜,hL' COLLATE BINARY)) DESC, ('-570302220' IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0)AND(vt0.c0)))))AND((((vt0.c0))=(('1738185461'))))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(((x'5b31') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((MAX(vt0.c0, vt0.c0))-('vj*3f빜,hL' COLLATE BINARY)) DESC, ('-570302220' IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)+(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c0)+(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(((vt0.c0)+(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c63 WHERE (((((t0.c63) IS TRUE))IS NOT((((t0.c63))!=((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) IS TRUE))IS NOT((((t0.c63))<>((t0.c63)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c63);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c63 WHERE (((((t0.c63) IS TRUE))IS NOT((((t0.c63))!=((t0.c63))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) IS TRUE))IS NOT((((t0.c63))<>((t0.c63)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c63);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON t0.c63 WHERE (((((t0.c63) IS TRUE))IS NOT((((t0.c63))!=((t0.c63))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((('796505629') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('796505629') NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('796505629') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('796505629') NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((('796505629') NOTNULL));
SELECT ALL * FROM t0 WHERE (((((json_array_length(t0.c63))OR((x'' IN ()))))AND(((0.4539726107035814)-(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((json_array_length(t0.c63))OR((x'' IN ()))))AND(((0.4539726107035814)-(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((json_array_length(t0.c63))OR((x'' IN ()))))AND(((0.4539726107035814)-(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((json_array_length(t0.c63))OR((x'' IN ()))))AND(((0.4539726107035814)-(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(t0.c63 AS NUMERIC) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) WHEN ((t0.c63)<(t0.c63)) THEN ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE ((((((((vt0.c0))>((vt0.c0))))AND((((vt0.c0))<=((t0.c63))))))OR(((vt0.c0)&(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))>((vt0.c0))))AND((((vt0.c0))<=((t0.c63))))))OR(((vt0.c0)&(t0.c63))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(t0.c63 AS NUMERIC) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) WHEN ((t0.c63)<(t0.c63)) THEN ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(t0.c63 AS NUMERIC) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) WHEN ((t0.c63)<(t0.c63)) THEN ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE ((((((((vt0.c0))>((vt0.c0))))AND((((vt0.c0))<=((t0.c63))))))OR(((vt0.c0)&(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))>((vt0.c0))))AND((((vt0.c0))<=((t0.c63))))))OR(((vt0.c0)&(t0.c63))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(t0.c63 AS NUMERIC) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) WHEN ((t0.c63)<(t0.c63)) THEN ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(t0.c63 AS NUMERIC) WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((((t0.c63)OR(t0.c63)))OR(vt0.c0)) WHEN ((t0.c63)<(t0.c63)) THEN ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)) END WHERE ((((((((vt0.c0))>((vt0.c0))))AND((((vt0.c0))<=((t0.c63))))))OR(((vt0.c0)&(t0.c63)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (+ ((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.8630709015726388) ORDER BY ((CAST(t0.c63 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN x'd8ab' WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN '1795634682' ELSE t0.c63 END) AND (((t0.c63) ISNULL)));
SELECT SUM(count) FROM (SELECT ((0.8630709015726388) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c63 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN x'd8ab' WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN '1795634682' ELSE t0.c63 END) AND (((t0.c63) ISNULL))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.8630709015726388) ORDER BY ((CAST(t0.c63 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN x'd8ab' WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN '1795634682' ELSE t0.c63 END) AND (((t0.c63) ISNULL)));
SELECT SUM(count) FROM (SELECT ((0.8630709015726388) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(t0.c63 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN x'd8ab' WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN '1795634682' ELSE t0.c63 END) AND (((t0.c63) ISNULL))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.8630709015726388) ORDER BY ((CAST(t0.c63 AS BLOB)) BETWEEN (CASE WHEN vt0.c0 THEN x'd8ab' WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN '1795634682' ELSE t0.c63 END) AND (((t0.c63) ISNULL)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c63 END)<(CASE vt0.c0  WHEN 796505629 THEN vt0.c0 ELSE t0.c63 END))) ORDER BY ((vt0.c0) NOTNULL) ASC, ((CAST(vt0.c0 AS BLOB))%(((t0.c63)<=(NULL)))), (t0.c63 IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c63 END)<(CASE vt0.c0  WHEN 796505629 THEN vt0.c0 ELSE t0.c63 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOTNULL) ASC, ((CAST(vt0.c0 AS BLOB))%(((t0.c63)<=(NULL)))), (t0.c63 IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c63 END)<(CASE vt0.c0  WHEN 796505629 THEN vt0.c0 ELSE t0.c63 END))) ORDER BY ((vt0.c0) NOTNULL) ASC, ((CAST(vt0.c0 AS BLOB))%(((t0.c63)<=(NULL)))), (t0.c63 IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN t0.c63 END)<(CASE vt0.c0  WHEN 796505629 THEN vt0.c0 ELSE t0.c63 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOTNULL) ASC, ((CAST(vt0.c0 AS BLOB))%(((t0.c63)<=(NULL)))), (t0.c63 IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c63 END)<(CASE vt0.c0  WHEN 796505629 THEN vt0.c0 ELSE t0.c63 END))) ORDER BY ((vt0.c0) NOTNULL) ASC, ((CAST(vt0.c0 AS BLOB))%(((t0.c63)<=(NULL)))), (t0.c63 IN ());
SELECT * FROM t0 WHERE ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN '796505629' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ())) ORDER BY ((JULIANDAY(t0.c63, t0.c63, t0.c63, 0.26145093552097187, t0.c63))<<(((t0.c63)OR(t0.c63)))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN '796505629' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ())) IS TRUE)  as count FROM t0 ORDER BY ((JULIANDAY(t0.c63, t0.c63, t0.c63, 0.26145093552097187, t0.c63))<<(((t0.c63)OR(t0.c63)))) ASC);
SELECT * FROM t0 WHERE ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN '796505629' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ())) ORDER BY ((JULIANDAY(t0.c63, t0.c63, t0.c63, 0.26145093552097187, t0.c63))<<(((t0.c63)OR(t0.c63)))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN '796505629' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ())) IS TRUE)  as count FROM t0 ORDER BY ((JULIANDAY(t0.c63, t0.c63, t0.c63, 0.26145093552097187, t0.c63))<<(((t0.c63)OR(t0.c63)))) ASC);
SELECT * FROM t0 WHERE ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN '796505629' WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END IN ())) ORDER BY ((JULIANDAY(t0.c63, t0.c63, t0.c63, 0.26145093552097187, t0.c63))<<(((t0.c63)OR(t0.c63)))) ASC;
SELECT ALL * FROM vt0, t0 WHERE ((((0.950689181637774 IN ()))+(((NULL)/(vt0.c0))))) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) ASC, (((((t0.c63, t0.c63, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, t0.c63)) AND ((-570302220, vt0.c0, vt0.c0)))) NOT BETWEEN (((t0.c63)==(t0.c63))) AND (json_object(vt0.c0, t0.c63, vt0.c0, vt0.c0)))  NULLS FIRST, 0.6563076816827247 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.950689181637774 IN ()))+(((NULL)/(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) ASC, (((((t0.c63, t0.c63, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, t0.c63)) AND ((-570302220, vt0.c0, vt0.c0)))) NOT BETWEEN (((t0.c63)==(t0.c63))) AND (json_object(vt0.c0, t0.c63, vt0.c0, vt0.c0)))  NULLS FIRST, 0.6563076816827247 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((0.950689181637774 IN ()))+(((NULL)/(vt0.c0))))) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) ASC, (((((t0.c63, t0.c63, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, t0.c63)) AND ((-570302220, vt0.c0, vt0.c0)))) NOT BETWEEN (((t0.c63)==(t0.c63))) AND (json_object(vt0.c0, t0.c63, vt0.c0, vt0.c0)))  NULLS FIRST, 0.6563076816827247 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.950689181637774 IN ()))+(((NULL)/(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) ASC, (((((t0.c63, t0.c63, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, t0.c63)) AND ((-570302220, vt0.c0, vt0.c0)))) NOT BETWEEN (((t0.c63)==(t0.c63))) AND (json_object(vt0.c0, t0.c63, vt0.c0, vt0.c0)))  NULLS FIRST, 0.6563076816827247 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((0.950689181637774 IN ()))+(((NULL)/(vt0.c0))))) ORDER BY ((((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) ASC, (((((t0.c63, t0.c63, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, t0.c63)) AND ((-570302220, vt0.c0, vt0.c0)))) NOT BETWEEN (((t0.c63)==(t0.c63))) AND (json_object(vt0.c0, t0.c63, vt0.c0, vt0.c0)))  NULLS FIRST, 0.6563076816827247 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt0.c0)))) AND ((((vt0.c0)/(vt0.c0))))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c63) IS FALSE))/(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ (((vt0.c0)=(t0.c63)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS FALSE))/(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (((vt0.c0)==(t0.c63)))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c63) IS FALSE))/(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ (((vt0.c0)=(t0.c63)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS FALSE))/(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (+ (((vt0.c0)==(t0.c63)))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c63) IS FALSE))/(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (+ (((vt0.c0)=(t0.c63)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-((vt0.c0 IN (vt0.c0)))));
SELECT * FROM t0 WHERE ((NOT ((+ (-1854099043))))) ORDER BY (((t0.c63 IN (t0.c63))) ISNULL);
SELECT SUM(count) FROM (SELECT (((NOT ((+ (-1854099043))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63 IN (t0.c63))) ISNULL));
SELECT * FROM t0 WHERE ((NOT ((+ (-1854099043))))) ORDER BY (((t0.c63 IN (t0.c63))) ISNULL);
SELECT SUM(count) FROM (SELECT (((NOT ((+ (-1854099043))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63 IN (t0.c63))) ISNULL));
SELECT * FROM t0 WHERE ((NOT ((+ (-1854099043))))) ORDER BY (((t0.c63 IN (t0.c63))) ISNULL);
SELECT * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))OR(((((vt0.c0)AND(NULL)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))OR(((((vt0.c0)AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))OR(((((vt0.c0)AND(NULL)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))OR(((((vt0.c0)AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))OR(((((vt0.c0)AND(NULL)))AND(vt0.c0)))));
SELECT * FROM t0 WHERE (((((t0.c63)||(t0.c63))) NOT BETWEEN (CAST(t0.c63 AS INTEGER)) AND (((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)||(t0.c63))) NOT BETWEEN (CAST(t0.c63 AS INTEGER)) AND (((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c63)||(t0.c63))) NOT BETWEEN (CAST(t0.c63 AS INTEGER)) AND (((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63)||(t0.c63))) NOT BETWEEN (CAST(t0.c63 AS INTEGER)) AND (((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c63)||(t0.c63))) NOT BETWEEN (CAST(t0.c63 AS INTEGER)) AND (((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))));
SELECT ALL * FROM vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c63 AS NUMERIC))<<(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS NUMERIC))<<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c63 AS NUMERIC))<<(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS NUMERIC))<<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c63 AS NUMERIC))<<(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY (t0.c63 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY (t0.c63 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY (t0.c63 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY (t0.c63 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY (t0.c63 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)AND(t0.c63)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY LIKELIHOOD(0.5531356081825493, 0.47251728872383625)  NULLS LAST, ((((0.25134215090998746) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(t0.c63)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELIHOOD(0.5531356081825493, 0.47251728872383625)  NULLS LAST, ((((0.25134215090998746) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)AND(t0.c63)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY LIKELIHOOD(0.5531356081825493, 0.47251728872383625)  NULLS LAST, ((((0.25134215090998746) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(t0.c63)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY LIKELIHOOD(0.5531356081825493, 0.47251728872383625)  NULLS LAST, ((((0.25134215090998746) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)AND(t0.c63)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY LIKELIHOOD(0.5531356081825493, 0.47251728872383625)  NULLS LAST, ((((0.25134215090998746) NOT BETWEEN (vt0.c0) AND (t0.c63))) NOTNULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((vt0.c0 COLLATE RTRIM)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((vt0.c0 COLLATE RTRIM)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE BINARY))>((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((vt0.c0 COLLATE RTRIM)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.5018195769795458)-((((vt0.c0, t0.c63, t0.c63))<>((t0.c63, vt0.c0, t0.c63))))));
SELECT SUM(count) FROM (SELECT ((((0.5018195769795458)-((((vt0.c0, t0.c63, t0.c63))<>((t0.c63, vt0.c0, t0.c63)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.5018195769795458)-((((vt0.c0, t0.c63, t0.c63))<>((t0.c63, vt0.c0, t0.c63))))));
SELECT SUM(count) FROM (SELECT ((((0.5018195769795458)-((((vt0.c0, t0.c63, t0.c63))<>((t0.c63, vt0.c0, t0.c63)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.5018195769795458)-((((vt0.c0, t0.c63, t0.c63))<>((t0.c63, vt0.c0, t0.c63))))));
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY ((('', t0.c63, t0.c63)) NOT BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)AND(t0.c63)))OR(t0.c63)), (+ (vt0.c0)))) AND ((CAST(t0.c63 AS INTEGER), (t0.c63 IN ()), ((t0.c63) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('', t0.c63, t0.c63)) NOT BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)AND(t0.c63)))OR(t0.c63)), (+ (vt0.c0)))) AND ((CAST(t0.c63 AS INTEGER), (t0.c63 IN ()), ((t0.c63) NOTNULL)))));
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY ((('', t0.c63, t0.c63)) NOT BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)AND(t0.c63)))OR(t0.c63)), (+ (vt0.c0)))) AND ((CAST(t0.c63 AS INTEGER), (t0.c63 IN ()), ((t0.c63) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY ((('', t0.c63, t0.c63)) NOT BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)AND(t0.c63)))OR(t0.c63)), (+ (vt0.c0)))) AND ((CAST(t0.c63 AS INTEGER), (t0.c63 IN ()), ((t0.c63) NOTNULL)))));
SELECT ALL * FROM vt0, t0 WHERE (NULL) ORDER BY ((('', t0.c63, t0.c63)) NOT BETWEEN (((vt0.c0 IN ()), ((((vt0.c0)AND(t0.c63)))OR(t0.c63)), (+ (vt0.c0)))) AND ((CAST(t0.c63 AS INTEGER), (t0.c63 IN ()), ((t0.c63) NOTNULL))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM t0 WHERE (json_insert(t0.c63, t0.c63, 0X5cf5f051, t0.c63, t0.c63, t0.c63, t0.c63) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_insert(t0.c63, t0.c63, 0X5cf5f051, t0.c63, t0.c63, t0.c63, t0.c63) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_insert(t0.c63, t0.c63, 0X5cf5f051, t0.c63, t0.c63, t0.c63, t0.c63) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_insert(t0.c63, t0.c63, 0X5cf5f051, t0.c63, t0.c63, t0.c63, t0.c63) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (x'eb9a') AND (((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(x'' AS REAL) WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(0.7616905859061801)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (x'eb9a') AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(x'' AS REAL) WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(0.7616905859061801)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (x'eb9a') AND (((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(x'' AS REAL) WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(0.7616905859061801)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (x'eb9a') AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(x'' AS REAL) WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(0.7616905859061801)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) NOT BETWEEN (x'eb9a') AND (((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) WHEN (~ (vt0.c0)) THEN CAST(x'' AS REAL) WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)/(0.7616905859061801)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (t0.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (t0.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((NOT (t0.c63)) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE ((((((('')OR(t0.c63)))OR(t0.c63))) NOT BETWEEN (((((t0.c63)AND(t0.c63)))AND(''))) AND (((((t0.c63)OR(t0.c63)))OR('')))));
SELECT SUM(count) FROM (SELECT ALL (((((((('')OR(t0.c63)))OR(t0.c63))) NOT BETWEEN (((((t0.c63)AND(t0.c63)))AND(''))) AND (((((t0.c63)OR(t0.c63)))OR(''))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((('')OR(t0.c63)))OR(t0.c63))) NOT BETWEEN (((((t0.c63)AND(t0.c63)))AND(''))) AND (((((t0.c63)OR(t0.c63)))OR('')))));
SELECT SUM(count) FROM (SELECT ALL (((((((('')OR(t0.c63)))OR(t0.c63))) NOT BETWEEN (((((t0.c63)AND(t0.c63)))AND(''))) AND (((((t0.c63)OR(t0.c63)))OR(''))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((('')OR(t0.c63)))OR(t0.c63))) NOT BETWEEN (((((t0.c63)AND(t0.c63)))AND(''))) AND (((((t0.c63)OR(t0.c63)))OR('')))));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ('0.2854663972096916');
SELECT SUM(count) FROM (SELECT (('0.2854663972096916') IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ('0.2854663972096916');
SELECT SUM(count) FROM (SELECT (('0.2854663972096916') IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ('0.2854663972096916');
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c63)/(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)||(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c63)/(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)||(t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c63)/(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)||(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c63)/(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)||(t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((t0.c63)/(vt0.c0)))OR((vt0.c0 IN ()))))OR(((vt0.c0)||(t0.c63)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c63) NOT BETWEEN (0.3862917191073947) AND (t0.c63))))) ORDER BY t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c63) NOT BETWEEN (0.3862917191073947) AND (t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY t0.c63 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c63) NOT BETWEEN (0.3862917191073947) AND (t0.c63))))) ORDER BY t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c63) NOT BETWEEN (0.3862917191073947) AND (t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY t0.c63 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c63) NOT BETWEEN (0.3862917191073947) AND (t0.c63))))) ORDER BY t0.c63 DESC;
SELECT ALL * FROM t0, vt0 WHERE ((NOT (CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((UNLIKELY(NULL)) IS TRUE) DESC, (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, CASE (vt0.c0 IN ())  WHEN ((x'')*(t0.c63)) THEN x'' ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((UNLIKELY(NULL)) IS TRUE) DESC, (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, CASE (vt0.c0 IN ())  WHEN ((x'')*(t0.c63)) THEN x'' ELSE vt0.c0 END);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((UNLIKELY(NULL)) IS TRUE) DESC, (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, CASE (vt0.c0 IN ())  WHEN ((x'')*(t0.c63)) THEN x'' ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((UNLIKELY(NULL)) IS TRUE) DESC, (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, CASE (vt0.c0 IN ())  WHEN ((x'')*(t0.c63)) THEN x'' ELSE vt0.c0 END);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((UNLIKELY(NULL)) IS TRUE) DESC, (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, CASE (vt0.c0 IN ())  WHEN ((x'')*(t0.c63)) THEN x'' ELSE vt0.c0 END;
SELECT ALL * FROM t0 WHERE ((t0.c63 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c63 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c63 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c63 IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c63 IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c63 END)AND(((vt0.c0)GLOB(t0.c63)))))AND((t0.c63 IN ()))) WHERE (CAST((NOT (t0.c63)) AS BLOB)) ORDER BY NULL DESC  NULLS FIRST, CASE (((vt0.c0))>((vt0.c0)))  WHEN CAST(x'' AS REAL) THEN CASE WHEN t0.c63 THEN vt0.c0 END END DESC, t0.c63;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c63 END)AND(((vt0.c0)GLOB(t0.c63)))))AND((t0.c63 IN ()))) ORDER BY NULL DESC  NULLS FIRST, CASE (((vt0.c0))>((vt0.c0)))  WHEN CAST(x'' AS REAL) THEN CASE WHEN t0.c63 THEN vt0.c0 END END DESC, t0.c63);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c63 END)AND(((vt0.c0)GLOB(t0.c63)))))AND((t0.c63 IN ()))) WHERE (CAST((NOT (t0.c63)) AS BLOB)) ORDER BY NULL DESC  NULLS FIRST, CASE (((vt0.c0))>((vt0.c0)))  WHEN CAST(x'' AS REAL) THEN CASE WHEN t0.c63 THEN vt0.c0 END END DESC, t0.c63;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c63 END)AND(((vt0.c0)GLOB(t0.c63)))))AND((t0.c63 IN ()))) ORDER BY NULL DESC  NULLS FIRST, CASE (((vt0.c0))>((vt0.c0)))  WHEN CAST(x'' AS REAL) THEN CASE WHEN t0.c63 THEN vt0.c0 END END DESC, t0.c63);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON ((((CASE WHEN vt0.c0 THEN t0.c63 END)AND(((vt0.c0)GLOB(t0.c63)))))AND((t0.c63 IN ()))) WHERE (CAST((NOT (t0.c63)) AS BLOB)) ORDER BY NULL DESC  NULLS FIRST, CASE (((vt0.c0))>((vt0.c0)))  WHEN CAST(x'' AS REAL) THEN CASE WHEN t0.c63 THEN vt0.c0 END END DESC, t0.c63;
SELECT COUNT(*) FROM t0, vt0 WHERE (((LENGTH(vt0.c0))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LENGTH(vt0.c0))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((LENGTH(vt0.c0))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LENGTH(vt0.c0))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((LENGTH(vt0.c0))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM t0, vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.5419838214933154))AND(t0.c63 COLLATE BINARY)))AND(((t0.c63) IS FALSE)))) ORDER BY (((t0.c63) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT vt0.c0, 0.5419838214933154))AND(t0.c63 COLLATE BINARY)))AND(((t0.c63) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c63) IS TRUE) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.5419838214933154))AND(t0.c63 COLLATE BINARY)))AND(((t0.c63) IS FALSE)))) ORDER BY (((t0.c63) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT vt0.c0, 0.5419838214933154))AND(t0.c63 COLLATE BINARY)))AND(((t0.c63) IS FALSE)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c63) IS TRUE) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.5419838214933154))AND(t0.c63 COLLATE BINARY)))AND(((t0.c63) IS FALSE)))) ORDER BY (((t0.c63) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (0.35922452200062505) ORDER BY (- (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((0.35922452200062505) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (0.35922452200062505) ORDER BY (- (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((0.35922452200062505) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (0.35922452200062505) ORDER BY (- (CAST(vt0.c0 AS TEXT)));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ('-1081922048') ORDER BY t0.c63 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1081922048') IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY t0.c63 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ('-1081922048') ORDER BY t0.c63 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1081922048') IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY t0.c63 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ('-1081922048') ORDER BY t0.c63 ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (HEX(DISTINCT CAST(t0.c63 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(t0.c63 AS TEXT))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX(DISTINCT CAST(t0.c63 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(t0.c63 AS TEXT))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX(DISTINCT CAST(t0.c63 AS TEXT)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1559621713', t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1559621713', t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1559621713', t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1559621713', t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '1559621713', t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (+ (vt0.c0)) THEN CAST('' AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN 'W_BVLJY놝?' THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (+ (vt0.c0)) THEN CAST('' AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN 'W_BVLJY놝?' THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (+ (vt0.c0)) THEN CAST('' AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN 'W_BVLJY놝?' THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (+ (vt0.c0)) THEN CAST('' AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN 'W_BVLJY놝?' THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (+ (vt0.c0)) THEN CAST('' AS NUMERIC) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN 'W_BVLJY놝?' THEN (vt0.c0 IN ()) END);
SELECT * FROM t0 WHERE ((((t0.c63)AND(t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63)AND(t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)AND(t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63)AND(t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)AND(t0.c63)) IN ()));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST((t0.c63 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c63 IN ()) AS REAL));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST((t0.c63 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c63 IN ()) AS REAL));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CAST((t0.c63 IN ()) AS REAL);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ())) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ())) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63 IN ())) ISNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.c0)OR('-1991534276')))AND(vt0.c0)), ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((t0.c63)<(t0.c63)), t0.c63, CASE WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END))==((t0.c63, ((vt0.c0)&(vt0.c0)), ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c63) AND ('-2115736883')), (((vt0.c0, t0.c63, t0.c63, t0.c63, t0.c63))==((t0.c63, vt0.c0, t0.c63, t0.c63, vt0.c0))))))) ORDER BY CASE WHEN (((vt0.c0))>=((t0.c63))) THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c63, -1489407187)) NOT BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR('-1991534276')))AND(vt0.c0)), ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((t0.c63)<(t0.c63)), t0.c63, CASE WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END))=((t0.c63, ((vt0.c0)&(vt0.c0)), ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c63) AND ('-2115736883')), (((vt0.c0, t0.c63, t0.c63, t0.c63, t0.c63))=((t0.c63, vt0.c0, t0.c63, t0.c63, vt0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((vt0.c0))>=((t0.c63))) THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c63, -1489407187)) NOT BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.c0)OR('-1991534276')))AND(vt0.c0)), ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((t0.c63)<(t0.c63)), t0.c63, CASE WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END))==((t0.c63, ((vt0.c0)&(vt0.c0)), ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c63) AND ('-2115736883')), (((vt0.c0, t0.c63, t0.c63, t0.c63, t0.c63))==((t0.c63, vt0.c0, t0.c63, t0.c63, vt0.c0))))))) ORDER BY CASE WHEN (((vt0.c0))>=((t0.c63))) THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c63, -1489407187)) NOT BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR('-1991534276')))AND(vt0.c0)), ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((t0.c63)<(t0.c63)), t0.c63, CASE WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END))=((t0.c63, ((vt0.c0)&(vt0.c0)), ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c63) AND ('-2115736883')), (((vt0.c0, t0.c63, t0.c63, t0.c63, t0.c63))=((t0.c63, vt0.c0, t0.c63, t0.c63, vt0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN (((vt0.c0))>=((t0.c63))) THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c63, -1489407187)) NOT BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((((vt0.c0)OR('-1991534276')))AND(vt0.c0)), ((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((t0.c63)<(t0.c63)), t0.c63, CASE WHEN NULL THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END))==((t0.c63, ((vt0.c0)&(vt0.c0)), ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c63) AND ('-2115736883')), (((vt0.c0, t0.c63, t0.c63, t0.c63, t0.c63))==((t0.c63, vt0.c0, t0.c63, t0.c63, vt0.c0))))))) ORDER BY CASE WHEN (((vt0.c0))>=((t0.c63))) THEN ((vt0.c0) IS TRUE) ELSE (((vt0.c0, t0.c63, -1489407187)) NOT BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)))LIKE(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)))LIKE(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)))LIKE(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)))LIKE(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)))LIKE(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (x'e0c6' IN (((vt0.c0) IS FALSE))) WHERE (((((((((t0.c63 COLLATE BINARY)AND(LIKELIHOOD(t0.c63, 0.7686167326171435))))AND(t0.c63 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))))AND(((vt0.c0)GLOB(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c63 COLLATE BINARY)AND(LIKELIHOOD(t0.c63, 0.7686167326171435))))AND(t0.c63 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))))AND(((vt0.c0)GLOB(t0.c63))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (x'e0c6' IN (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (x'e0c6' IN (((vt0.c0) IS FALSE))) WHERE (((((((((t0.c63 COLLATE BINARY)AND(LIKELIHOOD(t0.c63, 0.7686167326171435))))AND(t0.c63 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))))AND(((vt0.c0)GLOB(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c63 COLLATE BINARY)AND(LIKELIHOOD(t0.c63, 0.7686167326171435))))AND(t0.c63 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))))AND(((vt0.c0)GLOB(t0.c63))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (x'e0c6' IN (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (x'e0c6' IN (((vt0.c0) IS FALSE))) WHERE (((((((((t0.c63 COLLATE BINARY)AND(LIKELIHOOD(t0.c63, 0.7686167326171435))))AND(t0.c63 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))))AND(((vt0.c0)GLOB(t0.c63)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c63)))OR(x'5359')))AND(vt0.c0)))) AND (((NOT (t0.c63)))))) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c63)))OR(x'5359')))AND(vt0.c0)))) AND (((NOT (t0.c63)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c63)))OR(x'5359')))AND(vt0.c0)))) AND (((NOT (t0.c63)))))) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c63)))OR(x'5359')))AND(vt0.c0)))) AND (((NOT (t0.c63)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(t0.c63)))OR(x'5359')))AND(vt0.c0)))) AND (((NOT (t0.c63)))))) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c0)AND(vt0.c0)))AND(t0.c63))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 END) AND ((- (t0.c63)))) WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0)))) ORDER BY CAST(0.9050133068676273 AS INTEGER), (NOT ((~ (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c0)AND(vt0.c0)))AND(t0.c63))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 END) AND ((- (t0.c63)))) ORDER BY CAST(0.9050133068676273 AS INTEGER), (NOT ((~ (t0.c63)))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c0)AND(vt0.c0)))AND(t0.c63))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 END) AND ((- (t0.c63)))) WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0)))) ORDER BY CAST(0.9050133068676273 AS INTEGER), (NOT ((~ (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c0)AND(vt0.c0)))AND(t0.c63))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 END) AND ((- (t0.c63)))) ORDER BY CAST(0.9050133068676273 AS INTEGER), (NOT ((~ (t0.c63)))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c0)AND(vt0.c0)))AND(t0.c63))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 END) AND ((- (t0.c63)))) WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0)))) ORDER BY CAST(0.9050133068676273 AS INTEGER), (NOT ((~ (t0.c63))));
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), 0.6397816569937677));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), 0.6397816569937677)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), 0.6397816569937677));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), 0.6397816569937677)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)), 0.6397816569937677));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (0.9837847786752543) AND (vt0.c0))))) ORDER BY (((((((x'dd2e')AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, 0xffffffffa7625d04))==((vt0.c0, vt0.c0, vt0.c0)))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=('1064735297'))))), (LIKELIHOOD(vt0.c0, 0.2916554153727151) IN ())  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (0.9837847786752543) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((x'dd2e')AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, 0xffffffffa7625d04))==((vt0.c0, vt0.c0, vt0.c0)))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=('1064735297'))))), (LIKELIHOOD(vt0.c0, 0.2916554153727151) IN ())  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (0.9837847786752543) AND (vt0.c0))))) ORDER BY (((((((x'dd2e')AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, 0xffffffffa7625d04))==((vt0.c0, vt0.c0, vt0.c0)))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=('1064735297'))))), (LIKELIHOOD(vt0.c0, 0.2916554153727151) IN ())  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (0.9837847786752543) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((x'dd2e')AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, 0xffffffffa7625d04))==((vt0.c0, vt0.c0, vt0.c0)))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=('1064735297'))))), (LIKELIHOOD(vt0.c0, 0.2916554153727151) IN ())  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (0.9837847786752543) AND (vt0.c0))))) ORDER BY (((((((x'dd2e')AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0, vt0.c0, 0xffffffffa7625d04))==((vt0.c0, vt0.c0, vt0.c0)))))>=((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)<=('1064735297'))))), (LIKELIHOOD(vt0.c0, 0.2916554153727151) IN ())  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END  NULLS FIRST;
SELECT * FROM vt0 WHERE ('-1854099043') ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1854099043') IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('-1854099043') ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1854099043') IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ('-1854099043') ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((~ ((((vt0.c0, t0.c63, vt0.c0))<>((t0.c63, t0.c63, vt0.c0)))))) ORDER BY (NOT (((vt0.c0)<=(vt0.c0))))  NULLS FIRST, load_extension('-27256741')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, t0.c63, vt0.c0))<>((t0.c63, t0.c63, vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((vt0.c0)<=(vt0.c0))))  NULLS FIRST, load_extension('-27256741')  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((~ ((((vt0.c0, t0.c63, vt0.c0))<>((t0.c63, t0.c63, vt0.c0)))))) ORDER BY (NOT (((vt0.c0)<=(vt0.c0))))  NULLS FIRST, load_extension('-27256741')  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, t0.c63, vt0.c0))<>((t0.c63, t0.c63, vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((vt0.c0)<=(vt0.c0))))  NULLS FIRST, load_extension('-27256741')  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT ((t0.c63 IN ()))) WHERE (((CASE NULL  WHEN vt0.c0 THEN t0.c63 END)|(((((vt0.c0)OR(t0.c63)))OR(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt0.c0 THEN t0.c63 END)|(((((vt0.c0)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (NOT ((t0.c63 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT ((t0.c63 IN ()))) WHERE (((CASE NULL  WHEN vt0.c0 THEN t0.c63 END)|(((((vt0.c0)OR(t0.c63)))OR(t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN vt0.c0 THEN t0.c63 END)|(((((vt0.c0)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (NOT ((t0.c63 IN ()))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT ((t0.c63 IN ()))) WHERE (((CASE NULL  WHEN vt0.c0 THEN t0.c63 END)|(((((vt0.c0)OR(t0.c63)))OR(t0.c63)))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON '(Z' WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0)*(t0.c63)) WHEN ((vt0.c0) IS TRUE) THEN CAST(t0.c63 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN 'TX' THEN t0.c63 END THEN (NOT (t0.c63)) ELSE t0.c63 END) ORDER BY CASE WHEN CASE WHEN '-2105408441' THEN t0.c63 WHEN vt0.c0 THEN 'Ps[j4%B' WHEN t0.c63 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, t0.c63))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((t0.c63)LIKE(t0.c63)) THEN t0.c63 WHEN 0xffffffffb4f4acf8 THEN ((t0.c63)>(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((vt0.c0)*(t0.c63)) WHEN ((vt0.c0) IS TRUE) THEN CAST(t0.c63 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN 'TX' THEN t0.c63 END THEN (NOT (t0.c63)) ELSE t0.c63 END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '(Z' ORDER BY CASE WHEN CASE WHEN '-2105408441' THEN t0.c63 WHEN vt0.c0 THEN 'Ps[j4%B' WHEN t0.c63 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, t0.c63))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((t0.c63)LIKE(t0.c63)) THEN t0.c63 WHEN 0Xffffffffb4f4acf8 THEN ((t0.c63)>(vt0.c0)) END ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON '(Z' WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0)*(t0.c63)) WHEN ((vt0.c0) IS TRUE) THEN CAST(t0.c63 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN 'TX' THEN t0.c63 END THEN (NOT (t0.c63)) ELSE t0.c63 END) ORDER BY CASE WHEN CASE WHEN '-2105408441' THEN t0.c63 WHEN vt0.c0 THEN 'Ps[j4%B' WHEN t0.c63 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, t0.c63))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((t0.c63)LIKE(t0.c63)) THEN t0.c63 WHEN 0xffffffffb4f4acf8 THEN ((t0.c63)>(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((vt0.c0)*(t0.c63)) WHEN ((vt0.c0) IS TRUE) THEN CAST(t0.c63 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN 'TX' THEN t0.c63 END THEN (NOT (t0.c63)) ELSE t0.c63 END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '(Z' ORDER BY CASE WHEN CASE WHEN '-2105408441' THEN t0.c63 WHEN vt0.c0 THEN 'Ps[j4%B' WHEN t0.c63 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, t0.c63))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((t0.c63)LIKE(t0.c63)) THEN t0.c63 WHEN 0Xffffffffb4f4acf8 THEN ((t0.c63)>(vt0.c0)) END ASC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON '(Z' WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0)*(t0.c63)) WHEN ((vt0.c0) IS TRUE) THEN CAST(t0.c63 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN 'TX' THEN t0.c63 END THEN (NOT (t0.c63)) ELSE t0.c63 END) ORDER BY CASE WHEN CASE WHEN '-2105408441' THEN t0.c63 WHEN vt0.c0 THEN 'Ps[j4%B' WHEN t0.c63 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, t0.c63))>=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((t0.c63)LIKE(t0.c63)) THEN t0.c63 WHEN 0xffffffffb4f4acf8 THEN ((t0.c63)>(vt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (0Xffffffffc6732c9b IN ()) WHERE (t0.c63) ORDER BY ((((((t0.c63) IS FALSE))OR('0.9847836961749997')))OR(0.456336598154263)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (0Xffffffffc6732c9b IN ()) ORDER BY ((((((t0.c63) IS FALSE))OR('0.9847836961749997')))OR(0.456336598154263)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (0Xffffffffc6732c9b IN ()) WHERE (t0.c63) ORDER BY ((((((t0.c63) IS FALSE))OR('0.9847836961749997')))OR(0.456336598154263)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (0Xffffffffc6732c9b IN ()) ORDER BY ((((((t0.c63) IS FALSE))OR('0.9847836961749997')))OR(0.456336598154263)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (0Xffffffffc6732c9b IN ()) WHERE (t0.c63) ORDER BY ((((((t0.c63) IS FALSE))OR('0.9847836961749997')))OR(0.456336598154263)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)) ELSE (((vt0.c0, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) END) ORDER BY CASE WHEN vt0.c0 THEN t0.c63 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)) ELSE (((vt0.c0, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 ORDER BY CASE WHEN vt0.c0 THEN t0.c63 END COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)) ELSE (((vt0.c0, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) END) ORDER BY CASE WHEN vt0.c0 THEN t0.c63 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)) ELSE (((vt0.c0, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 ORDER BY CASE WHEN vt0.c0 THEN t0.c63 END COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON vt0.c0 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63)) ELSE (((vt0.c0, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))) END) ORDER BY CASE WHEN vt0.c0 THEN t0.c63 END COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c63)>>('W~')))) WHERE ((((((t0.c63)AND(t0.c63)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63)AND(t0.c63)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c63)>>('W~')))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c63)>>('W~')))) WHERE ((((((t0.c63)AND(t0.c63)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63)AND(t0.c63)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c63)>>('W~')))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (NOT (((t0.c63)>>('W~')))) WHERE ((((((t0.c63)AND(t0.c63)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM t0, vt0 WHERE ((+ (CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ (CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((NULL IN ())) ORDER BY t0.c63  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((NULL IN ())) ORDER BY t0.c63  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE ((NULL IN ())) ORDER BY t0.c63  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c63) NOT NULL))-(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY ((((t0.c63)=(t0.c63)))<=(((t0.c63) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) NOT NULL))-(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c63)==(t0.c63)))<=(((t0.c63) NOT NULL))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c63) NOT NULL))-(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY ((((t0.c63)=(t0.c63)))<=(((t0.c63) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) NOT NULL))-(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c63)==(t0.c63)))<=(((t0.c63) NOT NULL))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c63) NOT NULL))-(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) ORDER BY ((((t0.c63)=(t0.c63)))<=(((t0.c63) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY HEX(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT ALL * FROM t0 WHERE (highlight((~ (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, (~ (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((highlight((~ (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, (~ (t0.c63)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (highlight((~ (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, (~ (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((highlight((~ (t0.c63)), ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, (~ (t0.c63)))) IS TRUE)  as count FROM t0);
SELECT * FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)IS(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c63);
SELECT * FROM vt0 WHERE (CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0, t0 WHERE (((((x'e1c3')AND(vt0.c0)))IS(((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'e1c3')AND(vt0.c0)))IS(((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((x'e1c3')AND(vt0.c0)))IS(((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'e1c3')AND(vt0.c0)))IS(((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((x'e1c3')AND(vt0.c0)))IS(((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((((0x6e71fe6c)AND(vt0.c0)))AND(t0.c63)) THEN ((vt0.c0)OR(t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((0X6e71fe6c)AND(vt0.c0)))AND(t0.c63)) THEN ((vt0.c0)OR(t0.c63)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((((0x6e71fe6c)AND(vt0.c0)))AND(t0.c63)) THEN ((vt0.c0)OR(t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((0X6e71fe6c)AND(vt0.c0)))AND(t0.c63)) THEN ((vt0.c0)OR(t0.c63)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((((0x6e71fe6c)AND(vt0.c0)))AND(t0.c63)) THEN ((vt0.c0)OR(t0.c63)) END);
SELECT COUNT(*) FROM t0 WHERE (((((NULL)OR(t0.c63 COLLATE NOCASE)))AND(((t0.c63) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(t0.c63 COLLATE NOCASE)))AND(((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((NULL)OR(t0.c63 COLLATE NOCASE)))AND(((t0.c63) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(t0.c63 COLLATE NOCASE)))AND(((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((NULL)OR(t0.c63 COLLATE NOCASE)))AND(((t0.c63) NOT NULL))));
SELECT * FROM t0, vt0 WHERE (((('	K') NOTNULL) IN ())) ORDER BY (TRIM(t0.c63, vt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('	K') NOTNULL) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (TRIM(t0.c63, vt0.c0) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((('	K') NOTNULL) IN ())) ORDER BY (TRIM(t0.c63, vt0.c0) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('	K') NOTNULL) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (TRIM(t0.c63, vt0.c0) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((('	K') NOTNULL) IN ())) ORDER BY (TRIM(t0.c63, vt0.c0) IN ()) DESC  NULLS LAST;
SELECT * FROM t0 WHERE ((- (((t0.c63) ISNULL)))) ORDER BY (NOT (t0.c63)) COLLATE NOCASE  NULLS LAST, HEX(((t0.c63) NOT NULL))  NULLS LAST, CAST(t0.c63 COLLATE BINARY AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c63) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c63)) COLLATE NOCASE  NULLS LAST, HEX(((t0.c63) NOT NULL))  NULLS LAST, CAST(t0.c63 COLLATE BINARY AS NUMERIC));
SELECT * FROM t0 WHERE ((- (((t0.c63) ISNULL)))) ORDER BY (NOT (t0.c63)) COLLATE NOCASE  NULLS LAST, HEX(((t0.c63) NOT NULL))  NULLS LAST, CAST(t0.c63 COLLATE BINARY AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c63) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c63)) COLLATE NOCASE  NULLS LAST, HEX(((t0.c63) NOT NULL))  NULLS LAST, CAST(t0.c63 COLLATE BINARY AS NUMERIC));
SELECT * FROM t0 WHERE ((- (((t0.c63) ISNULL)))) ORDER BY (NOT (t0.c63)) COLLATE NOCASE  NULLS LAST, HEX(((t0.c63) NOT NULL))  NULLS LAST, CAST(t0.c63 COLLATE BINARY AS NUMERIC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((t0.c63)) AND ((''))) AS NUMERIC)) ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((t0.c63)) AND ((''))) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((t0.c63)) AND ((''))) AS NUMERIC)) ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((t0.c63)) AND ((''))) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((t0.c63)) AND ((''))) AS NUMERIC)) ORDER BY ((vt0.c0) ISNULL) COLLATE RTRIM ASC;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (NOT ('1925051070')) WHERE ('1391843471') ORDER BY MAX((vt0.c0 IN ()), ((((vt0.c0)AND('259992630')))OR(vt0.c0)), (((t0.c63))=((NULL))), ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))AND(vt0.c0)))AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1391843471') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NOT ('1925051070')) ORDER BY MAX((vt0.c0 IN ()), ((((vt0.c0)AND('259992630')))OR(vt0.c0)), (((t0.c63))==((NULL))), ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))AND(vt0.c0)))AND(vt0.c0)))  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (NOT ('1925051070')) WHERE ('1391843471') ORDER BY MAX((vt0.c0 IN ()), ((((vt0.c0)AND('259992630')))OR(vt0.c0)), (((t0.c63))=((NULL))), ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))AND(vt0.c0)))AND(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1391843471') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NOT ('1925051070')) ORDER BY MAX((vt0.c0 IN ()), ((((vt0.c0)AND('259992630')))OR(vt0.c0)), (((t0.c63))==((NULL))), ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))AND(vt0.c0)))AND(vt0.c0)))  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (NOT ('1925051070')) WHERE ('1391843471') ORDER BY MAX((vt0.c0 IN ()), ((((vt0.c0)AND('259992630')))OR(vt0.c0)), (((t0.c63))=((NULL))), ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))AND(vt0.c0)))AND(vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST((- (vt0.c0)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c63)AND(t0.c63)))AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c63)AND(t0.c63)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c63)AND(t0.c63)))AND(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c63)AND(t0.c63)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((((t0.c63)AND(t0.c63)))AND(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.5345852775224896 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.5345852775224896 AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.5345852775224896 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.5345852775224896 AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.5345852775224896 AS REAL));
SELECT ALL * FROM vt0, t0 WHERE (TRIM((- (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((- (t0.c63)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (TRIM((- (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((- (t0.c63)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (TRIM((- (t0.c63))));
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))AND((((vt0.c0))>=((vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))AND((((vt0.c0))>=((vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))AND((((vt0.c0))>=((vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))AND((((vt0.c0))>=((vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))AND((((vt0.c0))>=((vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((+ (vt0.c0)))));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c63)AND(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(0.7656939224592816))) NOTNULL) WHERE (CASE WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((t0.c63)+(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN t0.c63 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((t0.c63)+(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN t0.c63 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c63)AND(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(0.7656939224592816))) NOTNULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c63)AND(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(0.7656939224592816))) NOTNULL) WHERE (CASE WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((t0.c63)+(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN t0.c63 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((t0.c63)+(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN t0.c63 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c63)AND(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(0.7656939224592816))) NOTNULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c63)AND(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(0.7656939224592816))) NOTNULL) WHERE (CASE WHEN '' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN ((t0.c63)+(vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN t0.c63 COLLATE RTRIM END);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)IS NOT(((((((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))))) ORDER BY x'' ASC  NULLS LAST, t0.c63  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(((((((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC  NULLS LAST, t0.c63  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)IS NOT(((((((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))))) ORDER BY x'' ASC  NULLS LAST, t0.c63  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(((((((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC  NULLS LAST, t0.c63  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0)IS NOT(((((((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))))) ORDER BY x'' ASC  NULLS LAST, t0.c63  NULLS FIRST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c63) IS TRUE))AND((t0.c63 IN ()))))AND(((vt0.c0)-(t0.c63)))) WHERE ((((t0.c63 IN ()))IS((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ()))IS((t0.c63 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c63) IS TRUE))AND((t0.c63 IN ()))))AND(((vt0.c0)-(t0.c63)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c63) IS TRUE))AND((t0.c63 IN ()))))AND(((vt0.c0)-(t0.c63)))) WHERE ((((t0.c63 IN ()))IS((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ()))IS((t0.c63 IN ())))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c63) IS TRUE))AND((t0.c63 IN ()))))AND(((vt0.c0)-(t0.c63)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c63) IS TRUE))AND((t0.c63 IN ()))))AND(((vt0.c0)-(t0.c63)))) WHERE ((((t0.c63 IN ()))IS((t0.c63 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c63 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c63 IN ()) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c63 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c63 IN ()) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c63 IN ()) AS REAL));
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c63)))>>(CASE WHEN t0.c63 THEN t0.c63 ELSE 0Xffffffff9d2f79ed END)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c63)))>>(CASE WHEN t0.c63 THEN t0.c63 ELSE 0xffffffff9d2f79ed END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c63)))>>(CASE WHEN t0.c63 THEN t0.c63 ELSE 0Xffffffff9d2f79ed END)));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c63)))>>(CASE WHEN t0.c63 THEN t0.c63 ELSE 0xffffffff9d2f79ed END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c63)))>>(CASE WHEN t0.c63 THEN t0.c63 ELSE 0Xffffffff9d2f79ed END)));
SELECT * FROM t0, vt0 WHERE (CASE ((((((((t0.c63)OR(vt0.c0)))OR(t0.c63)))OR(x'')))OR(t0.c63))  WHEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((2.116861494E9) IS TRUE) ELSE (- (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((t0.c63)OR(vt0.c0)))OR(t0.c63)))OR(x'')))OR(t0.c63))  WHEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((2.116861494E9) IS TRUE) ELSE (- (t0.c63)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE ((((((((t0.c63)OR(vt0.c0)))OR(t0.c63)))OR(x'')))OR(t0.c63))  WHEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((2.116861494E9) IS TRUE) ELSE (- (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((t0.c63)OR(vt0.c0)))OR(t0.c63)))OR(x'')))OR(t0.c63))  WHEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((2.116861494E9) IS TRUE) ELSE (- (t0.c63)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE ((((((((t0.c63)OR(vt0.c0)))OR(t0.c63)))OR(x'')))OR(t0.c63))  WHEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((2.116861494E9) IS TRUE) ELSE (- (t0.c63)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c63)-(t0.c63)) IN ()) DESC, (t0.c63 IN ())  NULLS LAST, (((((t0.c63))<>((t0.c63))))/(((t0.c63)>>(t0.c63)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63)-(t0.c63)) IN ()) DESC, (t0.c63 IN ())  NULLS LAST, (((((t0.c63))!=((t0.c63))))/(((t0.c63)>>(t0.c63)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c63)-(t0.c63)) IN ()) DESC, (t0.c63 IN ())  NULLS LAST, (((((t0.c63))<>((t0.c63))))/(((t0.c63)>>(t0.c63)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63)-(t0.c63)) IN ()) DESC, (t0.c63 IN ())  NULLS LAST, (((((t0.c63))!=((t0.c63))))/(((t0.c63)>>(t0.c63)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c63)-(t0.c63)) IN ()) DESC, (t0.c63 IN ())  NULLS LAST, (((((t0.c63))<>((t0.c63))))/(((t0.c63)>>(t0.c63)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c63 COLLATE NOCASE IN ())) ORDER BY ((CAST(vt0.c0 AS REAL))&(t0.c63));
SELECT SUM(count) FROM (SELECT (((t0.c63 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c0 AS REAL))&(t0.c63)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c63 COLLATE NOCASE IN ())) ORDER BY ((CAST(vt0.c0 AS REAL))&(t0.c63));
SELECT SUM(count) FROM (SELECT (((t0.c63 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c0 AS REAL))&(t0.c63)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((t0.c63 COLLATE NOCASE IN ())) ORDER BY ((CAST(vt0.c0 AS REAL))&(t0.c63));
SELECT COUNT(*) FROM vt0, t0 WHERE ((('-1332252676')LIKE(((t0.c63)<>(vt0.c0))))) ORDER BY ((((NULL)<<(t0.c63))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((('-1332252676')LIKE(((t0.c63)<>(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((NULL)<<(t0.c63))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((('-1332252676')LIKE(((t0.c63)<>(vt0.c0))))) ORDER BY ((((NULL)<<(t0.c63))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((('-1332252676')LIKE(((t0.c63)<>(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((NULL)<<(t0.c63))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((('-1332252676')LIKE(((t0.c63)<>(vt0.c0))))) ORDER BY ((((NULL)<<(t0.c63))) IS TRUE) ASC;
SELECT * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)) ORDER BY CASE WHEN NULLIF(NULL, -1.657832979E9) THEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN (t0.c63 IN ()) WHEN CAST('1944852373' AS INTEGER) THEN ('469314935' IN (t0.c63, t0.c63)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN '	K' WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)) THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (x'')) ELSE t0.c63 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN NULLIF(NULL, -1.657832979E9) THEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN (t0.c63 IN ()) WHEN CAST('1944852373' AS INTEGER) THEN ('469314935' IN (t0.c63, t0.c63)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN '	K' WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)) THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (x'')) ELSE t0.c63 END ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)) ORDER BY CASE WHEN NULLIF(NULL, -1.657832979E9) THEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN (t0.c63 IN ()) WHEN CAST('1944852373' AS INTEGER) THEN ('469314935' IN (t0.c63, t0.c63)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN '	K' WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)) THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (x'')) ELSE t0.c63 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN NULLIF(NULL, -1.657832979E9) THEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN (t0.c63 IN ()) WHEN CAST('1944852373' AS INTEGER) THEN ('469314935' IN (t0.c63, t0.c63)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN '	K' WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)) THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (x'')) ELSE t0.c63 END ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)) ORDER BY CASE WHEN NULLIF(NULL, -1.657832979E9) THEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN (t0.c63 IN ()) WHEN CAST('1944852373' AS INTEGER) THEN ('469314935' IN (t0.c63, t0.c63)) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN '	K' WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)) THEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (x'')) ELSE t0.c63 END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) ORDER BY ((((0xffffffffb4f4acf8)<>(vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((0xffffffffb4f4acf8)!=(vt0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) ORDER BY ((((0xffffffffb4f4acf8)<>(vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((0xffffffffb4f4acf8)!=(vt0.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) ORDER BY ((((0xffffffffb4f4acf8)<>(vt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM t0, vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c63, 0.3274728194327454, t0.c63)) NOT BETWEEN ((t0.c63, 0.2871810764043189, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) IS FALSE)) ORDER BY ((t0.c63) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c63, 0.3274728194327454, t0.c63)) NOT BETWEEN ((t0.c63, 0.2871810764043189, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) IS FALSE)) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((t0.c63) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c63, 0.3274728194327454, t0.c63)) NOT BETWEEN ((t0.c63, 0.2871810764043189, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) IS FALSE)) ORDER BY ((t0.c63) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c63, 0.3274728194327454, t0.c63)) NOT BETWEEN ((t0.c63, 0.2871810764043189, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) IS FALSE)) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((t0.c63) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c63, 0.3274728194327454, t0.c63)) NOT BETWEEN ((t0.c63, 0.2871810764043189, t0.c63)) AND ((t0.c63, t0.c63, t0.c63)))) IS FALSE)) ORDER BY ((t0.c63) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY x''  NULLS FIRST, ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, ((t0.c63 COLLATE NOCASE)&(((((t0.c63)AND(t0.c63)))AND(''))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST, ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, ((t0.c63 COLLATE NOCASE)&(((((t0.c63)AND(t0.c63)))AND('')))));
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY x''  NULLS FIRST, ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, ((t0.c63 COLLATE NOCASE)&(((((t0.c63)AND(t0.c63)))AND(''))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST, ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, ((t0.c63 COLLATE NOCASE)&(((((t0.c63)AND(t0.c63)))AND('')))));
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY x''  NULLS FIRST, ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, ((t0.c63 COLLATE NOCASE)&(((((t0.c63)AND(t0.c63)))AND(''))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT vt0.c0) COLLATE NOCASE) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT vt0.c0) COLLATE NOCASE) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT vt0.c0) COLLATE NOCASE) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('259992630') ORDER BY (((((vt0.c0)/(0xffffffffdb84a7f7))))<(((((0.9837847786752543))<((vt0.c0)))))) ASC, ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('259992630') IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/(0Xffffffffdb84a7f7))))<(((((0.9837847786752543))<((vt0.c0)))))) ASC, ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('259992630') ORDER BY (((((vt0.c0)/(0xffffffffdb84a7f7))))<(((((0.9837847786752543))<((vt0.c0)))))) ASC, ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('259992630') IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/(0Xffffffffdb84a7f7))))<(((((0.9837847786752543))<((vt0.c0)))))) ASC, ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('259992630') ORDER BY (((((vt0.c0)/(0xffffffffdb84a7f7))))<(((((0.9837847786752543))<((vt0.c0)))))) ASC, ((vt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c63)) IN ()));
SELECT * FROM t0 WHERE (CAST(HEX(t0.c63) AS BLOB)) ORDER BY ((((~ (t0.c63))))==((CASE t0.c63  WHEN '-1657832979' THEN t0.c63 ELSE t0.c63 END)));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(t0.c63) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((~ (t0.c63))))=((CASE t0.c63  WHEN '-1657832979' THEN t0.c63 ELSE t0.c63 END))));
SELECT * FROM t0 WHERE (CAST(HEX(t0.c63) AS BLOB)) ORDER BY ((((~ (t0.c63))))==((CASE t0.c63  WHEN '-1657832979' THEN t0.c63 ELSE t0.c63 END)));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(t0.c63) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((~ (t0.c63))))=((CASE t0.c63  WHEN '-1657832979' THEN t0.c63 ELSE t0.c63 END))));
SELECT * FROM t0 WHERE (CAST(HEX(t0.c63) AS BLOB)) ORDER BY ((((~ (t0.c63))))==((CASE t0.c63  WHEN '-1657832979' THEN t0.c63 ELSE t0.c63 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)==(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)=(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)==(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)=(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0)==(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c63) ISNULL))GLOB((t0.c63 IN ('-223483906', vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63) ISNULL))GLOB((t0.c63 IN ('-223483906', vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c63) ISNULL))GLOB((t0.c63 IN ('-223483906', vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63) ISNULL))GLOB((t0.c63 IN ('-223483906', vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c63) ISNULL))GLOB((t0.c63 IN ('-223483906', vt0.c0)))));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c63 IN ())))<>(((vt0.c0 IN (vt0.c0, t0.c63))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63 IN ())))<>(((vt0.c0 IN (vt0.c0, t0.c63)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c63 IN ())))<>(((vt0.c0 IN (vt0.c0, t0.c63))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63 IN ())))<>(((vt0.c0 IN (vt0.c0, t0.c63)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c63 IN ())))<>(((vt0.c0 IN (vt0.c0, t0.c63))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63) ORDER BY ((((((t0.c63)OR(t0.c63)))OR(vt0.c0)))IS(t0.c63)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c63)OR(t0.c63)))OR(vt0.c0)))IS(t0.c63)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63) ORDER BY ((((((t0.c63)OR(t0.c63)))OR(vt0.c0)))IS(t0.c63)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c63)OR(t0.c63)))OR(vt0.c0)))IS(t0.c63)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63) ORDER BY ((((((t0.c63)OR(t0.c63)))OR(vt0.c0)))IS(t0.c63)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i86 NATURAL JOIN t0 WHERE (TRIM(t0.c63, 0.6297927978636083) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c63, 0.6297927978636083) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INDEXED BY i86 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i86 NATURAL JOIN t0 WHERE (TRIM(t0.c63, 0.6297927978636083) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c63, 0.6297927978636083) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INDEXED BY i86 NATURAL JOIN t0);
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT ALL * FROM vt0, t0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((((vt0.c0))<=((vt0.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE ((NULL) IS TRUE)  WHEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) THEN ((((((((x'84659fe7')AND(vt0.c0)))AND('')))AND(t0.c63)))AND(vt0.c0)) ELSE CAST(t0.c63 AS NUMERIC) END WHERE (CASE WHEN (NOT (vt0.c0)) THEN INSTR(vt0.c0, vt0.c0) ELSE (((vt0.c0, vt0.c0, t0.c63))!=((t0.c63, vt0.c0, 0.6040587161367194))) END) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN INSTR(vt0.c0, vt0.c0) ELSE (((vt0.c0, vt0.c0, t0.c63))!=((t0.c63, vt0.c0, 0.6040587161367194))) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE ((NULL) IS TRUE)  WHEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) THEN ((((((((x'84659fe7')AND(vt0.c0)))AND('')))AND(t0.c63)))AND(vt0.c0)) ELSE CAST(t0.c63 AS NUMERIC) END ORDER BY t0.c63);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE ((NULL) IS TRUE)  WHEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) THEN ((((((((x'84659fe7')AND(vt0.c0)))AND('')))AND(t0.c63)))AND(vt0.c0)) ELSE CAST(t0.c63 AS NUMERIC) END WHERE (CASE WHEN (NOT (vt0.c0)) THEN INSTR(vt0.c0, vt0.c0) ELSE (((vt0.c0, vt0.c0, t0.c63))!=((t0.c63, vt0.c0, 0.6040587161367194))) END) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN INSTR(vt0.c0, vt0.c0) ELSE (((vt0.c0, vt0.c0, t0.c63))!=((t0.c63, vt0.c0, 0.6040587161367194))) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE ((NULL) IS TRUE)  WHEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) THEN ((((((((x'84659fe7')AND(vt0.c0)))AND('')))AND(t0.c63)))AND(vt0.c0)) ELSE CAST(t0.c63 AS NUMERIC) END ORDER BY t0.c63);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE ((NULL) IS TRUE)  WHEN ((((t0.c63)AND(vt0.c0)))OR(t0.c63)) THEN ((((((((x'84659fe7')AND(vt0.c0)))AND('')))AND(t0.c63)))AND(vt0.c0)) ELSE CAST(t0.c63 AS NUMERIC) END WHERE (CASE WHEN (NOT (vt0.c0)) THEN INSTR(vt0.c0, vt0.c0) ELSE (((vt0.c0, vt0.c0, t0.c63))!=((t0.c63, vt0.c0, 0.6040587161367194))) END) ORDER BY t0.c63;
SELECT ALL * FROM t0 WHERE ((t0.c63 IN ())) ORDER BY ((json_object(t0.c63, t0.c63)) BETWEEN (((NULL)>>(t0.c63))) AND ((((t0.c63))<((t0.c63)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 IN ())) IS TRUE)  as count FROM t0 ORDER BY ((json_object(t0.c63, t0.c63)) BETWEEN (((NULL)>>(t0.c63))) AND ((((t0.c63))<((t0.c63)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((t0.c63 IN ())) ORDER BY ((json_object(t0.c63, t0.c63)) BETWEEN (((NULL)>>(t0.c63))) AND ((((t0.c63))<((t0.c63)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c63 IN ())) IS TRUE)  as count FROM t0 ORDER BY ((json_object(t0.c63, t0.c63)) BETWEEN (((NULL)>>(t0.c63))) AND ((((t0.c63))<((t0.c63)))))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0)))>=(x''))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(t0.c63)))AND(GLOB(vt0.c0, t0.c63)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))>=(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(t0.c63)))AND(GLOB(vt0.c0, t0.c63)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0)))>=(x''))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(t0.c63)))AND(GLOB(vt0.c0, t0.c63)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))>=(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(t0.c63)))AND(GLOB(vt0.c0, t0.c63)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0)))>=(x''))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(t0.c63)))AND(GLOB(vt0.c0, t0.c63)))  NULLS FIRST;
SELECT * FROM t0 WHERE (((UPPER(t0.c63)) IS TRUE)) ORDER BY (((t0.c63)AND(t0.c63)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c63)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63)AND(t0.c63)) IN ()));
SELECT * FROM t0 WHERE (((UPPER(t0.c63)) IS TRUE)) ORDER BY (((t0.c63)AND(t0.c63)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c63)) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63)AND(t0.c63)) IN ()));
SELECT * FROM t0 WHERE (((UPPER(t0.c63)) IS TRUE)) ORDER BY (((t0.c63)AND(t0.c63)) IN ());
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON TYPEOF((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))) WHERE (((((t0.c63)AND((('-1631037500') IS FALSE))))AND(((vt0.c0)|(vt0.c0))))) ORDER BY (((((t0.c63, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((0.10021706193077773, vt0.c0, vt0.c0))))*(((t0.c63) IS TRUE))), '1073444192' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63)AND((('-1631037500') IS FALSE))))AND(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON TYPEOF((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))) ORDER BY (((((t0.c63, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((0.10021706193077773, vt0.c0, vt0.c0))))*(((t0.c63) IS TRUE))), '1073444192' ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON TYPEOF((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))) WHERE (((((t0.c63)AND((('-1631037500') IS FALSE))))AND(((vt0.c0)|(vt0.c0))))) ORDER BY (((((t0.c63, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((0.10021706193077773, vt0.c0, vt0.c0))))*(((t0.c63) IS TRUE))), '1073444192' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63)AND((('-1631037500') IS FALSE))))AND(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON TYPEOF((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))) ORDER BY (((((t0.c63, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((0.10021706193077773, vt0.c0, vt0.c0))))*(((t0.c63) IS TRUE))), '1073444192' ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON TYPEOF((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63)))) WHERE (((((t0.c63)AND((('-1631037500') IS FALSE))))AND(((vt0.c0)|(vt0.c0))))) ORDER BY (((((t0.c63, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, vt0.c0)) AND ((0.10021706193077773, vt0.c0, vt0.c0))))*(((t0.c63) IS TRUE))), '1073444192' ASC;
SELECT COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c63))  WHEN ((('r ')) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) THEN t0.c63 ELSE (+ (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c63))  WHEN ((('r ')) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) THEN t0.c63 ELSE (+ (t0.c63)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c63))  WHEN ((('r ')) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) THEN t0.c63 ELSE (+ (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c63))  WHEN ((('r ')) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) THEN t0.c63 ELSE (+ (t0.c63)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c63))  WHEN ((('r ')) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) THEN t0.c63 ELSE (+ (t0.c63)) END);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, ((vt0.c0)AND(vt0.c0)))) ORDER BY 1391843471 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0, ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 1391843471 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, ((vt0.c0)AND(vt0.c0)))) ORDER BY 1391843471 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c0, ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 1391843471 ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE((+ (t0.c63))))) ORDER BY LIKELY(((t0.c63) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE((+ (t0.c63))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELY(((t0.c63) ISNULL))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE((+ (t0.c63))))) ORDER BY LIKELY(((t0.c63) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE((+ (t0.c63))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELY(((t0.c63) ISNULL))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE((+ (t0.c63))))) ORDER BY LIKELY(((t0.c63) ISNULL))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (MIN((NOT (vt0.c0)), IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((MIN((NOT (vt0.c0)), IFNULL(vt0.c0, vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (MIN((NOT (vt0.c0)), IFNULL(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((MIN((NOT (vt0.c0)), IFNULL(vt0.c0, vt0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (MIN((NOT (vt0.c0)), IFNULL(vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c63 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c63 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c63 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c63 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c63 AS BLOB) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)!=(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE NOCASE END);
SELECT * FROM t0, vt0 WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63 COLLATE BINARY)) AND (((NOT (t0.c63)))))) ORDER BY CAST(-1.6310375E9 AS REAL)  NULLS LAST, (- (((t0.c63) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) NOT BETWEEN ((t0.c63 COLLATE BINARY)) AND (((NOT (t0.c63)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(-1.6310375E9 AS REAL)  NULLS LAST, (- (((t0.c63) ISNULL))) ASC);
SELECT * FROM t0, vt0 WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63 COLLATE BINARY)) AND (((NOT (t0.c63)))))) ORDER BY CAST(-1.6310375E9 AS REAL)  NULLS LAST, (- (((t0.c63) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) NOT BETWEEN ((t0.c63 COLLATE BINARY)) AND (((NOT (t0.c63)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(-1.6310375E9 AS REAL)  NULLS LAST, (- (((t0.c63) ISNULL))) ASC);
SELECT * FROM t0, vt0 WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63 COLLATE BINARY)) AND (((NOT (t0.c63)))))) ORDER BY CAST(-1.6310375E9 AS REAL)  NULLS LAST, (- (((t0.c63) ISNULL))) ASC;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((((TYPEOF(vt0.c0))OR(CASE WHEN 0X3dc0188c THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((t0.c63) NOTNULL))))OR(((vt0.c0)IS NOT(t0.c63)))))OR(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TYPEOF(vt0.c0))OR(CASE WHEN 0X3dc0188c THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((t0.c63) NOTNULL))))OR(((vt0.c0)IS NOT(t0.c63)))))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((((TYPEOF(vt0.c0))OR(CASE WHEN 0X3dc0188c THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((t0.c63) NOTNULL))))OR(((vt0.c0)IS NOT(t0.c63)))))OR(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TYPEOF(vt0.c0))OR(CASE WHEN 0X3dc0188c THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((t0.c63) NOTNULL))))OR(((vt0.c0)IS NOT(t0.c63)))))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((((TYPEOF(vt0.c0))OR(CASE WHEN 0X3dc0188c THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((t0.c63) NOTNULL))))OR(((vt0.c0)IS NOT(t0.c63)))))OR(LAST_INSERT_ROWID())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.638489286291803) AND (vt0.c0))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.638489286291803) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.638489286291803) AND (vt0.c0))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.638489286291803) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.638489286291803) AND (vt0.c0))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN CAST(t0.c63 AS TEXT) THEN ((t0.c63)<=(vt0.c0)) END);
SELECT * FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c63);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (NULLIF(t0.c63 COLLATE RTRIM, NULLIF(x'9475', t0.c63))) ORDER BY (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((t0.c63, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c63, t0.c63, vt0.c0))))) ASC  NULLS LAST, t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c63 COLLATE RTRIM, NULLIF(x'9475', t0.c63))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((t0.c63, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c63, t0.c63, vt0.c0))))) ASC  NULLS LAST, t0.c63 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (NULLIF(t0.c63 COLLATE RTRIM, NULLIF(x'9475', t0.c63))) ORDER BY (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((t0.c63, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c63, t0.c63, vt0.c0))))) ASC  NULLS LAST, t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c63 COLLATE RTRIM, NULLIF(x'9475', t0.c63))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((t0.c63, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c63, t0.c63, vt0.c0))))) ASC  NULLS LAST, t0.c63 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED WHERE (NULLIF(t0.c63 COLLATE RTRIM, NULLIF(x'9475', t0.c63))) ORDER BY (((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((t0.c63, t0.c63, t0.c63)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c63, t0.c63, vt0.c0))))) ASC  NULLS LAST, t0.c63 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0) ISNULL), (+ (vt0.c0)), LOWER(vt0.c0), CASE WHEN vt0.c0 THEN 758605779 END, (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND ('k3BM')), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)*(vt0.c0)), (vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0) ISNULL), (+ (vt0.c0)), LOWER(vt0.c0), CASE WHEN vt0.c0 THEN 758605779 END, (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND ('k3BM')), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)*(vt0.c0)), (vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0) ISNULL), (+ (vt0.c0)), LOWER(vt0.c0), CASE WHEN vt0.c0 THEN 758605779 END, (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND ('k3BM')), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)*(vt0.c0)), (vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0) ISNULL), (+ (vt0.c0)), LOWER(vt0.c0), CASE WHEN vt0.c0 THEN 758605779 END, (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND ('k3BM')), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)*(vt0.c0)), (vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')) NOT BETWEEN ((((vt0.c0) ISNULL), (+ (vt0.c0)), LOWER(vt0.c0), CASE WHEN vt0.c0 THEN 758605779 END, (- (vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND ('k3BM')), ((vt0.c0)<<(vt0.c0)), ((vt0.c0)*(vt0.c0)), (vt0.c0 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((((t0.c63 IN ()))OR(GLOB(t0.c63, vt0.c0))))AND((((x'07a4')) BETWEEN ((vt0.c0)) AND ((t0.c63))))) WHERE ((NOT ((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63)))))) ORDER BY (((t0.c63)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END)) AND ((JULIANDAY(t0.c63, t0.c63, t0.c63)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((t0.c63 IN ()))OR(GLOB(t0.c63, vt0.c0))))AND((((x'07a4')) BETWEEN ((vt0.c0)) AND ((t0.c63))))) ORDER BY (((t0.c63)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END)) AND ((JULIANDAY(t0.c63, t0.c63, t0.c63)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((((t0.c63 IN ()))OR(GLOB(t0.c63, vt0.c0))))AND((((x'07a4')) BETWEEN ((vt0.c0)) AND ((t0.c63))))) WHERE ((NOT ((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63)))))) ORDER BY (((t0.c63)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END)) AND ((JULIANDAY(t0.c63, t0.c63, t0.c63)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((((t0.c63 IN ()))OR(GLOB(t0.c63, vt0.c0))))AND((((x'07a4')) BETWEEN ((vt0.c0)) AND ((t0.c63))))) ORDER BY (((t0.c63)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END)) AND ((JULIANDAY(t0.c63, t0.c63, t0.c63)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON (((((t0.c63 IN ()))OR(GLOB(t0.c63, vt0.c0))))AND((((x'07a4')) BETWEEN ((vt0.c0)) AND ((t0.c63))))) WHERE ((NOT ((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63)))))) ORDER BY (((t0.c63)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END)) AND ((JULIANDAY(t0.c63, t0.c63, t0.c63)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0))LIKE(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c0))LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0))LIKE(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c0))LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0))LIKE(CAST(vt0.c0 AS BLOB))));
SELECT * FROM t0 WHERE ((~ ((~ (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((~ (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((~ (t0.c63)))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((0.8923699063145665)AND(((t0.c63) IS FALSE))))OR((vt0.c0 IN ()))) WHERE ((~ (((t0.c63)IS(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c63)IS(t0.c63))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((0.8923699063145665)AND(((t0.c63) IS FALSE))))OR((vt0.c0 IN ()))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((0.8923699063145665)AND(((t0.c63) IS FALSE))))OR((vt0.c0 IN ()))) WHERE ((~ (((t0.c63)IS(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c63)IS(t0.c63))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((0.8923699063145665)AND(((t0.c63) IS FALSE))))OR((vt0.c0 IN ()))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((((0.8923699063145665)AND(((t0.c63) IS FALSE))))OR((vt0.c0 IN ()))) WHERE ((~ (((t0.c63)IS(t0.c63)))));
SELECT COUNT(*) FROM t0 WHERE (CASE TRIM(t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN CAST(t0.c63 AS REAL) WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN CASE t0.c63  WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END WHEN (+ (t0.c63)) THEN 0.8661712376738238 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN CAST(t0.c63 AS REAL) WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN CASE t0.c63  WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END WHEN (+ (t0.c63)) THEN 0.8661712376738238 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE TRIM(t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN CAST(t0.c63 AS REAL) WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN CASE t0.c63  WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END WHEN (+ (t0.c63)) THEN 0.8661712376738238 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN CAST(t0.c63 AS REAL) WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN CASE t0.c63  WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END WHEN (+ (t0.c63)) THEN 0.8661712376738238 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE TRIM(t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN CAST(t0.c63 AS REAL) WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN CASE t0.c63  WHEN t0.c63 THEN NULL WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END WHEN (+ (t0.c63)) THEN 0.8661712376738238 END);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) NOT BETWEEN (((vt0.c0) BETWEEN ('0.5345852775224896') AND ('318045327'))) AND (UNICODE(vt0.c0))) WHERE (CAST(((t0.c63)&(t0.c63)) AS INTEGER)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c63 AS NUMERIC) ELSE CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)&(t0.c63)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) NOT BETWEEN (((vt0.c0) BETWEEN ('0.5345852775224896') AND ('318045327'))) AND (UNICODE(vt0.c0))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c63 AS NUMERIC) ELSE CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) NOT BETWEEN (((vt0.c0) BETWEEN ('0.5345852775224896') AND ('318045327'))) AND (UNICODE(vt0.c0))) WHERE (CAST(((t0.c63)&(t0.c63)) AS INTEGER)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c63 AS NUMERIC) ELSE CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)&(t0.c63)) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) NOT BETWEEN (((vt0.c0) BETWEEN ('0.5345852775224896') AND ('318045327'))) AND (UNICODE(vt0.c0))) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c63 AS NUMERIC) ELSE CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) NOT BETWEEN (((vt0.c0) BETWEEN ('0.5345852775224896') AND ('318045327'))) AND (UNICODE(vt0.c0))) WHERE (CAST(((t0.c63)&(t0.c63)) AS INTEGER)) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t0.c63 AS NUMERIC) ELSE CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c63)>=(t0.c63)))AND(t0.c63 COLLATE RTRIM)))OR(((NULL) NOT BETWEEN (t0.c63) AND (t0.c63)))))AND(((t0.c63)>=(t0.c63)))))OR(((t0.c63)/(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c63)>=(t0.c63)))AND(t0.c63 COLLATE RTRIM)))OR(((NULL) NOT BETWEEN (t0.c63) AND (t0.c63)))))AND(((t0.c63)>=(t0.c63)))))OR(((t0.c63)/(x''))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c63)>=(t0.c63)))AND(t0.c63 COLLATE RTRIM)))OR(((NULL) NOT BETWEEN (t0.c63) AND (t0.c63)))))AND(((t0.c63)>=(t0.c63)))))OR(((t0.c63)/(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c63)>=(t0.c63)))AND(t0.c63 COLLATE RTRIM)))OR(((NULL) NOT BETWEEN (t0.c63) AND (t0.c63)))))AND(((t0.c63)>=(t0.c63)))))OR(((t0.c63)/(x''))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c63)>=(t0.c63)))AND(t0.c63 COLLATE RTRIM)))OR(((NULL) NOT BETWEEN (t0.c63) AND (t0.c63)))))AND(((t0.c63)>=(t0.c63)))))OR(((t0.c63)/(x'')))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((COALESCE(DISTINCT x'', t0.c63)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT x'', t0.c63)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((COALESCE(DISTINCT x'', t0.c63)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT x'', t0.c63)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((COALESCE(DISTINCT x'', t0.c63)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((vt0.c0) IS FALSE))));
SELECT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (('%TKO')==(vt0.c0)), vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (('%TKO')==(vt0.c0)), vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (('%TKO')==(vt0.c0)), vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (('%TKO')==(vt0.c0)), vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (vt0.c0 COLLATE BINARY IN ()), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (('%TKO')==(vt0.c0)), vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c63, t0.c63, t0.c63, t0.c63, '318045327'))<=((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))))OR(CAST(t0.c63 AS NUMERIC))))OR(((t0.c63)=(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c63, t0.c63, t0.c63, t0.c63, '318045327'))<=((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))))OR(CAST(t0.c63 AS NUMERIC))))OR(((t0.c63)==(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c63, t0.c63, t0.c63, t0.c63, '318045327'))<=((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))))OR(CAST(t0.c63 AS NUMERIC))))OR(((t0.c63)=(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c63, t0.c63, t0.c63, t0.c63, '318045327'))<=((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))))OR(CAST(t0.c63 AS NUMERIC))))OR(((t0.c63)==(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c63, t0.c63, t0.c63, t0.c63, '318045327'))<=((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))))OR(CAST(t0.c63 AS NUMERIC))))OR(((t0.c63)=(t0.c63)))));
SELECT ALL * FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c0) AS REAL)) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, '-180731603' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt0.c0, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, '-180731603' DESC);
SELECT ALL * FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c0) AS REAL)) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, '-180731603' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt0.c0, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, '-180731603' DESC);
SELECT ALL * FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c0) AS REAL)) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM DESC  NULLS LAST, '-180731603' DESC;
SELECT ALL * FROM vt0, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((((((t0.c63)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN t0.c63 THEN CAST(t0.c63 AS REAL) WHEN (- (t0.c63)) THEN ((((t0.c63)AND(NULL)))AND(t0.c63)) END;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (vt0.c0 IN ())  WHEN ((((((((t0.c63)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN t0.c63 THEN CAST(t0.c63 AS REAL) WHEN (- (t0.c63)) THEN ((((t0.c63)AND(NULL)))AND(t0.c63)) END);
SELECT ALL * FROM vt0, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((((((t0.c63)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN t0.c63 THEN CAST(t0.c63 AS REAL) WHEN (- (t0.c63)) THEN ((((t0.c63)AND(NULL)))AND(t0.c63)) END;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (vt0.c0 IN ())  WHEN ((((((((t0.c63)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN t0.c63 THEN CAST(t0.c63 AS REAL) WHEN (- (t0.c63)) THEN ((((t0.c63)AND(NULL)))AND(t0.c63)) END);
SELECT ALL * FROM vt0, t0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c63 END))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((((((((t0.c63)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN t0.c63 THEN CAST(t0.c63 AS REAL) WHEN (- (t0.c63)) THEN ((((t0.c63)AND(NULL)))AND(t0.c63)) END;
SELECT * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE ((t0.c63)IS NOT(t0.c63))  WHEN ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 1.559621713E9 WHEN t0.c63 THEN t0.c63 END WHEN CAST(x'' AS REAL) THEN (t0.c63 IN (t0.c63)) WHEN ((0xffffffffb44510a2)>=(t0.c63)) THEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) END  NULLS LAST, ((((t0.c63) IS FALSE))<(((t0.c63)-(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c63)IS NOT(t0.c63))  WHEN ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 1.559621713E9 WHEN t0.c63 THEN t0.c63 END WHEN CAST(x'' AS REAL) THEN (t0.c63 IN (t0.c63)) WHEN ((0Xffffffffb44510a2)>=(t0.c63)) THEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) END  NULLS LAST, ((((t0.c63) IS FALSE))<(((t0.c63)-(t0.c63)))));
SELECT * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE ((t0.c63)IS NOT(t0.c63))  WHEN ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 1.559621713E9 WHEN t0.c63 THEN t0.c63 END WHEN CAST(x'' AS REAL) THEN (t0.c63 IN (t0.c63)) WHEN ((0xffffffffb44510a2)>=(t0.c63)) THEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) END  NULLS LAST, ((((t0.c63) IS FALSE))<(((t0.c63)-(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c63)IS NOT(t0.c63))  WHEN ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 1.559621713E9 WHEN t0.c63 THEN t0.c63 END WHEN CAST(x'' AS REAL) THEN (t0.c63 IN (t0.c63)) WHEN ((0Xffffffffb44510a2)>=(t0.c63)) THEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) END  NULLS LAST, ((((t0.c63) IS FALSE))<(((t0.c63)-(t0.c63)))));
SELECT * FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE ((t0.c63)IS NOT(t0.c63))  WHEN ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN 1.559621713E9 WHEN t0.c63 THEN t0.c63 END WHEN CAST(x'' AS REAL) THEN (t0.c63 IN (t0.c63)) WHEN ((0xffffffffb44510a2)>=(t0.c63)) THEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) END  NULLS LAST, ((((t0.c63) IS FALSE))<(((t0.c63)-(t0.c63))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) ISNULL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) ISNULL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) ISNULL) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS TEXT));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM t0, vt0 WHERE (((json_array(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)<<(t0.c63))) AND (CAST(t0.c63 AS INTEGER)))) ORDER BY ((((NULL COLLATE RTRIM)OR(vt0.c0)))OR(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)<<(t0.c63))) AND (CAST(t0.c63 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((NULL COLLATE RTRIM)OR(vt0.c0)))OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM t0, vt0 WHERE (((json_array(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)<<(t0.c63))) AND (CAST(t0.c63 AS INTEGER)))) ORDER BY ((((NULL COLLATE RTRIM)OR(vt0.c0)))OR(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)<<(t0.c63))) AND (CAST(t0.c63 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((NULL COLLATE RTRIM)OR(vt0.c0)))OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM t0, vt0 WHERE (((json_array(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)<<(t0.c63))) AND (CAST(t0.c63 AS INTEGER)))) ORDER BY ((((NULL COLLATE RTRIM)OR(vt0.c0)))OR(((vt0.c0) ISNULL)));
SELECT COUNT(*) FROM vt0 WHERE (1) ORDER BY '(w'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1) IS TRUE)  as count FROM vt0 ORDER BY '(w'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (1) ORDER BY '(w'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1) IS TRUE)  as count FROM vt0 ORDER BY '(w'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (1) ORDER BY '(w'  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c63) AND (0.6316749210546827))) NOT BETWEEN (CAST(t0.c63 AS REAL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t0.c63) AND (0.6316749210546827))) NOT BETWEEN (CAST(t0.c63 AS REAL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c63) AND (0.6316749210546827))) NOT BETWEEN (CAST(t0.c63 AS REAL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t0.c63) AND (0.6316749210546827))) NOT BETWEEN (CAST(t0.c63 AS REAL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (t0.c63) AND (0.6316749210546827))) NOT BETWEEN (CAST(t0.c63 AS REAL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, 1634121490)) AND ((t0.c63, t0.c63, t0.c63))))>(RTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, 1634121490)) AND ((t0.c63, t0.c63, t0.c63))))>(RTRIM(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, 1634121490)) AND ((t0.c63, t0.c63, t0.c63))))>(RTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, 1634121490)) AND ((t0.c63, t0.c63, t0.c63))))>(RTRIM(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0, t0.c63, vt0.c0)) BETWEEN ((vt0.c0, t0.c63, 1634121490)) AND ((t0.c63, t0.c63, t0.c63))))>(RTRIM(vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)), 0.23868833907610287));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)), 0.23868833907610287)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)), 0.23868833907610287));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)), 0.23868833907610287)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)), 0.23868833907610287));
SELECT * FROM t0 WHERE ((+ ((~ (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ((~ (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ((~ (t0.c63)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))|(t0.c63)) WHERE (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c63)))) ORDER BY CAST(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c63)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))|(t0.c63)) ORDER BY CAST(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))|(t0.c63)) WHERE (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c63)))) ORDER BY CAST(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c63)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))|(t0.c63)) ORDER BY CAST(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS INTEGER))|(t0.c63)) WHERE (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (HEX(t0.c63)))) ORDER BY CAST(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR('152824325' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR('152824325' COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR('152824325' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR('152824325' COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))OR('152824325' COLLATE NOCASE)) ASC;
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 WHEN 'ZC' THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 WHEN 'ZC' THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 WHEN 'ZC' THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 WHEN 'ZC' THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN t0.c63 WHEN 'ZC' THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c63 IN ()))OR((t0.c63 IN (t0.c63)))))OR((((t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, t0.c63)))))) ORDER BY CAST(TYPEOF(t0.c63) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63 IN ()))OR((t0.c63 IN (t0.c63)))))OR((((t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, t0.c63)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(TYPEOF(t0.c63) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c63 IN ()))OR((t0.c63 IN (t0.c63)))))OR((((t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, t0.c63)))))) ORDER BY CAST(TYPEOF(t0.c63) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63 IN ()))OR((t0.c63 IN (t0.c63)))))OR((((t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, t0.c63)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(TYPEOF(t0.c63) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c63 IN ()))OR((t0.c63 IN (t0.c63)))))OR((((t0.c63, t0.c63, t0.c63))<((t0.c63, t0.c63, t0.c63)))))) ORDER BY CAST(TYPEOF(t0.c63) AS TEXT) DESC;
SELECT * FROM t0 WHERE ((((t0.c63)=(t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63)==(t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)=(t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63)==(t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)=(t0.c63)) IN ()));
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)>>(t0.c63)))OR((~ (vt0.c0)))))OR(((vt0.c0) NOT NULL)))) ORDER BY (NOT ((NULL IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>>(t0.c63)))OR((~ (vt0.c0)))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((NULL IN ())))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)>>(t0.c63)))OR((~ (vt0.c0)))))OR(((vt0.c0) NOT NULL)))) ORDER BY (NOT ((NULL IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>>(t0.c63)))OR((~ (vt0.c0)))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((NULL IN ())))  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)>>(t0.c63)))OR((~ (vt0.c0)))))OR(((vt0.c0) NOT NULL)))) ORDER BY (NOT ((NULL IN ())))  NULLS LAST;
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0)&(t0.c63)) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)&(t0.c63)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0)&(t0.c63)) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)&(t0.c63)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((vt0.c0)&(t0.c63)) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((((t0.c63, vt0.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c63, t0.c63)) AND ((NULL, t0.c63, t0.c63))) IN ()) DESC, (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((t0.c63) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63, vt0.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c63, t0.c63)) AND ((NULL, t0.c63, t0.c63))) IN ()) DESC, (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((t0.c63) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((((t0.c63, vt0.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c63, t0.c63)) AND ((NULL, t0.c63, t0.c63))) IN ()) DESC, (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((t0.c63) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63, vt0.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c63, t0.c63)) AND ((NULL, t0.c63, t0.c63))) IN ()) DESC, (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((t0.c63) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((((t0.c63, vt0.c0, t0.c63)) BETWEEN ((vt0.c0, t0.c63, t0.c63)) AND ((NULL, t0.c63, t0.c63))) IN ()) DESC, (((((vt0.c0 IN ()))OR(vt0.c0)))OR(((t0.c63) NOTNULL))) DESC;
SELECT * FROM t0 INDEXED BY i89, vt0 WHERE (COALESCE(DISTINCT CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((((((((vt0.c0) IS TRUE))OR((vt0.c0 IN ()))))OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(vt0.c0)))OR(((NULL) NOT NULL))) ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i89, vt0 ORDER BY ((((((((((vt0.c0) IS TRUE))OR((vt0.c0 IN ()))))OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(vt0.c0)))OR(((NULL) NOT NULL))) ASC  NULLS LAST, NULL  NULLS LAST);
SELECT * FROM t0 INDEXED BY i89, vt0 WHERE (COALESCE(DISTINCT CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((((((((((vt0.c0) IS TRUE))OR((vt0.c0 IN ()))))OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(vt0.c0)))OR(((NULL) NOT NULL))) ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i89, vt0 ORDER BY ((((((((((vt0.c0) IS TRUE))OR((vt0.c0 IN ()))))OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(vt0.c0)))OR(((NULL) NOT NULL))) ASC  NULLS LAST, NULL  NULLS LAST);
SELECT * FROM t0 WHERE ((((((((((+ (t0.c63)))OR((NOT (t0.c63)))))OR((- (t0.c63)))))AND((NOT (t0.c63)))))OR(((t0.c63)=('584038326')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t0.c63)))OR((NOT (t0.c63)))))OR((- (t0.c63)))))AND((NOT (t0.c63)))))OR(((t0.c63)==('584038326'))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((+ (t0.c63)))OR((NOT (t0.c63)))))OR((- (t0.c63)))))AND((NOT (t0.c63)))))OR(((t0.c63)=('584038326')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t0.c63)))OR((NOT (t0.c63)))))OR((- (t0.c63)))))AND((NOT (t0.c63)))))OR(((t0.c63)==('584038326'))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((+ (t0.c63)))OR((NOT (t0.c63)))))OR((- (t0.c63)))))AND((NOT (t0.c63)))))OR(((t0.c63)=('584038326')))));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CASE WHEN t0.c63 THEN t0.c63 END)OR(CAST(t0.c63 AS BLOB))))AND(t0.c63)))AND(((t0.c63)/(t0.c63)))))OR(((t0.c63)%(t0.c63))))) ORDER BY CASE ((t0.c63)<(t0.c63))  WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN LIKELY(DISTINCT t0.c63) ELSE (((t0.c63, -9.65530469E8, t0.c63))>((t0.c63, t0.c63, t0.c63))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c63 THEN t0.c63 END)OR(CAST(t0.c63 AS BLOB))))AND(t0.c63)))AND(((t0.c63)/(t0.c63)))))OR(((t0.c63)%(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c63)<(t0.c63))  WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN LIKELY(DISTINCT t0.c63) ELSE (((t0.c63, -9.65530469E8, t0.c63))>((t0.c63, t0.c63, t0.c63))) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CASE WHEN t0.c63 THEN t0.c63 END)OR(CAST(t0.c63 AS BLOB))))AND(t0.c63)))AND(((t0.c63)/(t0.c63)))))OR(((t0.c63)%(t0.c63))))) ORDER BY CASE ((t0.c63)<(t0.c63))  WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN LIKELY(DISTINCT t0.c63) ELSE (((t0.c63, -9.65530469E8, t0.c63))>((t0.c63, t0.c63, t0.c63))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c63 THEN t0.c63 END)OR(CAST(t0.c63 AS BLOB))))AND(t0.c63)))AND(((t0.c63)/(t0.c63)))))OR(((t0.c63)%(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c63)<(t0.c63))  WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN LIKELY(DISTINCT t0.c63) ELSE (((t0.c63, -9.65530469E8, t0.c63))>((t0.c63, t0.c63, t0.c63))) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((CASE WHEN t0.c63 THEN t0.c63 END)OR(CAST(t0.c63 AS BLOB))))AND(t0.c63)))AND(((t0.c63)/(t0.c63)))))OR(((t0.c63)%(t0.c63))))) ORDER BY CASE ((t0.c63)<(t0.c63))  WHEN ((((t0.c63)AND(t0.c63)))AND(t0.c63)) THEN LIKELY(DISTINCT t0.c63) ELSE (((t0.c63, -9.65530469E8, t0.c63))>((t0.c63, t0.c63, t0.c63))) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED WHERE (t0.c63);
SELECT * FROM t0 WHERE (((t0.c63) IS TRUE)) ORDER BY ((((((((((t0.c63)LIKE(t0.c63)))AND(t0.c63)))AND(CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))AND((t0.c63 IN (t0.c63, t0.c63, t0.c63, t0.c63)))))AND((t0.c63 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c63)LIKE(t0.c63)))AND(t0.c63)))AND(CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))AND((t0.c63 IN (t0.c63, t0.c63, t0.c63, t0.c63)))))AND((t0.c63 IN ())))  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c63) IS TRUE)) ORDER BY ((((((((((t0.c63)LIKE(t0.c63)))AND(t0.c63)))AND(CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))AND((t0.c63 IN (t0.c63, t0.c63, t0.c63, t0.c63)))))AND((t0.c63 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c63)LIKE(t0.c63)))AND(t0.c63)))AND(CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END)))AND((t0.c63 IN (t0.c63, t0.c63, t0.c63, t0.c63)))))AND((t0.c63 IN ())))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((t0.c63)*(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c63)*(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c63)*(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c63)*(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c63)*(vt0.c0)) COLLATE BINARY);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c63 WHERE (vt0.c0) ORDER BY (((~ (t0.c63))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c63 ORDER BY (((~ (t0.c63))) NOTNULL));
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c63 WHERE (vt0.c0) ORDER BY (((~ (t0.c63))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c63 ORDER BY (((~ (t0.c63))) NOTNULL));
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c63 WHERE (vt0.c0) ORDER BY (((~ (t0.c63))) NOTNULL);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)|(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(((((((((((((vt0.c0)OR('-545923320')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))))AND(NULL)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND((((vt0.c0))=((vt0.c0))))))OR(((vt0.c0)=(vt0.c0))))  NULLS LAST, ((0Xffffffff96486887)IS NOT(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)|(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(((((((((((((vt0.c0)OR('-545923320')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))))AND(NULL)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND((((vt0.c0))=((vt0.c0))))))OR(((vt0.c0)==(vt0.c0))))  NULLS LAST, ((0xffffffff96486887)IS NOT(vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)|(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(((((((((((((vt0.c0)OR('-545923320')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))))AND(NULL)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND((((vt0.c0))=((vt0.c0))))))OR(((vt0.c0)=(vt0.c0))))  NULLS LAST, ((0Xffffffff96486887)IS NOT(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)|(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(((((((((((((vt0.c0)OR('-545923320')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))))AND(NULL)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND((((vt0.c0))=((vt0.c0))))))OR(((vt0.c0)==(vt0.c0))))  NULLS LAST, ((0xffffffff96486887)IS NOT(vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)|(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)))AND(((((((((((((vt0.c0)OR('-545923320')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(x'')))))AND(NULL)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)AND((((vt0.c0))=((vt0.c0))))))OR(((vt0.c0)=(vt0.c0))))  NULLS LAST, ((0Xffffffff96486887)IS NOT(vt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)GLOB(((vt0.c0)-(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)GLOB(((vt0.c0)-(t0.c63))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)GLOB(((vt0.c0)-(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)GLOB(((vt0.c0)-(t0.c63))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)GLOB(((vt0.c0)-(t0.c63)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0)%((+ (t0.c63)))) WHERE ((((t0.c63)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('-2107916708')))))) ORDER BY t0.c63  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('-2107916708')))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((vt0.c0)%((+ (t0.c63)))) ORDER BY t0.c63  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0)%((+ (t0.c63)))) WHERE ((((t0.c63)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('-2107916708')))))) ORDER BY t0.c63  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('-2107916708')))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((vt0.c0)%((+ (t0.c63)))) ORDER BY t0.c63  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0)%((+ (t0.c63)))) WHERE ((((t0.c63)) BETWEEN ((CAST(t0.c63 AS BLOB))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('-2107916708')))))) ORDER BY t0.c63  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c63)IS(t0.c63)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (TYPEOF(t0.c63)) AND ((+ (x''))))  NULLS FIRST, ((t0.c63) BETWEEN (json_quote(vt0.c0)) AND (((((NULL)OR(NULL)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)IS(t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (TYPEOF(t0.c63)) AND ((+ (x''))))  NULLS FIRST, ((t0.c63) BETWEEN (json_quote(vt0.c0)) AND (((((NULL)OR(NULL)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c63)IS(t0.c63)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (TYPEOF(t0.c63)) AND ((+ (x''))))  NULLS FIRST, ((t0.c63) BETWEEN (json_quote(vt0.c0)) AND (((((NULL)OR(NULL)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)IS(t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (TYPEOF(t0.c63)) AND ((+ (x''))))  NULLS FIRST, ((t0.c63) BETWEEN (json_quote(vt0.c0)) AND (((((NULL)OR(NULL)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c63)IS(t0.c63)) COLLATE RTRIM) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (TYPEOF(t0.c63)) AND ((+ (x''))))  NULLS FIRST, ((t0.c63) BETWEEN (json_quote(vt0.c0)) AND (((((NULL)OR(NULL)))AND(vt0.c0)))) DESC;
SELECT * FROM vt0, t0 WHERE (((t0.c63)>>(LTRIM(vt0.c0)))) ORDER BY ((((((((((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)>>(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))) NOT NULL) DESC);
SELECT * FROM vt0, t0 WHERE (((t0.c63)>>(LTRIM(vt0.c0)))) ORDER BY ((((((((((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)>>(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))) NOT NULL) DESC);
SELECT * FROM vt0, t0 WHERE (((t0.c63)>>(LTRIM(vt0.c0)))) ORDER BY ((((((((((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))AND(vt0.c0)))AND(t0.c63)))OR(t0.c63)))OR(vt0.c0))) NOT NULL) DESC;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c63)<>(vt0.c0)), ((0.013738117663641858)IS(vt0.c0)), '1137924641')) AND (((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))), ((((t0.c63)AND(t0.c63)))AND(t0.c63)), (~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c63)!=(vt0.c0)), ((0.013738117663641858)IS(vt0.c0)), '1137924641')) AND (((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))), ((((t0.c63)AND(t0.c63)))AND(t0.c63)), (~ (vt0.c0)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c63)<>(vt0.c0)), ((0.013738117663641858)IS(vt0.c0)), '1137924641')) AND (((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))), ((((t0.c63)AND(t0.c63)))AND(t0.c63)), (~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c63)!=(vt0.c0)), ((0.013738117663641858)IS(vt0.c0)), '1137924641')) AND (((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))), ((((t0.c63)AND(t0.c63)))AND(t0.c63)), (~ (vt0.c0)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((t0.c63)<>(vt0.c0)), ((0.013738117663641858)IS(vt0.c0)), '1137924641')) AND (((((t0.c63)) BETWEEN ((vt0.c0)) AND ((t0.c63))), ((((t0.c63)AND(t0.c63)))AND(t0.c63)), (~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN x'1bb5' THEN t0.c63 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN x'1bb5' THEN t0.c63 END) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN x'1bb5' THEN t0.c63 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN x'1bb5' THEN t0.c63 END) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN x'1bb5' THEN t0.c63 END) NOTNULL));
SELECT ALL * FROM vt0 WHERE (CASE ''  WHEN 0.773789907149396 THEN CAST(vt0.c0 AS NUMERIC) ELSE (~ (vt0.c0)) END) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN 0.773789907149396 THEN CAST(vt0.c0 AS NUMERIC) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ''  WHEN 0.773789907149396 THEN CAST(vt0.c0 AS NUMERIC) ELSE (~ (vt0.c0)) END) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN 0.773789907149396 THEN CAST(vt0.c0 AS NUMERIC) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ''  WHEN 0.773789907149396 THEN CAST(vt0.c0 AS NUMERIC) ELSE (~ (vt0.c0)) END) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN t0 ON CAST('-597997601' AS NUMERIC) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST('-597997601' AS NUMERIC));
SELECT * FROM vt0 CROSS JOIN t0 ON CAST('-597997601' AS NUMERIC) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST('-597997601' AS NUMERIC));
SELECT * FROM vt0 CROSS JOIN t0 ON CAST('-597997601' AS NUMERIC) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffa739732d WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN CAST(vt0.c0 AS REAL) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0) IS FALSE) THEN LAST_INSERT_ROWID() END) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffa739732d WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN CAST(vt0.c0 AS REAL) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0) IS FALSE) THEN LAST_INSERT_ROWID() END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffa739732d WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN CAST(vt0.c0 AS REAL) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0) IS FALSE) THEN LAST_INSERT_ROWID() END) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffa739732d WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN CAST(vt0.c0 AS REAL) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0) IS FALSE) THEN LAST_INSERT_ROWID() END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0Xffffffffa739732d WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS REAL) WHEN CAST(vt0.c0 AS REAL) THEN TYPEOF(DISTINCT vt0.c0) WHEN ((vt0.c0) IS FALSE) THEN LAST_INSERT_ROWID() END) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)=(vt0.c0))) AND (((vt0.c0) ISNULL))) ASC;
SELECT ALL * FROM t0 WHERE (((UPPER(DISTINCT t0.c63))LIKE(CAST(t0.c63 AS BLOB)))) ORDER BY (~ (-1.067019272E9))  NULLS FIRST, ((((((t0.c63)OR(t0.c63)))OR(t0.c63))) BETWEEN (((t0.c63)%(t0.c63))) AND (((t0.c63) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT t0.c63))LIKE(CAST(t0.c63 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY (~ (-1.067019272E9))  NULLS FIRST, ((((((t0.c63)OR(t0.c63)))OR(t0.c63))) BETWEEN (((t0.c63)%(t0.c63))) AND (((t0.c63) IS FALSE))));
SELECT ALL * FROM t0 WHERE (((UPPER(DISTINCT t0.c63))LIKE(CAST(t0.c63 AS BLOB)))) ORDER BY (~ (-1.067019272E9))  NULLS FIRST, ((((((t0.c63)OR(t0.c63)))OR(t0.c63))) BETWEEN (((t0.c63)%(t0.c63))) AND (((t0.c63) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT t0.c63))LIKE(CAST(t0.c63 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY (~ (-1.067019272E9))  NULLS FIRST, ((((((t0.c63)OR(t0.c63)))OR(t0.c63))) BETWEEN (((t0.c63)%(t0.c63))) AND (((t0.c63) IS FALSE))));
SELECT ALL * FROM t0 WHERE (((UPPER(DISTINCT t0.c63))LIKE(CAST(t0.c63 AS BLOB)))) ORDER BY (~ (-1.067019272E9))  NULLS FIRST, ((((((t0.c63)OR(t0.c63)))OR(t0.c63))) BETWEEN (((t0.c63)%(t0.c63))) AND (((t0.c63) IS FALSE)));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (LTRIM(t0.c63) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(t0.c63) COLLATE RTRIM) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (LTRIM(t0.c63) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(t0.c63) COLLATE RTRIM) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (LTRIM(t0.c63) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))AND(((vt0.c0)-('tVDWl_')))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (~ ((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))AND(((vt0.c0)-('tVDWl_')))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ ((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))AND(((vt0.c0)-('tVDWl_')))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (~ ((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))AND(((vt0.c0)-('tVDWl_')))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ ((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))AND(((vt0.c0)-('tVDWl_')))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY (~ ((vt0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((vt0.c0 IN (t0.c63)) COLLATE BINARY) ORDER BY CAST(COALESCE(DISTINCT vt0.c0, '0.03320947442650435', vt0.c0, t0.c63) AS BLOB);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (t0.c63)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(COALESCE(DISTINCT vt0.c0, '0.03320947442650435', vt0.c0, t0.c63) AS BLOB));
SELECT COUNT(*) FROM t0, vt0 WHERE ((vt0.c0 IN (t0.c63)) COLLATE BINARY) ORDER BY CAST(COALESCE(DISTINCT vt0.c0, '0.03320947442650435', vt0.c0, t0.c63) AS BLOB);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (t0.c63)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(COALESCE(DISTINCT vt0.c0, '0.03320947442650435', vt0.c0, t0.c63) AS BLOB));
SELECT COUNT(*) FROM t0, vt0 WHERE ((vt0.c0 IN (t0.c63)) COLLATE BINARY) ORDER BY CAST(COALESCE(DISTINCT vt0.c0, '0.03320947442650435', vt0.c0, t0.c63) AS BLOB);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((CASE t0.c63  WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN '1559621713' THEN t0.c63 END)|(((t0.c63)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c63  WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN '1559621713' THEN t0.c63 END)|(((t0.c63)<(vt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((CASE t0.c63  WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN '1559621713' THEN t0.c63 END)|(((t0.c63)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c63  WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN '1559621713' THEN t0.c63 END)|(((t0.c63)<(vt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((CASE t0.c63  WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN '1559621713' THEN t0.c63 END)|(((t0.c63)<(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((CAST(t0.c63 AS BLOB))OR(t0.c63 COLLATE RTRIM)))OR(((vt0.c0)>=(t0.c63)))))OR(((t0.c63) ISNULL))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)>>(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c63 AS BLOB))OR(t0.c63 COLLATE RTRIM)))OR(((vt0.c0)>=(t0.c63)))))OR(((t0.c63) ISNULL))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)>>(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((CAST(t0.c63 AS BLOB))OR(t0.c63 COLLATE RTRIM)))OR(((vt0.c0)>=(t0.c63)))))OR(((t0.c63) ISNULL))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)>>(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c63 AS BLOB))OR(t0.c63 COLLATE RTRIM)))OR(((vt0.c0)>=(t0.c63)))))OR(((t0.c63) ISNULL))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)>>(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((CAST(t0.c63 AS BLOB))OR(t0.c63 COLLATE RTRIM)))OR(((vt0.c0)>=(t0.c63)))))OR(((t0.c63) ISNULL))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY ((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)>>(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63);
SELECT ALL * FROM t0, vt0 WHERE (((IFNULL(t0.c63, t0.c63)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c63, t0.c63)) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((IFNULL(t0.c63, t0.c63)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c63, t0.c63)) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((IFNULL(t0.c63, t0.c63)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0Xfffffffff85f2598);
SELECT SUM(count) FROM (SELECT ((0xfffffffff85f2598) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0Xfffffffff85f2598);
SELECT SUM(count) FROM (SELECT ((0xfffffffff85f2598) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0Xfffffffff85f2598);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c63 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c63 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63 IN ()) IN ()));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((((0.6041706181184742))>=((t0.c63))))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))) WHERE (((vt0.c0)OR(CAST(t0.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(CAST(t0.c63 AS REAL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((0.6041706181184742))>=((t0.c63))))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((((0.6041706181184742))>=((t0.c63))))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))) WHERE (((vt0.c0)OR(CAST(t0.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(CAST(t0.c63 AS REAL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((((0.6041706181184742))>=((t0.c63))))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((((0.6041706181184742))>=((t0.c63))))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))) WHERE (((vt0.c0)OR(CAST(t0.c63 AS REAL))));
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE NULL END END) ORDER BY t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE NULL END END) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY t0.c63 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE NULL END END) ORDER BY t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE NULL END END) IS TRUE)  as count FROM vt0 NOT INDEXED, t0 ORDER BY t0.c63 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE NULL END END) ORDER BY t0.c63 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((t0.c63))>((x'f7cc'))) AS INTEGER)) ORDER BY -687520083, (((CAST(t0.c63 AS NUMERIC)))>=((vt0.c0))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c63))>((x'f7cc'))) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY -687520083, (((CAST(t0.c63 AS NUMERIC)))>=((vt0.c0))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) IN ()) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST((((t0.c63))>((x'f7cc'))) AS INTEGER)) ORDER BY -687520083, (((CAST(t0.c63 AS NUMERIC)))>=((vt0.c0))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c63))>((x'f7cc'))) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY -687520083, (((CAST(t0.c63 AS NUMERIC)))>=((vt0.c0))) DESC  NULLS LAST, (((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER))&((('') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, RTRIM(0.028423184649302158) DESC  NULLS FIRST, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))&((('') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, RTRIM(0.028423184649302158) DESC  NULLS FIRST, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER))&((('') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, RTRIM(0.028423184649302158) DESC  NULLS FIRST, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))&((('') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, RTRIM(0.028423184649302158) DESC  NULLS FIRST, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS INTEGER))&((('') BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, RTRIM(0.028423184649302158) DESC  NULLS FIRST, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END END) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END END);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c63)LIKE(vt0.c0)) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((t0.c63, t0.c63, vt0.c0))=((t0.c63, t0.c63, vt0.c0))) END) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY ASC, ((+ (vt0.c0)) IN ()), ((((((vt0.c0)&(t0.c63)))OR(CASE WHEN t0.c63 THEN vt0.c0 END)))OR(CAST(t0.c63 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c63)LIKE(vt0.c0)) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((t0.c63, t0.c63, vt0.c0))==((t0.c63, t0.c63, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY ASC, ((+ (vt0.c0)) IN ()), ((((((vt0.c0)&(t0.c63)))OR(CASE WHEN t0.c63 THEN vt0.c0 END)))OR(CAST(t0.c63 AS BLOB))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c63)LIKE(vt0.c0)) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((t0.c63, t0.c63, vt0.c0))=((t0.c63, t0.c63, vt0.c0))) END) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY ASC, ((+ (vt0.c0)) IN ()), ((((((vt0.c0)&(t0.c63)))OR(CASE WHEN t0.c63 THEN vt0.c0 END)))OR(CAST(t0.c63 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c63)LIKE(vt0.c0)) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((t0.c63, t0.c63, vt0.c0))==((t0.c63, t0.c63, vt0.c0))) END) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY ASC, ((+ (vt0.c0)) IN ()), ((((((vt0.c0)&(t0.c63)))OR(CASE WHEN t0.c63 THEN vt0.c0 END)))OR(CAST(t0.c63 AS BLOB))) DESC);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((t0.c63)LIKE(vt0.c0)) THEN ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((t0.c63, t0.c63, vt0.c0))=((t0.c63, t0.c63, vt0.c0))) END) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY ASC, ((+ (vt0.c0)) IN ()), ((((((vt0.c0)&(t0.c63)))OR(CASE WHEN t0.c63 THEN vt0.c0 END)))OR(CAST(t0.c63 AS BLOB))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((t0.c63)AND(0.24001263773716786)))OR(1.738185461E9)) ELSE 0X684d9de8 END, (((CAST(t0.c63 AS INTEGER)))<=((t0.c63 COLLATE BINARY)))  NULLS LAST, ((((((t0.c63)<=(t0.c63)))OR((((t0.c63, t0.c63, t0.c63, t0.c63, '.uv~')) NOT BETWEEN ((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63, NULL, t0.c63))))))OR((((t0.c63))<>((t0.c63))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((t0.c63)AND(0.24001263773716786)))OR(1.738185461E9)) ELSE 0X684d9de8 END, (((CAST(t0.c63 AS INTEGER)))<=((t0.c63 COLLATE BINARY)))  NULLS LAST, ((((((t0.c63)<=(t0.c63)))OR((((t0.c63, t0.c63, t0.c63, t0.c63, '.uv~')) NOT BETWEEN ((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63, NULL, t0.c63))))))OR((((t0.c63))<>((t0.c63))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((t0.c63)AND(0.24001263773716786)))OR(1.738185461E9)) ELSE 0X684d9de8 END, (((CAST(t0.c63 AS INTEGER)))<=((t0.c63 COLLATE BINARY)))  NULLS LAST, ((((((t0.c63)<=(t0.c63)))OR((((t0.c63, t0.c63, t0.c63, t0.c63, '.uv~')) NOT BETWEEN ((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63, NULL, t0.c63))))))OR((((t0.c63))<>((t0.c63))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((t0.c63)AND(0.24001263773716786)))OR(1.738185461E9)) ELSE 0X684d9de8 END, (((CAST(t0.c63 AS INTEGER)))<=((t0.c63 COLLATE BINARY)))  NULLS LAST, ((((((t0.c63)<=(t0.c63)))OR((((t0.c63, t0.c63, t0.c63, t0.c63, '.uv~')) NOT BETWEEN ((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63, NULL, t0.c63))))))OR((((t0.c63))<>((t0.c63))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((t0.c63)AND(0.24001263773716786)))OR(1.738185461E9)) ELSE 0X684d9de8 END, (((CAST(t0.c63 AS INTEGER)))<=((t0.c63 COLLATE BINARY)))  NULLS LAST, ((((((t0.c63)<=(t0.c63)))OR((((t0.c63, t0.c63, t0.c63, t0.c63, '.uv~')) NOT BETWEEN ((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63, NULL, t0.c63))))))OR((((t0.c63))<>((t0.c63))))) DESC;
SELECT ALL * FROM vt0 INDEXED BY i86, t0 WHERE (((CAST(vt0.c0 AS NUMERIC))<((+ (t0.c63))))) ORDER BY -1023416475 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))<((+ (t0.c63))))) IS TRUE)  as count FROM vt0 INDEXED BY i86, t0 ORDER BY -1023416475 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INDEXED BY i86, t0 WHERE (((CAST(vt0.c0 AS NUMERIC))<((+ (t0.c63))))) ORDER BY -1023416475 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))<((+ (t0.c63))))) IS TRUE)  as count FROM vt0 INDEXED BY i86, t0 ORDER BY -1023416475 ASC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((CAST(0.3261436752525676 AS BLOB)) BETWEEN (((t0.c63)/(vt0.c0))) AND ((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.3261436752525676 AS BLOB)) BETWEEN (((t0.c63)/(vt0.c0))) AND ((t0.c63 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(0.3261436752525676 AS BLOB)) BETWEEN (((t0.c63)/(vt0.c0))) AND ((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.3261436752525676 AS BLOB)) BETWEEN (((t0.c63)/(vt0.c0))) AND ((t0.c63 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(0.3261436752525676 AS BLOB)) BETWEEN (((t0.c63)/(vt0.c0))) AND ((t0.c63 IN ()))));
SELECT ALL * FROM t0 WHERE (((x'2793' COLLATE BINARY)IS NOT(((t0.c63)<<(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((x'2793' COLLATE BINARY)IS NOT(((t0.c63)<<(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'2793' COLLATE BINARY)IS NOT(((t0.c63)<<(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((x'2793' COLLATE BINARY)IS NOT(((t0.c63)<<(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'2793' COLLATE BINARY)IS NOT(((t0.c63)<<(t0.c63)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM WHERE (((((vt0.c0) NOT NULL))||((('-1706247615') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))||((('-1706247615') ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM WHERE (((((vt0.c0) NOT NULL))||((('-1706247615') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))||((('-1706247615') ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN t0 ON UPPER(DISTINCT vt0.c0) COLLATE RTRIM WHERE (((((vt0.c0) NOT NULL))||((('-1706247615') ISNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('梇T3Q랶v9' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('梇T3Q랶v9' COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('梇T3Q랶v9' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('梇T3Q랶v9' COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('梇T3Q랶v9' COLLATE RTRIM);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((('') BETWEEN (CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND ((((t0.c63))<>((-589620596))))));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND ((((t0.c63))!=((-589620596)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((('') BETWEEN (CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND ((((t0.c63))<>((-589620596))))));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND ((((t0.c63))!=((-589620596)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE ((('') BETWEEN (CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND ((((t0.c63))<>((-589620596))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (TYPEOF(((vt0.c0)<<(vt0.c0)))) ORDER BY CAST((+ (t0.c63)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((+ (t0.c63)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (TYPEOF(((vt0.c0)<<(vt0.c0)))) ORDER BY CAST((+ (t0.c63)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((+ (t0.c63)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (TYPEOF(((vt0.c0)<<(vt0.c0)))) ORDER BY CAST((+ (t0.c63)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) ISNULL))GLOB(((vt0.c0)LIKE(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))GLOB(((vt0.c0)LIKE(t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) ISNULL))GLOB(((vt0.c0)LIKE(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))GLOB(((vt0.c0)LIKE(t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) ISNULL))GLOB(((vt0.c0)LIKE(t0.c63)))));
SELECT COUNT(*) FROM t0 INDEXED BY i86, vt0 WHERE (CAST(LIKELY(DISTINCT x'') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT x'') AS TEXT)) IS TRUE)  as count FROM t0 INDEXED BY i86, vt0);
SELECT COUNT(*) FROM t0 INDEXED BY i86, vt0 WHERE (CAST(LIKELY(DISTINCT x'') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT x'') AS TEXT)) IS TRUE)  as count FROM t0 INDEXED BY i86, vt0);
SELECT COUNT(*) FROM t0 INDEXED BY i86, vt0 WHERE (CAST(LIKELY(DISTINCT x'') AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (ABS(vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ('0.24001263773716786' IN (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (ABS(vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ('0.24001263773716786' IN (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (ABS(vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ('0.24001263773716786' IN (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (ABS(vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ('0.24001263773716786' IN (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (ABS(vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ('0.24001263773716786' IN (((vt0.c0)GLOB(vt0.c0)))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN ())));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (json_patch((((vt0.c0)) NOT BETWEEN ((0xffffffffbf832e00)) AND ((vt0.c0))), LIKELY(vt0.c0))) ORDER BY ((((vt0.c0)<<(t0.c63))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((json_patch((((vt0.c0)) NOT BETWEEN ((0Xffffffffbf832e00)) AND ((vt0.c0))), LIKELY(vt0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)<<(t0.c63))) NOT NULL) DESC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (json_patch((((vt0.c0)) NOT BETWEEN ((0xffffffffbf832e00)) AND ((vt0.c0))), LIKELY(vt0.c0))) ORDER BY ((((vt0.c0)<<(t0.c63))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((json_patch((((vt0.c0)) NOT BETWEEN ((0Xffffffffbf832e00)) AND ((vt0.c0))), LIKELY(vt0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)<<(t0.c63))) NOT NULL) DESC);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (json_patch((((vt0.c0)) NOT BETWEEN ((0xffffffffbf832e00)) AND ((vt0.c0))), LIKELY(vt0.c0))) ORDER BY ((((vt0.c0)<<(t0.c63))) NOT NULL) DESC;
SELECT * FROM t0 WHERE ((((((t0.c63, t0.c63, t0.c63))==((t0.c63, t0.c63, t0.c63)))) NOT NULL)) ORDER BY NULLIF(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, t0.c63 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, t0.c63, t0.c63))==((t0.c63, t0.c63, t0.c63)))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULLIF(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, t0.c63 COLLATE BINARY));
SELECT * FROM t0 WHERE ((((((t0.c63, t0.c63, t0.c63))==((t0.c63, t0.c63, t0.c63)))) NOT NULL)) ORDER BY NULLIF(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, t0.c63 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, t0.c63, t0.c63))==((t0.c63, t0.c63, t0.c63)))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY NULLIF(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, t0.c63 COLLATE BINARY));
SELECT * FROM t0 WHERE ((((((t0.c63, t0.c63, t0.c63))==((t0.c63, t0.c63, t0.c63)))) NOT NULL)) ORDER BY NULLIF(CASE t0.c63  WHEN t0.c63 THEN t0.c63 END, t0.c63 COLLATE BINARY);
SELECT * FROM t0 WHERE (((t0.c63) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c63) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c63) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))=((vt0.c0))) THEN x'' ELSE ((vt0.c0)|(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))==((vt0.c0))) THEN x'' ELSE ((vt0.c0)|(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))=((vt0.c0))) THEN x'' ELSE ((vt0.c0)|(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))==((vt0.c0))) THEN x'' ELSE ((vt0.c0)|(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0))=((vt0.c0))) THEN x'' ELSE ((vt0.c0)|(vt0.c0)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN '-1552544481' THEN t0.c63 END)%(CAST(vt0.c0 AS REAL)))) ORDER BY t0.c63 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN '-1552544481' THEN t0.c63 END)%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63 COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN '-1552544481' THEN t0.c63 END)%(CAST(vt0.c0 AS REAL)))) ORDER BY t0.c63 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN '-1552544481' THEN t0.c63 END)%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c63 COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN '-1552544481' THEN t0.c63 END)%(CAST(vt0.c0 AS REAL)))) ORDER BY t0.c63 COLLATE NOCASE ASC;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, 0.5597208949846328)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((NULL IN (vt0.c0, vt0.c0)))))AND(CAST(x'' AS INTEGER))))AND(((vt0.c0)=(vt0.c0)))))AND((+ (vt0.c0)))) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS BLOB))AND((~ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, 0.5597208949846328)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((NULL IN (vt0.c0, vt0.c0)))))AND(CAST(x'' AS INTEGER))))AND(((vt0.c0)=(vt0.c0)))))AND((+ (vt0.c0)))) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS BLOB))AND((~ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, 0.5597208949846328)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((NULL IN (vt0.c0, vt0.c0)))))AND(CAST(x'' AS INTEGER))))AND(((vt0.c0)=(vt0.c0)))))AND((+ (vt0.c0)))) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS BLOB))AND((~ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, 0.5597208949846328)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((NULL IN (vt0.c0, vt0.c0)))))AND(CAST(x'' AS INTEGER))))AND(((vt0.c0)=(vt0.c0)))))AND((+ (vt0.c0)))) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS BLOB))AND((~ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, vt0.c0, 0.5597208949846328)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((~ (vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((NULL IN (vt0.c0, vt0.c0)))))AND(CAST(x'' AS INTEGER))))AND(((vt0.c0)=(vt0.c0)))))AND((+ (vt0.c0)))) ASC  NULLS FIRST, ((((CAST(vt0.c0 AS BLOB))AND((~ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 INNER JOIN t0 ON (+ ((('-1030991613') IS TRUE))) WHERE ((~ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (+ ((('-1030991613') IS TRUE))));
SELECT * FROM vt0 INNER JOIN t0 ON (+ ((('-1030991613') IS TRUE))) WHERE ((~ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (+ ((('-1030991613') IS TRUE))));
SELECT * FROM vt0 INNER JOIN t0 ON (+ ((('-1030991613') IS TRUE))) WHERE ((~ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 END)));
SELECT COUNT(*) FROM t0 WHERE (CAST((- (t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c63)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((- (t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((- (t0.c63)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((- (t0.c63)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (((NOT (t0.c63)) IN (((x'')<<(t0.c63)), CAST(t0.c63 AS INTEGER)))) ORDER BY CASE '1738185461'  WHEN t0.c63 COLLATE BINARY THEN ((0.4735994475532629)|(t0.c63)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c63)) IN (((x'')<<(t0.c63)), CAST(t0.c63 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE '1738185461'  WHEN t0.c63 COLLATE BINARY THEN ((0.4735994475532629)|(t0.c63)) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((NOT (t0.c63)) IN (((x'')<<(t0.c63)), CAST(t0.c63 AS INTEGER)))) ORDER BY CASE '1738185461'  WHEN t0.c63 COLLATE BINARY THEN ((0.4735994475532629)|(t0.c63)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (t0.c63)) IN (((x'')<<(t0.c63)), CAST(t0.c63 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE '1738185461'  WHEN t0.c63 COLLATE BINARY THEN ((0.4735994475532629)|(t0.c63)) END  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((NOT (t0.c63)) IN (((x'')<<(t0.c63)), CAST(t0.c63 AS INTEGER)))) ORDER BY CASE '1738185461'  WHEN t0.c63 COLLATE BINARY THEN ((0.4735994475532629)|(t0.c63)) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT ((-1.27982184E8 IN (vt0.c0, t0.c63)))));
SELECT SUM(count) FROM (SELECT (((NOT ((-1.27982184E8 IN (vt0.c0, t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT ((-1.27982184E8 IN (vt0.c0, t0.c63)))));
SELECT SUM(count) FROM (SELECT (((NOT ((-1.27982184E8 IN (vt0.c0, t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT ((-1.27982184E8 IN (vt0.c0, t0.c63)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY CAST(x'4b15f0f5' AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(x'4b15f0f5' AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY CAST(x'4b15f0f5' AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(x'4b15f0f5' AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY CAST(x'4b15f0f5' AS REAL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT vt0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON t0.c63 WHERE (((vt0.c0)*((t0.c63 IN (vt0.c0))))) ORDER BY ((CAST(x'' AS REAL))+(t0.c63 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*((t0.c63 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c63 ORDER BY ((CAST(x'' AS REAL))+(t0.c63 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON t0.c63 WHERE (((vt0.c0)*((t0.c63 IN (vt0.c0))))) ORDER BY ((CAST(x'' AS REAL))+(t0.c63 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*((t0.c63 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c63 ORDER BY ((CAST(x'' AS REAL))+(t0.c63 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON t0.c63 WHERE (((vt0.c0)*((t0.c63 IN (vt0.c0))))) ORDER BY ((CAST(x'' AS REAL))+(t0.c63 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM t0 WHERE ((~ (((t0.c63)AND(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c63)AND(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (((t0.c63)AND(t0.c63)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c63)AND(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (((t0.c63)AND(t0.c63)))));
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST('TRUE' AS INTEGER)) ORDER BY ((((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST('TRUE' AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST('TRUE' AS INTEGER)) ORDER BY ((((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST('TRUE' AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST('TRUE' AS INTEGER)) ORDER BY ((((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0))) NOTNULL);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END THEN (t0.c63 IN ()) ELSE ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END THEN (t0.c63 IN ()) ELSE ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END THEN (t0.c63 IN ()) ELSE ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END THEN (t0.c63 IN ()) ELSE ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CASE t0.c63  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 END THEN (t0.c63 IN ()) ELSE ((t0.c63) BETWEEN (t0.c63) AND (t0.c63)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))<=((NULLIF(DISTINCT vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))<=((NULLIF(DISTINCT vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))<=((NULLIF(DISTINCT vt0.c0, vt0.c0)))));
SELECT ALL * FROM t0 WHERE ((~ (CAST('' AS BLOB)))) ORDER BY HEX(DISTINCT t0.c63 COLLATE NOCASE), '796505629' COLLATE NOCASE ASC  NULLS FIRST, LIKELY(DISTINCT 0xffffffffda941f65)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST('' AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT t0.c63 COLLATE NOCASE), '796505629' COLLATE NOCASE ASC  NULLS FIRST, LIKELY(DISTINCT 0xffffffffda941f65)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (CAST('' AS BLOB)))) ORDER BY HEX(DISTINCT t0.c63 COLLATE NOCASE), '796505629' COLLATE NOCASE ASC  NULLS FIRST, LIKELY(DISTINCT 0xffffffffda941f65)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST('' AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT t0.c63 COLLATE NOCASE), '796505629' COLLATE NOCASE ASC  NULLS FIRST, LIKELY(DISTINCT 0xffffffffda941f65)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (CAST('' AS BLOB)))) ORDER BY HEX(DISTINCT t0.c63 COLLATE NOCASE), '796505629' COLLATE NOCASE ASC  NULLS FIRST, LIKELY(DISTINCT 0xffffffffda941f65)  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0 IN ()))OR(CAST(t0.c63 AS INTEGER))))AND(CAST(t0.c63 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(CAST(t0.c63 AS INTEGER))))AND(CAST(t0.c63 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0 IN ()))OR(CAST(t0.c63 AS INTEGER))))AND(CAST(t0.c63 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(CAST(t0.c63 AS INTEGER))))AND(CAST(t0.c63 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((((((vt0.c0 IN ()))OR(CAST(t0.c63 AS INTEGER))))AND(CAST(t0.c63 AS TEXT))));
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c63 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c63 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c63 AS REAL))));
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END COLLATE BINARY);
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c63) NOT NULL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY '(Z';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c63) NOT NULL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY '(Z');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c63) NOT NULL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY '(Z';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c63) NOT NULL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY '(Z');
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c63) NOT NULL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY '(Z';
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((t0.c63)IS('梇T3Q랶v9')) WHERE ((~ (ROUND(vt0.c0, 0.9124716275568009)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) IN (((t0.c63)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (ROUND(vt0.c0, 0.9124716275568009)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c63)IS('梇T3Q랶v9')) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) IN (((t0.c63)<=(vt0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((t0.c63)IS('梇T3Q랶v9')) WHERE ((~ (ROUND(vt0.c0, 0.9124716275568009)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) IN (((t0.c63)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (ROUND(vt0.c0, 0.9124716275568009)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((t0.c63)IS('梇T3Q랶v9')) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) IN (((t0.c63)<=(vt0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((t0.c63)IS('梇T3Q랶v9')) WHERE ((~ (ROUND(vt0.c0, 0.9124716275568009)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) IN (((t0.c63)<=(vt0.c0))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c63 AS REAL)) ISNULL)) ORDER BY (NOT ((- (t0.c63)))), ((((vt0.c0) NOT BETWEEN ('-846181897') AND (0.9518650471791038)))<=((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((- (t0.c63)))), ((((vt0.c0) NOT BETWEEN ('-846181897') AND (0.9518650471791038)))<=((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c63 AS REAL)) ISNULL)) ORDER BY (NOT ((- (t0.c63)))), ((((vt0.c0) NOT BETWEEN ('-846181897') AND (0.9518650471791038)))<=((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS REAL)) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT ((- (t0.c63)))), ((((vt0.c0) NOT BETWEEN ('-846181897') AND (0.9518650471791038)))<=((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c63 AS REAL)) ISNULL)) ORDER BY (NOT ((- (t0.c63)))), ((((vt0.c0) NOT BETWEEN ('-846181897') AND (0.9518650471791038)))<=((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c63, vt0.c0, vt0.c0)) AND ((t0.c63, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((NULL IN ()))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL IN ()))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL IN ()))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))OR(vt0.c0))))));
SELECT ALL * FROM t0 WHERE (((((((t0.c63) NOTNULL))AND(((t0.c63)<=(t0.c63)))))AND('ﲏ')));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63) NOTNULL))AND(((t0.c63)<=(t0.c63)))))AND('ﲏ'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c63) NOTNULL))AND(((t0.c63)<=(t0.c63)))))AND('ﲏ')));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63) NOTNULL))AND(((t0.c63)<=(t0.c63)))))AND('ﲏ'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c63) NOTNULL))AND(((t0.c63)<=(t0.c63)))))AND('ﲏ')));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND('')) THEN ((vt0.c0)IS(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ABS(DISTINCT vt0.c0) ASC  NULLS LAST, (- (vt0.c0)) COLLATE NOCASE, CASE WHEN CAST(vt0.c0 AS REAL) THEN (NOT (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt0.c0)) WHEN (((vt0.c0))<=((1559621713))) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN '?a,^+mY' WHEN vt0.c0 THEN t0.c63 END END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND('')) THEN ((vt0.c0)IS(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 ORDER BY ABS(DISTINCT vt0.c0) ASC  NULLS LAST, (- (vt0.c0)) COLLATE NOCASE, CASE WHEN CAST(vt0.c0 AS REAL) THEN (NOT (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt0.c0)) WHEN (((vt0.c0))<=((1559621713))) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN '?a,^+mY' WHEN vt0.c0 THEN t0.c63 END END DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND('')) THEN ((vt0.c0)IS(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ABS(DISTINCT vt0.c0) ASC  NULLS LAST, (- (vt0.c0)) COLLATE NOCASE, CASE WHEN CAST(vt0.c0 AS REAL) THEN (NOT (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt0.c0)) WHEN (((vt0.c0))<=((1559621713))) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN '?a,^+mY' WHEN vt0.c0 THEN t0.c63 END END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND('')) THEN ((vt0.c0)IS(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 ORDER BY ABS(DISTINCT vt0.c0) ASC  NULLS LAST, (- (vt0.c0)) COLLATE NOCASE, CASE WHEN CAST(vt0.c0 AS REAL) THEN (NOT (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt0.c0)) WHEN (((vt0.c0))<=((1559621713))) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN '?a,^+mY' WHEN vt0.c0 THEN t0.c63 END END DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND('')) THEN ((vt0.c0)IS(t0.c63)) WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) ORDER BY ABS(DISTINCT vt0.c0) ASC  NULLS LAST, (- (vt0.c0)) COLLATE NOCASE, CASE WHEN CAST(vt0.c0 AS REAL) THEN (NOT (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)||(vt0.c0)) WHEN (((vt0.c0))<=((1559621713))) THEN CASE WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN vt0.c0 THEN '?a,^+mY' WHEN vt0.c0 THEN t0.c63 END END DESC;
SELECT * FROM t0, vt0 WHERE ((((t0.c63)) BETWEEN (((((vt0.c0))<((t0.c63))))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN (((((vt0.c0))<((t0.c63))))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c63)) BETWEEN (((((vt0.c0))<((t0.c63))))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) BETWEEN (((((vt0.c0))<((t0.c63))))) AND ((NULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c63)) BETWEEN (((((vt0.c0))<((t0.c63))))) AND ((NULL))));
SELECT * FROM t0 WHERE (((t0.c63 COLLATE BINARY)<>(CAST(t0.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE BINARY)<>(CAST(t0.c63 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c63 COLLATE BINARY)<>(CAST(t0.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((t0.c63 COLLATE BINARY)<>(CAST(t0.c63 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c63 COLLATE BINARY)<>(CAST(t0.c63 AS REAL))));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63)))) AND (((NOT (vt0.c0)))))) ORDER BY (((- (t0.c63)))==(t0.c63))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63)))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((- (t0.c63)))=(t0.c63))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63)))) AND (((NOT (vt0.c0)))))) ORDER BY (((- (t0.c63)))==(t0.c63))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63)))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((- (t0.c63)))=(t0.c63))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((t0.c63 IN (t0.c63)))) AND (((NOT (vt0.c0)))))) ORDER BY (((- (t0.c63)))==(t0.c63))  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((((t0.c63)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c63)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c63)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY IFNULL(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY IFNULL(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY IFNULL(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE WHEN t0.c63 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE WHEN t0.c63 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE WHEN t0.c63 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE WHEN t0.c63 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE WHEN t0.c63 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(UPPER(DISTINCT t0.c63)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(UPPER(DISTINCT t0.c63))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(UPPER(DISTINCT t0.c63)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(UPPER(DISTINCT t0.c63))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(UPPER(DISTINCT t0.c63)));
SELECT * FROM t0 WHERE (t0.c63) ORDER BY CAST(t0.c63 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c63 AS BLOB) DESC);
SELECT * FROM t0 WHERE (t0.c63) ORDER BY CAST(t0.c63 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c63 AS BLOB) DESC);
SELECT * FROM t0 WHERE (t0.c63) ORDER BY CAST(t0.c63 AS BLOB) DESC;
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN json_extract('*n', vt0.c0, vt0.c0, '') ELSE vt0.c0 COLLATE BINARY END) ORDER BY SUBSTR(CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN json_extract('*n', vt0.c0, vt0.c0, '') ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN json_extract('*n', vt0.c0, vt0.c0, '') ELSE vt0.c0 COLLATE BINARY END) ORDER BY SUBSTR(CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN json_extract('*n', vt0.c0, vt0.c0, '') ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN json_extract('*n', vt0.c0, vt0.c0, '') ELSE vt0.c0 COLLATE BINARY END) ORDER BY SUBSTR(CAST(vt0.c0 AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST, ((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN ')L' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, vt0.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST, ((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN ')L' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, vt0.c0 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST, ((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN ')L' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, vt0.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST, ((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN ')L' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, vt0.c0 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST, ((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c0 THEN ')L' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, vt0.c0 COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))==((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))==((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY INSTR(((t0.c63) ISNULL), ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0 ORDER BY INSTR(((t0.c63) ISNULL), ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY INSTR(((t0.c63) ISNULL), ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0 ORDER BY INSTR(((t0.c63) ISNULL), ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) DESC);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY INSTR(((t0.c63) ISNULL), ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (((vt0.c0))=((NULL))), ((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((vt0.c0))=((NULL))), ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (((vt0.c0))=((NULL))), ((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((vt0.c0))=((NULL))), ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (((vt0.c0))=((NULL))), ((vt0.c0)<<(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND (((((0.6190089251542991)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.06419737317602559 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND (((((0.6190089251542991)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.06419737317602559 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND (((((0.6190089251542991)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.06419737317602559 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND (((((0.6190089251542991)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.06419737317602559 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)&(vt0.c0))) AND (((((0.6190089251542991)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.06419737317602559 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('0.3908430149950658') ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (((x'')&(vt0.c0))) AND (t0.c63 COLLATE BINARY)), ABS(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.3908430149950658') IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (((x'')&(vt0.c0))) AND (t0.c63 COLLATE BINARY)), ABS(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('0.3908430149950658') ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (((x'')&(vt0.c0))) AND (t0.c63 COLLATE BINARY)), ABS(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.3908430149950658') IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (((x'')&(vt0.c0))) AND (t0.c63 COLLATE BINARY)), ABS(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('0.3908430149950658') ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (((x'')&(vt0.c0))) AND (t0.c63 COLLATE BINARY)), ABS(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))) ASC;
SELECT ALL * FROM vt0 WHERE (((((x'd07e') IS FALSE))-(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((x'd07e') IS FALSE))-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'd07e') IS FALSE))-(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((x'd07e') IS FALSE))-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'd07e') IS FALSE))-(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63) ISNULL) COLLATE RTRIM) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT ((((t0.c63) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY t0.c63);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63) ISNULL) COLLATE RTRIM) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT ((((t0.c63) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY t0.c63);
SELECT COUNT(*) FROM t0 WHERE (((t0.c63) ISNULL) COLLATE RTRIM) ORDER BY t0.c63;
SELECT ALL * FROM vt0 WHERE (CASE WHEN '0.22143537215953824' THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.22143537215953824' THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN '0.22143537215953824' THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.22143537215953824' THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN '0.22143537215953824' THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY t0.c63);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY t0.c63;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY t0.c63);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY t0.c63;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('ow') ORDER BY json_patch(((vt0.c0) IS TRUE), CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('ow') IS TRUE)  as count FROM t0, vt0 ORDER BY json_patch(((vt0.c0) IS TRUE), CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ('ow') ORDER BY json_patch(((vt0.c0) IS TRUE), CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('ow') IS TRUE)  as count FROM t0, vt0 ORDER BY json_patch(((vt0.c0) IS TRUE), CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE t0.c63 END)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c0)>=(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0)%(t0.c63))) AND (vt0.c0))) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0)%(t0.c63))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0)%(t0.c63))) AND (vt0.c0))) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0)%(t0.c63))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0)%(t0.c63))) AND (vt0.c0))) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c63 WHERE (CASE WHEN t0.c63 THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c63) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c63 THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c63) NOTNULL) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c63);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c63 WHERE (CASE WHEN t0.c63 THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c63) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c63 THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c63) NOTNULL) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c63);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c63 WHERE (CASE WHEN t0.c63 THEN vt0.c0 COLLATE NOCASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((t0.c63) NOTNULL) END);
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CAST(x'' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(x'' AS BLOB))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CAST(x'' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(x'' AS BLOB))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TYPEOF(DISTINCT CAST(x'' AS BLOB)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.9547380209178975) NOT BETWEEN ((((NULL))=((vt0.c0)))) AND (t0.c63)));
SELECT SUM(count) FROM (SELECT ((((0.9547380209178975) NOT BETWEEN ((((NULL))==((vt0.c0)))) AND (t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.9547380209178975) NOT BETWEEN ((((NULL))=((vt0.c0)))) AND (t0.c63)));
SELECT SUM(count) FROM (SELECT ((((0.9547380209178975) NOT BETWEEN ((((NULL))==((vt0.c0)))) AND (t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.9547380209178975) NOT BETWEEN ((((NULL))=((vt0.c0)))) AND (t0.c63)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN (x''))))>=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (x''))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN (x''))))>=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (x''))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN (x''))))>=(((vt0.c0 IN ())))));
SELECT ALL * FROM vt0 WHERE (TRIM((~ (vt0.c0)))) ORDER BY ((x'') ISNULL)  NULLS LAST, UPPER(DISTINCT (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'') ISNULL)  NULLS LAST, UPPER(DISTINCT (vt0.c0 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TRIM((~ (vt0.c0)))) ORDER BY ((x'') ISNULL)  NULLS LAST, UPPER(DISTINCT (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'') ISNULL)  NULLS LAST, UPPER(DISTINCT (vt0.c0 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TRIM((~ (vt0.c0)))) ORDER BY ((x'') ISNULL)  NULLS LAST, UPPER(DISTINCT (vt0.c0 IN ()))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63) NOTNULL)) ISNULL)) ORDER BY t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) NOTNULL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c63 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63) NOTNULL)) ISNULL)) ORDER BY t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c63) NOTNULL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c63 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63) NOTNULL)) ISNULL)) ORDER BY t0.c63 DESC;
SELECT ALL * FROM vt0 WHERE (json_array(NULL, vt0.c0, '', vt0.c0) COLLATE NOCASE) ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array(NULL, vt0.c0, '', vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC);
SELECT ALL * FROM vt0 WHERE (json_array(NULL, vt0.c0, '', vt0.c0) COLLATE NOCASE) ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array(NULL, vt0.c0, '', vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC);
SELECT ALL * FROM vt0 WHERE (json_array(NULL, vt0.c0, '', vt0.c0) COLLATE NOCASE) ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))+((vt0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((((t0.c63 IN ()))&(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN ()))&(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c63 IN ()))&(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN ()))&(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c63 IN ()))&(((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, '')) BETWEEN ((((vt0.c0)<(vt0.c0)), vt0.c0, (((vt0.c0, '-93337081', '')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, '')) BETWEEN ((((vt0.c0)<(vt0.c0)), vt0.c0, (((vt0.c0, '-93337081', '')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, '')) BETWEEN ((((vt0.c0)<(vt0.c0)), vt0.c0, (((vt0.c0, '-93337081', '')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, '')) BETWEEN ((((vt0.c0)<(vt0.c0)), vt0.c0, (((vt0.c0, '-93337081', '')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, '')) BETWEEN ((((vt0.c0)<(vt0.c0)), vt0.c0, (((vt0.c0, '-93337081', '')) BETWEEN ((x'', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((((vt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))));
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT (NOT (vt0.c0)))) ORDER BY (-5.4592332E8 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (-5.4592332E8 IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT (NOT (vt0.c0)))) ORDER BY (-5.4592332E8 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (-5.4592332E8 IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT (NOT (vt0.c0)))) ORDER BY (-5.4592332E8 IN ())  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY '-627826843'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY '-627826843'  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY '-627826843'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY '-627826843'  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c63) ORDER BY '-627826843'  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))) THEN ((((t0.c63)AND(x'4bd9')))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END) ORDER BY ((x'')GLOB(CAST(t0.c63 AS NUMERIC)))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END  WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN vt0.c0 WHEN (NOT ('-521055379')) THEN 'c' WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) WHEN CAST(t0.c63 AS INTEGER) THEN vt0.c0 COLLATE BINARY WHEN t0.c63 COLLATE RTRIM THEN IFNULL(t0.c63, vt0.c0) ELSE t0.c63 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))) THEN ((((t0.c63)AND(x'4bd9')))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((x'')GLOB(CAST(t0.c63 AS NUMERIC)))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END  WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN vt0.c0 WHEN (NOT ('-521055379')) THEN 'c' WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) WHEN CAST(t0.c63 AS INTEGER) THEN vt0.c0 COLLATE BINARY WHEN t0.c63 COLLATE RTRIM THEN IFNULL(t0.c63, vt0.c0) ELSE t0.c63 END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))) THEN ((((t0.c63)AND(x'4bd9')))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END) ORDER BY ((x'')GLOB(CAST(t0.c63 AS NUMERIC)))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END  WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN vt0.c0 WHEN (NOT ('-521055379')) THEN 'c' WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) WHEN CAST(t0.c63 AS INTEGER) THEN vt0.c0 COLLATE BINARY WHEN t0.c63 COLLATE RTRIM THEN IFNULL(t0.c63, vt0.c0) ELSE t0.c63 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))) THEN ((((t0.c63)AND(x'4bd9')))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((x'')GLOB(CAST(t0.c63 AS NUMERIC)))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END  WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN vt0.c0 WHEN (NOT ('-521055379')) THEN 'c' WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) WHEN CAST(t0.c63 AS INTEGER) THEN vt0.c0 COLLATE BINARY WHEN t0.c63 COLLATE RTRIM THEN IFNULL(t0.c63, vt0.c0) ELSE t0.c63 END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))) THEN ((((t0.c63)AND(x'4bd9')))OR(vt0.c0)) ELSE ((vt0.c0) ISNULL) END) ORDER BY ((x'')GLOB(CAST(t0.c63 AS NUMERIC)))  NULLS LAST, CASE CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END  WHEN ((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)) THEN vt0.c0 WHEN (NOT ('-521055379')) THEN 'c' WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) WHEN CAST(t0.c63 AS INTEGER) THEN vt0.c0 COLLATE BINARY WHEN t0.c63 COLLATE RTRIM THEN IFNULL(t0.c63, vt0.c0) ELSE t0.c63 END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((NULL) NOTNULL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((NULL) NOTNULL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((NULL) NOTNULL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt0.c0)))>((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)*(vt0.c0)))>((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt0.c0)))>((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)*(vt0.c0)))>((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0)*(vt0.c0)))>((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (MAX((t0.c63 IN ()), (((t0.c63))==((t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX((t0.c63 IN ()), (((t0.c63))==((t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (MAX((t0.c63 IN ()), (((t0.c63))==((t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX((t0.c63 IN ()), (((t0.c63))==((t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (MAX((t0.c63 IN ()), (((t0.c63))==((t0.c63)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ()) DESC, (('1903103835')<=((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC, (('1903103835')<=((~ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ()) DESC, (('1903103835')<=((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC, (('1903103835')<=((~ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c0 IN ()) DESC, (('1903103835')<=((~ (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (+ (vt0.c0)) WHERE (LTRIM(((((vt0.c0)AND(t0.c63)))AND(vt0.c0)), (- (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((vt0.c0)AND(t0.c63)))AND(vt0.c0)), (- (t0.c63)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (+ (vt0.c0)));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (+ (vt0.c0)) WHERE (LTRIM(((((vt0.c0)AND(t0.c63)))AND(vt0.c0)), (- (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((vt0.c0)AND(t0.c63)))AND(vt0.c0)), (- (t0.c63)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (+ (vt0.c0)));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (+ (vt0.c0)) WHERE (LTRIM(((((vt0.c0)AND(t0.c63)))AND(vt0.c0)), (- (t0.c63))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c63) IS TRUE))AND(((((NULL)AND(t0.c63)))AND(t0.c63)))))AND(t0.c63))) ORDER BY (((NULL))=((CAST(t0.c63 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c63) IS TRUE))AND(((((NULL)AND(t0.c63)))AND(t0.c63)))))AND(t0.c63))) IS TRUE)  as count FROM t0 ORDER BY (((NULL))=((CAST(t0.c63 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c63) IS TRUE))AND(((((NULL)AND(t0.c63)))AND(t0.c63)))))AND(t0.c63))) ORDER BY (((NULL))=((CAST(t0.c63 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c63) IS TRUE))AND(((((NULL)AND(t0.c63)))AND(t0.c63)))))AND(t0.c63))) IS TRUE)  as count FROM t0 ORDER BY (((NULL))=((CAST(t0.c63 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c63) IS TRUE))AND(((((NULL)AND(t0.c63)))AND(t0.c63)))))AND(t0.c63))) ORDER BY (((NULL))=((CAST(t0.c63 AS INTEGER))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) IS TRUE)) ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) IS TRUE)) ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) IS TRUE)) ORDER BY (~ ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63);
SELECT * FROM t0 WHERE ((((t0.c63 IN (t0.c63, 0.49778860046558415))) IS TRUE)) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN (t0.c63, 0.49778860046558415))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c63 DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c63 IN (t0.c63, 0.49778860046558415))) IS TRUE)) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c63 IN (t0.c63, 0.49778860046558415))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c63 DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c63 IN (t0.c63, 0.49778860046558415))) IS TRUE)) ORDER BY t0.c63 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN (t0.c63, vt0.c0))) ISNULL)) ORDER BY TYPEOF(((t0.c63)<<('1795634682')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c63, vt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(((t0.c63)<<('1795634682'))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN (t0.c63, vt0.c0))) ISNULL)) ORDER BY TYPEOF(((t0.c63)<<('1795634682')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c63, vt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(((t0.c63)<<('1795634682'))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN (t0.c63, vt0.c0))) ISNULL)) ORDER BY TYPEOF(((t0.c63)<<('1795634682')));
SELECT * FROM t0 WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (+ (t0.c63))  WHEN ((t0.c63) IS TRUE) THEN (((t0.c63))==((t0.c63))) ELSE t0.c63 COLLATE NOCASE END) ORDER BY CAST((((t0.c63))<((t0.c63))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (+ (t0.c63))  WHEN ((t0.c63) IS TRUE) THEN (((t0.c63))=((t0.c63))) ELSE t0.c63 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c63))<((t0.c63))) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (+ (t0.c63))  WHEN ((t0.c63) IS TRUE) THEN (((t0.c63))==((t0.c63))) ELSE t0.c63 COLLATE NOCASE END) ORDER BY CAST((((t0.c63))<((t0.c63))) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (+ (t0.c63))  WHEN ((t0.c63) IS TRUE) THEN (((t0.c63))=((t0.c63))) ELSE t0.c63 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c63))<((t0.c63))) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (+ (t0.c63))  WHEN ((t0.c63) IS TRUE) THEN (((t0.c63))==((t0.c63))) ELSE t0.c63 COLLATE NOCASE END) ORDER BY CAST((((t0.c63))<((t0.c63))) AS INTEGER) DESC;
SELECT ALL * FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c63);
SELECT * FROM t0 WHERE (CASE ((t0.c63)<=(t0.c63))  WHEN ((t0.c63)GLOB(t0.c63)) THEN t0.c63 ELSE (t0.c63 IN (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c63)<=(t0.c63))  WHEN ((t0.c63)GLOB(t0.c63)) THEN t0.c63 ELSE (t0.c63 IN (t0.c63)) END) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (CASE ((t0.c63)<=(t0.c63))  WHEN ((t0.c63)GLOB(t0.c63)) THEN t0.c63 ELSE (t0.c63 IN (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c63)<=(t0.c63))  WHEN ((t0.c63)GLOB(t0.c63)) THEN t0.c63 ELSE (t0.c63 IN (t0.c63)) END) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (CASE ((t0.c63)<=(t0.c63))  WHEN ((t0.c63)GLOB(t0.c63)) THEN t0.c63 ELSE (t0.c63 IN (t0.c63)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c63)&(t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)&(t0.c63)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c63)&(t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c63)&(t0.c63)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c63)&(t0.c63)) AS TEXT));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c63)OR('')))AND(vt0.c0)))!=((t0.c63 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63)OR('')))AND(vt0.c0)))!=((t0.c63 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c63)OR('')))AND(vt0.c0)))!=((t0.c63 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63)OR('')))AND(vt0.c0)))!=((t0.c63 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c63)OR('')))AND(vt0.c0)))!=((t0.c63 IN (vt0.c0)))));
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT * FROM t0 WHERE (((((CASE 0.6612540339508041  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE '([6''0b' END)OR((((t0.c63))=((t0.c63))))))AND(((t0.c63)>(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((CASE 0.6612540339508041  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE '([6''0b' END)OR((((t0.c63))==((t0.c63))))))AND(((t0.c63)>(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((CASE 0.6612540339508041  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE '([6''0b' END)OR((((t0.c63))=((t0.c63))))))AND(((t0.c63)>(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((CASE 0.6612540339508041  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE '([6''0b' END)OR((((t0.c63))==((t0.c63))))))AND(((t0.c63)>(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((CASE 0.6612540339508041  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 ELSE '([6''0b' END)OR((((t0.c63))=((t0.c63))))))AND(((t0.c63)>(t0.c63)))));
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0) ISNULL), LIKE(vt0.c0, '0.9518650471791038', '-'), ((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(vt0.c0)), ((t0.c63)>=(t0.c63)), CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END))<=((((-1.854099043E9)>(t0.c63)), (vt0.c0 IN ()), 0.03320947442650435, t0.c63, ((t0.c63)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL), LIKE(vt0.c0, '0.9518650471791038', '-'), ((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(vt0.c0)), ((t0.c63)>=(t0.c63)), CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END))<=((((-1.854099043E9)>(t0.c63)), (vt0.c0 IN ()), 0.03320947442650435, t0.c63, ((t0.c63)OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0) ISNULL), LIKE(vt0.c0, '0.9518650471791038', '-'), ((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(vt0.c0)), ((t0.c63)>=(t0.c63)), CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END))<=((((-1.854099043E9)>(t0.c63)), (vt0.c0 IN ()), 0.03320947442650435, t0.c63, ((t0.c63)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL), LIKE(vt0.c0, '0.9518650471791038', '-'), ((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(vt0.c0)), ((t0.c63)>=(t0.c63)), CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END))<=((((-1.854099043E9)>(t0.c63)), (vt0.c0 IN ()), 0.03320947442650435, t0.c63, ((t0.c63)OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0) ISNULL), LIKE(vt0.c0, '0.9518650471791038', '-'), ((((((((vt0.c0)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(vt0.c0)), ((t0.c63)>=(t0.c63)), CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END))<=((((-1.854099043E9)>(t0.c63)), (vt0.c0 IN ()), 0.03320947442650435, t0.c63, ((t0.c63)OR(vt0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (json_object(CAST(t0.c63 AS NUMERIC), CASE WHEN x'aeb5' THEN t0.c63 END)) ORDER BY (((NULL, t0.c63, NULL)) NOT BETWEEN (((NULL IN (t0.c63, t0.c63)), (~ (0.16572402979803047)), ((x'a91e')OR(t0.c63)))) AND ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, HEX(t0.c63), 0Xffffffff9d2f79ed))) ASC;
SELECT SUM(count) FROM (SELECT ((json_object(CAST(t0.c63 AS NUMERIC), CASE WHEN x'aeb5' THEN t0.c63 END)) IS TRUE)  as count FROM t0 ORDER BY (((NULL, t0.c63, NULL)) NOT BETWEEN (((NULL IN (t0.c63, t0.c63)), (~ (0.16572402979803047)), ((x'a91e')OR(t0.c63)))) AND ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, HEX(t0.c63), 0xffffffff9d2f79ed))) ASC);
SELECT COUNT(*) FROM t0 WHERE (json_object(CAST(t0.c63 AS NUMERIC), CASE WHEN x'aeb5' THEN t0.c63 END)) ORDER BY (((NULL, t0.c63, NULL)) NOT BETWEEN (((NULL IN (t0.c63, t0.c63)), (~ (0.16572402979803047)), ((x'a91e')OR(t0.c63)))) AND ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, HEX(t0.c63), 0Xffffffff9d2f79ed))) ASC;
SELECT SUM(count) FROM (SELECT ((json_object(CAST(t0.c63 AS NUMERIC), CASE WHEN x'aeb5' THEN t0.c63 END)) IS TRUE)  as count FROM t0 ORDER BY (((NULL, t0.c63, NULL)) NOT BETWEEN (((NULL IN (t0.c63, t0.c63)), (~ (0.16572402979803047)), ((x'a91e')OR(t0.c63)))) AND ((CASE WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END, HEX(t0.c63), 0xffffffff9d2f79ed))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)&(x'')))IS NOT((((0.6776046322831044, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(x'')))IS NOT((((0.6776046322831044, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)&(x'')))IS NOT((((0.6776046322831044, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(x'')))IS NOT((((0.6776046322831044, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)&(x'')))IS NOT((((0.6776046322831044, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=('1634121490'))) BETWEEN (CASE vt0.c0  WHEN 'r9t' THEN vt0.c0 END) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=('1634121490'))) BETWEEN (CASE vt0.c0  WHEN 'r9t' THEN vt0.c0 END) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=('1634121490'))) BETWEEN (CASE vt0.c0  WHEN 'r9t' THEN vt0.c0 END) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=('1634121490'))) BETWEEN (CASE vt0.c0  WHEN 'r9t' THEN vt0.c0 END) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=('1634121490'))) BETWEEN (CASE vt0.c0  WHEN 'r9t' THEN vt0.c0 END) AND ((NOT (vt0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0)<<(t0.c63)) IN ()), '0.4539726107035814' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)<<(t0.c63)) IN ()), '0.4539726107035814' DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0)<<(t0.c63)) IN ()), '0.4539726107035814' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)<<(t0.c63)) IN ()), '0.4539726107035814' DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (((vt0.c0)<<(t0.c63)) IN ()), '0.4539726107035814' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('-2105408441')))) AND ((NULL)))) ORDER BY '813281344' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('-2105408441')))) AND ((NULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY '813281344' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('-2105408441')))) AND ((NULL)))) ORDER BY '813281344' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('-2105408441')))) AND ((NULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY '813281344' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND ('-2105408441')))) AND ((NULL)))) ORDER BY '813281344' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (- (t0.c63)) THEN t0.c63 COLLATE BINARY ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0 IN (t0.c63, vt0.c0)))<=(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c63)) THEN t0.c63 COLLATE BINARY ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN (t0.c63, vt0.c0)))<=(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (- (t0.c63)) THEN t0.c63 COLLATE BINARY ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0 IN (t0.c63, vt0.c0)))<=(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c63)) THEN t0.c63 COLLATE BINARY ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN (t0.c63, vt0.c0)))<=(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN (- (t0.c63)) THEN t0.c63 COLLATE BINARY ELSE (vt0.c0 IN ()) END) ORDER BY (((vt0.c0 IN (t0.c63, vt0.c0)))<=(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (PRINTF(HEX(vt0.c0), ((t0.c63) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(HEX(vt0.c0), ((t0.c63) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (PRINTF(HEX(vt0.c0), ((t0.c63) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(HEX(vt0.c0), ((t0.c63) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (PRINTF(HEX(vt0.c0), ((t0.c63) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c63)))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON LIKELY(CASE WHEN vt0.c0 THEN t0.c63 END) WHERE (((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON LIKELY(CASE WHEN vt0.c0 THEN t0.c63 END));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON LIKELY(CASE WHEN vt0.c0 THEN t0.c63 END) WHERE (((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON LIKELY(CASE WHEN vt0.c0 THEN t0.c63 END));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON LIKELY(CASE WHEN vt0.c0 THEN t0.c63 END) WHERE (((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE '-1773639545' END  WHEN t0.c63 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY (((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=(((((vt0.c0, 0xffffffff9b5d31aa, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '')) AND ((x'4dcd', 0.3339521111927587, 0.3824949132262214)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE '-1773639545' END  WHEN t0.c63 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END ORDER BY (((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=(((((vt0.c0, 0xffffffff9b5d31aa, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '')) AND ((x'4dcd', 0.3339521111927587, 0.3824949132262214)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE '-1773639545' END  WHEN t0.c63 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY (((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=(((((vt0.c0, 0xffffffff9b5d31aa, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '')) AND ((x'4dcd', 0.3339521111927587, 0.3824949132262214)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE '-1773639545' END  WHEN t0.c63 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END ORDER BY (((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=(((((vt0.c0, 0xffffffff9b5d31aa, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '')) AND ((x'4dcd', 0.3339521111927587, 0.3824949132262214)))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE CASE t0.c63  WHEN vt0.c0 THEN t0.c63 ELSE '-1773639545' END  WHEN t0.c63 COLLATE BINARY THEN CAST(vt0.c0 AS REAL) END WHERE (((((vt0.c0) ISNULL)) NOT NULL)) ORDER BY (((((t0.c63) BETWEEN (t0.c63) AND (t0.c63))))>=(((((vt0.c0, 0xffffffff9b5d31aa, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '')) AND ((x'4dcd', 0.3339521111927587, 0.3824949132262214)))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (HEX(DISTINCT (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))))) ORDER BY (((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, x'', t0.c63)) AND ((t0.c63, NULL, t0.c63)))) NOT BETWEEN (CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, x'', t0.c63)) AND ((t0.c63, NULL, t0.c63)))) NOT BETWEEN (CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)))));
SELECT ALL * FROM t0 WHERE (HEX(DISTINCT (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))))) ORDER BY (((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, x'', t0.c63)) AND ((t0.c63, NULL, t0.c63)))) NOT BETWEEN (CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, x'', t0.c63)) AND ((t0.c63, NULL, t0.c63)))) NOT BETWEEN (CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)))));
SELECT ALL * FROM t0 WHERE (HEX(DISTINCT (((t0.c63)) BETWEEN ((t0.c63)) AND ((t0.c63))))) ORDER BY (((((t0.c63, t0.c63, t0.c63)) NOT BETWEEN ((t0.c63, x'', t0.c63)) AND ((t0.c63, NULL, t0.c63)))) NOT BETWEEN (CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END) AND (((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c63 AS REAL) COLLATE BINARY) ORDER BY CAST(((t0.c63) ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c63 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c63) ISNULL) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c63 AS REAL) COLLATE BINARY) ORDER BY CAST(((t0.c63) ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c63 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c63) ISNULL) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c63 AS REAL) COLLATE BINARY) ORDER BY CAST(((t0.c63) ISNULL) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c63 COLLATE RTRIM IN (((t0.c63) NOT NULL)))) ORDER BY CASE (t0.c63 IN ())  WHEN CAST(t0.c63 AS REAL) THEN ((t0.c63)+(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT (((t0.c63 COLLATE RTRIM IN (((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c63 IN ())  WHEN CAST(t0.c63 AS REAL) THEN ((t0.c63)+(NULL)) END ASC);
SELECT ALL * FROM t0 WHERE ((t0.c63 COLLATE RTRIM IN (((t0.c63) NOT NULL)))) ORDER BY CASE (t0.c63 IN ())  WHEN CAST(t0.c63 AS REAL) THEN ((t0.c63)+(NULL)) END ASC;
SELECT SUM(count) FROM (SELECT (((t0.c63 COLLATE RTRIM IN (((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c63 IN ())  WHEN CAST(t0.c63 AS REAL) THEN ((t0.c63)+(NULL)) END ASC);
SELECT ALL * FROM t0 WHERE ((t0.c63 COLLATE RTRIM IN (((t0.c63) NOT NULL)))) ORDER BY CASE (t0.c63 IN ())  WHEN CAST(t0.c63 AS REAL) THEN ((t0.c63)+(NULL)) END ASC;
SELECT * FROM t0 WHERE (((((((((t0.c63)AND(t0.c63 COLLATE BINARY)))AND((~ (t0.c63)))))AND((- (t0.c63)))))AND(t0.c63))) ORDER BY CASE TYPEOF(DISTINCT t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN (t0.c63 IN ()) ELSE 0Xffffffffe4d86f68 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c63)AND(t0.c63 COLLATE BINARY)))AND((~ (t0.c63)))))AND((- (t0.c63)))))AND(t0.c63))) IS TRUE)  as count FROM t0 ORDER BY CASE TYPEOF(DISTINCT t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN (t0.c63 IN ()) ELSE 0xffffffffe4d86f68 END);
SELECT * FROM t0 WHERE (((((((((t0.c63)AND(t0.c63 COLLATE BINARY)))AND((~ (t0.c63)))))AND((- (t0.c63)))))AND(t0.c63))) ORDER BY CASE TYPEOF(DISTINCT t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN (t0.c63 IN ()) ELSE 0Xffffffffe4d86f68 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c63)AND(t0.c63 COLLATE BINARY)))AND((~ (t0.c63)))))AND((- (t0.c63)))))AND(t0.c63))) IS TRUE)  as count FROM t0 ORDER BY CASE TYPEOF(DISTINCT t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN (t0.c63 IN ()) ELSE 0xffffffffe4d86f68 END);
SELECT * FROM t0 WHERE (((((((((t0.c63)AND(t0.c63 COLLATE BINARY)))AND((~ (t0.c63)))))AND((- (t0.c63)))))AND(t0.c63))) ORDER BY CASE TYPEOF(DISTINCT t0.c63)  WHEN ((((((((t0.c63)AND(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)) THEN (t0.c63 IN ()) ELSE 0Xffffffffe4d86f68 END;
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN json_insert(vt0.c0, vt0.c0, '') END) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))OR(LOWER(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN json_insert(vt0.c0, vt0.c0, '') END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))OR(LOWER(vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN json_insert(vt0.c0, vt0.c0, '') END) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))OR(LOWER(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN json_insert(vt0.c0, vt0.c0, '') END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))OR(LOWER(vt0.c0)))  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (JULIANDAY(IFNULL('{Yewm/nkv', t0.c63), ((t0.c63)||(t0.c63)), CAST(t0.c63 AS NUMERIC), NULLIF(318045327, t0.c63), ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (t0.c63 IN ()), ((t0.c63)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(IFNULL('{Yewm/nkv', t0.c63), ((t0.c63)||(t0.c63)), CAST(t0.c63 AS NUMERIC), NULLIF(318045327, t0.c63), ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (t0.c63 IN ()), ((t0.c63)=(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (JULIANDAY(IFNULL('{Yewm/nkv', t0.c63), ((t0.c63)||(t0.c63)), CAST(t0.c63 AS NUMERIC), NULLIF(318045327, t0.c63), ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (t0.c63 IN ()), ((t0.c63)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(IFNULL('{Yewm/nkv', t0.c63), ((t0.c63)||(t0.c63)), CAST(t0.c63 AS NUMERIC), NULLIF(318045327, t0.c63), ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (t0.c63 IN ()), ((t0.c63)=(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (JULIANDAY(IFNULL('{Yewm/nkv', t0.c63), ((t0.c63)||(t0.c63)), CAST(t0.c63 AS NUMERIC), NULLIF(318045327, t0.c63), ((t0.c63) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (t0.c63 IN ()), ((t0.c63)=(vt0.c0))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c63)<=(t0.c63))  WHEN (('') NOT NULL) THEN t0.c63 ELSE ((t0.c63)+(t0.c63)) END) ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((x'')OR(t0.c63)))OR(NULL)) WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN 1.391843471E9 THEN (((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) ELSE ((t0.c63)+(t0.c63)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c63)<=(t0.c63))  WHEN (('') NOT NULL) THEN t0.c63 ELSE ((t0.c63)+(t0.c63)) END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((x'')OR(t0.c63)))OR(NULL)) WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN 1.391843471E9 THEN (((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) ELSE ((t0.c63)+(t0.c63)) END DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c63)<=(t0.c63))  WHEN (('') NOT NULL) THEN t0.c63 ELSE ((t0.c63)+(t0.c63)) END) ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((x'')OR(t0.c63)))OR(NULL)) WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN 1.391843471E9 THEN (((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) ELSE ((t0.c63)+(t0.c63)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c63)<=(t0.c63))  WHEN (('') NOT NULL) THEN t0.c63 ELSE ((t0.c63)+(t0.c63)) END) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((x'')OR(t0.c63)))OR(NULL)) WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN 1.391843471E9 THEN (((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) ELSE ((t0.c63)+(t0.c63)) END DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c63)<=(t0.c63))  WHEN (('') NOT NULL) THEN t0.c63 ELSE ((t0.c63)+(t0.c63)) END) ORDER BY CASE WHEN (t0.c63 IN ()) THEN ((((x'')OR(t0.c63)))OR(NULL)) WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN ((t0.c63)IS(t0.c63)) WHEN 1.391843471E9 THEN (((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((t0.c63))) ELSE ((t0.c63)+(t0.c63)) END DESC;
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c63 AS NUMERIC)))) ORDER BY (CASE WHEN t0.c63 THEN t0.c63 WHEN x'' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END IN (((((t0.c63)OR(t0.c63)))AND(t0.c63)))), (((((((t0.c63)AND(t0.c63)))OR('WPf'))))<(((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c63 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c63 THEN t0.c63 WHEN x'' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END IN (((((t0.c63)OR(t0.c63)))AND(t0.c63)))), (((((((t0.c63)AND(t0.c63)))OR('WPf'))))<(((t0.c63 IN ())))));
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c63 AS NUMERIC)))) ORDER BY (CASE WHEN t0.c63 THEN t0.c63 WHEN x'' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END IN (((((t0.c63)OR(t0.c63)))AND(t0.c63)))), (((((((t0.c63)AND(t0.c63)))OR('WPf'))))<(((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c63 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c63 THEN t0.c63 WHEN x'' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END IN (((((t0.c63)OR(t0.c63)))AND(t0.c63)))), (((((((t0.c63)AND(t0.c63)))OR('WPf'))))<(((t0.c63 IN ())))));
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c63 AS NUMERIC)))) ORDER BY (CASE WHEN t0.c63 THEN t0.c63 WHEN x'' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END IN (((((t0.c63)OR(t0.c63)))AND(t0.c63)))), (((((((t0.c63)AND(t0.c63)))OR('WPf'))))<(((t0.c63 IN ()))));
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN (- (vt0.c0)) WHEN CAST(x'cd7b' AS BLOB) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))<>((vt0.c0))) ELSE vt0.c0 END) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN (- (vt0.c0)) WHEN CAST(x'cd7b' AS BLOB) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN (- (vt0.c0)) WHEN CAST(x'cd7b' AS BLOB) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))<>((vt0.c0))) ELSE vt0.c0 END) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN (- (vt0.c0)) WHEN CAST(x'cd7b' AS BLOB) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))!=((vt0.c0))) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0))>=((vt0.c0))) THEN (- (vt0.c0)) WHEN CAST(x'cd7b' AS BLOB) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0))<>((vt0.c0))) ELSE vt0.c0 END) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (0.6974098332479863);
SELECT SUM(count) FROM (SELECT ((0.6974098332479863) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.6974098332479863);
SELECT SUM(count) FROM (SELECT ((0.6974098332479863) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.6974098332479863);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((0.10125185900300404, t0.c63, vt0.c0))==((t0.c63, vt0.c0, t0.c63)))) NOTNULL)) ORDER BY 0.871612114169224  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.10125185900300404, t0.c63, vt0.c0))==((t0.c63, vt0.c0, t0.c63)))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.871612114169224  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((0.10125185900300404, t0.c63, vt0.c0))==((t0.c63, vt0.c0, t0.c63)))) NOTNULL)) ORDER BY 0.871612114169224  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.10125185900300404, t0.c63, vt0.c0))==((t0.c63, vt0.c0, t0.c63)))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY 0.871612114169224  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((0.10125185900300404, t0.c63, vt0.c0))==((t0.c63, vt0.c0, t0.c63)))) NOTNULL)) ORDER BY 0.871612114169224  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c63))))IS NOT(t0.c63)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c63))))IS NOT(t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c63))))IS NOT(t0.c63)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c63))))IS NOT(t0.c63))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c63))))IS NOT(t0.c63)));
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1941037178')))AND(vt0.c0))) AND (CAST(t0.c63 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1941037178')))AND(vt0.c0))) AND (CAST(t0.c63 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1941037178')))AND(vt0.c0))) AND (CAST(t0.c63 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1941037178')))AND(vt0.c0))) AND (CAST(t0.c63 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-1941037178')))AND(vt0.c0))) AND (CAST(t0.c63 AS INTEGER))));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))IS(TYPEOF('')))) ORDER BY CAST(-1043807820 AS NUMERIC) ASC  NULLS FIRST, (((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0)))IS(TYPEOF('')))) IS TRUE)  as count FROM vt0 ORDER BY CAST(-1043807820 AS NUMERIC) ASC  NULLS FIRST, (((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))IS(TYPEOF('')))) ORDER BY CAST(-1043807820 AS NUMERIC) ASC  NULLS FIRST, (((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0)))IS(TYPEOF('')))) IS TRUE)  as count FROM vt0 ORDER BY CAST(-1043807820 AS NUMERIC) ASC  NULLS FIRST, (((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))IS(TYPEOF('')))) ORDER BY CAST(-1043807820 AS NUMERIC) ASC  NULLS FIRST, (((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c63 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c63 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c63 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c63 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c63 AS INTEGER) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'704a'))) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'704a'))) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'704a'))) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'704a'))) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'704a'))) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63) IS TRUE))&(((((t0.c63)OR(t0.c63)))OR(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS TRUE))&(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63) IS TRUE))&(((((t0.c63)OR(t0.c63)))OR(t0.c63)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c63) IS TRUE))&(((((t0.c63)OR(t0.c63)))OR(t0.c63))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c63) IS TRUE))&(((((t0.c63)OR(t0.c63)))OR(t0.c63)))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT));
SELECT * FROM vt0, t0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))IS NOT(vt0.c0))  NULLS FIRST, t0.c63 ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))IS NOT(vt0.c0))  NULLS FIRST, t0.c63 ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0, t0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))IS NOT(vt0.c0))  NULLS FIRST, t0.c63 ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))IS NOT(vt0.c0))  NULLS FIRST, t0.c63 ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0, t0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY (((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))IS NOT(vt0.c0))  NULLS FIRST, t0.c63 ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c63) BETWEEN (t0.c63) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c63) BETWEEN (t0.c63) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (+ ('ᠮj\n坬fiq6')) WHERE (LIKELIHOOD((~ (vt0.c0)), 0.806060668404543));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((~ (vt0.c0)), 0.806060668404543)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ ('ᠮj\n坬fiq6')));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (+ ('ᠮj\n坬fiq6')) WHERE (LIKELIHOOD((~ (vt0.c0)), 0.806060668404543));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((~ (vt0.c0)), 0.806060668404543)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (+ ('ᠮj\n坬fiq6')));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (+ ('ᠮj\n坬fiq6')) WHERE (LIKELIHOOD((~ (vt0.c0)), 0.806060668404543));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((((((t0.c63)OR(t0.c63)))OR(t0.c63)))OR(t0.c63)))OR(t0.c63)) AS BLOB)) ORDER BY CASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) THEN t0.c63 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c63)OR(t0.c63)))OR(t0.c63)))OR(t0.c63)))OR(t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) THEN t0.c63 END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((((((t0.c63)OR(t0.c63)))OR(t0.c63)))OR(t0.c63)))OR(t0.c63)) AS BLOB)) ORDER BY CASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) THEN t0.c63 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c63)OR(t0.c63)))OR(t0.c63)))OR(t0.c63)))OR(t0.c63)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) THEN t0.c63 END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((((((t0.c63)OR(t0.c63)))OR(t0.c63)))OR(t0.c63)))OR(t0.c63)) AS BLOB)) ORDER BY CASE WHEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) THEN t0.c63 END ASC;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c63)*(-1.688391254E9))) NOTNULL) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c63)*(-1.688391254E9))) NOTNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c63)*(-1.688391254E9))) NOTNULL) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c63)*(-1.688391254E9))) NOTNULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c63)*(-1.688391254E9))) NOTNULL) WHERE ('');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c63 IN (t0.c63)) IN ())) ORDER BY ((((t0.c63)>>(t0.c63))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c63 IN (t0.c63)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63)>>(t0.c63))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c63 IN (t0.c63)) IN ())) ORDER BY ((((t0.c63)>>(t0.c63))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c63 IN (t0.c63)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c63)>>(t0.c63))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c63 IN (t0.c63)) IN ())) ORDER BY ((((t0.c63)>>(t0.c63))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c63);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN 0.9288905480453186 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') ISNULL) THEN 0.9288905480453186 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN 0.9288905480453186 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') ISNULL) THEN 0.9288905480453186 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN 0.9288905480453186 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63) ORDER BY ((((t0.c63)>>(vt0.c0))) BETWEEN ((((t0.c63)) BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((t0.c63) NOTNULL))), CASE NULL  WHEN '([6''0b' THEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) WHEN (NOT (t0.c63)) THEN (t0.c63 IN ()) WHEN vt0.c0 THEN LIKELIHOOD(t0.c63, 0.10132966588616032) END  NULLS LAST, t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63)>>(vt0.c0))) BETWEEN ((((t0.c63)) BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((t0.c63) NOTNULL))), CASE NULL  WHEN '([6''0b' THEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) WHEN (NOT (t0.c63)) THEN (t0.c63 IN ()) WHEN vt0.c0 THEN LIKELIHOOD(t0.c63, 0.10132966588616032) END  NULLS LAST, t0.c63 DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63) ORDER BY ((((t0.c63)>>(vt0.c0))) BETWEEN ((((t0.c63)) BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((t0.c63) NOTNULL))), CASE NULL  WHEN '([6''0b' THEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) WHEN (NOT (t0.c63)) THEN (t0.c63 IN ()) WHEN vt0.c0 THEN LIKELIHOOD(t0.c63, 0.10132966588616032) END  NULLS LAST, t0.c63 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c63) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63)>>(vt0.c0))) BETWEEN ((((t0.c63)) BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((t0.c63) NOTNULL))), CASE NULL  WHEN '([6''0b' THEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) WHEN (NOT (t0.c63)) THEN (t0.c63 IN ()) WHEN vt0.c0 THEN LIKELIHOOD(t0.c63, 0.10132966588616032) END  NULLS LAST, t0.c63 DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63) ORDER BY ((((t0.c63)>>(vt0.c0))) BETWEEN ((((t0.c63)) BETWEEN ((t0.c63)) AND ((vt0.c0)))) AND (((t0.c63) NOTNULL))), CASE NULL  WHEN '([6''0b' THEN ((t0.c63) NOT BETWEEN (t0.c63) AND (t0.c63)) WHEN (NOT (t0.c63)) THEN (t0.c63 IN ()) WHEN vt0.c0 THEN LIKELIHOOD(t0.c63, 0.10132966588616032) END  NULLS LAST, t0.c63 DESC;
SELECT ALL * FROM vt0, t0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 END) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 END) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 END) ISNULL);
SELECT * FROM t0 WHERE ((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))))IS((t0.c63 IN (t0.c63, t0.c63))))) ORDER BY ((t0.c63) ISNULL) DESC, ((((((((NULLIF(DISTINCT t0.c63, t0.c63))OR(((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))AND((t0.c63 IN ()))))OR(t0.c63)))OR(((t0.c63)<<(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))))IS((t0.c63 IN (t0.c63, t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63) ISNULL) DESC, ((((((((NULLIF(DISTINCT t0.c63, t0.c63))OR(((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))AND((t0.c63 IN ()))))OR(t0.c63)))OR(((t0.c63)<<(t0.c63)))));
SELECT * FROM t0 WHERE ((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))))IS((t0.c63 IN (t0.c63, t0.c63))))) ORDER BY ((t0.c63) ISNULL) DESC, ((((((((NULLIF(DISTINCT t0.c63, t0.c63))OR(((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))AND((t0.c63 IN ()))))OR(t0.c63)))OR(((t0.c63)<<(t0.c63))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))))IS((t0.c63 IN (t0.c63, t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63) ISNULL) DESC, ((((((((NULLIF(DISTINCT t0.c63, t0.c63))OR(((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))AND((t0.c63 IN ()))))OR(t0.c63)))OR(((t0.c63)<<(t0.c63)))));
SELECT * FROM t0 WHERE ((((((t0.c63, t0.c63, t0.c63)) BETWEEN ((t0.c63, t0.c63, t0.c63)) AND ((t0.c63, t0.c63, t0.c63))))IS((t0.c63 IN (t0.c63, t0.c63))))) ORDER BY ((t0.c63) ISNULL) DESC, ((((((((NULLIF(DISTINCT t0.c63, t0.c63))OR(((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))OR(t0.c63)))))AND((t0.c63 IN ()))))OR(t0.c63)))OR(((t0.c63)<<(t0.c63))));
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0.5018195769795458)))AND(NULL)) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0.5018195769795458)))AND(NULL)) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0.5018195769795458)))AND(NULL)) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0.5018195769795458)))AND(NULL)) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0.5018195769795458)))AND(NULL)) THEN ((vt0.c0) ISNULL) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c63) IS TRUE))AND(CAST(t0.c63 AS INTEGER))))AND(((t0.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c63) IS TRUE))AND(CAST(t0.c63 AS INTEGER))))AND(((t0.c63) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c63) IS TRUE))AND(CAST(t0.c63 AS INTEGER))))AND(((t0.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c63) IS TRUE))AND(CAST(t0.c63 AS INTEGER))))AND(((t0.c63) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c63) IS TRUE))AND(CAST(t0.c63 AS INTEGER))))AND(((t0.c63) IS FALSE))));
SELECT * FROM t0, vt0 WHERE (((CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)AND((((vt0.c0)) BETWEEN ((t0.c63)) AND ((t0.c63)))))) ORDER BY ((((t0.c63)||(t0.c63))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)AND((((vt0.c0)) BETWEEN ((t0.c63)) AND ((t0.c63)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63)||(t0.c63))) IS FALSE)  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)AND((((vt0.c0)) BETWEEN ((t0.c63)) AND ((t0.c63)))))) ORDER BY ((((t0.c63)||(t0.c63))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)AND((((vt0.c0)) BETWEEN ((t0.c63)) AND ((t0.c63)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c63)||(t0.c63))) IS FALSE)  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CASE WHEN t0.c63 THEN vt0.c0 ELSE t0.c63 END)AND((((vt0.c0)) BETWEEN ((t0.c63)) AND ((t0.c63)))))) ORDER BY ((((t0.c63)||(t0.c63))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)<>(t0.c63)), ((t0.c63)>(vt0.c0)), ((x'') NOT BETWEEN (t0.c63) AND (vt0.c0)), TIME(t0.c63, NULL, t0.c63), (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))), NULL COLLATE NOCASE, t0.c63))==((t0.c63 COLLATE NOCASE, ((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)), (+ (vt0.c0)), TIME(vt0.c0, vt0.c0, t0.c63), x'', t0.c63, ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<>(t0.c63)), ((t0.c63)>(vt0.c0)), ((x'') NOT BETWEEN (t0.c63) AND (vt0.c0)), TIME(t0.c63, NULL, t0.c63), (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))), NULL COLLATE NOCASE, t0.c63))=((t0.c63 COLLATE NOCASE, ((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)), (+ (vt0.c0)), TIME(vt0.c0, vt0.c0, t0.c63), x'', t0.c63, ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)<>(t0.c63)), ((t0.c63)>(vt0.c0)), ((x'') NOT BETWEEN (t0.c63) AND (vt0.c0)), TIME(t0.c63, NULL, t0.c63), (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))), NULL COLLATE NOCASE, t0.c63))==((t0.c63 COLLATE NOCASE, ((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)), (+ (vt0.c0)), TIME(vt0.c0, vt0.c0, t0.c63), x'', t0.c63, ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<>(t0.c63)), ((t0.c63)>(vt0.c0)), ((x'') NOT BETWEEN (t0.c63) AND (vt0.c0)), TIME(t0.c63, NULL, t0.c63), (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))), NULL COLLATE NOCASE, t0.c63))=((t0.c63 COLLATE NOCASE, ((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)), (+ (vt0.c0)), TIME(vt0.c0, vt0.c0, t0.c63), x'', t0.c63, ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)<>(t0.c63)), ((t0.c63)>(vt0.c0)), ((x'') NOT BETWEEN (t0.c63) AND (vt0.c0)), TIME(t0.c63, NULL, t0.c63), (((vt0.c0)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))), NULL COLLATE NOCASE, t0.c63))==((t0.c63 COLLATE NOCASE, ((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)), (+ (vt0.c0)), TIME(vt0.c0, vt0.c0, t0.c63), x'', t0.c63, ((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((t0.c63)OR(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY ((((COALESCE(DISTINCT vt0.c0, t0.c63))AND((- (x'')))))AND(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((t0.c63)OR(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((COALESCE(DISTINCT vt0.c0, t0.c63))AND((- (x'')))))AND(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((t0.c63)OR(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY ((((COALESCE(DISTINCT vt0.c0, t0.c63))AND((- (x'')))))AND(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((t0.c63)OR(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((COALESCE(DISTINCT vt0.c0, t0.c63))AND((- (x'')))))AND(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((t0.c63)OR(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) ORDER BY ((((COALESCE(DISTINCT vt0.c0, t0.c63))AND((- (x'')))))AND(((t0.c63) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY IFNULL(DISTINCT UNLIKELY(vt0.c0), ((vt0.c0) NOTNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY IFNULL(DISTINCT UNLIKELY(vt0.c0), ((vt0.c0) NOTNULL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY IFNULL(DISTINCT UNLIKELY(vt0.c0), ((vt0.c0) NOTNULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY IFNULL(DISTINCT UNLIKELY(vt0.c0), ((vt0.c0) NOTNULL)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((- (vt0.c0)) IN ())) ORDER BY IFNULL(DISTINCT UNLIKELY(vt0.c0), ((vt0.c0) NOTNULL)) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((((t0.c63)AND(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))OR(((t0.c63) NOT NULL)))) ORDER BY t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c63)AND(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))OR(((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c63 ASC);
SELECT * FROM t0 WHERE (((((((t0.c63)AND(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))OR(((t0.c63) NOT NULL)))) ORDER BY t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c63)AND(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))OR(((t0.c63) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c63 ASC);
SELECT * FROM t0 WHERE (((((((t0.c63)AND(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))OR(((t0.c63) NOT NULL)))) ORDER BY t0.c63 ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN (- (t0.c63)) THEN ((t0.c63)*(vt0.c0)) ELSE (NOT (t0.c63)) END WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((t0.c63)OR(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN (- (t0.c63)) THEN ((t0.c63)*(vt0.c0)) ELSE (NOT (t0.c63)) END ORDER BY (((t0.c63)OR(vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN (- (t0.c63)) THEN ((t0.c63)*(vt0.c0)) ELSE (NOT (t0.c63)) END WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((t0.c63)OR(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CASE WHEN (- (t0.c63)) THEN ((t0.c63)*(vt0.c0)) ELSE (NOT (t0.c63)) END ORDER BY (((t0.c63)OR(vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON CASE WHEN (- (t0.c63)) THEN ((t0.c63)*(vt0.c0)) ELSE (NOT (t0.c63)) END WHERE ((((t0.c63)) NOT BETWEEN ((t0.c63)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY (((t0.c63)OR(vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'f942') ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((x'f942') IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'f942') ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((x'f942') IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'f942') ORDER BY ((vt0.c0)%(vt0.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE DESC, CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE '1194011881'  WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)>(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE DESC, CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE '1194011881'  WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)>(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE DESC, CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE '1194011881'  WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)>(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE DESC, CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE '1194011881'  WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)>(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE DESC, CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CASE '1194011881'  WHEN vt0.c0 THEN vt0.c0 END WHEN NULL THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)>(vt0.c0)) END ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (x'' COLLATE NOCASE) ORDER BY (0.07750373675221056 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY (0.07750373675221056 IN ())  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (x'' COLLATE NOCASE) ORDER BY (0.07750373675221056 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY (0.07750373675221056 IN ())  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (x'' COLLATE NOCASE) ORDER BY (0.07750373675221056 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c63) ORDER BY NULLIF(DISTINCT LOWER(vt0.c0), (+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM vt0, t0 ORDER BY NULLIF(DISTINCT LOWER(vt0.c0), (+ (vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c63) ORDER BY NULLIF(DISTINCT LOWER(vt0.c0), (+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM vt0, t0 ORDER BY NULLIF(DISTINCT LOWER(vt0.c0), (+ (vt0.c0))));
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c63) ORDER BY NULLIF(DISTINCT LOWER(vt0.c0), (+ (vt0.c0)));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((t0.c63)-(t0.c63)))) WHERE ((((t0.c63 IN ()))*(((t0.c63) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ()))*(((t0.c63) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((t0.c63)-(t0.c63)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((t0.c63)-(t0.c63)))) WHERE ((((t0.c63 IN ()))*(((t0.c63) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN ()))*(((t0.c63) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((t0.c63)-(t0.c63)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (((t0.c63)-(t0.c63)))) WHERE ((((t0.c63 IN ()))*(((t0.c63) IS TRUE))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.7238064839414887)*(((((t0.c63)AND(t0.c63)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7238064839414887)*(((((t0.c63)AND(t0.c63)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.7238064839414887)*(((((t0.c63)AND(t0.c63)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7238064839414887)*(((((t0.c63)AND(t0.c63)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((0.7238064839414887)*(((((t0.c63)AND(t0.c63)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c63);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))==(CASE '-627826843'  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))AND(t0.c63 COLLATE RTRIM)))AND((- (t0.c63)))), (-1117940250 IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))=(CASE '-627826843'  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))AND(t0.c63 COLLATE RTRIM)))AND((- (t0.c63)))), (-1117940250 IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))==(CASE '-627826843'  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))AND(t0.c63 COLLATE RTRIM)))AND((- (t0.c63)))), (-1117940250 IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))=(CASE '-627826843'  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))AND(t0.c63 COLLATE RTRIM)))AND((- (t0.c63)))), (-1117940250 IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)OR(t0.c63)))OR(t0.c63)))==(CASE '-627826843'  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(t0.c63)))AND(t0.c63 COLLATE RTRIM)))AND((- (t0.c63)))), (-1117940250 IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))))OR((t0.c63 IN ())))) ORDER BY UNLIKELY(DISTINCT vt0.c0);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))))OR((t0.c63 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))))OR((t0.c63 IN ())))) ORDER BY UNLIKELY(DISTINCT vt0.c0);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))))OR((t0.c63 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))))OR((t0.c63 IN ())))) ORDER BY UNLIKELY(DISTINCT vt0.c0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c63) IS TRUE) THEN '-691381193' ELSE ((t0.c63)&(t0.c63)) END) ORDER BY ((((((t0.c63)|(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))AND(ABS(DISTINCT t0.c63)))  NULLS LAST, NULL, CAST((~ (t0.c63)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c63) IS TRUE) THEN '-691381193' ELSE ((t0.c63)&(t0.c63)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c63)|(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))AND(ABS(DISTINCT t0.c63)))  NULLS LAST, NULL, CAST((~ (t0.c63)) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c63) IS TRUE) THEN '-691381193' ELSE ((t0.c63)&(t0.c63)) END) ORDER BY ((((((t0.c63)|(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))AND(ABS(DISTINCT t0.c63)))  NULLS LAST, NULL, CAST((~ (t0.c63)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c63) IS TRUE) THEN '-691381193' ELSE ((t0.c63)&(t0.c63)) END) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c63)|(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))AND(ABS(DISTINCT t0.c63)))  NULLS LAST, NULL, CAST((~ (t0.c63)) AS TEXT) DESC);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c63) IS TRUE) THEN '-691381193' ELSE ((t0.c63)&(t0.c63)) END) ORDER BY ((((((t0.c63)|(t0.c63)))AND(((t0.c63) BETWEEN (t0.c63) AND (t0.c63)))))AND(ABS(DISTINCT t0.c63)))  NULLS LAST, NULL, CAST((~ (t0.c63)) AS TEXT) DESC;
SELECT COUNT(*) FROM vt0 INDEXED BY i86 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (x'2335bdf0') AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS BLOB))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i86 ORDER BY ((((vt0.c0) NOT BETWEEN (x'2335bdf0') AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 INDEXED BY i86 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (x'2335bdf0') AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS BLOB))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i86 ORDER BY ((((vt0.c0) NOT BETWEEN (x'2335bdf0') AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((LOWER(vt0.c0)))<=((CAST(vt0.c0 AS TEXT))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(vt0.c0)))<=((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((LOWER(vt0.c0)))<=((CAST(vt0.c0 AS TEXT))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((LOWER(vt0.c0)))<=((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((LOWER(vt0.c0)))<=((CAST(vt0.c0 AS TEXT))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((~ (t0.c63)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (t0.c63)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((~ (t0.c63)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (t0.c63)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE ((~ (t0.c63)) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((((((t0.c63)<=(t0.c63)))AND((+ (t0.c63)))))AND((((t0.c63))<((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63)<=(t0.c63)))AND((+ (t0.c63)))))AND((((t0.c63))<((NULL)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c63)<=(t0.c63)))AND((+ (t0.c63)))))AND((((t0.c63))<((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c63)<=(t0.c63)))AND((+ (t0.c63)))))AND((((t0.c63))<((NULL)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c63)<=(t0.c63)))AND((+ (t0.c63)))))AND((((t0.c63))<((NULL))))));
SELECT * FROM t0, vt0 WHERE (((t0.c63)==(t0.c63 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)=(t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c63)==(t0.c63 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c63)=(t0.c63 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c63)==(t0.c63 COLLATE NOCASE)));
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'');
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (LIKELIHOOD(DISTINCT -127982184, 0.6044904791621177));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT -127982184, 0.6044904791621177)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (LIKELIHOOD(DISTINCT -127982184, 0.6044904791621177));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT -127982184, 0.6044904791621177)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (LIKELIHOOD(DISTINCT -127982184, 0.6044904791621177));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c63) IS TRUE)) NOT NULL)) ORDER BY ((vt0.c0) BETWEEN (((0.9674039918312392)AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END)) ASC  NULLS LAST, (((((((t0.c63)AND(t0.c63)))AND(t0.c63))))<((x'6e71')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) BETWEEN (((0.9674039918312392)AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END)) ASC  NULLS LAST, (((((((t0.c63)AND(t0.c63)))AND(t0.c63))))<((x'6e71'))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c63) IS TRUE)) NOT NULL)) ORDER BY ((vt0.c0) BETWEEN (((0.9674039918312392)AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END)) ASC  NULLS LAST, (((((((t0.c63)AND(t0.c63)))AND(t0.c63))))<((x'6e71')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c63) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) BETWEEN (((0.9674039918312392)AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END)) ASC  NULLS LAST, (((((((t0.c63)AND(t0.c63)))AND(t0.c63))))<((x'6e71'))));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c63) IS TRUE)) NOT NULL)) ORDER BY ((vt0.c0) BETWEEN (((0.9674039918312392)AND(vt0.c0))) AND (CASE WHEN vt0.c0 THEN t0.c63 ELSE vt0.c0 END)) ASC  NULLS LAST, (((((((t0.c63)AND(t0.c63)))AND(t0.c63))))<((x'6e71')));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'8ff0')*(vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE COALESCE(0.4526796372518943, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'8ff0')*(vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE COALESCE(0.4526796372518943, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'8ff0')*(vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE COALESCE(0.4526796372518943, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'8ff0')*(vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE COALESCE(0.4526796372518943, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'8ff0')*(vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt0.c0 ELSE COALESCE(0.4526796372518943, vt0.c0) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(('-1332252676' IN (t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-1332252676' IN (t0.c63)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(('-1332252676' IN (t0.c63)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-1332252676' IN (t0.c63)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(('-1332252676' IN (t0.c63)) AS TEXT));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)AND(CASE WHEN t0.c63 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)) WHERE (CAST(((((t0.c63)OR(t0.c63)))OR(t0.c63)) AS REAL)) ORDER BY ((((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63)))OR(t0.c63))) NOT BETWEEN ((t0.c63 IN ())) AND ((+ (vt0.c0)))) DESC, ((CAST(vt0.c0 AS INTEGER))*(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN x'1e07' THEN vt0.c0 ELSE 0.1674257616387287 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c63)OR(t0.c63)))OR(t0.c63)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)AND(CASE WHEN t0.c63 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)) ORDER BY ((((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63)))OR(t0.c63))) NOT BETWEEN ((t0.c63 IN ())) AND ((+ (vt0.c0)))) DESC, ((CAST(vt0.c0 AS INTEGER))*(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN x'1e07' THEN vt0.c0 ELSE 0.1674257616387287 END)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)AND(CASE WHEN t0.c63 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)) WHERE (CAST(((((t0.c63)OR(t0.c63)))OR(t0.c63)) AS REAL)) ORDER BY ((((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63)))OR(t0.c63))) NOT BETWEEN ((t0.c63 IN ())) AND ((+ (vt0.c0)))) DESC, ((CAST(vt0.c0 AS INTEGER))*(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN x'1e07' THEN vt0.c0 ELSE 0.1674257616387287 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c63)OR(t0.c63)))OR(t0.c63)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)AND(CASE WHEN t0.c63 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)) ORDER BY ((((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63)))OR(t0.c63))) NOT BETWEEN ((t0.c63 IN ())) AND ((+ (vt0.c0)))) DESC, ((CAST(vt0.c0 AS INTEGER))*(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN x'1e07' THEN vt0.c0 ELSE 0.1674257616387287 END)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((CASE t0.c63  WHEN t0.c63 THEN t0.c63 END)AND(CASE WHEN t0.c63 THEN vt0.c0 END)))AND(vt0.c0 COLLATE NOCASE)) WHERE (CAST(((((t0.c63)OR(t0.c63)))OR(t0.c63)) AS REAL)) ORDER BY ((((((((((t0.c63)AND(vt0.c0)))OR(vt0.c0)))AND(t0.c63)))OR(t0.c63))) NOT BETWEEN ((t0.c63 IN ())) AND ((+ (vt0.c0)))) DESC, ((CAST(vt0.c0 AS INTEGER))*(CASE WHEN t0.c63 THEN vt0.c0 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c63 WHEN x'1e07' THEN vt0.c0 ELSE 0.1674257616387287 END));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY ((t0.c63 COLLATE RTRIM)&(((t0.c63)-(t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63 COLLATE RTRIM)&(((t0.c63)-(t0.c63))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY ((t0.c63 COLLATE RTRIM)&(((t0.c63)-(t0.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0 ORDER BY ((t0.c63 COLLATE RTRIM)&(((t0.c63)-(t0.c63))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63) ORDER BY ((t0.c63 COLLATE RTRIM)&(((t0.c63)-(t0.c63))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c63 IN (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c63 IN (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c63 IN (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c63 IN (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63 COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t0.c63 COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c63 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) NOT NULL));
SELECT * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT vt0.c0)) ORDER BY ((t0.c63 IN (vt0.c0, t0.c63)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c63 IN (vt0.c0, t0.c63)) IN ())  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT vt0.c0)) ORDER BY ((t0.c63 IN (vt0.c0, t0.c63)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c63 IN (vt0.c0, t0.c63)) IN ())  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (UNLIKELY(DISTINCT vt0.c0)) ORDER BY ((t0.c63 IN (vt0.c0, t0.c63)) IN ())  NULLS LAST;
SELECT ALL * FROM t0 INDEXED BY i99, vt0 WHERE (((((((vt0.c0) IS TRUE))OR((((t0.c63))<((-1502274092))))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR((((t0.c63))<((-1502274092))))))AND((- (vt0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i99, vt0);
SELECT ALL * FROM t0 INDEXED BY i99, vt0 WHERE (((((((vt0.c0) IS TRUE))OR((((t0.c63))<((-1502274092))))))AND((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR((((t0.c63))<((-1502274092))))))AND((- (vt0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i99, vt0);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 END)>('-393634932')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 END)>('-393634932')));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 END)>('-393634932')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 END)>('-393634932')));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON ((CASE t0.c63  WHEN vt0.c0 THEN vt0.c0 END)>('-393634932')) WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((('M3GN''_y')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY (~ ((((vt0.c0, ']D', vt0.c0)) BETWEEN ((vt0.c0, 0.736141415038022, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((('M3GN''_y')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0, ']D', vt0.c0)) BETWEEN ((vt0.c0, 0.736141415038022, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE ((((('M3GN''_y')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY (~ ((((vt0.c0, ']D', vt0.c0)) BETWEEN ((vt0.c0, 0.736141415038022, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((('M3GN''_y')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0, ']D', vt0.c0)) BETWEEN ((vt0.c0, 0.736141415038022, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE ((((('M3GN''_y')AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) ORDER BY (~ ((((vt0.c0, ']D', vt0.c0)) BETWEEN ((vt0.c0, 0.736141415038022, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, CASE ((vt0.c0) ISNULL)  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC;
SELECT COUNT(*) FROM t0 WHERE (1499174971) ORDER BY (NOT (((((((((t0.c63)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1499174971) IS TRUE)  as count FROM t0 ORDER BY (NOT (((((((((t0.c63)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (1499174971) ORDER BY (NOT (((((((((t0.c63)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1499174971) IS TRUE)  as count FROM t0 ORDER BY (NOT (((((((((t0.c63)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (1499174971) ORDER BY (NOT (((((((((t0.c63)AND(t0.c63)))OR(t0.c63)))AND(t0.c63)))OR(t0.c63)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((x'')OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(((((((((t0.c63)OR(t0.c63)))OR(x'177a')))AND(t0.c63)))OR(vt0.c0)))))OR(t0.c63)))AND((((vt0.c0, t0.c63, t0.c63))<=((t0.c63, vt0.c0, t0.c63))))) WHERE ((~ (LTRIM(t0.c63))));
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(t0.c63)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((x'')OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(((((((((t0.c63)OR(t0.c63)))OR(x'177a')))AND(t0.c63)))OR(vt0.c0)))))OR(t0.c63)))AND((((vt0.c0, t0.c63, t0.c63))<=((t0.c63, vt0.c0, t0.c63))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((x'')OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(((((((((t0.c63)OR(t0.c63)))OR(x'177a')))AND(t0.c63)))OR(vt0.c0)))))OR(t0.c63)))AND((((vt0.c0, t0.c63, t0.c63))<=((t0.c63, vt0.c0, t0.c63))))) WHERE ((~ (LTRIM(t0.c63))));
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(t0.c63)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((x'')OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(((((((((t0.c63)OR(t0.c63)))OR(x'177a')))AND(t0.c63)))OR(vt0.c0)))))OR(t0.c63)))AND((((vt0.c0, t0.c63, t0.c63))<=((t0.c63, vt0.c0, t0.c63))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((x'')OR((((t0.c63)) NOT BETWEEN ((vt0.c0)) AND ((t0.c63))))))OR(((((((((t0.c63)OR(t0.c63)))OR(x'177a')))AND(t0.c63)))OR(vt0.c0)))))OR(t0.c63)))AND((((vt0.c0, t0.c63, t0.c63))<=((t0.c63, vt0.c0, t0.c63))))) WHERE ((~ (LTRIM(t0.c63))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB))-((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0Xfffffffff85f2598, t0.c63, NULL)) AND ((t0.c63, t0.c63, vt0.c0)))))) ORDER BY 0.7037177242280771;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))-((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0xfffffffff85f2598, t0.c63, NULL)) AND ((t0.c63, t0.c63, vt0.c0)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY 0.7037177242280771);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB))-((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0Xfffffffff85f2598, t0.c63, NULL)) AND ((t0.c63, t0.c63, vt0.c0)))))) ORDER BY 0.7037177242280771;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))-((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0xfffffffff85f2598, t0.c63, NULL)) AND ((t0.c63, t0.c63, vt0.c0)))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY 0.7037177242280771);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB))-((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0Xfffffffff85f2598, t0.c63, NULL)) AND ((t0.c63, t0.c63, vt0.c0)))))) ORDER BY 0.7037177242280771;
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((LIKELIHOOD(0.6314701903560803, 0.963837704357708))AND(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(0.6314701903560803, 0.963837704357708))AND(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((LIKELIHOOD(0.6314701903560803, 0.963837704357708))AND(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(0.6314701903560803, 0.963837704357708))AND(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((LIKELIHOOD(0.6314701903560803, 0.963837704357708))AND(((vt0.c0) IS TRUE))) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63) ISNULL) IN ((t0.c63 IN (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY (((((((((t0.c63 IN ()))AND((+ (t0.c63)))))AND(((t0.c63)+(t0.c63)))))AND(((t0.c63)|(t0.c63)))))OR((t0.c63 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c63) ISNULL) IN ((t0.c63 IN (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c63 IN ()))AND((+ (t0.c63)))))AND(((t0.c63)+(t0.c63)))))AND(((t0.c63)|(t0.c63)))))OR((t0.c63 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63) ISNULL) IN ((t0.c63 IN (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY (((((((((t0.c63 IN ()))AND((+ (t0.c63)))))AND(((t0.c63)+(t0.c63)))))AND(((t0.c63)|(t0.c63)))))OR((t0.c63 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c63) ISNULL) IN ((t0.c63 IN (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c63 IN ()))AND((+ (t0.c63)))))AND(((t0.c63)+(t0.c63)))))AND(((t0.c63)|(t0.c63)))))OR((t0.c63 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c63) ISNULL) IN ((t0.c63 IN (t0.c63)), CASE t0.c63  WHEN t0.c63 THEN t0.c63 ELSE t0.c63 END))) ORDER BY (((((((((t0.c63 IN ()))AND((+ (t0.c63)))))AND(((t0.c63)+(t0.c63)))))AND(((t0.c63)|(t0.c63)))))OR((t0.c63 IN ()))) ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c63 WHERE ((((vt0.c0 IN ()))LIKE(((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c63);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c63 WHERE ((((vt0.c0 IN ()))LIKE(((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON t0.c63);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON t0.c63 WHERE ((((vt0.c0 IN ()))LIKE(((vt0.c0) BETWEEN (t0.c63) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c63 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c63 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c63 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c63 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c63 AS TEXT) AS NUMERIC));
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE WHEN ((t0.c63)<>(vt0.c0)) THEN ((('2059470767'))<((vt0.c0))) WHEN ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)) THEN (('-27256741') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN t0.c63 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) END WHERE ((NOT (((NULL)LIKE(t0.c63))))) ORDER BY (CASE vt0.c0  WHEN t0.c63 THEN '847954305' WHEN vt0.c0 THEN 'x8랶+' WHEN t0.c63 THEN t0.c63 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)LIKE(t0.c63))))) IS TRUE)  as count FROM t0 NOT INDEXED INNER JOIN vt0 ON CASE WHEN ((t0.c63)<>(vt0.c0)) THEN ((('2059470767'))<((vt0.c0))) WHEN ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)) THEN (('-27256741') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN t0.c63 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) END ORDER BY (CASE vt0.c0  WHEN t0.c63 THEN '847954305' WHEN vt0.c0 THEN 'x8랶+' WHEN t0.c63 THEN t0.c63 END IN ()) DESC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE WHEN ((t0.c63)<>(vt0.c0)) THEN ((('2059470767'))<((vt0.c0))) WHEN ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)) THEN (('-27256741') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN t0.c63 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) END WHERE ((NOT (((NULL)LIKE(t0.c63))))) ORDER BY (CASE vt0.c0  WHEN t0.c63 THEN '847954305' WHEN vt0.c0 THEN 'x8랶+' WHEN t0.c63 THEN t0.c63 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)LIKE(t0.c63))))) IS TRUE)  as count FROM t0 NOT INDEXED INNER JOIN vt0 ON CASE WHEN ((t0.c63)<>(vt0.c0)) THEN ((('2059470767'))<((vt0.c0))) WHEN ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)) THEN (('-27256741') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN t0.c63 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) END ORDER BY (CASE vt0.c0  WHEN t0.c63 THEN '847954305' WHEN vt0.c0 THEN 'x8랶+' WHEN t0.c63 THEN t0.c63 END IN ()) DESC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON CASE WHEN ((t0.c63)<>(vt0.c0)) THEN ((('2059470767'))<((vt0.c0))) WHEN ((t0.c63) BETWEEN (t0.c63) AND (vt0.c0)) THEN (('-27256741') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN t0.c63 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (t0.c63) AND (t0.c63)) END WHERE ((NOT (((NULL)LIKE(t0.c63))))) ORDER BY (CASE vt0.c0  WHEN t0.c63 THEN '847954305' WHEN vt0.c0 THEN 'x8랶+' WHEN t0.c63 THEN t0.c63 END IN ()) DESC;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((('Z7')%(x''))) BETWEEN (CAST(t0.c63 AS TEXT)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((('Z7')%(x''))) BETWEEN (CAST(t0.c63 AS TEXT)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((('Z7')%(x''))) BETWEEN (CAST(t0.c63 AS TEXT)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((('Z7')%(x''))) BETWEEN (CAST(t0.c63 AS TEXT)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((('Z7')%(x''))) BETWEEN (CAST(t0.c63 AS TEXT)) AND (vt0.c0 COLLATE BINARY)));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (load_extension((- (vt0.c0)))) ORDER BY t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((- (vt0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY t0.c63 ASC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (load_extension((- (vt0.c0)))) ORDER BY t0.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((- (vt0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY t0.c63 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'') ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'') ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'') ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(((NULL)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((NULL)IS NOT(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(((NULL)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((NULL)IS NOT(vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(((NULL)IS NOT(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE (CAST(x'' AS INTEGER)) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY, load_extension(load_extension(t0.c63))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST((NOT (vt0.c0)) AS BLOB) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY, load_extension(load_extension(t0.c63))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE (CAST(x'' AS INTEGER)) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY, load_extension(load_extension(t0.c63))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST((NOT (vt0.c0)) AS BLOB) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY, load_extension(load_extension(t0.c63))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (CASE vt0.c0  WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN t0.c63 WHEN t0.c63 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((IFNULL(DISTINCT vt0.c0, vt0.c0) IN (((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT vt0.c0, vt0.c0) IN (((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((IFNULL(DISTINCT vt0.c0, vt0.c0) IN (((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT vt0.c0, vt0.c0) IN (((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((IFNULL(DISTINCT vt0.c0, vt0.c0) IN (((t0.c63) NOT BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1502274092'))) AND (((vt0.c0)||(t0.c63))))) ORDER BY (((CAST(t0.c63 AS BLOB)))>=(((vt0.c0 IN ()))))  NULLS FIRST, (((~ (vt0.c0)))IS NOT('-1657832979')) ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1502274092'))) AND (((vt0.c0)||(t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((CAST(t0.c63 AS BLOB)))>=(((vt0.c0 IN ()))))  NULLS FIRST, (((~ (vt0.c0)))IS NOT('-1657832979')) ASC  NULLS FIRST, vt0.c0 DESC);
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1502274092'))) AND (((vt0.c0)||(t0.c63))))) ORDER BY (((CAST(t0.c63 AS BLOB)))>=(((vt0.c0 IN ()))))  NULLS FIRST, (((~ (vt0.c0)))IS NOT('-1657832979')) ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1502274092'))) AND (((vt0.c0)||(t0.c63))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((CAST(t0.c63 AS BLOB)))>=(((vt0.c0 IN ()))))  NULLS FIRST, (((~ (vt0.c0)))IS NOT('-1657832979')) ASC  NULLS FIRST, vt0.c0 DESC);
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1502274092'))) AND (((vt0.c0)||(t0.c63))))) ORDER BY (((CAST(t0.c63 AS BLOB)))>=(((vt0.c0 IN ()))))  NULLS FIRST, (((~ (vt0.c0)))IS NOT('-1657832979')) ASC  NULLS FIRST, vt0.c0 DESC;
SELECT COUNT(*) FROM t0 WHERE (('-1833752637' IN (((t0.c63)*(t0.c63))))) ORDER BY ((LIKELY(DISTINCT t0.c63))OR((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))!=((t0.c63, -1.6310375E9, t0.c63, t0.c63, t0.c63))))) DESC, CAST(CAST(t0.c63 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-1833752637' IN (((t0.c63)*(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY ((LIKELY(DISTINCT t0.c63))OR((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))!=((t0.c63, -1.6310375E9, t0.c63, t0.c63, t0.c63))))) DESC, CAST(CAST(t0.c63 AS BLOB) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (('-1833752637' IN (((t0.c63)*(t0.c63))))) ORDER BY ((LIKELY(DISTINCT t0.c63))OR((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))!=((t0.c63, -1.6310375E9, t0.c63, t0.c63, t0.c63))))) DESC, CAST(CAST(t0.c63 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-1833752637' IN (((t0.c63)*(t0.c63))))) IS TRUE)  as count FROM t0 ORDER BY ((LIKELY(DISTINCT t0.c63))OR((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))!=((t0.c63, -1.6310375E9, t0.c63, t0.c63, t0.c63))))) DESC, CAST(CAST(t0.c63 AS BLOB) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (('-1833752637' IN (((t0.c63)*(t0.c63))))) ORDER BY ((LIKELY(DISTINCT t0.c63))OR((((t0.c63, t0.c63, t0.c63, t0.c63, t0.c63))!=((t0.c63, -1.6310375E9, t0.c63, t0.c63, t0.c63))))) DESC, CAST(CAST(t0.c63 AS BLOB) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c63 AS BLOB)))) ORDER BY (((t0.c63)) NOT BETWEEN ((((t0.c63) ISNULL))) AND (((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c63 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63)) NOT BETWEEN ((((t0.c63) ISNULL))) AND (((t0.c63 IN ())))));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c63 AS BLOB)))) ORDER BY (((t0.c63)) NOT BETWEEN ((((t0.c63) ISNULL))) AND (((t0.c63 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c63 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c63)) NOT BETWEEN ((((t0.c63) ISNULL))) AND (((t0.c63 IN ())))));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c63 AS BLOB)))) ORDER BY (((t0.c63)) NOT BETWEEN ((((t0.c63) ISNULL))) AND (((t0.c63 IN ()))));
SELECT * FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c63);
SELECT SUM(count) FROM (SELECT ((t0.c63) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c63);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)=(vt0.c0)) COLLATE BINARY WHERE (((CAST(t0.c63 AS REAL)) ISNULL)) ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNLIKELY(t0.c63)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)==(vt0.c0)) COLLATE BINARY ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNLIKELY(t0.c63)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)=(vt0.c0)) COLLATE BINARY WHERE (((CAST(t0.c63 AS REAL)) ISNULL)) ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNLIKELY(t0.c63)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c63 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)==(vt0.c0)) COLLATE BINARY ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNLIKELY(t0.c63)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0)=(vt0.c0)) COLLATE BINARY WHERE (((CAST(t0.c63 AS REAL)) ISNULL)) ORDER BY (+ ((~ (vt0.c0)))) DESC  NULLS FIRST, ((UNLIKELY(t0.c63)) IS TRUE);
SELECT * FROM vt0 INDEXED BY i89, t0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INDEXED BY i89, t0);
SELECT * FROM vt0 INDEXED BY i89, t0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INDEXED BY i89, t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE(CAST(t0.c63 AS NUMERIC))) ORDER BY ((((((t0.c63)AND(t0.c63)))OR(t0.c63)))+((- (t0.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((QUOTE(CAST(t0.c63 AS NUMERIC))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c63)AND(t0.c63)))OR(t0.c63)))+((- (t0.c63))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (QUOTE(CAST(t0.c63 AS NUMERIC))) ORDER BY ((((((t0.c63)AND(t0.c63)))OR(t0.c63)))+((- (t0.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((QUOTE(CAST(t0.c63 AS NUMERIC))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c63)AND(t0.c63)))OR(t0.c63)))+((- (t0.c63))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (QUOTE(CAST(t0.c63 AS NUMERIC))) ORDER BY ((((((t0.c63)AND(t0.c63)))OR(t0.c63)))+((- (t0.c63))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((('941826193')OR(t0.c63)))>(CASE WHEN x'610e' THEN t0.c63 WHEN x'2ce7' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))) ORDER BY ((CASE WHEN t0.c63 THEN 'B䑎f濼SD3' WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 ELSE t0.c63 END)>>((- (t0.c63)))) DESC  NULLS LAST, CASE WHEN ((t0.c63) NOTNULL) THEN CAST(t0.c63 AS BLOB) WHEN t0.c63 COLLATE BINARY THEN ((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))AND(t0.c63)))AND(t0.c63)) WHEN t0.c63 COLLATE NOCASE THEN t0.c63 COLLATE BINARY WHEN (~ (t0.c63)) THEN LIKE(t0.c63, t0.c63, '4') WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN LIKELY(DISTINCT t0.c63) END, (t0.c63 IN ('950088597' COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((('941826193')OR(t0.c63)))>(CASE WHEN x'610e' THEN t0.c63 WHEN x'2ce7' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c63 THEN 'B䑎f濼SD3' WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 ELSE t0.c63 END)>>((- (t0.c63)))) DESC  NULLS LAST, CASE WHEN ((t0.c63) NOTNULL) THEN CAST(t0.c63 AS BLOB) WHEN t0.c63 COLLATE BINARY THEN ((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))AND(t0.c63)))AND(t0.c63)) WHEN t0.c63 COLLATE NOCASE THEN t0.c63 COLLATE BINARY WHEN (~ (t0.c63)) THEN LIKE(t0.c63, t0.c63, '4') WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN LIKELY(DISTINCT t0.c63) END, (t0.c63 IN ('950088597' COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((('941826193')OR(t0.c63)))>(CASE WHEN x'610e' THEN t0.c63 WHEN x'2ce7' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))) ORDER BY ((CASE WHEN t0.c63 THEN 'B䑎f濼SD3' WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 ELSE t0.c63 END)>>((- (t0.c63)))) DESC  NULLS LAST, CASE WHEN ((t0.c63) NOTNULL) THEN CAST(t0.c63 AS BLOB) WHEN t0.c63 COLLATE BINARY THEN ((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))AND(t0.c63)))AND(t0.c63)) WHEN t0.c63 COLLATE NOCASE THEN t0.c63 COLLATE BINARY WHEN (~ (t0.c63)) THEN LIKE(t0.c63, t0.c63, '4') WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN LIKELY(DISTINCT t0.c63) END, (t0.c63 IN ('950088597' COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((('941826193')OR(t0.c63)))>(CASE WHEN x'610e' THEN t0.c63 WHEN x'2ce7' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c63 THEN 'B䑎f濼SD3' WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 ELSE t0.c63 END)>>((- (t0.c63)))) DESC  NULLS LAST, CASE WHEN ((t0.c63) NOTNULL) THEN CAST(t0.c63 AS BLOB) WHEN t0.c63 COLLATE BINARY THEN ((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))AND(t0.c63)))AND(t0.c63)) WHEN t0.c63 COLLATE NOCASE THEN t0.c63 COLLATE BINARY WHEN (~ (t0.c63)) THEN LIKE(t0.c63, t0.c63, '4') WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN LIKELY(DISTINCT t0.c63) END, (t0.c63 IN ('950088597' COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((('941826193')OR(t0.c63)))>(CASE WHEN x'610e' THEN t0.c63 WHEN x'2ce7' THEN t0.c63 WHEN t0.c63 THEN t0.c63 END))) ORDER BY ((CASE WHEN t0.c63 THEN 'B䑎f濼SD3' WHEN t0.c63 THEN t0.c63 WHEN NULL THEN t0.c63 ELSE t0.c63 END)>>((- (t0.c63)))) DESC  NULLS LAST, CASE WHEN ((t0.c63) NOTNULL) THEN CAST(t0.c63 AS BLOB) WHEN t0.c63 COLLATE BINARY THEN ((((((((t0.c63)OR(t0.c63)))AND(t0.c63)))AND(t0.c63)))AND(t0.c63)) WHEN t0.c63 COLLATE NOCASE THEN t0.c63 COLLATE BINARY WHEN (~ (t0.c63)) THEN LIKE(t0.c63, t0.c63, '4') WHEN (t0.c63 IN (t0.c63, t0.c63)) THEN LIKELY(DISTINCT t0.c63) END, (t0.c63 IN ('950088597' COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE ((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('')AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))>=(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((json_quote(NULL), ((((((((t0.c63)OR(0.2025989459997244)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((0.1706554850441)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((vt0.c0) NOT NULL))))) ORDER BY -2.115736883E9 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((json_quote(NULL), ((((((((t0.c63)OR(0.2025989459997244)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((0.1706554850441)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY -2.115736883E9 DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((json_quote(NULL), ((((((((t0.c63)OR(0.2025989459997244)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((0.1706554850441)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((vt0.c0) NOT NULL))))) ORDER BY -2.115736883E9 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((json_quote(NULL), ((((((((t0.c63)OR(0.2025989459997244)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((0.1706554850441)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY -2.115736883E9 DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((json_quote(NULL), ((((((((t0.c63)OR(0.2025989459997244)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((((0.1706554850441)|(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c63)), ((vt0.c0) NOT NULL))))) ORDER BY -2.115736883E9 DESC;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) NOT BETWEEN (((t0.c63)=(t0.c63))) AND (((vt0.c0)%(vt0.c0)))) WHERE ((- (((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c63) BETWEEN (vt0.c0) AND (t0.c63))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) NOT BETWEEN (((t0.c63)=(t0.c63))) AND (((vt0.c0)%(vt0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) NOT BETWEEN (((t0.c63)=(t0.c63))) AND (((vt0.c0)%(vt0.c0)))) WHERE ((- (((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c63) BETWEEN (vt0.c0) AND (t0.c63))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) NOT BETWEEN (((t0.c63)=(t0.c63))) AND (((vt0.c0)%(vt0.c0)))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c63) AND (t0.c63))) NOT BETWEEN (((t0.c63)=(t0.c63))) AND (((vt0.c0)%(vt0.c0)))) WHERE ((- (((t0.c63) BETWEEN (vt0.c0) AND (t0.c63)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((json_array_length(vt0.c0, x'')))>=((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((json_array_length(vt0.c0, x'')))>=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((json_array_length(vt0.c0, x'')))>=((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((json_array_length(vt0.c0, x'')))>=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(vt0.c0 COLLATE NOCASE)))AND(t0.c63)) WHERE ((((((vt0.c0)OR(t0.c63)))AND(vt0.c0)) IN (json_array_length(vt0.c0)))) ORDER BY (NOT (HEX(t0.c63)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(t0.c63)))AND(vt0.c0)) IN (json_array_length(vt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(vt0.c0 COLLATE NOCASE)))AND(t0.c63)) ORDER BY (NOT (HEX(t0.c63)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(vt0.c0 COLLATE NOCASE)))AND(t0.c63)) WHERE ((((((vt0.c0)OR(t0.c63)))AND(vt0.c0)) IN (json_array_length(vt0.c0)))) ORDER BY (NOT (HEX(t0.c63)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(t0.c63)))AND(vt0.c0)) IN (json_array_length(vt0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(vt0.c0 COLLATE NOCASE)))AND(t0.c63)) ORDER BY (NOT (HEX(t0.c63)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(vt0.c0 COLLATE NOCASE)))AND(t0.c63)) WHERE ((((((vt0.c0)OR(t0.c63)))AND(vt0.c0)) IN (json_array_length(vt0.c0)))) ORDER BY (NOT (HEX(t0.c63)))  NULLS FIRST;
