-- Time: 2024/06/09 14:43:26
-- Database: database6
-- Database version: 3.40.0
-- seed value: 869354406
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 TEXT ); -- 1ms;
PRAGMA main.incremental_vacuum; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19282'); -- 1ms;
INSERT OR FAIL INTO rt1(c0, c1, c3, c2) VALUES (x'', 0.3754912218295152, 1620504437, NULL), (x'', NULL, '-1554135988', 617286343), (NULL, NULL, NULL, '0.3754912218295152'); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c3, c1) VALUES ((('\rQ' COLLATE NOCASE)&(0.42343574932837313 COLLATE RTRIM)), '617286343', NULL); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.cell_size_check; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='hQ>' WHERE ((vt0.c1)>>(vt0.c0)) COLLATE RTRIM; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 TEXT ); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c0) VALUES (252755869, '252755869'), ('-1653078702', x'2393'), (x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1621558605 unordered noskipscan'); -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 318751882); -- 1ms;
UPDATE rt1 SET c1='-1554135988'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '145'); -- 1ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES ('617286343', x''), ('\rq', '-1805167228'), (NULL, NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 0.41877983515218664); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-2078136858,9');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (NULL, 0.46351502790404875), (((x'abc0e9cb' IN ()) IN ()), '\rq'), (-1653078702, x'9713'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (x'', x''); -- 0ms;
UPDATE vt0 SET c0=6.17286343E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
UPDATE rt1 SET c3='7}q{'; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=974104595,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET (c1)=(NULL) WHERE (NOT (CAST(vt0.c0 AS BLOB))); -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DROP TABLE rt1; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.5918462166637039, c1=x'3096' WHERE CAST((- (vt0.c0)) AS BLOB); -- 0ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='7}q{' WHERE (((((rt0.c3 IN (rt0.c0)))AND(rt0.c3)))OR((((rt0.c1))<=((rt0.c4))))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('5kT銾ㅛZx', x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=('Kl\b<%n	', '-884876609', x'b7ae19a0') WHERE (((((0.1492628391634786))<>((vt0.c0))))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=x'9c3c' WHERE (('252755869')>=(((vt0.c0)||(vt0.c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x'', c0='', c0='1620504437' WHERE ((SUBSTR(vt0.c0, vt0.c1))>(((vt0.c0) IS FALSE))); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (x'', x''), (x'', x'282c'), (0.6109206036095373, '-884876609'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(x'', x'') WHERE ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(x'')))AND(json_type(vt0.c0))); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
PRAGMA threads; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1021875565,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1769082738);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA default_cache_size = -568020222; -- 1ms;
PRAGMA main.defer_foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1141822020); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT rt0 SET (c0, c0, c4)=(x'', x'5d4a', x'd484') WHERE (('')|(((rt0.c2)%(rt0.c1)))); -- 11ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 1ms;
UPDATE rt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58456'); -- 1ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)AND(vt0.c1))) IS FALSE)) ORDER BY CASE (((rt0.c0)) BETWEEN ((411520474)) AND ((rt0.c0)))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (((rt0.c0)) BETWEEN ((411520474)) AND ((rt0.c0)))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END END);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)AND(vt0.c1))) IS FALSE)) ORDER BY CASE (((rt0.c0)) BETWEEN ((411520474)) AND ((rt0.c0)))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE (((rt0.c0)) BETWEEN ((411520474)) AND ((rt0.c0)))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END END);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)AND(vt0.c1))) IS FALSE)) ORDER BY CASE (((rt0.c0)) BETWEEN ((411520474)) AND ((rt0.c0)))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END END;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE (NOT (t0.c0))  WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)!=(0.4496406800326954)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c0))  WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)!=(0.4496406800326954)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE (NOT (t0.c0))  WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)!=(0.4496406800326954)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c0))  WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)!=(0.4496406800326954)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE (NOT (t0.c0))  WHEN ((t0.c0) IS FALSE) THEN ((t0.c0)!=(0.4496406800326954)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((0.36016636397818336 IN (rt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1)!=(x'')))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((0.36016636397818336 IN (rt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1)<>(x'')))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((0.36016636397818336 IN (rt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1)!=(x'')))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((0.36016636397818336 IN (rt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1)<>(x'')))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((0.36016636397818336 IN (rt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1)!=(x'')))) WHERE (x'');
SELECT ALL * FROM t0, rt0 WHERE (UNLIKELY(DISTINCT rt0.c1)) ORDER BY ((CAST(x'' AS REAL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c1)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(x'' AS REAL)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (UNLIKELY(DISTINCT rt0.c1)) ORDER BY ((CAST(x'' AS REAL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c1)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(x'' AS REAL)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (UNLIKELY(DISTINCT rt0.c1)) ORDER BY ((CAST(x'' AS REAL)) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'b929db0b')<(1618521092)))!=(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((x'b929db0b')<(1618521092)))<>(((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'b929db0b')<(1618521092)))!=(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((x'b929db0b')<(1618521092)))<>(((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'b929db0b')<(1618521092)))!=(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)))));
SELECT * FROM vt0, t0 WHERE ((((((+ (vt0.c0)))OR((t0.c0 IN ()))))OR(((t0.c0) NOTNULL)))) ORDER BY ((t0.c0)<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))OR((t0.c0 IN ()))))OR(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0)<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((((+ (vt0.c0)))OR((t0.c0 IN ()))))OR(((t0.c0) NOTNULL)))) ORDER BY ((t0.c0)<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))OR((t0.c0 IN ()))))OR(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0)<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((((+ (vt0.c0)))OR((t0.c0 IN ()))))OR(((t0.c0) NOTNULL)))) ORDER BY ((t0.c0)<=(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE rt0.c4  WHEN vt0.c1 THEN '-942638762' END)||(((rt0.c4)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN vt0.c1 THEN '-942638762' END)||(((rt0.c4)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE rt0.c4  WHEN vt0.c1 THEN '-942638762' END)||(((rt0.c4)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN vt0.c1 THEN '-942638762' END)||(((rt0.c4)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE rt0.c4  WHEN vt0.c1 THEN '-942638762' END)||(((rt0.c4)IS(vt0.c0)))));
SELECT * FROM t0, vt0 WHERE (json_array_length(TYPEOF(t0.c0))) ORDER BY ((~ (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(TYPEOF(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((~ (vt0.c0)) IN ()) ASC);
SELECT * FROM t0, vt0 WHERE (json_array_length(TYPEOF(t0.c0))) ORDER BY ((~ (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(TYPEOF(t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((~ (vt0.c0)) IN ()) ASC);
SELECT * FROM t0, vt0 WHERE (json_array_length(TYPEOF(t0.c0))) ORDER BY ((~ (vt0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE rt0.c1  WHEN CAST(rt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN LIKELY(t0.c0) THEN (((vt0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c4)) AND ((vt0.c1, rt0.c1, rt0.c1))) WHEN rt0.c4 THEN rt0.c1 COLLATE NOCASE END) ORDER BY rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN CAST(rt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN LIKELY(t0.c0) THEN (((vt0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c4)) AND ((vt0.c1, rt0.c1, rt0.c1))) WHEN rt0.c4 THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c4 DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE rt0.c1  WHEN CAST(rt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN LIKELY(t0.c0) THEN (((vt0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c4)) AND ((vt0.c1, rt0.c1, rt0.c1))) WHEN rt0.c4 THEN rt0.c1 COLLATE NOCASE END) ORDER BY rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN CAST(rt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN LIKELY(t0.c0) THEN (((vt0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c4)) AND ((vt0.c1, rt0.c1, rt0.c1))) WHEN rt0.c4 THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c4 DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CASE rt0.c1  WHEN CAST(rt0.c1 AS TEXT) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN LIKELY(t0.c0) THEN (((vt0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, rt0.c4)) AND ((vt0.c1, rt0.c1, rt0.c1))) WHEN rt0.c4 THEN rt0.c1 COLLATE NOCASE END) ORDER BY rt0.c4 DESC;
SELECT * FROM t0, rt0 WHERE (CAST((((rt0.c4)) BETWEEN ((t0.c0)) AND ((rt0.c4))) AS INTEGER)) ORDER BY CAST(IFNULL(rt0.c2, x'') AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c4)) BETWEEN ((t0.c0)) AND ((rt0.c4))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(IFNULL(rt0.c2, x'') AS INTEGER));
SELECT * FROM t0, rt0 WHERE (CAST((((rt0.c4)) BETWEEN ((t0.c0)) AND ((rt0.c4))) AS INTEGER)) ORDER BY CAST(IFNULL(rt0.c2, x'') AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c4)) BETWEEN ((t0.c0)) AND ((rt0.c4))) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(IFNULL(rt0.c2, x'') AS INTEGER));
SELECT * FROM t0, rt0 WHERE (CAST((((rt0.c4)) BETWEEN ((t0.c0)) AND ((rt0.c4))) AS INTEGER)) ORDER BY CAST(IFNULL(rt0.c2, x'') AS INTEGER);
SELECT COUNT(*) FROM vt0, t0 WHERE ('YHHh☃\)y') ORDER BY '-787041303', ((CAST(x'36c3' AS BLOB)) BETWEEN (vt0.c0) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('YHHh☃\)y') IS TRUE)  as count FROM vt0, t0 ORDER BY '-787041303', ((CAST(x'36c3' AS BLOB)) BETWEEN (vt0.c0) AND (t0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('YHHh☃\)y') ORDER BY '-787041303', ((CAST(x'36c3' AS BLOB)) BETWEEN (vt0.c0) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('YHHh☃\)y') IS TRUE)  as count FROM vt0, t0 ORDER BY '-787041303', ((CAST(x'36c3' AS BLOB)) BETWEEN (vt0.c0) AND (t0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('YHHh☃\)y') ORDER BY '-787041303', ((CAST(x'36c3' AS BLOB)) BETWEEN (vt0.c0) AND (t0.c0)) ASC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4))) BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END)) WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (0.2861778788991043) ORDER BY ((((rt0.c3) ISNULL))OR((((rt0.c4))>((rt0.c1))))), 'hq>' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.2861778788991043) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) ISNULL))OR((((rt0.c4))>((rt0.c1))))), 'hq>' DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (0.2861778788991043) ORDER BY ((((rt0.c3) ISNULL))OR((((rt0.c4))>((rt0.c1))))), 'hq>' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.2861778788991043) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) ISNULL))OR((((rt0.c4))>((rt0.c1))))), 'hq>' DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (0.2861778788991043) ORDER BY ((((rt0.c3) ISNULL))OR((((rt0.c4))>((rt0.c1))))), 'hq>' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((0.22233891023115337, rt0.c4, rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c3)) AND ((rt0.c2, t0.c0, 0.2752305110166595, rt0.c3, rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0.22233891023115337, rt0.c4, rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c3)) AND ((rt0.c2, t0.c0, 0.2752305110166595, rt0.c3, rt0.c2))) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((0.22233891023115337, rt0.c4, rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c3)) AND ((rt0.c2, t0.c0, 0.2752305110166595, rt0.c3, rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0.22233891023115337, rt0.c4, rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c3)) AND ((rt0.c2, t0.c0, 0.2752305110166595, rt0.c3, rt0.c2))) IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((0.22233891023115337, rt0.c4, rt0.c1, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c3)) AND ((rt0.c2, t0.c0, 0.2752305110166595, rt0.c3, rt0.c2))) IN ()));
SELECT * FROM t0, vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN (vt0.c0 IN ()) THEN (~ (t0.c0)) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN '' THEN CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN (vt0.c0 IN ()) THEN (~ (t0.c0)) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN '' THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN (vt0.c0 IN ()) THEN (~ (t0.c0)) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN '' THEN CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN (vt0.c0 IN ()) THEN (~ (t0.c0)) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN '' THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN (vt0.c0 IN ()) THEN (~ (t0.c0)) WHEN ((vt0.c1)+(vt0.c0)) THEN CASE vt0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END WHEN '' THEN CAST(t0.c0 AS TEXT) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0))>((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))>((t0.c0))) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0))>((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))>((t0.c0))) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0))>((t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((((NULL IN (t0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(t0.c0)))AND('1716332035')))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN (t0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(t0.c0)))AND('1716332035')))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((((NULL IN (t0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(t0.c0)))AND('1716332035')))AND(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NULL IN (t0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(t0.c0)))AND('1716332035')))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((((((NULL IN (t0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(t0.c0)))AND('1716332035')))AND(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ('\rQ')) COLLATE BINARY) ORDER BY ((((rt0.c0)AND(((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2)LIKE(rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ('\rQ')) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)AND(((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2)LIKE(rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ('\rQ')) COLLATE BINARY) ORDER BY ((((rt0.c0)AND(((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2)LIKE(rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ('\rQ')) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)AND(((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2)LIKE(rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ ('\rQ')) COLLATE BINARY) ORDER BY ((((rt0.c0)AND(((((rt0.c4)AND(rt0.c2)))AND(rt0.c3)))))OR(((rt0.c2)LIKE(rt0.c4)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE (NULLIF(DISTINCT ((rt0.c4)LIKE(rt0.c1)), x'04e2'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c4)LIKE(rt0.c1)), x'04e2')) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (NULLIF(DISTINCT ((rt0.c4)LIKE(rt0.c1)), x'04e2'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c4)LIKE(rt0.c1)), x'04e2')) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (NULLIF(DISTINCT ((rt0.c4)LIKE(rt0.c1)), x'04e2'));
SELECT ALL * FROM t0 INNER JOIN vt0 ON vt0.c0 CROSS JOIN rt0 ON (((((0Xffffffffd014d130)) BETWEEN ((t0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((rt0.c2)LIKE(rt0.c1)))) WHERE ((((rt0.c3)<<(vt0.c0)) IN ())) ORDER BY ((((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((t0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c2, vt0.c1)))))<=((((((((((vt0.c0)OR(t0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(0.22559978473946518)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON vt0.c0 CROSS JOIN rt0 ON (((((0xffffffffd014d130)) BETWEEN ((t0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((rt0.c2)LIKE(rt0.c1)))) ORDER BY ((((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((t0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c2, vt0.c1)))))<=((((((((((vt0.c0)OR(t0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(0.22559978473946518)))))  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON vt0.c0 CROSS JOIN rt0 ON (((((0Xffffffffd014d130)) BETWEEN ((t0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((rt0.c2)LIKE(rt0.c1)))) WHERE ((((rt0.c3)<<(vt0.c0)) IN ())) ORDER BY ((((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((t0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c2, vt0.c1)))))<=((((((((((vt0.c0)OR(t0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(0.22559978473946518)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON vt0.c0 CROSS JOIN rt0 ON (((((0xffffffffd014d130)) BETWEEN ((t0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((rt0.c2)LIKE(rt0.c1)))) ORDER BY ((((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((t0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c2, vt0.c1)))))<=((((((((((vt0.c0)OR(t0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(0.22559978473946518)))))  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON vt0.c0 CROSS JOIN rt0 ON (((((0Xffffffffd014d130)) BETWEEN ((t0.c0)) AND ((rt0.c0)))) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))) AND (((rt0.c2)LIKE(rt0.c1)))) WHERE ((((rt0.c3)<<(vt0.c0)) IN ())) ORDER BY ((((((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((t0.c0, rt0.c1, vt0.c1)) AND ((rt0.c1, rt0.c2, vt0.c1)))))<=((((((((((vt0.c0)OR(t0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(0.22559978473946518)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((x'')|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'')|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((x'')|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'')|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((x'')|(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE rt0.c3  WHEN ((rt0.c4)=(vt0.c1)) THEN CAST(t0.c0 AS NUMERIC) END) ORDER BY ((((((((json_insert(rt0.c3, rt0.c3, t0.c0))AND(json_type(rt0.c2))))OR(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))))AND((- (rt0.c2)))))OR(((vt0.c0) NOT NULL)))  NULLS LAST, (((NULL) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN ((rt0.c4)==(vt0.c1)) THEN CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((json_insert(rt0.c3, rt0.c3, t0.c0))AND(json_type(rt0.c2))))OR(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))))AND((- (rt0.c2)))))OR(((vt0.c0) NOT NULL)))  NULLS LAST, (((NULL) ISNULL) IN ()) DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE rt0.c3  WHEN ((rt0.c4)=(vt0.c1)) THEN CAST(t0.c0 AS NUMERIC) END) ORDER BY ((((((((json_insert(rt0.c3, rt0.c3, t0.c0))AND(json_type(rt0.c2))))OR(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))))AND((- (rt0.c2)))))OR(((vt0.c0) NOT NULL)))  NULLS LAST, (((NULL) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN ((rt0.c4)==(vt0.c1)) THEN CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((json_insert(rt0.c3, rt0.c3, t0.c0))AND(json_type(rt0.c2))))OR(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))))AND((- (rt0.c2)))))OR(((vt0.c0) NOT NULL)))  NULLS LAST, (((NULL) ISNULL) IN ()) DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CASE rt0.c3  WHEN ((rt0.c4)=(vt0.c1)) THEN CAST(t0.c0 AS NUMERIC) END) ORDER BY ((((((((json_insert(rt0.c3, rt0.c3, t0.c0))AND(json_type(rt0.c2))))OR(((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))))AND((- (rt0.c2)))))OR(((vt0.c0) NOT NULL)))  NULLS LAST, (((NULL) ISNULL) IN ()) DESC;
SELECT * FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 'T&vh' ELSE vt0.c1 END) AND ((((vt0.c1))=((0X147ee5be)))))) ORDER BY (((vt0.c1))>((((vt0.c1)|(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 'T&vh' ELSE vt0.c1 END) AND ((((vt0.c1))=((0x147ee5be)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1))>((((vt0.c1)|(vt0.c1))))) DESC);
SELECT * FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 'T&vh' ELSE vt0.c1 END) AND ((((vt0.c1))=((0X147ee5be)))))) ORDER BY (((vt0.c1))>((((vt0.c1)|(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 'T&vh' ELSE vt0.c1 END) AND ((((vt0.c1))=((0x147ee5be)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1))>((((vt0.c1)|(vt0.c1))))) DESC);
SELECT * FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN 'T&vh' ELSE vt0.c1 END) AND ((((vt0.c1))=((0X147ee5be)))))) ORDER BY (((vt0.c1))>((((vt0.c1)|(vt0.c1))))) DESC;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN rt0 ON ((UNLIKELY(rt0.c1))<(rt0.c2 COLLATE RTRIM)) WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN rt0 ON ((UNLIKELY(rt0.c1))<(rt0.c2 COLLATE RTRIM)));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN rt0 ON ((UNLIKELY(rt0.c1))<(rt0.c2 COLLATE RTRIM)) WHERE ((+ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN rt0 ON ((UNLIKELY(rt0.c1))<(rt0.c2 COLLATE RTRIM)));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON NULL RIGHT OUTER JOIN rt0 ON ((UNLIKELY(rt0.c1))<(rt0.c2 COLLATE RTRIM)) WHERE ((+ (vt0.c1)));
SELECT * FROM t0, rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY (((-568020222)<=(rt0.c4)) IN (((x'')GLOB(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((-568020222)<=(rt0.c4)) IN (((x'')GLOB(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY (((-568020222)<=(rt0.c4)) IN (((x'')GLOB(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((-568020222)<=(rt0.c4)) IN (((x'')GLOB(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY (((-568020222)<=(rt0.c4)) IN (((x'')GLOB(rt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((json_quote(vt0.c1))OR((- (vt0.c1))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((((vt0.c1)IS(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote(vt0.c1))OR((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((((vt0.c1)IS(vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((json_quote(vt0.c1))OR((- (vt0.c1))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((((vt0.c1)IS(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote(vt0.c1))OR((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((((vt0.c1)IS(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END IN ()));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((~ (((((vt0.c1)AND(rt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c1)AND(rt0.c0)))OR(NULL))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((~ (((((vt0.c1)AND(rt0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c1)AND(rt0.c0)))OR(NULL))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((~ (((((vt0.c1)AND(rt0.c0)))OR(NULL)))));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE ('QZ]88W');
SELECT SUM(count) FROM (SELECT (('QZ]88W') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ('QZ]88W');
SELECT SUM(count) FROM (SELECT (('QZ]88W') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ('QZ]88W');
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c2)))>=((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))>=((~ (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c2)))>=((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))>=((~ (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (rt0.c2)))>=((~ (t0.c0)))));
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((NULL) ISNULL) COLLATE BINARY) ORDER BY (((CAST(rt0.c3 AS INTEGER)))==((rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c3 AS INTEGER)))==((rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL) ISNULL) COLLATE BINARY) ORDER BY (((CAST(rt0.c3 AS INTEGER)))==((rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c3 AS INTEGER)))==((rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL) ISNULL) COLLATE BINARY) ORDER BY (((CAST(rt0.c3 AS INTEGER)))==((rt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((t0.c0)&(rt0.c4)))*((((vt0.c1))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)&(rt0.c4)))*((((vt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((t0.c0)&(rt0.c4)))*((((vt0.c1))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)&(rt0.c4)))*((((vt0.c1))<((rt0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((t0.c0)&(rt0.c4)))*((((vt0.c1))<((rt0.c2))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (974104595) ORDER BY (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), (NULL IN (vt0.c0))))<(((- (vt0.c1)), (~ (x'')), CASE vt0.c0  WHEN '-207603292' THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'kL[\nO' ELSE vt0.c1 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((974104595) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), (NULL IN (vt0.c0))))<(((- (vt0.c1)), (~ (x'')), CASE vt0.c0  WHEN '-207603292' THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'kL[\nO' ELSE vt0.c1 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (974104595) ORDER BY (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), (NULL IN (vt0.c0))))<(((- (vt0.c1)), (~ (x'')), CASE vt0.c0  WHEN '-207603292' THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'kL[\nO' ELSE vt0.c1 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((974104595) IS TRUE)  as count FROM t0, vt0 ORDER BY (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), (NULL IN (vt0.c0))))<(((- (vt0.c1)), (~ (x'')), CASE vt0.c0  WHEN '-207603292' THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'kL[\nO' ELSE vt0.c1 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (974104595) ORDER BY (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END, ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), (NULL IN (vt0.c0))))<(((- (vt0.c1)), (~ (x'')), CASE vt0.c0  WHEN '-207603292' THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'kL[\nO' ELSE vt0.c1 END)))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (('9Fe%y\nN')))) ORDER BY (t0.c0 IN (((t0.c0) ISNULL), (t0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (('9Fe%y\nN')))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN (((t0.c0) ISNULL), (t0.c0 IN (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (('9Fe%y\nN')))) ORDER BY (t0.c0 IN (((t0.c0) ISNULL), (t0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (('9Fe%y\nN')))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN (((t0.c0) ISNULL), (t0.c0 IN (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (('9Fe%y\nN')))) ORDER BY (t0.c0 IN (((t0.c0) ISNULL), (t0.c0 IN (t0.c0))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))) WHERE (CASE WHEN ((NULL)<=(rt0.c3)) THEN CAST(vt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN (((rt0.c4, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, '-1769082738'))) WHEN ((vt0.c1)!=(rt0.c1)) THEN CASE WHEN '-1274672105' THEN rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)<=(rt0.c3)) THEN CAST(vt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN (((rt0.c4, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, '-1769082738'))) WHEN ((vt0.c1)<>(rt0.c1)) THEN CASE WHEN '-1274672105' THEN rt0.c3 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))) WHERE (CASE WHEN ((NULL)<=(rt0.c3)) THEN CAST(vt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN (((rt0.c4, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, '-1769082738'))) WHEN ((vt0.c1)!=(rt0.c1)) THEN CASE WHEN '-1274672105' THEN rt0.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)<=(rt0.c3)) THEN CAST(vt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN (((rt0.c4, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, '-1769082738'))) WHEN ((vt0.c1)<>(rt0.c1)) THEN CASE WHEN '-1274672105' THEN rt0.c3 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CAST(rt0.c2 AS INTEGER))) WHERE (CASE WHEN ((NULL)<=(rt0.c3)) THEN CAST(vt0.c0 AS TEXT) WHEN (rt0.c0 IN ()) THEN (((rt0.c4, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, rt0.c2, '-1769082738'))) WHEN ((vt0.c1)!=(rt0.c1)) THEN CASE WHEN '-1274672105' THEN rt0.c3 END END);
SELECT * FROM rt0 WHERE ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END IN ())) ORDER BY TRIM(((rt0.c0)<(rt0.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY TRIM(((rt0.c0)<(rt0.c4))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END IN ())) ORDER BY TRIM(((rt0.c0)<(rt0.c4))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY TRIM(((rt0.c0)<(rt0.c4))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END IN ())) ORDER BY TRIM(((rt0.c0)<(rt0.c4))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)LIKE(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)LIKE(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)LIKE(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)LIKE(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)LIKE(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END));
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER)) ORDER BY t0.c0, CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY t0.c0, CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER)) ORDER BY t0.c0, CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY t0.c0, CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER)) ORDER BY t0.c0, CAST(t0.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS TRUE)) NOTNULL)) ORDER BY CAST((+ (vt0.c0)) AS INTEGER) ASC, CASE vt0.c1  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END DESC  NULLS FIRST, ((((((((NULL)AND(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((' \L댂')<(x'97ef')))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS INTEGER) ASC, CASE vt0.c1  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END DESC  NULLS FIRST, ((((((((NULL)AND(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((' \L댂')<(x'97ef')))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS TRUE)) NOTNULL)) ORDER BY CAST((+ (vt0.c0)) AS INTEGER) ASC, CASE vt0.c1  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END DESC  NULLS FIRST, ((((((((NULL)AND(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((' \L댂')<(x'97ef')))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS INTEGER) ASC, CASE vt0.c1  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END DESC  NULLS FIRST, ((((((((NULL)AND(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((' \L댂')<(x'97ef')))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS TRUE)) NOTNULL)) ORDER BY CAST((+ (vt0.c0)) AS INTEGER) ASC, CASE vt0.c1  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END DESC  NULLS FIRST, ((((((((NULL)AND(CAST(vt0.c1 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((' \L댂')<(x'97ef')))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE (CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN 1.618521092E9 COLLATE NOCASE THEN json_valid(t0.c0) ELSE CASE '-884876609'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN 1.618521092E9 COLLATE NOCASE THEN json_valid(t0.c0) ELSE CASE '-884876609'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN 1.618521092E9 COLLATE NOCASE THEN json_valid(t0.c0) ELSE CASE '-884876609'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN 1.618521092E9 COLLATE NOCASE THEN json_valid(t0.c0) ELSE CASE '-884876609'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN 1.618521092E9 COLLATE NOCASE THEN json_valid(t0.c0) ELSE CASE '-884876609'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END END);
SELECT ALL * FROM rt0, vt0, t0 WHERE (TRIM(DISTINCT (rt0.c1 IN ()), SQLITE_SOURCE_ID())) ORDER BY CAST(((rt0.c1)|(vt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt0.c1 IN ()), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((rt0.c1)|(vt0.c1)) AS NUMERIC) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (TRIM(DISTINCT (rt0.c1 IN ()), SQLITE_SOURCE_ID())) ORDER BY CAST(((rt0.c1)|(vt0.c1)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt0.c1 IN ()), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((rt0.c1)|(vt0.c1)) AS NUMERIC) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (TRIM(DISTINCT (rt0.c1 IN ()), SQLITE_SOURCE_ID())) ORDER BY CAST(((rt0.c1)|(vt0.c1)) AS NUMERIC) DESC;
SELECT * FROM rt0, vt0, t0 WHERE ((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY (CAST(t0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (CAST(t0.c0 AS BLOB) IN ())  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY (CAST(t0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (CAST(t0.c0 AS BLOB) IN ())  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)) IN ())) ORDER BY (CAST(t0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((x'') NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((x'') NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((x'') NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((x'') NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((x'') NOTNULL)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CASE t0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END) ORDER BY CASE WHEN (~ (vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c0)) ELSE ((vt0.c1) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (~ (vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c0)) ELSE ((vt0.c1) IS FALSE) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CASE t0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END) ORDER BY CASE WHEN (~ (vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c0)) ELSE ((vt0.c1) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (~ (vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c0)) ELSE ((vt0.c1) IS FALSE) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE CASE t0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN (+ (vt0.c0)) THEN (+ (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END) ORDER BY CASE WHEN (~ (vt0.c1)) THEN ((vt0.c1)LIKE(vt0.c0)) ELSE ((vt0.c1) IS FALSE) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((('209680788')AND(t0.c0)))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((('209680788')AND(t0.c0)))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((('209680788')AND(t0.c0)))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((('209680788')AND(t0.c0)))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((('209680788')AND(t0.c0)))OR((+ (t0.c0)))))AND(CAST(t0.c0 AS TEXT))))OR((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c4);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((~ ('u63*'))) ORDER BY ((((((rt0.c4)OR(rt0.c1)))OR(vt0.c0))) IS FALSE) ASC  NULLS LAST, (~ ('252755869')) DESC, CAST((((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND (('PXUW<q1', rt0.c0, rt0.c1))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ('u63*'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((rt0.c4)OR(rt0.c1)))OR(vt0.c0))) IS FALSE) ASC  NULLS LAST, (~ ('252755869')) DESC, CAST((((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND (('PXUW<q1', rt0.c0, rt0.c1))) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((~ ('u63*'))) ORDER BY ((((((rt0.c4)OR(rt0.c1)))OR(vt0.c0))) IS FALSE) ASC  NULLS LAST, (~ ('252755869')) DESC, CAST((((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND (('PXUW<q1', rt0.c0, rt0.c1))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ('u63*'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((rt0.c4)OR(rt0.c1)))OR(vt0.c0))) IS FALSE) ASC  NULLS LAST, (~ ('252755869')) DESC, CAST((((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND (('PXUW<q1', rt0.c0, rt0.c1))) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((~ ('u63*'))) ORDER BY ((((((rt0.c4)OR(rt0.c1)))OR(vt0.c0))) IS FALSE) ASC  NULLS LAST, (~ ('252755869')) DESC, CAST((((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND (('PXUW<q1', rt0.c0, rt0.c1))) AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0, rt0.c2, x'', vt0.c0, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, t0.c0), CAST(rt0.c0 AS INTEGER), ((rt0.c4) NOTNULL), (rt0.c3 IN (rt0.c4)), (rt0.c4 IN ()))) AND (((((rt0.c1))!=((rt0.c2))), LOWER(rt0.c2), (((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c2, 0Xffffffffc7d07956, vt0.c1))), t0.c0, 0.847604245795968))) WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0, rt0.c2, x'', vt0.c0, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, t0.c0), CAST(rt0.c0 AS INTEGER), ((rt0.c4) NOTNULL), (rt0.c3 IN (rt0.c4)), (rt0.c4 IN ()))) AND (((((rt0.c1))!=((rt0.c2))), LOWER(rt0.c2), (((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c2, 0Xffffffffc7d07956, vt0.c1))), t0.c0, 0.847604245795968))));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0, rt0.c2, x'', vt0.c0, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, t0.c0), CAST(rt0.c0 AS INTEGER), ((rt0.c4) NOTNULL), (rt0.c3 IN (rt0.c4)), (rt0.c4 IN ()))) AND (((((rt0.c1))!=((rt0.c2))), LOWER(rt0.c2), (((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c2, 0Xffffffffc7d07956, vt0.c1))), t0.c0, 0.847604245795968))) WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0, rt0.c2, x'', vt0.c0, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, t0.c0), CAST(rt0.c0 AS INTEGER), ((rt0.c4) NOTNULL), (rt0.c3 IN (rt0.c4)), (rt0.c4 IN ()))) AND (((((rt0.c1))!=((rt0.c2))), LOWER(rt0.c2), (((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c2, 0Xffffffffc7d07956, vt0.c1))), t0.c0, 0.847604245795968))));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((rt0.c0, rt0.c2, x'', vt0.c0, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, t0.c0), CAST(rt0.c0 AS INTEGER), ((rt0.c4) NOTNULL), (rt0.c3 IN (rt0.c4)), (rt0.c4 IN ()))) AND (((((rt0.c1))!=((rt0.c2))), LOWER(rt0.c2), (((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c2, 0Xffffffffc7d07956, vt0.c1))), t0.c0, 0.847604245795968))) WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c1, vt0.c1))*(((vt0.c0)>>(vt0.c0))))) ORDER BY (~ ('-98030065')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c1, vt0.c1))*(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ('-98030065')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c1, vt0.c1))*(((vt0.c0)>>(vt0.c0))))) ORDER BY (~ ('-98030065')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c1, vt0.c1))*(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ('-98030065')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((IFNULL(vt0.c1, vt0.c1))*(((vt0.c0)>>(vt0.c0))))) ORDER BY (~ ('-98030065')) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c4)==((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)=((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c4)==((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)=((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c4)==((~ (rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) AS TEXT));
SELECT * FROM t0, vt0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)) THEN (~ (t0.c0)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) ELSE (vt0.c1 IN (0.8183727686765881)) END) ORDER BY CAST(((vt0.c0) BETWEEN (0.36016636397818336) AND (343860670)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)) THEN (~ (t0.c0)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) ELSE (vt0.c1 IN (0.8183727686765881)) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (0.36016636397818336) AND (343860670)) AS NUMERIC));
SELECT * FROM t0, vt0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)) THEN (~ (t0.c0)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) ELSE (vt0.c1 IN (0.8183727686765881)) END) ORDER BY CAST(((vt0.c0) BETWEEN (0.36016636397818336) AND (343860670)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)) THEN (~ (t0.c0)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) ELSE (vt0.c1 IN (0.8183727686765881)) END) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (0.36016636397818336) AND (343860670)) AS NUMERIC));
SELECT * FROM t0, vt0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)) THEN (~ (t0.c0)) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) ELSE (vt0.c1 IN (0.8183727686765881)) END) ORDER BY CAST(((vt0.c0) BETWEEN (0.36016636397818336) AND (343860670)) AS NUMERIC);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)))) AND (((((vt0.c0))<>((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)))) AND (((((vt0.c0))!=((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)))) AND (((((vt0.c0))<>((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)))) AND (((((vt0.c0))!=((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)))) AND (((((vt0.c0))<>((vt0.c1)))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 THEN t0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 THEN t0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE WHEN vt0.c1 THEN t0.c0 END) NOTNULL));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END) BETWEEN (rt0.c4) AND (((vt0.c1)LIKE(rt0.c4))))) ORDER BY (+ (((NULL) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END) BETWEEN (rt0.c4) AND (((vt0.c1)LIKE(rt0.c4))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (((NULL) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END) BETWEEN (rt0.c4) AND (((vt0.c1)LIKE(rt0.c4))))) ORDER BY (+ (((NULL) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END) BETWEEN (rt0.c4) AND (((vt0.c1)LIKE(rt0.c4))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (+ (((NULL) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END) BETWEEN (rt0.c4) AND (((vt0.c1)LIKE(rt0.c4))))) ORDER BY (+ (((NULL) ISNULL)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((rt0.c4 IN ()))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN (((rt0.c4 IN ()))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((rt0.c4 IN ()))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN (((rt0.c4 IN ()))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN (((rt0.c4 IN ()))) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY ((((rt0.c2) IS TRUE)) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((t0.c0)<(rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0)<(rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((t0.c0)<(rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0)<(rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((t0.c0)<(rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (+ (vt0.c1)), ((((vt0.c0)+(rt0.c3))) IS TRUE), CASE WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (vt0.c1)), ((((vt0.c0)+(rt0.c3))) IS TRUE), CASE WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (+ (vt0.c1)), ((((vt0.c0)+(rt0.c3))) IS TRUE), CASE WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (vt0.c1)), ((((vt0.c0)+(rt0.c3))) IS TRUE), CASE WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (+ (vt0.c1)), ((((vt0.c0)+(rt0.c3))) IS TRUE), CASE WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM t0 WHERE (LOWER(((t0.c0)<>(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((t0.c0)<>(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LOWER(((t0.c0)<>(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((t0.c0)<>(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LOWER(((t0.c0)<>(t0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0) ISNULL))) WHERE (((((t0.c0) NOTNULL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0) ISNULL))) WHERE (((((t0.c0) NOTNULL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0) ISNULL))) WHERE (((((t0.c0) NOTNULL)) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE ('87778588') ORDER BY (((rt0.c2 COLLATE BINARY, ((((rt0.c4)OR(1803170139)))AND(rt0.c4)), ((rt0.c1)||(rt0.c4))))>=((0.8904376567943281, CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END, CAST(rt0.c0 AS REAL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('87778588') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE BINARY, ((((rt0.c4)OR(1803170139)))AND(rt0.c4)), ((rt0.c1)||(rt0.c4))))>=((0.8904376567943281, CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END, CAST(rt0.c0 AS REAL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ('87778588') ORDER BY (((rt0.c2 COLLATE BINARY, ((((rt0.c4)OR(1803170139)))AND(rt0.c4)), ((rt0.c1)||(rt0.c4))))>=((0.8904376567943281, CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END, CAST(rt0.c0 AS REAL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('87778588') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE BINARY, ((((rt0.c4)OR(1803170139)))AND(rt0.c4)), ((rt0.c1)||(rt0.c4))))>=((0.8904376567943281, CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END, CAST(rt0.c0 AS REAL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ('87778588') ORDER BY (((rt0.c2 COLLATE BINARY, ((((rt0.c4)OR(1803170139)))AND(rt0.c4)), ((rt0.c1)||(rt0.c4))))>=((0.8904376567943281, CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END, CAST(rt0.c0 AS REAL)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN '1716332035' THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN '1716332035' THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN '1716332035' THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN '1716332035' THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE WHEN '1716332035' THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END))));
SELECT ALL * FROM rt0 WHERE (CAST(((((1.021875565E9)OR(rt0.c0)))AND(rt0.c3)) AS NUMERIC)) ORDER BY (((((rt0.c4 IN ()))AND(((rt0.c2)>(rt0.c1)))))AND(((((0.4294358165198876)AND(rt0.c0)))OR(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((1.021875565E9)OR(rt0.c0)))AND(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4 IN ()))AND(((rt0.c2)>(rt0.c1)))))AND(((((0.4294358165198876)AND(rt0.c0)))OR(rt0.c4)))) ASC);
SELECT ALL * FROM rt0 WHERE (CAST(((((1.021875565E9)OR(rt0.c0)))AND(rt0.c3)) AS NUMERIC)) ORDER BY (((((rt0.c4 IN ()))AND(((rt0.c2)>(rt0.c1)))))AND(((((0.4294358165198876)AND(rt0.c0)))OR(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((1.021875565E9)OR(rt0.c0)))AND(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4 IN ()))AND(((rt0.c2)>(rt0.c1)))))AND(((((0.4294358165198876)AND(rt0.c0)))OR(rt0.c4)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((rt0.c2) NOTNULL)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((1716332035) BETWEEN (ABS(DISTINCT vt0.c1)) AND (((rt0.c0)>=(rt0.c0)))) WHERE (((0.9873253232859845 COLLATE BINARY)||(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.9873253232859845 COLLATE BINARY)||(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((1716332035) BETWEEN (ABS(DISTINCT vt0.c1)) AND (((rt0.c0)>=(rt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((1716332035) BETWEEN (ABS(DISTINCT vt0.c1)) AND (((rt0.c0)>=(rt0.c0)))) WHERE (((0.9873253232859845 COLLATE BINARY)||(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.9873253232859845 COLLATE BINARY)||(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((1716332035) BETWEEN (ABS(DISTINCT vt0.c1)) AND (((rt0.c0)>=(rt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((1716332035) BETWEEN (ABS(DISTINCT vt0.c1)) AND (((rt0.c0)>=(rt0.c0)))) WHERE (((0.9873253232859845 COLLATE BINARY)||(((rt0.c1) NOTNULL))));
SELECT * FROM vt0 CROSS JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))AND(CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON (((((~ (rt0.c2)))OR((('{镯')!=(rt0.c2)))))AND(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1)))) WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c3))) AND ((((t0.c0, rt0.c0, rt0.c2))<((vt0.c0, rt0.c1, rt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c3))) AND ((((t0.c0, rt0.c0, rt0.c2))<((vt0.c0, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))AND(CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON (((((~ (rt0.c2)))OR((('{镯')<>(rt0.c2)))))AND(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1)))) ORDER BY vt0.c1 ASC);
SELECT * FROM vt0 CROSS JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))AND(CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON (((((~ (rt0.c2)))OR((('{镯')!=(rt0.c2)))))AND(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1)))) WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c3))) AND ((((t0.c0, rt0.c0, rt0.c2))<((vt0.c0, rt0.c1, rt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c3))) AND ((((t0.c0, rt0.c0, rt0.c2))<((vt0.c0, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((t0.c0)IS NOT(vt0.c0)))AND(CAST(rt0.c0 AS BLOB))) FULL OUTER JOIN rt0 ON (((((~ (rt0.c2)))OR((('{镯')<>(rt0.c2)))))AND(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c1)))) ORDER BY vt0.c1 ASC);
SELECT * FROM rt0, vt0 WHERE (TYPEOF((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (TYPEOF((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (TYPEOF((+ (rt0.c2))));
SELECT * FROM vt0, t0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0, x'b86b', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, t0.c0, t0.c0, t0.c0, vt0.c1))) AS TEXT)) ORDER BY (((NOT (vt0.c1))) IS FALSE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS TEXT)  NULLS LAST, (((~ (vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0, x'b86b', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, t0.c0, t0.c0, t0.c0, vt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (vt0.c1))) IS FALSE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS TEXT)  NULLS LAST, (((~ (vt0.c1))) NOT NULL));
SELECT * FROM vt0, t0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0, x'b86b', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, t0.c0, t0.c0, t0.c0, vt0.c1))) AS TEXT)) ORDER BY (((NOT (vt0.c1))) IS FALSE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS TEXT)  NULLS LAST, (((~ (vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0, x'b86b', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, t0.c0, t0.c0, t0.c0, vt0.c1))) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((NOT (vt0.c1))) IS FALSE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS TEXT)  NULLS LAST, (((~ (vt0.c1))) NOT NULL));
SELECT * FROM vt0, t0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0, x'b86b', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, t0.c0, t0.c0, t0.c0, vt0.c1))) AS TEXT)) ORDER BY (((NOT (vt0.c1))) IS FALSE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS TEXT)  NULLS LAST, (((~ (vt0.c1))) NOT NULL);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((x'e3e0' COLLATE RTRIM)) AND ((((0.5918462166637039)LIKE(rt0.c2)))))) ORDER BY rt0.c4 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((x'e3e0' COLLATE RTRIM)) AND ((((0.5918462166637039)LIKE(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c4 COLLATE RTRIM ASC);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((x'e3e0' COLLATE RTRIM)) AND ((((0.5918462166637039)LIKE(rt0.c2)))))) ORDER BY rt0.c4 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((x'e3e0' COLLATE RTRIM)) AND ((((0.5918462166637039)LIKE(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY rt0.c4 COLLATE RTRIM ASC);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((x'e3e0' COLLATE RTRIM)) AND ((((0.5918462166637039)LIKE(rt0.c2)))))) ORDER BY rt0.c4 COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0 WHERE ((LIKELY(vt0.c0) IN (x'e598'))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(vt0.c0) IN (x'e598'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((LIKELY(vt0.c0) IN (x'e598'))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(vt0.c0) IN (x'e598'))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((LIKELY(vt0.c0) IN (x'e598'))) ORDER BY vt0.c1 ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((('*gM#')IS(((((((((t0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('*gM#')IS(((((((((t0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((('*gM#')IS(((((((((t0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('*gM#')IS(((((((((t0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((('*gM#')IS(((((((((t0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS TEXT))==(CAST(rt0.c4 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT))==(CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS TEXT))==(CAST(rt0.c4 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT))==(CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS TEXT))==(CAST(rt0.c4 AS REAL))));
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c4)) BETWEEN (((+ (t0.c0)))) AND ((((rt0.c2)>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN (((+ (t0.c0)))) AND ((((rt0.c2)>(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c4)) BETWEEN (((+ (t0.c0)))) AND ((((rt0.c2)>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN (((+ (t0.c0)))) AND ((((rt0.c2)>(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c4)) BETWEEN (((+ (t0.c0)))) AND ((((rt0.c2)>(rt0.c0))))));
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c0)>=(0.6109206036095373)))OR(((0.2807890734338522)||(rt0.c2))))) ORDER BY CAST(((rt0.c1)!=(t0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(0.6109206036095373)))OR(((0.2807890734338522)||(rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c1)!=(t0.c0)) AS NUMERIC));
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c0)>=(0.6109206036095373)))OR(((0.2807890734338522)||(rt0.c2))))) ORDER BY CAST(((rt0.c1)!=(t0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(0.6109206036095373)))OR(((0.2807890734338522)||(rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(((rt0.c1)!=(t0.c0)) AS NUMERIC));
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c0)>=(0.6109206036095373)))OR(((0.2807890734338522)||(rt0.c2))))) ORDER BY CAST(((rt0.c1)!=(t0.c0)) AS NUMERIC);
SELECT * FROM t0, vt0, rt0 WHERE ((+ (-9.8030065E7 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (-9.8030065E7 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((+ (-9.8030065E7 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (-9.8030065E7 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((+ (-9.8030065E7 COLLATE NOCASE)));
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c1) ISNULL))AND((~ (rt0.c4))))) ORDER BY CASE x''  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, CASE WHEN LOWER(t0.c0) THEN HEX(DISTINCT t0.c0) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c1)IS NOT(t0.c0)) WHEN ((rt0.c4) BETWEEN (t0.c0) AND (vt0.c1)) THEN ((rt0.c2)<=(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))AND((~ (rt0.c4))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE x''  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, CASE WHEN LOWER(t0.c0) THEN HEX(DISTINCT t0.c0) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c1)IS NOT(t0.c0)) WHEN ((rt0.c4) BETWEEN (t0.c0) AND (vt0.c1)) THEN ((rt0.c2)<=(rt0.c2)) END);
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c1) ISNULL))AND((~ (rt0.c4))))) ORDER BY CASE x''  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, CASE WHEN LOWER(t0.c0) THEN HEX(DISTINCT t0.c0) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c1)IS NOT(t0.c0)) WHEN ((rt0.c4) BETWEEN (t0.c0) AND (vt0.c1)) THEN ((rt0.c2)<=(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))AND((~ (rt0.c4))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE x''  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, CASE WHEN LOWER(t0.c0) THEN HEX(DISTINCT t0.c0) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c1)IS NOT(t0.c0)) WHEN ((rt0.c4) BETWEEN (t0.c0) AND (vt0.c1)) THEN ((rt0.c2)<=(rt0.c2)) END);
SELECT * FROM rt0, t0, vt0 WHERE (((((rt0.c1) ISNULL))AND((~ (rt0.c4))))) ORDER BY CASE x''  WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST, CASE WHEN LOWER(t0.c0) THEN HEX(DISTINCT t0.c0) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c1)IS NOT(t0.c0)) WHEN ((rt0.c4) BETWEEN (t0.c0) AND (vt0.c1)) THEN ((rt0.c2)<=(rt0.c2)) END;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (x'') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY ((NULL) NOT BETWEEN (((rt0.c3)IS NOT(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c3)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (x'') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL) NOT BETWEEN (((rt0.c3)IS NOT(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c3)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (x'') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY ((NULL) NOT BETWEEN (((rt0.c3)IS NOT(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c3)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c3))) NOT BETWEEN (x'') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL) NOT BETWEEN (((rt0.c3)IS NOT(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c3)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NOT (rt0.c3))) NOT BETWEEN (x'') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY ((NULL) NOT BETWEEN (((rt0.c3)IS NOT(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c2) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c3)AND(rt0.c2)))OR(rt0.c1))))  NULLS LAST;
SELECT * FROM t0 INNER JOIN vt0 ON (((x'' IN ()))*(((vt0.c1)+(NULL)))) WHERE ((+ (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((x'' IN ()))*(((vt0.c1)+(NULL)))));
SELECT * FROM t0 INNER JOIN vt0 ON (((x'' IN ()))*(((vt0.c1)+(NULL)))) WHERE ((+ (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((x'' IN ()))*(((vt0.c1)+(NULL)))));
SELECT * FROM t0 INNER JOIN vt0 ON (((x'' IN ()))*(((vt0.c1)+(NULL)))) WHERE ((+ (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c0) AND (x''))))>((0.6109206036095373)))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) NOT BETWEEN (t0.c0) AND (x''))))>((0.6109206036095373)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c0) AND (x''))))>((0.6109206036095373)))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) NOT BETWEEN (t0.c0) AND (x''))))>((0.6109206036095373)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) NOT BETWEEN (t0.c0) AND (x''))))>((0.6109206036095373)))) ORDER BY ((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN ()))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (NOT (-1.274672105E9)) INNER JOIN rt0 ON ((CAST('-431505593' AS BLOB))%(NULL)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (NOT (-1.274672105E9)) INNER JOIN rt0 ON ((CAST('-431505593' AS BLOB))%(NULL)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (NOT (-1.274672105E9)) INNER JOIN rt0 ON ((CAST('-431505593' AS BLOB))%(NULL)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (NOT (-1.274672105E9)) INNER JOIN rt0 ON ((CAST('-431505593' AS BLOB))%(NULL)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (NOT (-1.274672105E9)) INNER JOIN rt0 ON ((CAST('-431505593' AS BLOB))%(NULL)) WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN (((rt0.c2)&(vt0.c1))) AND (UNLIKELY(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) NOT BETWEEN (((rt0.c2)&(vt0.c1))) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN (((rt0.c2)&(vt0.c1))) AND (UNLIKELY(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) NOT BETWEEN (((rt0.c2)&(vt0.c1))) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN (((rt0.c2)&(vt0.c1))) AND (UNLIKELY(vt0.c1))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c4)IS(NULL)) IN ())) ORDER BY NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(rt0.c4 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)IS(NULL)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(rt0.c4 AS REAL)) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c4)IS(NULL)) IN ())) ORDER BY NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(rt0.c4 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)IS(NULL)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(rt0.c4 AS REAL)) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c4)IS(NULL)) IN ())) ORDER BY NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(rt0.c4 AS REAL)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1))) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)<((rt0.c4 IN ()))) WHERE (NULL) ORDER BY ((rt0.c1) BETWEEN ((((rt0.c3))<((t0.c0)))) AND ((- (rt0.c1)))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN '-431505593' ELSE rt0.c0 END)>=(CAST(rt0.c2 AS INTEGER))), (+ ('1021875565'));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)<((rt0.c4 IN ()))) ORDER BY ((rt0.c1) BETWEEN ((((rt0.c3))<((t0.c0)))) AND ((- (rt0.c1)))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN '-431505593' ELSE rt0.c0 END)>=(CAST(rt0.c2 AS INTEGER))), (+ ('1021875565')));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)<((rt0.c4 IN ()))) WHERE (NULL) ORDER BY ((rt0.c1) BETWEEN ((((rt0.c3))<((t0.c0)))) AND ((- (rt0.c1)))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN '-431505593' ELSE rt0.c0 END)>=(CAST(rt0.c2 AS INTEGER))), (+ ('1021875565'));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)<((rt0.c4 IN ()))) ORDER BY ((rt0.c1) BETWEEN ((((rt0.c3))<((t0.c0)))) AND ((- (rt0.c1)))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN '-431505593' ELSE rt0.c0 END)>=(CAST(rt0.c2 AS INTEGER))), (+ ('1021875565')));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM)<((rt0.c4 IN ()))) WHERE (NULL) ORDER BY ((rt0.c1) BETWEEN ((((rt0.c3))<((t0.c0)))) AND ((- (rt0.c1)))) DESC, ((CASE t0.c0  WHEN t0.c0 THEN '-431505593' ELSE rt0.c0 END)>=(CAST(rt0.c2 AS INTEGER))), (+ ('1021875565'));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)<<(((rt0.c1) IS FALSE))) WHERE ((((vt0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((rt0.c4 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)<<(((rt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)<<(((rt0.c1) IS FALSE))) WHERE ((((vt0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((rt0.c4 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((rt0.c4 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)<<(((rt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)<<(((rt0.c1) IS FALSE))) WHERE ((((vt0.c0)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((rt0.c4 COLLATE BINARY))));
SELECT * FROM t0, rt0, vt0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS INTEGER)) ORDER BY (UPPER(DISTINCT NULL) IN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))) DESC  NULLS LAST, (vt0.c1 COLLATE BINARY IN (CASE WHEN t0.c0 THEN vt0.c1 END)) DESC  NULLS FIRST, TRIM(DISTINCT CAST(rt0.c1 AS TEXT)), t0.c0 DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (UPPER(DISTINCT NULL) IN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))) DESC  NULLS LAST, (vt0.c1 COLLATE BINARY IN (CASE WHEN t0.c0 THEN vt0.c1 END)) DESC  NULLS FIRST, TRIM(DISTINCT CAST(rt0.c1 AS TEXT)), t0.c0 DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC));
SELECT * FROM t0, rt0, vt0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS INTEGER)) ORDER BY (UPPER(DISTINCT NULL) IN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))) DESC  NULLS LAST, (vt0.c1 COLLATE BINARY IN (CASE WHEN t0.c0 THEN vt0.c1 END)) DESC  NULLS FIRST, TRIM(DISTINCT CAST(rt0.c1 AS TEXT)), t0.c0 DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (UPPER(DISTINCT NULL) IN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))) DESC  NULLS LAST, (vt0.c1 COLLATE BINARY IN (CASE WHEN t0.c0 THEN vt0.c1 END)) DESC  NULLS FIRST, TRIM(DISTINCT CAST(rt0.c1 AS TEXT)), t0.c0 DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC));
SELECT * FROM t0, rt0, vt0 WHERE (CAST(rt0.c3 COLLATE RTRIM AS INTEGER)) ORDER BY (UPPER(DISTINCT NULL) IN (((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))) DESC  NULLS LAST, (vt0.c1 COLLATE BINARY IN (CASE WHEN t0.c0 THEN vt0.c1 END)) DESC  NULLS FIRST, TRIM(DISTINCT CAST(rt0.c1 AS TEXT)), t0.c0 DESC  NULLS LAST, CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC);
SELECT * FROM rt0 WHERE (((UPPER(DISTINCT rt0.c3))*(rt0.c4))) ORDER BY CASE ((rt0.c4)LIKE(rt0.c2))  WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN 0Xffffffffde24b302 THEN rt0.c3 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN CAST('ruTyb' AS INTEGER) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (-493756370)) END;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c3))*(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c4)LIKE(rt0.c2))  WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN 0xffffffffde24b302 THEN rt0.c3 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN CAST('ruTyb' AS INTEGER) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (-493756370)) END);
SELECT * FROM rt0 WHERE (((UPPER(DISTINCT rt0.c3))*(rt0.c4))) ORDER BY CASE ((rt0.c4)LIKE(rt0.c2))  WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN 0Xffffffffde24b302 THEN rt0.c3 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN CAST('ruTyb' AS INTEGER) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (-493756370)) END;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt0.c3))*(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c4)LIKE(rt0.c2))  WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN 0xffffffffde24b302 THEN rt0.c3 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN CAST('ruTyb' AS INTEGER) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (-493756370)) END);
SELECT * FROM rt0 WHERE (((UPPER(DISTINCT rt0.c3))*(rt0.c4))) ORDER BY CASE ((rt0.c4)LIKE(rt0.c2))  WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN 0Xffffffffde24b302 THEN rt0.c3 ELSE rt0.c3 END WHEN (- (rt0.c0)) THEN CAST('ruTyb' AS INTEGER) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (-493756370)) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '-1805167228' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '-1805167228' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '-1805167228' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '-1805167228' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '-1805167228' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE (((t0.c0))!=((rt0.c4)))  WHEN json_type(vt0.c0) THEN CAST(rt0.c0 AS INTEGER) END RIGHT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)<>(vt0.c0)))) AND (((~ (rt0.c3))))) WHERE (CAST((+ (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE (((t0.c0))!=((rt0.c4)))  WHEN json_type(vt0.c0) THEN CAST(rt0.c0 AS INTEGER) END RIGHT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)<>(vt0.c0)))) AND (((~ (rt0.c3))))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE (((t0.c0))!=((rt0.c4)))  WHEN json_type(vt0.c0) THEN CAST(rt0.c0 AS INTEGER) END RIGHT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)<>(vt0.c0)))) AND (((~ (rt0.c3))))) WHERE (CAST((+ (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE (((t0.c0))!=((rt0.c4)))  WHEN json_type(vt0.c0) THEN CAST(rt0.c0 AS INTEGER) END RIGHT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((rt0.c2)<>(vt0.c0)))) AND (((~ (rt0.c3))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((x'')OR((t0.c0 IN ()))))AND(((t0.c0) BETWEEN ('') AND (x'')))))AND(NULL)))OR(((t0.c0)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR((t0.c0 IN ()))))AND(((t0.c0) BETWEEN ('') AND (x'')))))AND(NULL)))OR(((t0.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((x'')OR((t0.c0 IN ()))))AND(((t0.c0) BETWEEN ('') AND (x'')))))AND(NULL)))OR(((t0.c0)<>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR((t0.c0 IN ()))))AND(((t0.c0) BETWEEN ('') AND (x'')))))AND(NULL)))OR(((t0.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((x'')OR((t0.c0 IN ()))))AND(((t0.c0) BETWEEN ('') AND (x'')))))AND(NULL)))OR(((t0.c0)<>(t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(rt0.c4 AS TEXT)))) LEFT OUTER JOIN rt0 ON (((vt0.c0) NOTNULL) IN ()) WHERE (json_type(rt0.c0)) ORDER BY ((CAST(NULL AS TEXT))>>((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_type(rt0.c0)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(rt0.c4 AS TEXT)))) LEFT OUTER JOIN rt0 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY ((CAST(NULL AS TEXT))>>((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(rt0.c4 AS TEXT)))) LEFT OUTER JOIN rt0 ON (((vt0.c0) NOTNULL) IN ()) WHERE (json_type(rt0.c0)) ORDER BY ((CAST(NULL AS TEXT))>>((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_type(rt0.c0)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((rt0.c3)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(rt0.c4 AS TEXT)))) LEFT OUTER JOIN rt0 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY ((CAST(NULL AS TEXT))>>((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((- (x'')))&(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((- (x'')))&(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((- (x'')))&(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((- (x'')))&(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((- (x'')))&(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE ((('T&vh') BETWEEN (-8.76898961E8) AND (UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((('T&vh') BETWEEN (-8.76898961E8) AND (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (vt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE ((('T&vh') BETWEEN (-8.76898961E8) AND (UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((('T&vh') BETWEEN (-8.76898961E8) AND (UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (vt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (vt0.c1 IN ()) COLLATE RTRIM WHERE ((('T&vh') BETWEEN (-8.76898961E8) AND (UPPER(DISTINCT rt0.c2))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<=(UPPER(DISTINCT rt0.c1))) WHERE ((((((('l?') BETWEEN (0.6204823739107067) AND (t0.c0)))AND(CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END)))OR((rt0.c0 IN ())))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((((('l?') BETWEEN (0.6204823739107067) AND (t0.c0)))AND(CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END)))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<=(UPPER(DISTINCT rt0.c1))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<=(UPPER(DISTINCT rt0.c1))) WHERE ((((((('l?') BETWEEN (0.6204823739107067) AND (t0.c0)))AND(CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END)))OR((rt0.c0 IN ())))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((((('l?') BETWEEN (0.6204823739107067) AND (t0.c0)))AND(CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END)))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<=(UPPER(DISTINCT rt0.c1))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((NULLIF(rt0.c2, rt0.c1))<=(UPPER(DISTINCT rt0.c1))) WHERE ((((((('l?') BETWEEN (0.6204823739107067) AND (t0.c0)))AND(CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END)))OR((rt0.c0 IN ())))) ORDER BY ((((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(CAST(rt0.c1 AS BLOB)));
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((0.14532368920212912 IN ())) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1))) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.14532368920212912 IN ())) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((0.14532368920212912 IN ())) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1))) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.14532368920212912 IN ())) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((0.14532368920212912 IN ())) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c1))) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ()))!=((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((((vt0.c1) ISNULL))=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1) ISNULL))=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ()))!=((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((((vt0.c1) ISNULL))=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1) ISNULL))=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2 IN ()))!=((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((((vt0.c1) ISNULL))=(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c4)GLOB(rt0.c1)))-((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)GLOB(rt0.c1)))-((- (rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c4)GLOB(rt0.c1)))-((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)GLOB(rt0.c1)))-((- (rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c4)GLOB(rt0.c1)))-((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY (((((x'c603b317')) BETWEEN ((t0.c0)) AND ((t0.c0))))&(CAST(t0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((((x'c603b317')) BETWEEN ((t0.c0)) AND ((t0.c0))))&(CAST(t0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY (((((x'c603b317')) BETWEEN ((t0.c0)) AND ((t0.c0))))&(CAST(t0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((((x'c603b317')) BETWEEN ((t0.c0)) AND ((t0.c0))))&(CAST(t0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY (((((x'c603b317')) BETWEEN ((t0.c0)) AND ((t0.c0))))&(CAST(t0.c0 AS INTEGER))) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(' 8' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(' 8' AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(' 8' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(' 8' AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(' 8' AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))/(rt0.c1 COLLATE RTRIM))) ORDER BY (0.40403667671408405 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))/(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (0.40403667671408405 IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))/(rt0.c1 COLLATE RTRIM))) ORDER BY (0.40403667671408405 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))/(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (0.40403667671408405 IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT NULL))/(rt0.c1 COLLATE RTRIM))) ORDER BY (0.40403667671408405 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('-803942096' IN ())) ISNULL) WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((vt0.c0 IN ())))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('-803942096' IN ())) ISNULL) ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('-803942096' IN ())) ISNULL) WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((vt0.c0 IN ())))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('-803942096' IN ())) ISNULL) ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((('-803942096' IN ())) ISNULL) WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((vt0.c0 IN ())))) ORDER BY rt0.c2;
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT * FROM t0, rt0, vt0 WHERE ((((x'377f' IN (rt0.c2, vt0.c0)))*((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((x'377f' IN (rt0.c2, vt0.c0)))*((~ (rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((x'377f' IN (rt0.c2, vt0.c0)))*((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((x'377f' IN (rt0.c2, vt0.c0)))*((~ (rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((x'377f' IN (rt0.c2, vt0.c0)))*((~ (rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))|(((rt0.c4)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))|(((rt0.c4)<=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))|(((rt0.c4)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))|(((rt0.c4)<=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))|(((rt0.c4)<=(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (-2044857953);
SELECT SUM(count) FROM (SELECT ALL ((-2044857953) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (-2044857953);
SELECT SUM(count) FROM (SELECT ALL ((-2044857953) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (-2044857953);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)%(vt0.c0)))OR(((t0.c0)<>(1171657834)))))AND(vt0.c0)))OR(((((vt0.c1)OR(vt0.c0)))OR(0xffffffffcbbb956f)))))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)%(vt0.c0)))OR(((t0.c0)<>(1171657834)))))AND(vt0.c0)))OR(((((vt0.c1)OR(vt0.c0)))OR(0xffffffffcbbb956f)))))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)%(vt0.c0)))OR(((t0.c0)<>(1171657834)))))AND(vt0.c0)))OR(((((vt0.c1)OR(vt0.c0)))OR(0xffffffffcbbb956f)))))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)%(vt0.c0)))OR(((t0.c0)<>(1171657834)))))AND(vt0.c0)))OR(((((vt0.c1)OR(vt0.c0)))OR(0xffffffffcbbb956f)))))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)%(vt0.c0)))OR(((t0.c0)<>(1171657834)))))AND(vt0.c0)))OR(((((vt0.c1)OR(vt0.c0)))OR(0xffffffffcbbb956f)))))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (((0.3912426138700206)LIKE(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0.3912426138700206)LIKE(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((0.3912426138700206)LIKE(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0.3912426138700206)LIKE(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((0.3912426138700206)LIKE(TRIM(DISTINCT vt0.c0))));
SELECT * FROM t0, rt0 WHERE (CASE NULL  WHEN ((t0.c0)<<(t0.c0)) THEN ((rt0.c0)|(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c4) BETWEEN (t0.c0) AND (0.9006641241246058)) WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(x'2669' AS REAL) THEN rt0.c3 WHEN (('')<<(t0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((t0.c0)<<(t0.c0)) THEN ((rt0.c0)|(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c4) BETWEEN (t0.c0) AND (0.9006641241246058)) WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(x'2669' AS REAL) THEN rt0.c3 WHEN (('')<<(t0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE NULL  WHEN ((t0.c0)<<(t0.c0)) THEN ((rt0.c0)|(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c4) BETWEEN (t0.c0) AND (0.9006641241246058)) WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(x'2669' AS REAL) THEN rt0.c3 WHEN (('')<<(t0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((t0.c0)<<(t0.c0)) THEN ((rt0.c0)|(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c4) BETWEEN (t0.c0) AND (0.9006641241246058)) WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(x'2669' AS REAL) THEN rt0.c3 WHEN (('')<<(t0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE NULL  WHEN ((t0.c0)<<(t0.c0)) THEN ((rt0.c0)|(rt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c4) BETWEEN (t0.c0) AND (0.9006641241246058)) WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c0)) WHEN CAST(x'2669' AS REAL) THEN rt0.c3 WHEN (('')<<(t0.c0)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)) END);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS FALSE));
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY (((((rt0.c2))>((rt0.c2)))) IS FALSE)  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c2))>((rt0.c2)))) IS FALSE)  NULLS LAST, vt0.c1);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY (((((rt0.c2))>((rt0.c2)))) IS FALSE)  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c2))>((rt0.c2)))) IS FALSE)  NULLS LAST, vt0.c1);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY (((((rt0.c2))>((rt0.c2)))) IS FALSE)  NULLS LAST, vt0.c1;
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY 0xc983f5f DESC, ((LIKELIHOOD(t0.c0, 0.24588237261414958))<<(((t0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))AND('㒾M'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY 0Xc983f5f DESC, ((LIKELIHOOD(t0.c0, 0.24588237261414958))<<(((t0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))AND('㒾M'))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY 0xc983f5f DESC, ((LIKELIHOOD(t0.c0, 0.24588237261414958))<<(((t0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))AND('㒾M'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY 0Xc983f5f DESC, ((LIKELIHOOD(t0.c0, 0.24588237261414958))<<(((t0.c0)LIKE(t0.c0)))) DESC  NULLS FIRST, ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))AND('㒾M'))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- ((t0.c0 IN ())))) ORDER BY ((ABS(DISTINCT t0.c0))/(0.6488415965340821))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((ABS(DISTINCT t0.c0))/(0.6488415965340821))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- ((t0.c0 IN ())))) ORDER BY ((ABS(DISTINCT t0.c0))/(0.6488415965340821))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((t0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((ABS(DISTINCT t0.c0))/(0.6488415965340821))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((- ((t0.c0 IN ())))) ORDER BY ((ABS(DISTINCT t0.c0))/(0.6488415965340821))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY json_object(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE rt0.c3 END, CAST(rt0.c2 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY json_object(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE rt0.c3 END, CAST(rt0.c2 AS REAL))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY json_object(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE rt0.c3 END, CAST(rt0.c2 AS REAL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY json_object(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE rt0.c3 END, CAST(rt0.c2 AS REAL))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY json_object(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 WHEN x'' THEN rt0.c1 ELSE rt0.c3 END, CAST(rt0.c2 AS REAL))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((((vt0.c0)%(vt0.c0)))=(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))==(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((((vt0.c0)%(vt0.c0)))=(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0)))==(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY ((((vt0.c0)%(vt0.c0)))=(((vt0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '-2078136858' END RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0))))<>((0.22225328469207972))) WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))  WHEN CASE WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END THEN ((((vt0.c1)AND(t0.c0)))AND(rt0.c1)) END ASC, LIKELIHOOD(vt0.c1, 0.6032555697987655);
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '-2078136858' END RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0))))!=((0.22225328469207972))) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))  WHEN CASE WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END THEN ((((vt0.c1)AND(t0.c0)))AND(rt0.c1)) END ASC, LIKELIHOOD(vt0.c1, 0.6032555697987655));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '-2078136858' END RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0))))<>((0.22225328469207972))) WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))  WHEN CASE WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END THEN ((((vt0.c1)AND(t0.c0)))AND(rt0.c1)) END ASC, LIKELIHOOD(vt0.c1, 0.6032555697987655);
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '-2078136858' END RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0))))!=((0.22225328469207972))) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))  WHEN CASE WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END THEN ((((vt0.c1)AND(t0.c0)))AND(rt0.c1)) END ASC, LIKELIHOOD(vt0.c1, 0.6032555697987655));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '-2078136858' END RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)AND(rt0.c4)))OR(vt0.c0))))<>((0.22225328469207972))) WHERE ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOTNULL)) ORDER BY CASE ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))  WHEN CASE WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END THEN ((((vt0.c1)AND(t0.c0)))AND(rt0.c1)) END ASC, LIKELIHOOD(vt0.c1, 0.6032555697987655);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE NULL END)) WHERE ('eㅛA(<Ys');
SELECT SUM(count) FROM (SELECT ALL (('eㅛA(<Ys') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE NULL END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE NULL END)) WHERE ('eㅛA(<Ys');
SELECT SUM(count) FROM (SELECT ALL (('eㅛA(<Ys') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE NULL END)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0) IS TRUE) IN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 ELSE NULL END)) WHERE ('eㅛA(<Ys');
SELECT * FROM t0 WHERE ((('1292808847') ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('1292808847') ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('1292808847') ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('1292808847') ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('1292808847') ISNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c1))<((x'cb3a'))) COLLATE NOCASE) ORDER BY CAST(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))<((x'cb3a'))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c1))<((x'cb3a'))) COLLATE NOCASE) ORDER BY CAST(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))<((x'cb3a'))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((vt0.c1))<((x'cb3a'))) COLLATE NOCASE) ORDER BY CAST(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) AS BLOB);
SELECT COUNT(*) FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((vt0.c1 IN (vt0.c0)))OR(vt0.c1)))OR(0.7995952896784502)))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))))OR(((rt0.c1)<(rt0.c3))))) ORDER BY ((((rt0.c4)|(rt0.c4)))>(((rt0.c2) ISNULL))), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN (vt0.c0)))OR(vt0.c1)))OR(0.7995952896784502)))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))))OR(((rt0.c1)<(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c4)|(rt0.c4)))>(((rt0.c2) ISNULL))), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((vt0.c1 IN (vt0.c0)))OR(vt0.c1)))OR(0.7995952896784502)))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))))OR(((rt0.c1)<(rt0.c3))))) ORDER BY ((((rt0.c4)|(rt0.c4)))>(((rt0.c2) ISNULL))), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN (vt0.c0)))OR(vt0.c1)))OR(0.7995952896784502)))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))))OR(((rt0.c1)<(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((rt0.c4)|(rt0.c4)))>(((rt0.c2) ISNULL))), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((((vt0.c1 IN (vt0.c0)))OR(vt0.c1)))OR(0.7995952896784502)))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))))OR(((rt0.c1)<(rt0.c3))))) ORDER BY ((((rt0.c4)|(rt0.c4)))>(((rt0.c2) ISNULL))), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN ((((vt0.c0)AND(vt0.c1)))AND(t0.c0)) ELSE ((rt0.c0)|(rt0.c4)) END WHERE (((rt0.c2) IS TRUE)) ORDER BY (+ (('P{bD' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN ((((vt0.c0)AND(vt0.c1)))AND(t0.c0)) ELSE ((rt0.c0)|(rt0.c4)) END ORDER BY (+ (('P{bD' IN ()))));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN ((((vt0.c0)AND(vt0.c1)))AND(t0.c0)) ELSE ((rt0.c0)|(rt0.c4)) END WHERE (((rt0.c2) IS TRUE)) ORDER BY (+ (('P{bD' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN ((((vt0.c0)AND(vt0.c1)))AND(t0.c0)) ELSE ((rt0.c0)|(rt0.c4)) END ORDER BY (+ (('P{bD' IN ()))));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1) IS FALSE) THEN ((((vt0.c0)AND(vt0.c1)))AND(t0.c0)) ELSE ((rt0.c0)|(rt0.c4)) END WHERE (((rt0.c2) IS TRUE)) ORDER BY (+ (('P{bD' IN ())));
SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND ('6GO\n⨔l![')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND ('6GO\n⨔l![')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND ('6GO\n⨔l![')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND ('6GO\n⨔l![')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND ('6GO\n⨔l![')) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0)*(rt0.c1))) AND (((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) IS FALSE)) ORDER BY '1198138015' ASC, ((((CASE 0.17844866196927245  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END)OR((NOT (rt0.c4)))))AND(((rt0.c2)>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY '1198138015' ASC, ((((CASE 0.17844866196927245  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END)OR((NOT (rt0.c4)))))AND(((rt0.c2)>(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) IS FALSE)) ORDER BY '1198138015' ASC, ((((CASE 0.17844866196927245  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END)OR((NOT (rt0.c4)))))AND(((rt0.c2)>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY '1198138015' ASC, ((((CASE 0.17844866196927245  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END)OR((NOT (rt0.c4)))))AND(((rt0.c2)>(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) IS FALSE)) ORDER BY '1198138015' ASC, ((((CASE 0.17844866196927245  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END)OR((NOT (rt0.c4)))))AND(((rt0.c2)>(rt0.c2)))) DESC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c4) AND (t0.c0)), (((rt0.c2))==((rt0.c1))), ((x'')/(rt0.c0))))!=((((t0.c0)+(vt0.c1)), ((((rt0.c4)OR(t0.c0)))OR(rt0.c3)), rt0.c0)))) ORDER BY (((((((((rt0.c2 IN (rt0.c0)))AND(vt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS TEXT))))AND(NULL)))OR(rt0.c4 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) BETWEEN (rt0.c4) AND (t0.c0)), (((rt0.c2))==((rt0.c1))), ((x'')/(rt0.c0))))!=((((t0.c0)+(vt0.c1)), ((((rt0.c4)OR(t0.c0)))OR(rt0.c3)), rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((((rt0.c2 IN (rt0.c0)))AND(vt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS TEXT))))AND(NULL)))OR(rt0.c4 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c4) AND (t0.c0)), (((rt0.c2))==((rt0.c1))), ((x'')/(rt0.c0))))!=((((t0.c0)+(vt0.c1)), ((((rt0.c4)OR(t0.c0)))OR(rt0.c3)), rt0.c0)))) ORDER BY (((((((((rt0.c2 IN (rt0.c0)))AND(vt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS TEXT))))AND(NULL)))OR(rt0.c4 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) BETWEEN (rt0.c4) AND (t0.c0)), (((rt0.c2))==((rt0.c1))), ((x'')/(rt0.c0))))!=((((t0.c0)+(vt0.c1)), ((((rt0.c4)OR(t0.c0)))OR(rt0.c3)), rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((((((rt0.c2 IN (rt0.c0)))AND(vt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS TEXT))))AND(NULL)))OR(rt0.c4 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c4) AND (t0.c0)), (((rt0.c2))==((rt0.c1))), ((x'')/(rt0.c0))))!=((((t0.c0)+(vt0.c1)), ((((rt0.c4)OR(t0.c0)))OR(rt0.c3)), rt0.c0)))) ORDER BY (((((((((rt0.c2 IN (rt0.c0)))AND(vt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS TEXT))))AND(NULL)))OR(rt0.c4 COLLATE BINARY)) DESC;
SELECT * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (vt0.c1);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY CAST((((rt0.c2))!=((rt0.c3))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((((rt0.c2))<>((rt0.c3))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY CAST((((rt0.c2))!=((rt0.c3))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST((((rt0.c2))<>((rt0.c3))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY CAST((((rt0.c2))!=((rt0.c3))) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ('1716332035') ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN ('rutyb') AND (vt0.c1)) THEN highlight(vt0.c0, 'unixepoch', vt0.c1, vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, CAST(vt0.c1 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (('1716332035') IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN ('rutyb') AND (vt0.c1)) THEN highlight(vt0.c0, 'unixepoch', vt0.c1, vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, CAST(vt0.c1 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE ('1716332035') ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN ('rutyb') AND (vt0.c1)) THEN highlight(vt0.c0, 'unixepoch', vt0.c1, vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, CAST(vt0.c1 COLLATE NOCASE AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (('1716332035') IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN ('rutyb') AND (vt0.c1)) THEN highlight(vt0.c0, 'unixepoch', vt0.c1, vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, CAST(vt0.c1 COLLATE NOCASE AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE ('1716332035') ORDER BY CASE CAST(vt0.c1 AS BLOB)  WHEN ((vt0.c1) NOT BETWEEN ('rutyb') AND (vt0.c1)) THEN highlight(vt0.c0, 'unixepoch', vt0.c1, vt0.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, CAST(vt0.c1 COLLATE NOCASE AS TEXT);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN -207603292 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)IS NOT(0X864b4bb))))>((((vt0.c0) IS TRUE), CAST(t0.c0 AS NUMERIC), vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN -207603292 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)IS NOT(0X864b4bb))))>((((vt0.c0) IS TRUE), CAST(t0.c0 AS NUMERIC), vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN -207603292 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)IS NOT(0X864b4bb))))>((((vt0.c0) IS TRUE), CAST(t0.c0 AS NUMERIC), vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN -207603292 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)IS NOT(0X864b4bb))))>((((vt0.c0) IS TRUE), CAST(t0.c0 AS NUMERIC), vt0.c1)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN -207603292 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)IS NOT(0X864b4bb))))>((((vt0.c0) IS TRUE), CAST(t0.c0 AS NUMERIC), vt0.c1))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<=((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))<=((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<=((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(rt0.c0)))<=((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)GLOB(rt0.c0)))<=((+ (rt0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((+ (t0.c0)))AND(((vt0.c0)&(t0.c0)))))OR('n4B}/'))) ORDER BY (((((vt0.c0))>=((t0.c0)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))AND(((vt0.c0)&(t0.c0)))))OR('n4B}/'))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0))>=((t0.c0)))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((+ (t0.c0)))AND(((vt0.c0)&(t0.c0)))))OR('n4B}/'))) ORDER BY (((((vt0.c0))>=((t0.c0)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))AND(((vt0.c0)&(t0.c0)))))OR('n4B}/'))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c0))>=((t0.c0)))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((+ (t0.c0)))AND(((vt0.c0)&(t0.c0)))))OR('n4B}/'))) ORDER BY (((((vt0.c0))>=((t0.c0)))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)*(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)*(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)*(t0.c0))) ISNULL));
SELECT ALL * FROM vt0 WHERE (x'dc6b') ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c1)))) AND ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'dc6b') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c1)))) AND ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))), vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'dc6b') ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c1)))) AND ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'dc6b') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c1)))) AND ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))), vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'dc6b') ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c1)))) AND ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))), vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((vt0.c0)>=(vt0.c0))))>((((rt0.c3)<(0.418985372455406))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>=(vt0.c0))))>((((rt0.c3)<(0.418985372455406)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((vt0.c0)>=(vt0.c0))))>((((rt0.c3)<(0.418985372455406))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>=(vt0.c0))))>((((rt0.c3)<(0.418985372455406)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((vt0.c0)>=(vt0.c0))))>((((rt0.c3)<(0.418985372455406))))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (rt0.c4);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON -1652725962 WHERE (rt0.c2) ORDER BY (('K᪄#?yw,I')<<((+ (rt0.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON -1652725962 ORDER BY (('K᪄#?yw,I')<<((+ (rt0.c4)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON -1652725962 WHERE (rt0.c2) ORDER BY (('K᪄#?yw,I')<<((+ (rt0.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON -1652725962 ORDER BY (('K᪄#?yw,I')<<((+ (rt0.c4)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON -1652725962 WHERE (rt0.c2) ORDER BY (('K᪄#?yw,I')<<((+ (rt0.c4)))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((rt0.c1 IN ()));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0, t0 WHERE (LIKE(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LIKE(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LIKE(CAST(vt0.c1 AS TEXT), CAST(vt0.c1 AS NUMERIC)));
SELECT * FROM vt0, t0, rt0 WHERE (((((~ (rt0.c2)), ((rt0.c1)GLOB(rt0.c3)), (((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((rt0.c2, '', t0.c0)))))>=((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c3 END, (~ (rt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2)), ((rt0.c1)GLOB(rt0.c3)), (((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((rt0.c2, '', t0.c0)))))>=((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c3 END, (~ (rt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((~ (rt0.c2)), ((rt0.c1)GLOB(rt0.c3)), (((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((rt0.c2, '', t0.c0)))))>=((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c3 END, (~ (rt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2)), ((rt0.c1)GLOB(rt0.c3)), (((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((rt0.c2, '', t0.c0)))))>=((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c3 END, (~ (rt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((~ (rt0.c2)), ((rt0.c1)GLOB(rt0.c3)), (((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((rt0.c2, '', t0.c0)))))>=((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c3 END, (~ (rt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))%((+ (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) IS FALSE))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((highlight(vt0.c0, rt0.c4, t0.c0, rt0.c4))AND(CAST(vt0.c1 AS BLOB))))OR(((rt0.c0)LIKE(vt0.c1)))))AND(((((t0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((highlight(vt0.c0, rt0.c4, t0.c0, rt0.c4))AND(CAST(vt0.c1 AS BLOB))))OR(((rt0.c0)LIKE(vt0.c1)))))AND(((((t0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((highlight(vt0.c0, rt0.c4, t0.c0, rt0.c4))AND(CAST(vt0.c1 AS BLOB))))OR(((rt0.c0)LIKE(vt0.c1)))))AND(((((t0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((highlight(vt0.c0, rt0.c4, t0.c0, rt0.c4))AND(CAST(vt0.c1 AS BLOB))))OR(((rt0.c0)LIKE(vt0.c1)))))AND(((((t0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((highlight(vt0.c0, rt0.c4, t0.c0, rt0.c4))AND(CAST(vt0.c1 AS BLOB))))OR(((rt0.c0)LIKE(vt0.c1)))))AND(((((t0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (vt0.c0)))*(TRIM(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))*(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (vt0.c0)))*(TRIM(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))*(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (vt0.c0)))*(TRIM(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) IS FALSE))OR((((vt0.c0))>=((vt0.c1))))))AND(x'')))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c1 IN ()))))AND(x'f0ef')))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) IS FALSE))OR((((vt0.c0))>=((vt0.c1))))))AND(x'')))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c1 IN ()))))AND(x'f0ef')))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) IS FALSE))OR((((vt0.c0))>=((vt0.c1))))))AND(x'')))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c1 IN ()))))AND(x'f0ef')))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) IS FALSE))OR((((vt0.c0))>=((vt0.c1))))))AND(x'')))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c1 IN ()))))AND(x'f0ef')))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0) IS FALSE))OR((((vt0.c0))>=((vt0.c1))))))AND(x'')))OR(vt0.c0 COLLATE NOCASE)))OR((vt0.c1 IN ()))))AND(x'f0ef')))AND(vt0.c0 COLLATE RTRIM)));
SELECT * FROM t0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(NULL)))OR(rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1))<((rt0.c4))), rt0.c2)) ORDER BY ((CAST(rt0.c0 AS TEXT))IS NOT('0.8904376567943281'));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt0.c1))<((rt0.c4))), rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))IS NOT('0.8904376567943281')));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1))<((rt0.c4))), rt0.c2)) ORDER BY ((CAST(rt0.c0 AS TEXT))IS NOT('0.8904376567943281'));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt0.c1))<((rt0.c4))), rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))IS NOT('0.8904376567943281')));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c1))<((rt0.c4))), rt0.c2)) ORDER BY ((CAST(rt0.c0 AS TEXT))IS NOT('0.8904376567943281'));
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('eㅛa(<ys' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('eㅛa(<ys' COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('eㅛa(<ys' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('eㅛa(<ys' COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('eㅛa(<ys' COLLATE BINARY))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c4) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c4) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c4) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((((('0.6488415965340821')%(t0.c0)))<<(CASE WHEN t0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((('0.6488415965340821')%(t0.c0)))<<(CASE WHEN t0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((((('0.6488415965340821')%(t0.c0)))<<(CASE WHEN t0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((('0.6488415965340821')%(t0.c0)))<<(CASE WHEN t0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((((('0.6488415965340821')%(t0.c0)))<<(CASE WHEN t0.c0 THEN vt0.c1 END)));
SELECT ALL * FROM rt0 WHERE ((((-1038101485 IN (rt0.c4)))|(CASE WHEN rt0.c4 THEN rt0.c0 END))) ORDER BY ((rt0.c2) ISNULL), CAST(((rt0.c0)>>(rt0.c1)) AS NUMERIC) DESC  NULLS LAST, ((((rt0.c0)<=(NULL))) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((-1038101485 IN (rt0.c4)))|(CASE WHEN rt0.c4 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) ISNULL), CAST(((rt0.c0)>>(rt0.c1)) AS NUMERIC) DESC  NULLS LAST, ((((rt0.c0)<=(NULL))) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((-1038101485 IN (rt0.c4)))|(CASE WHEN rt0.c4 THEN rt0.c0 END))) ORDER BY ((rt0.c2) ISNULL), CAST(((rt0.c0)>>(rt0.c1)) AS NUMERIC) DESC  NULLS LAST, ((((rt0.c0)<=(NULL))) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((-1038101485 IN (rt0.c4)))|(CASE WHEN rt0.c4 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) ISNULL), CAST(((rt0.c0)>>(rt0.c1)) AS NUMERIC) DESC  NULLS LAST, ((((rt0.c0)<=(NULL))) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((-1038101485 IN (rt0.c4)))|(CASE WHEN rt0.c4 THEN rt0.c0 END))) ORDER BY ((rt0.c2) ISNULL), CAST(((rt0.c0)>>(rt0.c1)) AS NUMERIC) DESC  NULLS LAST, ((((rt0.c0)<=(NULL))) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c4 AS TEXT) COLLATE BINARY COLLATE BINARY) ORDER BY (((((+ (rt0.c4)))AND((+ (rt0.c4)))))OR(((rt0.c0)<=(rt0.c1))))  NULLS FIRST, (x'' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS TEXT) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((+ (rt0.c4)))AND((+ (rt0.c4)))))OR(((rt0.c0)<=(rt0.c1))))  NULLS FIRST, (x'' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c4 AS TEXT) COLLATE BINARY COLLATE BINARY) ORDER BY (((((+ (rt0.c4)))AND((+ (rt0.c4)))))OR(((rt0.c0)<=(rt0.c1))))  NULLS FIRST, (x'' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS TEXT) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((+ (rt0.c4)))AND((+ (rt0.c4)))))OR(((rt0.c0)<=(rt0.c1))))  NULLS FIRST, (x'' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c4 AS TEXT) COLLATE BINARY COLLATE BINARY) ORDER BY (((((+ (rt0.c4)))AND((+ (rt0.c4)))))OR(((rt0.c0)<=(rt0.c1))))  NULLS FIRST, (x'' IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR('35784605')))OR(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR('35784605')))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR('35784605')))OR(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)OR('35784605')))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR('35784605')))OR(rt0.c4)) IN ()));
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c0 AS REAL))));
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '-2049609934' WHERE (((rt0.c2) NOT BETWEEN (vt0.c0) AND (0x747e6ba0)) COLLATE BINARY) ORDER BY ((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(((vt0.c1)<=(rt0.c4)))))AND(TYPEOF(''))), CAST(vt0.c1 COLLATE BINARY AS REAL), (rt0.c2 IN ()) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (0x747e6ba0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON '-2049609934' ORDER BY ((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(((vt0.c1)<=(rt0.c4)))))AND(TYPEOF(''))), CAST(vt0.c1 COLLATE BINARY AS REAL), (rt0.c2 IN ()) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '-2049609934' WHERE (((rt0.c2) NOT BETWEEN (vt0.c0) AND (0x747e6ba0)) COLLATE BINARY) ORDER BY ((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(((vt0.c1)<=(rt0.c4)))))AND(TYPEOF(''))), CAST(vt0.c1 COLLATE BINARY AS REAL), (rt0.c2 IN ()) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (0x747e6ba0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON '-2049609934' ORDER BY ((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(((vt0.c1)<=(rt0.c4)))))AND(TYPEOF(''))), CAST(vt0.c1 COLLATE BINARY AS REAL), (rt0.c2 IN ()) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON '-2049609934' WHERE (((rt0.c2) NOT BETWEEN (vt0.c0) AND (0x747e6ba0)) COLLATE BINARY) ORDER BY ((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)))AND(((vt0.c1)<=(rt0.c4)))))AND(TYPEOF(''))), CAST(vt0.c1 COLLATE BINARY AS REAL), (rt0.c2 IN ()) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- (((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- (((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- (((rt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOTNULL))!=(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))<>(t0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOTNULL))!=(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))<>(t0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOTNULL))!=(t0.c0)));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT ALL * FROM vt0 WHERE (CASE WHEN '' COLLATE BINARY THEN (+ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' COLLATE BINARY THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN '' COLLATE BINARY THEN (+ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' COLLATE BINARY THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN '' COLLATE BINARY THEN (+ (vt0.c1)) END);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c3)));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (JULIANDAY(rt0.c3, rt0.c1, rt0.c2) IN ()) WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (JULIANDAY(rt0.c3, rt0.c1, rt0.c2) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (JULIANDAY(rt0.c3, rt0.c1, rt0.c2) IN ()) WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (JULIANDAY(rt0.c3, rt0.c1, rt0.c2) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (JULIANDAY(rt0.c3, rt0.c1, rt0.c2) IN ()) WHERE ((+ (rt0.c3)));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((((((((((((rt0.c2)+(rt0.c4)))OR(((vt0.c1)<(t0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(LIKELIHOOD(rt0.c2, 0.72213606776293))))OR(CAST(vt0.c0 AS BLOB))))OR((rt0.c2 IN ()))))OR(((vt0.c1) NOT BETWEEN ('K') AND (rt0.c4)))) WHERE (((vt0.c0 COLLATE BINARY)>=(x''))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=(x''))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((((((((((((rt0.c2)+(rt0.c4)))OR(((vt0.c1)<(t0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(LIKELIHOOD(rt0.c2, 0.72213606776293))))OR(CAST(vt0.c0 AS BLOB))))OR((rt0.c2 IN ()))))OR(((vt0.c1) NOT BETWEEN ('K') AND (rt0.c4)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((((((((((((rt0.c2)+(rt0.c4)))OR(((vt0.c1)<(t0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(LIKELIHOOD(rt0.c2, 0.72213606776293))))OR(CAST(vt0.c0 AS BLOB))))OR((rt0.c2 IN ()))))OR(((vt0.c1) NOT BETWEEN ('K') AND (rt0.c4)))) WHERE (((vt0.c0 COLLATE BINARY)>=(x''))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>=(x''))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((((((((((((rt0.c2)+(rt0.c4)))OR(((vt0.c1)<(t0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(LIKELIHOOD(rt0.c2, 0.72213606776293))))OR(CAST(vt0.c0 AS BLOB))))OR((rt0.c2 IN ()))))OR(((vt0.c1) NOT BETWEEN ('K') AND (rt0.c4)))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON ((((((((((((((rt0.c2)+(rt0.c4)))OR(((vt0.c1)<(t0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(LIKELIHOOD(rt0.c2, 0.72213606776293))))OR(CAST(vt0.c0 AS BLOB))))OR((rt0.c2 IN ()))))OR(((vt0.c1) NOT BETWEEN ('K') AND (rt0.c4)))) WHERE (((vt0.c0 COLLATE BINARY)>=(x''))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- (ROUND(rt0.c4, rt0.c1)))) ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(((rt0.c2)<=(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (ROUND(rt0.c4, rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(((rt0.c2)<=(t0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- (ROUND(rt0.c4, rt0.c1)))) ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(((rt0.c2)<=(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (ROUND(rt0.c4, rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(((rt0.c2)<=(t0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- (ROUND(rt0.c4, rt0.c1)))) ORDER BY ((CAST(t0.c0 AS REAL))IS NOT(((rt0.c2)<=(t0.c0)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))LIKE(((t0.c0)>>(t0.c0))))) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0)))LIKE(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))LIKE(((t0.c0)>>(t0.c0))))) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0)))LIKE(((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0)))LIKE(((t0.c0)>>(t0.c0))))) ORDER BY CASE WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((x'a80d' COLLATE NOCASE)|(('-2040086732' IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'a80d' COLLATE NOCASE)|(('-2040086732' IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((x'a80d' COLLATE NOCASE)|(('-2040086732' IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'a80d' COLLATE NOCASE)|(('-2040086732' IN (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((x'a80d' COLLATE NOCASE)|(('-2040086732' IN (vt0.c0)))));
SELECT * FROM vt0, rt0, t0 WHERE (COALESCE(CAST(rt0.c0 AS REAL), ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c0 AS REAL), ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (COALESCE(CAST(rt0.c0 AS REAL), ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c0 AS REAL), ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (COALESCE(CAST(rt0.c0 AS REAL), ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c1)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((TYPEOF(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c4) AND (CAST(t0.c0 AS REAL)))) ORDER BY '-1800035142' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c4) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY '-1800035142' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((TYPEOF(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c4) AND (CAST(t0.c0 AS REAL)))) ORDER BY '-1800035142' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c4) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY '-1800035142' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((TYPEOF(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c4) AND (CAST(t0.c0 AS REAL)))) ORDER BY '-1800035142' ASC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CASE WHEN UNLIKELY(rt0.c4) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)>(rt0.c1)) THEN ((rt0.c2)>=(rt0.c1)) WHEN -803942096 THEN ((((rt0.c2)AND(rt0.c4)))AND(t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c3, t0.c0))) END WHERE (x'') ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN ((rt0.c3 IN ())) AND (((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE WHEN UNLIKELY(rt0.c4) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)>(rt0.c1)) THEN ((rt0.c2)>=(rt0.c1)) WHEN -803942096 THEN ((((rt0.c2)AND(rt0.c4)))AND(t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c3, t0.c0))) END ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN ((rt0.c3 IN ())) AND (((t0.c0) ISNULL))) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CASE WHEN UNLIKELY(rt0.c4) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)>(rt0.c1)) THEN ((rt0.c2)>=(rt0.c1)) WHEN -803942096 THEN ((((rt0.c2)AND(rt0.c4)))AND(t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c3, t0.c0))) END WHERE (x'') ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN ((rt0.c3 IN ())) AND (((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE WHEN UNLIKELY(rt0.c4) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)>(rt0.c1)) THEN ((rt0.c2)>=(rt0.c1)) WHEN -803942096 THEN ((((rt0.c2)AND(rt0.c4)))AND(t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c3, t0.c0))) END ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN ((rt0.c3 IN ())) AND (((t0.c0) ISNULL))) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CASE WHEN UNLIKELY(rt0.c4) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1)>(rt0.c1)) THEN ((rt0.c2)>=(rt0.c1)) WHEN -803942096 THEN ((((rt0.c2)AND(rt0.c4)))AND(t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c3, t0.c0))) END WHERE (x'') ORDER BY ((((t0.c0)>(t0.c0))) NOT BETWEEN ((rt0.c3 IN ())) AND (((t0.c0) ISNULL))) ASC;
SELECT ALL * FROM vt0, t0, rt0 WHERE (IFNULL((rt0.c2 IN ()), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN ()), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (IFNULL((rt0.c2 IN ()), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c2 IN ()), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (IFNULL((rt0.c2 IN ()), ((vt0.c1) BETWEEN (t0.c0) AND (rt0.c2))));
SELECT * FROM vt0 INNER JOIN t0 ON (((rt0.c4 IN ())) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)OR(((((NULL)OR(vt0.c1)))AND(vt0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c2)>(rt0.c2)))))AND((vt0.c1 IN ()))) WHERE (((((rt0.c2)/(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((rt0.c4 IN ())) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)OR(((((NULL)OR(vt0.c1)))AND(vt0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c2)>(rt0.c2)))))AND((vt0.c1 IN ()))));
SELECT * FROM vt0 INNER JOIN t0 ON (((rt0.c4 IN ())) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)OR(((((NULL)OR(vt0.c1)))AND(vt0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c2)>(rt0.c2)))))AND((vt0.c1 IN ()))) WHERE (((((rt0.c2)/(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((rt0.c4 IN ())) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)OR(((((NULL)OR(vt0.c1)))AND(vt0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c2)>(rt0.c2)))))AND((vt0.c1 IN ()))));
SELECT * FROM vt0 INNER JOIN t0 ON (((rt0.c4 IN ())) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE vt0.c1 END)OR(((((NULL)OR(vt0.c1)))AND(vt0.c0)))))AND(CAST(rt0.c2 AS NUMERIC))))AND(((rt0.c2)>(rt0.c2)))))AND((vt0.c1 IN ()))) WHERE (((((rt0.c2)/(rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (COALESCE(((rt0.c0)<=(vt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c0)<=(vt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (COALESCE(((rt0.c0)<=(vt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c0)<=(vt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (COALESCE(((rt0.c0)<=(vt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))));
SELECT * FROM vt0, t0, rt0 WHERE (((((((vt0.c1)|(rt0.c3)))AND(((t0.c0)GLOB(rt0.c1)))))OR((((rt0.c0))<((rt0.c3)))))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)|(rt0.c3)))AND(((t0.c0)GLOB(rt0.c1)))))OR((((rt0.c0))<((rt0.c3)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NULL IN ()) ASC);
SELECT * FROM vt0, t0, rt0 WHERE (((((((vt0.c1)|(rt0.c3)))AND(((t0.c0)GLOB(rt0.c1)))))OR((((rt0.c0))<((rt0.c3)))))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)|(rt0.c3)))AND(((t0.c0)GLOB(rt0.c1)))))OR((((rt0.c0))<((rt0.c3)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NULL IN ()) ASC);
SELECT * FROM vt0, t0, rt0 WHERE (((((((vt0.c1)|(rt0.c3)))AND(((t0.c0)GLOB(rt0.c1)))))OR((((rt0.c0))<((rt0.c3)))))) ORDER BY (NULL IN ()) ASC;
SELECT * FROM t0, vt0, rt0 WHERE ((((((vt0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE ((((((vt0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE ((((((vt0.c0 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR(CAST(rt0.c1 AS TEXT)))) ORDER BY ((rt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (('!K[kWF')) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (('!K[kWF')) AND ((rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (('!K[kWF')) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (('!K[kWF')) AND ((rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (('!K[kWF')) AND ((rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c4)))AND((- (rt0.c3))))) ORDER BY (((+ (rt0.c0))) IS FALSE) ASC, ((rt0.c0 COLLATE BINARY)LIKE(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c4)))AND((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c0))) IS FALSE) ASC, ((rt0.c0 COLLATE BINARY)LIKE(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c4)))AND((- (rt0.c3))))) ORDER BY (((+ (rt0.c0))) IS FALSE) ASC, ((rt0.c0 COLLATE BINARY)LIKE(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c4)))AND((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c0))) IS FALSE) ASC, ((rt0.c0 COLLATE BINARY)LIKE(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c4)))AND((- (rt0.c3))))) ORDER BY (((+ (rt0.c0))) IS FALSE) ASC, ((rt0.c0 COLLATE BINARY)LIKE(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)AND(t0.c0)))AND(((vt0.c1) ISNULL))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c0)))AND(((vt0.c1) ISNULL))))AND(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)AND(t0.c0)))AND(((vt0.c1) ISNULL))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(t0.c0)))AND(((vt0.c1) ISNULL))))AND(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)AND(t0.c0)))AND(((vt0.c1) ISNULL))))AND(t0.c0)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c2)==(rt0.c0)))OR((rt0.c3 IN (x'')))))AND((((rt0.c4, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c3)))))) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()), ((CAST(rt0.c4 AS REAL))<((NOT (rt0.c1)))), ((0.27393770535606043)<(CASE x''  WHEN rt0.c2 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)=(rt0.c0)))OR((rt0.c3 IN (x'')))))AND((((rt0.c4, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()), ((CAST(rt0.c4 AS REAL))<((NOT (rt0.c1)))), ((0.27393770535606043)<(CASE x''  WHEN rt0.c2 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c2)==(rt0.c0)))OR((rt0.c3 IN (x'')))))AND((((rt0.c4, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c3)))))) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()), ((CAST(rt0.c4 AS REAL))<((NOT (rt0.c1)))), ((0.27393770535606043)<(CASE x''  WHEN rt0.c2 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)=(rt0.c0)))OR((rt0.c3 IN (x'')))))AND((((rt0.c4, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()), ((CAST(rt0.c4 AS REAL))<((NOT (rt0.c1)))), ((0.27393770535606043)<(CASE x''  WHEN rt0.c2 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c2)==(rt0.c0)))OR((rt0.c3 IN (x'')))))AND((((rt0.c4, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, t0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, rt0.c3)))))) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()), ((CAST(rt0.c4 AS REAL))<((NOT (rt0.c1)))), ((0.27393770535606043)<(CASE x''  WHEN rt0.c2 THEN t0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c1))))==((((vt0.c1)IS(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(vt0.c1))))==((((vt0.c1)IS(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c1))))==((((vt0.c1)IS(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(vt0.c1))))==((((vt0.c1)IS(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c1))))==((((vt0.c1)IS(vt0.c1))))));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c3) ISNULL))) ORDER BY (~ (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c3) ISNULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (~ (rt0.c2)));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c3) ISNULL))) ORDER BY (~ (rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c3) ISNULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (~ (rt0.c2)));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c3) ISNULL))) ORDER BY (~ (rt0.c2));
SELECT * FROM vt0 WHERE (2009182515) ORDER BY TRIM((((vt0.c0, vt0.c1, vt0.c1))!=((vt0.c1, 0.2600172711574531, vt0.c0)))), (((((vt0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((2009182515) IS TRUE)  as count FROM vt0 ORDER BY TRIM((((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, 0.2600172711574531, vt0.c0)))), (((((vt0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)&(vt0.c1)))));
SELECT * FROM vt0 WHERE (2009182515) ORDER BY TRIM((((vt0.c0, vt0.c1, vt0.c1))!=((vt0.c1, 0.2600172711574531, vt0.c0)))), (((((vt0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((2009182515) IS TRUE)  as count FROM vt0 ORDER BY TRIM((((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, 0.2600172711574531, vt0.c0)))), (((((vt0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)&(vt0.c1)))));
SELECT * FROM vt0 WHERE (2009182515) ORDER BY TRIM((((vt0.c0, vt0.c1, vt0.c1))!=((vt0.c1, 0.2600172711574531, vt0.c0)))), (((((vt0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c1)&(vt0.c1))));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN NULL WHEN ((vt0.c0)<(rt0.c0)) THEN ((x'7e69') NOTNULL) WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN '607937462' WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END THEN (rt0.c1 IN (rt0.c4, 0.9873253232859845)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN NULL WHEN ((vt0.c0)<(rt0.c0)) THEN ((x'7e69') NOTNULL) WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN '607937462' WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END THEN (rt0.c1 IN (rt0.c4, 0.9873253232859845)) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN NULL WHEN ((vt0.c0)<(rt0.c0)) THEN ((x'7e69') NOTNULL) WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN '607937462' WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END THEN (rt0.c1 IN (rt0.c4, 0.9873253232859845)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN NULL WHEN ((vt0.c0)<(rt0.c0)) THEN ((x'7e69') NOTNULL) WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN '607937462' WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END THEN (rt0.c1 IN (rt0.c4, 0.9873253232859845)) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN NULL WHEN ((vt0.c0)<(rt0.c0)) THEN ((x'7e69') NOTNULL) WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN '607937462' WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END THEN (rt0.c1 IN (rt0.c4, 0.9873253232859845)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(rt0.c0 COLLATE BINARY AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((((rt0.c4)LIKE(rt0.c4)))<(1522857571)) WHERE (CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (NOT (rt0.c4)) THEN rt0.c1 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN LIKELIHOOD(vt0.c0, 0.9305583056796312) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (NOT (rt0.c4)) THEN rt0.c1 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN LIKELIHOOD(vt0.c0, 0.9305583056796312) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(rt0.c0 COLLATE BINARY AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((((rt0.c4)LIKE(rt0.c4)))<(1522857571)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CAST(rt0.c0 COLLATE BINARY AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((((rt0.c4)LIKE(rt0.c4)))<(1522857571)) WHERE (CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (NOT (rt0.c4)) THEN rt0.c1 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN LIKELIHOOD(vt0.c0, 0.9305583056796312) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (NOT (rt0.c4)) THEN rt0.c1 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN LIKELIHOOD(vt0.c0, 0.9305583056796312) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CAST(rt0.c0 COLLATE BINARY AS NUMERIC) RIGHT OUTER JOIN rt0 ON ((((rt0.c4)LIKE(rt0.c4)))<(1522857571)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(vt0.c1 AS TEXT) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(vt0.c1 AS TEXT));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(vt0.c1 AS TEXT) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(vt0.c1 AS TEXT));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (~ ((rt0.c3 IN ()))) CROSS JOIN t0 ON CAST(vt0.c1 AS TEXT) WHERE (NULL);
SELECT * FROM rt0, vt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c1) NOT NULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c1) NOT NULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1) NOT NULL)) ISNULL));
SELECT * FROM rt0, vt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c1) NOT NULL)) ISNULL);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (('')<>(NULL)) THEN (~ (rt0.c2)) ELSE (+ (0.3754912218295152)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')<>(NULL)) THEN (~ (rt0.c2)) ELSE (+ (0.3754912218295152)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (('')<>(NULL)) THEN (~ (rt0.c2)) ELSE (+ (0.3754912218295152)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')<>(NULL)) THEN (~ (rt0.c2)) ELSE (+ (0.3754912218295152)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (('')<>(NULL)) THEN (~ (rt0.c2)) ELSE (+ (0.3754912218295152)) END);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((LIKELY(DISTINCT t0.c0))) AND ((t0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((vt0.c0) NOTNULL)))<=((((((rt0.c3)AND(vt0.c1)))AND(0x6b9c150e)))))) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL)))<=((((((rt0.c3)AND(vt0.c1)))AND(0x6b9c150e)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(vt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((vt0.c0) NOTNULL)))<=((((((rt0.c3)AND(vt0.c1)))AND(0x6b9c150e)))))) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOTNULL)))<=((((((rt0.c3)AND(vt0.c1)))AND(0x6b9c150e)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(vt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((vt0.c0) NOTNULL)))<=((((((rt0.c3)AND(vt0.c1)))AND(0x6b9c150e)))))) ORDER BY CAST(vt0.c1 AS TEXT) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((t0.c0, rt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), (- (vt0.c1)))) AND ((LIKE(rt0.c1, rt0.c0), ((rt0.c1) NOTNULL), ((NULL)<<(rt0.c0))))) CROSS JOIN t0 ON (((((t0.c0))>((rt0.c4)))) IS TRUE) WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL)) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((t0.c0, rt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), (- (vt0.c1)))) AND ((LIKE(rt0.c1, rt0.c0), ((rt0.c1) NOTNULL), ((NULL)<<(rt0.c0))))) CROSS JOIN t0 ON (((((t0.c0))>((rt0.c4)))) IS TRUE) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) IS FALSE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((t0.c0, rt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), (- (vt0.c1)))) AND ((LIKE(rt0.c1, rt0.c0), ((rt0.c1) NOTNULL), ((NULL)<<(rt0.c0))))) CROSS JOIN t0 ON (((((t0.c0))>((rt0.c4)))) IS TRUE) WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL)) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((t0.c0, rt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), (- (vt0.c1)))) AND ((LIKE(rt0.c1, rt0.c0), ((rt0.c1) NOTNULL), ((NULL)<<(rt0.c0))))) CROSS JOIN t0 ON (((((t0.c0))>((rt0.c4)))) IS TRUE) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) IS FALSE))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((t0.c0, rt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), (- (vt0.c1)))) AND ((LIKE(rt0.c1, rt0.c0), ((rt0.c1) NOTNULL), ((NULL)<<(rt0.c0))))) CROSS JOIN t0 ON (((((t0.c0))>((rt0.c4)))) IS TRUE) WHERE (CAST(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL)) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) IS FALSE))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE RTRIM) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY '');
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE RTRIM) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY '');
SELECT ALL * FROM rt0 WHERE ((rt0.c4 IN ()) COLLATE RTRIM) ORDER BY '';
SELECT * FROM vt0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL) IS TRUE));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL), ((t0.c0)AND(rt0.c4)), (rt0.c2 IN ()))) AND ((((rt0.c4)>>(t0.c0)), CAST(rt0.c4 AS TEXT), rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL), ((t0.c0)AND(rt0.c4)), (rt0.c2 IN ()))) AND ((((rt0.c4)>>(t0.c0)), CAST(rt0.c4 AS TEXT), rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL), ((t0.c0)AND(rt0.c4)), (rt0.c2 IN ()))) AND ((((rt0.c4)>>(t0.c0)), CAST(rt0.c4 AS TEXT), rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL), ((t0.c0)AND(rt0.c4)), (rt0.c2 IN ()))) AND ((((rt0.c4)>>(t0.c0)), CAST(rt0.c4 AS TEXT), rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL), ((t0.c0)AND(rt0.c4)), (rt0.c2 IN ()))) AND ((((rt0.c4)>>(t0.c0)), CAST(rt0.c4 AS TEXT), rt0.c0 COLLATE BINARY))));
SELECT * FROM rt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c3);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c1)) THEN (vt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c1)) THEN (vt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((vt0.c1)>=(vt0.c1)) THEN (vt0.c1 IN ()) END;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (TRIM(x'1de6', '')) AND ((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (TRIM(x'1de6', '')) AND ((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (TRIM(x'1de6', '')) AND ((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (TRIM(x'1de6', '')) AND ((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (TRIM(x'1de6', '')) AND ((vt0.c0 IN (vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOTNULL))%(CASE WHEN rt0.c4 THEN vt0.c0 END)) WHERE (IFNULL((rt0.c4 IN ()), (((vt0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c4 IN ()), (((vt0.c0))<=((rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOTNULL))%(CASE WHEN rt0.c4 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOTNULL))%(CASE WHEN rt0.c4 THEN vt0.c0 END)) WHERE (IFNULL((rt0.c4 IN ()), (((vt0.c0))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c4 IN ()), (((vt0.c0))<=((rt0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOTNULL))%(CASE WHEN rt0.c4 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c1) NOTNULL))%(CASE WHEN rt0.c4 THEN vt0.c0 END)) WHERE (IFNULL((rt0.c4 IN ()), (((vt0.c0))<=((rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c0)))GLOB(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END))) ORDER BY ((CAST('-942638762' AS TEXT)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))GLOB(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST('-942638762' AS TEXT)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c0)))GLOB(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END))) ORDER BY ((CAST('-942638762' AS TEXT)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))GLOB(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST('-942638762' AS TEXT)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (vt0.c0)))GLOB(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END))) ORDER BY ((CAST('-942638762' AS TEXT)) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) IS FALSE) INNER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)))AND(LIKELY(DISTINCT vt0.c1))))AND(((rt0.c2)>(NULL)))) WHERE (0.016737909368175763) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((0.016737909368175763) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) IS FALSE) INNER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)))AND(LIKELY(DISTINCT vt0.c1))))AND(((rt0.c2)>(NULL)))) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS REAL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) IS FALSE) INNER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)))AND(LIKELY(DISTINCT vt0.c1))))AND(((rt0.c2)>(NULL)))) WHERE (0.016737909368175763) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((0.016737909368175763) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) IS FALSE) INNER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)))AND(LIKELY(DISTINCT vt0.c1))))AND(((rt0.c2)>(NULL)))) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS REAL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) IS FALSE) INNER JOIN vt0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)))AND(LIKELY(DISTINCT vt0.c1))))AND(((rt0.c2)>(NULL)))) WHERE (0.016737909368175763) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS REAL);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY (((json_quote(x'2f7e'), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0))))<((((t0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC), t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY (((json_quote(x'2f7e'), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0))))<((((t0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC), t0.c0))) DESC);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY (((json_quote(x'2f7e'), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0))))<((((t0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC), t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY (((json_quote(x'2f7e'), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0))))<((((t0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC), t0.c0))) DESC);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY (((json_quote(x'2f7e'), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (~ (t0.c0))))<((((t0.c0) IS FALSE), CAST(t0.c0 AS NUMERIC), t0.c0))) DESC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0 ASC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (UPPER(DISTINCT t0.c0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (UPPER(DISTINCT t0.c0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0 ASC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (UPPER(DISTINCT t0.c0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (UPPER(DISTINCT t0.c0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY t0.c0 ASC  NULLS LAST, ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (UPPER(DISTINCT t0.c0)) AND ((t0.c0 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END)) AND (((rt0.c1 IN (vt0.c0)))))) ORDER BY ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)AND(rt0.c3 COLLATE BINARY)))OR((~ ('0.9006641241246058')))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END)) AND (((rt0.c1 IN (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)AND(rt0.c3 COLLATE BINARY)))OR((~ ('0.9006641241246058')))) DESC);
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END)) AND (((rt0.c1 IN (vt0.c0)))))) ORDER BY ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)AND(rt0.c3 COLLATE BINARY)))OR((~ ('0.9006641241246058')))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END)) AND (((rt0.c1 IN (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)AND(rt0.c3 COLLATE BINARY)))OR((~ ('0.9006641241246058')))) DESC);
SELECT * FROM t0, rt0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END)) AND (((rt0.c1 IN (vt0.c0)))))) ORDER BY ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)AND(rt0.c3 COLLATE BINARY)))OR((~ ('0.9006641241246058')))) DESC;
SELECT * FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE)/('-99338305')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE)/('-99338305'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE)/('-99338305')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE)/('-99338305'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4 COLLATE NOCASE)/('-99338305')));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ('-380475417') ORDER BY (((~ (rt0.c3)))GLOB(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT (('-380475417') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((~ (rt0.c3)))GLOB(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ('-380475417') ORDER BY (((~ (rt0.c3)))GLOB(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT (('-380475417') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((~ (rt0.c3)))GLOB(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ('-380475417') ORDER BY (((~ (rt0.c3)))GLOB(((rt0.c2) ISNULL)));
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt0.c1 AS TEXT))-(((-1911183393)>=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((CAST(vt0.c1 AS TEXT))-(((-1911183393)>=(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt0.c1 AS TEXT))-(((-1911183393)>=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((CAST(vt0.c1 AS TEXT))-(((-1911183393)>=(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt0.c1 AS TEXT))-(((-1911183393)>=(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((t0.c0)&(rt0.c0)))GLOB(CHANGES()))) ORDER BY (NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)&(rt0.c0)))GLOB(CHANGES()))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((t0.c0)&(rt0.c0)))GLOB(CHANGES()))) ORDER BY (NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)&(rt0.c0)))GLOB(CHANGES()))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((t0.c0)&(rt0.c0)))GLOB(CHANGES()))) ORDER BY (NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))OR(rt0.c4)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (LIKELY((rt0.c4 IN ()))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((rt0.c4 IN ()))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (LIKELY((rt0.c4 IN ()))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((rt0.c4 IN ()))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (LIKELY((rt0.c4 IN ()))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((rt0.c4, vt0.c0, rt0.c4))>((rt0.c1, rt0.c0, vt0.c1))))OR(rt0.c4)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c4, vt0.c0, rt0.c4))>((rt0.c1, rt0.c0, vt0.c1))))OR(rt0.c4)))OR(vt0.c1))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((rt0.c4, vt0.c0, rt0.c4))>((rt0.c1, rt0.c0, vt0.c1))))OR(rt0.c4)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c4, vt0.c0, rt0.c4))>((rt0.c1, rt0.c0, vt0.c1))))OR(rt0.c4)))OR(vt0.c1))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((((((rt0.c4, vt0.c0, rt0.c4))>((rt0.c1, rt0.c0, vt0.c1))))OR(rt0.c4)))OR(vt0.c1)));
SELECT * FROM t0, vt0, rt0 WHERE (NULL) ORDER BY ((NULL COLLATE NOCASE) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((NULL COLLATE NOCASE) IS FALSE) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (NULL) ORDER BY ((NULL COLLATE NOCASE) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((NULL COLLATE NOCASE) IS FALSE) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (NULL) ORDER BY ((NULL COLLATE NOCASE) IS FALSE) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 NOT INDEXED WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CHANGES()) ORDER BY (((rt0.c1)IS NOT(rt0.c1)) IN ()), (+ (rt0.c4)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)IS NOT(rt0.c1)) IN ()), (+ (rt0.c4)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CHANGES()) ORDER BY (((rt0.c1)IS NOT(rt0.c1)) IN ()), (+ (rt0.c4)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)IS NOT(rt0.c1)) IN ()), (+ (rt0.c4)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CHANGES()) ORDER BY (((rt0.c1)IS NOT(rt0.c1)) IN ()), (+ (rt0.c4)) COLLATE BINARY;
SELECT ALL * FROM t0, rt0, vt0 WHERE (t0.c0) ORDER BY '376667699';
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY '376667699');
SELECT ALL * FROM t0, rt0, vt0 WHERE (t0.c0) ORDER BY '376667699';
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY '376667699');
SELECT ALL * FROM t0, rt0, vt0 WHERE (t0.c0) ORDER BY '376667699';
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((rt0.c0)AND(vt0.c1)))AND(x'a156')), CAST(rt0.c1 AS TEXT), CAST(rt0.c0 AS BLOB)))>=((x'', rt0.c1 COLLATE BINARY, (- (vt0.c0)))))) ORDER BY CAST(((rt0.c4)OR(rt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)AND(vt0.c1)))AND(x'a156')), CAST(rt0.c1 AS TEXT), CAST(rt0.c0 AS BLOB)))>=((x'', rt0.c1 COLLATE BINARY, (- (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(((rt0.c4)OR(rt0.c0)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((rt0.c0)AND(vt0.c1)))AND(x'a156')), CAST(rt0.c1 AS TEXT), CAST(rt0.c0 AS BLOB)))>=((x'', rt0.c1 COLLATE BINARY, (- (vt0.c0)))))) ORDER BY CAST(((rt0.c4)OR(rt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)AND(vt0.c1)))AND(x'a156')), CAST(rt0.c1 AS TEXT), CAST(rt0.c0 AS BLOB)))>=((x'', rt0.c1 COLLATE BINARY, (- (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(((rt0.c4)OR(rt0.c0)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((rt0.c0)AND(vt0.c1)))AND(x'a156')), CAST(rt0.c1 AS TEXT), CAST(rt0.c0 AS BLOB)))>=((x'', rt0.c1 COLLATE BINARY, (- (vt0.c0)))))) ORDER BY CAST(((rt0.c4)OR(rt0.c0)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE ((vt0.c1)/(NULL))  WHEN (((vt0.c0))>((t0.c0))) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN '1954442144' WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 ELSE 211304287 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)/(NULL))  WHEN (((vt0.c0))>((t0.c0))) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN '1954442144' WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 ELSE 211304287 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE ((vt0.c1)/(NULL))  WHEN (((vt0.c0))>((t0.c0))) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN '1954442144' WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 ELSE 211304287 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)/(NULL))  WHEN (((vt0.c0))>((t0.c0))) THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN '1954442144' WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 ELSE 211304287 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE ((vt0.c1)/(NULL))  WHEN (((vt0.c0))>((t0.c0))) THEN CAST(vt0.c0 AS BLOB) END) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN '1954442144' WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 ELSE 211304287 END COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY UNLIKELY(DISTINCT (~ (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(NULL AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt0 ORDER BY UNLIKELY(DISTINCT (~ (NULL)))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY UNLIKELY(DISTINCT (~ (NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(NULL AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt0 ORDER BY UNLIKELY(DISTINCT (~ (NULL)))  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY UNLIKELY(DISTINCT (~ (NULL)))  NULLS FIRST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c0))<((((((rt0.c3)AND(vt0.c1)))AND(rt0.c1)))))) ORDER BY '1198138015'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<((((((rt0.c3)AND(vt0.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY '1198138015'  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c0))<((((((rt0.c3)AND(vt0.c1)))AND(rt0.c1)))))) ORDER BY '1198138015'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<((((((rt0.c3)AND(vt0.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY '1198138015'  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c0))<((((((rt0.c3)AND(vt0.c1)))AND(rt0.c1)))))) ORDER BY '1198138015'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND('772996792')))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((rt0.c4)AND(rt0.c1)))OR(x'')))AND(rt0.c1)))OR(x'')))) WHERE ('-2044857953');
SELECT SUM(count) FROM (SELECT (('-2044857953') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND('772996792')))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((rt0.c4)AND(rt0.c1)))OR(x'')))AND(rt0.c1)))OR(x'')))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND('772996792')))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((rt0.c4)AND(rt0.c1)))OR(x'')))AND(rt0.c1)))OR(x'')))) WHERE ('-2044857953');
SELECT SUM(count) FROM (SELECT (('-2044857953') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND('772996792')))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((rt0.c4)AND(rt0.c1)))OR(x'')))AND(rt0.c1)))OR(x'')))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((vt0.c0)AND(vt0.c1)))AND('772996792')))OR(CAST(vt0.c0 AS INTEGER))))AND(((((((((rt0.c4)AND(rt0.c1)))OR(x'')))AND(rt0.c1)))OR(x'')))) WHERE ('-2044857953');
SELECT * FROM t0, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY rt0.c3  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(CAST(t0.c0 AS BLOB))))AND(((t0.c0)|(t0.c0))))) ORDER BY x'e365'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))OR(CAST(t0.c0 AS BLOB))))AND(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY x'e365'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(CAST(t0.c0 AS BLOB))))AND(((t0.c0)|(t0.c0))))) ORDER BY x'e365'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))OR(CAST(t0.c0 AS BLOB))))AND(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY x'e365'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(CAST(t0.c0 AS BLOB))))AND(((t0.c0)|(t0.c0))))) ORDER BY x'e365'  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE (((((t0.c0)) BETWEEN ((0.5918462166637039)) AND ((rt0.c1))) IN ((- (rt0.c3))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((DATE(rt0.c0, rt0.c2, rt0.c3)))) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((0.5918462166637039)) AND ((rt0.c1))) IN ((- (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((DATE(rt0.c0, rt0.c2, rt0.c3)))) DESC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (((((t0.c0)) BETWEEN ((0.5918462166637039)) AND ((rt0.c1))) IN ((- (rt0.c3))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((DATE(rt0.c0, rt0.c2, rt0.c3)))) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((0.5918462166637039)) AND ((rt0.c1))) IN ((- (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((DATE(rt0.c0, rt0.c2, rt0.c3)))) DESC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (((((t0.c0)) BETWEEN ((0.5918462166637039)) AND ((rt0.c1))) IN ((- (rt0.c3))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)) AND ((DATE(rt0.c0, rt0.c2, rt0.c3)))) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ ((vt0.c1 IN ()))) WHERE (CAST(LIKELIHOOD(vt0.c1, 0.6923818669880772) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(vt0.c1, 0.6923818669880772) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (+ ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ ((vt0.c1 IN ()))) WHERE (CAST(LIKELIHOOD(vt0.c1, 0.6923818669880772) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(vt0.c1, 0.6923818669880772) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (+ ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (+ ((vt0.c1 IN ()))) WHERE (CAST(LIKELIHOOD(vt0.c1, 0.6923818669880772) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)!=(rt0.c4)))<>(((((rt0.c2)AND(rt0.c4)))OR('-1100843916'))))) ORDER BY (((rt0.c0)OR(rt0.c1)) IN ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)!=(rt0.c4)))!=(((((rt0.c2)AND(rt0.c4)))OR('-1100843916'))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)OR(rt0.c1)) IN ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)!=(rt0.c4)))<>(((((rt0.c2)AND(rt0.c4)))OR('-1100843916'))))) ORDER BY (((rt0.c0)OR(rt0.c1)) IN ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)!=(rt0.c4)))!=(((((rt0.c2)AND(rt0.c4)))OR('-1100843916'))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)OR(rt0.c1)) IN ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)!=(rt0.c4)))<>(((((rt0.c2)AND(rt0.c4)))OR('-1100843916'))))) ORDER BY (((rt0.c0)OR(rt0.c1)) IN ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))))) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((NULL)+(t0.c0)) COLLATE BINARY) ORDER BY CAST((t0.c0 IN ()) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)+(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (((NULL)+(t0.c0)) COLLATE BINARY) ORDER BY CAST((t0.c0 IN ()) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)+(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c0 IN ()) AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (((NULL)+(t0.c0)) COLLATE BINARY) ORDER BY CAST((t0.c0 IN ()) AS BLOB)  NULLS LAST;
SELECT * FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0)<(vt0.c0)))) WHERE (((((vt0.c0, vt0.c0, t0.c0))>((t0.c0, vt0.c1, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, t0.c0))>((t0.c0, vt0.c1, t0.c0))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0)<(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0)<(vt0.c0)))) WHERE (((((vt0.c0, vt0.c0, t0.c0))>((t0.c0, vt0.c1, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, t0.c0))>((t0.c0, vt0.c1, t0.c0))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0)<(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON (NOT (((vt0.c0)<(vt0.c0)))) WHERE (((((vt0.c0, vt0.c0, t0.c0))>((t0.c0, vt0.c1, t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ ((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ ((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ ((~ (rt0.c4)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c1) ORDER BY rt0.c2 ASC;
SELECT COUNT(*) FROM t0 WHERE (CASE TYPEOF(t0.c0)  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN ((0.4639879776998519) NOT NULL) THEN ((t0.c0) ISNULL) WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) ORDER BY (((((t0.c0)AND(t0.c0)))AND(-2.078136858E9)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(t0.c0)  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN ((0.4639879776998519) NOT NULL) THEN ((t0.c0) ISNULL) WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)AND(t0.c0)))AND(-2.078136858E9)) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE TYPEOF(t0.c0)  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN ((0.4639879776998519) NOT NULL) THEN ((t0.c0) ISNULL) WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) ORDER BY (((((t0.c0)AND(t0.c0)))AND(-2.078136858E9)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(t0.c0)  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN ((0.4639879776998519) NOT NULL) THEN ((t0.c0) ISNULL) WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)AND(t0.c0)))AND(-2.078136858E9)) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE TYPEOF(t0.c0)  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0) NOTNULL) WHEN ((0.4639879776998519) NOT NULL) THEN ((t0.c0) ISNULL) WHEN NULL THEN (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) ORDER BY (((((t0.c0)AND(t0.c0)))AND(-2.078136858E9)) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, vt0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)<<(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)<<(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)<<(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)<<(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)<<(vt0.c1)) IN ()));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))!=(((vt0.c0)LIKE(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE (0.847604245795968 COLLATE BINARY) ORDER BY (((rt0.c4, vt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)), ((((rt0.c3)OR(t0.c0)))OR(rt0.c0)), NULL)) AND (((~ (vt0.c0)), ((rt0.c2) NOT NULL), rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((0.847604245795968 COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))!=(((vt0.c0)LIKE(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ORDER BY (((rt0.c4, vt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)), ((((rt0.c3)OR(t0.c0)))OR(rt0.c0)), NULL)) AND (((~ (vt0.c0)), ((rt0.c2) NOT NULL), rt0.c3 COLLATE NOCASE))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))!=(((vt0.c0)LIKE(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE (0.847604245795968 COLLATE BINARY) ORDER BY (((rt0.c4, vt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)), ((((rt0.c3)OR(t0.c0)))OR(rt0.c0)), NULL)) AND (((~ (vt0.c0)), ((rt0.c2) NOT NULL), rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((0.847604245795968 COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)))!=(((vt0.c0)LIKE(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (NOT ((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ORDER BY (((rt0.c4, vt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)), ((((rt0.c3)OR(t0.c0)))OR(rt0.c0)), NULL)) AND (((~ (vt0.c0)), ((rt0.c2) NOT NULL), rt0.c3 COLLATE NOCASE))));
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE BINARY COLLATE RTRIM WHERE ((((rt0.c3)/(vt0.c0)) IN (((((((((((((rt0.c3)AND(0.6204823739107067)))OR(x'')))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(vt0.c1))))) ORDER BY ((((CASE vt0.c1  WHEN t0.c0 THEN 0.45131157507923003 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END)AND(((t0.c0) IS FALSE))))OR(LOWER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)/(vt0.c0)) IN (((((((((((((rt0.c3)AND(0.6204823739107067)))OR(x'')))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE BINARY COLLATE RTRIM ORDER BY ((((CASE vt0.c1  WHEN t0.c0 THEN 0.45131157507923003 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END)AND(((t0.c0) IS FALSE))))OR(LOWER(vt0.c0))) DESC);
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE BINARY COLLATE RTRIM WHERE ((((rt0.c3)/(vt0.c0)) IN (((((((((((((rt0.c3)AND(0.6204823739107067)))OR(x'')))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(vt0.c1))))) ORDER BY ((((CASE vt0.c1  WHEN t0.c0 THEN 0.45131157507923003 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END)AND(((t0.c0) IS FALSE))))OR(LOWER(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)/(vt0.c0)) IN (((((((((((((rt0.c3)AND(0.6204823739107067)))OR(x'')))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(vt0.c1))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE BINARY COLLATE RTRIM ORDER BY ((((CASE vt0.c1  WHEN t0.c0 THEN 0.45131157507923003 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END)AND(((t0.c0) IS FALSE))))OR(LOWER(vt0.c0))) DESC);
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE BINARY COLLATE RTRIM WHERE ((((rt0.c3)/(vt0.c0)) IN (((((((((((((rt0.c3)AND(0.6204823739107067)))OR(x'')))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(vt0.c1))))) ORDER BY ((((CASE vt0.c1  WHEN t0.c0 THEN 0.45131157507923003 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'' END)AND(((t0.c0) IS FALSE))))OR(LOWER(vt0.c0))) DESC;
SELECT * FROM t0, vt0 WHERE ((((t0.c0)||(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)||(vt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0)||(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)||(vt0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c0)||(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)GLOB((~ (vt0.c1))))) ORDER BY ((((vt0.c1) ISNULL))<<(vt0.c0 COLLATE NOCASE)), (((NULL))>=((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN 0.12571778547810675 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))<<(vt0.c0 COLLATE NOCASE)), (((NULL))>=((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN 0.12571778547810675 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)GLOB((~ (vt0.c1))))) ORDER BY ((((vt0.c1) ISNULL))<<(vt0.c0 COLLATE NOCASE)), (((NULL))>=((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN 0.12571778547810675 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))<<(vt0.c0 COLLATE NOCASE)), (((NULL))>=((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN 0.12571778547810675 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM vt0 WHERE (((NULL)GLOB((~ (vt0.c1))))) ORDER BY ((((vt0.c1) ISNULL))<<(vt0.c0 COLLATE NOCASE)), (((NULL))>=((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN 0.12571778547810675 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(UPPER(DISTINCT t0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT t0.c0) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(UPPER(DISTINCT t0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT t0.c0) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(UPPER(DISTINCT t0.c0) AS REAL));
SELECT ALL * FROM t0, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN t0.c0 END)))OR(NULL))) ORDER BY COALESCE(DISTINCT CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)&(rt0.c4)))  NULLS LAST, ((CAST(NULL AS TEXT))IS((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN t0.c0 END)))OR(NULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY COALESCE(DISTINCT CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)&(rt0.c4)))  NULLS LAST, ((CAST(NULL AS TEXT))IS((NOT (rt0.c2)))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN t0.c0 END)))OR(NULL))) ORDER BY COALESCE(DISTINCT CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)&(rt0.c4)))  NULLS LAST, ((CAST(NULL AS TEXT))IS((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN t0.c0 END)))OR(NULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY COALESCE(DISTINCT CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)&(rt0.c4)))  NULLS LAST, ((CAST(NULL AS TEXT))IS((NOT (rt0.c2)))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (((((((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN t0.c0 END)))OR(NULL))) ORDER BY COALESCE(DISTINCT CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)&(rt0.c4)))  NULLS LAST, ((CAST(NULL AS TEXT))IS((NOT (rt0.c2)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)>=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)>=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)>=(rt0.c1)) IN ()));
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (NOT (((t0.c0)IS(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c0)IS(t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (NOT (((t0.c0)IS(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c0)IS(t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS TEXT)) ORDER BY (NOT (((t0.c0)IS(t0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM)&('-876898961')) FULL OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) AS BLOB) WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)LIKE(rt0.c4))) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)LIKE(rt0.c4))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM)&('-876898961')) FULL OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) AS BLOB) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM)&('-876898961')) FULL OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) AS BLOB) WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)LIKE(rt0.c4))) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)LIKE(rt0.c4))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM)&('-876898961')) FULL OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) AS BLOB) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((vt0.c1 COLLATE RTRIM)&('-876898961')) FULL OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c0)))OR(rt0.c3)) AS BLOB) WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)LIKE(rt0.c4))) ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL) DESC;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0)))))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) ISNULL) AS INTEGER) WHERE (CASE CASE rt0.c4  WHEN rt0.c4 THEN vt0.c1 WHEN 'N4B}/' THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 END  WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND ('-2102594313')) THEN (+ (vt0.c1)) END) ORDER BY CASE WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c0, rt0.c3, rt0.c4))>((rt0.c0, vt0.c0, rt0.c4))) WHEN ((rt0.c0)>(-1029846626)) THEN HEX(vt0.c0) WHEN ((((vt0.c0)AND(rt0.c4)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c4  WHEN rt0.c4 THEN vt0.c1 WHEN 'N4B}/' THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 END  WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND ('-2102594313')) THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) ISNULL) AS INTEGER) ORDER BY CASE WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c0, rt0.c3, rt0.c4))>((rt0.c0, vt0.c0, rt0.c4))) WHEN ((rt0.c0)>(-1029846626)) THEN HEX(vt0.c0) WHEN ((((vt0.c0)AND(rt0.c4)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) END ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) ISNULL) AS INTEGER) WHERE (CASE CASE rt0.c4  WHEN rt0.c4 THEN vt0.c1 WHEN 'N4B}/' THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 END  WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND ('-2102594313')) THEN (+ (vt0.c1)) END) ORDER BY CASE WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c0, rt0.c3, rt0.c4))>((rt0.c0, vt0.c0, rt0.c4))) WHEN ((rt0.c0)>(-1029846626)) THEN HEX(vt0.c0) WHEN ((((vt0.c0)AND(rt0.c4)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c4  WHEN rt0.c4 THEN vt0.c1 WHEN 'N4B}/' THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 END  WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND ('-2102594313')) THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) ISNULL) AS INTEGER) ORDER BY CASE WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c0, rt0.c3, rt0.c4))>((rt0.c0, vt0.c0, rt0.c4))) WHEN ((rt0.c0)>(-1029846626)) THEN HEX(vt0.c0) WHEN ((((vt0.c0)AND(rt0.c4)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) END ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c2) ISNULL) AS INTEGER) WHERE (CASE CASE rt0.c4  WHEN rt0.c4 THEN vt0.c1 WHEN 'N4B}/' THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 END  WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND ('-2102594313')) THEN (+ (vt0.c1)) END) ORDER BY CASE WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c0, rt0.c3, rt0.c4))>((rt0.c0, vt0.c0, rt0.c4))) WHEN ((rt0.c0)>(-1029846626)) THEN HEX(vt0.c0) WHEN ((((vt0.c0)AND(rt0.c4)))OR(rt0.c1)) THEN vt0.c1 COLLATE BINARY ELSE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) END ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((((((vt0.c1) IS TRUE))OR(((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(x'')))))AND(((((vt0.c1)AND(t0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) IS TRUE))OR(((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(x'')))))AND(((((vt0.c1)AND(t0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((((((vt0.c1) IS TRUE))OR(((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(x'')))))AND(((((vt0.c1)AND(t0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) IS TRUE))OR(((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(x'')))))AND(((((vt0.c1)AND(t0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 NOT INDEXED WHERE (((((((vt0.c1) IS TRUE))OR(((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(x'')))))AND(((((vt0.c1)AND(t0.c0)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c4) NOTNULL) ELSE ((rt0.c0)IS(t0.c0)) END) ORDER BY NULL, rt0.c4  NULLS LAST, ((((((rt0.c4)AND(t0.c0)))AND(t0.c0)))>=(((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c4) NOTNULL) ELSE ((rt0.c0)IS(t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL, rt0.c4  NULLS LAST, ((((((rt0.c4)AND(t0.c0)))AND(t0.c0)))>=(((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c4) NOTNULL) ELSE ((rt0.c0)IS(t0.c0)) END) ORDER BY NULL, rt0.c4  NULLS LAST, ((((((rt0.c4)AND(t0.c0)))AND(t0.c0)))>=(((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c4) NOTNULL) ELSE ((rt0.c0)IS(t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL, rt0.c4  NULLS LAST, ((((((rt0.c4)AND(t0.c0)))AND(t0.c0)))>=(((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c4) NOTNULL) ELSE ((rt0.c0)IS(t0.c0)) END) ORDER BY NULL, rt0.c4  NULLS LAST, ((((((rt0.c4)AND(t0.c0)))AND(t0.c0)))>=(((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF((+ (rt0.c1)))) ORDER BY ((((((((((rt0.c0) IS TRUE))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) IS TRUE))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF((+ (rt0.c1)))) ORDER BY ((((((((((rt0.c0) IS TRUE))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) IS TRUE))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))))AND((rt0.c2 IN ()))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN ((vt0.c1)>=(t0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((((x'')AND(vt0.c1)))AND(vt0.c1)) WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN ((vt0.c1)>=(t0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((((x'')AND(vt0.c1)))AND(vt0.c1)) WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN ((vt0.c1)>=(t0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((((x'')AND(vt0.c1)))AND(vt0.c1)) WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN ((vt0.c1)>=(t0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((((x'')AND(vt0.c1)))AND(vt0.c1)) WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN ((vt0.c1)>=(t0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((((x'')AND(vt0.c1)))AND(vt0.c1)) WHEN (t0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-1653078702' COLLATE BINARY) ORDER BY (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1653078702' COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-1653078702' COLLATE BINARY) ORDER BY (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1653078702' COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-1653078702' COLLATE BINARY) ORDER BY (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))%(CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('/N')))OR(rt0.c3))) IS FALSE)) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END) NOT BETWEEN ((- (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c4 IN ()) IN (NULL)) DESC  NULLS FIRST, (('-1991975969')*((((rt0.c3, rt0.c2, rt0.c2))=(('0.847604245795968', rt0.c2, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('/N')))OR(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END) NOT BETWEEN ((- (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c4 IN ()) IN (NULL)) DESC  NULLS FIRST, (('-1991975969')*((((rt0.c3, rt0.c2, rt0.c2))==(('0.847604245795968', rt0.c2, rt0.c1))))) ASC);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('/N')))OR(rt0.c3))) IS FALSE)) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END) NOT BETWEEN ((- (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c4 IN ()) IN (NULL)) DESC  NULLS FIRST, (('-1991975969')*((((rt0.c3, rt0.c2, rt0.c2))=(('0.847604245795968', rt0.c2, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('/N')))OR(rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END) NOT BETWEEN ((- (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c4 IN ()) IN (NULL)) DESC  NULLS FIRST, (('-1991975969')*((((rt0.c3, rt0.c2, rt0.c2))==(('0.847604245795968', rt0.c2, rt0.c1))))) ASC);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND('/N')))OR(rt0.c3))) IS FALSE)) ORDER BY ((CASE WHEN rt0.c4 THEN rt0.c4 END) NOT BETWEEN ((- (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((rt0.c4 IN ()) IN (NULL)) DESC  NULLS FIRST, (('-1991975969')*((((rt0.c3, rt0.c2, rt0.c2))=(('0.847604245795968', rt0.c2, rt0.c1))))) ASC;
SELECT * FROM vt0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((CAST('0.4496406800326954' AS NUMERIC)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST('0.4496406800326954' AS NUMERIC)) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((CAST('0.4496406800326954' AS NUMERIC)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST('0.4496406800326954' AS NUMERIC)) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((CAST('0.4496406800326954' AS NUMERIC)) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c0, vt0.c0, rt0.c0, t0.c0, rt0.c0))<=((rt0.c2, t0.c0, x'eae8', vt0.c1, rt0.c2))) COLLATE NOCASE) ORDER BY TRIM(DISTINCT CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, rt0.c0, t0.c0, rt0.c0))<=((rt0.c2, t0.c0, x'eae8', vt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY TRIM(DISTINCT CAST(rt0.c2 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c0, vt0.c0, rt0.c0, t0.c0, rt0.c0))<=((rt0.c2, t0.c0, x'eae8', vt0.c1, rt0.c2))) COLLATE NOCASE) ORDER BY TRIM(DISTINCT CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, rt0.c0, t0.c0, rt0.c0))<=((rt0.c2, t0.c0, x'eae8', vt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY TRIM(DISTINCT CAST(rt0.c2 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c0, vt0.c0, rt0.c0, t0.c0, rt0.c0))<=((rt0.c2, t0.c0, x'eae8', vt0.c1, rt0.c2))) COLLATE NOCASE) ORDER BY TRIM(DISTINCT CAST(rt0.c2 AS TEXT));
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT ''))OR(((rt0.c3)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT ''))OR(((rt0.c3)<(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT ''))OR(((rt0.c3)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT ''))OR(((rt0.c3)<(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT ''))OR(((rt0.c3)<(rt0.c4)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((t0.c0) IS FALSE))OR(rt0.c4 COLLATE RTRIM)))AND((((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c1, rt0.c2))<((rt0.c3, t0.c0, rt0.c1))) THEN ((vt0.c1) NOT NULL) WHEN ((((rt0.c1)OR(vt0.c1)))OR(rt0.c0)) THEN SUBSTR(rt0.c2, rt0.c2) WHEN t0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))OR(rt0.c4 COLLATE RTRIM)))AND((((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c1, rt0.c2))<((rt0.c3, t0.c0, rt0.c1))) THEN ((vt0.c1) NOT NULL) WHEN ((((rt0.c1)OR(vt0.c1)))OR(rt0.c0)) THEN SUBSTR(rt0.c2, rt0.c2) WHEN t0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((t0.c0) IS FALSE))OR(rt0.c4 COLLATE RTRIM)))AND((((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c1, rt0.c2))<((rt0.c3, t0.c0, rt0.c1))) THEN ((vt0.c1) NOT NULL) WHEN ((((rt0.c1)OR(vt0.c1)))OR(rt0.c0)) THEN SUBSTR(rt0.c2, rt0.c2) WHEN t0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))OR(rt0.c4 COLLATE RTRIM)))AND((((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c1, rt0.c2))<((rt0.c3, t0.c0, rt0.c1))) THEN ((vt0.c1) NOT NULL) WHEN ((((rt0.c1)OR(vt0.c1)))OR(rt0.c0)) THEN SUBSTR(rt0.c2, rt0.c2) WHEN t0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((((t0.c0) IS FALSE))OR(rt0.c4 COLLATE RTRIM)))AND((((vt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((vt0.c0)&(rt0.c3)) WHEN vt0.c0 THEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN (((vt0.c0, vt0.c1, rt0.c2))<((rt0.c3, t0.c0, rt0.c1))) THEN ((vt0.c1) NOT NULL) WHEN ((((rt0.c1)OR(vt0.c1)))OR(rt0.c0)) THEN SUBSTR(rt0.c2, rt0.c2) WHEN t0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((('-568020222') IS FALSE)) AND (((((((((((((rt0.c0)OR(0.41877983515218664)))AND(0.07870697256471892)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c4))))) ORDER BY ((((rt0.c1) ISNULL))|(rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((CAST(0X535d84f1 AS INTEGER)) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.6741661963264537)) AND ((+ (rt0.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((('-568020222') IS FALSE)) AND (((((((((((((rt0.c0)OR(0.41877983515218664)))AND(0.07870697256471892)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) ISNULL))|(rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((CAST(0x535d84f1 AS INTEGER)) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.6741661963264537)) AND ((+ (rt0.c4)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((('-568020222') IS FALSE)) AND (((((((((((((rt0.c0)OR(0.41877983515218664)))AND(0.07870697256471892)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c4))))) ORDER BY ((((rt0.c1) ISNULL))|(rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((CAST(0X535d84f1 AS INTEGER)) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.6741661963264537)) AND ((+ (rt0.c4)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((('-568020222') IS FALSE)) AND (((((((((((((rt0.c0)OR(0.41877983515218664)))AND(0.07870697256471892)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) ISNULL))|(rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((CAST(0x535d84f1 AS INTEGER)) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.6741661963264537)) AND ((+ (rt0.c4)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((('-568020222') IS FALSE)) AND (((((((((((((rt0.c0)OR(0.41877983515218664)))AND(0.07870697256471892)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c4))))) ORDER BY ((((rt0.c1) ISNULL))|(rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST, ((CAST(0X535d84f1 AS INTEGER)) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.6741661963264537)) AND ((+ (rt0.c4)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((((~ (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, vt0.c1)))))) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((((~ (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, vt0.c1)))))) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((((~ (vt0.c0)))AND(((vt0.c1)*(vt0.c1)))))AND((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, t0.c0, vt0.c1)))))) ORDER BY CAST((vt0.c0 IN ()) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (~ (((vt0.c0)=(rt0.c4)))) WHERE (((((((((((rt0.c3) NOTNULL))AND((('-1029846626')IS(vt0.c0)))))AND(((rt0.c1)%(vt0.c1)))))OR((((rt0.c2))>=((rt0.c4))))))AND((rt0.c1 IN (x'', rt0.c4))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3) NOTNULL))AND((('-1029846626')IS(vt0.c0)))))AND(((rt0.c1)%(vt0.c1)))))OR((((rt0.c2))>=((rt0.c4))))))AND((rt0.c1 IN (x'', rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (~ (((vt0.c0)==(rt0.c4)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (~ (((vt0.c0)=(rt0.c4)))) WHERE (((((((((((rt0.c3) NOTNULL))AND((('-1029846626')IS(vt0.c0)))))AND(((rt0.c1)%(vt0.c1)))))OR((((rt0.c2))>=((rt0.c4))))))AND((rt0.c1 IN (x'', rt0.c4))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3) NOTNULL))AND((('-1029846626')IS(vt0.c0)))))AND(((rt0.c1)%(vt0.c1)))))OR((((rt0.c2))>=((rt0.c4))))))AND((rt0.c1 IN (x'', rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (~ (((vt0.c0)==(rt0.c4)))) ORDER BY (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (~ (((vt0.c0)=(rt0.c4)))) WHERE (((((((((((rt0.c3) NOTNULL))AND((('-1029846626')IS(vt0.c0)))))AND(((rt0.c1)%(vt0.c1)))))OR((((rt0.c2))>=((rt0.c4))))))AND((rt0.c1 IN (x'', rt0.c4))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY highlight(0.5474624359340989, ((t0.c0)<>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN x'' ELSE x'' END, 'f2EN' COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY highlight(0.5474624359340989, ((t0.c0)!=(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN x'' ELSE x'' END, 'f2EN' COLLATE RTRIM) DESC);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY highlight(0.5474624359340989, ((t0.c0)<>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN x'' ELSE x'' END, 'f2EN' COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY highlight(0.5474624359340989, ((t0.c0)!=(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN x'' ELSE x'' END, 'f2EN' COLLATE RTRIM) DESC);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY highlight(0.5474624359340989, ((t0.c0)<>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN x'' ELSE x'' END, 'f2EN' COLLATE RTRIM) DESC;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)>>(t0.c0))) AND (((vt0.c1)LIKE(t0.c0)))) WHERE (0.24159612047454904);
SELECT SUM(count) FROM (SELECT ALL ((0.24159612047454904) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)>>(t0.c0))) AND (((vt0.c1)LIKE(t0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)>>(t0.c0))) AND (((vt0.c1)LIKE(t0.c0)))) WHERE (0.24159612047454904);
SELECT SUM(count) FROM (SELECT ALL ((0.24159612047454904) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)>>(t0.c0))) AND (((vt0.c1)LIKE(t0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c1)>>(t0.c0))) AND (((vt0.c1)LIKE(t0.c0)))) WHERE (0.24159612047454904);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (CAST(rt0.c4 AS INTEGER) IN ()) WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (CAST(rt0.c4 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (CAST(rt0.c4 AS INTEGER) IN ()) WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (CAST(rt0.c4 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON (CAST(rt0.c4 AS INTEGER) IN ()) WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (CAST(STRFTIME(vt0.c0, vt0.c1, vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(STRFTIME(vt0.c0, vt0.c1, vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(STRFTIME(vt0.c0, vt0.c1, vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(STRFTIME(vt0.c0, vt0.c1, vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(STRFTIME(vt0.c0, vt0.c1, vt0.c1) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c1, x''))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c2)<<(rt0.c0))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT rt0.c1, x''))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c2)<<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c1, x''))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c2)<<(rt0.c0))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT rt0.c1, x''))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c2)<<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c1, x''))AND(CAST(rt0.c3 AS REAL))))AND(((rt0.c2)<<(rt0.c0))))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (TRIM(HEX(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT rt0.c4))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (TRIM(HEX(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ((TRIM(HEX(DISTINCT rt0.c4))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (TRIM(HEX(DISTINCT rt0.c4)));
SELECT * FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))<((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))<((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))<((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c0))))));
SELECT ALL * FROM t0 WHERE (((TIME('-2102594313', t0.c0, t0.c0, t0.c0, t0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TIME('-2102594313', t0.c0, t0.c0, t0.c0, t0.c0)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TIME('-2102594313', t0.c0, t0.c0, t0.c0, t0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((TIME('-2102594313', t0.c0, t0.c0, t0.c0, t0.c0)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TIME('-2102594313', t0.c0, t0.c0, t0.c0, t0.c0)) IS FALSE));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE NULLIF(rt0.c1, '0.36016636397818336')  WHEN x'' COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) WHEN ((rt0.c2)+(vt0.c1)) THEN '1803170139' WHEN (((rt0.c4))<((rt0.c2))) THEN ((rt0.c3) IS FALSE) ELSE ((rt0.c3)<(vt0.c1)) END FULL OUTER JOIN rt0 ON CAST('1021875565' AS BLOB) WHERE (((NULLIF(DISTINCT rt0.c4, rt0.c2)) NOT BETWEEN ((- (rt0.c2))) AND ((((t0.c0, x'', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c3)) AND ((vt0.c1, rt0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c4, rt0.c2)) NOT BETWEEN ((- (rt0.c2))) AND ((((t0.c0, x'', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c3)) AND ((vt0.c1, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON CASE NULLIF(rt0.c1, '0.36016636397818336')  WHEN x'' COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) WHEN ((rt0.c2)+(vt0.c1)) THEN '1803170139' WHEN (((rt0.c4))<((rt0.c2))) THEN ((rt0.c3) IS FALSE) ELSE ((rt0.c3)<(vt0.c1)) END FULL OUTER JOIN rt0 ON CAST('1021875565' AS BLOB));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CASE NULLIF(rt0.c1, '0.36016636397818336')  WHEN x'' COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) WHEN ((rt0.c2)+(vt0.c1)) THEN '1803170139' WHEN (((rt0.c4))<((rt0.c2))) THEN ((rt0.c3) IS FALSE) ELSE ((rt0.c3)<(vt0.c1)) END FULL OUTER JOIN rt0 ON CAST('1021875565' AS BLOB) WHERE (((NULLIF(DISTINCT rt0.c4, rt0.c2)) NOT BETWEEN ((- (rt0.c2))) AND ((((t0.c0, x'', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c3)) AND ((vt0.c1, rt0.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c4, rt0.c2)) NOT BETWEEN ((- (rt0.c2))) AND ((((t0.c0, x'', vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c3)) AND ((vt0.c1, rt0.c0, rt0.c4)))))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN vt0 ON CASE NULLIF(rt0.c1, '0.36016636397818336')  WHEN x'' COLLATE BINARY THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) WHEN ((rt0.c2)+(vt0.c1)) THEN '1803170139' WHEN (((rt0.c4))<((rt0.c2))) THEN ((rt0.c3) IS FALSE) ELSE ((rt0.c3)<(vt0.c1)) END FULL OUTER JOIN rt0 ON CAST('1021875565' AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE ((((1715348191) IS FALSE) IN ())) ORDER BY ((((t0.c0)>=(t0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((1715348191) IS FALSE) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)>=(t0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((1715348191) IS FALSE) IN ())) ORDER BY ((((t0.c0)>=(t0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((1715348191) IS FALSE) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)>=(t0.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((1715348191) IS FALSE) IN ())) ORDER BY ((((t0.c0)>=(t0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0)GLOB(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0)GLOB(rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0)GLOB(rt0.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT '-99338305')) ORDER BY (~ ((((rt0.c3))>=((rt0.c3))))) DESC  NULLS FIRST, ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE)  NULLS LAST, (((rt0.c4))==((rt0.c4))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT '-99338305')) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c3))>=((rt0.c3))))) DESC  NULLS FIRST, ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE)  NULLS LAST, (((rt0.c4))==((rt0.c4))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT '-99338305')) ORDER BY (~ ((((rt0.c3))>=((rt0.c3))))) DESC  NULLS FIRST, ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE)  NULLS LAST, (((rt0.c4))==((rt0.c4))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT '-99338305')) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c3))>=((rt0.c3))))) DESC  NULLS FIRST, ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE)  NULLS LAST, (((rt0.c4))==((rt0.c4))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT '-99338305')) ORDER BY (~ ((((rt0.c3))>=((rt0.c3))))) DESC  NULLS FIRST, ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) IS FALSE)  NULLS LAST, (((rt0.c4))==((rt0.c4))) COLLATE BINARY ASC;
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(1.716332035E9)))) AND ((((rt0.c1)==(vt0.c0)))))) ORDER BY (((NULL) IS FALSE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(1.716332035E9)))) AND ((((rt0.c1)=(vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((NULL) IS FALSE) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(1.716332035E9)))) AND ((((rt0.c1)==(vt0.c0)))))) ORDER BY (((NULL) IS FALSE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(1.716332035E9)))) AND ((((rt0.c1)=(vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((NULL) IS FALSE) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(1.716332035E9)))) AND ((((rt0.c1)==(vt0.c0)))))) ORDER BY (((NULL) IS FALSE) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (+ (((t0.c0)>(NULL)))) WHERE (CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((vt0.c0) NOTNULL) IN (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC, ((((((((((vt0.c0) IS FALSE))OR('-803942096')))AND(CAST(vt0.c0 AS BLOB))))OR(((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))))AND((NOT (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (+ (((t0.c0)>(NULL)))) ORDER BY (((vt0.c0) NOTNULL) IN (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC, ((((((((((vt0.c0) IS FALSE))OR('-803942096')))AND(CAST(vt0.c0 AS BLOB))))OR(((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))))AND((NOT (t0.c0))))  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (+ (((t0.c0)>(NULL)))) WHERE (CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((vt0.c0) NOTNULL) IN (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC, ((((((((((vt0.c0) IS FALSE))OR('-803942096')))AND(CAST(vt0.c0 AS BLOB))))OR(((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))))AND((NOT (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (+ (((t0.c0)>(NULL)))) ORDER BY (((vt0.c0) NOTNULL) IN (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC, ((((((((((vt0.c0) IS FALSE))OR('-803942096')))AND(CAST(vt0.c0 AS BLOB))))OR(((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))))AND((NOT (t0.c0))))  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (+ (((t0.c0)>(NULL)))) WHERE (CAST(t0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((vt0.c0) NOTNULL) IN (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS TEXT))) ASC, ((((((((((vt0.c0) IS FALSE))OR('-803942096')))AND(CAST(vt0.c0 AS BLOB))))OR(((((t0.c0)OR(vt0.c1)))OR(vt0.c1)))))AND((NOT (t0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN (rt0.c4 IN ()) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c2)&(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN (('') IS FALSE) THEN ((rt0.c1)/(rt0.c4)) END) ORDER BY (((('1803170139') NOT BETWEEN (rt0.c4) AND ('-1863823249')))-(rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN (rt0.c4 IN ()) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c2)&(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN (('') IS FALSE) THEN ((rt0.c1)/(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY (((('1803170139') NOT BETWEEN (rt0.c4) AND ('-1863823249')))-(rt0.c3)) ASC);
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN (rt0.c4 IN ()) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c2)&(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN (('') IS FALSE) THEN ((rt0.c1)/(rt0.c4)) END) ORDER BY (((('1803170139') NOT BETWEEN (rt0.c4) AND ('-1863823249')))-(rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN (rt0.c4 IN ()) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c2)&(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN (('') IS FALSE) THEN ((rt0.c1)/(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY (((('1803170139') NOT BETWEEN (rt0.c4) AND ('-1863823249')))-(rt0.c3)) ASC);
SELECT ALL * FROM rt0 WHERE (CASE CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN (rt0.c4 IN ()) THEN ((rt0.c4) ISNULL) WHEN ((rt0.c2)&(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END WHEN (('') IS FALSE) THEN ((rt0.c1)/(rt0.c4)) END) ORDER BY (((('1803170139') NOT BETWEEN (rt0.c4) AND ('-1863823249')))-(rt0.c3)) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)AND(t0.c0)))AND(rt0.c0))) BETWEEN (rt0.c3) AND ((('.[MnQ?')>=(rt0.c4)))) CROSS JOIN vt0 ON (~ ('-1536757336')) WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE)) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)AND(t0.c0)))AND(rt0.c0))) BETWEEN (rt0.c3) AND ((('.[MnQ?')>=(rt0.c4)))) CROSS JOIN vt0 ON (~ ('-1536757336')) ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)AND(t0.c0)))AND(rt0.c0))) BETWEEN (rt0.c3) AND ((('.[MnQ?')>=(rt0.c4)))) CROSS JOIN vt0 ON (~ ('-1536757336')) WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE)) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)AND(t0.c0)))AND(rt0.c0))) BETWEEN (rt0.c3) AND ((('.[MnQ?')>=(rt0.c4)))) CROSS JOIN vt0 ON (~ ('-1536757336')) ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((rt0.c1)AND(t0.c0)))AND(rt0.c0))) BETWEEN (rt0.c3) AND ((('.[MnQ?')>=(rt0.c4)))) CROSS JOIN vt0 ON (~ ('-1536757336')) WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE)) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (LOWER('')) ORDER BY ((((- (rt0.c0))))!=((rt0.c2))) DESC, (((NOT (rt0.c1))) BETWEEN (x'') AND (((rt0.c3) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0 IN ()) IN ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER('')) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((- (rt0.c0))))!=((rt0.c2))) DESC, (((NOT (rt0.c1))) BETWEEN (x'') AND (((rt0.c3) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0 IN ()) IN ((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (LOWER('')) ORDER BY ((((- (rt0.c0))))!=((rt0.c2))) DESC, (((NOT (rt0.c1))) BETWEEN (x'') AND (((rt0.c3) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0 IN ()) IN ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER('')) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((- (rt0.c0))))!=((rt0.c2))) DESC, (((NOT (rt0.c1))) BETWEEN (x'') AND (((rt0.c3) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0 IN ()) IN ((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (LOWER('')) ORDER BY ((((- (rt0.c0))))!=((rt0.c2))) DESC, (((NOT (rt0.c1))) BETWEEN (x'') AND (((rt0.c3) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c0 IN ()) IN ((t0.c0 IN ()))) ASC;
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT * FROM rt0 WHERE (((rt0.c0)=(rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)==(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)=(rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)==(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)=(rt0.c4)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)-(rt0.c4))))!=((x'dd6e'))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)-(rt0.c4))))<>((x'dd6e')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)-(rt0.c4))))!=((x'dd6e'))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)-(rt0.c4))))<>((x'dd6e')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)-(rt0.c4))))!=((x'dd6e'))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNLIKELY((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ORDER BY (~ (((rt0.c0)LIKE(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (~ (((rt0.c0)LIKE(rt0.c3)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNLIKELY((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ORDER BY (~ (((rt0.c0)LIKE(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (~ (((rt0.c0)LIKE(rt0.c3)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNLIKELY((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))) ORDER BY (~ (((rt0.c0)LIKE(rt0.c3)))) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c4))>((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4))>((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c4))>((rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4))>((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c4))>((rt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END WHEN (rt0.c3 IN ()) THEN (rt0.c2 IN ()) WHEN ((vt0.c0) NOT BETWEEN ('y5U') AND (vt0.c1)) THEN CAST(x'' AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END WHEN (rt0.c3 IN ()) THEN (rt0.c2 IN ()) WHEN ((vt0.c0) NOT BETWEEN ('y5U') AND (vt0.c1)) THEN CAST(x'' AS REAL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END WHEN (rt0.c3 IN ()) THEN (rt0.c2 IN ()) WHEN ((vt0.c0) NOT BETWEEN ('y5U') AND (vt0.c1)) THEN CAST(x'' AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END WHEN (rt0.c3 IN ()) THEN (rt0.c2 IN ()) WHEN ((vt0.c0) NOT BETWEEN ('y5U') AND (vt0.c1)) THEN CAST(x'' AS REAL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END WHEN (rt0.c3 IN ()) THEN (rt0.c2 IN ()) WHEN ((vt0.c0) NOT BETWEEN ('y5U') AND (vt0.c1)) THEN CAST(x'' AS REAL) END);
SELECT * FROM vt0, t0, rt0 WHERE ((((vt0.c0) BETWEEN (x'') AND (rt0.c0)) IN ())) ORDER BY (((rt0.c0 IN ()))OR((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (x'') AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c0 IN ()))OR((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE ((((vt0.c0) BETWEEN (x'') AND (rt0.c0)) IN ())) ORDER BY (((rt0.c0 IN ()))OR((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (x'') AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c0 IN ()))OR((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE ((((vt0.c0) BETWEEN (x'') AND (rt0.c0)) IN ())) ORDER BY (((rt0.c0 IN ()))OR((rt0.c2 IN (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (UPPER(DISTINCT ((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE NULL  WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE (+ (0Xffffffffeb304217)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE (+ (0Xffffffffeb304217)) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE NULL  WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE (+ (0Xffffffffeb304217)) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE (+ (0Xffffffffeb304217)) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE NULL  WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE (+ (0Xffffffffeb304217)) END);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (LIKELY(rt0.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c4 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (LIKELY(rt0.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c4 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (LIKELY(rt0.c4 COLLATE BINARY));
SELECT * FROM t0, rt0, vt0 WHERE ((((rt0.c2)==(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)=(rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((rt0.c2)==(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)=(rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((rt0.c2)==(rt0.c3)) IN ()));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT NULL) COLLATE NOCASE WHERE (ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT NULL) COLLATE NOCASE);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT NULL) COLLATE NOCASE WHERE (ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT NULL) COLLATE NOCASE);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c0) NOT NULL) COLLATE NOCASE WHERE (ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 ELSE t0.c0 END));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))&(0Xffffffffd946c50b)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))&(0xffffffffd946c50b))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))&(0Xffffffffd946c50b)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))&(0xffffffffd946c50b))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))))&(0Xffffffffd946c50b)));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c0)||(t0.c0)))/(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)||(t0.c0)))/(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c0)||(t0.c0)))/(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)||(t0.c0)))/(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c0)||(t0.c0)))/(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((73075630) IS FALSE)) ORDER BY ((rt0.c2)<<(rt0.c1)) COLLATE BINARY ASC, (CAST(rt0.c3 AS TEXT) IN (915978515))  NULLS FIRST, (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR((~ (rt0.c4)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((73075630) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<<(rt0.c1)) COLLATE BINARY ASC, (CAST(rt0.c3 AS TEXT) IN (915978515))  NULLS FIRST, (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR((~ (rt0.c4)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (((73075630) IS FALSE)) ORDER BY ((rt0.c2)<<(rt0.c1)) COLLATE BINARY ASC, (CAST(rt0.c3 AS TEXT) IN (915978515))  NULLS FIRST, (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR((~ (rt0.c4)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((73075630) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<<(rt0.c1)) COLLATE BINARY ASC, (CAST(rt0.c3 AS TEXT) IN (915978515))  NULLS FIRST, (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR((~ (rt0.c4)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (((73075630) IS FALSE)) ORDER BY ((rt0.c2)<<(rt0.c1)) COLLATE BINARY ASC, (CAST(rt0.c3 AS TEXT) IN (915978515))  NULLS FIRST, (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR((~ (rt0.c4)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END));
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON 0.36016636397818336 WHERE ((((('')+(vt0.c0))) BETWEEN ((rt0.c3 IN (vt0.c1))) AND (((rt0.c2) BETWEEN (rt0.c4) AND ('1380368791')))));
SELECT SUM(count) FROM (SELECT (((((('')+(vt0.c0))) BETWEEN ((rt0.c3 IN (vt0.c1))) AND (((rt0.c2) BETWEEN (rt0.c4) AND ('1380368791'))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON 0.36016636397818336);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON 0.36016636397818336 WHERE ((((('')+(vt0.c0))) BETWEEN ((rt0.c3 IN (vt0.c1))) AND (((rt0.c2) BETWEEN (rt0.c4) AND ('1380368791')))));
SELECT SUM(count) FROM (SELECT (((((('')+(vt0.c0))) BETWEEN ((rt0.c3 IN (vt0.c1))) AND (((rt0.c2) BETWEEN (rt0.c4) AND ('1380368791'))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON 0.36016636397818336);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (NOT ((~ (vt0.c0)))) FULL OUTER JOIN rt0 ON 0.36016636397818336 WHERE ((((('')+(vt0.c0))) BETWEEN ((rt0.c3 IN (vt0.c1))) AND (((rt0.c2) BETWEEN (rt0.c4) AND ('1380368791')))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CAST(vt0.c1 AS TEXT), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1)%(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))), (vt0.c0 IN ()))))) ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND ((((vt0.c0)*(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CAST(vt0.c1 AS TEXT), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1)%(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND ((((vt0.c0)*(vt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CAST(vt0.c1 AS TEXT), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1)%(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))), (vt0.c0 IN ()))))) ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND ((((vt0.c0)*(vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CAST(vt0.c1 AS TEXT), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1)%(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND ((((vt0.c0)*(vt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))), CAST(vt0.c1 AS TEXT), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c1)%(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))), (vt0.c0 IN ()))))) ORDER BY (((vt0.c0)) BETWEEN ((SQLITE_SOURCE_ID())) AND ((((vt0.c0)*(vt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER((((t0.c0))<>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((t0.c0))!=((t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER((((t0.c0))<>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((t0.c0))!=((t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER((((t0.c0))<>((t0.c0)))));
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)&((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)&((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)&((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)&((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)&((~ (t0.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN ()) WHERE (((TRIM(rt0.c2))AND(((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2))AND(((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN ()) WHERE (((TRIM(rt0.c2))AND(((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2))AND(((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN ()) WHERE (((TRIM(rt0.c2))AND(((rt0.c2) BETWEEN (rt0.c4) AND (t0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(rt0.c4)))%(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c4)))%(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(rt0.c4)))%(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c4)))%(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(rt0.c4)))%(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)AND(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)AND(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)AND(rt0.c3 COLLATE BINARY)));
SELECT * FROM t0, vt0 WHERE (HEX(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (HEX(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (HEX(CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((vt0.c0, IFNULL(rt0.c3, rt0.c3), (+ (rt0.c0))))<((((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)), rt0.c3, ((((rt0.c2)OR(rt0.c4)))OR(rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, IFNULL(rt0.c3, rt0.c3), (+ (rt0.c0))))<((((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)), rt0.c3, ((((rt0.c2)OR(rt0.c4)))OR(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((vt0.c0, IFNULL(rt0.c3, rt0.c3), (+ (rt0.c0))))<((((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)), rt0.c3, ((((rt0.c2)OR(rt0.c4)))OR(rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, IFNULL(rt0.c3, rt0.c3), (+ (rt0.c0))))<((((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)), rt0.c3, ((((rt0.c2)OR(rt0.c4)))OR(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((vt0.c0, IFNULL(rt0.c3, rt0.c3), (+ (rt0.c0))))<((((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c0)), rt0.c3, ((((rt0.c2)OR(rt0.c4)))OR(rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (DATE((vt0.c0 IN ()), MAX(rt0.c0, 0X72ad34be, vt0.c0, rt0.c4), ((rt0.c3)GLOB(rt0.c2)))) ORDER BY ((((rt0.c1) NOTNULL)) NOT NULL) ASC, rt0.c4;
SELECT SUM(count) FROM (SELECT ALL ((DATE((vt0.c0 IN ()), MAX(rt0.c0, 0X72ad34be, vt0.c0, rt0.c4), ((rt0.c3)GLOB(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOTNULL)) NOT NULL) ASC, rt0.c4);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (DATE((vt0.c0 IN ()), MAX(rt0.c0, 0X72ad34be, vt0.c0, rt0.c4), ((rt0.c3)GLOB(rt0.c2)))) ORDER BY ((((rt0.c1) NOTNULL)) NOT NULL) ASC, rt0.c4;
SELECT SUM(count) FROM (SELECT ALL ((DATE((vt0.c0 IN ()), MAX(rt0.c0, 0X72ad34be, vt0.c0, rt0.c4), ((rt0.c3)GLOB(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOTNULL)) NOT NULL) ASC, rt0.c4);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (DATE((vt0.c0 IN ()), MAX(rt0.c0, 0X72ad34be, vt0.c0, rt0.c4), ((rt0.c3)GLOB(rt0.c2)))) ORDER BY ((((rt0.c1) NOTNULL)) NOT NULL) ASC, rt0.c4;
SELECT * FROM vt0, t0 WHERE (CAST((- (t0.c0)) AS NUMERIC)) ORDER BY t0.c0 DESC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c0, 0.5789810202300343) IN (LIKELIHOOD(DISTINCT vt0.c1, 0.8478944754581267))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c0, 0.5789810202300343) IN (LIKELIHOOD(DISTINCT vt0.c1, 0.8478944754581267))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST((- (t0.c0)) AS NUMERIC)) ORDER BY t0.c0 DESC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c0, 0.5789810202300343) IN (LIKELIHOOD(DISTINCT vt0.c1, 0.8478944754581267))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c0, 0.5789810202300343) IN (LIKELIHOOD(DISTINCT vt0.c1, 0.8478944754581267))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST((- (t0.c0)) AS NUMERIC)) ORDER BY t0.c0 DESC  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c0, 0.5789810202300343) IN (LIKELIHOOD(DISTINCT vt0.c1, 0.8478944754581267))) ASC;
SELECT * FROM t0, vt0 WHERE (((((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))OR(vt0.c0)))<>((((vt0.c1, vt0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((vt0.c0, x'', t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))OR(vt0.c0)))!=((((vt0.c1, vt0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((vt0.c0, x'', t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))OR(vt0.c0)))<>((((vt0.c1, vt0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((vt0.c0, x'', t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))OR(vt0.c0)))!=((((vt0.c1, vt0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((vt0.c0, x'', t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((((((vt0.c0)AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))OR(vt0.c0)))<>((((vt0.c1, vt0.c1, t0.c0)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((vt0.c0, x'', t0.c0))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((GLOB(rt0.c4, rt0.c0)) NOT BETWEEN (((rt0.c4)<<(rt0.c4))) AND (CAST(rt0.c2 AS BLOB))) WHERE (((((0x20e39ce0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0x20e39ce0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((GLOB(rt0.c4, rt0.c0)) NOT BETWEEN (((rt0.c4)<<(rt0.c4))) AND (CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((GLOB(rt0.c4, rt0.c0)) NOT BETWEEN (((rt0.c4)<<(rt0.c4))) AND (CAST(rt0.c2 AS BLOB))) WHERE (((((0x20e39ce0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0x20e39ce0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((GLOB(rt0.c4, rt0.c0)) NOT BETWEEN (((rt0.c4)<<(rt0.c4))) AND (CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((GLOB(rt0.c4, rt0.c0)) NOT BETWEEN (((rt0.c4)<<(rt0.c4))) AND (CAST(rt0.c2 AS BLOB))) WHERE (((((0x20e39ce0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((((((((t0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(0.3545886138418243)))OR(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(0.3545886138418243)))OR(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((((((((t0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(0.3545886138418243)))OR(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(0.3545886138418243)))OR(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((((((((((t0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(0.3545886138418243)))OR(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0)LIKE(x'')) IN (NULL)) WHERE (((((vt0.c1 IN (rt0.c0, rt0.c2)), (+ (rt0.c2)), -1274672105))>=((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), ((((rt0.c0)AND(0.5266601778343698)))AND(rt0.c4)), ((((((((0.24159612047454904)AND(rt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c4)))))) ORDER BY ((vt0.c1) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN (rt0.c0, rt0.c2)), (+ (rt0.c2)), -1274672105))>=((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), ((((rt0.c0)AND(0.5266601778343698)))AND(rt0.c4)), ((((((((0.24159612047454904)AND(rt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0)LIKE(x'')) IN (NULL)) ORDER BY ((vt0.c1) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0)LIKE(x'')) IN (NULL)) WHERE (((((vt0.c1 IN (rt0.c0, rt0.c2)), (+ (rt0.c2)), -1274672105))>=((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), ((((rt0.c0)AND(0.5266601778343698)))AND(rt0.c4)), ((((((((0.24159612047454904)AND(rt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c4)))))) ORDER BY ((vt0.c1) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN (rt0.c0, rt0.c2)), (+ (rt0.c2)), -1274672105))>=((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), ((((rt0.c0)AND(0.5266601778343698)))AND(rt0.c4)), ((((((((0.24159612047454904)AND(rt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c4)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0)LIKE(x'')) IN (NULL)) ORDER BY ((vt0.c1) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0)LIKE(x'')) IN (NULL)) WHERE (((((vt0.c1 IN (rt0.c0, rt0.c2)), (+ (rt0.c2)), -1274672105))>=((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)), ((((rt0.c0)AND(0.5266601778343698)))AND(rt0.c4)), ((((((((0.24159612047454904)AND(rt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c4)))))) ORDER BY ((vt0.c1) NOTNULL) DESC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN t0 ON ((((vt0.c0)=(rt0.c4))) ISNULL) INNER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((vt0.c0)==(rt0.c4))) ISNULL) INNER JOIN vt0 ON CAST(vt0.c1 AS REAL));
SELECT * FROM rt0 CROSS JOIN t0 ON ((((vt0.c0)=(rt0.c4))) ISNULL) INNER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((vt0.c0)==(rt0.c4))) ISNULL) INNER JOIN vt0 ON CAST(vt0.c1 AS REAL));
SELECT * FROM rt0 CROSS JOIN t0 ON ((((vt0.c0)=(rt0.c4))) ISNULL) INNER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE (SQLITE_VERSION());
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE NOCASE)>=(((x'b069') NOT BETWEEN (rt0.c4) AND (rt0.c1)))), NULL, ((((((((vt0.c0)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR((rt0.c2 IN (rt0.c3)))))AND(((rt0.c2)|(rt0.c4)))))OR(TYPEOF(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE NOCASE)>=(((x'b069') NOT BETWEEN (rt0.c4) AND (rt0.c1)))), NULL, ((((((((vt0.c0)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR((rt0.c2 IN (rt0.c3)))))AND(((rt0.c2)|(rt0.c4)))))OR(TYPEOF(vt0.c0))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE NOCASE)>=(((x'b069') NOT BETWEEN (rt0.c4) AND (rt0.c1)))), NULL, ((((((((vt0.c0)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR((rt0.c2 IN (rt0.c3)))))AND(((rt0.c2)|(rt0.c4)))))OR(TYPEOF(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE NOCASE)>=(((x'b069') NOT BETWEEN (rt0.c4) AND (rt0.c1)))), NULL, ((((((((vt0.c0)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR((rt0.c2 IN (rt0.c3)))))AND(((rt0.c2)|(rt0.c4)))))OR(TYPEOF(vt0.c0))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 COLLATE NOCASE)>=(((x'b069') NOT BETWEEN (rt0.c4) AND (rt0.c1)))), NULL, ((((((((vt0.c0)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR((rt0.c2 IN (rt0.c3)))))AND(((rt0.c2)|(rt0.c4)))))OR(TYPEOF(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((((vt0.c1)OR(t0.c0)))OR(vt0.c0))))) ORDER BY CAST((('1803170139') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, t0.c0 ASC, (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END, ((vt0.c0)!=(vt0.c0))))>((vt0.c0, ((((t0.c0)OR(vt0.c1)))AND(t0.c0)), t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((((vt0.c1)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((('1803170139') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, t0.c0 ASC, (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END, ((vt0.c0)!=(vt0.c0))))>((vt0.c0, ((((t0.c0)OR(vt0.c1)))AND(t0.c0)), t0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((((vt0.c1)OR(t0.c0)))OR(vt0.c0))))) ORDER BY CAST((('1803170139') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, t0.c0 ASC, (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END, ((vt0.c0)!=(vt0.c0))))>((vt0.c0, ((((t0.c0)OR(vt0.c1)))AND(t0.c0)), t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((((vt0.c1)OR(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((('1803170139') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, t0.c0 ASC, (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END, ((vt0.c0)!=(vt0.c0))))>((vt0.c0, ((((t0.c0)OR(vt0.c1)))AND(t0.c0)), t0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((((vt0.c1)OR(t0.c0)))OR(vt0.c0))))) ORDER BY CAST((('1803170139') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER)  NULLS LAST, t0.c0 ASC, (((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END, ((vt0.c0)!=(vt0.c0))))>((vt0.c0, ((((t0.c0)OR(vt0.c1)))AND(t0.c0)), t0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT vt0.c0, rt0.c0) COLLATE RTRIM) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT vt0.c0, rt0.c0) COLLATE RTRIM) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c0, rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c3 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT vt0.c0, rt0.c0) COLLATE RTRIM) ORDER BY rt0.c3 DESC  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract((((vt0.c1)) NOT BETWEEN (('-890801418')) AND ((vt0.c0))), vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((((vt0.c1)) NOT BETWEEN (('-890801418')) AND ((vt0.c0))), vt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract((((vt0.c1)) NOT BETWEEN (('-890801418')) AND ((vt0.c0))), vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((((vt0.c1)) NOT BETWEEN (('-890801418')) AND ((vt0.c0))), vt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c4 IN ()))*(ABS(vt0.c0)))) ORDER BY CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN x'' THEN ((vt0.c1)GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN rt0.c0 ELSE rt0.c4 COLLATE NOCASE END ASC  NULLS LAST, (NOT (((((((((vt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST, rt0.c4 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ()))*(ABS(vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN x'' THEN ((vt0.c1)GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN rt0.c0 ELSE rt0.c4 COLLATE NOCASE END ASC  NULLS LAST, (NOT (((((((((vt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST, rt0.c4 COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c4 IN ()))*(ABS(vt0.c0)))) ORDER BY CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN x'' THEN ((vt0.c1)GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN rt0.c0 ELSE rt0.c4 COLLATE NOCASE END ASC  NULLS LAST, (NOT (((((((((vt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST, rt0.c4 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ()))*(ABS(vt0.c0)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN x'' THEN ((vt0.c1)GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN rt0.c0 ELSE rt0.c4 COLLATE NOCASE END ASC  NULLS LAST, (NOT (((((((((vt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST, rt0.c4 COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c4 IN ()))*(ABS(vt0.c0)))) ORDER BY CASE WHEN ((vt0.c0)OR(vt0.c0)) THEN t0.c0 COLLATE BINARY WHEN x'' THEN ((vt0.c1)GLOB(rt0.c3)) WHEN (- (rt0.c2)) THEN rt0.c0 ELSE rt0.c4 COLLATE NOCASE END ASC  NULLS LAST, (NOT (((((((((vt0.c1)OR(rt0.c1)))AND(t0.c0)))OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST, rt0.c4 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((+ (t0.c0)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t0.c0)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((+ (t0.c0)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t0.c0)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((((((+ (t0.c0)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))OR(((vt0.c0) NOT NULL))))OR(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((t0.c0 IN (vt0.c1)))) WHERE (((t0.c0)<>(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)!=(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((t0.c0 IN (vt0.c1)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((t0.c0 IN (vt0.c1)))) WHERE (((t0.c0)<>(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)!=(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((t0.c0 IN (vt0.c1)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ ((t0.c0 IN (vt0.c1)))) WHERE (((t0.c0)<>(CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END)));
SELECT * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, 0.45131157507923003 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, 0.45131157507923003 COLLATE NOCASE)));
SELECT * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, 0.45131157507923003 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, 0.45131157507923003 COLLATE NOCASE)));
SELECT * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, 0.45131157507923003 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c4)IS NOT(rt0.c2)))))AND(((vt0.c1)<>(0.5845470001963997)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c4)IS NOT(rt0.c2)))))AND(((vt0.c1)<>(0.5845470001963997))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c4)IS NOT(rt0.c2)))))AND(((vt0.c1)<>(0.5845470001963997)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c4)IS NOT(rt0.c2)))))AND(((vt0.c1)<>(0.5845470001963997))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c4)IS NOT(rt0.c2)))))AND(((vt0.c1)<>(0.5845470001963997)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<(NULL)))AND((NOT (vt0.c0))))) ORDER BY ((0xffffffff851a9225) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(NULL)))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0Xffffffff851a9225) NOT NULL) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<(NULL)))AND((NOT (vt0.c0))))) ORDER BY ((0xffffffff851a9225) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<(NULL)))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0Xffffffff851a9225) NOT NULL) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<(NULL)))AND((NOT (vt0.c0))))) ORDER BY ((0xffffffff851a9225) NOT NULL) DESC;
SELECT * FROM vt0, t0, rt0 WHERE ((CAST(0.7227459363810692 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.7227459363810692 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((CAST(0.7227459363810692 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.7227459363810692 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((CAST(0.7227459363810692 AS TEXT) IN ()));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0))) ISNULL)) ORDER BY (((((((((('\rQ')OR(rt0.c4)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))IS NOT((- (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED ORDER BY (((((((((('\rQ')OR(rt0.c4)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))IS NOT((- (NULL)))) DESC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0))) ISNULL)) ORDER BY (((((((((('\rQ')OR(rt0.c4)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))IS NOT((- (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED ORDER BY (((((((((('\rQ')OR(rt0.c4)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))IS NOT((- (NULL)))) DESC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0))) ISNULL)) ORDER BY (((((((((('\rQ')OR(rt0.c4)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0)))IS NOT((- (NULL)))) DESC;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (+ (rt0.c4)) COLLATE BINARY CROSS JOIN vt0 ON CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC) WHERE (rt0.c2) ORDER BY CASE CASE t0.c0  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END  WHEN (rt0.c2 IN (rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN IFNULL(rt0.c3, rt0.c3) THEN x'205c' ELSE CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (+ (rt0.c4)) COLLATE BINARY CROSS JOIN vt0 ON CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC) ORDER BY CASE CASE t0.c0  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END  WHEN (rt0.c2 IN (rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN IFNULL(rt0.c3, rt0.c3) THEN x'205c' ELSE CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (+ (rt0.c4)) COLLATE BINARY CROSS JOIN vt0 ON CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC) WHERE (rt0.c2) ORDER BY CASE CASE t0.c0  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END  WHEN (rt0.c2 IN (rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN IFNULL(rt0.c3, rt0.c3) THEN x'205c' ELSE CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (+ (rt0.c4)) COLLATE BINARY CROSS JOIN vt0 ON CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC) ORDER BY CASE CASE t0.c0  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END  WHEN (rt0.c2 IN (rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN IFNULL(rt0.c3, rt0.c3) THEN x'205c' ELSE CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (+ (rt0.c4)) COLLATE BINARY CROSS JOIN vt0 ON CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC) WHERE (rt0.c2) ORDER BY CASE CASE t0.c0  WHEN NULL THEN rt0.c1 ELSE vt0.c0 END  WHEN (rt0.c2 IN (rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN IFNULL(rt0.c3, rt0.c3) THEN x'205c' ELSE CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END END DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0)GLOB(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0)GLOB(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0)GLOB(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((rt0.c3)>=('-787041303')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>=('-787041303')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((rt0.c3)>=('-787041303')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>=('-787041303')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((rt0.c3)>=('-787041303')) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((vt0.c1)||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)||(vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((-2.07603292E8)AND(NULL)))AND(rt0.c4)))<((rt0.c3 IN (vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c3)))OR(NULLIF(rt0.c0, NULL))))AND((rt0.c4 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((-2.07603292E8)AND(NULL)))AND(rt0.c4)))<((rt0.c3 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c3)))OR(NULLIF(rt0.c0, NULL))))AND((rt0.c4 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((-2.07603292E8)AND(NULL)))AND(rt0.c4)))<((rt0.c3 IN (vt0.c0))))) ORDER BY ((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c3)))OR(NULLIF(rt0.c0, NULL))))AND((rt0.c4 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((-2.07603292E8)AND(NULL)))AND(rt0.c4)))<((rt0.c3 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c3)))OR(NULLIF(rt0.c0, NULL))))AND((rt0.c4 IN ())))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c4)))AND(x'8e33')) AS REAL) RIGHT OUTER JOIN t0 ON ((((vt0.c1)+(t0.c0))) BETWEEN ((- (vt0.c0))) AND ((((0.3912426138700206)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) WHERE (((TYPEOF(rt0.c4))&(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c4))&(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c4)))AND(x'8e33')) AS REAL) RIGHT OUTER JOIN t0 ON ((((vt0.c1)+(t0.c0))) BETWEEN ((- (vt0.c0))) AND ((((0.3912426138700206)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c4)))AND(x'8e33')) AS REAL) RIGHT OUTER JOIN t0 ON ((((vt0.c1)+(t0.c0))) BETWEEN ((- (vt0.c0))) AND ((((0.3912426138700206)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) WHERE (((TYPEOF(rt0.c4))&(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c4))&(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c4)))AND(x'8e33')) AS REAL) RIGHT OUTER JOIN t0 ON ((((vt0.c1)+(t0.c0))) BETWEEN ((- (vt0.c0))) AND ((((0.3912426138700206)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(rt0.c4)))AND(x'8e33')) AS REAL) RIGHT OUTER JOIN t0 ON ((((vt0.c1)+(t0.c0))) BETWEEN ((- (vt0.c0))) AND ((((0.3912426138700206)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))) WHERE (((TYPEOF(rt0.c4))&(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (~ (TRIM(DISTINCT rt0.c1)))  NULLS FIRST, (vt0.c0 IN ((((rt0.c0))<=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (TRIM(DISTINCT rt0.c1)))  NULLS FIRST, (vt0.c0 IN ((((rt0.c0))<=((rt0.c2))))));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (~ (TRIM(DISTINCT rt0.c1)))  NULLS FIRST, (vt0.c0 IN ((((rt0.c0))<=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (TRIM(DISTINCT rt0.c1)))  NULLS FIRST, (vt0.c0 IN ((((rt0.c0))<=((rt0.c2))))));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (~ (TRIM(DISTINCT rt0.c1)))  NULLS FIRST, (vt0.c0 IN ((((rt0.c0))<=((rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON '1775216298' WHERE ((+ (((rt0.c3)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)/(rt0.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON '1775216298');
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON '1775216298' WHERE ((+ (((rt0.c3)/(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)/(rt0.c3))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON '1775216298');
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON '1775216298' WHERE ((+ (((rt0.c3)/(rt0.c3)))));
SELECT * FROM t0 WHERE (((RTRIM(t0.c0)) BETWEEN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(t0.c0)) BETWEEN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((RTRIM(t0.c0)) BETWEEN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(t0.c0)) BETWEEN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((RTRIM(t0.c0)) BETWEEN (CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(vt0.c0))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (x'9315eeed');
SELECT SUM(count) FROM (SELECT ALL ((x'9315eeed') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (x'9315eeed');
SELECT SUM(count) FROM (SELECT ALL ((x'9315eeed') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (x'9315eeed');
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) WHERE (CASE CAST(rt0.c3 AS REAL)  WHEN vt0.c1 THEN ((((((((vt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY (- (NULL)) DESC, CAST((+ (rt0.c0)) AS BLOB) ASC, CAST(((((NULL)AND(vt0.c1)))AND(rt0.c1)) AS BLOB) ASC  NULLS LAST, (INSTR(rt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c3 AS REAL)  WHEN vt0.c1 THEN ((((((((vt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) ORDER BY (- (NULL)) DESC, CAST((+ (rt0.c0)) AS BLOB) ASC, CAST(((((NULL)AND(vt0.c1)))AND(rt0.c1)) AS BLOB) ASC  NULLS LAST, (INSTR(rt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) WHERE (CASE CAST(rt0.c3 AS REAL)  WHEN vt0.c1 THEN ((((((((vt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY (- (NULL)) DESC, CAST((+ (rt0.c0)) AS BLOB) ASC, CAST(((((NULL)AND(vt0.c1)))AND(rt0.c1)) AS BLOB) ASC  NULLS LAST, (INSTR(rt0.c0, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c3 AS REAL)  WHEN vt0.c1 THEN ((((((((vt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) ORDER BY (- (NULL)) DESC, CAST((+ (rt0.c0)) AS BLOB) ASC, CAST(((((NULL)AND(vt0.c1)))AND(rt0.c1)) AS BLOB) ASC  NULLS LAST, (INSTR(rt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((t0.c0 IN (rt0.c1)) AS REAL) WHERE (CASE CAST(rt0.c3 AS REAL)  WHEN vt0.c1 THEN ((((((((vt0.c1)AND(t0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(t0.c0)) ELSE CAST(rt0.c1 AS TEXT) END) ORDER BY (- (NULL)) DESC, CAST((+ (rt0.c0)) AS BLOB) ASC, CAST(((((NULL)AND(vt0.c1)))AND(rt0.c1)) AS BLOB) ASC  NULLS LAST, (INSTR(rt0.c0, vt0.c0) IN ());
SELECT * FROM vt0, rt0, t0 WHERE (((0.3057742078118786) BETWEEN (((rt0.c3)!=(rt0.c1))) AND (((0.5090000367543334)>=(rt0.c2))))) ORDER BY CASE CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN t0.c0 END  WHEN ((rt0.c4) NOT NULL) THEN (((vt0.c0))<=((rt0.c2))) ELSE t0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.3057742078118786) BETWEEN (((rt0.c3)!=(rt0.c1))) AND (((0.5090000367543334)>=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN t0.c0 END  WHEN ((rt0.c4) NOT NULL) THEN (((vt0.c0))<=((rt0.c2))) ELSE t0.c0 END ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((0.3057742078118786) BETWEEN (((rt0.c3)!=(rt0.c1))) AND (((0.5090000367543334)>=(rt0.c2))))) ORDER BY CASE CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN t0.c0 END  WHEN ((rt0.c4) NOT NULL) THEN (((vt0.c0))<=((rt0.c2))) ELSE t0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.3057742078118786) BETWEEN (((rt0.c3)!=(rt0.c1))) AND (((0.5090000367543334)>=(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN t0.c0 END  WHEN ((rt0.c4) NOT NULL) THEN (((vt0.c0))<=((rt0.c2))) ELSE t0.c0 END ASC  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((0.3057742078118786) BETWEEN (((rt0.c3)!=(rt0.c1))) AND (((0.5090000367543334)>=(rt0.c2))))) ORDER BY CASE CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN t0.c0 END  WHEN ((rt0.c4) NOT NULL) THEN (((vt0.c0))<=((rt0.c2))) ELSE t0.c0 END ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((UNLIKELY(rt0.c3) IN ())) ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c2 COLLATE NOCASE)) ASC, (+ (rt0.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c3) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c2 COLLATE NOCASE)) ASC, (+ (rt0.c3)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((UNLIKELY(rt0.c3) IN ())) ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c2 COLLATE NOCASE)) ASC, (+ (rt0.c3)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(rt0.c3) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c2 COLLATE NOCASE)) ASC, (+ (rt0.c3)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((UNLIKELY(rt0.c3) IN ())) ORDER BY (((~ (rt0.c0)))IS NOT(rt0.c2 COLLATE NOCASE)) ASC, (+ (rt0.c3)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((rt0.c4)>>(rt0.c2))) NOT NULL) CROSS JOIN rt0 ON ((NULL)>=(CAST(vt0.c0 AS INTEGER))) WHERE (((((x'') ISNULL))%(CAST(rt0.c4 AS INTEGER)))) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') ISNULL))%(CAST(rt0.c4 AS INTEGER)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((rt0.c4)>>(rt0.c2))) NOT NULL) CROSS JOIN rt0 ON ((NULL)>=(CAST(vt0.c0 AS INTEGER))) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((rt0.c4)>>(rt0.c2))) NOT NULL) CROSS JOIN rt0 ON ((NULL)>=(CAST(vt0.c0 AS INTEGER))) WHERE (((((x'') ISNULL))%(CAST(rt0.c4 AS INTEGER)))) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') ISNULL))%(CAST(rt0.c4 AS INTEGER)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((rt0.c4)>>(rt0.c2))) NOT NULL) CROSS JOIN rt0 ON ((NULL)>=(CAST(vt0.c0 AS INTEGER))) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c3 IN ()) IN (LIKELIHOOD(rt0.c0, 0.7195093007006592)))) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (LIKELIHOOD(rt0.c0, 0.7195093007006592)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (~ (rt0.c1 COLLATE RTRIM)) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c3 IN ()) IN (LIKELIHOOD(rt0.c0, 0.7195093007006592)))) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (LIKELIHOOD(rt0.c0, 0.7195093007006592)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (~ (rt0.c1 COLLATE RTRIM)) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c3 IN ()) IN (LIKELIHOOD(rt0.c0, 0.7195093007006592)))) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (- (((vt0.c1)GLOB(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (- (((vt0.c1)GLOB(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (- (((vt0.c1)GLOB(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (- (((vt0.c1)GLOB(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (- (((vt0.c1)GLOB(rt0.c3))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2) IS TRUE) AS REAL) WHERE (((rt0.c3)==('1969976642'))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN t0.c0 END)) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC, (((+ (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (((rt0.c0)AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)==('1969976642'))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2) IS TRUE) AS REAL) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN t0.c0 END)) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC, (((+ (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (((rt0.c0)AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2) IS TRUE) AS REAL) WHERE (((rt0.c3)==('1969976642'))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN t0.c0 END)) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC, (((+ (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (((rt0.c0)AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)==('1969976642'))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2) IS TRUE) AS REAL) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN t0.c0 END)) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC, (((+ (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (((rt0.c0)AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2) IS TRUE) AS REAL) WHERE (((rt0.c3)==('1969976642'))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN t0.c0 END)) AND ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))))) ASC, (((+ (rt0.c0))) IS TRUE) DESC  NULLS FIRST, (+ (((rt0.c0)AND(rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((vt0.c1) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ((vt0.c1 IN ()), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ((vt0.c1 IN ()), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ((vt0.c1 IN ()), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ((vt0.c1 IN ()), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ((vt0.c1 IN ()), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY vt0.c1;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (((vt0.c1)%(vt0.c1))))) ORDER BY ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (((vt0.c1)%(vt0.c1))))) ORDER BY ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (((vt0.c1)%(vt0.c1))))) ORDER BY ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((NOT (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((NOT (CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((NOT (CAST(t0.c0 AS TEXT))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c1 IN ()))AND(((vt0.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY)) WHERE ((((NOT (vt0.c1)))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))!=(((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c1 IN ()))AND(((vt0.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY)) ORDER BY (NULL IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c1 IN ()))AND(((vt0.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY)) WHERE ((((NOT (vt0.c1)))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) ORDER BY (NULL IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))!=(((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c1 IN ()))AND(((vt0.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY)) ORDER BY (NULL IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((((vt0.c1 IN ()))AND(((vt0.c1) NOTNULL))))OR(vt0.c1 COLLATE BINARY)) WHERE ((((NOT (vt0.c1)))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (x''))))) ORDER BY (NULL IN ());
SELECT ALL * FROM rt0 WHERE (((INSTR('', rt0.c3))!=(CASE WHEN rt0.c3 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((INSTR('', rt0.c3))!=(CASE WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((INSTR('', rt0.c3))!=(CASE WHEN rt0.c3 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((INSTR('', rt0.c3))!=(CASE WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((INSTR('', rt0.c3))!=(CASE WHEN rt0.c3 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0))  WHEN rt0.c2 THEN (rt0.c4 IN ()) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0))  WHEN rt0.c2 THEN (rt0.c4 IN ()) ELSE NULL END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0))  WHEN rt0.c2 THEN (rt0.c4 IN ()) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0))  WHEN rt0.c2 THEN (rt0.c4 IN ()) ELSE NULL END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0))  WHEN rt0.c2 THEN (rt0.c4 IN ()) ELSE NULL END);
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY ((((rt0.c4)LIKE(rt0.c2)))-(((rt0.c2)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)LIKE(rt0.c2)))-(((rt0.c2)*(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY ((((rt0.c4)LIKE(rt0.c2)))-(((rt0.c2)*(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)LIKE(rt0.c2)))-(((rt0.c2)*(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ ((rt0.c1 IN ())))) ORDER BY ((((rt0.c4)LIKE(rt0.c2)))-(((rt0.c2)*(rt0.c0))))  NULLS LAST;
SELECT * FROM rt0, t0, vt0 WHERE ((~ (((rt0.c0)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((~ (((rt0.c0)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((~ (((rt0.c0)IS NOT(rt0.c3)))));
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT json_type(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT json_type(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT json_type(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT json_type(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT json_type(rt0.c1)));
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND ((((rt0.c4, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c0, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND ((((rt0.c4, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c0, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c1))))));
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND ((((rt0.c4, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c0, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND ((((rt0.c4, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c0, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c1))))));
SELECT * FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (((rt0.c0)+(rt0.c1))) AND ((((rt0.c4, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c0, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((-1794938859) BETWEEN (((t0.c0)+(t0.c0))) AND (load_extension(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((-1794938859) BETWEEN (((t0.c0)+(t0.c0))) AND (load_extension(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((-1794938859) BETWEEN (((t0.c0)+(t0.c0))) AND (load_extension(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((-1794938859) BETWEEN (((t0.c0)+(t0.c0))) AND (load_extension(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((-1794938859) BETWEEN (((t0.c0)+(t0.c0))) AND (load_extension(t0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0xffffffff8f3b20bf) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST('-1584800426' AS INTEGER))))OR(((vt0.c0) IS FALSE)))) ORDER BY ((NULL)IS(0.5384150101448716 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0Xffffffff8f3b20bf) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST('-1584800426' AS INTEGER))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)IS(0.5384150101448716 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0xffffffff8f3b20bf) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST('-1584800426' AS INTEGER))))OR(((vt0.c0) IS FALSE)))) ORDER BY ((NULL)IS(0.5384150101448716 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0Xffffffff8f3b20bf) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST('-1584800426' AS INTEGER))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)IS(0.5384150101448716 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0xffffffff8f3b20bf) BETWEEN (vt0.c0) AND (vt0.c1)))AND(CAST('-1584800426' AS INTEGER))))OR(((vt0.c0) IS FALSE)))) ORDER BY ((NULL)IS(0.5384150101448716 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)))%('-1100843916')) WHERE ((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((rt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)))%('-1100843916')));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)))%('-1100843916')) WHERE ((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((rt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)))%('-1100843916')));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)))%('-1100843916')) WHERE ((((t0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((rt0.c0))));
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (~ (t0.c0)))) ORDER BY CASE ((((t0.c0)AND('0')))OR(t0.c0))  WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) WHEN ((t0.c0)&(t0.c0)) THEN 0.23197848477035043 WHEN ((((((((t0.c0)AND('')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE (t0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c0)AND('0')))OR(t0.c0))  WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) WHEN ((t0.c0)&(t0.c0)) THEN 0.23197848477035043 WHEN ((((((((t0.c0)AND('')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE (t0.c0 IN ()) END DESC);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (~ (t0.c0)))) ORDER BY CASE ((((t0.c0)AND('0')))OR(t0.c0))  WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) WHEN ((t0.c0)&(t0.c0)) THEN 0.23197848477035043 WHEN ((((((((t0.c0)AND('')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE (t0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CASE ((((t0.c0)AND('0')))OR(t0.c0))  WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) WHEN ((t0.c0)&(t0.c0)) THEN 0.23197848477035043 WHEN ((((((((t0.c0)AND('')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE (t0.c0 IN ()) END DESC);
SELECT ALL * FROM t0 WHERE (UPPER(DISTINCT (~ (t0.c0)))) ORDER BY CASE ((((t0.c0)AND('0')))OR(t0.c0))  WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) WHEN ((t0.c0)&(t0.c0)) THEN 0.23197848477035043 WHEN ((((((((t0.c0)AND('')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE (t0.c0 IN ()) END DESC;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((rt0.c3)>=(rt0.c0)))<(0.26504165757131926)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>=(rt0.c0)))<(0.26504165757131926))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((rt0.c3)>=(rt0.c0)))<(0.26504165757131926)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>=(rt0.c0)))<(0.26504165757131926))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON NULL WHERE (((((rt0.c3)>=(rt0.c0)))<(0.26504165757131926)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL));
SELECT * FROM t0, rt0 WHERE ((LOWER(-1382991111) IN ())) ORDER BY json_object(((rt0.c2) ISNULL), rt0.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(-1382991111) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY json_object(((rt0.c2) ISNULL), rt0.c2 COLLATE RTRIM) ASC);
SELECT * FROM t0, rt0 WHERE ((LOWER(-1382991111) IN ())) ORDER BY json_object(((rt0.c2) ISNULL), rt0.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LOWER(-1382991111) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY json_object(((rt0.c2) ISNULL), rt0.c2 COLLATE RTRIM) ASC);
SELECT * FROM t0, rt0 WHERE ((LOWER(-1382991111) IN ())) ORDER BY json_object(((rt0.c2) ISNULL), rt0.c2 COLLATE RTRIM) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE (('0.27393770535606043')||(rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE (('0.27393770535606043')||(rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE (('0.27393770535606043')||(rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE (('0.27393770535606043')||(rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE (('0.27393770535606043')||(rt0.c2))  WHEN ((rt0.c4) ISNULL) THEN vt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c1)))) IS FALSE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c1)))) IS FALSE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(rt0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(rt0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c1)))) IS FALSE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (CAST(rt0.c2 AS INTEGER)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN vt0.c1 COLLATE NOCASE END) ORDER BY UNLIKELY(((vt0.c0)*(vt0.c0))) ASC  NULLS LAST, 2041097585;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(((vt0.c0)*(vt0.c0))) ASC  NULLS LAST, 2041097585);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULL THEN vt0.c1 COLLATE NOCASE END) ORDER BY UNLIKELY(((vt0.c0)*(vt0.c0))) ASC  NULLS LAST, 2041097585;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(((vt0.c0)*(vt0.c0))) ASC  NULLS LAST, 2041097585);
SELECT ALL * FROM t0, vt0 WHERE (LOWER(DISTINCT UNLIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT UNLIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LOWER(DISTINCT UNLIKELY(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT UNLIKELY(DISTINCT t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (LOWER(DISTINCT UNLIKELY(DISTINCT t0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c0 IN ()), x'', CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN 'q<v偯G侂hzr' THEN -2146410129 ELSE vt0.c1 END, '0.7227459363810692', x''))>=(((- (rt0.c2)), ((t0.c0) BETWEEN (rt0.c3) AND (t0.c0)), ((rt0.c1)&(0.7157271273471197)), (NOT (rt0.c4)), ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), x'', CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN 'q<v偯G侂hzr' THEN -2146410129 ELSE vt0.c1 END, '0.7227459363810692', x''))>=(((- (rt0.c2)), ((t0.c0) BETWEEN (rt0.c3) AND (t0.c0)), ((rt0.c1)&(0.7157271273471197)), (NOT (rt0.c4)), ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c0 IN ()), x'', CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN 'q<v偯G侂hzr' THEN -2146410129 ELSE vt0.c1 END, '0.7227459363810692', x''))>=(((- (rt0.c2)), ((t0.c0) BETWEEN (rt0.c3) AND (t0.c0)), ((rt0.c1)&(0.7157271273471197)), (NOT (rt0.c4)), ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4)))))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), x'', CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN 'q<v偯G侂hzr' THEN -2146410129 ELSE vt0.c1 END, '0.7227459363810692', x''))>=(((- (rt0.c2)), ((t0.c0) BETWEEN (rt0.c3) AND (t0.c0)), ((rt0.c1)&(0.7157271273471197)), (NOT (rt0.c4)), ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c0 IN ()), x'', CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN 'q<v偯G侂hzr' THEN -2146410129 ELSE vt0.c1 END, '0.7227459363810692', x''))>=(((- (rt0.c2)), ((t0.c0) BETWEEN (rt0.c3) AND (t0.c0)), ((rt0.c1)&(0.7157271273471197)), (NOT (rt0.c4)), ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4)))))) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)GLOB(rt0.c4)))|(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c4)))|(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)GLOB(rt0.c4)))|(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c4)))|(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c0)GLOB(rt0.c4)))|(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE 0.034246223766913775  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END THEN (- (vt0.c1)) ELSE CASE WHEN vt0.c1 THEN 0.1930858092348704 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 0.034246223766913775  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END THEN (- (vt0.c1)) ELSE CASE WHEN vt0.c1 THEN 0.1930858092348704 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE 0.034246223766913775  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END THEN (- (vt0.c1)) ELSE CASE WHEN vt0.c1 THEN 0.1930858092348704 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 0.034246223766913775  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END THEN (- (vt0.c1)) ELSE CASE WHEN vt0.c1 THEN 0.1930858092348704 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE 0.034246223766913775  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END THEN (- (vt0.c1)) ELSE CASE WHEN vt0.c1 THEN 0.1930858092348704 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOTNULL))IS(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOTNULL))IS(x''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOTNULL))IS(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOTNULL))IS(x''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c4) NOTNULL))IS(x'')));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'') IS FALSE)) ORDER BY CASE WHEN ((vt0.c0)|(0xffffffffc091dd07)) THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((vt0.c0)|(0Xffffffffc091dd07)) THEN (vt0.c1 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'') IS FALSE)) ORDER BY CASE WHEN ((vt0.c0)|(0xffffffffc091dd07)) THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((vt0.c0)|(0Xffffffffc091dd07)) THEN (vt0.c1 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'') IS FALSE)) ORDER BY CASE WHEN ((vt0.c0)|(0xffffffffc091dd07)) THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((t0.c0)<<(t0.c0)), CAST(t0.c0 AS TEXT), ((t0.c0)+(t0.c0))))>=((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (((t0.c0))=((t0.c0))))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)<<(t0.c0)), CAST(t0.c0 AS TEXT), ((t0.c0)+(t0.c0))))>=((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (((t0.c0))==((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t0 WHERE ((((((t0.c0)<<(t0.c0)), CAST(t0.c0 AS TEXT), ((t0.c0)+(t0.c0))))>=((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (((t0.c0))=((t0.c0))))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)<<(t0.c0)), CAST(t0.c0 AS TEXT), ((t0.c0)+(t0.c0))))>=((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (((t0.c0))==((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM t0 WHERE ((((((t0.c0)<<(t0.c0)), CAST(t0.c0 AS TEXT), ((t0.c0)+(t0.c0))))>=((CAST(t0.c0 AS TEXT), (t0.c0 IN ()), (((t0.c0))=((t0.c0))))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY;
SELECT * FROM t0 WHERE ((+ ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ((- (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (((rt0.c1) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0) IS FALSE)) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS NUMERIC);
SELECT COUNT(*) FROM t0 WHERE (LTRIM((NOT (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((NOT (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LTRIM((NOT (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((NOT (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LTRIM((NOT (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) NOT NULL)) ORDER BY (((rt0.c4)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c4)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c4)<=(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) NOT NULL)) ORDER BY (((rt0.c4)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c4)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c4)<=(rt0.c3))))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) NOT NULL)) ORDER BY (((rt0.c4)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c4)<=(rt0.c3)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (- ((~ (vt0.c1)))) WHERE ((((- (vt0.c0)))LIKE(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))LIKE(rt0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (- ((~ (vt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (- ((~ (vt0.c1)))) WHERE ((((- (vt0.c0)))LIKE(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))LIKE(rt0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (- ((~ (vt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (- ((~ (vt0.c1)))) WHERE ((((- (vt0.c0)))LIKE(rt0.c0)));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(LIKELIHOOD(vt0.c1, 0.7627669402872479) AS INTEGER) WHERE ((0.015810154959355116 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.015810154959355116 IN ())) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(LIKELIHOOD(vt0.c1, 0.7627669402872479) AS INTEGER));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(LIKELIHOOD(vt0.c1, 0.7627669402872479) AS INTEGER) WHERE ((0.015810154959355116 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.015810154959355116 IN ())) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(LIKELIHOOD(vt0.c1, 0.7627669402872479) AS INTEGER));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON CAST(LIKELIHOOD(vt0.c1, 0.7627669402872479) AS INTEGER) WHERE ((0.015810154959355116 IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((ABS(vt0.c1)) ISNULL)) ORDER BY ((LOWER('1336883353'))GLOB(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LOWER('1336883353'))GLOB(rt0.c0)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((ABS(vt0.c1)) ISNULL)) ORDER BY ((LOWER('1336883353'))GLOB(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((LOWER('1336883353'))GLOB(rt0.c0)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((ABS(vt0.c1)) ISNULL)) ORDER BY ((LOWER('1336883353'))GLOB(rt0.c0)) DESC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((x'')OR(t0.c0)))OR(rt0.c2))) BETWEEN (1368190968) AND (((rt0.c3)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(t0.c0)))OR(rt0.c2))) BETWEEN (1368190968) AND (((rt0.c3)>>(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((x'')OR(t0.c0)))OR(rt0.c2))) BETWEEN (1368190968) AND (((rt0.c3)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(t0.c0)))OR(rt0.c2))) BETWEEN (1368190968) AND (((rt0.c3)>>(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((x'')OR(t0.c0)))OR(rt0.c2))) BETWEEN (1368190968) AND (((rt0.c3)>>(rt0.c2)))));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((- ((((vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((t0.c0, vt0.c1, vt0.c0)))))) ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3))) BETWEEN ((((t0.c0, rt0.c3, rt0.c4)) BETWEEN ((vt0.c1, vt0.c0, rt0.c4)) AND ((NULL, vt0.c1, rt0.c4)))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((t0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3))) BETWEEN ((((t0.c0, rt0.c3, rt0.c4)) BETWEEN ((vt0.c1, vt0.c0, rt0.c4)) AND ((NULL, vt0.c1, rt0.c4)))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((- ((((vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((t0.c0, vt0.c1, vt0.c0)))))) ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3))) BETWEEN ((((t0.c0, rt0.c3, rt0.c4)) BETWEEN ((vt0.c1, vt0.c0, rt0.c4)) AND ((NULL, vt0.c1, rt0.c4)))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((t0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3))) BETWEEN ((((t0.c0, rt0.c3, rt0.c4)) BETWEEN ((vt0.c1, vt0.c0, rt0.c4)) AND ((NULL, vt0.c1, rt0.c4)))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((- ((((vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((rt0.c4, t0.c0, rt0.c1)) AND ((t0.c0, vt0.c1, vt0.c0)))))) ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3))) BETWEEN ((((t0.c0, rt0.c3, rt0.c4)) BETWEEN ((vt0.c1, vt0.c0, rt0.c4)) AND ((NULL, vt0.c1, rt0.c4)))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((0.19427597146123754)AND(rt0.c0)))OR(rt0.c1)) THEN (rt0.c4 IN (rt0.c0)) END) ORDER BY ((0.41877983515218664)<>(UPPER(DISTINCT rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.19427597146123754)AND(rt0.c0)))OR(rt0.c1)) THEN (rt0.c4 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((0.41877983515218664)<>(UPPER(DISTINCT rt0.c2))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((0.19427597146123754)AND(rt0.c0)))OR(rt0.c1)) THEN (rt0.c4 IN (rt0.c0)) END) ORDER BY ((0.41877983515218664)<>(UPPER(DISTINCT rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.19427597146123754)AND(rt0.c0)))OR(rt0.c1)) THEN (rt0.c4 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((0.41877983515218664)<>(UPPER(DISTINCT rt0.c2))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((0.19427597146123754)AND(rt0.c0)))OR(rt0.c1)) THEN (rt0.c4 IN (rt0.c0)) END) ORDER BY ((0.41877983515218664)<>(UPPER(DISTINCT rt0.c2))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((+ (rt0.c0)) COLLATE BINARY) ORDER BY (((- (rt0.c1)))AND(((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((- (rt0.c1)))AND(((vt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((+ (rt0.c0)) COLLATE BINARY) ORDER BY (((- (rt0.c1)))AND(((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((- (rt0.c1)))AND(((vt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((+ (rt0.c0)) COLLATE BINARY) ORDER BY (((- (rt0.c1)))AND(((vt0.c1) ISNULL)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))!=(((NULL)IS(vt0.c0))))) ORDER BY ((((']' COLLATE RTRIM)AND((~ (vt0.c0)))))AND(vt0.c0)), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) ISNULL), ((vt0.c0)>(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))<>(((NULL)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((']' COLLATE RTRIM)AND((~ (vt0.c0)))))AND(vt0.c0)), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) ISNULL), ((vt0.c0)>(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))!=(((NULL)IS(vt0.c0))))) ORDER BY ((((']' COLLATE RTRIM)AND((~ (vt0.c0)))))AND(vt0.c0)), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) ISNULL), ((vt0.c0)>(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))<>(((NULL)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((']' COLLATE RTRIM)AND((~ (vt0.c0)))))AND(vt0.c0)), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) ISNULL), ((vt0.c0)>(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT))!=(((NULL)IS(vt0.c0))))) ORDER BY ((((']' COLLATE RTRIM)AND((~ (vt0.c0)))))AND(vt0.c0)), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) ISNULL), ((vt0.c0)>(vt0.c0)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c0, 'dV')))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c0, 'dV')))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c0, 'dV')))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c0, 'dV')))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((CAST(rt0.c3 AS BLOB))OR(rt0.c1)))OR((rt0.c2 IN (rt0.c0, 'dV')))) WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (vt0.c0)))<=(((rt0.c2)*(rt0.c0)))) WHERE (CAST(TYPEOF(0x42534fdd) AS NUMERIC)) ORDER BY (((((rt0.c1)AND(rt0.c1))))<>((rt0.c4 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(0x42534fdd) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (vt0.c0)))<=(((rt0.c2)*(rt0.c0)))) ORDER BY (((((rt0.c1)AND(rt0.c1))))!=((rt0.c4 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (vt0.c0)))<=(((rt0.c2)*(rt0.c0)))) WHERE (CAST(TYPEOF(0x42534fdd) AS NUMERIC)) ORDER BY (((((rt0.c1)AND(rt0.c1))))<>((rt0.c4 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(0x42534fdd) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (vt0.c0)))<=(((rt0.c2)*(rt0.c0)))) ORDER BY (((((rt0.c1)AND(rt0.c1))))!=((rt0.c4 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((~ (vt0.c0)))<=(((rt0.c2)*(rt0.c0)))) WHERE (CAST(TYPEOF(0x42534fdd) AS NUMERIC)) ORDER BY (((((rt0.c1)AND(rt0.c1))))<>((rt0.c4 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3872020338753829))))))OR(((vt0.c0) IS TRUE))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((t0.c0)<=(vt0.c1)))))OR((vt0.c1 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((t0.c0)<=(vt0.c1)))))OR((vt0.c1 IN (t0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3872020338753829))))))OR(((vt0.c0) IS TRUE))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3872020338753829))))))OR(((vt0.c0) IS TRUE))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((t0.c0)<=(vt0.c1)))))OR((vt0.c1 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((t0.c0)<=(vt0.c1)))))OR((vt0.c1 IN (t0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3872020338753829))))))OR(((vt0.c0) IS TRUE))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3872020338753829))))))OR(((vt0.c0) IS TRUE))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(((t0.c0)<=(vt0.c1)))))OR((vt0.c1 IN (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c0)-(rt0.c1)))<=(((rt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(rt0.c1)))<=(((rt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c0)-(rt0.c1)))<=(((rt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(rt0.c1)))<=(((rt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c0)-(rt0.c1)))<=(((rt0.c0)GLOB(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c1))==((vt0.c1)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY CASE NULLIF(vt0.c1, vt0.c0)  WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1)=(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1))=((vt0.c1)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE NULLIF(vt0.c1, vt0.c0)  WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1)==(vt0.c1)) END ASC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c1))==((vt0.c1)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY CASE NULLIF(vt0.c1, vt0.c0)  WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1)=(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1))=((vt0.c1)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE NULLIF(vt0.c1, vt0.c0)  WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1)==(vt0.c1)) END ASC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c1))==((vt0.c1)))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY CASE NULLIF(vt0.c1, vt0.c0)  WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c1)=(vt0.c1)) END ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c4) ISNULL)))<=((CAST(rt0.c2 AS BLOB)))) LEFT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (0.03359584427291673 COLLATE NOCASE) AND ((rt0.c4 IN ()))) WHERE (((CAST(t0.c0 AS TEXT))<>((((rt0.c3, rt0.c4, vt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))<>((((rt0.c3, rt0.c4, vt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c4) ISNULL)))<=((CAST(rt0.c2 AS BLOB)))) LEFT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (0.03359584427291673 COLLATE NOCASE) AND ((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c4) ISNULL)))<=((CAST(rt0.c2 AS BLOB)))) LEFT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (0.03359584427291673 COLLATE NOCASE) AND ((rt0.c4 IN ()))) WHERE (((CAST(t0.c0 AS TEXT))<>((((rt0.c3, rt0.c4, vt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))<>((((rt0.c3, rt0.c4, vt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c4) ISNULL)))<=((CAST(rt0.c2 AS BLOB)))) LEFT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (0.03359584427291673 COLLATE NOCASE) AND ((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c4) ISNULL)))<=((CAST(rt0.c2 AS BLOB)))) LEFT OUTER JOIN t0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (0.03359584427291673 COLLATE NOCASE) AND ((rt0.c4 IN ()))) WHERE (((CAST(t0.c0 AS TEXT))<>((((rt0.c3, rt0.c4, vt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)||(COALESCE(rt0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||(COALESCE(rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)||(COALESCE(rt0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||(COALESCE(rt0.c1, rt0.c3)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)||(COALESCE(rt0.c1, rt0.c3))));
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END IN ()));
SELECT ALL * FROM t0, vt0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))OR(t0.c0)))OR((- (t0.c0)))))OR(DATE(t0.c0, vt0.c1, t0.c0))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))OR(t0.c0)))OR((- (t0.c0)))))OR(DATE(t0.c0, vt0.c1, t0.c0))))AND(t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))OR(t0.c0)))OR((- (t0.c0)))))OR(DATE(t0.c0, vt0.c1, t0.c0))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))OR(t0.c0)))OR((- (t0.c0)))))OR(DATE(t0.c0, vt0.c1, t0.c0))))AND(t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))OR(t0.c0)))OR((- (t0.c0)))))OR(DATE(t0.c0, vt0.c1, t0.c0))))AND(t0.c0)));
SELECT * FROM t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))<<('')));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<<(''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))<<('')));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<<(''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))<<('')));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)AND(rt0.c1)))AND(x'')))<=(((rt0.c2)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c1)))AND(x'')))<=(((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)AND(rt0.c1)))AND(x'')))<=(((rt0.c2)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c1)))AND(x'')))<=(((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)AND(rt0.c1)))AND(x'')))<=(((rt0.c2)||(rt0.c2)))));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) AND (vt0.c1))) ORDER BY ((((((((((((vt0.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND((+ (NULL)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), ((((vt0.c1)LIKE(vt0.c0)))LIKE(((vt0.c1)>=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND((+ (NULL)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), ((((vt0.c1)LIKE(vt0.c0)))LIKE(((vt0.c1)>=(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) AND (vt0.c1))) ORDER BY ((((((((((((vt0.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND((+ (NULL)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), ((((vt0.c1)LIKE(vt0.c0)))LIKE(((vt0.c1)>=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND((+ (NULL)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), ((((vt0.c1)LIKE(vt0.c0)))LIKE(((vt0.c1)>=(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) AND (vt0.c1))) ORDER BY ((((((((((((vt0.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND((+ (NULL)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), ((((vt0.c1)LIKE(vt0.c0)))LIKE(((vt0.c1)>=(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)>>(vt0.c0)))AND((((0Xffffffffcec4c8fb, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(NULL))) ORDER BY (((t0.c0)/(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)>>(vt0.c0)))AND((((0xffffffffcec4c8fb, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(NULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)/(vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)>>(vt0.c0)))AND((((0Xffffffffcec4c8fb, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(NULL))) ORDER BY (((t0.c0)/(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)>>(vt0.c0)))AND((((0xffffffffcec4c8fb, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(NULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)/(vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)>>(vt0.c0)))AND((((0Xffffffffcec4c8fb, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c0, vt0.c0))))))OR(NULL))) ORDER BY (((t0.c0)/(vt0.c0)) IN ()) DESC;
SELECT * FROM t0, rt0, vt0 WHERE (NULL) ORDER BY CASE WHEN UNLIKELY(vt0.c0) THEN ((rt0.c4)<(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN UNLIKELY(vt0.c0) THEN ((rt0.c4)<(rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (NULL) ORDER BY CASE WHEN UNLIKELY(vt0.c0) THEN ((rt0.c4)<(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN UNLIKELY(vt0.c0) THEN ((rt0.c4)<(rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (NULL) ORDER BY CASE WHEN UNLIKELY(vt0.c0) THEN ((rt0.c4)<(rt0.c1)) END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((PRINTF(rt0.c3)) BETWEEN (TYPEOF(rt0.c1)) AND ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(rt0.c3)) BETWEEN (TYPEOF(rt0.c1)) AND ((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((PRINTF(rt0.c3)) BETWEEN (TYPEOF(rt0.c1)) AND ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(rt0.c3)) BETWEEN (TYPEOF(rt0.c1)) AND ((~ (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((PRINTF(rt0.c3)) BETWEEN (TYPEOF(rt0.c1)) AND ((~ (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (0.17844866196927245 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (0.17844866196927245 IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (0.17844866196927245 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (0.17844866196927245 IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (0.17844866196927245 IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ())));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((INSTR(rt0.c2, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((INSTR(rt0.c2, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((INSTR(rt0.c2, rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LENGTH(vt0.c0) AS BLOB)) ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(x'3450' COLLATE RTRIM)))AND('tDz<0/')))OR(((vt0.c0) BETWEEN ('xhj鳠v') AND (vt0.c1)))))AND((NOT (vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(x'3450' COLLATE RTRIM)))AND('tDz<0/')))OR(((vt0.c0) BETWEEN ('xhj鳠v') AND (vt0.c1)))))AND((NOT (vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LENGTH(vt0.c0) AS BLOB)) ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(x'3450' COLLATE RTRIM)))AND('tDz<0/')))OR(((vt0.c0) BETWEEN ('xhj鳠v') AND (vt0.c1)))))AND((NOT (vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LENGTH(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(x'3450' COLLATE RTRIM)))AND('tDz<0/')))OR(((vt0.c0) BETWEEN ('xhj鳠v') AND (vt0.c1)))))AND((NOT (vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LENGTH(vt0.c0) AS BLOB)) ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(x'3450' COLLATE RTRIM)))AND('tDz<0/')))OR(((vt0.c0) BETWEEN ('xhj鳠v') AND (vt0.c1)))))AND((NOT (vt0.c0)))))AND(HEX(DISTINCT vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0)=(vt0.c1))))<=((((((0.4707892803300008)OR(rt0.c4)))AND(vt0.c1))))) WHERE (CASE WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) THEN ((vt0.c1) IS TRUE) WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)) THEN ABS(DISTINCT rt0.c1) WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN (rt0.c2 IN ()) END) ORDER BY rt0.c4 DESC, ((((vt0.c0)*(rt0.c1))) BETWEEN (rt0.c4 COLLATE RTRIM) AND (rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) THEN ((vt0.c1) IS TRUE) WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)) THEN ABS(DISTINCT rt0.c1) WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0)==(vt0.c1))))<=((((((0.4707892803300008)OR(rt0.c4)))AND(vt0.c1))))) ORDER BY rt0.c4 DESC, ((((vt0.c0)*(rt0.c1))) BETWEEN (rt0.c4 COLLATE RTRIM) AND (rt0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0)=(vt0.c1))))<=((((((0.4707892803300008)OR(rt0.c4)))AND(vt0.c1))))) WHERE (CASE WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) THEN ((vt0.c1) IS TRUE) WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)) THEN ABS(DISTINCT rt0.c1) WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN (rt0.c2 IN ()) END) ORDER BY rt0.c4 DESC, ((((vt0.c0)*(rt0.c1))) BETWEEN (rt0.c4 COLLATE RTRIM) AND (rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) THEN ((vt0.c1) IS TRUE) WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)) THEN ABS(DISTINCT rt0.c1) WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0)==(vt0.c1))))<=((((((0.4707892803300008)OR(rt0.c4)))AND(vt0.c1))))) ORDER BY rt0.c4 DESC, ((((vt0.c0)*(rt0.c1))) BETWEEN (rt0.c4 COLLATE RTRIM) AND (rt0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((((rt0.c0)=(vt0.c1))))<=((((((0.4707892803300008)OR(rt0.c4)))AND(vt0.c1))))) WHERE (CASE WHEN ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) THEN ((vt0.c1) IS TRUE) WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)) THEN ABS(DISTINCT rt0.c1) WHEN ((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN (rt0.c2 IN ()) END) ORDER BY rt0.c4 DESC, ((((vt0.c0)*(rt0.c1))) BETWEEN (rt0.c4 COLLATE RTRIM) AND (rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))==(((((((((rt0.c0)AND(-785856714)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))==(((((((((rt0.c0)AND(-785856714)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))==(((((((((rt0.c0)AND(-785856714)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))==(((((((((rt0.c0)AND(-785856714)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))==(((((((((rt0.c0)AND(-785856714)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (-1923250567 COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c1 IN ())) AND (SUBSTR(rt0.c4, rt0.c4))) ASC, ((rt0.c1)<(vt0.c1)) COLLATE RTRIM DESC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1923250567 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c1 IN ())) AND (SUBSTR(rt0.c4, rt0.c4))) ASC, ((rt0.c1)<(vt0.c1)) COLLATE RTRIM DESC, x''  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (-1923250567 COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c1 IN ())) AND (SUBSTR(rt0.c4, rt0.c4))) ASC, ((rt0.c1)<(vt0.c1)) COLLATE RTRIM DESC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1923250567 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c1 IN ())) AND (SUBSTR(rt0.c4, rt0.c4))) ASC, ((rt0.c1)<(vt0.c1)) COLLATE RTRIM DESC, x''  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (-1923250567 COLLATE BINARY) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt0.c1 IN ())) AND (SUBSTR(rt0.c4, rt0.c4))) ASC, ((rt0.c1)<(vt0.c1)) COLLATE RTRIM DESC, x''  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((LIKELY(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)AND(vt0.c1))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)AND(vt0.c1))) AND (x''))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((LIKELY(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)AND(vt0.c1))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)AND(vt0.c1))) AND (x''))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((LIKELY(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)AND(vt0.c1))) AND (x'')));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN DATETIME(rt0.c3, vt0.c1, vt0.c1) THEN t0.c0 ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN DATETIME(rt0.c3, vt0.c1, vt0.c1) THEN t0.c0 ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN DATETIME(rt0.c3, vt0.c1, vt0.c1) THEN t0.c0 ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN DATETIME(rt0.c3, vt0.c1, vt0.c1) THEN t0.c0 ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN DATETIME(rt0.c3, vt0.c1, vt0.c1) THEN t0.c0 ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY ((vt0.c0 COLLATE NOCASE)%(((vt0.c1)<<(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)%(((vt0.c1)<<(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY ((vt0.c0 COLLATE NOCASE)%(((vt0.c1)<<(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)%(((vt0.c1)<<(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)OR((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY ((vt0.c0 COLLATE NOCASE)%(((vt0.c1)<<(vt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c1 COLLATE RTRIM)=(rt0.c3 COLLATE BINARY))) ORDER BY ((((vt0.c1)<(t0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c4)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)=(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM)) ORDER BY ((((vt0.c1)<(t0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c4)) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c1 COLLATE RTRIM)=(rt0.c3 COLLATE BINARY))) ORDER BY ((((vt0.c1)<(t0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c4)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)=(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM)) ORDER BY ((((vt0.c1)<(t0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c4)) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- (t0.c0)) COLLATE BINARY INNER JOIN rt0 ON (((NOT (rt0.c2))) BETWEEN (rt0.c4 COLLATE BINARY) AND (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c1 COLLATE RTRIM)=(rt0.c3 COLLATE BINARY))) ORDER BY ((((vt0.c1)<(t0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c4)) ASC;
SELECT * FROM t0, vt0, rt0 WHERE ((LIKELY(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(vt0.c1) IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((LIKELY(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(vt0.c1) IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((LIKELY(vt0.c1) IN ()));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((((((((rt0.c2)AND(0Xffffffffcd567685)))OR(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c0 END)))OR((((t0.c0))>=((rt0.c1))))) RIGHT OUTER JOIN vt0 ON (+ (rt0.c2)) COLLATE RTRIM WHERE (((-886101143)&(((((((((t0.c0)AND(x'')))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((-886101143)&(((((((((t0.c0)AND(x'')))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c4))))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt0 ON ((((((((rt0.c2)AND(0Xffffffffcd567685)))OR(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c0 END)))OR((((t0.c0))>=((rt0.c1))))) RIGHT OUTER JOIN vt0 ON (+ (rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((((((((rt0.c2)AND(0Xffffffffcd567685)))OR(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c0 END)))OR((((t0.c0))>=((rt0.c1))))) RIGHT OUTER JOIN vt0 ON (+ (rt0.c2)) COLLATE RTRIM WHERE (((-886101143)&(((((((((t0.c0)AND(x'')))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((-886101143)&(((((((((t0.c0)AND(x'')))OR(t0.c0)))OR(vt0.c0)))AND(rt0.c4))))) IS TRUE)  as count FROM t0 NOT INDEXED CROSS JOIN rt0 ON ((((((((rt0.c2)AND(0Xffffffffcd567685)))OR(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN vt0.c0 END)))OR((((t0.c0))>=((rt0.c1))))) RIGHT OUTER JOIN vt0 ON (+ (rt0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)<(rt0.c3)))AND(0.9342104720057944 COLLATE RTRIM)))OR(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)<(rt0.c3)))AND(0.9342104720057944 COLLATE RTRIM)))OR(rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)<(rt0.c3)))AND(0.9342104720057944 COLLATE RTRIM)))OR(rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)<(rt0.c3)))AND(0.9342104720057944 COLLATE RTRIM)))OR(rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((+ (rt0.c3))))) ORDER BY ((((((rt0.c3)<(rt0.c3)))AND(0.9342104720057944 COLLATE RTRIM)))OR(rt0.c1 COLLATE RTRIM));
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT * FROM t0, rt0, vt0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY ((((0.49843918173754576) BETWEEN (rt0.c1) AND (t0.c0)))<(((rt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((0.49843918173754576) BETWEEN (rt0.c1) AND (t0.c0)))<(((rt0.c0) NOTNULL))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY ((((0.49843918173754576) BETWEEN (rt0.c1) AND (t0.c0)))<(((rt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((0.49843918173754576) BETWEEN (rt0.c1) AND (t0.c0)))<(((rt0.c0) NOTNULL))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY ((((0.49843918173754576) BETWEEN (rt0.c1) AND (t0.c0)))<(((rt0.c0) NOTNULL))) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((+ (t0.c0))))) ORDER BY ((((rt0.c0)>>(rt0.c3)))GLOB((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)>>(rt0.c3)))GLOB((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((+ (t0.c0))))) ORDER BY ((((rt0.c0)>>(rt0.c3)))GLOB((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)>>(rt0.c3)))GLOB((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((+ (t0.c0))))) ORDER BY ((((rt0.c0)>>(rt0.c3)))GLOB((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)IS NOT(t0.c0)) AS NUMERIC)) ORDER BY (~ (((((((((t0.c0)OR(t0.c0)))AND(NULL)))AND(-466202750)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)IS NOT(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (~ (((((((((t0.c0)OR(t0.c0)))AND(NULL)))AND(-466202750)))AND(t0.c0))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)IS NOT(t0.c0)) AS NUMERIC)) ORDER BY (~ (((((((((t0.c0)OR(t0.c0)))AND(NULL)))AND(-466202750)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)IS NOT(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (~ (((((((((t0.c0)OR(t0.c0)))AND(NULL)))AND(-466202750)))AND(t0.c0))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)IS NOT(t0.c0)) AS NUMERIC)) ORDER BY (~ (((((((((t0.c0)OR(t0.c0)))AND(NULL)))AND(-466202750)))AND(t0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR('-1554135988')))AND(((rt0.c4)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))OR('-1554135988')))AND(((rt0.c4)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR('-1554135988')))AND(((rt0.c4)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))OR('-1554135988')))AND(((rt0.c4)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR('-1554135988')))AND(((rt0.c4)==(rt0.c2)))));
SELECT ALL * FROM t0 WHERE (MAX(((NULL) ISNULL), ((t0.c0)<(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0)>>(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MAX(((NULL) ISNULL), ((t0.c0)<(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0)>>(t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (MAX(((NULL) ISNULL), ((t0.c0)<(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0)>>(t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MAX(((NULL) ISNULL), ((t0.c0)<(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0)>>(t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (MAX(((NULL) ISNULL), ((t0.c0)<(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0)>>(t0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (CAST(rt0.c0 AS REAL)))) ORDER BY (((NULL)) BETWEEN ((NULL)) AND ((json_extract(rt0.c4, rt0.c0, 0.3754912218295152, rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NULL)) BETWEEN ((NULL)) AND ((json_extract(rt0.c4, rt0.c0, 0.3754912218295152, rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (CAST(rt0.c0 AS REAL)))) ORDER BY (((NULL)) BETWEEN ((NULL)) AND ((json_extract(rt0.c4, rt0.c0, 0.3754912218295152, rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NULL)) BETWEEN ((NULL)) AND ((json_extract(rt0.c4, rt0.c0, 0.3754912218295152, rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (CAST(rt0.c0 AS REAL)))) ORDER BY (((NULL)) BETWEEN ((NULL)) AND ((json_extract(rt0.c4, rt0.c0, 0.3754912218295152, rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0, t0 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT -849971579, CAST(vt0.c0 AS TEXT))) ORDER BY (('0.2752305110166595' IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT -849971579, CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('0.2752305110166595' IN ()) IN ()));
SELECT * FROM vt0, t0 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT -849971579, CAST(vt0.c0 AS TEXT))) ORDER BY (('0.2752305110166595' IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT -849971579, CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('0.2752305110166595' IN ()) IN ()));
SELECT * FROM vt0, t0 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT -849971579, CAST(vt0.c0 AS TEXT))) ORDER BY (('0.2752305110166595' IN ()) IN ());
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM CROSS JOIN t0 ON CASE '!8H7'  WHEN rt0.c1 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) END WHERE (((rt0.c3)&(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)&(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM CROSS JOIN t0 ON CASE '!8H7'  WHEN rt0.c1 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM CROSS JOIN t0 ON CASE '!8H7'  WHEN rt0.c1 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) END WHERE (((rt0.c3)&(CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)&(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM CROSS JOIN t0 ON CASE '!8H7'  WHEN rt0.c1 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM CROSS JOIN t0 ON CASE '!8H7'  WHEN rt0.c1 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) END WHERE (((rt0.c3)&(CAST(rt0.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((~ (rt0.c0)))AND(((rt0.c0)LIKE(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((vt0.c0 COLLATE BINARY)AND((('1923953854') NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c0)))AND(((rt0.c0)LIKE(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY)AND((('1923953854') NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((~ (rt0.c0)))AND(((rt0.c0)LIKE(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((vt0.c0 COLLATE BINARY)AND((('1923953854') NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt0.c0)))AND(((rt0.c0)LIKE(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((vt0.c0 COLLATE BINARY)AND((('1923953854') NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((~ (rt0.c0)))AND(((rt0.c0)LIKE(vt0.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) ORDER BY ((vt0.c0 COLLATE BINARY)AND((('1923953854') NOT BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN '-241128038' END THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN '-241128038' END THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN '-241128038' END THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN '-241128038' END THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))  WHEN CASE WHEN vt0.c0 THEN '-241128038' END THEN CAST(vt0.c0 AS TEXT) END);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((('5[}#fm.') NOT BETWEEN (((t0.c0)<=(rt0.c3))) AND (((t0.c0)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('5[}#fm.') NOT BETWEEN (((t0.c0)<=(rt0.c3))) AND (((t0.c0)-(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((('5[}#fm.') NOT BETWEEN (((t0.c0)<=(rt0.c3))) AND (((t0.c0)-(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('5[}#fm.') NOT BETWEEN (((t0.c0)<=(rt0.c3))) AND (((t0.c0)-(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((('5[}#fm.') NOT BETWEEN (((t0.c0)<=(rt0.c3))) AND (((t0.c0)-(rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CAST('0/~v虹' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('0/~v虹' AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST('0/~v虹' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('0/~v虹' AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST('0/~v虹' AS BLOB));
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c3)OR(rt0.c0)))AND('0.2861778788991043')) AS REAL)) ORDER BY INSTR((rt0.c1 IN (vt0.c1, vt0.c0)), SUBSTR(rt0.c1, 0.27211030479088694));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)OR(rt0.c0)))AND('0.2861778788991043')) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY INSTR((rt0.c1 IN (vt0.c1, vt0.c0)), SUBSTR(rt0.c1, 0.27211030479088694)));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c3)OR(rt0.c0)))AND('0.2861778788991043')) AS REAL)) ORDER BY INSTR((rt0.c1 IN (vt0.c1, vt0.c0)), SUBSTR(rt0.c1, 0.27211030479088694));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c3)OR(rt0.c0)))AND('0.2861778788991043')) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY INSTR((rt0.c1 IN (vt0.c1, vt0.c0)), SUBSTR(rt0.c1, 0.27211030479088694)));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c3)OR(rt0.c0)))AND('0.2861778788991043')) AS REAL)) ORDER BY INSTR((rt0.c1 IN (vt0.c1, vt0.c0)), SUBSTR(rt0.c1, 0.27211030479088694));
SELECT ALL * FROM vt0, t0 WHERE (((((NULLIF(DISTINCT t0.c0, t0.c0))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(DISTINCT t0.c0, t0.c0))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((NULLIF(DISTINCT t0.c0, t0.c0))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(DISTINCT t0.c0, t0.c0))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((NULLIF(DISTINCT t0.c0, t0.c0))AND(vt0.c1 COLLATE BINARY)))AND(((vt0.c0)<<(vt0.c0)))));
SELECT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c1)<=(vt0.c0)))))AND((- (-4.9375637E8))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0) ISNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c1)<=(vt0.c0)))))AND((- (-4.9375637E8))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0) ISNULL) END DESC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c1)<=(vt0.c0)))))AND((- (-4.9375637E8))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0) ISNULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c1)<=(vt0.c0)))))AND((- (-4.9375637E8))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0) ISNULL) END DESC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE (((((((vt0.c1)IS(vt0.c1)))OR(((vt0.c1)<=(vt0.c0)))))AND((- (-4.9375637E8))))) ORDER BY CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0) ISNULL) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(DISTINCT rt0.c4) COLLATE BINARY) ORDER BY '-99338305' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY '-99338305' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(DISTINCT rt0.c4) COLLATE BINARY) ORDER BY '-99338305' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c4) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY '-99338305' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(DISTINCT rt0.c4) COLLATE BINARY) ORDER BY '-99338305' ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (COALESCE(DISTINCT (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY ((((vt0.c0) ISNULL))*(json_object(vt0.c0, vt0.c1))) DESC  NULLS FIRST, CAST(vt0.c1 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) ISNULL))*(json_object(vt0.c0, vt0.c1))) DESC  NULLS FIRST, CAST(vt0.c1 AS BLOB));
SELECT COUNT(*) FROM vt0, t0 WHERE (COALESCE(DISTINCT (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY ((((vt0.c0) ISNULL))*(json_object(vt0.c0, vt0.c1))) DESC  NULLS FIRST, CAST(vt0.c1 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) ISNULL))*(json_object(vt0.c0, vt0.c1))) DESC  NULLS FIRST, CAST(vt0.c1 AS BLOB));
SELECT COUNT(*) FROM vt0, t0 WHERE (COALESCE(DISTINCT (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) ORDER BY ((((vt0.c0) ISNULL))*(json_object(vt0.c0, vt0.c1))) DESC  NULLS FIRST, CAST(vt0.c1 AS BLOB);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((x'')OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)))OR(rt0.c0)))OR(rt0.c1)))OR(((vt0.c0) IS FALSE)))) ORDER BY ((((CAST('-1210512062' AS INTEGER))OR(((rt0.c4) ISNULL))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)))OR(rt0.c0)))OR(rt0.c1)))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((CAST('-1210512062' AS INTEGER))OR(((rt0.c4) ISNULL))))AND(NULL)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((x'')OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)))OR(rt0.c0)))OR(rt0.c1)))OR(((vt0.c0) IS FALSE)))) ORDER BY ((((CAST('-1210512062' AS INTEGER))OR(((rt0.c4) ISNULL))))AND(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)))OR(rt0.c0)))OR(rt0.c1)))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((CAST('-1210512062' AS INTEGER))OR(((rt0.c4) ISNULL))))AND(NULL)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((((((x'')OR(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)))OR(rt0.c0)))OR(rt0.c1)))OR(((vt0.c0) IS FALSE)))) ORDER BY ((((CAST('-1210512062' AS INTEGER))OR(((rt0.c4) ISNULL))))AND(NULL)) ASC;
SELECT ALL * FROM t0 WHERE (ABS(t0.c0 COLLATE BINARY)) ORDER BY ',*<9-kD*' DESC, ((COALESCE(DISTINCT t0.c0, t0.c0)) BETWEEN (NULL) AND (SUBSTR(t0.c0, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY ',*<9-kD*' DESC, ((COALESCE(DISTINCT t0.c0, t0.c0)) BETWEEN (NULL) AND (SUBSTR(t0.c0, t0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (ABS(t0.c0 COLLATE BINARY)) ORDER BY ',*<9-kD*' DESC, ((COALESCE(DISTINCT t0.c0, t0.c0)) BETWEEN (NULL) AND (SUBSTR(t0.c0, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY ',*<9-kD*' DESC, ((COALESCE(DISTINCT t0.c0, t0.c0)) BETWEEN (NULL) AND (SUBSTR(t0.c0, t0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (ABS(t0.c0 COLLATE BINARY)) ORDER BY ',*<9-kD*' DESC, ((COALESCE(DISTINCT t0.c0, t0.c0)) BETWEEN (NULL) AND (SUBSTR(t0.c0, t0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((+ (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (t0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE x''  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)<(vt0.c1)) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)<(vt0.c1)) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE x''  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)<(vt0.c1)) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)<(vt0.c1)) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CASE x''  WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)<(vt0.c1)) ELSE CASE vt0.c1  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 END END);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY ((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c3)))GLOB((vt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))GLOB((vt0.c0 IN (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c3)))GLOB((vt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))GLOB((vt0.c0 IN (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((+ (rt0.c3)))GLOB((vt0.c0 IN (x'')))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(LIKELIHOOD(DISTINCT x'', 0.022181700911673707) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT x'', 0.022181700911673707) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(LIKELIHOOD(DISTINCT x'', 0.022181700911673707) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT x'', 0.022181700911673707) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(LIKELIHOOD(DISTINCT x'', 0.022181700911673707) AS NUMERIC));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END) NOT BETWEEN (0.11522156504969816) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END) NOT BETWEEN (0.11522156504969816) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END) NOT BETWEEN (0.11522156504969816) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END) NOT BETWEEN (0.11522156504969816) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c0 END) NOT BETWEEN (0.11522156504969816) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) ISNULL) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (NULL) AND ((('-825964293')-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (NULL) AND ((('-825964293')-(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (NULL) AND ((('-825964293')-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (NULL) AND ((('-825964293')-(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))) NOT BETWEEN (NULL) AND ((('-825964293')-(rt0.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((((x'' IN ()))OR(vt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(vt0.c0)))OR(-712916780)))OR(rt0.c4)))AND(rt0.c2)))) WHERE (((x'') IS FALSE)) ORDER BY '-942638762'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((x'' IN ()))OR(vt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(vt0.c0)))OR(-712916780)))OR(rt0.c4)))AND(rt0.c2)))) ORDER BY '-942638762'  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((((x'' IN ()))OR(vt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(vt0.c0)))OR(-712916780)))OR(rt0.c4)))AND(rt0.c2)))) WHERE (((x'') IS FALSE)) ORDER BY '-942638762'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((x'' IN ()))OR(vt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(vt0.c0)))OR(-712916780)))OR(rt0.c4)))AND(rt0.c2)))) ORDER BY '-942638762'  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((((x'' IN ()))OR(vt0.c1 COLLATE NOCASE)))OR(((((((((rt0.c4)AND(vt0.c0)))OR(-712916780)))OR(rt0.c4)))AND(rt0.c2)))) WHERE (((x'') IS FALSE)) ORDER BY '-942638762'  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((~ (rt0.c4)), (t0.c0 IN (rt0.c2)), CAST(rt0.c2 AS NUMERIC), NULL, (+ (rt0.c1)))) AND ((CASE WHEN t0.c0 THEN rt0.c0 END, (NULL IN ()), (rt0.c3 IN (rt0.c2)), ((rt0.c3)IS(rt0.c3)), CAST(rt0.c2 AS BLOB))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((~ (rt0.c4)), (t0.c0 IN (rt0.c2)), CAST(rt0.c2 AS NUMERIC), NULL, (+ (rt0.c1)))) AND ((CASE WHEN t0.c0 THEN rt0.c0 END, (NULL IN ()), (rt0.c3 IN (rt0.c2)), ((rt0.c3)IS(rt0.c3)), CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((~ (rt0.c4)), (t0.c0 IN (rt0.c2)), CAST(rt0.c2 AS NUMERIC), NULL, (+ (rt0.c1)))) AND ((CASE WHEN t0.c0 THEN rt0.c0 END, (NULL IN ()), (rt0.c3 IN (rt0.c2)), ((rt0.c3)IS(rt0.c3)), CAST(rt0.c2 AS BLOB))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((~ (rt0.c4)), (t0.c0 IN (rt0.c2)), CAST(rt0.c2 AS NUMERIC), NULL, (+ (rt0.c1)))) AND ((CASE WHEN t0.c0 THEN rt0.c0 END, (NULL IN ()), (rt0.c3 IN (rt0.c2)), ((rt0.c3)IS(rt0.c3)), CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((~ (rt0.c4)), (t0.c0 IN (rt0.c2)), CAST(rt0.c2 AS NUMERIC), NULL, (+ (rt0.c1)))) AND ((CASE WHEN t0.c0 THEN rt0.c0 END, (NULL IN ()), (rt0.c3 IN (rt0.c2)), ((rt0.c3)IS(rt0.c3)), CAST(rt0.c2 AS BLOB))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ());
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c4) ORDER BY (((((((((((((t0.c0 IN ()))AND((((x'02c9')) NOT BETWEEN ((rt0.c4)) AND ((x'7ef4'))))))AND(((((rt0.c0)OR(rt0.c2)))AND(0.7157271273471197)))))OR((rt0.c3 IN (x'', rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN 607937462 THEN '-733592486' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((0Xffffffffc21fd413) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((x'') BETWEEN ('-1357292288') AND (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((((((((t0.c0 IN ()))AND((((x'02c9')) NOT BETWEEN ((rt0.c4)) AND ((x'7ef4'))))))AND(((((rt0.c0)OR(rt0.c2)))AND(0.7157271273471197)))))OR((rt0.c3 IN (x'', rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN 607937462 THEN '-733592486' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((0Xffffffffc21fd413) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((x'') BETWEEN ('-1357292288') AND (rt0.c4)))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c4) ORDER BY (((((((((((((t0.c0 IN ()))AND((((x'02c9')) NOT BETWEEN ((rt0.c4)) AND ((x'7ef4'))))))AND(((((rt0.c0)OR(rt0.c2)))AND(0.7157271273471197)))))OR((rt0.c3 IN (x'', rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN 607937462 THEN '-733592486' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((0Xffffffffc21fd413) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((x'') BETWEEN ('-1357292288') AND (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((((((((t0.c0 IN ()))AND((((x'02c9')) NOT BETWEEN ((rt0.c4)) AND ((x'7ef4'))))))AND(((((rt0.c0)OR(rt0.c2)))AND(0.7157271273471197)))))OR((rt0.c3 IN (x'', rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN 607937462 THEN '-733592486' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((0Xffffffffc21fd413) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((x'') BETWEEN ('-1357292288') AND (rt0.c4)))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c4) ORDER BY (((((((((((((t0.c0 IN ()))AND((((x'02c9')) NOT BETWEEN ((rt0.c4)) AND ((x'7ef4'))))))AND(((((rt0.c0)OR(rt0.c2)))AND(0.7157271273471197)))))OR((rt0.c3 IN (x'', rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c3 THEN t0.c0 WHEN 607937462 THEN '-733592486' WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((0Xffffffffc21fd413) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((x'') BETWEEN ('-1357292288') AND (rt0.c4)))) ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((RTRIM(vt0.c0))>>(CAST(-1653078702 AS INTEGER)))) ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))) DESC  NULLS LAST, CAST(((vt0.c1)*(vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((RTRIM(vt0.c0))>>(CAST(-1653078702 AS INTEGER)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))) DESC  NULLS LAST, CAST(((vt0.c1)*(vt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((RTRIM(vt0.c0))>>(CAST(-1653078702 AS INTEGER)))) ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))) DESC  NULLS LAST, CAST(((vt0.c1)*(vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((RTRIM(vt0.c0))>>(CAST(-1653078702 AS INTEGER)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))) DESC  NULLS LAST, CAST(((vt0.c1)*(vt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (((RTRIM(vt0.c0))>>(CAST(-1653078702 AS INTEGER)))) ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))AND(t0.c0)))) DESC  NULLS LAST, CAST(((vt0.c1)*(vt0.c1)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (0xffffffff9ba6fb88)))%(((t0.c0) ISNULL)))) ORDER BY (((((((('')AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (0xffffffff9ba6fb88)))%(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((('')AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (0xffffffff9ba6fb88)))%(((t0.c0) ISNULL)))) ORDER BY (((((((('')AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (0xffffffff9ba6fb88)))%(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((('')AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (0xffffffff9ba6fb88)))%(((t0.c0) ISNULL)))) ORDER BY (((((((('')AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)OR(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT) WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN ('-2049609934') AND (vt0.c0))) AND ((t0.c0 IN (t0.c0, vt0.c0, NULL))))) ORDER BY CASE (+ (x'15bb'))  WHEN (((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((t0.c0, vt0.c1, t0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN ((x'd845') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c0) NOTNULL) WHEN (~ (t0.c0)) THEN ((x'b39c')>=(t0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN NULL WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN ((((((((vt0.c1)AND(t0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (((x''))>((t0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN ('-2049609934') AND (vt0.c0))) AND ((t0.c0 IN (t0.c0, vt0.c0, NULL))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT) ORDER BY CASE (+ (x'15bb'))  WHEN (((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((t0.c0, vt0.c1, t0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN ((x'd845') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c0) NOTNULL) WHEN (~ (t0.c0)) THEN ((x'b39c')>=(t0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN NULL WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN ((((((((vt0.c1)AND(t0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (((x''))>((t0.c0))) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT) WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN ('-2049609934') AND (vt0.c0))) AND ((t0.c0 IN (t0.c0, vt0.c0, NULL))))) ORDER BY CASE (+ (x'15bb'))  WHEN (((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((t0.c0, vt0.c1, t0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN ((x'd845') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c0) NOTNULL) WHEN (~ (t0.c0)) THEN ((x'b39c')>=(t0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN NULL WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN ((((((((vt0.c1)AND(t0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (((x''))>((t0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN ('-2049609934') AND (vt0.c0))) AND ((t0.c0 IN (t0.c0, vt0.c0, NULL))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON CAST((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT) ORDER BY CASE (+ (x'15bb'))  WHEN (((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((t0.c0, vt0.c1, t0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN ((x'd845') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c0) NOTNULL) WHEN (~ (t0.c0)) THEN ((x'b39c')>=(t0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN NULL WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN ((((((((vt0.c1)AND(t0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (((x''))>((t0.c0))) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON CAST((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT) WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (((vt0.c1) BETWEEN ('-2049609934') AND (vt0.c0))) AND ((t0.c0 IN (t0.c0, vt0.c0, NULL))))) ORDER BY CASE (+ (x'15bb'))  WHEN (((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((t0.c0, vt0.c1, t0.c0))) THEN vt0.c1 COLLATE NOCASE WHEN ((x'd845') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c0) NOTNULL) WHEN (~ (t0.c0)) THEN ((x'b39c')>=(t0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, CASE WHEN TYPEOF(vt0.c0) THEN NULL WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOTNULL) THEN ((((((((vt0.c1)AND(t0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) ELSE (((x''))>((t0.c0))) END;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((('*X%d _u	')AND(rt0.c0)))AND(t0.c0)))*(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((('*X%d _u	')AND(rt0.c0)))AND(t0.c0)))*(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((('*X%d _u	')AND(rt0.c0)))AND(t0.c0)))*(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((('*X%d _u	')AND(rt0.c0)))AND(t0.c0)))*(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((('*X%d _u	')AND(rt0.c0)))AND(t0.c0)))*(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0, rt0 WHERE ((- (((vt0.c1)==(vt0.c1))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (((vt0.c1)==(vt0.c1))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)==(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (((vt0.c1)==(vt0.c1))))) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<>(vt0.c0))) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)!=(vt0.c0))) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<>(vt0.c0))) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)!=(vt0.c0))) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<>(vt0.c0))) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((((((((t0.c0 IN ()))AND((vt0.c1 IN ()))))AND((((vt0.c1)) BETWEEN ((0.2492213534792984)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(LENGTH(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM ORDER BY (((((((((t0.c0 IN ()))AND((vt0.c1 IN ()))))AND((((vt0.c1)) BETWEEN ((0.2492213534792984)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(LENGTH(t0.c0))) ASC);
SELECT ALL * FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((((((((t0.c0 IN ()))AND((vt0.c1 IN ()))))AND((((vt0.c1)) BETWEEN ((0.2492213534792984)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(LENGTH(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM ORDER BY (((((((((t0.c0 IN ()))AND((vt0.c1 IN ()))))AND((((vt0.c1)) BETWEEN ((0.2492213534792984)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(LENGTH(t0.c0))) ASC);
SELECT ALL * FROM t0 NOT INDEXED FULL OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c0)))OR(t0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((((((((t0.c0 IN ()))AND((vt0.c1 IN ()))))AND((((vt0.c1)) BETWEEN ((0.2492213534792984)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(LENGTH(t0.c0))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ('0.5090000367543334') ORDER BY (HEX(DISTINCT rt0.c4) IN (((vt0.c0)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.5090000367543334') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (HEX(DISTINCT rt0.c4) IN (((vt0.c0)LIKE(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ('0.5090000367543334') ORDER BY (HEX(DISTINCT rt0.c4) IN (((vt0.c0)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.5090000367543334') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (HEX(DISTINCT rt0.c4) IN (((vt0.c0)LIKE(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ('0.5090000367543334') ORDER BY (HEX(DISTINCT rt0.c4) IN (((vt0.c0)LIKE(rt0.c0)))) ASC;
SELECT * FROM t0, rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c1) AND (0x5081a498))) IS FALSE)) ORDER BY -40371575;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (rt0.c1) AND (0X5081a498))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY -40371575);
SELECT * FROM t0, rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c1) AND (0x5081a498))) IS FALSE)) ORDER BY -40371575;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) BETWEEN (rt0.c1) AND (0X5081a498))) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY -40371575);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))AND(x''))) ORDER BY 0.34242559167672026 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))AND(x''))) IS TRUE)  as count FROM vt0 ORDER BY 0.34242559167672026 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))AND(x''))) ORDER BY 0.34242559167672026 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))AND(x''))) IS TRUE)  as count FROM vt0 ORDER BY 0.34242559167672026 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))))AND(x''))) ORDER BY 0.34242559167672026 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)>(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>(rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)>(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)>(rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)>(rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE ('᷋MH]') ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))=((((((t0.c0)AND(rt0.c3)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (('᷋MH]') IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))==((((((t0.c0)AND(rt0.c3)))AND(rt0.c1))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ('᷋MH]') ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))=((((((t0.c0)AND(rt0.c3)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (('᷋MH]') IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))==((((((t0.c0)AND(rt0.c3)))AND(rt0.c1))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ('᷋MH]') ORDER BY ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))=((((((t0.c0)AND(rt0.c3)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND ((- (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND ((- (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c3) AND ((- (vt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1))<((vt0.c1))) IN ()) WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((TRIM(t0.c0), vt0.c1 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((('|ncC-H퐓' IN ()), vt0.c0, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST, (((((vt0.c1)AND(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((TRIM(t0.c0), vt0.c1 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((('|ncC-H퐓' IN ()), vt0.c0, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1))<((vt0.c1))) IN ()) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST, (((((vt0.c1)AND(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1))<((vt0.c1))) IN ()) WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((TRIM(t0.c0), vt0.c1 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((('|ncC-H퐓' IN ()), vt0.c0, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST, (((((vt0.c1)AND(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((TRIM(t0.c0), vt0.c1 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((('|ncC-H퐓' IN ()), vt0.c0, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1))<((vt0.c1))) IN ()) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST, (((((vt0.c1)AND(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1))<((vt0.c1))) IN ()) WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((TRIM(t0.c0), vt0.c1 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) AND ((('|ncC-H퐓' IN ()), vt0.c0, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)))) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER)  NULLS FIRST, (((((vt0.c1)AND(t0.c0)))AND(t0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))%(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))%(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))%(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))%(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))%(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, (NULL IN ()), 0.1727585661040344))>=((((rt0.c1) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), ((((((((rt0.c4)AND(rt0.c3)))AND(NULL)))AND(rt0.c2)))AND('')))))) ORDER BY x'' COLLATE RTRIM, ((CAST(vt0.c0 AS INTEGER)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, (NULL IN ()), 0.1727585661040344))>=((((rt0.c1) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), ((((((((rt0.c4)AND(rt0.c3)))AND(NULL)))AND(rt0.c2)))AND('')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' COLLATE RTRIM, ((CAST(vt0.c0 AS INTEGER)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, (NULL IN ()), 0.1727585661040344))>=((((rt0.c1) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), ((((((((rt0.c4)AND(rt0.c3)))AND(NULL)))AND(rt0.c2)))AND('')))))) ORDER BY x'' COLLATE RTRIM, ((CAST(vt0.c0 AS INTEGER)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, (NULL IN ()), 0.1727585661040344))>=((((rt0.c1) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), ((((((((rt0.c4)AND(rt0.c3)))AND(NULL)))AND(rt0.c2)))AND('')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' COLLATE RTRIM, ((CAST(vt0.c0 AS INTEGER)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1, (NULL IN ()), 0.1727585661040344))>=((((rt0.c1) NOT NULL), ((((vt0.c0)AND(vt0.c0)))OR(rt0.c3)), ((((((((rt0.c4)AND(rt0.c3)))AND(NULL)))AND(rt0.c2)))AND('')))))) ORDER BY x'' COLLATE RTRIM, ((CAST(vt0.c0 AS INTEGER)) IS FALSE) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((rt0.c1 IN ()))OR((rt0.c2 IN (vt0.c0, vt0.c0)))))AND(((rt0.c4) NOT NULL))))OR((vt0.c1 IN ()))))OR(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1 IN ()))OR((rt0.c2 IN (vt0.c0, vt0.c0)))))AND(((rt0.c4) NOT NULL))))OR((vt0.c1 IN ()))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((rt0.c1 IN ()))OR((rt0.c2 IN (vt0.c0, vt0.c0)))))AND(((rt0.c4) NOT NULL))))OR((vt0.c1 IN ()))))OR(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c1 IN ()))OR((rt0.c2 IN (vt0.c0, vt0.c0)))))AND(((rt0.c4) NOT NULL))))OR((vt0.c1 IN ()))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((rt0.c1 IN ()))OR((rt0.c2 IN (vt0.c0, vt0.c0)))))AND(((rt0.c4) NOT NULL))))OR((vt0.c1 IN ()))))OR(((vt0.c1) IS FALSE))));
SELECT * FROM t0 WHERE (((LTRIM(t0.c0))-(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(t0.c0))-(NULL COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((LTRIM(t0.c0))-(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(t0.c0))-(NULL COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((LTRIM(t0.c0))-(NULL COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))IS((NULL IN ()))) FULL OUTER JOIN rt0 ON CASE WHEN ((('1646445522')) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (((x'87ba', rt0.c2, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, vt0.c1, vt0.c0))) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN vt0.c1 WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))OR(rt0.c3)))AND(rt0.c4)) THEN vt0.c1 ELSE CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END END WHERE (CAST(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))IS((NULL IN ()))) FULL OUTER JOIN rt0 ON CASE WHEN ((('1646445522')) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (((x'87ba', rt0.c2, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, vt0.c1, vt0.c0))) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN vt0.c1 WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))OR(rt0.c3)))AND(rt0.c4)) THEN vt0.c1 ELSE CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))IS((NULL IN ()))) FULL OUTER JOIN rt0 ON CASE WHEN ((('1646445522')) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (((x'87ba', rt0.c2, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, vt0.c1, vt0.c0))) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN vt0.c1 WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))OR(rt0.c3)))AND(rt0.c4)) THEN vt0.c1 ELSE CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END END WHERE (CAST(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))IS((NULL IN ()))) FULL OUTER JOIN rt0 ON CASE WHEN ((('1646445522')) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (((x'87ba', rt0.c2, t0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, vt0.c1, vt0.c0))) WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END THEN vt0.c1 WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))OR(rt0.c3)))AND(rt0.c4)) THEN vt0.c1 ELSE CASE t0.c0  WHEN rt0.c2 THEN rt0.c2 END END);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (CAST(((-1.7976931348623157E308) NOT BETWEEN (vt0.c1) AND (0.1802104078176774)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((-1.7976931348623157E308) NOT BETWEEN (vt0.c1) AND (0.1802104078176774)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (CAST(((-1.7976931348623157E308) NOT BETWEEN (vt0.c1) AND (0.1802104078176774)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((-1.7976931348623157E308) NOT BETWEEN (vt0.c1) AND (0.1802104078176774)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (CAST(((-1.7976931348623157E308) NOT BETWEEN (vt0.c1) AND (0.1802104078176774)) AS INTEGER));
SELECT ALL * FROM t0, rt0, vt0 WHERE (HEX(rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (HEX(rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (HEX(rt0.c1) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CHANGES() THEN vt0.c1 ELSE (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY ((((NOT (vt0.c0))))<(((NOT (0.9098840201549764))))) ASC  NULLS LAST, (CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (+ (NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CHANGES() THEN vt0.c1 ELSE (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))<(((NOT (0.9098840201549764))))) ASC  NULLS LAST, (CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (+ (NULL)) END ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CHANGES() THEN vt0.c1 ELSE (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY ((((NOT (vt0.c0))))<(((NOT (0.9098840201549764))))) ASC  NULLS LAST, (CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (+ (NULL)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CHANGES() THEN vt0.c1 ELSE (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))<(((NOT (0.9098840201549764))))) ASC  NULLS LAST, (CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (+ (NULL)) END ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CHANGES() THEN vt0.c1 ELSE (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END) ORDER BY ((((NOT (vt0.c0))))<(((NOT (0.9098840201549764))))) ASC  NULLS LAST, (CAST(vt0.c0 AS REAL) IN (vt0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN (NOT (vt0.c0)) THEN (+ (NULL)) END ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((('1792655676')*(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY (((rt0.c4)) BETWEEN ((LOWER(DISTINCT rt0.c2))) AND (((~ (t0.c0))))), (((rt0.c2)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((((rt0.c2)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('1792655676')*(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c4)) BETWEEN ((LOWER(DISTINCT rt0.c2))) AND (((~ (t0.c0))))), (((rt0.c2)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((((rt0.c2)==(t0.c0))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((('1792655676')*(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY (((rt0.c4)) BETWEEN ((LOWER(DISTINCT rt0.c2))) AND (((~ (t0.c0))))), (((rt0.c2)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((((rt0.c2)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('1792655676')*(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c4)) BETWEEN ((LOWER(DISTINCT rt0.c2))) AND (((~ (t0.c0))))), (((rt0.c2)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((((rt0.c2)==(t0.c0))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((('1792655676')*(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) ORDER BY (((rt0.c4)) BETWEEN ((LOWER(DISTINCT rt0.c2))) AND (((~ (t0.c0))))), (((rt0.c2)) BETWEEN ((((rt0.c3) IS FALSE))) AND ((((rt0.c2)==(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT CAST(t0.c0 AS REAL), 0.8299663957628254));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(t0.c0 AS REAL), 0.8299663957628254)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT CAST(t0.c0 AS REAL), 0.8299663957628254));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(t0.c0 AS REAL), 0.8299663957628254)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELIHOOD(DISTINCT CAST(t0.c0 AS REAL), 0.8299663957628254));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (NULL);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END AS BLOB)) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END AS BLOB)) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END AS BLOB)) ORDER BY t0.c0 DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((t0.c0)<=(t0.c0)) END) ORDER BY (((t0.c0 IN ()))+(((t0.c0)GLOB('y5U'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((t0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))+(((t0.c0)GLOB('y5U'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((t0.c0)<=(t0.c0)) END) ORDER BY (((t0.c0 IN ()))+(((t0.c0)GLOB('y5U'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((t0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))+(((t0.c0)GLOB('y5U'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0))<=((t0.c0))) THEN ((t0.c0)<=(t0.c0)) END) ORDER BY (((t0.c0 IN ()))+(((t0.c0)GLOB('y5U'))))  NULLS FIRST;
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.24306404613806953 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN 0.0701663748925111 END) AND (CASE WHEN vt0.c0 THEN rt0.c2 END)) WHERE (CAST(CAST(rt0.c1 AS REAL) AS TEXT)) ORDER BY COALESCE(DISTINCT NULL, NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.24306404613806953 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN 0.0701663748925111 END) AND (CASE WHEN vt0.c0 THEN rt0.c2 END)) ORDER BY COALESCE(DISTINCT NULL, NULL) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.24306404613806953 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN 0.0701663748925111 END) AND (CASE WHEN vt0.c0 THEN rt0.c2 END)) WHERE (CAST(CAST(rt0.c1 AS REAL) AS TEXT)) ORDER BY COALESCE(DISTINCT NULL, NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.24306404613806953 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN 0.0701663748925111 END) AND (CASE WHEN vt0.c0 THEN rt0.c2 END)) ORDER BY COALESCE(DISTINCT NULL, NULL) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.24306404613806953 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN 0.0701663748925111 END) AND (CASE WHEN vt0.c0 THEN rt0.c2 END)) WHERE (CAST(CAST(rt0.c1 AS REAL) AS TEXT)) ORDER BY COALESCE(DISTINCT NULL, NULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(HEX(t0.c0))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) ORDER BY 0.2540185211174003 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))OR(HEX(t0.c0))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.2540185211174003 DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(HEX(t0.c0))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) ORDER BY 0.2540185211174003 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))OR(HEX(t0.c0))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.2540185211174003 DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(HEX(t0.c0))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) ORDER BY 0.2540185211174003 DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((- (vt0.c1))))) ORDER BY (x'' IN (((vt0.c0) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (x'' IN (((vt0.c0) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((- (vt0.c1))))) ORDER BY (x'' IN (((vt0.c0) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (x'' IN (((vt0.c0) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- ((- (vt0.c1))))) ORDER BY (x'' IN (((vt0.c0) ISNULL), CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST;
